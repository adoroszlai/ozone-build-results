<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.9.21 on linux)" generated="20250108 16:01:13.514" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-haproxy-s3g">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:51:36.722" endtime="20250108 15:51:36.722"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:36.725" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:36.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:36.728" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:51:36.723" endtime="20250108 15:51:36.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:36.729" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:51:36.729" endtime="20250108 15:51:36.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:36.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:36.729" endtime="20250108 15:51:36.730"/>
</kw>
<status status="PASS" starttime="20250108 15:51:36.722" endtime="20250108 15:51:36.730"/>
</kw>
<msg timestamp="20250108 15:51:36.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:36.722" endtime="20250108 15:51:36.730"/>
</kw>
<msg timestamp="20250108 15:51:36.730" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:51:36.722" endtime="20250108 15:51:36.730"/>
</kw>
<msg timestamp="20250108 15:51:36.730" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:51:36.722" endtime="20250108 15:51:36.730"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:51:36.730" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:51:36.730" endtime="20250108 15:51:36.730"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:36.733" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:36.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:36.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:51:36.732" endtime="20250108 15:51:36.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:36.765" level="INFO"/>
<status status="PASS" starttime="20250108 15:51:36.764" endtime="20250108 15:51:36.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:36.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:36.765" endtime="20250108 15:51:36.765"/>
</kw>
<status status="PASS" starttime="20250108 15:51:36.731" endtime="20250108 15:51:36.765"/>
</kw>
<msg timestamp="20250108 15:51:36.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:36.731" endtime="20250108 15:51:36.765"/>
</kw>
<status status="PASS" starttime="20250108 15:51:36.731" endtime="20250108 15:51:36.765"/>
</kw>
<status status="PASS" starttime="20250108 15:51:36.731" endtime="20250108 15:51:36.765"/>
</kw>
<status status="PASS" starttime="20250108 15:51:36.721" endtime="20250108 15:51:36.766"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250108 15:51:36.720" endtime="20250108 15:51:36.766"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20250108 15:51:36.686" endtime="20250108 15:51:36.766"/>
</suite>
<suite id="s1-s2" name="Security" source="/opt/hadoop/smoketest/security">
<suite id="s1-s2-s1" name="Admin-Cert" source="/opt/hadoop/smoketest/security/admin-cert.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:51:37.426" endtime="20250108 15:51:37.427"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:37.430" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:37.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:37.433" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:51:37.428" endtime="20250108 15:51:37.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:37.434" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:51:37.433" endtime="20250108 15:51:37.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:37.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:37.434" endtime="20250108 15:51:37.434"/>
</kw>
<status status="PASS" starttime="20250108 15:51:37.427" endtime="20250108 15:51:37.434"/>
</kw>
<msg timestamp="20250108 15:51:37.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:37.427" endtime="20250108 15:51:37.434"/>
</kw>
<msg timestamp="20250108 15:51:37.435" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:51:37.427" endtime="20250108 15:51:37.435"/>
</kw>
<msg timestamp="20250108 15:51:37.435" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:51:37.427" endtime="20250108 15:51:37.435"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:51:37.435" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:51:37.435" endtime="20250108 15:51:37.435"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:37.438" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:37.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:37.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:51:37.436" endtime="20250108 15:51:37.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:37.485" level="INFO"/>
<status status="PASS" starttime="20250108 15:51:37.485" endtime="20250108 15:51:37.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:37.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:37.485" endtime="20250108 15:51:37.485"/>
</kw>
<status status="PASS" starttime="20250108 15:51:37.436" endtime="20250108 15:51:37.486"/>
</kw>
<msg timestamp="20250108 15:51:37.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:37.436" endtime="20250108 15:51:37.486"/>
</kw>
<status status="PASS" starttime="20250108 15:51:37.436" endtime="20250108 15:51:37.486"/>
</kw>
<status status="PASS" starttime="20250108 15:51:37.435" endtime="20250108 15:51:37.486"/>
</kw>
<status status="PASS" starttime="20250108 15:51:37.426" endtime="20250108 15:51:37.486"/>
</kw>
<status status="PASS" starttime="20250108 15:51:37.426" endtime="20250108 15:51:37.486"/>
</kw>
<status status="PASS" starttime="20250108 15:51:37.425" endtime="20250108 15:51:37.486"/>
</kw>
<test id="s1-s2-s1-t1" name="List valid certificates" line="33">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:37.490" level="INFO">Running command 'ozone admin cert list 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:40.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:40.238" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250108 15:51:37.488" endtime="20250108 15:51:40.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:40.239" level="INFO">Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Wed Jan 08 15:50:49 UTC 2025   Sat Feb 16 15:50:49 UTC 2030   CN=scm@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=1   CN=scm@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=1  
2                 Wed Jan 08 15:50:49 UTC 2025   Sat Feb 16 15:50:49 UTC 2030   CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2 CN=scm@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=1  
3                 Wed Jan 08 15:51:10 UTC 2025   Thu Jan 08 15:51:10 UTC 2026   CN=dn@dn,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=3     CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2
4                 Wed Jan 08 15:51:11 UTC 2025   Thu Jan 08 15:51:11 UTC 2026   CN=dn@dn,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=4     CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2
5                 Wed Jan 08 15:51:11 UTC 2025   Thu Jan 08 15:51:11 UTC 2026   CN=dn@dn,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=5     CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2
6                 Wed Jan 08 15:51:11 UTC 2025   Thu Jan 08 15:51:11 UTC 2026   CN=recon@recon,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=6 CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2
7                 Wed Jan 08 15:51:11 UTC 2025   Thu Jan 08 15:51:11 UTC 2026   CN=om,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=7        CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2</msg>
<status status="PASS" starttime="20250108 15:51:40.238" endtime="20250108 15:51:40.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:40.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:40.239" endtime="20250108 15:51:40.240"/>
</kw>
<status status="PASS" starttime="20250108 15:51:37.487" endtime="20250108 15:51:40.240"/>
</kw>
<msg timestamp="20250108 15:51:40.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:37.487" endtime="20250108 15:51:40.240"/>
</kw>
<msg timestamp="20250108 15:51:40.240" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250108 15:51:37.487" endtime="20250108 15:51:40.240"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate list:(BatchSize=20,</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:51:40.240" endtime="20250108 15:51:40.241"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:51:37.486" endtime="20250108 15:51:40.241"/>
</test>
<test id="s1-s2-s1-t2" name="List revoked certificates" line="38">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -t revoked</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:40.245" level="INFO">Running command 'ozone admin cert list -t revoked 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:42.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:42.863" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250108 15:51:40.243" endtime="20250108 15:51:42.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:42.864" level="INFO">Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Wed Jan 08 15:50:49 UTC 2025   Sat Feb 16 15:50:49 UTC 2030   CN=scm@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=1   CN=scm@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=1  
2                 Wed Jan 08 15:50:49 UTC 2025   Sat Feb 16 15:50:49 UTC 2030   CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2 CN=scm@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=1  
3                 Wed Jan 08 15:51:10 UTC 2025   Thu Jan 08 15:51:10 UTC 2026   CN=dn@dn,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=3     CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2
4                 Wed Jan 08 15:51:11 UTC 2025   Thu Jan 08 15:51:11 UTC 2026   CN=dn@dn,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=4     CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2
5                 Wed Jan 08 15:51:11 UTC 2025   Thu Jan 08 15:51:11 UTC 2026   CN=dn@dn,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=5     CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2
6                 Wed Jan 08 15:51:11 UTC 2025   Thu Jan 08 15:51:11 UTC 2026   CN=recon@recon,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=6 CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2
7                 Wed Jan 08 15:51:11 UTC 2025   Thu Jan 08 15:51:11 UTC 2026   CN=om,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=7        CN=scm-sub@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=2</msg>
<status status="PASS" starttime="20250108 15:51:42.864" endtime="20250108 15:51:42.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:42.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:42.865" endtime="20250108 15:51:42.865"/>
</kw>
<status status="PASS" starttime="20250108 15:51:40.243" endtime="20250108 15:51:42.865"/>
</kw>
<msg timestamp="20250108 15:51:42.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:40.242" endtime="20250108 15:51:42.865"/>
</kw>
<msg timestamp="20250108 15:51:42.865" level="INFO">${output} = Certificate list:(BatchSize=20, CertCount=7)
SerialNumber      Valid From                     Expiry                         Subject                                                                    ...</msg>
<status status="PASS" starttime="20250108 15:51:40.242" endtime="20250108 15:51:42.865"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate list:(BatchSize=20,</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:51:42.866" endtime="20250108 15:51:42.866"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:51:40.241" endtime="20250108 15:51:42.866"/>
</test>
<test id="s1-s2-s1-t3" name="Info of the cert" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:42.870" level="INFO">Running command 'for id in $(ozone admin cert list -c 1|grep UTC|awk '{print $1}'); do ozone admin cert info $id; done 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:48.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:48.586" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             Issue...</msg>
<status status="PASS" starttime="20250108 15:51:42.868" endtime="20250108 15:51:48.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:48.587" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             IssuerDN: CN=scm@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=1
           Start Date: Wed Jan 08 15:50:49 UTC 2025
           Final Date: Sat Feb 16 15:50:49 UTC 2030
            SubjectDN: CN=scm@scm,OU=b395e9a5-baa5-4a8e-bfd5-89511dda53d6,O=CID-8846d6fa-10d3-45ec-af79-b9b8a10c35dc,SERIALNUMBER=1
           Public Key: RSA Public Key [8b:55:6a:5a:99:ee:4c:4c:69:f1:c0:f2:8b:7f:8c:a2:ea:e0:2b:12],[56:66:d1:a4]
        modulus: d871135b49559e0a89194902d4a233983b8d037e1137dbe55f473eb30831b92d1c68f270b47b5be5330108c85b6dcfb6b1401798e0dd499984235d3890b18b6cb6500a52fa19a708161156109c699fac9696cdda3c5bb529369e0430946456af4bd9a4f310489d10691415048892448e2256654e3305d85bc6ba52696d279c4d10204fc637ec50c1d829c66b4dac7070571bae6273bfc9c5c1bac5b826ddb969adf397c220813855eb5944cd8061a333ebad969635d863867ca99e9f19c3222040bdf6701c85acc6c19b76735efe4fec9c1753f2928af51009459edaed2fa694093e67d3fe2bfd9b3b902e54292d38b1e97b12da59245a08312b2dc139d6833d
public exponent: 10001

  Signature Algorithm: SHA256WITHRSA
            Signature: 3041b66d244536f69b1cb07060261463e152152d
                       51ccf15b41015a17b0add40e425d5770925cf4e5
                       137be985497244421ffd56fd6b8f208cda4f35af
                       7c4b60274be56ea9b88ca54874b4c7dcc447ff12
                       ad2bc0b1f9c7dc45936fc7006fbf7a19c3cdf42b
                       d513325e8b55e7654fbf624d440a7ede0c48ce4a
                       546e1f795a2cced4dba70b2773275fe17a3425fe
                       57129be7c20277791ad5868747f0b455cf180cdb
                       b2120e09a00b00a1c4156166edbc39f4c571fdd8
                       69a65d8d3d040686c8757af03519930ed53f612b
                       8d7953acde38226b97e8f9871051c0dc5dd09b7d
                       ef436a61cbc8b50a8923e35bc0a451f5116092cf
                       5f6e433efd40b764c23b53297ba5051d
       Extensions: 
                       critical(true) BasicConstraints: isCa(true)
                       critical(true) KeyUsage: 0x6
                       critical(false) 2.5.29.17 value = Sequence
    Tagged [CONTEXT 7] IMPLICIT 
        DER Octet String[4] 

</msg>
<status status="PASS" starttime="20250108 15:51:48.586" endtime="20250108 15:51:48.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:48.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:48.587" endtime="20250108 15:51:48.587"/>
</kw>
<status status="PASS" starttime="20250108 15:51:42.867" endtime="20250108 15:51:48.587"/>
</kw>
<msg timestamp="20250108 15:51:48.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:42.867" endtime="20250108 15:51:48.587"/>
</kw>
<msg timestamp="20250108 15:51:48.588" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate id: 1
  [0]         Version: 3
         SerialNumber: 1
             Issue...</msg>
<status status="PASS" starttime="20250108 15:51:42.867" endtime="20250108 15:51:48.588"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Certificate not found</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:51:48.588" endtime="20250108 15:51:48.588"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:51:42.866" endtime="20250108 15:51:48.588"/>
</test>
<doc>Test for ozone admin cert command</doc>
<status status="PASS" starttime="20250108 15:51:37.399" endtime="20250108 15:51:48.589"/>
</suite>
<suite id="s1-s2-s2" name="Ozone-Secure-Fs" source="/opt/hadoop/smoketest/security/ozone-secure-fs.robot">
<test id="s1-s2-s2-t1" name="Create volume bucket with wrong credentials" line="52">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:48.603" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:48.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:48.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:51:48.601" endtime="20250108 15:51:48.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:48.608" level="INFO"/>
<status status="PASS" starttime="20250108 15:51:48.608" endtime="20250108 15:51:48.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:48.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:48.608" endtime="20250108 15:51:48.609"/>
</kw>
<status status="PASS" starttime="20250108 15:51:48.600" endtime="20250108 15:51:48.609"/>
</kw>
<msg timestamp="20250108 15:51:48.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:48.600" endtime="20250108 15:51:48.609"/>
</kw>
<status status="PASS" starttime="20250108 15:51:48.600" endtime="20250108 15:51:48.609"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:48.611" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:51.112" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:51:51.112" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250108 15:51:48.609" endtime="20250108 15:51:51.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate via</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:51:51.113" endtime="20250108 15:51:51.113"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:51:48.599" endtime="20250108 15:51:51.113"/>
</test>
<test id="s1-s2-s2-t2" name="Create volume with non-admin user" line="57">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:51:51.115" endtime="20250108 15:51:51.115"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:51.118" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:51.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:51.122" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:51:51.116" endtime="20250108 15:51:51.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:51.122" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:51:51.122" endtime="20250108 15:51:51.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:51.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:51.122" endtime="20250108 15:51:51.123"/>
</kw>
<status status="PASS" starttime="20250108 15:51:51.116" endtime="20250108 15:51:51.123"/>
</kw>
<msg timestamp="20250108 15:51:51.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:51.116" endtime="20250108 15:51:51.123"/>
</kw>
<msg timestamp="20250108 15:51:51.123" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:51:51.115" endtime="20250108 15:51:51.123"/>
</kw>
<msg timestamp="20250108 15:51:51.123" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:51:51.115" endtime="20250108 15:51:51.123"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:51:51.124" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:51:51.123" endtime="20250108 15:51:51.124"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:51.126" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:51.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:51.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:51:51.125" endtime="20250108 15:51:51.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:51.156" level="INFO"/>
<status status="PASS" starttime="20250108 15:51:51.155" endtime="20250108 15:51:51.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:51.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:51.156" endtime="20250108 15:51:51.156"/>
</kw>
<status status="PASS" starttime="20250108 15:51:51.124" endtime="20250108 15:51:51.157"/>
</kw>
<msg timestamp="20250108 15:51:51.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:51.124" endtime="20250108 15:51:51.157"/>
</kw>
<status status="PASS" starttime="20250108 15:51:51.124" endtime="20250108 15:51:51.157"/>
</kw>
<status status="PASS" starttime="20250108 15:51:51.124" endtime="20250108 15:51:51.157"/>
</kw>
<status status="PASS" starttime="20250108 15:51:51.114" endtime="20250108 15:51:51.157"/>
</kw>
<status status="PASS" starttime="20250108 15:51:51.114" endtime="20250108 15:51:51.157"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone sh volume create o3://om/fstest</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:51.159" level="INFO">Running command 'ozone sh volume create o3://om/fstest 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:54.653" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:51:54.653" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have CREATE permission to access volume Volume:fstest </msg>
<status status="PASS" starttime="20250108 15:51:51.157" endtime="20250108 15:51:54.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>doesn't have CREATE permission to access volume</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:51:54.654" endtime="20250108 15:51:54.654"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:51:51.114" endtime="20250108 15:51:54.654"/>
</test>
<test id="s1-s2-s2-t3" name="Create bucket with non-admin owner(testuser2)" line="62">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:51:54.656" endtime="20250108 15:51:54.656"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:54.659" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:54.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:54.663" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:51:54.657" endtime="20250108 15:51:54.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:54.664" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:51:54.663" endtime="20250108 15:51:54.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:54.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:54.664" endtime="20250108 15:51:54.664"/>
</kw>
<status status="PASS" starttime="20250108 15:51:54.657" endtime="20250108 15:51:54.664"/>
</kw>
<msg timestamp="20250108 15:51:54.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:54.657" endtime="20250108 15:51:54.664"/>
</kw>
<msg timestamp="20250108 15:51:54.664" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:51:54.656" endtime="20250108 15:51:54.664"/>
</kw>
<msg timestamp="20250108 15:51:54.665" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:51:54.656" endtime="20250108 15:51:54.665"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:51:54.665" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:51:54.665" endtime="20250108 15:51:54.665"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:54.668" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:54.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:54.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:51:54.666" endtime="20250108 15:51:54.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:54.698" level="INFO"/>
<status status="PASS" starttime="20250108 15:51:54.697" endtime="20250108 15:51:54.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:54.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:54.698" endtime="20250108 15:51:54.698"/>
</kw>
<status status="PASS" starttime="20250108 15:51:54.666" endtime="20250108 15:51:54.698"/>
</kw>
<msg timestamp="20250108 15:51:54.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:54.666" endtime="20250108 15:51:54.698"/>
</kw>
<status status="PASS" starttime="20250108 15:51:54.665" endtime="20250108 15:51:54.698"/>
</kw>
<status status="PASS" starttime="20250108 15:51:54.665" endtime="20250108 15:51:54.698"/>
</kw>
<status status="PASS" starttime="20250108 15:51:54.656" endtime="20250108 15:51:54.699"/>
</kw>
<status status="PASS" starttime="20250108 15:51:54.655" endtime="20250108 15:51:54.699"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:51:54.700" level="INFO">${random} = 53</msg>
<status status="PASS" starttime="20250108 15:51:54.699" endtime="20250108 15:51:54.700"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:51:54.701" level="INFO">${volume1} = fstest53</msg>
<status status="PASS" starttime="20250108 15:51:54.700" endtime="20250108 15:51:54.701"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:51:54.702" level="INFO">${volume2} = fstest253</msg>
<status status="PASS" starttime="20250108 15:51:54.701" endtime="20250108 15:51:54.702"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:51:54.703" level="INFO">${volume3} = fstest353</msg>
<status status="PASS" starttime="20250108 15:51:54.702" endtime="20250108 15:51:54.703"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:51:54.704" level="INFO">${volume4} = fstest453</msg>
<status status="PASS" starttime="20250108 15:51:54.703" endtime="20250108 15:51:54.704"/>
</kw>
<status status="PASS" starttime="20250108 15:51:54.699" endtime="20250108 15:51:54.704"/>
</kw>
<status status="PASS" starttime="20250108 15:51:54.699" endtime="20250108 15:51:54.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume4} -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:54.707" level="INFO">Running command 'ozone sh volume create o3://om/fstest453 -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:58.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:58.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:51:54.705" endtime="20250108 15:51:58.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:58.125" level="INFO"/>
<status status="PASS" starttime="20250108 15:51:58.125" endtime="20250108 15:51:58.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:58.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:58.125" endtime="20250108 15:51:58.126"/>
</kw>
<status status="PASS" starttime="20250108 15:51:54.704" endtime="20250108 15:51:58.126"/>
</kw>
<msg timestamp="20250108 15:51:58.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:54.704" endtime="20250108 15:51:58.126"/>
</kw>
<status status="PASS" starttime="20250108 15:51:54.704" endtime="20250108 15:51:58.126"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:51:58.127" endtime="20250108 15:51:58.127"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:58.130" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:58.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:58.134" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:51:58.128" endtime="20250108 15:51:58.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:58.134" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:51:58.134" endtime="20250108 15:51:58.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:58.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:58.134" endtime="20250108 15:51:58.135"/>
</kw>
<status status="PASS" starttime="20250108 15:51:58.128" endtime="20250108 15:51:58.135"/>
</kw>
<msg timestamp="20250108 15:51:58.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:58.128" endtime="20250108 15:51:58.135"/>
</kw>
<msg timestamp="20250108 15:51:58.135" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:51:58.127" endtime="20250108 15:51:58.135"/>
</kw>
<msg timestamp="20250108 15:51:58.135" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:51:58.127" endtime="20250108 15:51:58.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:51:58.136" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:51:58.135" endtime="20250108 15:51:58.136"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:58.139" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:51:58.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:51:58.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:51:58.137" endtime="20250108 15:51:58.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:51:58.181" level="INFO"/>
<status status="PASS" starttime="20250108 15:51:58.180" endtime="20250108 15:51:58.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:51:58.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:51:58.181" endtime="20250108 15:51:58.181"/>
</kw>
<status status="PASS" starttime="20250108 15:51:58.137" endtime="20250108 15:51:58.181"/>
</kw>
<msg timestamp="20250108 15:51:58.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:58.136" endtime="20250108 15:51:58.182"/>
</kw>
<status status="PASS" starttime="20250108 15:51:58.136" endtime="20250108 15:51:58.182"/>
</kw>
<status status="PASS" starttime="20250108 15:51:58.136" endtime="20250108 15:51:58.182"/>
</kw>
<status status="PASS" starttime="20250108 15:51:58.126" endtime="20250108 15:51:58.182"/>
</kw>
<status status="PASS" starttime="20250108 15:51:58.126" endtime="20250108 15:51:58.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create o3://om/${volume4}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:51:58.185" level="INFO">Running command 'ozone sh bucket create o3://om/fstest453/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:01.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:01.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:51:58.183" endtime="20250108 15:52:01.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:01.582" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:01.582" endtime="20250108 15:52:01.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:01.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:01.582" endtime="20250108 15:52:01.583"/>
</kw>
<status status="PASS" starttime="20250108 15:51:58.182" endtime="20250108 15:52:01.583"/>
</kw>
<msg timestamp="20250108 15:52:01.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:51:58.182" endtime="20250108 15:52:01.583"/>
</kw>
<msg timestamp="20250108 15:52:01.583" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:51:58.182" endtime="20250108 15:52:01.583"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:52:01.583" endtime="20250108 15:52:01.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put ${volume4}/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:01.587" level="INFO">Running command 'ozone sh key put fstest453/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:08.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:08.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:01.584" endtime="20250108 15:52:08.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:08.030" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:08.029" endtime="20250108 15:52:08.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:08.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:08.030" endtime="20250108 15:52:08.030"/>
</kw>
<status status="PASS" starttime="20250108 15:52:01.584" endtime="20250108 15:52:08.030"/>
</kw>
<msg timestamp="20250108 15:52:08.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:01.584" endtime="20250108 15:52:08.031"/>
</kw>
<msg timestamp="20250108 15:52:08.031" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:52:01.584" endtime="20250108 15:52:08.031"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:52:08.031" endtime="20250108 15:52:08.031"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:08.035" level="INFO">Running command 'ozone sh key list fstest453/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:11.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:11.919" level="INFO">${output} = [ {
  "volumeName" : "fstest453",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 17289,
  "creationTime" : "2025-01-08T15:52:05.173Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20250108 15:52:08.033" endtime="20250108 15:52:11.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:11.920" level="INFO">[ {
  "volumeName" : "fstest453",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 17289,
  "creationTime" : "2025-01-08T15:52:05.173Z",
  "modificationTime" : "2025-01-08T15:52:07.474Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "tags" : { },
  "file" : true
} ]</msg>
<status status="PASS" starttime="20250108 15:52:11.920" endtime="20250108 15:52:11.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:11.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:11.920" endtime="20250108 15:52:11.921"/>
</kw>
<status status="PASS" starttime="20250108 15:52:08.032" endtime="20250108 15:52:11.921"/>
</kw>
<msg timestamp="20250108 15:52:11.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:08.032" endtime="20250108 15:52:11.921"/>
</kw>
<msg timestamp="20250108 15:52:11.921" level="INFO">${result} = [ {
  "volumeName" : "fstest453",
  "bucketName" : "bucket1",
  "name" : "key1",
  "owner" : "testuser2",
  "dataSize" : 17289,
  "creationTime" : "2025-01-08T15:52:05.173Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20250108 15:52:08.031" endtime="20250108 15:52:11.921"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:52:11.921" endtime="20250108 15:52:11.921"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key delete ${volume4}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:11.924" level="INFO">Running command 'ozone sh key delete fstest453/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:15.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:15.498" level="INFO">${output} = Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20250108 15:52:11.922" endtime="20250108 15:52:15.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:15.499" level="INFO">Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20250108 15:52:15.498" endtime="20250108 15:52:15.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:15.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:15.499" endtime="20250108 15:52:15.499"/>
</kw>
<status status="PASS" starttime="20250108 15:52:11.922" endtime="20250108 15:52:15.499"/>
</kw>
<msg timestamp="20250108 15:52:15.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:11.922" endtime="20250108 15:52:15.499"/>
</kw>
<msg timestamp="20250108 15:52:15.500" level="INFO">${result} = Key moved inside Trash: /.Trash/testuser2/Current/key1 </msg>
<status status="PASS" starttime="20250108 15:52:11.921" endtime="20250108 15:52:15.500"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:52:15.500" endtime="20250108 15:52:15.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket delete -r --yes ${volume4}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:15.503" level="INFO">Running command 'ozone sh bucket delete -r --yes fstest453/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:19.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:19.159" level="INFO">${output} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250108 15:52:15.501" endtime="20250108 15:52:19.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:19.160" level="INFO">Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250108 15:52:19.159" endtime="20250108 15:52:19.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:19.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:19.160" endtime="20250108 15:52:19.160"/>
</kw>
<status status="PASS" starttime="20250108 15:52:15.501" endtime="20250108 15:52:19.160"/>
</kw>
<msg timestamp="20250108 15:52:19.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:15.500" endtime="20250108 15:52:19.160"/>
</kw>
<msg timestamp="20250108 15:52:19.161" level="INFO">${result} = Bucket bucket1 is deleted</msg>
<status status="PASS" starttime="20250108 15:52:15.500" endtime="20250108 15:52:19.161"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:52:19.161" endtime="20250108 15:52:19.161"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:51:54.655" endtime="20250108 15:52:19.161"/>
</test>
<test id="s1-s2-s2-t4" name="Create volume bucket with credentials" line="78">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:52:19.162" endtime="20250108 15:52:19.163"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:19.166" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:19.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:19.169" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:52:19.164" endtime="20250108 15:52:19.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:19.170" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:52:19.170" endtime="20250108 15:52:19.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:19.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:19.170" endtime="20250108 15:52:19.170"/>
</kw>
<status status="PASS" starttime="20250108 15:52:19.163" endtime="20250108 15:52:19.171"/>
</kw>
<msg timestamp="20250108 15:52:19.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:19.163" endtime="20250108 15:52:19.171"/>
</kw>
<msg timestamp="20250108 15:52:19.171" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:52:19.163" endtime="20250108 15:52:19.171"/>
</kw>
<msg timestamp="20250108 15:52:19.171" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:52:19.163" endtime="20250108 15:52:19.171"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:52:19.171" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:52:19.171" endtime="20250108 15:52:19.171"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:19.174" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:19.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:19.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:19.173" endtime="20250108 15:52:19.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:19.201" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:19.201" endtime="20250108 15:52:19.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:19.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:19.201" endtime="20250108 15:52:19.202"/>
</kw>
<status status="PASS" starttime="20250108 15:52:19.172" endtime="20250108 15:52:19.202"/>
</kw>
<msg timestamp="20250108 15:52:19.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:19.172" endtime="20250108 15:52:19.202"/>
</kw>
<status status="PASS" starttime="20250108 15:52:19.172" endtime="20250108 15:52:19.202"/>
</kw>
<status status="PASS" starttime="20250108 15:52:19.172" endtime="20250108 15:52:19.202"/>
</kw>
<status status="PASS" starttime="20250108 15:52:19.162" endtime="20250108 15:52:19.202"/>
</kw>
<status status="PASS" starttime="20250108 15:52:19.162" endtime="20250108 15:52:19.202"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup volume names</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup volume names">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>2</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:52:19.203" level="INFO">${random} = 90</msg>
<status status="PASS" starttime="20250108 15:52:19.203" endtime="20250108 15:52:19.203"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume1}</arg>
<arg>fstest${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:52:19.203" level="INFO">${volume1} = fstest90</msg>
<status status="PASS" starttime="20250108 15:52:19.203" endtime="20250108 15:52:19.203"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume2}</arg>
<arg>fstest2${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:52:19.204" level="INFO">${volume2} = fstest290</msg>
<status status="PASS" starttime="20250108 15:52:19.203" endtime="20250108 15:52:19.204"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume3}</arg>
<arg>fstest3${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:52:19.204" level="INFO">${volume3} = fstest390</msg>
<status status="PASS" starttime="20250108 15:52:19.204" endtime="20250108 15:52:19.204"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume4}</arg>
<arg>fstest4${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:52:19.204" level="INFO">${volume4} = fstest490</msg>
<status status="PASS" starttime="20250108 15:52:19.204" endtime="20250108 15:52:19.204"/>
</kw>
<status status="PASS" starttime="20250108 15:52:19.202" endtime="20250108 15:52:19.204"/>
</kw>
<status status="PASS" starttime="20250108 15:52:19.202" endtime="20250108 15:52:19.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume1}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:19.207" level="INFO">Running command 'ozone sh volume create o3://om/fstest90 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:22.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:22.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:19.205" endtime="20250108 15:52:22.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:22.480" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:22.480" endtime="20250108 15:52:22.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:22.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:22.481" endtime="20250108 15:52:22.481"/>
</kw>
<status status="PASS" starttime="20250108 15:52:19.205" endtime="20250108 15:52:22.481"/>
</kw>
<msg timestamp="20250108 15:52:22.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:19.205" endtime="20250108 15:52:22.481"/>
</kw>
<status status="PASS" starttime="20250108 15:52:19.205" endtime="20250108 15:52:22.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://om/${volume2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:22.485" level="INFO">Running command 'ozone sh volume create o3://om/fstest290 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:25.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:25.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:22.482" endtime="20250108 15:52:25.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:25.943" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:25.942" endtime="20250108 15:52:25.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:25.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:25.943" endtime="20250108 15:52:25.943"/>
</kw>
<status status="PASS" starttime="20250108 15:52:22.482" endtime="20250108 15:52:25.943"/>
</kw>
<msg timestamp="20250108 15:52:25.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:22.482" endtime="20250108 15:52:25.943"/>
</kw>
<status status="PASS" starttime="20250108 15:52:22.481" endtime="20250108 15:52:25.944"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket1 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:25.947" level="INFO">Running command 'ozone sh bucket create o3://om/fstest90/bucket1 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:29.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:29.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:25.945" endtime="20250108 15:52:29.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:29.585" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:29.584" endtime="20250108 15:52:29.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:29.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:29.585" endtime="20250108 15:52:29.585"/>
</kw>
<status status="PASS" starttime="20250108 15:52:25.944" endtime="20250108 15:52:29.586"/>
</kw>
<msg timestamp="20250108 15:52:29.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:25.944" endtime="20250108 15:52:29.586"/>
</kw>
<status status="PASS" starttime="20250108 15:52:25.944" endtime="20250108 15:52:29.586"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume1}/bucket2 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:29.589" level="INFO">Running command 'ozone sh bucket create o3://om/fstest90/bucket2 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:32.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:32.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:29.587" endtime="20250108 15:52:32.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:32.907" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:32.901" endtime="20250108 15:52:32.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:32.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:32.907" endtime="20250108 15:52:32.908"/>
</kw>
<status status="PASS" starttime="20250108 15:52:29.586" endtime="20250108 15:52:32.908"/>
</kw>
<msg timestamp="20250108 15:52:32.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:29.586" endtime="20250108 15:52:32.908"/>
</kw>
<status status="PASS" starttime="20250108 15:52:29.586" endtime="20250108 15:52:32.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://om/${volume2}/bucket3 --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:32.912" level="INFO">Running command 'ozone sh bucket create o3://om/fstest290/bucket3 --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:36.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:36.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:32.909" endtime="20250108 15:52:36.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:36.622" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:36.621" endtime="20250108 15:52:36.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:36.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:36.622" endtime="20250108 15:52:36.622"/>
</kw>
<status status="PASS" starttime="20250108 15:52:32.909" endtime="20250108 15:52:36.622"/>
</kw>
<msg timestamp="20250108 15:52:36.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:32.909" endtime="20250108 15:52:36.622"/>
</kw>
<status status="PASS" starttime="20250108 15:52:32.908" endtime="20250108 15:52:36.622"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:52:19.161" endtime="20250108 15:52:36.623"/>
</test>
<test id="s1-s2-s2-t5" name="Check volume from ozonefs" line="88">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls o3fs://bucket1.${volume1}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:36.626" level="INFO">Running command 'ozone fs -ls o3fs://bucket1.fstest90/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:40.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:40.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:36.624" endtime="20250108 15:52:40.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:40.001" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:40.001" endtime="20250108 15:52:40.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:40.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:40.001" endtime="20250108 15:52:40.002"/>
</kw>
<status status="PASS" starttime="20250108 15:52:36.624" endtime="20250108 15:52:40.002"/>
</kw>
<msg timestamp="20250108 15:52:40.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:36.624" endtime="20250108 15:52:40.002"/>
</kw>
<msg timestamp="20250108 15:52:40.002" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:52:36.623" endtime="20250108 15:52:40.002"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:52:36.623" endtime="20250108 15:52:40.002"/>
</test>
<test id="s1-s2-s2-t6" name="Test tmp mount for shared ofs tmp dir" line="91">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:40.006" level="INFO">Running command 'ozone getconf confKey ozone.om.enable.ofs.shared.tmp.dir 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:41.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:41.087" level="INFO">${output} = false</msg>
<status status="PASS" starttime="20250108 15:52:40.004" endtime="20250108 15:52:41.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:41.087" level="INFO">false</msg>
<status status="PASS" starttime="20250108 15:52:41.087" endtime="20250108 15:52:41.087"/>
</kw>
<msg timestamp="20250108 15:52:41.088" level="INFO">${result} = false</msg>
<status status="PASS" starttime="20250108 15:52:40.003" endtime="20250108 15:52:41.088"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${contains}</var>
<arg>"true" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250108 15:52:41.088" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20250108 15:52:41.088" endtime="20250108 15:52:41.088"/>
</kw>
<if>
<branch type="IF" condition="${contains} == ${True}">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:52:41.089" endtime="20250108 15:52:41.089"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${TMP_MOUNT} -u testuser</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.089" endtime="20250108 15:52:41.089"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${TMP_MOUNT}/${TMP_DIR} -u testuser</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.089" endtime="20250108 15:52:41.089"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl /${TMP_MOUNT} -a user:testuser:a,user:testuser2:rw</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.089" endtime="20250108 15:52:41.089"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl /${TMP_MOUNT}/${TMP_DIR} -a user:testuser:a,user:testuser2:rwlc</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.089" endtime="20250108 15:52:41.089"/>
</kw>
<kw name="Format ofs TMPMOUNT">
<var>${tmpdirmount}</var>
<arg>${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.089" endtime="20250108 15:52:41.089"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./NOTICE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.089" endtime="20250108 15:52:41.089"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250108 15:52:41.089" endtime="20250108 15:52:41.089"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:52:41.089" endtime="20250108 15:52:41.089"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put ./LICENSE.txt ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.090" endtime="20250108 15:52:41.090"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20250108 15:52:41.090" endtime="20250108 15:52:41.090"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.090" endtime="20250108 15:52:41.090"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:52:41.090" endtime="20250108 15:52:41.090"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LICENSE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:52:41.090" endtime="20250108 15:52:41.090"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.090" endtime="20250108 15:52:41.090"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>error</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:52:41.090" endtime="20250108 15:52:41.090"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/LICENSE.txt</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.090" endtime="20250108 15:52:41.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:52:41.091" endtime="20250108 15:52:41.091"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:52:41.091" endtime="20250108 15:52:41.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rm -skipTrash ${tmpdirmount}/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.091" endtime="20250108 15:52:41.091"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:52:41.091" endtime="20250108 15:52:41.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -r -skipTrash ${tmpdirmount}</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.091" endtime="20250108 15:52:41.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete /${TMP_MOUNT}</arg>
<status status="NOT RUN" starttime="20250108 15:52:41.091" endtime="20250108 15:52:41.091"/>
</kw>
<status status="NOT RUN" starttime="20250108 15:52:41.088" endtime="20250108 15:52:41.091"/>
</branch>
<status status="PASS" starttime="20250108 15:52:41.088" endtime="20250108 15:52:41.091"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:52:40.003" endtime="20250108 15:52:41.091"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20250108 15:51:48.590" endtime="20250108 15:52:41.092"/>
</suite>
<suite id="s1-s2-s3" name="Ozone-Secure-Owner-S3" source="/opt/hadoop/smoketest/security/ozone-secure-owner-s3.robot">
<test id="s1-s2-s3-t1" name="Initialize testuser Credentials" line="51">
<kw name="Initialize User Credentials">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>${username}</arg>
<arg>${keytab}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>${username}</arg>
<arg>${keytab}</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:52:41.116" endtime="20250108 15:52:41.116"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:41.119" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:41.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:41.123" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:52:41.117" endtime="20250108 15:52:41.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:41.124" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:52:41.123" endtime="20250108 15:52:41.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:41.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:41.124" endtime="20250108 15:52:41.124"/>
</kw>
<status status="PASS" starttime="20250108 15:52:41.117" endtime="20250108 15:52:41.124"/>
</kw>
<msg timestamp="20250108 15:52:41.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:41.117" endtime="20250108 15:52:41.124"/>
</kw>
<msg timestamp="20250108 15:52:41.125" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:52:41.116" endtime="20250108 15:52:41.125"/>
</kw>
<msg timestamp="20250108 15:52:41.125" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:52:41.116" endtime="20250108 15:52:41.125"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:52:41.125" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:52:41.125" endtime="20250108 15:52:41.125"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:41.128" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:41.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:41.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:41.126" endtime="20250108 15:52:41.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:41.160" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:41.160" endtime="20250108 15:52:41.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:41.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:41.161" endtime="20250108 15:52:41.161"/>
</kw>
<status status="PASS" starttime="20250108 15:52:41.126" endtime="20250108 15:52:41.161"/>
</kw>
<msg timestamp="20250108 15:52:41.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:41.126" endtime="20250108 15:52:41.161"/>
</kw>
<status status="PASS" starttime="20250108 15:52:41.126" endtime="20250108 15:52:41.161"/>
</kw>
<status status="PASS" starttime="20250108 15:52:41.125" endtime="20250108 15:52:41.161"/>
</kw>
<status status="PASS" starttime="20250108 15:52:41.115" endtime="20250108 15:52:41.161"/>
</kw>
<status status="PASS" starttime="20250108 15:52:41.115" endtime="20250108 15:52:41.162"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u ${username}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:41.164" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:44.161" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:52:44.161" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:52:41.162" endtime="20250108 15:52:44.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:44.162" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:52:44.161" endtime="20250108 15:52:44.162"/>
</kw>
<status status="PASS" starttime="20250108 15:52:41.162" endtime="20250108 15:52:44.162"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u ${username}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:44.165" level="INFO">Running command 'ozone s3 getsecret -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:47.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:47.062" level="INFO">${output} = awsAccessKey=testuser
awsSecret=a8d0ab88d2fd0d6b0b58b40d07f08e5f18d11c90e3112f6291299917a442636e</msg>
<status status="PASS" starttime="20250108 15:52:44.163" endtime="20250108 15:52:47.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:47.063" level="INFO">awsAccessKey=testuser
awsSecret=a8d0ab88d2fd0d6b0b58b40d07f08e5f18d11c90e3112f6291299917a442636e</msg>
<status status="PASS" starttime="20250108 15:52:47.063" endtime="20250108 15:52:47.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:47.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:47.063" endtime="20250108 15:52:47.064"/>
</kw>
<status status="PASS" starttime="20250108 15:52:44.163" endtime="20250108 15:52:47.064"/>
</kw>
<msg timestamp="20250108 15:52:47.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:44.162" endtime="20250108 15:52:47.064"/>
</kw>
<msg timestamp="20250108 15:52:47.064" level="INFO">${output} = awsAccessKey=testuser
awsSecret=a8d0ab88d2fd0d6b0b58b40d07f08e5f18d11c90e3112f6291299917a442636e</msg>
<status status="PASS" starttime="20250108 15:52:44.162" endtime="20250108 15:52:47.064"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 15:52:47.065" level="INFO">${accessId} = ['testuser']</msg>
<status status="PASS" starttime="20250108 15:52:47.064" endtime="20250108 15:52:47.065"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 15:52:47.065" level="INFO">${secretKey} = ['a8d0ab88d2fd0d6b0b58b40d07f08e5f18d11c90e3112f6291299917a442636e']</msg>
<status status="PASS" starttime="20250108 15:52:47.065" endtime="20250108 15:52:47.065"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:52:47.066" level="INFO">${accessId} = testuser</msg>
<status status="PASS" starttime="20250108 15:52:47.065" endtime="20250108 15:52:47.066"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:52:47.067" level="INFO">${secretKey} = a8d0ab88d2fd0d6b0b58b40d07f08e5f18d11c90e3112f6291299917a442636e</msg>
<status status="PASS" starttime="20250108 15:52:47.066" endtime="20250108 15:52:47.067"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID_${username}}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:52:47.068" level="INFO">${ACCESS_ID_testuser} = testuser</msg>
<status status="PASS" starttime="20250108 15:52:47.067" endtime="20250108 15:52:47.068"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY_${username}}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:52:47.069" level="INFO">${SECRET_KEY_testuser} = a8d0ab88d2fd0d6b0b58b40d07f08e5f18d11c90e3112f6291299917a442636e</msg>
<status status="PASS" starttime="20250108 15:52:47.068" endtime="20250108 15:52:47.069"/>
</kw>
<status status="PASS" starttime="20250108 15:52:41.115" endtime="20250108 15:52:47.069"/>
</kw>
<kw name="Initialize AWS S3">
<arg>${ACCESS_ID_testuser}</arg>
<arg>${SECRET_KEY_testuser}</arg>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${acess_id}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:47.073" level="INFO">Running command 'aws configure set aws_access_key_id testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:47.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:47.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:47.071" endtime="20250108 15:52:47.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:47.461" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:47.461" endtime="20250108 15:52:47.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:47.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:47.461" endtime="20250108 15:52:47.462"/>
</kw>
<status status="PASS" starttime="20250108 15:52:47.070" endtime="20250108 15:52:47.462"/>
</kw>
<msg timestamp="20250108 15:52:47.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:47.070" endtime="20250108 15:52:47.462"/>
</kw>
<status status="PASS" starttime="20250108 15:52:47.069" endtime="20250108 15:52:47.462"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret_key}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:47.466" level="INFO">Running command 'aws configure set aws_secret_access_key a8d0ab88d2fd0d6b0b58b40d07f08e5f18d11c90e3112f6291299917a442636e 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:47.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:47.920" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:47.464" endtime="20250108 15:52:47.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:47.922" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:47.921" endtime="20250108 15:52:47.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:47.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:47.922" endtime="20250108 15:52:47.922"/>
</kw>
<status status="PASS" starttime="20250108 15:52:47.463" endtime="20250108 15:52:47.922"/>
</kw>
<msg timestamp="20250108 15:52:47.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:47.463" endtime="20250108 15:52:47.922"/>
</kw>
<status status="PASS" starttime="20250108 15:52:47.462" endtime="20250108 15:52:47.922"/>
</kw>
<status status="PASS" starttime="20250108 15:52:47.069" endtime="20250108 15:52:47.922"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:52:41.115" endtime="20250108 15:52:47.923"/>
</test>
<test id="s1-s2-s3-t2" name="Create Bucket" line="55">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test-owner1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:47.926" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test-owner1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:49.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:49.728" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20250108 15:52:47.924" endtime="20250108 15:52:49.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:49.729" level="INFO">{
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20250108 15:52:49.728" endtime="20250108 15:52:49.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:49.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:49.729" endtime="20250108 15:52:49.729"/>
</kw>
<status status="PASS" starttime="20250108 15:52:47.924" endtime="20250108 15:52:49.730"/>
</kw>
<msg timestamp="20250108 15:52:49.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:47.924" endtime="20250108 15:52:49.730"/>
</kw>
<msg timestamp="20250108 15:52:49.730" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test-owner1"
}</msg>
<status status="PASS" starttime="20250108 15:52:47.923" endtime="20250108 15:52:49.730"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test-owner1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:52:49.730" endtime="20250108 15:52:49.730"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:52:47.923" endtime="20250108 15:52:49.730"/>
</test>
<test id="s1-s2-s3-t3" name="Verify Owner of Uploaded S3 Object By testuser" line="59">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:49.734" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:52:49.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:49.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:49.732" endtime="20250108 15:52:49.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:49.737" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:49.737" endtime="20250108 15:52:49.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:49.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:49.737" endtime="20250108 15:52:49.738"/>
</kw>
<status status="PASS" starttime="20250108 15:52:49.732" endtime="20250108 15:52:49.738"/>
</kw>
<msg timestamp="20250108 15:52:49.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:49.732" endtime="20250108 15:52:49.738"/>
</kw>
<status status="PASS" starttime="20250108 15:52:49.731" endtime="20250108 15:52:49.738"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} put-object --bucket bucket-test-owner1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:49.740" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test-owner1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:52.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:52.022" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:52:49.738" endtime="20250108 15:52:52.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:52.022" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:52:52.022" endtime="20250108 15:52:52.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:52.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:52.023" endtime="20250108 15:52:52.023"/>
</kw>
<status status="PASS" starttime="20250108 15:52:49.738" endtime="20250108 15:52:52.023"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/bucket-test-owner1/mykey | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:52.026" level="INFO">Running command 'ozone sh key info /s3v/bucket-test-owner1/mykey | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:55.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:55.832" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250108 15:52:52.024" endtime="20250108 15:52:55.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:55.833" level="INFO">testuser</msg>
<status status="PASS" starttime="20250108 15:52:55.832" endtime="20250108 15:52:55.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:55.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:55.833" endtime="20250108 15:52:55.833"/>
</kw>
<status status="PASS" starttime="20250108 15:52:52.024" endtime="20250108 15:52:55.833"/>
</kw>
<msg timestamp="20250108 15:52:55.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:52.024" endtime="20250108 15:52:55.833"/>
</kw>
<msg timestamp="20250108 15:52:55.834" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250108 15:52:52.023" endtime="20250108 15:52:55.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:52:55.834" endtime="20250108 15:52:55.834"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:52:49.731" endtime="20250108 15:52:55.834"/>
</test>
<doc>This test suite verifies the functionality of S3 secure mode in a Ceph cluster environment using docker-compose.</doc>
<status status="PASS" starttime="20250108 15:52:41.094" endtime="20250108 15:52:55.835"/>
</suite>
<suite id="s1-s2-s4" name="Ozone-Secure-S3" source="/opt/hadoop/smoketest/security/ozone-secure-s3.robot">
<test id="s1-s2-s4-t1" name="Secure S3 test Success" line="37">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup s3 tests</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:52:55.845" endtime="20250108 15:52:55.845"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:52:55.846" level="INFO">${randStr} = 1478334658</msg>
<status status="PASS" starttime="20250108 15:52:55.845" endtime="20250108 15:52:55.846"/>
</kw>
<msg timestamp="20250108 15:52:55.846" level="INFO">${random} = ozone-test-1478334658</msg>
<status status="PASS" starttime="20250108 15:52:55.845" endtime="20250108 15:52:55.846"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:52:55.847" level="INFO">${PREFIX} = ozone-test-1478334658</msg>
<status status="PASS" starttime="20250108 15:52:55.846" endtime="20250108 15:52:55.847"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.845" endtime="20250108 15:52:55.847"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.845" endtime="20250108 15:52:55.847"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:55.850" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:55.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:55.852" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20250108 15:52:55.848" endtime="20250108 15:52:55.852"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:52:55.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:55.853" endtime="20250108 15:52:55.853"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250108 15:52:55.853" endtime="20250108 15:52:55.853"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:52:55.853" endtime="20250108 15:52:55.854"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250108 15:52:55.854" endtime="20250108 15:52:55.854"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:52:55.854" endtime="20250108 15:52:55.854"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.847" endtime="20250108 15:52:55.854"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.847" endtime="20250108 15:52:55.854"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:52:55.855" endtime="20250108 15:52:55.855"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:55.858" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:55.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:55.862" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:52:55.856" endtime="20250108 15:52:55.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:55.862" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:52:55.862" endtime="20250108 15:52:55.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:55.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:55.862" endtime="20250108 15:52:55.863"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.856" endtime="20250108 15:52:55.863"/>
</kw>
<msg timestamp="20250108 15:52:55.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:55.856" endtime="20250108 15:52:55.863"/>
</kw>
<msg timestamp="20250108 15:52:55.863" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:52:55.856" endtime="20250108 15:52:55.863"/>
</kw>
<msg timestamp="20250108 15:52:55.863" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:52:55.855" endtime="20250108 15:52:55.863"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:52:55.864" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:52:55.864" endtime="20250108 15:52:55.864"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:55.867" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:55.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:55.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:55.866" endtime="20250108 15:52:55.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:55.899" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:55.899" endtime="20250108 15:52:55.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:55.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:55.899" endtime="20250108 15:52:55.900"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.865" endtime="20250108 15:52:55.900"/>
</kw>
<msg timestamp="20250108 15:52:55.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:55.865" endtime="20250108 15:52:55.900"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.864" endtime="20250108 15:52:55.900"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.864" endtime="20250108 15:52:55.900"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.855" endtime="20250108 15:52:55.900"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.854" endtime="20250108 15:52:55.900"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:55.903" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:58.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:58.884" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=02d9bdd47227a1419763d6239b2add53a40ae85e0fe19f835de59962cdc56160</msg>
<status status="PASS" starttime="20250108 15:52:55.901" endtime="20250108 15:52:58.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:58.885" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=02d9bdd47227a1419763d6239b2add53a40ae85e0fe19f835de59962cdc56160</msg>
<status status="PASS" starttime="20250108 15:52:58.885" endtime="20250108 15:52:58.885"/>
</kw>
<msg timestamp="20250108 15:52:58.886" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=02d9bdd47227a1419763d6239b2add53a40ae85e0fe19f835de59962cdc56160</msg>
<status status="PASS" starttime="20250108 15:52:55.901" endtime="20250108 15:52:58.886"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250108 15:52:58.886" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=02d9bdd47227a1419763d6239b2add53a40ae85e0fe19f835de59962cdc56160' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250108 15:52:58.886" endtime="20250108 15:52:58.886"/>
</kw>
<msg timestamp="20250108 15:52:58.887" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250108 15:52:58.886" endtime="20250108 15:52:58.887"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250108 15:52:58.887" endtime="20250108 15:52:58.887"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250108 15:52:58.887" endtime="20250108 15:52:58.887"/>
</kw>
<status status="NOT RUN" starttime="20250108 15:52:58.887" endtime="20250108 15:52:58.887"/>
</branch>
<status status="PASS" starttime="20250108 15:52:58.887" endtime="20250108 15:52:58.887"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 15:52:58.888" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250108 15:52:58.887" endtime="20250108 15:52:58.888"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250108 15:52:58.888" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250108 15:52:58.888" endtime="20250108 15:52:58.888"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 15:52:58.888" level="INFO">${secret} = ['02d9bdd47227a1419763d6239b2add53a40ae85e0fe19f835de59962cdc56160']</msg>
<status status="PASS" starttime="20250108 15:52:58.888" endtime="20250108 15:52:58.888"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:52:58.889" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:52:58.889" endtime="20250108 15:52:58.889"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:52:58.890" level="INFO">${secret} = 02d9bdd47227a1419763d6239b2add53a40ae85e0fe19f835de59962cdc56160</msg>
<status status="PASS" starttime="20250108 15:52:58.889" endtime="20250108 15:52:58.890"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:58.893" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:59.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:59.283" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:58.891" endtime="20250108 15:52:59.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:59.284" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:59.283" endtime="20250108 15:52:59.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:59.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:59.284" endtime="20250108 15:52:59.284"/>
</kw>
<status status="PASS" starttime="20250108 15:52:58.891" endtime="20250108 15:52:59.284"/>
</kw>
<msg timestamp="20250108 15:52:59.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:58.890" endtime="20250108 15:52:59.285"/>
</kw>
<status status="PASS" starttime="20250108 15:52:58.890" endtime="20250108 15:52:59.285"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:59.289" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:52:59.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:52:59.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:59.286" endtime="20250108 15:52:59.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:52:59.661" level="INFO"/>
<status status="PASS" starttime="20250108 15:52:59.660" endtime="20250108 15:52:59.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:52:59.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:52:59.661" endtime="20250108 15:52:59.661"/>
</kw>
<status status="PASS" starttime="20250108 15:52:59.286" endtime="20250108 15:52:59.661"/>
</kw>
<msg timestamp="20250108 15:52:59.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:59.285" endtime="20250108 15:52:59.662"/>
</kw>
<status status="PASS" starttime="20250108 15:52:59.285" endtime="20250108 15:52:59.662"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:52:59.665" level="INFO">Running command 'aws configure set aws_secret_access_key 02d9bdd47227a1419763d6239b2add53a40ae85e0fe19f835de59962cdc56160 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:00.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:00.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:52:59.663" endtime="20250108 15:53:00.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:00.018" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:00.018" endtime="20250108 15:53:00.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:00.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:00.018" endtime="20250108 15:53:00.019"/>
</kw>
<status status="PASS" starttime="20250108 15:52:59.662" endtime="20250108 15:53:00.019"/>
</kw>
<msg timestamp="20250108 15:53:00.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:52:59.662" endtime="20250108 15:53:00.019"/>
</kw>
<status status="PASS" starttime="20250108 15:52:59.662" endtime="20250108 15:53:00.019"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:00.022" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:00.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:00.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:00.020" endtime="20250108 15:53:00.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:00.392" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:00.391" endtime="20250108 15:53:00.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:00.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:00.392" endtime="20250108 15:53:00.392"/>
</kw>
<status status="PASS" starttime="20250108 15:53:00.020" endtime="20250108 15:53:00.392"/>
</kw>
<msg timestamp="20250108 15:53:00.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:00.019" endtime="20250108 15:53:00.393"/>
</kw>
<status status="PASS" starttime="20250108 15:53:00.019" endtime="20250108 15:53:00.393"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:00.396" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:00.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:00.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:00.394" endtime="20250108 15:53:00.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:00.742" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:00.741" endtime="20250108 15:53:00.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:00.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:00.742" endtime="20250108 15:53:00.743"/>
</kw>
<status status="PASS" starttime="20250108 15:53:00.393" endtime="20250108 15:53:00.743"/>
</kw>
<msg timestamp="20250108 15:53:00.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:00.393" endtime="20250108 15:53:00.743"/>
</kw>
<status status="PASS" starttime="20250108 15:53:00.393" endtime="20250108 15:53:00.743"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.901" endtime="20250108 15:53:00.743"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.900" endtime="20250108 15:53:00.743"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:53:00.743" endtime="20250108 15:53:00.743"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.854" endtime="20250108 15:53:00.743"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.854" endtime="20250108 15:53:00.743"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create generated bucket" library="commonawslib">
<arg>${BUCKET_LAYOUT}</arg>
<kw name="Create bucket with layout" library="shell">
<var>${BUCKET}</var>
<arg>s3v</arg>
<arg>${layout}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:53:00.745" level="INFO">${postfix} = mlvacfazpv</msg>
<status status="PASS" starttime="20250108 15:53:00.744" endtime="20250108 15:53:00.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:53:00.745" level="INFO">${bucket} = bucket-mlvacfazpv</msg>
<status status="PASS" starttime="20250108 15:53:00.745" endtime="20250108 15:53:00.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --layout ${layout} ${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:00.748" level="INFO">Running command 'ozone sh bucket create --layout OBJECT_STORE s3v/bucket-mlvacfazpv 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:04.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:04.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:00.746" endtime="20250108 15:53:04.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:04.144" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:04.143" endtime="20250108 15:53:04.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:04.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:04.144" endtime="20250108 15:53:04.144"/>
</kw>
<status status="PASS" starttime="20250108 15:53:00.746" endtime="20250108 15:53:04.144"/>
</kw>
<msg timestamp="20250108 15:53:04.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:00.746" endtime="20250108 15:53:04.144"/>
</kw>
<msg timestamp="20250108 15:53:04.145" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:53:00.745" endtime="20250108 15:53:04.145"/>
</kw>
<msg timestamp="20250108 15:53:04.145" level="INFO">${BUCKET} = bucket-mlvacfazpv</msg>
<status status="PASS" starttime="20250108 15:53:00.744" endtime="20250108 15:53:04.145"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:53:04.145" level="INFO">${BUCKET} = bucket-mlvacfazpv</msg>
<status status="PASS" starttime="20250108 15:53:04.145" endtime="20250108 15:53:04.145"/>
</kw>
<status status="PASS" starttime="20250108 15:53:00.744" endtime="20250108 15:53:04.145"/>
</kw>
<status status="PASS" starttime="20250108 15:53:00.743" endtime="20250108 15:53:04.145"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:53:04.146" endtime="20250108 15:53:04.146"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:53:04.146" endtime="20250108 15:53:04.146"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:53:04.146" endtime="20250108 15:53:04.146"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:53:04.147" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20250108 15:53:04.146" endtime="20250108 15:53:04.147"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.844" endtime="20250108 15:53:04.147"/>
</kw>
<status status="PASS" starttime="20250108 15:52:55.844" endtime="20250108 15:53:04.147"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:04.150" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:05.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:05.804" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20250108 15:53:04.148" endtime="20250108 15:53:05.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:05.804" level="INFO">{
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20250108 15:53:05.804" endtime="20250108 15:53:05.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:05.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:05.805" endtime="20250108 15:53:05.805"/>
</kw>
<status status="PASS" starttime="20250108 15:53:04.147" endtime="20250108 15:53:05.805"/>
</kw>
<msg timestamp="20250108 15:53:05.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:04.147" endtime="20250108 15:53:05.805"/>
</kw>
<msg timestamp="20250108 15:53:05.805" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test123"
}</msg>
<status status="PASS" starttime="20250108 15:53:04.147" endtime="20250108 15:53:05.805"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:05.808" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:06.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:06.354" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-mlvacfazpv",
            "CreationDate": "2025-01-08T15:53:04.025Z"
        },
        {
            "Name": "bucket-test-owner1",
            ...</msg>
<status status="PASS" starttime="20250108 15:53:05.806" endtime="20250108 15:53:06.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:06.355" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-mlvacfazpv",
            "CreationDate": "2025-01-08T15:53:04.025Z"
        },
        {
            "Name": "bucket-test-owner1",
            "CreationDate": "2025-01-08T15:52:49.650Z"
        },
        {
            "Name": "bucket-test123",
            "CreationDate": "2025-01-08T15:53:05.718Z"
        }
    ],
    "Owner": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:53:06.354" endtime="20250108 15:53:06.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:06.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:06.355" endtime="20250108 15:53:06.355"/>
</kw>
<status status="PASS" starttime="20250108 15:53:05.806" endtime="20250108 15:53:06.356"/>
</kw>
<msg timestamp="20250108 15:53:06.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:05.806" endtime="20250108 15:53:06.356"/>
</kw>
<msg timestamp="20250108 15:53:06.356" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-mlvacfazpv",
            "CreationDate": "2025-01-08T15:53:04.025Z"
        },
        {
            "Name": "bucket-test-owner1",
            ...</msg>
<status status="PASS" starttime="20250108 15:53:05.805" endtime="20250108 15:53:06.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test123</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:06.356" endtime="20250108 15:53:06.356"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:52:55.844" endtime="20250108 15:53:06.356"/>
</test>
<test id="s1-s2-s4-t2" name="Secure S3 put-object test" line="43">
<kw name="Set Variable" library="BuiltIn">
<var>${testFilePath}</var>
<arg>${TEMPDIR}/${TEST_FILE}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:53:06.358" level="INFO">${testFilePath} = /tmp/NOTICE.txt</msg>
<status status="PASS" starttime="20250108 15:53:06.357" endtime="20250108 15:53:06.358"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>${TEST_FILE}</arg>
<arg>${testFilePath}</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20250108 15:53:06.359" level="INFO" html="true">Copied file from '&lt;a href="file:///opt/hadoop/NOTICE.txt"&gt;/opt/hadoop/NOTICE.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/NOTICE.txt"&gt;/tmp/NOTICE.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250108 15:53:06.358" endtime="20250108 15:53:06.359"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:06.362" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp1/tmp2/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:07.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:07.049" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250108 15:53:06.360" endtime="20250108 15:53:07.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:07.050" level="INFO">{
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250108 15:53:07.050" endtime="20250108 15:53:07.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:07.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:07.050" endtime="20250108 15:53:07.051"/>
</kw>
<status status="PASS" starttime="20250108 15:53:06.360" endtime="20250108 15:53:07.051"/>
</kw>
<msg timestamp="20250108 15:53:07.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:06.360" endtime="20250108 15:53:07.051"/>
</kw>
<msg timestamp="20250108 15:53:07.051" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250108 15:53:06.359" endtime="20250108 15:53:07.051"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:07.055" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:07.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:07.645" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:06.969Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20250108 15:53:07.052" endtime="20250108 15:53:07.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:07.646" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:06.969Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:53:07.645" endtime="20250108 15:53:07.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:07.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:07.646" endtime="20250108 15:53:07.646"/>
</kw>
<status status="PASS" starttime="20250108 15:53:07.052" endtime="20250108 15:53:07.647"/>
</kw>
<msg timestamp="20250108 15:53:07.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:07.052" endtime="20250108 15:53:07.647"/>
</kw>
<msg timestamp="20250108 15:53:07.647" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:06.969Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20250108 15:53:07.051" endtime="20250108 15:53:07.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp1/tmp2/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:07.647" endtime="20250108 15:53:07.647"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:07.650" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=tmp3//tmp4/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:08.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:08.843" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250108 15:53:07.648" endtime="20250108 15:53:08.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:08.843" level="INFO">{
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250108 15:53:08.843" endtime="20250108 15:53:08.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:08.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:08.844" endtime="20250108 15:53:08.844"/>
</kw>
<status status="PASS" starttime="20250108 15:53:07.648" endtime="20250108 15:53:08.844"/>
</kw>
<msg timestamp="20250108 15:53:08.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:07.648" endtime="20250108 15:53:08.844"/>
</kw>
<msg timestamp="20250108 15:53:08.844" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250108 15:53:07.647" endtime="20250108 15:53:08.844"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:08.847" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:09.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:09.416" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:06.969Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20250108 15:53:08.845" endtime="20250108 15:53:09.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:09.417" level="INFO">{
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:06.969Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:08.783Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:53:09.417" endtime="20250108 15:53:09.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:09.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:09.418" endtime="20250108 15:53:09.418"/>
</kw>
<status status="PASS" starttime="20250108 15:53:08.845" endtime="20250108 15:53:09.418"/>
</kw>
<msg timestamp="20250108 15:53:09.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:08.845" endtime="20250108 15:53:09.418"/>
</kw>
<msg timestamp="20250108 15:53:09.418" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:06.969Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
    ...</msg>
<status status="PASS" starttime="20250108 15:53:08.845" endtime="20250108 15:53:09.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tmp3//tmp4/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:09.419" endtime="20250108 15:53:09.419"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=${testFilePath}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:09.422" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 put-object --bucket=bucket-test123 --key=//tmp5/tmp6/NOTICE.txt --body=/tmp/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:10.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:10.588" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250108 15:53:09.420" endtime="20250108 15:53:10.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:10.589" level="INFO">{
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250108 15:53:10.589" endtime="20250108 15:53:10.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:10.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:10.589" endtime="20250108 15:53:10.590"/>
</kw>
<status status="PASS" starttime="20250108 15:53:09.420" endtime="20250108 15:53:10.590"/>
</kw>
<msg timestamp="20250108 15:53:10.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:09.419" endtime="20250108 15:53:10.590"/>
</kw>
<msg timestamp="20250108 15:53:10.590" level="INFO">${output} = {
    "ETag": "\"7043d02775954ed5d7ebc9906c655889\""
}</msg>
<status status="PASS" starttime="20250108 15:53:09.419" endtime="20250108 15:53:10.590"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint ${ENDPOINT_URL} list-objects --bucket=bucket-test123</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:10.593" level="INFO">Running command 'aws s3api --endpoint http://s3g:9878 list-objects --bucket=bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:11.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:11.150" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:10.519Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
  ...</msg>
<status status="PASS" starttime="20250108 15:53:10.591" endtime="20250108 15:53:11.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:11.151" level="INFO">{
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:10.519Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "tmp1/tmp2/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:06.969Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "tmp3//tmp4/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:08.783Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:53:11.151" endtime="20250108 15:53:11.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:11.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:11.151" endtime="20250108 15:53:11.152"/>
</kw>
<status status="PASS" starttime="20250108 15:53:10.591" endtime="20250108 15:53:11.152"/>
</kw>
<msg timestamp="20250108 15:53:11.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:10.591" endtime="20250108 15:53:11.152"/>
</kw>
<msg timestamp="20250108 15:53:11.152" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "//tmp5/tmp6/NOTICE.txt",
            "LastModified": "2025-01-08T15:53:10.519Z",
            "Size": 17289,
            "StorageClass": "STANDARD",
  ...</msg>
<status status="PASS" starttime="20250108 15:53:10.590" endtime="20250108 15:53:11.152"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>//tmp5/tmp6/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:11.153" endtime="20250108 15:53:11.153"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:06.357" endtime="20250108 15:53:11.153"/>
</test>
<test id="s1-s2-s4-t3" name="Secure S3 test Failure" line="56">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:11.157" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:11.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:11.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:11.155" endtime="20250108 15:53:11.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:11.519" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:11.519" endtime="20250108 15:53:11.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:11.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:11.520" endtime="20250108 15:53:11.520"/>
</kw>
<status status="PASS" starttime="20250108 15:53:11.155" endtime="20250108 15:53:11.520"/>
</kw>
<msg timestamp="20250108 15:53:11.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:11.155" endtime="20250108 15:53:11.520"/>
</kw>
<status status="PASS" starttime="20250108 15:53:11.154" endtime="20250108 15:53:11.520"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:11.523" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:11.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:11.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:11.521" endtime="20250108 15:53:11.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:11.890" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:11.890" endtime="20250108 15:53:11.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:11.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:11.891" endtime="20250108 15:53:11.891"/>
</kw>
<status status="PASS" starttime="20250108 15:53:11.521" endtime="20250108 15:53:11.891"/>
</kw>
<msg timestamp="20250108 15:53:11.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:11.521" endtime="20250108 15:53:11.891"/>
</kw>
<status status="PASS" starttime="20250108 15:53:11.520" endtime="20250108 15:53:11.891"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:11.894" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:12.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:12.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:11.892" endtime="20250108 15:53:12.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:12.249" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:12.249" endtime="20250108 15:53:12.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:12.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:12.249" endtime="20250108 15:53:12.250"/>
</kw>
<status status="PASS" starttime="20250108 15:53:11.892" endtime="20250108 15:53:12.250"/>
</kw>
<msg timestamp="20250108 15:53:12.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:11.892" endtime="20250108 15:53:12.250"/>
</kw>
<status status="PASS" starttime="20250108 15:53:11.891" endtime="20250108 15:53:12.250"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:12.254" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:12.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:12.608" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:12.251" endtime="20250108 15:53:12.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:12.609" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:12.608" endtime="20250108 15:53:12.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:12.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:12.609" endtime="20250108 15:53:12.609"/>
</kw>
<status status="PASS" starttime="20250108 15:53:12.251" endtime="20250108 15:53:12.610"/>
</kw>
<msg timestamp="20250108 15:53:12.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:12.251" endtime="20250108 15:53:12.610"/>
</kw>
<status status="PASS" starttime="20250108 15:53:12.250" endtime="20250108 15:53:12.610"/>
</kw>
<status status="PASS" starttime="20250108 15:53:11.154" endtime="20250108 15:53:12.610"/>
</kw>
<status status="PASS" starttime="20250108 15:53:11.154" endtime="20250108 15:53:12.610"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${result}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} create-bucket --bucket bucket-test123</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:12.612" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test123 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:13.268" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:53:13.268" level="INFO">${result} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250108 15:53:12.610" endtime="20250108 15:53:13.268"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250108 15:53:13.269" endtime="20250108 15:53:13.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:11.153" endtime="20250108 15:53:13.269"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20250108 15:52:55.836" endtime="20250108 15:53:13.270"/>
</suite>
<suite id="s1-s2-s5" name="Ozone-Secure-Tenant" source="/opt/hadoop/smoketest/security/ozone-secure-tenant.robot">
<test id="s1-s2-s5-t1" name="Create Tenant Success with Cluster Admin" line="30">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:53:13.280" endtime="20250108 15:53:13.280"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:13.283" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:13.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:13.287" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:53:13.281" endtime="20250108 15:53:13.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:13.288" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:53:13.287" endtime="20250108 15:53:13.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:13.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:13.288" endtime="20250108 15:53:13.288"/>
</kw>
<status status="PASS" starttime="20250108 15:53:13.281" endtime="20250108 15:53:13.288"/>
</kw>
<msg timestamp="20250108 15:53:13.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:13.281" endtime="20250108 15:53:13.289"/>
</kw>
<msg timestamp="20250108 15:53:13.289" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:53:13.281" endtime="20250108 15:53:13.289"/>
</kw>
<msg timestamp="20250108 15:53:13.289" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:53:13.280" endtime="20250108 15:53:13.289"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:53:13.289" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:53:13.289" endtime="20250108 15:53:13.289"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:13.292" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:13.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:13.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:13.291" endtime="20250108 15:53:13.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:13.319" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:13.318" endtime="20250108 15:53:13.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:13.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:13.319" endtime="20250108 15:53:13.320"/>
</kw>
<status status="PASS" starttime="20250108 15:53:13.290" endtime="20250108 15:53:13.320"/>
</kw>
<msg timestamp="20250108 15:53:13.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:13.290" endtime="20250108 15:53:13.320"/>
</kw>
<status status="PASS" starttime="20250108 15:53:13.290" endtime="20250108 15:53:13.320"/>
</kw>
<status status="PASS" starttime="20250108 15:53:13.289" endtime="20250108 15:53:13.320"/>
</kw>
<status status="PASS" starttime="20250108 15:53:13.280" endtime="20250108 15:53:13.320"/>
</kw>
<status status="PASS" starttime="20250108 15:53:13.279" endtime="20250108 15:53:13.320"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose create tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:13.323" level="INFO">Running command 'ozone tenant --verbose create tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:16.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:16.655" level="INFO">${output} = {
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250108 15:53:13.321" endtime="20250108 15:53:16.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:16.656" level="INFO">{
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250108 15:53:16.655" endtime="20250108 15:53:16.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:16.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:16.656" endtime="20250108 15:53:16.656"/>
</kw>
<status status="PASS" starttime="20250108 15:53:13.321" endtime="20250108 15:53:16.657"/>
</kw>
<msg timestamp="20250108 15:53:16.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:13.321" endtime="20250108 15:53:16.657"/>
</kw>
<msg timestamp="20250108 15:53:16.657" level="INFO">${output} = {
  "tenantId" : "tenantone"
}</msg>
<status status="PASS" starttime="20250108 15:53:13.320" endtime="20250108 15:53:16.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantId" : "tenantone"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:16.657" endtime="20250108 15:53:16.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:13.279" endtime="20250108 15:53:16.657"/>
</test>
<test id="s1-s2-s5-t2" name="Assign User Success with Cluster Admin" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user assign testuser --tenant=tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:16.661" level="INFO">Running command 'ozone tenant --verbose user assign testuser --tenant=tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:20.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:20.029" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='91652b4cdc896fb60ca0ebe4d2ad85d77d4e6392ca09a5fd8f24b6fdc34eb530'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20250108 15:53:16.659" endtime="20250108 15:53:20.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:20.030" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='91652b4cdc896fb60ca0ebe4d2ad85d77d4e6392ca09a5fd8f24b6fdc34eb530'
Assigned 'testuser' to 'tenantone' with accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250108 15:53:20.029" endtime="20250108 15:53:20.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:20.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:20.030" endtime="20250108 15:53:20.030"/>
</kw>
<status status="PASS" starttime="20250108 15:53:16.659" endtime="20250108 15:53:20.030"/>
</kw>
<msg timestamp="20250108 15:53:20.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:16.659" endtime="20250108 15:53:20.030"/>
</kw>
<msg timestamp="20250108 15:53:20.030" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='91652b4cdc896fb60ca0ebe4d2ad85d77d4e6392ca09a5fd8f24b6fdc34eb530'
Assigned 'testuser' to 'tenantone' with accessId 'tenanton...</msg>
<status status="PASS" starttime="20250108 15:53:16.658" endtime="20250108 15:53:20.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Assigned 'testuser' to 'tenantone'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:20.031" endtime="20250108 15:53:20.031"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessId}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_ACCESS_KEY_ID=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 15:53:20.031" level="INFO">${accessId} = ["'tenantone$testuser'"]</msg>
<status status="PASS" starttime="20250108 15:53:20.031" endtime="20250108 15:53:20.031"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secretKey}</var>
<arg>${output}</arg>
<arg>(?&lt;=export AWS_SECRET_ACCESS_KEY=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 15:53:20.032" level="INFO">${secretKey} = ["'91652b4cdc896fb60ca0ebe4d2ad85d77d4e6392ca09a5fd8f24b6fdc34eb530'"]</msg>
<status status="PASS" starttime="20250108 15:53:20.032" endtime="20250108 15:53:20.032"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessId}</var>
<arg>${accessId[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:53:20.033" level="INFO">${accessId} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250108 15:53:20.032" endtime="20250108 15:53:20.033"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secretKey}</var>
<arg>${secretKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:53:20.034" level="INFO">${secretKey} = '91652b4cdc896fb60ca0ebe4d2ad85d77d4e6392ca09a5fd8f24b6fdc34eb530'</msg>
<status status="PASS" starttime="20250108 15:53:20.033" endtime="20250108 15:53:20.034"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${ACCESS_ID}</arg>
<arg>${accessId}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:53:20.034" level="INFO">${ACCESS_ID} = 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250108 15:53:20.034" endtime="20250108 15:53:20.034"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${SECRET_KEY}</arg>
<arg>${secretKey}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:53:20.034" level="INFO">${SECRET_KEY} = '91652b4cdc896fb60ca0ebe4d2ad85d77d4e6392ca09a5fd8f24b6fdc34eb530'</msg>
<status status="PASS" starttime="20250108 15:53:20.034" endtime="20250108 15:53:20.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:16.658" endtime="20250108 15:53:20.035"/>
</test>
<test id="s1-s2-s5-t3" name="Assign User Failure to Non-existent Tenant" line="45">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user assign testuser --tenant=thistenantdoesnotexist</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:20.038" level="INFO">Running command 'ozone tenant user assign testuser --tenant=thistenantdoesnotexist 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:23.264" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:53:23.264" level="INFO">${output} = TENANT_NOT_FOUND Tenant 'thistenantdoesnotexist' doesn't exist.</msg>
<status status="PASS" starttime="20250108 15:53:20.035" endtime="20250108 15:53:23.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'thistenantdoesnotexist' doesn't exist</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:23.265" endtime="20250108 15:53:23.265"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:20.035" endtime="20250108 15:53:23.266"/>
</test>
<test id="s1-s2-s5-t4" name="GetUserInfo Success" line="49">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:23.269" level="INFO">Running command 'ozone tenant user info testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:26.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:26.411" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250108 15:53:23.268" endtime="20250108 15:53:26.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:26.412" level="INFO">User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250108 15:53:26.412" endtime="20250108 15:53:26.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:26.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:26.412" endtime="20250108 15:53:26.413"/>
</kw>
<status status="PASS" starttime="20250108 15:53:23.267" endtime="20250108 15:53:26.413"/>
</kw>
<msg timestamp="20250108 15:53:26.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:23.267" endtime="20250108 15:53:26.413"/>
</kw>
<msg timestamp="20250108 15:53:26.413" level="INFO">${output} = User 'testuser' is assigned to:
- Tenant 'tenantone' with accessId 'tenantone$testuser'</msg>
<status status="PASS" starttime="20250108 15:53:23.266" endtime="20250108 15:53:26.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Tenant 'tenantone' with accessId 'tenantone$testuser'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:26.413" endtime="20250108 15:53:26.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:23.266" endtime="20250108 15:53:26.414"/>
</test>
<test id="s1-s2-s5-t5" name="GetUserInfo as JSON Success" line="53">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user info --json testuser | jq '.tenants | .[].accessId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:26.417" level="INFO">Running command 'ozone tenant user info --json testuser | jq '.tenants | .[].accessId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:30.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:30.055" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20250108 15:53:26.415" endtime="20250108 15:53:30.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:30.056" level="INFO">"tenantone$testuser"</msg>
<status status="PASS" starttime="20250108 15:53:30.056" endtime="20250108 15:53:30.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:30.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:30.056" endtime="20250108 15:53:30.057"/>
</kw>
<status status="PASS" starttime="20250108 15:53:26.415" endtime="20250108 15:53:30.057"/>
</kw>
<msg timestamp="20250108 15:53:30.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:26.415" endtime="20250108 15:53:30.057"/>
</kw>
<msg timestamp="20250108 15:53:30.057" level="INFO">${output} = "tenantone$testuser"</msg>
<status status="PASS" starttime="20250108 15:53:26.415" endtime="20250108 15:53:30.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"tenantone$testuser"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:30.057" endtime="20250108 15:53:30.058"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:26.414" endtime="20250108 15:53:30.058"/>
</test>
<test id="s1-s2-s5-t6" name="Create Bucket 1 Success via S3 API" line="57">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${ACCESS_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:30.062" level="INFO">Running command 'aws configure set aws_access_key_id 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:30.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:30.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:30.060" endtime="20250108 15:53:30.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:30.432" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:30.432" endtime="20250108 15:53:30.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:30.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:30.432" endtime="20250108 15:53:30.433"/>
</kw>
<status status="PASS" starttime="20250108 15:53:30.059" endtime="20250108 15:53:30.433"/>
</kw>
<msg timestamp="20250108 15:53:30.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:30.059" endtime="20250108 15:53:30.433"/>
</kw>
<status status="PASS" starttime="20250108 15:53:30.059" endtime="20250108 15:53:30.433"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${SECRET_KEY}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:30.436" level="INFO">Running command 'aws configure set aws_secret_access_key '91652b4cdc896fb60ca0ebe4d2ad85d77d4e6392ca09a5fd8f24b6fdc34eb530' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:30.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:30.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:30.434" endtime="20250108 15:53:30.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:30.814" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:30.814" endtime="20250108 15:53:30.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:30.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:30.815" endtime="20250108 15:53:30.815"/>
</kw>
<status status="PASS" starttime="20250108 15:53:30.434" endtime="20250108 15:53:30.815"/>
</kw>
<msg timestamp="20250108 15:53:30.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:30.434" endtime="20250108 15:53:30.815"/>
</kw>
<status status="PASS" starttime="20250108 15:53:30.433" endtime="20250108 15:53:30.815"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:30.818" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:31.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:31.335" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250108 15:53:30.816" endtime="20250108 15:53:31.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:31.336" level="INFO">{
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250108 15:53:31.335" endtime="20250108 15:53:31.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:31.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:31.336" endtime="20250108 15:53:31.336"/>
</kw>
<status status="PASS" starttime="20250108 15:53:30.816" endtime="20250108 15:53:31.336"/>
</kw>
<msg timestamp="20250108 15:53:31.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:30.816" endtime="20250108 15:53:31.336"/>
</kw>
<msg timestamp="20250108 15:53:31.337" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test1"
}</msg>
<status status="PASS" starttime="20250108 15:53:30.815" endtime="20250108 15:53:31.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:31.337" endtime="20250108 15:53:31.337"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} list-buckets</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:31.340" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:31.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:31.856" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-01-08T15:53:31.257Z"
        }
    ],
    "Owner": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:53:31.338" endtime="20250108 15:53:31.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:31.857" level="INFO">{
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-01-08T15:53:31.257Z"
        }
    ],
    "Owner": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:53:31.856" endtime="20250108 15:53:31.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:31.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:31.857" endtime="20250108 15:53:31.857"/>
</kw>
<status status="PASS" starttime="20250108 15:53:31.338" endtime="20250108 15:53:31.857"/>
</kw>
<msg timestamp="20250108 15:53:31.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:31.337" endtime="20250108 15:53:31.858"/>
</kw>
<msg timestamp="20250108 15:53:31.858" level="INFO">${output} = {
    "Buckets": [
        {
            "Name": "bucket-test1",
            "CreationDate": "2025-01-08T15:53:31.257Z"
        }
    ],
    "Owner": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:53:31.337" endtime="20250108 15:53:31.858"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:31.858" endtime="20250108 15:53:31.858"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:30.058" endtime="20250108 15:53:31.858"/>
</test>
<test id="s1-s2-s5-t7" name="Verify Bucket 1 Owner" line="65">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:31.862" level="INFO">Running command 'ozone sh bucket info /tenantone/bucket-test1 | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:35.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:35.628" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250108 15:53:31.860" endtime="20250108 15:53:35.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:35.628" level="INFO">testuser</msg>
<status status="PASS" starttime="20250108 15:53:35.628" endtime="20250108 15:53:35.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:35.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:35.629" endtime="20250108 15:53:35.629"/>
</kw>
<status status="PASS" starttime="20250108 15:53:31.860" endtime="20250108 15:53:35.629"/>
</kw>
<msg timestamp="20250108 15:53:35.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:31.859" endtime="20250108 15:53:35.629"/>
</kw>
<msg timestamp="20250108 15:53:35.629" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250108 15:53:31.859" endtime="20250108 15:53:35.629"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:53:35.629" endtime="20250108 15:53:35.630"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:31.859" endtime="20250108 15:53:35.630"/>
</test>
<test id="s1-s2-s5-t8" name="Put a key in the tenant bucket" line="69">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:35.634" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:53:35.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:35.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:35.631" endtime="20250108 15:53:35.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:35.636" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:35.636" endtime="20250108 15:53:35.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:35.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:35.636" endtime="20250108 15:53:35.637"/>
</kw>
<status status="PASS" starttime="20250108 15:53:35.631" endtime="20250108 15:53:35.637"/>
</kw>
<msg timestamp="20250108 15:53:35.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:35.631" endtime="20250108 15:53:35.637"/>
</kw>
<status status="PASS" starttime="20250108 15:53:35.631" endtime="20250108 15:53:35.637"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} put-object --bucket bucket-test1 --key mykey --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:35.640" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket bucket-test1 --key mykey --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:36.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:36.263" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:53:35.638" endtime="20250108 15:53:36.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:36.264" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:53:36.263" endtime="20250108 15:53:36.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:36.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:36.264" endtime="20250108 15:53:36.264"/>
</kw>
<status status="PASS" starttime="20250108 15:53:35.637" endtime="20250108 15:53:36.264"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:35.630" endtime="20250108 15:53:36.264"/>
</test>
<test id="s1-s2-s5-t9" name="Verify Object Owner" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /tenantone/bucket-test1/mykey | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:36.269" level="INFO">Running command 'ozone sh key info /tenantone/bucket-test1/mykey | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:40.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:40.235" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250108 15:53:36.267" endtime="20250108 15:53:40.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:40.236" level="INFO">testuser</msg>
<status status="PASS" starttime="20250108 15:53:40.236" endtime="20250108 15:53:40.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:40.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:40.236" endtime="20250108 15:53:40.237"/>
</kw>
<status status="PASS" starttime="20250108 15:53:36.266" endtime="20250108 15:53:40.237"/>
</kw>
<msg timestamp="20250108 15:53:40.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:36.266" endtime="20250108 15:53:40.237"/>
</kw>
<msg timestamp="20250108 15:53:40.237" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250108 15:53:36.266" endtime="20250108 15:53:40.237"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:53:40.237" endtime="20250108 15:53:40.238"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:36.265" endtime="20250108 15:53:40.238"/>
</test>
<test id="s1-s2-s5-t10" name="Get and delete a key in the tenant bucket" line="77">
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} head-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:40.241" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:40.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:40.761" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:53:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:53:40.239" endtime="20250108 15:53:40.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:40.761" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:53:36 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:53:40 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:53:40 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:53:40.761" endtime="20250108 15:53:40.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:40.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:40.762" endtime="20250108 15:53:40.762"/>
</kw>
<status status="PASS" starttime="20250108 15:53:40.239" endtime="20250108 15:53:40.762"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-object --bucket bucket-test1 --key mykey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:40.765" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket bucket-test1 --key mykey 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:41.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:41.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:40.763" endtime="20250108 15:53:41.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:41.293" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:41.293" endtime="20250108 15:53:41.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:41.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:41.294" endtime="20250108 15:53:41.294"/>
</kw>
<status status="PASS" starttime="20250108 15:53:40.762" endtime="20250108 15:53:41.294"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:40.238" endtime="20250108 15:53:41.294"/>
</test>
<test id="s1-s2-s5-t11" name="SetSecret Success with Cluster Admin" line="81">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:41.298" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=somesecret1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:44.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:44.602" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250108 15:53:41.296" endtime="20250108 15:53:44.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:44.603" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250108 15:53:44.602" endtime="20250108 15:53:44.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:44.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:44.603" endtime="20250108 15:53:44.604"/>
</kw>
<status status="PASS" starttime="20250108 15:53:41.296" endtime="20250108 15:53:44.604"/>
</kw>
<msg timestamp="20250108 15:53:44.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:41.295" endtime="20250108 15:53:44.604"/>
</kw>
<msg timestamp="20250108 15:53:44.604" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250108 15:53:41.295" endtime="20250108 15:53:44.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:44.604" endtime="20250108 15:53:44.604"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:41.295" endtime="20250108 15:53:44.604"/>
</test>
<test id="s1-s2-s5-t12" name="SetSecret Failure For Invalid Secret 1" line="85">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=''</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:44.608" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret='' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:47.995" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:53:47.995" level="INFO">${output} = secretKey cannot be null or empty.</msg>
<status status="PASS" starttime="20250108 15:53:44.605" endtime="20250108 15:53:47.995"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>secretKey cannot be null or empty.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:47.995" endtime="20250108 15:53:47.996"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:44.605" endtime="20250108 15:53:47.996"/>
</test>
<test id="s1-s2-s5-t13" name="SetSecret Failure For Invalid Secret 2" line="89">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user setsecret 'tenantone$testuser' --secret=short</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:47.999" level="INFO">Running command 'ozone tenant user setsecret 'tenantone$testuser' --secret=short 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:51.358" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:53:51.358" level="INFO">${output} = INVALID_REQUEST Secret key length should be at least 8 characters</msg>
<status status="PASS" starttime="20250108 15:53:47.997" endtime="20250108 15:53:51.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Secret key length should be at least 8 characters</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:51.358" endtime="20250108 15:53:51.359"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:47.997" endtime="20250108 15:53:51.359"/>
</test>
<test id="s1-s2-s5-t14" name="GetSecret Success" line="93">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant user getsecret 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:51.363" level="INFO">Running command 'ozone tenant user getsecret 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:54.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:54.573" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250108 15:53:51.361" endtime="20250108 15:53:54.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:54.574" level="INFO">export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250108 15:53:54.574" endtime="20250108 15:53:54.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:54.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:54.575" endtime="20250108 15:53:54.575"/>
</kw>
<status status="PASS" starttime="20250108 15:53:51.361" endtime="20250108 15:53:54.575"/>
</kw>
<msg timestamp="20250108 15:53:54.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:51.360" endtime="20250108 15:53:54.575"/>
</kw>
<msg timestamp="20250108 15:53:54.575" level="INFO">${output} = export AWS_ACCESS_KEY_ID='tenantone$testuser'
export AWS_SECRET_ACCESS_KEY='somesecret1'</msg>
<status status="PASS" starttime="20250108 15:53:51.360" endtime="20250108 15:53:54.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>export AWS_SECRET_ACCESS_KEY='somesecret1'</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:54.575" endtime="20250108 15:53:54.576"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:51.360" endtime="20250108 15:53:54.576"/>
</test>
<test id="s1-s2-s5-t15" name="Delete Bucket 1 Failure With Old SecretKey via S3 API" line="97">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:54.579" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:55.093" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:53:55.094" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250108 15:53:54.577" endtime="20250108 15:53:55.094"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250108 15:53:55.094" endtime="20250108 15:53:55.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:54.576" endtime="20250108 15:53:55.095"/>
</test>
<test id="s1-s2-s5-t16" name="Delete Bucket 1 Success With Newly Set SecretKey via S3 API" line="101">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:55.099" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:55.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:55.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:55.097" endtime="20250108 15:53:55.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:55.452" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:55.452" endtime="20250108 15:53:55.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:55.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:55.453" endtime="20250108 15:53:55.453"/>
</kw>
<status status="PASS" starttime="20250108 15:53:55.096" endtime="20250108 15:53:55.453"/>
</kw>
<msg timestamp="20250108 15:53:55.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:55.096" endtime="20250108 15:53:55.453"/>
</kw>
<status status="PASS" starttime="20250108 15:53:55.096" endtime="20250108 15:53:55.453"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:55.457" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:55.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:53:55.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:55.455" endtime="20250108 15:53:55.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:53:55.964" level="INFO"/>
<status status="PASS" starttime="20250108 15:53:55.964" endtime="20250108 15:53:55.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:53:55.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:53:55.965" endtime="20250108 15:53:55.965"/>
</kw>
<status status="PASS" starttime="20250108 15:53:55.454" endtime="20250108 15:53:55.965"/>
</kw>
<msg timestamp="20250108 15:53:55.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:53:55.454" endtime="20250108 15:53:55.965"/>
</kw>
<msg timestamp="20250108 15:53:55.965" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:53:55.453" endtime="20250108 15:53:55.965"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:55.095" endtime="20250108 15:53:55.966"/>
</test>
<test id="s1-s2-s5-t17" name="Delete Tenant Failure Tenant Not Empty" line="105">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:55.968" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:53:59.186" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:53:59.186" level="INFO">${output} = TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</msg>
<status status="PASS" starttime="20250108 15:53:55.966" endtime="20250108 15:53:59.186"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>TENANT_NOT_EMPTY Tenant 'tenantone' is not empty. All accessIds associated to this tenant must be revoked before the tenant can be deleted. See `ozone tenant user revoke`</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:53:59.187" endtime="20250108 15:53:59.187"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:55.966" endtime="20250108 15:53:59.187"/>
</test>
<test id="s1-s2-s5-t18" name="Trigger and wait for background Sync to recover Policies and Roles in Authorizer" line="109">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone admin om updateranger -host=om</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:53:59.191" level="INFO">Running command 'ozone admin om updateranger -host=om 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:02.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:02.127" level="INFO">${output} = Operation completed successfully</msg>
<status status="PASS" starttime="20250108 15:53:59.189" endtime="20250108 15:54:02.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Operation completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:02.127" endtime="20250108 15:54:02.128"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:53:59.188" endtime="20250108 15:54:02.128"/>
</test>
<test id="s1-s2-s5-t19" name="Create Tenant Failure with Regular User" line="113">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:54:02.129" endtime="20250108 15:54:02.130"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:02.133" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:02.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:02.137" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:54:02.131" endtime="20250108 15:54:02.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:02.137" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:54:02.137" endtime="20250108 15:54:02.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:02.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:02.137" endtime="20250108 15:54:02.138"/>
</kw>
<status status="PASS" starttime="20250108 15:54:02.130" endtime="20250108 15:54:02.138"/>
</kw>
<msg timestamp="20250108 15:54:02.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:02.130" endtime="20250108 15:54:02.138"/>
</kw>
<msg timestamp="20250108 15:54:02.138" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:54:02.130" endtime="20250108 15:54:02.138"/>
</kw>
<msg timestamp="20250108 15:54:02.138" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:02.130" endtime="20250108 15:54:02.138"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:54:02.139" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:02.138" endtime="20250108 15:54:02.139"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:02.153" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:02.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:02.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:02.140" endtime="20250108 15:54:02.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:02.180" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:02.179" endtime="20250108 15:54:02.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:02.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:02.180" endtime="20250108 15:54:02.180"/>
</kw>
<status status="PASS" starttime="20250108 15:54:02.140" endtime="20250108 15:54:02.180"/>
</kw>
<msg timestamp="20250108 15:54:02.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:02.139" endtime="20250108 15:54:02.180"/>
</kw>
<status status="PASS" starttime="20250108 15:54:02.139" endtime="20250108 15:54:02.180"/>
</kw>
<status status="PASS" starttime="20250108 15:54:02.139" endtime="20250108 15:54:02.180"/>
</kw>
<status status="PASS" starttime="20250108 15:54:02.129" endtime="20250108 15:54:02.180"/>
</kw>
<status status="PASS" starttime="20250108 15:54:02.129" endtime="20250108 15:54:02.181"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant create tenanttwo</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:02.183" level="INFO">Running command 'ozone tenant create tenanttwo 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:05.183" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:54:05.183" level="INFO">${output} = PERMISSION_DENIED User 'testuser2' is not an Ozone admin</msg>
<status status="PASS" starttime="20250108 15:54:02.181" endtime="20250108 15:54:05.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>PERMISSION_DENIED User 'testuser2' is not an Ozone admin</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:05.184" endtime="20250108 15:54:05.184"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:02.128" endtime="20250108 15:54:05.185"/>
</test>
<test id="s1-s2-s5-t20" name="SetSecret Failure with Regular User" line="118">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:05.188" level="INFO">Running command 'ozone tenant user set-secret 'tenantone$testuser' --secret=somesecret2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:08.286" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:54:08.286" level="INFO">${output} = USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</msg>
<status status="PASS" starttime="20250108 15:54:05.186" endtime="20250108 15:54:08.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>USER_MISMATCH Requested accessId 'tenantone$testuser' doesn't belong to current user 'testuser2', nor does current user have Ozone or tenant administrator privilege</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:08.287" endtime="20250108 15:54:08.287"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:05.185" endtime="20250108 15:54:08.287"/>
</test>
<test id="s1-s2-s5-t21" name="Create Bucket 2 Success with somesecret1 via S3 API" line="122">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:08.291" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:08.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:08.801" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250108 15:54:08.289" endtime="20250108 15:54:08.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:08.802" level="INFO">{
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250108 15:54:08.801" endtime="20250108 15:54:08.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:08.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:08.802" endtime="20250108 15:54:08.802"/>
</kw>
<status status="PASS" starttime="20250108 15:54:08.289" endtime="20250108 15:54:08.802"/>
</kw>
<msg timestamp="20250108 15:54:08.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:08.289" endtime="20250108 15:54:08.803"/>
</kw>
<msg timestamp="20250108 15:54:08.803" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-test2"
}</msg>
<status status="PASS" starttime="20250108 15:54:08.288" endtime="20250108 15:54:08.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>bucket-test2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:08.803" endtime="20250108 15:54:08.803"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:08.288" endtime="20250108 15:54:08.803"/>
</test>
<test id="s1-s2-s5-t22" name="Delete Bucket 2 Failure with somesecret2 via S3 API" line="126">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret2'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:08.807" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret2' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:09.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:09.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:08.805" endtime="20250108 15:54:09.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:09.171" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:09.170" endtime="20250108 15:54:09.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:09.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:09.171" endtime="20250108 15:54:09.171"/>
</kw>
<status status="PASS" starttime="20250108 15:54:08.805" endtime="20250108 15:54:09.171"/>
</kw>
<msg timestamp="20250108 15:54:09.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:08.804" endtime="20250108 15:54:09.172"/>
</kw>
<status status="PASS" starttime="20250108 15:54:08.804" endtime="20250108 15:54:09.172"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:09.174" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:09.670" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:54:09.670" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the DeleteBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250108 15:54:09.172" endtime="20250108 15:54:09.670"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250108 15:54:09.671" endtime="20250108 15:54:09.671"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:08.804" endtime="20250108 15:54:09.671"/>
</test>
<test id="s1-s2-s5-t23" name="Delete Bucket 2 Success with somesecret1 via S3 API" line="131">
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key 'somesecret1'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:09.676" level="INFO">Running command 'aws configure set aws_secret_access_key 'somesecret1' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:10.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:10.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:09.674" endtime="20250108 15:54:10.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:10.054" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:10.054" endtime="20250108 15:54:10.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:10.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:10.054" endtime="20250108 15:54:10.055"/>
</kw>
<status status="PASS" starttime="20250108 15:54:09.673" endtime="20250108 15:54:10.055"/>
</kw>
<msg timestamp="20250108 15:54:10.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:09.673" endtime="20250108 15:54:10.055"/>
</kw>
<status status="PASS" starttime="20250108 15:54:09.672" endtime="20250108 15:54:10.055"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} delete-bucket --bucket bucket-test2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:10.058" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-test2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:10.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:10.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:10.056" endtime="20250108 15:54:10.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:10.566" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:10.566" endtime="20250108 15:54:10.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:10.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:10.567" endtime="20250108 15:54:10.567"/>
</kw>
<status status="PASS" starttime="20250108 15:54:10.056" endtime="20250108 15:54:10.567"/>
</kw>
<msg timestamp="20250108 15:54:10.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:10.056" endtime="20250108 15:54:10.567"/>
</kw>
<msg timestamp="20250108 15:54:10.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:10.055" endtime="20250108 15:54:10.567"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:09.672" endtime="20250108 15:54:10.567"/>
</test>
<test id="s1-s2-s5-t24" name="Revoke User AccessId Success with Cluster Admin" line="135">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:54:10.569" endtime="20250108 15:54:10.569"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:10.572" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:10.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:10.576" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:54:10.570" endtime="20250108 15:54:10.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:10.577" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:54:10.576" endtime="20250108 15:54:10.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:10.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:10.577" endtime="20250108 15:54:10.577"/>
</kw>
<status status="PASS" starttime="20250108 15:54:10.570" endtime="20250108 15:54:10.577"/>
</kw>
<msg timestamp="20250108 15:54:10.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:10.570" endtime="20250108 15:54:10.577"/>
</kw>
<msg timestamp="20250108 15:54:10.577" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:54:10.569" endtime="20250108 15:54:10.577"/>
</kw>
<msg timestamp="20250108 15:54:10.578" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:10.569" endtime="20250108 15:54:10.578"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:54:10.578" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:10.578" endtime="20250108 15:54:10.578"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:10.582" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:10.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:10.603" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:10.580" endtime="20250108 15:54:10.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:10.604" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:10.604" endtime="20250108 15:54:10.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:10.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:10.604" endtime="20250108 15:54:10.605"/>
</kw>
<status status="PASS" starttime="20250108 15:54:10.579" endtime="20250108 15:54:10.605"/>
</kw>
<msg timestamp="20250108 15:54:10.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:10.579" endtime="20250108 15:54:10.605"/>
</kw>
<status status="PASS" starttime="20250108 15:54:10.578" endtime="20250108 15:54:10.605"/>
</kw>
<status status="PASS" starttime="20250108 15:54:10.578" endtime="20250108 15:54:10.605"/>
</kw>
<status status="PASS" starttime="20250108 15:54:10.569" endtime="20250108 15:54:10.605"/>
</kw>
<status status="PASS" starttime="20250108 15:54:10.568" endtime="20250108 15:54:10.605"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant --verbose user revoke 'tenantone$testuser'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:10.609" level="INFO">Running command 'ozone tenant --verbose user revoke 'tenantone$testuser' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:13.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:13.870" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250108 15:54:10.606" endtime="20250108 15:54:13.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:13.871" level="INFO">Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250108 15:54:13.870" endtime="20250108 15:54:13.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:13.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:13.871" endtime="20250108 15:54:13.871"/>
</kw>
<status status="PASS" starttime="20250108 15:54:10.606" endtime="20250108 15:54:13.872"/>
</kw>
<msg timestamp="20250108 15:54:13.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:10.606" endtime="20250108 15:54:13.872"/>
</kw>
<msg timestamp="20250108 15:54:13.872" level="INFO">${output} = Revoked accessId 'tenantone$testuser'.</msg>
<status status="PASS" starttime="20250108 15:54:10.605" endtime="20250108 15:54:13.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Revoked accessId 'tenantone$testuser'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:13.872" endtime="20250108 15:54:13.872"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:10.568" endtime="20250108 15:54:13.872"/>
</test>
<test id="s1-s2-s5-t25" name="Create Bucket 3 Failure with Revoked AccessId via S3 API" line="140">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>aws s3api --endpoint-url ${S3G_ENDPOINT_URL} create-bucket --bucket bucket-test3</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:13.875" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-test3 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:14.524" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:54:14.524" level="INFO">${output} = 
An error occurred (AccessDenied) when calling the CreateBucket operation: User doesn't have the right to access this resource.</msg>
<status status="PASS" starttime="20250108 15:54:13.873" endtime="20250108 15:54:14.524"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${rc} &gt; 0</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20250108 15:54:14.524" endtime="20250108 15:54:14.525"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:13.873" endtime="20250108 15:54:14.525"/>
</test>
<test id="s1-s2-s5-t26" name="Delete Tenant Success with Cluster Admin" line="144">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:14.529" level="INFO">Running command 'ozone tenant delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:17.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:17.488" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250108 15:54:14.527" endtime="20250108 15:54:17.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:17.489" level="INFO">Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250108 15:54:17.489" endtime="20250108 15:54:17.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:17.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:17.489" endtime="20250108 15:54:17.490"/>
</kw>
<status status="PASS" starttime="20250108 15:54:14.527" endtime="20250108 15:54:17.490"/>
</kw>
<msg timestamp="20250108 15:54:17.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:14.526" endtime="20250108 15:54:17.490"/>
</kw>
<msg timestamp="20250108 15:54:17.490" level="INFO">${output} = Deleted tenant 'tenantone'.
But the associated volume 'tenantone' is not removed. To delete it, run
    ozone sh volume delete tenantone
</msg>
<status status="PASS" starttime="20250108 15:54:14.526" endtime="20250108 15:54:17.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Deleted tenant 'tenantone'.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:17.490" endtime="20250108 15:54:17.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:14.526" endtime="20250108 15:54:17.491"/>
</test>
<test id="s1-s2-s5-t27" name="Delete Volume Success with Cluster Admin" line="148">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume delete tenantone</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:17.495" level="INFO">Running command 'ozone sh volume delete tenantone 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:20.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:20.805" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250108 15:54:17.492" endtime="20250108 15:54:20.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:20.806" level="INFO">Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250108 15:54:20.806" endtime="20250108 15:54:20.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:20.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:20.806" endtime="20250108 15:54:20.807"/>
</kw>
<status status="PASS" starttime="20250108 15:54:17.492" endtime="20250108 15:54:20.807"/>
</kw>
<msg timestamp="20250108 15:54:20.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:17.492" endtime="20250108 15:54:20.807"/>
</kw>
<msg timestamp="20250108 15:54:20.807" level="INFO">${output} = Volume tenantone is deleted</msg>
<status status="PASS" starttime="20250108 15:54:17.491" endtime="20250108 15:54:20.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Volume tenantone is deleted</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:20.807" endtime="20250108 15:54:20.808"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:17.491" endtime="20250108 15:54:20.808"/>
</test>
<test id="s1-s2-s5-t28" name="List Tenant Expect Empty Result" line="152">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone tenant list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:20.812" level="INFO">Running command 'ozone tenant list 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:24.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:24.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:20.810" endtime="20250108 15:54:24.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:24.132" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:24.131" endtime="20250108 15:54:24.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:24.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:24.132" endtime="20250108 15:54:24.132"/>
</kw>
<status status="PASS" starttime="20250108 15:54:20.809" endtime="20250108 15:54:24.133"/>
</kw>
<msg timestamp="20250108 15:54:24.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:20.809" endtime="20250108 15:54:24.133"/>
</kw>
<msg timestamp="20250108 15:54:24.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:20.809" endtime="20250108 15:54:24.133"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>tenantone</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:24.133" endtime="20250108 15:54:24.133"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:20.808" endtime="20250108 15:54:24.134"/>
</test>
<doc>Smoke test for ozone secure tenant commands</doc>
<status status="PASS" starttime="20250108 15:53:13.271" endtime="20250108 15:54:24.135"/>
</suite>
<suite id="s1-s2-s6" name="Ozone-Secure-Token" source="/opt/hadoop/smoketest/security/ozone-secure-token.robot">
<test id="s1-s2-s6-t1" name="Token Test" line="85">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Token Test in Unsecure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:54:24.145" endtime="20250108 15:54:24.145"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Token Test in Secure Cluster</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Token Test in Secure Cluster">
<kw name="Get and use Token in Secure Cluster">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:54:24.146" endtime="20250108 15:54:24.147"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:24.150" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:24.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:24.154" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:54:24.148" endtime="20250108 15:54:24.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:24.155" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:54:24.154" endtime="20250108 15:54:24.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:24.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:24.155" endtime="20250108 15:54:24.155"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.147" endtime="20250108 15:54:24.155"/>
</kw>
<msg timestamp="20250108 15:54:24.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:24.147" endtime="20250108 15:54:24.155"/>
</kw>
<msg timestamp="20250108 15:54:24.155" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:54:24.147" endtime="20250108 15:54:24.156"/>
</kw>
<msg timestamp="20250108 15:54:24.156" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:24.147" endtime="20250108 15:54:24.156"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:54:24.156" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:24.156" endtime="20250108 15:54:24.156"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:24.160" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:24.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:24.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:24.158" endtime="20250108 15:54:24.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:24.188" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:24.188" endtime="20250108 15:54:24.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:24.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:24.188" endtime="20250108 15:54:24.189"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.157" endtime="20250108 15:54:24.189"/>
</kw>
<msg timestamp="20250108 15:54:24.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:24.157" endtime="20250108 15:54:24.189"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.157" endtime="20250108 15:54:24.189"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.156" endtime="20250108 15:54:24.189"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.146" endtime="20250108 15:54:24.189"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.146" endtime="20250108 15:54:24.189"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh token get -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:24.192" level="INFO">Running command 'ozone sh token get -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:27.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:27.330" level="INFO">${output} = Successfully get token for service 172.19.0.10:9862
Kind: OzoneToken, Service: 172.19.0.10:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-01-08T15...</msg>
<status status="PASS" starttime="20250108 15:54:24.190" endtime="20250108 15:54:27.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:27.331" level="INFO">Successfully get token for service 172.19.0.10:9862
Kind: OzoneToken, Service: 172.19.0.10:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-01-08T15:54:27.217Z, maxDate=2025-01-15T15:54:27.217Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=ec78c8d6-116d-45d1-8565-f5a491dfed03)
Token persisted to /tmp/ozone.token successfully!</msg>
<status status="PASS" starttime="20250108 15:54:27.331" endtime="20250108 15:54:27.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:27.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:27.331" endtime="20250108 15:54:27.332"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.190" endtime="20250108 15:54:27.332"/>
</kw>
<msg timestamp="20250108 15:54:27.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:24.190" endtime="20250108 15:54:27.332"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.189" endtime="20250108 15:54:27.332"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${TOKEN_FILE}</arg>
<doc>Fails if the specified file is empty.</doc>
<msg timestamp="20250108 15:54:27.332" level="INFO" html="true">File '&lt;a href="file:///tmp/ozone.token"&gt;/tmp/ozone.token&lt;/a&gt;' contains 203 bytes.</msg>
<status status="PASS" starttime="20250108 15:54:27.332" endtime="20250108 15:54:27.332"/>
</kw>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:27.335" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:27.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:27.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:27.333" endtime="20250108 15:54:27.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:27.340" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:27.340" endtime="20250108 15:54:27.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:27.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:27.340" endtime="20250108 15:54:27.341"/>
</kw>
<status status="PASS" starttime="20250108 15:54:27.333" endtime="20250108 15:54:27.341"/>
</kw>
<msg timestamp="20250108 15:54:27.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:27.333" endtime="20250108 15:54:27.341"/>
</kw>
<status status="PASS" starttime="20250108 15:54:27.332" endtime="20250108 15:54:27.341"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<arg>${TOKEN_FILE}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250108 15:54:27.341" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' set to value '/tmp/ozone.token'.</msg>
<status status="PASS" starttime="20250108 15:54:27.341" endtime="20250108 15:54:27.341"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:27.344" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:30.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:30.882" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250108 15:54:27.342" endtime="20250108 15:54:30.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:30.883" level="INFO">[ ]</msg>
<status status="PASS" starttime="20250108 15:54:30.882" endtime="20250108 15:54:30.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:30.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:30.883" endtime="20250108 15:54:30.883"/>
</kw>
<status status="PASS" starttime="20250108 15:54:27.342" endtime="20250108 15:54:30.883"/>
</kw>
<msg timestamp="20250108 15:54:30.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:27.342" endtime="20250108 15:54:30.884"/>
</kw>
<msg timestamp="20250108 15:54:30.884" level="INFO">${output} = [ ]</msg>
<status status="PASS" starttime="20250108 15:54:27.341" endtime="20250108 15:54:30.884"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:30.884" endtime="20250108 15:54:30.884"/>
</kw>
<kw name="Remove Environment Variable" library="OperatingSystem">
<arg>HADOOP_TOKEN_FILE_LOCATION</arg>
<doc>Deletes the specified environment variable.</doc>
<msg timestamp="20250108 15:54:30.884" level="INFO">Environment variable 'HADOOP_TOKEN_FILE_LOCATION' deleted.</msg>
<status status="PASS" starttime="20250108 15:54:30.884" endtime="20250108 15:54:30.884"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume list /</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:30.887" level="INFO">Running command 'ozone sh volume list / 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:33.311" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:54:33.311" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250108 15:54:30.885" endtime="20250108 15:54:33.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:33.312" level="INFO">org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250108 15:54:33.311" endtime="20250108 15:54:33.312"/>
</kw>
<msg timestamp="20250108 15:54:33.312" level="INFO">${output} = org.apache.hadoop.security.AccessControlException: Client cannot authenticate via:[TOKEN, KERBEROS]</msg>
<status status="PASS" starttime="20250108 15:54:30.884" endtime="20250108 15:54:33.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Client cannot authenticate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:33.312" endtime="20250108 15:54:33.312"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:54:33.313" endtime="20250108 15:54:33.313"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:33.316" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:33.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:33.320" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:54:33.314" endtime="20250108 15:54:33.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:33.321" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:54:33.320" endtime="20250108 15:54:33.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:33.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:33.321" endtime="20250108 15:54:33.321"/>
</kw>
<status status="PASS" starttime="20250108 15:54:33.314" endtime="20250108 15:54:33.321"/>
</kw>
<msg timestamp="20250108 15:54:33.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:33.314" endtime="20250108 15:54:33.321"/>
</kw>
<msg timestamp="20250108 15:54:33.322" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:54:33.313" endtime="20250108 15:54:33.322"/>
</kw>
<msg timestamp="20250108 15:54:33.322" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:33.313" endtime="20250108 15:54:33.322"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:54:33.322" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:33.322" endtime="20250108 15:54:33.322"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:33.325" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:33.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:33.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:33.323" endtime="20250108 15:54:33.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:33.351" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:33.350" endtime="20250108 15:54:33.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:33.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:33.351" endtime="20250108 15:54:33.351"/>
</kw>
<status status="PASS" starttime="20250108 15:54:33.323" endtime="20250108 15:54:33.351"/>
</kw>
<msg timestamp="20250108 15:54:33.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:33.323" endtime="20250108 15:54:33.351"/>
</kw>
<status status="PASS" starttime="20250108 15:54:33.323" endtime="20250108 15:54:33.351"/>
</kw>
<status status="PASS" starttime="20250108 15:54:33.322" endtime="20250108 15:54:33.351"/>
</kw>
<status status="PASS" starttime="20250108 15:54:33.313" endtime="20250108 15:54:33.352"/>
</kw>
<status status="PASS" starttime="20250108 15:54:33.312" endtime="20250108 15:54:33.352"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.146" endtime="20250108 15:54:33.352"/>
</kw>
<kw name="Print Valid Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:33.355" level="INFO">Running command 'ozone sh token print -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:34.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:34.826" level="INFO">${output} = Kind: OzoneToken, Service: 172.19.0.10:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-01-08T15:54:27.217Z, maxDate=2025-01-15T15:54:27.217Z, seque...</msg>
<status status="PASS" starttime="20250108 15:54:33.353" endtime="20250108 15:54:34.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:34.827" level="INFO">Kind: OzoneToken, Service: 172.19.0.10:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-01-08T15:54:27.217Z, maxDate=2025-01-15T15:54:27.217Z, sequenceNumber=1, masterKeyId=1, strToSign=null, signature=null, awsAccessKeyId=null, omServiceId=omServiceIdDefault, omCertSerialId=null, secretKeyId=ec78c8d6-116d-45d1-8565-f5a491dfed03)</msg>
<status status="PASS" starttime="20250108 15:54:34.826" endtime="20250108 15:54:34.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:34.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:34.827" endtime="20250108 15:54:34.827"/>
</kw>
<status status="PASS" starttime="20250108 15:54:33.353" endtime="20250108 15:54:34.828"/>
</kw>
<msg timestamp="20250108 15:54:34.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:33.352" endtime="20250108 15:54:34.828"/>
</kw>
<msg timestamp="20250108 15:54:34.828" level="INFO">${output} = Kind: OzoneToken, Service: 172.19.0.10:9862, Ident: (OzoneToken owner=testuser/scm@EXAMPLE.COM, renewer=testuser, realUser=, issueDate=2025-01-08T15:54:27.217Z, maxDate=2025-01-15T15:54:27.217Z, seque...</msg>
<status status="PASS" starttime="20250108 15:54:33.352" endtime="20250108 15:54:34.828"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${output}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20250108 15:54:34.828" level="INFO">Length is 383</msg>
<status status="PASS" starttime="20250108 15:54:34.828" endtime="20250108 15:54:34.828"/>
</kw>
<status status="PASS" starttime="20250108 15:54:33.352" endtime="20250108 15:54:34.828"/>
</kw>
<kw name="Renew Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token renew -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:34.831" level="INFO">Running command 'ozone sh token renew -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:37.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:37.895" level="INFO">${output} = Token renewed successfully, expiry time: 2025-01-09T15:54:37.780Z.</msg>
<status status="PASS" starttime="20250108 15:54:34.830" endtime="20250108 15:54:37.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:37.896" level="INFO">Token renewed successfully, expiry time: 2025-01-09T15:54:37.780Z.</msg>
<status status="PASS" starttime="20250108 15:54:37.896" endtime="20250108 15:54:37.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:37.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:37.896" endtime="20250108 15:54:37.897"/>
</kw>
<status status="PASS" starttime="20250108 15:54:34.829" endtime="20250108 15:54:37.897"/>
</kw>
<msg timestamp="20250108 15:54:37.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:34.829" endtime="20250108 15:54:37.897"/>
</kw>
<msg timestamp="20250108 15:54:37.897" level="INFO">${output} = Token renewed successfully, expiry time: 2025-01-09T15:54:37.780Z.</msg>
<status status="PASS" starttime="20250108 15:54:34.829" endtime="20250108 15:54:37.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token renewed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:37.897" endtime="20250108 15:54:37.897"/>
</kw>
<status status="PASS" starttime="20250108 15:54:34.828" endtime="20250108 15:54:37.897"/>
</kw>
<kw name="Cancel Token in Secure Cluster">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token cancel -t ${TOKEN_FILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:37.901" level="INFO">Running command 'ozone sh token cancel -t /tmp/ozone.token 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:41.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:41.020" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20250108 15:54:37.899" endtime="20250108 15:54:41.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:41.021" level="INFO">Token canceled successfully.</msg>
<status status="PASS" starttime="20250108 15:54:41.020" endtime="20250108 15:54:41.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:41.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:41.021" endtime="20250108 15:54:41.021"/>
</kw>
<status status="PASS" starttime="20250108 15:54:37.898" endtime="20250108 15:54:41.021"/>
</kw>
<msg timestamp="20250108 15:54:41.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:37.898" endtime="20250108 15:54:41.021"/>
</kw>
<msg timestamp="20250108 15:54:41.021" level="INFO">${output} = Token canceled successfully.</msg>
<status status="PASS" starttime="20250108 15:54:37.898" endtime="20250108 15:54:41.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Token canceled successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:41.022" endtime="20250108 15:54:41.022"/>
</kw>
<status status="PASS" starttime="20250108 15:54:37.898" endtime="20250108 15:54:41.022"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.146" endtime="20250108 15:54:41.022"/>
</kw>
<status status="PASS" starttime="20250108 15:54:24.145" endtime="20250108 15:54:41.022"/>
</kw>
<kw name="Print Nonexistent Token File">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh token print -t /asdf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:41.025" level="INFO">Running command 'ozone sh token print -t /asdf 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:42.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:42.453" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250108 15:54:41.023" endtime="20250108 15:54:42.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:42.454" level="INFO">Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250108 15:54:42.454" endtime="20250108 15:54:42.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:42.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:42.454" endtime="20250108 15:54:42.455"/>
</kw>
<status status="PASS" starttime="20250108 15:54:41.023" endtime="20250108 15:54:42.455"/>
</kw>
<msg timestamp="20250108 15:54:42.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:41.023" endtime="20250108 15:54:42.455"/>
</kw>
<msg timestamp="20250108 15:54:42.455" level="INFO">${output} = Error: token operation failed as token file: /asdf containing encoded token doesn't exist.</msg>
<status status="PASS" starttime="20250108 15:54:41.022" endtime="20250108 15:54:42.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>operation failed as token file: /asdf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:42.455" endtime="20250108 15:54:42.455"/>
</kw>
<status status="PASS" starttime="20250108 15:54:41.022" endtime="20250108 15:54:42.455"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:54:24.144" endtime="20250108 15:54:42.455"/>
</test>
<doc>Test token operations</doc>
<status status="PASS" starttime="20250108 15:54:24.139" endtime="20250108 15:54:42.456"/>
</suite>
<suite id="s1-s2-s7" name="S3-secret" source="/opt/hadoop/smoketest/security/S3-secret.robot">
<test id="s1-s2-s7-t1" name="Get S3 secret twice" line="42">
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:54:42.463" endtime="20250108 15:54:42.463"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:42.466" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:42.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:42.470" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:54:42.464" endtime="20250108 15:54:42.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:42.470" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:54:42.470" endtime="20250108 15:54:42.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:42.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:42.471" endtime="20250108 15:54:42.471"/>
</kw>
<status status="PASS" starttime="20250108 15:54:42.464" endtime="20250108 15:54:42.471"/>
</kw>
<msg timestamp="20250108 15:54:42.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:42.463" endtime="20250108 15:54:42.471"/>
</kw>
<msg timestamp="20250108 15:54:42.471" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:54:42.463" endtime="20250108 15:54:42.471"/>
</kw>
<msg timestamp="20250108 15:54:42.472" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:42.463" endtime="20250108 15:54:42.472"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:54:42.472" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:42.472" endtime="20250108 15:54:42.472"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:42.475" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:42.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:42.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:42.473" endtime="20250108 15:54:42.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:42.501" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:42.500" endtime="20250108 15:54:42.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:42.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:42.501" endtime="20250108 15:54:42.501"/>
</kw>
<status status="PASS" starttime="20250108 15:54:42.473" endtime="20250108 15:54:42.501"/>
</kw>
<msg timestamp="20250108 15:54:42.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:42.473" endtime="20250108 15:54:42.501"/>
</kw>
<status status="PASS" starttime="20250108 15:54:42.472" endtime="20250108 15:54:42.502"/>
</kw>
<status status="PASS" starttime="20250108 15:54:42.472" endtime="20250108 15:54:42.502"/>
</kw>
<status status="PASS" starttime="20250108 15:54:42.462" endtime="20250108 15:54:42.502"/>
</kw>
<status status="PASS" starttime="20250108 15:54:42.462" endtime="20250108 15:54:42.502"/>
</kw>
<kw name="Revoke Secrets">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:42.504" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:45.428" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:54:45.428" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:54:42.502" endtime="20250108 15:54:45.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:45.429" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:54:45.429" endtime="20250108 15:54:45.429"/>
</kw>
<msg timestamp="20250108 15:54:45.429" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:54:42.502" endtime="20250108 15:54:45.429"/>
</kw>
<status status="PASS" starttime="20250108 15:54:42.502" endtime="20250108 15:54:45.430"/>
</kw>
<kw name="GetSecret success">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:45.433" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:48.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:48.604" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=ecb109a2744553054ce7ef98a281ad50ed830fd249f534bbe909e654bcde6d5b</msg>
<status status="PASS" starttime="20250108 15:54:45.431" endtime="20250108 15:54:48.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:48.605" level="INFO">awsAccessKey=testuser2
awsSecret=ecb109a2744553054ce7ef98a281ad50ed830fd249f534bbe909e654bcde6d5b</msg>
<status status="PASS" starttime="20250108 15:54:48.604" endtime="20250108 15:54:48.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:48.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:48.605" endtime="20250108 15:54:48.605"/>
</kw>
<status status="PASS" starttime="20250108 15:54:45.431" endtime="20250108 15:54:48.605"/>
</kw>
<msg timestamp="20250108 15:54:48.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:45.430" endtime="20250108 15:54:48.605"/>
</kw>
<msg timestamp="20250108 15:54:48.606" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=ecb109a2744553054ce7ef98a281ad50ed830fd249f534bbe909e654bcde6d5b</msg>
<status status="PASS" starttime="20250108 15:54:45.430" endtime="20250108 15:54:48.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:48.606" endtime="20250108 15:54:48.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:48.606" endtime="20250108 15:54:48.606"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>isDeleted</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:48.606" endtime="20250108 15:54:48.607"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>transactionLogIndex</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:48.607" endtime="20250108 15:54:48.607"/>
</kw>
<status status="PASS" starttime="20250108 15:54:45.430" endtime="20250108 15:54:48.607"/>
</kw>
<kw name="GetSecret failure">
<kw name="Execute And Ignore Error" library="os">
<var>${output2}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:48.610" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:51.539" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:54:51.539" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20250108 15:54:48.608" endtime="20250108 15:54:51.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:51.540" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20250108 15:54:51.540" endtime="20250108 15:54:51.540"/>
</kw>
<msg timestamp="20250108 15:54:51.540" level="INFO">${output2} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser2' already exists</msg>
<status status="PASS" starttime="20250108 15:54:48.607" endtime="20250108 15:54:51.541"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:51.541" endtime="20250108 15:54:51.541"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:51.541" endtime="20250108 15:54:51.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output2}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:51.541" endtime="20250108 15:54:51.542"/>
</kw>
<status status="PASS" starttime="20250108 15:54:48.607" endtime="20250108 15:54:51.542"/>
</kw>
<kw name="Revoke Secrets">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:51.544" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:54.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:54.711" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:54:51.542" endtime="20250108 15:54:54.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:54.712" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:54:54.712" endtime="20250108 15:54:54.712"/>
</kw>
<msg timestamp="20250108 15:54:54.712" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:54:51.542" endtime="20250108 15:54:54.712"/>
</kw>
<status status="PASS" starttime="20250108 15:54:51.542" endtime="20250108 15:54:54.712"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250108 15:54:42.462" endtime="20250108 15:54:54.713"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20250108 15:54:42.457" endtime="20250108 15:54:54.713"/>
</suite>
<status status="PASS" starttime="20250108 15:51:37.381" endtime="20250108 15:54:54.716"/>
</suite>
<suite id="s1-s3" name="s3-encrypted" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:54:55.422" endtime="20250108 15:54:55.422"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:54:55.423" level="INFO">${randStr} = 5165644155</msg>
<status status="PASS" starttime="20250108 15:54:55.423" endtime="20250108 15:54:55.423"/>
</kw>
<msg timestamp="20250108 15:54:55.423" level="INFO">${random} = ozone-test-5165644155</msg>
<status status="PASS" starttime="20250108 15:54:55.422" endtime="20250108 15:54:55.423"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:54:55.424" level="INFO">${PREFIX} = ozone-test-5165644155</msg>
<status status="PASS" starttime="20250108 15:54:55.423" endtime="20250108 15:54:55.424"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.422" endtime="20250108 15:54:55.424"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.422" endtime="20250108 15:54:55.424"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:55.427" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:55.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:55.429" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20250108 15:54:55.424" endtime="20250108 15:54:55.429"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:54:55.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:55.430" endtime="20250108 15:54:55.430"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250108 15:54:55.430" endtime="20250108 15:54:55.430"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:54:55.430" endtime="20250108 15:54:55.430"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20250108 15:54:55.430" endtime="20250108 15:54:55.430"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:54:55.430" endtime="20250108 15:54:55.431"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.424" endtime="20250108 15:54:55.431"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.424" endtime="20250108 15:54:55.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:54:55.432" endtime="20250108 15:54:55.432"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:55.434" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:55.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:55.438" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:54:55.433" endtime="20250108 15:54:55.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:55.438" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:54:55.438" endtime="20250108 15:54:55.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:55.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:55.439" endtime="20250108 15:54:55.439"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.433" endtime="20250108 15:54:55.439"/>
</kw>
<msg timestamp="20250108 15:54:55.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:55.432" endtime="20250108 15:54:55.439"/>
</kw>
<msg timestamp="20250108 15:54:55.439" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:54:55.432" endtime="20250108 15:54:55.439"/>
</kw>
<msg timestamp="20250108 15:54:55.439" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:55.432" endtime="20250108 15:54:55.439"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:54:55.440" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:54:55.439" endtime="20250108 15:54:55.440"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:55.443" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:55.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:54:55.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:54:55.441" endtime="20250108 15:54:55.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:55.473" level="INFO"/>
<status status="PASS" starttime="20250108 15:54:55.473" endtime="20250108 15:54:55.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:54:55.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:54:55.474" endtime="20250108 15:54:55.474"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.441" endtime="20250108 15:54:55.474"/>
</kw>
<msg timestamp="20250108 15:54:55.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:55.441" endtime="20250108 15:54:55.474"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.440" endtime="20250108 15:54:55.474"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.440" endtime="20250108 15:54:55.474"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.431" endtime="20250108 15:54:55.474"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.431" endtime="20250108 15:54:55.474"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:55.477" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:54:58.556" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:54:58.557" level="INFO">${output} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250108 15:54:55.475" endtime="20250108 15:54:58.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:54:58.557" level="INFO">S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250108 15:54:58.557" endtime="20250108 15:54:58.557"/>
</kw>
<msg timestamp="20250108 15:54:58.558" level="INFO">${result} = S3_SECRET_ALREADY_EXISTS Secret for 'testuser/scm@EXAMPLE.COM' already exists</msg>
<status status="PASS" starttime="20250108 15:54:55.475" endtime="20250108 15:54:58.558"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:54:58.558" endtime="20250108 15:54:58.558"/>
</kw>
<msg timestamp="20250108 15:54:58.558" level="INFO">${exists} = True</msg>
<status status="PASS" starttime="20250108 15:54:58.558" endtime="20250108 15:54:58.558"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:54:58.561" level="INFO">Running command 'ozone s3 revokesecret -y  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:01.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:01.698" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:54:58.559" endtime="20250108 15:55:01.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:01.698" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:55:01.698" endtime="20250108 15:55:01.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:01.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:01.698" endtime="20250108 15:55:01.699"/>
</kw>
<status status="PASS" starttime="20250108 15:54:58.559" endtime="20250108 15:55:01.699"/>
</kw>
<msg timestamp="20250108 15:55:01.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:54:58.559" endtime="20250108 15:55:01.699"/>
</kw>
<status status="PASS" starttime="20250108 15:54:58.559" endtime="20250108 15:55:01.699"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:01.702" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:04.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:04.686" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6</msg>
<status status="PASS" starttime="20250108 15:55:01.700" endtime="20250108 15:55:04.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:04.687" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6</msg>
<status status="PASS" starttime="20250108 15:55:04.687" endtime="20250108 15:55:04.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:04.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:04.687" endtime="20250108 15:55:04.687"/>
</kw>
<status status="PASS" starttime="20250108 15:55:01.700" endtime="20250108 15:55:04.688"/>
</kw>
<msg timestamp="20250108 15:55:04.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:01.700" endtime="20250108 15:55:04.688"/>
</kw>
<msg timestamp="20250108 15:55:04.688" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6</msg>
<status status="PASS" starttime="20250108 15:55:01.699" endtime="20250108 15:55:04.688"/>
</kw>
<status status="PASS" starttime="20250108 15:54:58.558" endtime="20250108 15:55:04.688"/>
</branch>
<status status="PASS" starttime="20250108 15:54:58.558" endtime="20250108 15:55:04.688"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 15:55:04.688" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250108 15:55:04.688" endtime="20250108 15:55:04.689"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250108 15:55:04.689" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250108 15:55:04.689" endtime="20250108 15:55:04.689"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 15:55:04.689" level="INFO">${secret} = ['ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6']</msg>
<status status="PASS" starttime="20250108 15:55:04.689" endtime="20250108 15:55:04.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:55:04.690" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:55:04.689" endtime="20250108 15:55:04.690"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:55:04.691" level="INFO">${secret} = ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6</msg>
<status status="PASS" starttime="20250108 15:55:04.690" endtime="20250108 15:55:04.691"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:04.694" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:05.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:05.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:04.692" endtime="20250108 15:55:05.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:05.047" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:05.047" endtime="20250108 15:55:05.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:05.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:05.047" endtime="20250108 15:55:05.048"/>
</kw>
<status status="PASS" starttime="20250108 15:55:04.692" endtime="20250108 15:55:05.048"/>
</kw>
<msg timestamp="20250108 15:55:05.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:04.691" endtime="20250108 15:55:05.048"/>
</kw>
<status status="PASS" starttime="20250108 15:55:04.691" endtime="20250108 15:55:05.048"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:05.051" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:05.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:05.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:05.049" endtime="20250108 15:55:05.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:05.408" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:05.407" endtime="20250108 15:55:05.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:05.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:05.408" endtime="20250108 15:55:05.408"/>
</kw>
<status status="PASS" starttime="20250108 15:55:05.049" endtime="20250108 15:55:05.408"/>
</kw>
<msg timestamp="20250108 15:55:05.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:05.048" endtime="20250108 15:55:05.409"/>
</kw>
<status status="PASS" starttime="20250108 15:55:05.048" endtime="20250108 15:55:05.409"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:05.412" level="INFO">Running command 'aws configure set aws_secret_access_key ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:05.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:05.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:05.410" endtime="20250108 15:55:05.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:05.768" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:05.768" endtime="20250108 15:55:05.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:05.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:05.768" endtime="20250108 15:55:05.769"/>
</kw>
<status status="PASS" starttime="20250108 15:55:05.409" endtime="20250108 15:55:05.769"/>
</kw>
<msg timestamp="20250108 15:55:05.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:05.409" endtime="20250108 15:55:05.769"/>
</kw>
<status status="PASS" starttime="20250108 15:55:05.409" endtime="20250108 15:55:05.769"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:05.772" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:06.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:06.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:05.770" endtime="20250108 15:55:06.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:06.130" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:06.129" endtime="20250108 15:55:06.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:06.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:06.130" endtime="20250108 15:55:06.130"/>
</kw>
<status status="PASS" starttime="20250108 15:55:05.770" endtime="20250108 15:55:06.130"/>
</kw>
<msg timestamp="20250108 15:55:06.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:05.769" endtime="20250108 15:55:06.130"/>
</kw>
<status status="PASS" starttime="20250108 15:55:05.769" endtime="20250108 15:55:06.130"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:06.133" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:06.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:06.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:06.131" endtime="20250108 15:55:06.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:06.486" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:06.485" endtime="20250108 15:55:06.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:06.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:06.486" endtime="20250108 15:55:06.486"/>
</kw>
<status status="PASS" starttime="20250108 15:55:06.131" endtime="20250108 15:55:06.486"/>
</kw>
<msg timestamp="20250108 15:55:06.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:06.131" endtime="20250108 15:55:06.486"/>
</kw>
<status status="PASS" starttime="20250108 15:55:06.130" endtime="20250108 15:55:06.486"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.475" endtime="20250108 15:55:06.486"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.474" endtime="20250108 15:55:06.486"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:55:06.487" endtime="20250108 15:55:06.487"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.431" endtime="20250108 15:55:06.487"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.431" endtime="20250108 15:55:06.487"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:55:06.487" endtime="20250108 15:55:06.487"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:55:06.487" endtime="20250108 15:55:06.487"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:55:06.488" endtime="20250108 15:55:06.488"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:06.490" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:09.926" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:55:09.926" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20250108 15:55:06.488" endtime="20250108 15:55:09.926"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:55:09.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:09.926" endtime="20250108 15:55:09.927"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:09.927" endtime="20250108 15:55:09.927"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:09.927" endtime="20250108 15:55:09.927"/>
</kw>
<msg timestamp="20250108 15:55:09.927" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250108 15:55:06.488" endtime="20250108 15:55:09.927"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:55:09.928" endtime="20250108 15:55:09.928"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${ENCRYPTION_KEY} --layout ${BUCKET_LAYOUT} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:09.931" level="INFO">Running command 'ozone sh bucket create -k key1 --layout OBJECT_STORE o3://om/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:13.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:13.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:09.929" endtime="20250108 15:55:13.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:13.673" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:13.673" endtime="20250108 15:55:13.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:13.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:13.674" endtime="20250108 15:55:13.674"/>
</kw>
<status status="PASS" starttime="20250108 15:55:09.928" endtime="20250108 15:55:13.674"/>
</kw>
<msg timestamp="20250108 15:55:13.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:09.928" endtime="20250108 15:55:13.674"/>
</kw>
<status status="PASS" starttime="20250108 15:55:09.928" endtime="20250108 15:55:13.674"/>
</kw>
<status status="PASS" starttime="20250108 15:55:06.488" endtime="20250108 15:55:13.674"/>
</kw>
<status status="PASS" starttime="20250108 15:55:06.488" endtime="20250108 15:55:13.674"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 15:55:13.674" endtime="20250108 15:55:13.675"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:55:13.675" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20250108 15:55:13.675" endtime="20250108 15:55:13.675"/>
</kw>
<status status="PASS" starttime="20250108 15:54:55.422" endtime="20250108 15:55:13.675"/>
</kw>
<suite id="s1-s3-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:55:13.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:13.683" endtime="20250108 15:55:13.683"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:13.683" endtime="20250108 15:55:13.683"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:13.683" endtime="20250108 15:55:13.683"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:13.683" endtime="20250108 15:55:13.684"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:13.684" endtime="20250108 15:55:13.684"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:13.684" endtime="20250108 15:55:13.684"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:13.684" endtime="20250108 15:55:13.684"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:13.684" endtime="20250108 15:55:13.684"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:55:13.684" endtime="20250108 15:55:13.684"/>
</kw>
<status status="PASS" starttime="20250108 15:55:13.683" endtime="20250108 15:55:13.684"/>
</kw>
<test id="s1-s3-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:13.688" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:55:13.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:13.692" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:13.686" endtime="20250108 15:55:13.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:13.693" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:13.692" endtime="20250108 15:55:13.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:13.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:13.693" endtime="20250108 15:55:13.693"/>
</kw>
<status status="PASS" starttime="20250108 15:55:13.685" endtime="20250108 15:55:13.693"/>
</kw>
<msg timestamp="20250108 15:55:13.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:13.685" endtime="20250108 15:55:13.693"/>
</kw>
<status status="PASS" starttime="20250108 15:55:13.685" endtime="20250108 15:55:13.693"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:13.697" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:14.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:14.590" level="INFO">${output} = Completed 29 Bytes/29 Bytes (67 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20250108 15:55:13.695" endtime="20250108 15:55:14.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:14.591" level="INFO">Completed 29 Bytes/29 Bytes (67 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20250108 15:55:14.590" endtime="20250108 15:55:14.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:14.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:14.591" endtime="20250108 15:55:14.591"/>
</kw>
<status status="PASS" starttime="20250108 15:55:13.694" endtime="20250108 15:55:14.591"/>
</kw>
<msg timestamp="20250108 15:55:14.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:13.694" endtime="20250108 15:55:14.592"/>
</kw>
<msg timestamp="20250108 15:55:14.592" level="INFO">${output} = Completed 29 Bytes/29 Bytes (67 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20250108 15:55:13.694" endtime="20250108 15:55:14.592"/>
</kw>
<msg timestamp="20250108 15:55:14.592" level="INFO">${result} = Completed 29 Bytes/29 Bytes (67 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile            </msg>
<status status="PASS" starttime="20250108 15:55:13.694" endtime="20250108 15:55:14.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:14.592" endtime="20250108 15:55:14.592"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:14.595" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:15.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:15.371" level="INFO">${output} = Completed 29 Bytes/29 Bytes (92 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file      </msg>
<status status="PASS" starttime="20250108 15:55:14.593" endtime="20250108 15:55:15.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:15.372" level="INFO">Completed 29 Bytes/29 Bytes (92 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file      </msg>
<status status="PASS" starttime="20250108 15:55:15.371" endtime="20250108 15:55:15.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:15.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:15.372" endtime="20250108 15:55:15.373"/>
</kw>
<status status="PASS" starttime="20250108 15:55:14.593" endtime="20250108 15:55:15.373"/>
</kw>
<msg timestamp="20250108 15:55:15.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:14.593" endtime="20250108 15:55:15.373"/>
</kw>
<msg timestamp="20250108 15:55:15.373" level="INFO">${output} = Completed 29 Bytes/29 Bytes (92 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file      </msg>
<status status="PASS" starttime="20250108 15:55:14.593" endtime="20250108 15:55:15.373"/>
</kw>
<msg timestamp="20250108 15:55:15.373" level="INFO">${result} = Completed 29 Bytes/29 Bytes (92 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file      </msg>
<status status="PASS" starttime="20250108 15:55:14.592" endtime="20250108 15:55:15.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:15.373" endtime="20250108 15:55:15.374"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:15.377" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:15.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:15.896" level="INFO">${output} =                            PRE dir1/
2025-01-08 15:55:14         29 testfile</msg>
<status status="PASS" starttime="20250108 15:55:15.375" endtime="20250108 15:55:15.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:15.897" level="INFO">                           PRE dir1/
2025-01-08 15:55:14         29 testfile</msg>
<status status="PASS" starttime="20250108 15:55:15.897" endtime="20250108 15:55:15.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:15.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:15.897" endtime="20250108 15:55:15.898"/>
</kw>
<status status="PASS" starttime="20250108 15:55:15.375" endtime="20250108 15:55:15.898"/>
</kw>
<msg timestamp="20250108 15:55:15.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:15.374" endtime="20250108 15:55:15.898"/>
</kw>
<msg timestamp="20250108 15:55:15.898" level="INFO">${output} =                            PRE dir1/
2025-01-08 15:55:14         29 testfile</msg>
<status status="PASS" starttime="20250108 15:55:15.374" endtime="20250108 15:55:15.898"/>
</kw>
<msg timestamp="20250108 15:55:15.898" level="INFO">${result} =                            PRE dir1/
2025-01-08 15:55:14         29 testfile</msg>
<status status="PASS" starttime="20250108 15:55:15.374" endtime="20250108 15:55:15.898"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:15.898" endtime="20250108 15:55:15.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:15.899" endtime="20250108 15:55:15.899"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:15.899" endtime="20250108 15:55:15.899"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:15.903" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:16.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:16.441" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250108 15:55:15.901" endtime="20250108 15:55:16.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:16.442" level="INFO">                           PRE dir2/</msg>
<status status="PASS" starttime="20250108 15:55:16.442" endtime="20250108 15:55:16.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:16.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:16.443" endtime="20250108 15:55:16.443"/>
</kw>
<status status="PASS" starttime="20250108 15:55:15.900" endtime="20250108 15:55:16.443"/>
</kw>
<msg timestamp="20250108 15:55:16.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:15.900" endtime="20250108 15:55:16.443"/>
</kw>
<msg timestamp="20250108 15:55:16.443" level="INFO">${output} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250108 15:55:15.900" endtime="20250108 15:55:16.443"/>
</kw>
<msg timestamp="20250108 15:55:16.443" level="INFO">${result} =                            PRE dir2/</msg>
<status status="PASS" starttime="20250108 15:55:15.900" endtime="20250108 15:55:16.444"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:16.444" endtime="20250108 15:55:16.444"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:16.444" endtime="20250108 15:55:16.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:16.444" endtime="20250108 15:55:16.444"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:16.449" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:16.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:16.982" level="INFO">${output} = 2025-01-08 15:55:15         29 file</msg>
<status status="PASS" starttime="20250108 15:55:16.447" endtime="20250108 15:55:16.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:16.983" level="INFO">2025-01-08 15:55:15         29 file</msg>
<status status="PASS" starttime="20250108 15:55:16.982" endtime="20250108 15:55:16.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:16.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:16.983" endtime="20250108 15:55:16.983"/>
</kw>
<status status="PASS" starttime="20250108 15:55:16.446" endtime="20250108 15:55:16.984"/>
</kw>
<msg timestamp="20250108 15:55:16.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:16.445" endtime="20250108 15:55:16.984"/>
</kw>
<msg timestamp="20250108 15:55:16.984" level="INFO">${output} = 2025-01-08 15:55:15         29 file</msg>
<status status="PASS" starttime="20250108 15:55:16.445" endtime="20250108 15:55:16.984"/>
</kw>
<msg timestamp="20250108 15:55:16.984" level="INFO">${result} = 2025-01-08 15:55:15         29 file</msg>
<status status="PASS" starttime="20250108 15:55:16.445" endtime="20250108 15:55:16.984"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:16.984" endtime="20250108 15:55:16.984"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:16.984" endtime="20250108 15:55:16.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:16.985" endtime="20250108 15:55:16.985"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:13.684" endtime="20250108 15:55:16.985"/>
</test>
<test id="s1-s3-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:16.989" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:55:16.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:16.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:16.987" endtime="20250108 15:55:16.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:16.993" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:16.993" endtime="20250108 15:55:16.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:16.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:16.994" endtime="20250108 15:55:16.994"/>
</kw>
<status status="PASS" starttime="20250108 15:55:16.986" endtime="20250108 15:55:16.994"/>
</kw>
<msg timestamp="20250108 15:55:16.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:16.986" endtime="20250108 15:55:16.994"/>
</kw>
<status status="PASS" starttime="20250108 15:55:16.986" endtime="20250108 15:55:16.994"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:16.997" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:17.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:17.702" level="INFO">${output} = Completed 29 Bytes/29 Bytes (131 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20250108 15:55:16.996" endtime="20250108 15:55:17.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:17.703" level="INFO">Completed 29 Bytes/29 Bytes (131 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20250108 15:55:17.702" endtime="20250108 15:55:17.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:17.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:17.703" endtime="20250108 15:55:17.703"/>
</kw>
<status status="PASS" starttime="20250108 15:55:16.995" endtime="20250108 15:55:17.704"/>
</kw>
<msg timestamp="20250108 15:55:17.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:16.995" endtime="20250108 15:55:17.704"/>
</kw>
<msg timestamp="20250108 15:55:17.704" level="INFO">${output} = Completed 29 Bytes/29 Bytes (131 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20250108 15:55:16.995" endtime="20250108 15:55:17.704"/>
</kw>
<msg timestamp="20250108 15:55:17.704" level="INFO">${result} = Completed 29 Bytes/29 Bytes (131 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b     </msg>
<status status="PASS" starttime="20250108 15:55:16.994" endtime="20250108 15:55:17.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:17.704" endtime="20250108 15:55:17.705"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:17.709" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:18.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:18.204" level="INFO">${output} = 2025-01-08 15:55:17         29 a+b</msg>
<status status="PASS" starttime="20250108 15:55:17.706" endtime="20250108 15:55:18.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:18.205" level="INFO">2025-01-08 15:55:17         29 a+b</msg>
<status status="PASS" starttime="20250108 15:55:18.205" endtime="20250108 15:55:18.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:18.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:18.205" endtime="20250108 15:55:18.206"/>
</kw>
<status status="PASS" starttime="20250108 15:55:17.706" endtime="20250108 15:55:18.206"/>
</kw>
<msg timestamp="20250108 15:55:18.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:17.706" endtime="20250108 15:55:18.206"/>
</kw>
<msg timestamp="20250108 15:55:18.206" level="INFO">${output} = 2025-01-08 15:55:17         29 a+b</msg>
<status status="PASS" starttime="20250108 15:55:17.705" endtime="20250108 15:55:18.206"/>
</kw>
<msg timestamp="20250108 15:55:18.206" level="INFO">${result} = 2025-01-08 15:55:17         29 a+b</msg>
<status status="PASS" starttime="20250108 15:55:17.705" endtime="20250108 15:55:18.206"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:18.206" endtime="20250108 15:55:18.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:18.207" endtime="20250108 15:55:18.207"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:16.986" endtime="20250108 15:55:18.207"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:55:13.675" endtime="20250108 15:55:18.208"/>
</suite>
<suite id="s1-s3-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:55:18.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:18.219" endtime="20250108 15:55:18.220"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:18.220" endtime="20250108 15:55:18.220"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:18.220" endtime="20250108 15:55:18.220"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:18.220" endtime="20250108 15:55:18.220"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:18.220" endtime="20250108 15:55:18.220"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:18.220" endtime="20250108 15:55:18.220"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:18.220" endtime="20250108 15:55:18.220"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:18.221" endtime="20250108 15:55:18.221"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:55:18.221" endtime="20250108 15:55:18.221"/>
</kw>
<status status="PASS" starttime="20250108 15:55:18.219" endtime="20250108 15:55:18.221"/>
</kw>
<test id="s1-s3-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:18.224" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:27.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:27.634" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20250108 15:55:18.222" endtime="20250108 15:55:27.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:27.635" level="INFO">test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 9.161s

OK
{'ResponseMetadata': {'RequestId': '7299dceb-defa-4727-baba-4e12d7f2f3bf', 'HostId': 'gK3z0ttbRppc', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 08 Jan 2025 15:55:18 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:55:18 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-kgehoayifr', 'server': 'Ozone', 'x-amz-id-2': 'gK3z0ttbRppc', 'x-amz-request-id': '7299dceb-defa-4727-baba-4e12d7f2f3bf', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-kgehoayifr'}
None
None
None
{'ResponseMetadata': {'RequestId': 'b6581dc9-df02-4cfd-a682-6632fc3f15bd', 'HostId': 'Jyh6RycvSRh', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 08 Jan 2025 15:55:20 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:55:20 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-xiwjzuaoao', 'server': 'Ozone', 'x-amz-id-2': 'Jyh6RycvSRh', 'x-amz-request-id': 'b6581dc9-df02-4cfd-a682-6632fc3f15bd', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-xiwjzuaoao'}
{'ResponseMetadata': {'RequestId': '8cfd6bf6-320f-4db4-b399-a8528ae1d360', 'HostId': 'yMw1gDlqZItALI', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 08 Jan 2025 15:55:20 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:55:20 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'yMw1gDlqZItALI', 'x-amz-request-id': '8cfd6bf6-320f-4db4-b399-a8528ae1d360', 'content-length': '765'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-mlvacfazpv', 'CreationDate': datetime.datetime(2025, 1, 8, 15, 53, 4, 25000, tzinfo=tzlocal())}, {'Name': 'bucket-test-owner1', 'CreationDate': datetime.datetime(2025, 1, 8, 15, 52, 49, 650000, tzinfo=tzlocal())}, {'Name': 'bucket-test123', 'CreationDate': datetime.datetime(2025, 1, 8, 15, 53, 5, 718000, tzinfo=tzlocal())}, {'Name': 'bucket-xiwjzuaoao', 'CreationDate': datetime.datetime(2025, 1, 8, 15, 55, 20, 801000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2025, 1, 8, 15, 55, 13, 238000, tzinfo=tzlocal())}, {'Name': 'ozone-test-kgehoayifr', 'CreationDate': datetime.datetime(2025, 1, 8, 15, 55, 18, 610000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '48822a3d-db63-4e6b-93db-7782839fee24', 'HostId': 'ioOsXYk3XLK0W0', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 08 Jan 2025 15:55:20 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:55:20 GMT', 'pragma': 'no-cache', 'content-type': 'application/x-www-form-urlencoded', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'ioOsXYk3XLK0W0', 'x-amz-request-id': '48822a3d-db63-4e6b-93db-7782839fee24', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '10348a36-dc15-46d2-bac4-41624b31aa55', 'HostId': 'OYA1hDq5lfigr', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Wed, 08 Jan 2025 15:55:20 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:55:20 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'OYA1hDq5lfigr', 'x-amz-request-id': '10348a36-dc15-46d2-bac4-41624b31aa55'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'ecf841d3-5113-47ae-95be-e38b834e5aa2', 'HostId': 'pLI2HUKS5nlS', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 08 Jan 2025 15:55:20 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:55:20 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Wed, 08 Jan 2025 15:55:20 GMT', 'server': 'Ozone', 'x-amz-id-2': 'pLI2HUKS5nlS', 'x-amz-request-id': 'ecf841d3-5113-47ae-95be-e38b834e5aa2', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2025, 1, 8, 15, 55, 20, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2025, 1, 8, 15, 55, 20, tzinfo=tzutc()), 'Metadata': {}, 'ExpiresString': 'Wed, 08 Jan 2025 15:55:20 GMT'}
{'ResponseMetadata': {'RequestId': '357cf001-bd65-4134-83dd-b09d72168a74', 'HostId': '4ezvMcgPZtP', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 08 Jan 2025 15:55:21 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:55:21 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '4ezvMcgPZtP', 'x-amz-request-id': '357cf001-bd65-4134-83dd-b09d72168a74', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': 'def7bfdc-6129-477f-a9c5-3e26042dae22', 'HostId': 'XO7MlKG46q3ZH92', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 08 Jan 2025 15:55:21 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:55:21 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Wed, 08 Jan 2025 15:55:18 GMT', 'server': 'Ozone', 'x-amz-id-2': 'XO7MlKG46q3ZH92', 'x-amz-request-id': 'def7bfdc-6129-477f-a9c5-3e26042dae22', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2025, 1, 8, 15, 55, 18, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2025, 1, 8, 15, 55, 21, tzinfo=tzutc()), 'Metadata': {}, 'ExpiresString': 'Wed, 08 Jan 2025 15:55:21 GMT'}
{'ResponseMetadata': {'RequestId': '579bdf80-80e8-4d02-90bb-6cbaa60464aa', 'HostId': 'G3K6zY7jsrmy', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 08 Jan 2025 15:55:21 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:55:21 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'G3K6zY7jsrmy', 'x-amz-request-id': '579bdf80-80e8-4d02-90bb-6cbaa60464aa', 'content-length': '289'}, 'RetryAttempts': 0}, 'Bucket': 'encrypted', 'Key': 'cjoiyrkzzj', 'UploadId': '2757ce69-be2d-423c-a7ab-d0f1909e998d-113793546405609491'}
{'ResponseMetadata': {'RequestId': 'f644e8ac-ccf1-4212-bba8-7fd56f6d1d90', 'HostId': 'Z7iCg2COcsJDL', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 08 Jan 2025 15:55:27 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:55:27 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'Z7iCg2COcsJDL', 'x-amz-request-id': 'f644e8ac-ccf1-4212-bba8-7fd56f6d1d90', 'content-length': '292'}, 'RetryAttempts': 0}, 'Location': 'encrypted', 'Bucket': 'encrypted', 'Key': 'cjoiyrkzzj', 'ETag': '"27474247826a4d3ef022a25bece0ad53-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20250108 15:55:27.634" endtime="20250108 15:55:27.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:27.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:27.635" endtime="20250108 15:55:27.635"/>
</kw>
<status status="PASS" starttime="20250108 15:55:18.222" endtime="20250108 15:55:27.635"/>
</kw>
<msg timestamp="20250108 15:55:27.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:18.222" endtime="20250108 15:55:27.636"/>
</kw>
<msg timestamp="20250108 15:55:27.636" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ......</msg>
<status status="PASS" starttime="20250108 15:55:18.221" endtime="20250108 15:55:27.636"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20250108 15:55:18.221" endtime="20250108 15:55:27.636"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20250108 15:55:18.209" endtime="20250108 15:55:27.637"/>
</suite>
<suite id="s1-s3-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:55:27.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:27.645" endtime="20250108 15:55:27.645"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:27.645" endtime="20250108 15:55:27.646"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:27.646" endtime="20250108 15:55:27.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:27.646" endtime="20250108 15:55:27.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:27.646" endtime="20250108 15:55:27.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:27.646" endtime="20250108 15:55:27.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:27.646" endtime="20250108 15:55:27.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:27.646" endtime="20250108 15:55:27.646"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:55:27.646" endtime="20250108 15:55:27.646"/>
</kw>
<status status="PASS" starttime="20250108 15:55:27.645" endtime="20250108 15:55:27.646"/>
</kw>
<test id="s1-s3-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:55:27.648" level="INFO">${randStr} = 9173678312</msg>
<status status="PASS" starttime="20250108 15:55:27.647" endtime="20250108 15:55:27.648"/>
</kw>
<msg timestamp="20250108 15:55:27.648" level="INFO">${postfix} = ozone-test-9173678312</msg>
<status status="PASS" starttime="20250108 15:55:27.647" endtime="20250108 15:55:27.648"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:55:27.648" level="INFO">${bucket} = bucket-ozone-test-9173678312</msg>
<status status="PASS" starttime="20250108 15:55:27.648" endtime="20250108 15:55:27.648"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:27.652" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-9173678312 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:28.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:28.179" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9173678312"
}</msg>
<status status="PASS" starttime="20250108 15:55:27.650" endtime="20250108 15:55:28.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:28.180" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-9173678312"
}</msg>
<status status="PASS" starttime="20250108 15:55:28.179" endtime="20250108 15:55:28.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:28.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:28.180" endtime="20250108 15:55:28.180"/>
</kw>
<status status="PASS" starttime="20250108 15:55:27.649" endtime="20250108 15:55:28.180"/>
</kw>
<msg timestamp="20250108 15:55:28.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:27.649" endtime="20250108 15:55:28.181"/>
</kw>
<msg timestamp="20250108 15:55:28.181" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9173678312"
}</msg>
<status status="PASS" starttime="20250108 15:55:27.649" endtime="20250108 15:55:28.181"/>
</kw>
<msg timestamp="20250108 15:55:28.181" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9173678312"
}</msg>
<status status="PASS" starttime="20250108 15:55:27.649" endtime="20250108 15:55:28.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:28.181" endtime="20250108 15:55:28.181"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:28.181" endtime="20250108 15:55:28.182"/>
</kw>
<status status="PASS" starttime="20250108 15:55:27.648" endtime="20250108 15:55:28.182"/>
</kw>
<status status="PASS" starttime="20250108 15:55:27.647" endtime="20250108 15:55:28.182"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:27.646" endtime="20250108 15:55:28.182"/>
</test>
<test id="s1-s3-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:55:28.184" level="INFO">${randStr} = 5639534662</msg>
<status status="PASS" starttime="20250108 15:55:28.183" endtime="20250108 15:55:28.184"/>
</kw>
<msg timestamp="20250108 15:55:28.184" level="INFO">${postfix} = ozone-test-5639534662</msg>
<status status="PASS" starttime="20250108 15:55:28.183" endtime="20250108 15:55:28.184"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:55:28.184" level="INFO">${bucket} = bucket-ozone-test-5639534662</msg>
<status status="PASS" starttime="20250108 15:55:28.184" endtime="20250108 15:55:28.184"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:28.188" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-5639534662 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:28.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:28.712" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5639534662"
}</msg>
<status status="PASS" starttime="20250108 15:55:28.186" endtime="20250108 15:55:28.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:28.713" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-5639534662"
}</msg>
<status status="PASS" starttime="20250108 15:55:28.712" endtime="20250108 15:55:28.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:28.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:28.713" endtime="20250108 15:55:28.713"/>
</kw>
<status status="PASS" starttime="20250108 15:55:28.186" endtime="20250108 15:55:28.713"/>
</kw>
<msg timestamp="20250108 15:55:28.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:28.185" endtime="20250108 15:55:28.713"/>
</kw>
<msg timestamp="20250108 15:55:28.714" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5639534662"
}</msg>
<status status="PASS" starttime="20250108 15:55:28.185" endtime="20250108 15:55:28.714"/>
</kw>
<msg timestamp="20250108 15:55:28.714" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5639534662"
}</msg>
<status status="PASS" starttime="20250108 15:55:28.185" endtime="20250108 15:55:28.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:28.714" endtime="20250108 15:55:28.714"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:28.714" endtime="20250108 15:55:28.715"/>
</kw>
<status status="PASS" starttime="20250108 15:55:28.184" endtime="20250108 15:55:28.715"/>
</kw>
<msg timestamp="20250108 15:55:28.715" level="INFO">${bucket} = bucket-ozone-test-5639534662</msg>
<status status="PASS" starttime="20250108 15:55:28.183" endtime="20250108 15:55:28.715"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:28.718" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-5639534662 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:29.238" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:55:29.238" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250108 15:55:28.716" endtime="20250108 15:55:29.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:29.239" level="INFO">
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250108 15:55:29.239" endtime="20250108 15:55:29.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:29.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:29.239" endtime="20250108 15:55:29.240"/>
</kw>
<msg timestamp="20250108 15:55:29.240" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250108 15:55:28.715" endtime="20250108 15:55:29.240"/>
</kw>
<msg timestamp="20250108 15:55:29.240" level="INFO">${result} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20250108 15:55:28.715" endtime="20250108 15:55:29.240"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BucketAlreadyExists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:29.240" endtime="20250108 15:55:29.241"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:28.182" endtime="20250108 15:55:29.241"/>
</test>
<test id="s1-s3-s3-t3" name="Create bucket with invalid bucket name" line="40">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:55:29.242" level="INFO">${randStr} = 3568031008</msg>
<status status="PASS" starttime="20250108 15:55:29.242" endtime="20250108 15:55:29.242"/>
</kw>
<msg timestamp="20250108 15:55:29.243" level="INFO">${randStr} = ozone-test-3568031008</msg>
<status status="PASS" starttime="20250108 15:55:29.242" endtime="20250108 15:55:29.243"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:29.246" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-3568031008 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:29.743" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:55:29.743" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250108 15:55:29.243" endtime="20250108 15:55:29.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:29.744" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250108 15:55:29.743" endtime="20250108 15:55:29.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:29.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:29.744" endtime="20250108 15:55:29.744"/>
</kw>
<msg timestamp="20250108 15:55:29.744" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250108 15:55:29.243" endtime="20250108 15:55:29.744"/>
</kw>
<msg timestamp="20250108 15:55:29.744" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20250108 15:55:29.243" endtime="20250108 15:55:29.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:29.745" endtime="20250108 15:55:29.745"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:29.241" endtime="20250108 15:55:29.745"/>
</test>
<test id="s1-s3-s3-t4" name="Create new bucket and check default group ACL" line="45">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:55:29.747" level="INFO">${randStr} = 0748209966</msg>
<status status="PASS" starttime="20250108 15:55:29.746" endtime="20250108 15:55:29.747"/>
</kw>
<msg timestamp="20250108 15:55:29.747" level="INFO">${postfix} = ozone-test-0748209966</msg>
<status status="PASS" starttime="20250108 15:55:29.746" endtime="20250108 15:55:29.747"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:55:29.747" level="INFO">${bucket} = bucket-ozone-test-0748209966</msg>
<status status="PASS" starttime="20250108 15:55:29.747" endtime="20250108 15:55:29.747"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:29.751" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-0748209966 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:30.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:30.271" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0748209966"
}</msg>
<status status="PASS" starttime="20250108 15:55:29.749" endtime="20250108 15:55:30.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:30.272" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-0748209966"
}</msg>
<status status="PASS" starttime="20250108 15:55:30.272" endtime="20250108 15:55:30.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:30.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:30.272" endtime="20250108 15:55:30.273"/>
</kw>
<status status="PASS" starttime="20250108 15:55:29.748" endtime="20250108 15:55:30.273"/>
</kw>
<msg timestamp="20250108 15:55:30.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:29.748" endtime="20250108 15:55:30.273"/>
</kw>
<msg timestamp="20250108 15:55:30.273" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0748209966"
}</msg>
<status status="PASS" starttime="20250108 15:55:29.748" endtime="20250108 15:55:30.273"/>
</kw>
<msg timestamp="20250108 15:55:30.273" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0748209966"
}</msg>
<status status="PASS" starttime="20250108 15:55:29.748" endtime="20250108 15:55:30.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:30.274" endtime="20250108 15:55:30.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:30.274" endtime="20250108 15:55:30.274"/>
</kw>
<status status="PASS" starttime="20250108 15:55:29.747" endtime="20250108 15:55:30.274"/>
</kw>
<msg timestamp="20250108 15:55:30.274" level="INFO">${bucket} = bucket-ozone-test-0748209966</msg>
<status status="PASS" starttime="20250108 15:55:29.746" endtime="20250108 15:55:30.275"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:30.278" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-0748209966 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:33.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:33.720" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]...</msg>
<status status="PASS" starttime="20250108 15:55:30.275" endtime="20250108 15:55:33.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:33.721" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]
} ]</msg>
<status status="PASS" starttime="20250108 15:55:33.721" endtime="20250108 15:55:33.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:33.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:33.721" endtime="20250108 15:55:33.722"/>
</kw>
<status status="PASS" starttime="20250108 15:55:30.275" endtime="20250108 15:55:33.722"/>
</kw>
<msg timestamp="20250108 15:55:33.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:30.275" endtime="20250108 15:55:33.722"/>
</kw>
<msg timestamp="20250108 15:55:33.722" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "LIST" ]...</msg>
<status status="PASS" starttime="20250108 15:55:30.275" endtime="20250108 15:55:33.722"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 15:55:33.723" level="INFO">${group} = ['"GROUP"']</msg>
<status status="PASS" starttime="20250108 15:55:33.722" endtime="20250108 15:55:33.723"/>
</kw>
<if>
<branch type="IF" condition="'${group}' != '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250108 15:55:33.724" level="INFO">${json} = [{'type': 'USER', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['ALL']}, {'type': 'GROUP', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['READ', 'LIST']}]</msg>
<status status="PASS" starttime="20250108 15:55:33.723" endtime="20250108 15:55:33.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:33.724" endtime="20250108 15:55:33.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>READ</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:33.724" endtime="20250108 15:55:33.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>LIST</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:33.724" endtime="20250108 15:55:33.725"/>
</kw>
<status status="PASS" starttime="20250108 15:55:33.723" endtime="20250108 15:55:33.725"/>
</branch>
<status status="PASS" starttime="20250108 15:55:33.723" endtime="20250108 15:55:33.725"/>
</if>
<tag>aws-skip</tag>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:29.745" endtime="20250108 15:55:33.725"/>
</test>
<test id="s1-s3-s3-t5" name="Test buckets named like web endpoints" line="58">
<kw name="Create Random File KB" library="os">
<var>${path}</var>
<arg>64</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Get Random Filename" library="os">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>10</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:55:33.728" level="INFO">${postfix} = zzdntzuysi</msg>
<status status="PASS" starttime="20250108 15:55:33.728" endtime="20250108 15:55:33.728"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempfile-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:55:33.729" level="INFO">${tmpfile} = /tmp/tempfile-zzdntzuysi</msg>
<status status="PASS" starttime="20250108 15:55:33.728" endtime="20250108 15:55:33.729"/>
</kw>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${tmpfile}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20250108 15:55:33.729" level="INFO" html="true">File '&lt;a href="file:///tmp/tempfile-zzdntzuysi"&gt;/tmp/tempfile-zzdntzuysi&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250108 15:55:33.729" endtime="20250108 15:55:33.729"/>
</kw>
<status status="PASS" starttime="20250108 15:55:33.728" endtime="20250108 15:55:33.729"/>
</kw>
<msg timestamp="20250108 15:55:33.729" level="INFO">${path} = /tmp/tempfile-zzdntzuysi</msg>
<status status="PASS" starttime="20250108 15:55:33.727" endtime="20250108 15:55:33.729"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:33.732" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/tempfile-zzdntzuysi bs=1024 count=64 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:33.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:33.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:33.730" endtime="20250108 15:55:33.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:33.738" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:33.737" endtime="20250108 15:55:33.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:33.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:33.738" endtime="20250108 15:55:33.738"/>
</kw>
<status status="PASS" starttime="20250108 15:55:33.730" endtime="20250108 15:55:33.738"/>
</kw>
<msg timestamp="20250108 15:55:33.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:33.730" endtime="20250108 15:55:33.738"/>
</kw>
<status status="PASS" starttime="20250108 15:55:33.729" endtime="20250108 15:55:33.738"/>
</kw>
<msg timestamp="20250108 15:55:33.738" level="INFO">${path} = /tmp/tempfile-zzdntzuysi</msg>
<status status="PASS" starttime="20250108 15:55:33.727" endtime="20250108 15:55:33.738"/>
</kw>
<msg timestamp="20250108 15:55:33.739" level="INFO">${path} = /tmp/tempfile-zzdntzuysi</msg>
<status status="PASS" starttime="20250108 15:55:33.726" endtime="20250108 15:55:33.739"/>
</kw>
<for flavor="IN">
<var>${name}</var>
<value>conf</value>
<value>jmx</value>
<value>logs</value>
<value>logstream</value>
<value>prof</value>
<value>prom</value>
<value>secret</value>
<value>stacks</value>
<value>static</value>
<iter>
<var name="${name}">conf</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:33.742" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket conf 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:34.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:34.242" level="INFO">${output} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250108 15:55:33.740" endtime="20250108 15:55:34.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:34.243" level="INFO">{
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250108 15:55:34.242" endtime="20250108 15:55:34.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:34.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:34.243" endtime="20250108 15:55:34.244"/>
</kw>
<status status="PASS" starttime="20250108 15:55:33.740" endtime="20250108 15:55:34.244"/>
</kw>
<msg timestamp="20250108 15:55:34.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:33.740" endtime="20250108 15:55:34.244"/>
</kw>
<msg timestamp="20250108 15:55:34.244" level="INFO">${output} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250108 15:55:33.740" endtime="20250108 15:55:34.244"/>
</kw>
<msg timestamp="20250108 15:55:34.244" level="INFO">${result} = {
    "Location": "http://s3g:9878/conf"
}</msg>
<status status="PASS" starttime="20250108 15:55:33.739" endtime="20250108 15:55:34.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:34.244" endtime="20250108 15:55:34.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:34.244" endtime="20250108 15:55:34.245"/>
</kw>
<status status="PASS" starttime="20250108 15:55:33.739" endtime="20250108 15:55:34.245"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:34.249" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket conf --key testkey --body /tmp/tempfile-zzdntzuysi 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:34.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:34.882" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:34.247" endtime="20250108 15:55:34.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:34.883" level="INFO">{
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:34.883" endtime="20250108 15:55:34.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:34.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:34.884" endtime="20250108 15:55:34.884"/>
</kw>
<status status="PASS" starttime="20250108 15:55:34.246" endtime="20250108 15:55:34.884"/>
</kw>
<msg timestamp="20250108 15:55:34.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:34.246" endtime="20250108 15:55:34.884"/>
</kw>
<msg timestamp="20250108 15:55:34.884" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:34.246" endtime="20250108 15:55:34.884"/>
</kw>
<status status="PASS" starttime="20250108 15:55:34.245" endtime="20250108 15:55:34.885"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:34.891" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket conf 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:35.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:35.437" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:34.801Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:34.887" endtime="20250108 15:55:35.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:35.438" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:34.801Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:55:35.437" endtime="20250108 15:55:35.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:35.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:35.438" endtime="20250108 15:55:35.439"/>
</kw>
<status status="PASS" starttime="20250108 15:55:34.886" endtime="20250108 15:55:35.439"/>
</kw>
<msg timestamp="20250108 15:55:35.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:34.886" endtime="20250108 15:55:35.439"/>
</kw>
<msg timestamp="20250108 15:55:35.439" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:34.801Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:34.885" endtime="20250108 15:55:35.439"/>
</kw>
<msg timestamp="20250108 15:55:35.439" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:34.801Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:34.885" endtime="20250108 15:55:35.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:35.439" endtime="20250108 15:55:35.439"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:35.443" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket conf --key testkey /tmp/tempfile-zzdntzuysi.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:35.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:35.999" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:34 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:35.441" endtime="20250108 15:55:35.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:36.000" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:34 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:55:35 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:55:35 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:55:35.999" endtime="20250108 15:55:36.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:36.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:36.000" endtime="20250108 15:55:36.000"/>
</kw>
<status status="PASS" starttime="20250108 15:55:35.440" endtime="20250108 15:55:36.000"/>
</kw>
<msg timestamp="20250108 15:55:36.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:35.440" endtime="20250108 15:55:36.000"/>
</kw>
<msg timestamp="20250108 15:55:36.000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:34 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:35.440" endtime="20250108 15:55:36.001"/>
</kw>
<status status="PASS" starttime="20250108 15:55:35.440" endtime="20250108 15:55:36.001"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:36.004" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:36.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:36.009" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:36.002" endtime="20250108 15:55:36.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:36.010" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:36.009" endtime="20250108 15:55:36.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:36.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:36.010" endtime="20250108 15:55:36.010"/>
</kw>
<status status="PASS" starttime="20250108 15:55:36.002" endtime="20250108 15:55:36.011"/>
</kw>
<msg timestamp="20250108 15:55:36.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:36.001" endtime="20250108 15:55:36.011"/>
</kw>
<msg timestamp="20250108 15:55:36.011" level="INFO">${checksumbefore} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:36.001" endtime="20250108 15:55:36.011"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:36.014" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:36.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:36.019" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:36.012" endtime="20250108 15:55:36.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:36.020" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:36.019" endtime="20250108 15:55:36.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:36.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:36.020" endtime="20250108 15:55:36.020"/>
</kw>
<status status="PASS" starttime="20250108 15:55:36.012" endtime="20250108 15:55:36.020"/>
</kw>
<msg timestamp="20250108 15:55:36.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:36.011" endtime="20250108 15:55:36.021"/>
</kw>
<msg timestamp="20250108 15:55:36.021" level="INFO">${checksumafter} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:36.011" endtime="20250108 15:55:36.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:55:36.021" endtime="20250108 15:55:36.021"/>
</kw>
<status status="PASS" starttime="20250108 15:55:36.001" endtime="20250108 15:55:36.021"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250108 15:55:36.022" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-zzdntzuysi.verify"&gt;/tmp/tempfile-zzdntzuysi.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250108 15:55:36.021" endtime="20250108 15:55:36.022"/>
</kw>
<status status="PASS" starttime="20250108 15:55:34.245" endtime="20250108 15:55:36.022"/>
</kw>
<status status="PASS" starttime="20250108 15:55:33.739" endtime="20250108 15:55:36.022"/>
</iter>
<iter>
<var name="${name}">jmx</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:36.026" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:36.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:36.521" level="INFO">${output} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250108 15:55:36.024" endtime="20250108 15:55:36.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:36.521" level="INFO">{
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250108 15:55:36.521" endtime="20250108 15:55:36.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:36.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:36.522" endtime="20250108 15:55:36.522"/>
</kw>
<status status="PASS" starttime="20250108 15:55:36.024" endtime="20250108 15:55:36.522"/>
</kw>
<msg timestamp="20250108 15:55:36.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:36.023" endtime="20250108 15:55:36.522"/>
</kw>
<msg timestamp="20250108 15:55:36.522" level="INFO">${output} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250108 15:55:36.023" endtime="20250108 15:55:36.522"/>
</kw>
<msg timestamp="20250108 15:55:36.522" level="INFO">${result} = {
    "Location": "http://s3g:9878/jmx"
}</msg>
<status status="PASS" starttime="20250108 15:55:36.022" endtime="20250108 15:55:36.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:36.523" endtime="20250108 15:55:36.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:36.523" endtime="20250108 15:55:36.523"/>
</kw>
<status status="PASS" starttime="20250108 15:55:36.022" endtime="20250108 15:55:36.523"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:36.527" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket jmx --key testkey --body /tmp/tempfile-zzdntzuysi 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:37.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:37.111" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:36.525" endtime="20250108 15:55:37.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:37.112" level="INFO">{
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:37.112" endtime="20250108 15:55:37.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:37.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:37.112" endtime="20250108 15:55:37.113"/>
</kw>
<status status="PASS" starttime="20250108 15:55:36.525" endtime="20250108 15:55:37.113"/>
</kw>
<msg timestamp="20250108 15:55:37.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:36.524" endtime="20250108 15:55:37.113"/>
</kw>
<msg timestamp="20250108 15:55:37.113" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:36.524" endtime="20250108 15:55:37.113"/>
</kw>
<status status="PASS" starttime="20250108 15:55:36.524" endtime="20250108 15:55:37.113"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:37.117" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket jmx 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:37.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:37.663" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:37.040Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:37.115" endtime="20250108 15:55:37.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:37.664" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:37.040Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:55:37.663" endtime="20250108 15:55:37.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:37.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:37.664" endtime="20250108 15:55:37.664"/>
</kw>
<status status="PASS" starttime="20250108 15:55:37.114" endtime="20250108 15:55:37.665"/>
</kw>
<msg timestamp="20250108 15:55:37.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:37.114" endtime="20250108 15:55:37.665"/>
</kw>
<msg timestamp="20250108 15:55:37.665" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:37.040Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:37.114" endtime="20250108 15:55:37.665"/>
</kw>
<msg timestamp="20250108 15:55:37.665" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:37.040Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:37.113" endtime="20250108 15:55:37.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:37.665" endtime="20250108 15:55:37.665"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:37.669" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket jmx --key testkey /tmp/tempfile-zzdntzuysi.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:38.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:38.215" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:37 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:37.667" endtime="20250108 15:55:38.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:38.216" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:37 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:55:38 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:55:38 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:55:38.215" endtime="20250108 15:55:38.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:38.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:38.216" endtime="20250108 15:55:38.216"/>
</kw>
<status status="PASS" starttime="20250108 15:55:37.666" endtime="20250108 15:55:38.216"/>
</kw>
<msg timestamp="20250108 15:55:38.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:37.666" endtime="20250108 15:55:38.216"/>
</kw>
<msg timestamp="20250108 15:55:38.217" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:37 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:37.666" endtime="20250108 15:55:38.217"/>
</kw>
<status status="PASS" starttime="20250108 15:55:37.665" endtime="20250108 15:55:38.217"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:38.220" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:38.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:38.225" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:38.218" endtime="20250108 15:55:38.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:38.225" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:38.225" endtime="20250108 15:55:38.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:38.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:38.226" endtime="20250108 15:55:38.226"/>
</kw>
<status status="PASS" starttime="20250108 15:55:38.218" endtime="20250108 15:55:38.226"/>
</kw>
<msg timestamp="20250108 15:55:38.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:38.218" endtime="20250108 15:55:38.226"/>
</kw>
<msg timestamp="20250108 15:55:38.226" level="INFO">${checksumbefore} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:38.217" endtime="20250108 15:55:38.226"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:38.229" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:38.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:38.233" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:38.227" endtime="20250108 15:55:38.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:38.234" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:38.234" endtime="20250108 15:55:38.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:38.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:38.234" endtime="20250108 15:55:38.235"/>
</kw>
<status status="PASS" starttime="20250108 15:55:38.227" endtime="20250108 15:55:38.235"/>
</kw>
<msg timestamp="20250108 15:55:38.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:38.227" endtime="20250108 15:55:38.235"/>
</kw>
<msg timestamp="20250108 15:55:38.235" level="INFO">${checksumafter} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:38.226" endtime="20250108 15:55:38.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:55:38.235" endtime="20250108 15:55:38.235"/>
</kw>
<status status="PASS" starttime="20250108 15:55:38.217" endtime="20250108 15:55:38.235"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250108 15:55:38.236" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-zzdntzuysi.verify"&gt;/tmp/tempfile-zzdntzuysi.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250108 15:55:38.236" endtime="20250108 15:55:38.236"/>
</kw>
<status status="PASS" starttime="20250108 15:55:36.523" endtime="20250108 15:55:38.236"/>
</kw>
<status status="PASS" starttime="20250108 15:55:36.022" endtime="20250108 15:55:38.236"/>
</iter>
<iter>
<var name="${name}">logs</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:38.240" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket logs 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:38.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:38.750" level="INFO">${output} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250108 15:55:38.238" endtime="20250108 15:55:38.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:38.751" level="INFO">{
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250108 15:55:38.751" endtime="20250108 15:55:38.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:38.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:38.751" endtime="20250108 15:55:38.752"/>
</kw>
<status status="PASS" starttime="20250108 15:55:38.238" endtime="20250108 15:55:38.752"/>
</kw>
<msg timestamp="20250108 15:55:38.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:38.238" endtime="20250108 15:55:38.752"/>
</kw>
<msg timestamp="20250108 15:55:38.752" level="INFO">${output} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250108 15:55:38.237" endtime="20250108 15:55:38.752"/>
</kw>
<msg timestamp="20250108 15:55:38.752" level="INFO">${result} = {
    "Location": "http://s3g:9878/logs"
}</msg>
<status status="PASS" starttime="20250108 15:55:38.237" endtime="20250108 15:55:38.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:38.753" endtime="20250108 15:55:38.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:38.753" endtime="20250108 15:55:38.753"/>
</kw>
<status status="PASS" starttime="20250108 15:55:38.236" endtime="20250108 15:55:38.753"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:38.757" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket logs --key testkey --body /tmp/tempfile-zzdntzuysi 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:39.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:39.326" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:38.755" endtime="20250108 15:55:39.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:39.327" level="INFO">{
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:39.326" endtime="20250108 15:55:39.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:39.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:39.327" endtime="20250108 15:55:39.327"/>
</kw>
<status status="PASS" starttime="20250108 15:55:38.755" endtime="20250108 15:55:39.327"/>
</kw>
<msg timestamp="20250108 15:55:39.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:38.754" endtime="20250108 15:55:39.328"/>
</kw>
<msg timestamp="20250108 15:55:39.328" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:38.754" endtime="20250108 15:55:39.328"/>
</kw>
<status status="PASS" starttime="20250108 15:55:38.754" endtime="20250108 15:55:39.328"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:39.331" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket logs 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:39.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:39.838" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:39.266Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:39.329" endtime="20250108 15:55:39.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:39.839" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:39.266Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:55:39.838" endtime="20250108 15:55:39.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:39.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:39.839" endtime="20250108 15:55:39.840"/>
</kw>
<status status="PASS" starttime="20250108 15:55:39.329" endtime="20250108 15:55:39.840"/>
</kw>
<msg timestamp="20250108 15:55:39.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:39.329" endtime="20250108 15:55:39.840"/>
</kw>
<msg timestamp="20250108 15:55:39.840" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:39.266Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:39.328" endtime="20250108 15:55:39.840"/>
</kw>
<msg timestamp="20250108 15:55:39.840" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:39.266Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:39.328" endtime="20250108 15:55:39.840"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:39.840" endtime="20250108 15:55:39.841"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:39.854" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket logs --key testkey /tmp/tempfile-zzdntzuysi.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:40.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:40.390" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:39 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:39.852" endtime="20250108 15:55:40.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:40.391" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:39 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:55:40 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:55:40 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:55:40.390" endtime="20250108 15:55:40.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:40.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:40.391" endtime="20250108 15:55:40.391"/>
</kw>
<status status="PASS" starttime="20250108 15:55:39.851" endtime="20250108 15:55:40.391"/>
</kw>
<msg timestamp="20250108 15:55:40.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:39.841" endtime="20250108 15:55:40.391"/>
</kw>
<msg timestamp="20250108 15:55:40.391" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:39 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:39.841" endtime="20250108 15:55:40.392"/>
</kw>
<status status="PASS" starttime="20250108 15:55:39.841" endtime="20250108 15:55:40.392"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:40.395" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:40.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:40.399" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:40.393" endtime="20250108 15:55:40.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:40.400" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:40.400" endtime="20250108 15:55:40.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:40.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:40.400" endtime="20250108 15:55:40.401"/>
</kw>
<status status="PASS" starttime="20250108 15:55:40.393" endtime="20250108 15:55:40.401"/>
</kw>
<msg timestamp="20250108 15:55:40.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:40.392" endtime="20250108 15:55:40.401"/>
</kw>
<msg timestamp="20250108 15:55:40.401" level="INFO">${checksumbefore} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:40.392" endtime="20250108 15:55:40.401"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:40.404" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:40.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:40.409" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:40.402" endtime="20250108 15:55:40.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:40.409" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:40.409" endtime="20250108 15:55:40.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:40.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:40.410" endtime="20250108 15:55:40.410"/>
</kw>
<status status="PASS" starttime="20250108 15:55:40.402" endtime="20250108 15:55:40.410"/>
</kw>
<msg timestamp="20250108 15:55:40.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:40.402" endtime="20250108 15:55:40.410"/>
</kw>
<msg timestamp="20250108 15:55:40.410" level="INFO">${checksumafter} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:40.401" endtime="20250108 15:55:40.410"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:55:40.410" endtime="20250108 15:55:40.411"/>
</kw>
<status status="PASS" starttime="20250108 15:55:40.392" endtime="20250108 15:55:40.411"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250108 15:55:40.411" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-zzdntzuysi.verify"&gt;/tmp/tempfile-zzdntzuysi.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250108 15:55:40.411" endtime="20250108 15:55:40.411"/>
</kw>
<status status="PASS" starttime="20250108 15:55:38.753" endtime="20250108 15:55:40.411"/>
</kw>
<status status="PASS" starttime="20250108 15:55:38.236" endtime="20250108 15:55:40.411"/>
</iter>
<iter>
<var name="${name}">logstream</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:40.415" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket logstream 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:40.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:40.913" level="INFO">${output} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250108 15:55:40.413" endtime="20250108 15:55:40.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:40.914" level="INFO">{
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250108 15:55:40.913" endtime="20250108 15:55:40.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:40.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:40.914" endtime="20250108 15:55:40.915"/>
</kw>
<status status="PASS" starttime="20250108 15:55:40.413" endtime="20250108 15:55:40.915"/>
</kw>
<msg timestamp="20250108 15:55:40.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:40.413" endtime="20250108 15:55:40.915"/>
</kw>
<msg timestamp="20250108 15:55:40.915" level="INFO">${output} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250108 15:55:40.413" endtime="20250108 15:55:40.915"/>
</kw>
<msg timestamp="20250108 15:55:40.915" level="INFO">${result} = {
    "Location": "http://s3g:9878/logstream"
}</msg>
<status status="PASS" starttime="20250108 15:55:40.412" endtime="20250108 15:55:40.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:40.916" endtime="20250108 15:55:40.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:40.916" endtime="20250108 15:55:40.916"/>
</kw>
<status status="PASS" starttime="20250108 15:55:40.412" endtime="20250108 15:55:40.917"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:40.922" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket logstream --key testkey --body /tmp/tempfile-zzdntzuysi 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:41.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:41.474" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:40.919" endtime="20250108 15:55:41.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:41.475" level="INFO">{
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:41.474" endtime="20250108 15:55:41.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:41.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:41.475" endtime="20250108 15:55:41.475"/>
</kw>
<status status="PASS" starttime="20250108 15:55:40.919" endtime="20250108 15:55:41.475"/>
</kw>
<msg timestamp="20250108 15:55:41.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:40.918" endtime="20250108 15:55:41.475"/>
</kw>
<msg timestamp="20250108 15:55:41.476" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:40.918" endtime="20250108 15:55:41.476"/>
</kw>
<status status="PASS" starttime="20250108 15:55:40.917" endtime="20250108 15:55:41.476"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:41.479" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket logstream 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:41.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:41.978" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:41.409Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:41.477" endtime="20250108 15:55:41.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:41.979" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:41.409Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:55:41.979" endtime="20250108 15:55:41.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:41.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:41.979" endtime="20250108 15:55:41.980"/>
</kw>
<status status="PASS" starttime="20250108 15:55:41.477" endtime="20250108 15:55:41.980"/>
</kw>
<msg timestamp="20250108 15:55:41.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:41.477" endtime="20250108 15:55:41.980"/>
</kw>
<msg timestamp="20250108 15:55:41.981" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:41.409Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:41.476" endtime="20250108 15:55:41.981"/>
</kw>
<msg timestamp="20250108 15:55:41.981" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:41.409Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:41.476" endtime="20250108 15:55:41.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:41.981" endtime="20250108 15:55:41.981"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:41.985" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket logstream --key testkey /tmp/tempfile-zzdntzuysi.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:42.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:42.506" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:41 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:41.982" endtime="20250108 15:55:42.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:42.507" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:41 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:55:42 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:55:42 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:55:42.506" endtime="20250108 15:55:42.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:42.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:42.507" endtime="20250108 15:55:42.507"/>
</kw>
<status status="PASS" starttime="20250108 15:55:41.982" endtime="20250108 15:55:42.507"/>
</kw>
<msg timestamp="20250108 15:55:42.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:41.982" endtime="20250108 15:55:42.508"/>
</kw>
<msg timestamp="20250108 15:55:42.508" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:41 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:41.982" endtime="20250108 15:55:42.508"/>
</kw>
<status status="PASS" starttime="20250108 15:55:41.981" endtime="20250108 15:55:42.508"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:42.511" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:42.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:42.516" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:42.509" endtime="20250108 15:55:42.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:42.516" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:42.516" endtime="20250108 15:55:42.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:42.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:42.517" endtime="20250108 15:55:42.517"/>
</kw>
<status status="PASS" starttime="20250108 15:55:42.509" endtime="20250108 15:55:42.517"/>
</kw>
<msg timestamp="20250108 15:55:42.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:42.509" endtime="20250108 15:55:42.517"/>
</kw>
<msg timestamp="20250108 15:55:42.517" level="INFO">${checksumbefore} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:42.508" endtime="20250108 15:55:42.517"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:42.520" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:42.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:42.525" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:42.518" endtime="20250108 15:55:42.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:42.526" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:42.525" endtime="20250108 15:55:42.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:42.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:42.526" endtime="20250108 15:55:42.526"/>
</kw>
<status status="PASS" starttime="20250108 15:55:42.518" endtime="20250108 15:55:42.526"/>
</kw>
<msg timestamp="20250108 15:55:42.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:42.518" endtime="20250108 15:55:42.526"/>
</kw>
<msg timestamp="20250108 15:55:42.527" level="INFO">${checksumafter} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:42.518" endtime="20250108 15:55:42.527"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:55:42.527" endtime="20250108 15:55:42.527"/>
</kw>
<status status="PASS" starttime="20250108 15:55:42.508" endtime="20250108 15:55:42.527"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250108 15:55:42.527" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-zzdntzuysi.verify"&gt;/tmp/tempfile-zzdntzuysi.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250108 15:55:42.527" endtime="20250108 15:55:42.528"/>
</kw>
<status status="PASS" starttime="20250108 15:55:40.917" endtime="20250108 15:55:42.528"/>
</kw>
<status status="PASS" starttime="20250108 15:55:40.412" endtime="20250108 15:55:42.528"/>
</iter>
<iter>
<var name="${name}">prof</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:42.532" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket prof 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:43.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:43.042" level="INFO">${output} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250108 15:55:42.530" endtime="20250108 15:55:43.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:43.042" level="INFO">{
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250108 15:55:43.042" endtime="20250108 15:55:43.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:43.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:43.043" endtime="20250108 15:55:43.043"/>
</kw>
<status status="PASS" starttime="20250108 15:55:42.529" endtime="20250108 15:55:43.043"/>
</kw>
<msg timestamp="20250108 15:55:43.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:42.529" endtime="20250108 15:55:43.043"/>
</kw>
<msg timestamp="20250108 15:55:43.043" level="INFO">${output} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250108 15:55:42.529" endtime="20250108 15:55:43.043"/>
</kw>
<msg timestamp="20250108 15:55:43.044" level="INFO">${result} = {
    "Location": "http://s3g:9878/prof"
}</msg>
<status status="PASS" starttime="20250108 15:55:42.528" endtime="20250108 15:55:43.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:43.044" endtime="20250108 15:55:43.044"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:43.044" endtime="20250108 15:55:43.044"/>
</kw>
<status status="PASS" starttime="20250108 15:55:42.528" endtime="20250108 15:55:43.044"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:43.048" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket prof --key testkey --body /tmp/tempfile-zzdntzuysi 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:43.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:43.622" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:43.046" endtime="20250108 15:55:43.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:43.623" level="INFO">{
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:43.623" endtime="20250108 15:55:43.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:43.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:43.623" endtime="20250108 15:55:43.624"/>
</kw>
<status status="PASS" starttime="20250108 15:55:43.046" endtime="20250108 15:55:43.624"/>
</kw>
<msg timestamp="20250108 15:55:43.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:43.046" endtime="20250108 15:55:43.624"/>
</kw>
<msg timestamp="20250108 15:55:43.624" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:43.045" endtime="20250108 15:55:43.624"/>
</kw>
<status status="PASS" starttime="20250108 15:55:43.045" endtime="20250108 15:55:43.624"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:43.627" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket prof 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:44.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:44.133" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:43.549Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:43.625" endtime="20250108 15:55:44.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:44.134" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:43.549Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:55:44.133" endtime="20250108 15:55:44.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:44.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:44.134" endtime="20250108 15:55:44.134"/>
</kw>
<status status="PASS" starttime="20250108 15:55:43.625" endtime="20250108 15:55:44.134"/>
</kw>
<msg timestamp="20250108 15:55:44.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:43.625" endtime="20250108 15:55:44.135"/>
</kw>
<msg timestamp="20250108 15:55:44.135" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:43.549Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:43.625" endtime="20250108 15:55:44.135"/>
</kw>
<msg timestamp="20250108 15:55:44.135" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:43.549Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:43.624" endtime="20250108 15:55:44.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:44.135" endtime="20250108 15:55:44.135"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:44.139" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket prof --key testkey /tmp/tempfile-zzdntzuysi.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:44.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:44.648" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:43 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:44.137" endtime="20250108 15:55:44.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:44.649" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:43 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:55:44 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:55:44 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:55:44.648" endtime="20250108 15:55:44.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:44.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:44.649" endtime="20250108 15:55:44.649"/>
</kw>
<status status="PASS" starttime="20250108 15:55:44.136" endtime="20250108 15:55:44.649"/>
</kw>
<msg timestamp="20250108 15:55:44.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:44.136" endtime="20250108 15:55:44.650"/>
</kw>
<msg timestamp="20250108 15:55:44.650" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:43 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:44.136" endtime="20250108 15:55:44.650"/>
</kw>
<status status="PASS" starttime="20250108 15:55:44.135" endtime="20250108 15:55:44.650"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:44.653" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:44.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:44.658" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:44.651" endtime="20250108 15:55:44.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:44.658" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:44.658" endtime="20250108 15:55:44.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:44.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:44.659" endtime="20250108 15:55:44.659"/>
</kw>
<status status="PASS" starttime="20250108 15:55:44.651" endtime="20250108 15:55:44.659"/>
</kw>
<msg timestamp="20250108 15:55:44.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:44.651" endtime="20250108 15:55:44.659"/>
</kw>
<msg timestamp="20250108 15:55:44.659" level="INFO">${checksumbefore} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:44.650" endtime="20250108 15:55:44.659"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:44.662" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:44.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:44.667" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:44.660" endtime="20250108 15:55:44.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:44.668" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:44.667" endtime="20250108 15:55:44.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:44.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:44.668" endtime="20250108 15:55:44.668"/>
</kw>
<status status="PASS" starttime="20250108 15:55:44.660" endtime="20250108 15:55:44.668"/>
</kw>
<msg timestamp="20250108 15:55:44.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:44.660" endtime="20250108 15:55:44.669"/>
</kw>
<msg timestamp="20250108 15:55:44.669" level="INFO">${checksumafter} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:44.660" endtime="20250108 15:55:44.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:55:44.669" endtime="20250108 15:55:44.669"/>
</kw>
<status status="PASS" starttime="20250108 15:55:44.650" endtime="20250108 15:55:44.669"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250108 15:55:44.670" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-zzdntzuysi.verify"&gt;/tmp/tempfile-zzdntzuysi.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250108 15:55:44.669" endtime="20250108 15:55:44.670"/>
</kw>
<status status="PASS" starttime="20250108 15:55:43.044" endtime="20250108 15:55:44.670"/>
</kw>
<status status="PASS" starttime="20250108 15:55:42.528" endtime="20250108 15:55:44.670"/>
</iter>
<iter>
<var name="${name}">prom</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:44.674" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket prom 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:45.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:45.178" level="INFO">${output} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250108 15:55:44.671" endtime="20250108 15:55:45.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:45.178" level="INFO">{
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250108 15:55:45.178" endtime="20250108 15:55:45.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:45.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:45.179" endtime="20250108 15:55:45.179"/>
</kw>
<status status="PASS" starttime="20250108 15:55:44.671" endtime="20250108 15:55:45.179"/>
</kw>
<msg timestamp="20250108 15:55:45.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:44.671" endtime="20250108 15:55:45.179"/>
</kw>
<msg timestamp="20250108 15:55:45.179" level="INFO">${output} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250108 15:55:44.671" endtime="20250108 15:55:45.179"/>
</kw>
<msg timestamp="20250108 15:55:45.179" level="INFO">${result} = {
    "Location": "http://s3g:9878/prom"
}</msg>
<status status="PASS" starttime="20250108 15:55:44.670" endtime="20250108 15:55:45.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:45.180" endtime="20250108 15:55:45.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:45.180" endtime="20250108 15:55:45.180"/>
</kw>
<status status="PASS" starttime="20250108 15:55:44.670" endtime="20250108 15:55:45.180"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:45.184" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket prom --key testkey --body /tmp/tempfile-zzdntzuysi 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:45.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:45.732" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:45.182" endtime="20250108 15:55:45.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:45.733" level="INFO">{
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:45.732" endtime="20250108 15:55:45.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:45.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:45.733" endtime="20250108 15:55:45.733"/>
</kw>
<status status="PASS" starttime="20250108 15:55:45.182" endtime="20250108 15:55:45.733"/>
</kw>
<msg timestamp="20250108 15:55:45.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:45.182" endtime="20250108 15:55:45.734"/>
</kw>
<msg timestamp="20250108 15:55:45.734" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:45.181" endtime="20250108 15:55:45.734"/>
</kw>
<status status="PASS" starttime="20250108 15:55:45.181" endtime="20250108 15:55:45.734"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:45.737" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket prom 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:46.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:46.241" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:45.672Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:45.735" endtime="20250108 15:55:46.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:46.242" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:45.672Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:55:46.242" endtime="20250108 15:55:46.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:46.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:46.243" endtime="20250108 15:55:46.243"/>
</kw>
<status status="PASS" starttime="20250108 15:55:45.735" endtime="20250108 15:55:46.243"/>
</kw>
<msg timestamp="20250108 15:55:46.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:45.735" endtime="20250108 15:55:46.243"/>
</kw>
<msg timestamp="20250108 15:55:46.243" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:45.672Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:45.734" endtime="20250108 15:55:46.243"/>
</kw>
<msg timestamp="20250108 15:55:46.243" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:45.672Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:45.734" endtime="20250108 15:55:46.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:46.244" endtime="20250108 15:55:46.244"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:46.247" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket prom --key testkey /tmp/tempfile-zzdntzuysi.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:46.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:46.757" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:45 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:46.245" endtime="20250108 15:55:46.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:46.757" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:45 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:55:46 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:55:46 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:55:46.757" endtime="20250108 15:55:46.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:46.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:46.758" endtime="20250108 15:55:46.758"/>
</kw>
<status status="PASS" starttime="20250108 15:55:46.245" endtime="20250108 15:55:46.758"/>
</kw>
<msg timestamp="20250108 15:55:46.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:46.245" endtime="20250108 15:55:46.758"/>
</kw>
<msg timestamp="20250108 15:55:46.758" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:45 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:46.244" endtime="20250108 15:55:46.758"/>
</kw>
<status status="PASS" starttime="20250108 15:55:46.244" endtime="20250108 15:55:46.759"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:46.762" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:46.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:46.766" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:46.760" endtime="20250108 15:55:46.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:46.767" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:46.767" endtime="20250108 15:55:46.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:46.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:46.767" endtime="20250108 15:55:46.768"/>
</kw>
<status status="PASS" starttime="20250108 15:55:46.760" endtime="20250108 15:55:46.768"/>
</kw>
<msg timestamp="20250108 15:55:46.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:46.759" endtime="20250108 15:55:46.768"/>
</kw>
<msg timestamp="20250108 15:55:46.768" level="INFO">${checksumbefore} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:46.759" endtime="20250108 15:55:46.768"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:46.771" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:46.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:46.775" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:46.769" endtime="20250108 15:55:46.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:46.776" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:46.776" endtime="20250108 15:55:46.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:46.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:46.776" endtime="20250108 15:55:46.777"/>
</kw>
<status status="PASS" starttime="20250108 15:55:46.768" endtime="20250108 15:55:46.777"/>
</kw>
<msg timestamp="20250108 15:55:46.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:46.768" endtime="20250108 15:55:46.777"/>
</kw>
<msg timestamp="20250108 15:55:46.777" level="INFO">${checksumafter} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:46.768" endtime="20250108 15:55:46.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:55:46.777" endtime="20250108 15:55:46.778"/>
</kw>
<status status="PASS" starttime="20250108 15:55:46.759" endtime="20250108 15:55:46.778"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250108 15:55:46.778" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-zzdntzuysi.verify"&gt;/tmp/tempfile-zzdntzuysi.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250108 15:55:46.778" endtime="20250108 15:55:46.778"/>
</kw>
<status status="PASS" starttime="20250108 15:55:45.180" endtime="20250108 15:55:46.778"/>
</kw>
<status status="PASS" starttime="20250108 15:55:44.670" endtime="20250108 15:55:46.778"/>
</iter>
<iter>
<var name="${name}">secret</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:46.782" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:47.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:47.282" level="INFO">${output} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250108 15:55:46.780" endtime="20250108 15:55:47.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:47.283" level="INFO">{
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250108 15:55:47.282" endtime="20250108 15:55:47.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:47.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:47.283" endtime="20250108 15:55:47.284"/>
</kw>
<status status="PASS" starttime="20250108 15:55:46.780" endtime="20250108 15:55:47.284"/>
</kw>
<msg timestamp="20250108 15:55:47.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:46.779" endtime="20250108 15:55:47.284"/>
</kw>
<msg timestamp="20250108 15:55:47.284" level="INFO">${output} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250108 15:55:46.779" endtime="20250108 15:55:47.284"/>
</kw>
<msg timestamp="20250108 15:55:47.284" level="INFO">${result} = {
    "Location": "http://s3g:9878/secret"
}</msg>
<status status="PASS" starttime="20250108 15:55:46.779" endtime="20250108 15:55:47.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:47.285" endtime="20250108 15:55:47.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:47.285" endtime="20250108 15:55:47.285"/>
</kw>
<status status="PASS" starttime="20250108 15:55:46.779" endtime="20250108 15:55:47.285"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:47.289" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket secret --key testkey --body /tmp/tempfile-zzdntzuysi 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:47.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:47.869" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:47.287" endtime="20250108 15:55:47.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:47.870" level="INFO">{
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:47.869" endtime="20250108 15:55:47.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:47.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:47.870" endtime="20250108 15:55:47.870"/>
</kw>
<status status="PASS" starttime="20250108 15:55:47.287" endtime="20250108 15:55:47.871"/>
</kw>
<msg timestamp="20250108 15:55:47.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:47.286" endtime="20250108 15:55:47.871"/>
</kw>
<msg timestamp="20250108 15:55:47.871" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:47.286" endtime="20250108 15:55:47.871"/>
</kw>
<status status="PASS" starttime="20250108 15:55:47.286" endtime="20250108 15:55:47.871"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:47.875" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:48.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:48.471" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:47.798Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:47.872" endtime="20250108 15:55:48.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:48.472" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:47.798Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:55:48.471" endtime="20250108 15:55:48.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:48.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:48.472" endtime="20250108 15:55:48.472"/>
</kw>
<status status="PASS" starttime="20250108 15:55:47.872" endtime="20250108 15:55:48.472"/>
</kw>
<msg timestamp="20250108 15:55:48.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:47.872" endtime="20250108 15:55:48.472"/>
</kw>
<msg timestamp="20250108 15:55:48.473" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:47.798Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:47.871" endtime="20250108 15:55:48.473"/>
</kw>
<msg timestamp="20250108 15:55:48.473" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:47.798Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:47.871" endtime="20250108 15:55:48.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:48.473" endtime="20250108 15:55:48.473"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:48.477" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket secret --key testkey /tmp/tempfile-zzdntzuysi.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:48.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:48.996" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:47 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:48.474" endtime="20250108 15:55:48.996"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:48.997" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:47 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:55:48 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:55:48 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:55:48.996" endtime="20250108 15:55:48.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:48.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:48.997" endtime="20250108 15:55:48.998"/>
</kw>
<status status="PASS" starttime="20250108 15:55:48.474" endtime="20250108 15:55:48.998"/>
</kw>
<msg timestamp="20250108 15:55:48.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:48.474" endtime="20250108 15:55:48.998"/>
</kw>
<msg timestamp="20250108 15:55:48.998" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:47 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:48.474" endtime="20250108 15:55:48.998"/>
</kw>
<status status="PASS" starttime="20250108 15:55:48.473" endtime="20250108 15:55:48.998"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:49.002" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:49.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:49.006" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:48.999" endtime="20250108 15:55:49.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:49.007" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:49.007" endtime="20250108 15:55:49.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:49.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:49.007" endtime="20250108 15:55:49.008"/>
</kw>
<status status="PASS" starttime="20250108 15:55:48.999" endtime="20250108 15:55:49.008"/>
</kw>
<msg timestamp="20250108 15:55:49.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:48.999" endtime="20250108 15:55:49.008"/>
</kw>
<msg timestamp="20250108 15:55:49.008" level="INFO">${checksumbefore} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:48.999" endtime="20250108 15:55:49.008"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:49.011" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:49.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:49.016" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:49.009" endtime="20250108 15:55:49.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:49.017" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:49.016" endtime="20250108 15:55:49.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:49.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:49.017" endtime="20250108 15:55:49.017"/>
</kw>
<status status="PASS" starttime="20250108 15:55:49.009" endtime="20250108 15:55:49.017"/>
</kw>
<msg timestamp="20250108 15:55:49.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:49.009" endtime="20250108 15:55:49.018"/>
</kw>
<msg timestamp="20250108 15:55:49.018" level="INFO">${checksumafter} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:49.008" endtime="20250108 15:55:49.018"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:55:49.018" endtime="20250108 15:55:49.018"/>
</kw>
<status status="PASS" starttime="20250108 15:55:48.998" endtime="20250108 15:55:49.018"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250108 15:55:49.019" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-zzdntzuysi.verify"&gt;/tmp/tempfile-zzdntzuysi.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250108 15:55:49.018" endtime="20250108 15:55:49.019"/>
</kw>
<status status="PASS" starttime="20250108 15:55:47.285" endtime="20250108 15:55:49.019"/>
</kw>
<status status="PASS" starttime="20250108 15:55:46.778" endtime="20250108 15:55:49.019"/>
</iter>
<iter>
<var name="${name}">stacks</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:49.023" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:49.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:49.536" level="INFO">${output} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250108 15:55:49.021" endtime="20250108 15:55:49.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:49.537" level="INFO">{
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250108 15:55:49.536" endtime="20250108 15:55:49.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:49.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:49.537" endtime="20250108 15:55:49.538"/>
</kw>
<status status="PASS" starttime="20250108 15:55:49.020" endtime="20250108 15:55:49.538"/>
</kw>
<msg timestamp="20250108 15:55:49.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:49.020" endtime="20250108 15:55:49.538"/>
</kw>
<msg timestamp="20250108 15:55:49.538" level="INFO">${output} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250108 15:55:49.020" endtime="20250108 15:55:49.538"/>
</kw>
<msg timestamp="20250108 15:55:49.538" level="INFO">${result} = {
    "Location": "http://s3g:9878/stacks"
}</msg>
<status status="PASS" starttime="20250108 15:55:49.019" endtime="20250108 15:55:49.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:49.538" endtime="20250108 15:55:49.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:49.538" endtime="20250108 15:55:49.539"/>
</kw>
<status status="PASS" starttime="20250108 15:55:49.019" endtime="20250108 15:55:49.539"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:49.543" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket stacks --key testkey --body /tmp/tempfile-zzdntzuysi 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:50.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:50.115" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:49.540" endtime="20250108 15:55:50.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:50.115" level="INFO">{
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:50.115" endtime="20250108 15:55:50.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:50.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:50.116" endtime="20250108 15:55:50.116"/>
</kw>
<status status="PASS" starttime="20250108 15:55:49.540" endtime="20250108 15:55:50.116"/>
</kw>
<msg timestamp="20250108 15:55:50.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:49.540" endtime="20250108 15:55:50.116"/>
</kw>
<msg timestamp="20250108 15:55:50.117" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:49.540" endtime="20250108 15:55:50.117"/>
</kw>
<status status="PASS" starttime="20250108 15:55:49.539" endtime="20250108 15:55:50.117"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:50.121" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket stacks 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:50.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:50.649" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:50.034Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:50.118" endtime="20250108 15:55:50.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:50.650" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:50.034Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:55:50.649" endtime="20250108 15:55:50.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:50.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:50.650" endtime="20250108 15:55:50.650"/>
</kw>
<status status="PASS" starttime="20250108 15:55:50.118" endtime="20250108 15:55:50.651"/>
</kw>
<msg timestamp="20250108 15:55:50.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:50.118" endtime="20250108 15:55:50.651"/>
</kw>
<msg timestamp="20250108 15:55:50.651" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:50.034Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:50.117" endtime="20250108 15:55:50.651"/>
</kw>
<msg timestamp="20250108 15:55:50.651" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:50.034Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:50.117" endtime="20250108 15:55:50.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:50.651" endtime="20250108 15:55:50.652"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:50.656" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket stacks --key testkey /tmp/tempfile-zzdntzuysi.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:51.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:51.162" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:50 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:50.653" endtime="20250108 15:55:51.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:51.163" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:50 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:55:51 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:55:51 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:55:51.162" endtime="20250108 15:55:51.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:51.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:51.163" endtime="20250108 15:55:51.163"/>
</kw>
<status status="PASS" starttime="20250108 15:55:50.653" endtime="20250108 15:55:51.164"/>
</kw>
<msg timestamp="20250108 15:55:51.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:50.652" endtime="20250108 15:55:51.164"/>
</kw>
<msg timestamp="20250108 15:55:51.164" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:50 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:50.652" endtime="20250108 15:55:51.164"/>
</kw>
<status status="PASS" starttime="20250108 15:55:50.652" endtime="20250108 15:55:51.164"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:51.167" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:51.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:51.172" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:51.165" endtime="20250108 15:55:51.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:51.173" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:51.172" endtime="20250108 15:55:51.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:51.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:51.173" endtime="20250108 15:55:51.173"/>
</kw>
<status status="PASS" starttime="20250108 15:55:51.165" endtime="20250108 15:55:51.173"/>
</kw>
<msg timestamp="20250108 15:55:51.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:51.165" endtime="20250108 15:55:51.173"/>
</kw>
<msg timestamp="20250108 15:55:51.173" level="INFO">${checksumbefore} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:51.164" endtime="20250108 15:55:51.173"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:51.176" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:51.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:51.181" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:51.174" endtime="20250108 15:55:51.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:51.182" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:51.182" endtime="20250108 15:55:51.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:51.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:51.182" endtime="20250108 15:55:51.183"/>
</kw>
<status status="PASS" starttime="20250108 15:55:51.174" endtime="20250108 15:55:51.183"/>
</kw>
<msg timestamp="20250108 15:55:51.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:51.174" endtime="20250108 15:55:51.183"/>
</kw>
<msg timestamp="20250108 15:55:51.183" level="INFO">${checksumafter} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:51.174" endtime="20250108 15:55:51.183"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:55:51.183" endtime="20250108 15:55:51.183"/>
</kw>
<status status="PASS" starttime="20250108 15:55:51.164" endtime="20250108 15:55:51.184"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250108 15:55:51.184" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-zzdntzuysi.verify"&gt;/tmp/tempfile-zzdntzuysi.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250108 15:55:51.184" endtime="20250108 15:55:51.184"/>
</kw>
<status status="PASS" starttime="20250108 15:55:49.539" endtime="20250108 15:55:51.184"/>
</kw>
<status status="PASS" starttime="20250108 15:55:49.019" endtime="20250108 15:55:51.184"/>
</iter>
<iter>
<var name="${name}">static</var>
<kw name="Create bucket with name" library="commonawslib">
<arg>${name}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:51.188" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket static 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:51.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:51.686" level="INFO">${output} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250108 15:55:51.186" endtime="20250108 15:55:51.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:51.687" level="INFO">{
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250108 15:55:51.687" endtime="20250108 15:55:51.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:51.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:51.688" endtime="20250108 15:55:51.688"/>
</kw>
<status status="PASS" starttime="20250108 15:55:51.186" endtime="20250108 15:55:51.689"/>
</kw>
<msg timestamp="20250108 15:55:51.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:51.185" endtime="20250108 15:55:51.689"/>
</kw>
<msg timestamp="20250108 15:55:51.689" level="INFO">${output} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250108 15:55:51.185" endtime="20250108 15:55:51.689"/>
</kw>
<msg timestamp="20250108 15:55:51.689" level="INFO">${result} = {
    "Location": "http://s3g:9878/static"
}</msg>
<status status="PASS" starttime="20250108 15:55:51.185" endtime="20250108 15:55:51.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:51.689" endtime="20250108 15:55:51.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:51.689" endtime="20250108 15:55:51.690"/>
</kw>
<status status="PASS" starttime="20250108 15:55:51.184" endtime="20250108 15:55:51.690"/>
</kw>
<kw name="Put object to bucket" library="commonawslib">
<arg>bucket=${name}</arg>
<arg>key=testkey</arg>
<arg>path=${path}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${bucket} --key ${key} --body ${path}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:51.693" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket static --key testkey --body /tmp/tempfile-zzdntzuysi 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:52.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:52.239" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:51.691" endtime="20250108 15:55:52.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:52.240" level="INFO">{
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:52.240" endtime="20250108 15:55:52.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:52.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:52.241" endtime="20250108 15:55:52.241"/>
</kw>
<status status="PASS" starttime="20250108 15:55:51.691" endtime="20250108 15:55:52.241"/>
</kw>
<msg timestamp="20250108 15:55:52.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:51.691" endtime="20250108 15:55:52.241"/>
</kw>
<msg timestamp="20250108 15:55:52.241" level="INFO">${output} = {
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\""
}</msg>
<status status="PASS" starttime="20250108 15:55:51.691" endtime="20250108 15:55:52.241"/>
</kw>
<status status="PASS" starttime="20250108 15:55:51.690" endtime="20250108 15:55:52.242"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:52.245" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket static 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:52.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:52.782" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:52.176Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:52.243" endtime="20250108 15:55:52.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:52.783" level="INFO">{
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:52.176Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:55:52.783" endtime="20250108 15:55:52.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:52.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:52.784" endtime="20250108 15:55:52.784"/>
</kw>
<status status="PASS" starttime="20250108 15:55:52.243" endtime="20250108 15:55:52.784"/>
</kw>
<msg timestamp="20250108 15:55:52.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:52.242" endtime="20250108 15:55:52.784"/>
</kw>
<msg timestamp="20250108 15:55:52.784" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:52.176Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:52.242" endtime="20250108 15:55:52.784"/>
</kw>
<msg timestamp="20250108 15:55:52.784" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "testkey",
            "LastModified": "2025-01-08T15:55:52.176Z",
            "Size": 65536,
            "StorageClass": "STANDARD",
            "Owne...</msg>
<status status="PASS" starttime="20250108 15:55:52.242" endtime="20250108 15:55:52.784"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:52.785" endtime="20250108 15:55:52.785"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} ${path}.verify</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:52.789" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket static --key testkey /tmp/tempfile-zzdntzuysi.verify 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:53.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:53.326" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:52 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:52.786" endtime="20250108 15:55:53.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:53.327" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:52 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:55:53 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:55:53 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:55:53.326" endtime="20250108 15:55:53.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:53.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:53.327" endtime="20250108 15:55:53.327"/>
</kw>
<status status="PASS" starttime="20250108 15:55:52.786" endtime="20250108 15:55:53.328"/>
</kw>
<msg timestamp="20250108 15:55:53.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:52.786" endtime="20250108 15:55:53.328"/>
</kw>
<msg timestamp="20250108 15:55:53.328" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:55:52 GMT",
    "ContentLength": 65536,
    "ETag": "\"76fb08b475c0c43a494aa8510d299d60\"",
    "CacheControl": "no-cache",
    ...</msg>
<status status="PASS" starttime="20250108 15:55:52.785" endtime="20250108 15:55:53.328"/>
</kw>
<status status="PASS" starttime="20250108 15:55:52.785" endtime="20250108 15:55:53.328"/>
</kw>
<kw name="Compare files" library="os">
<arg>${path}</arg>
<arg>${path}.verify</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:53.332" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:53.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:53.336" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:53.329" endtime="20250108 15:55:53.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:53.337" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:53.336" endtime="20250108 15:55:53.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:53.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:53.337" endtime="20250108 15:55:53.337"/>
</kw>
<status status="PASS" starttime="20250108 15:55:53.329" endtime="20250108 15:55:53.337"/>
</kw>
<msg timestamp="20250108 15:55:53.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:53.329" endtime="20250108 15:55:53.338"/>
</kw>
<msg timestamp="20250108 15:55:53.338" level="INFO">${checksumbefore} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:53.329" endtime="20250108 15:55:53.338"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:53.341" level="INFO">Running command 'md5sum /tmp/tempfile-zzdntzuysi.verify | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:53.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:53.346" level="INFO">${output} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:53.339" endtime="20250108 15:55:53.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:53.347" level="INFO">76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:53.346" endtime="20250108 15:55:53.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:53.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:53.347" endtime="20250108 15:55:53.347"/>
</kw>
<status status="PASS" starttime="20250108 15:55:53.339" endtime="20250108 15:55:53.347"/>
</kw>
<msg timestamp="20250108 15:55:53.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:53.338" endtime="20250108 15:55:53.347"/>
</kw>
<msg timestamp="20250108 15:55:53.347" level="INFO">${checksumafter} = 76fb08b475c0c43a494aa8510d299d60</msg>
<status status="PASS" starttime="20250108 15:55:53.338" endtime="20250108 15:55:53.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:55:53.348" endtime="20250108 15:55:53.348"/>
</kw>
<status status="PASS" starttime="20250108 15:55:53.328" endtime="20250108 15:55:53.348"/>
</kw>
<kw name="Remove File" library="OperatingSystem" type="TEARDOWN">
<arg>${path}.verify</arg>
<doc>Removes a file with the given path.</doc>
<msg timestamp="20250108 15:55:53.349" level="INFO" html="true">Removed file '&lt;a href="file:///tmp/tempfile-zzdntzuysi.verify"&gt;/tmp/tempfile-zzdntzuysi.verify&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250108 15:55:53.348" endtime="20250108 15:55:53.349"/>
</kw>
<status status="PASS" starttime="20250108 15:55:51.690" endtime="20250108 15:55:53.349"/>
</kw>
<status status="PASS" starttime="20250108 15:55:51.184" endtime="20250108 15:55:53.349"/>
</iter>
<status status="PASS" starttime="20250108 15:55:33.739" endtime="20250108 15:55:53.349"/>
</for>
<tag>aws-skip</tag>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:33.726" endtime="20250108 15:55:53.349"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:55:27.638" endtime="20250108 15:55:53.350"/>
</suite>
<suite id="s1-s3-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:55:53.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:53.366" endtime="20250108 15:55:53.366"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:53.366" endtime="20250108 15:55:53.366"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:53.366" endtime="20250108 15:55:53.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:53.367" endtime="20250108 15:55:53.367"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:53.367" endtime="20250108 15:55:53.367"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:53.367" endtime="20250108 15:55:53.367"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:53.367" endtime="20250108 15:55:53.367"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:53.367" endtime="20250108 15:55:53.367"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:55:53.367" endtime="20250108 15:55:53.367"/>
</kw>
<status status="PASS" starttime="20250108 15:55:53.366" endtime="20250108 15:55:53.367"/>
</kw>
<test id="s1-s3-s4-t1" name="Delete existing bucket" line="38">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:55:53.369" level="INFO">${randStr} = 8068798561</msg>
<status status="PASS" starttime="20250108 15:55:53.369" endtime="20250108 15:55:53.369"/>
</kw>
<msg timestamp="20250108 15:55:53.370" level="INFO">${postfix} = ozone-test-8068798561</msg>
<status status="PASS" starttime="20250108 15:55:53.369" endtime="20250108 15:55:53.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:55:53.370" level="INFO">${bucket} = bucket-ozone-test-8068798561</msg>
<status status="PASS" starttime="20250108 15:55:53.370" endtime="20250108 15:55:53.370"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:53.374" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-8068798561 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:53.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:53.907" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8068798561"
}</msg>
<status status="PASS" starttime="20250108 15:55:53.372" endtime="20250108 15:55:53.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:53.908" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-8068798561"
}</msg>
<status status="PASS" starttime="20250108 15:55:53.908" endtime="20250108 15:55:53.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:53.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:53.908" endtime="20250108 15:55:53.909"/>
</kw>
<status status="PASS" starttime="20250108 15:55:53.371" endtime="20250108 15:55:53.909"/>
</kw>
<msg timestamp="20250108 15:55:53.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:53.371" endtime="20250108 15:55:53.909"/>
</kw>
<msg timestamp="20250108 15:55:53.909" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8068798561"
}</msg>
<status status="PASS" starttime="20250108 15:55:53.371" endtime="20250108 15:55:53.909"/>
</kw>
<msg timestamp="20250108 15:55:53.909" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8068798561"
}</msg>
<status status="PASS" starttime="20250108 15:55:53.370" endtime="20250108 15:55:53.909"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:53.909" endtime="20250108 15:55:53.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:53.910" endtime="20250108 15:55:53.910"/>
</kw>
<status status="PASS" starttime="20250108 15:55:53.370" endtime="20250108 15:55:53.910"/>
</kw>
<status status="PASS" starttime="20250108 15:55:53.369" endtime="20250108 15:55:53.910"/>
</kw>
<status status="PASS" starttime="20250108 15:55:53.368" endtime="20250108 15:55:53.910"/>
</kw>
<msg timestamp="20250108 15:55:53.910" level="INFO">${bucket} = bucket-ozone-test-8068798561</msg>
<status status="PASS" starttime="20250108 15:55:53.368" endtime="20250108 15:55:53.910"/>
</kw>
<msg timestamp="20250108 15:55:53.910" level="INFO">${bucket} = bucket-ozone-test-8068798561</msg>
<status status="PASS" starttime="20250108 15:55:53.368" endtime="20250108 15:55:53.910"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:53.914" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-8068798561 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:54.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:54.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:53.912" endtime="20250108 15:55:54.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:54.427" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:54.427" endtime="20250108 15:55:54.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:54.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:54.428" endtime="20250108 15:55:54.428"/>
</kw>
<status status="PASS" starttime="20250108 15:55:53.911" endtime="20250108 15:55:54.428"/>
</kw>
<msg timestamp="20250108 15:55:54.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:53.911" endtime="20250108 15:55:54.428"/>
</kw>
<msg timestamp="20250108 15:55:54.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:53.911" endtime="20250108 15:55:54.428"/>
</kw>
<status status="PASS" starttime="20250108 15:55:53.910" endtime="20250108 15:55:54.428"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:53.367" endtime="20250108 15:55:54.429"/>
</test>
<test id="s1-s3-s4-t2" name="Delete non-existent bucket" line="42">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:55:54.430" level="INFO">${randStr} = 2486717078</msg>
<status status="PASS" starttime="20250108 15:55:54.430" endtime="20250108 15:55:54.430"/>
</kw>
<msg timestamp="20250108 15:55:54.430" level="INFO">${randStr} = ozone-test-2486717078</msg>
<status status="PASS" starttime="20250108 15:55:54.430" endtime="20250108 15:55:54.430"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:54.433" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-2486717078 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:54.995" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:55:54.995" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:55:54.431" endtime="20250108 15:55:54.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:54.996" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:55:54.995" endtime="20250108 15:55:54.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:54.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:54.996" endtime="20250108 15:55:54.996"/>
</kw>
<msg timestamp="20250108 15:55:54.997" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:55:54.431" endtime="20250108 15:55:54.997"/>
</kw>
<msg timestamp="20250108 15:55:54.997" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:55:54.430" endtime="20250108 15:55:54.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:54.997" endtime="20250108 15:55:54.997"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:54.429" endtime="20250108 15:55:54.997"/>
</test>
<test id="s1-s3-s4-t3" name="Delete bucket with incomplete multipart uploads" line="48">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:55:54.999" level="INFO">${randStr} = 0434345455</msg>
<status status="PASS" starttime="20250108 15:55:54.999" endtime="20250108 15:55:54.999"/>
</kw>
<msg timestamp="20250108 15:55:55.000" level="INFO">${postfix} = ozone-test-0434345455</msg>
<status status="PASS" starttime="20250108 15:55:54.999" endtime="20250108 15:55:55.000"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 15:55:55.000" level="INFO">${bucket} = bucket-ozone-test-0434345455</msg>
<status status="PASS" starttime="20250108 15:55:55.000" endtime="20250108 15:55:55.000"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:55.003" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-0434345455 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:55.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:55.537" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0434345455"
}</msg>
<status status="PASS" starttime="20250108 15:55:55.001" endtime="20250108 15:55:55.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:55.538" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-0434345455"
}</msg>
<status status="PASS" starttime="20250108 15:55:55.537" endtime="20250108 15:55:55.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:55.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:55.538" endtime="20250108 15:55:55.538"/>
</kw>
<status status="PASS" starttime="20250108 15:55:55.001" endtime="20250108 15:55:55.538"/>
</kw>
<msg timestamp="20250108 15:55:55.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:55.001" endtime="20250108 15:55:55.539"/>
</kw>
<msg timestamp="20250108 15:55:55.539" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0434345455"
}</msg>
<status status="PASS" starttime="20250108 15:55:55.000" endtime="20250108 15:55:55.539"/>
</kw>
<msg timestamp="20250108 15:55:55.539" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0434345455"
}</msg>
<status status="PASS" starttime="20250108 15:55:55.000" endtime="20250108 15:55:55.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:55.539" endtime="20250108 15:55:55.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:55.539" endtime="20250108 15:55:55.540"/>
</kw>
<status status="PASS" starttime="20250108 15:55:55.000" endtime="20250108 15:55:55.540"/>
</kw>
<msg timestamp="20250108 15:55:55.540" level="INFO">${bucket} = bucket-ozone-test-0434345455</msg>
<status status="PASS" starttime="20250108 15:55:54.998" endtime="20250108 15:55:55.540"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${bucket}</arg>
<arg>incomplete-multipartkey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:55.544" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-ozone-test-0434345455 --key incomplete-multipartkey  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:56.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:56.049" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-0434345455",
    "Key": "incomplete-multipartkey",
    "UploadId": "fb8e8c1e-d914-47de-9f0e-07686b6cdcd3-113793548680101919"
}</msg>
<status status="PASS" starttime="20250108 15:55:55.542" endtime="20250108 15:55:56.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:56.050" level="INFO">{
    "Bucket": "bucket-ozone-test-0434345455",
    "Key": "incomplete-multipartkey",
    "UploadId": "fb8e8c1e-d914-47de-9f0e-07686b6cdcd3-113793548680101919"
}</msg>
<status status="PASS" starttime="20250108 15:55:56.049" endtime="20250108 15:55:56.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:56.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:56.050" endtime="20250108 15:55:56.051"/>
</kw>
<msg timestamp="20250108 15:55:56.051" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-0434345455",
    "Key": "incomplete-multipartkey",
    "UploadId": "fb8e8c1e-d914-47de-9f0e-07686b6cdcd3-113793548680101919"
}</msg>
<status status="PASS" starttime="20250108 15:55:55.541" endtime="20250108 15:55:56.051"/>
</kw>
<msg timestamp="20250108 15:55:56.051" level="INFO">${result} = {
    "Bucket": "bucket-ozone-test-0434345455",
    "Key": "incomplete-multipartkey",
    "UploadId": "fb8e8c1e-d914-47de-9f0e-07686b6cdcd3-113793548680101919"
}</msg>
<status status="PASS" starttime="20250108 15:55:55.541" endtime="20250108 15:55:56.051"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:56.051" endtime="20250108 15:55:56.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:56.052" endtime="20250108 15:55:56.052"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:56.055" level="INFO">Running command 'echo '{
    "Bucket": "bucket-ozone-test-0434345455",
    "Key": "incomplete-multipartkey",
    "UploadId": "fb8e8c1e-d914-47de-9f0e-07686b6cdcd3-113793548680101919"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:56.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:56.060" level="INFO">${output} = fb8e8c1e-d914-47de-9f0e-07686b6cdcd3-113793548680101919</msg>
<status status="PASS" starttime="20250108 15:55:56.052" endtime="20250108 15:55:56.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:56.061" level="INFO">fb8e8c1e-d914-47de-9f0e-07686b6cdcd3-113793548680101919</msg>
<status status="PASS" starttime="20250108 15:55:56.060" endtime="20250108 15:55:56.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:56.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:56.061" endtime="20250108 15:55:56.061"/>
</kw>
<msg timestamp="20250108 15:55:56.061" level="INFO">${upload_id} = fb8e8c1e-d914-47de-9f0e-07686b6cdcd3-113793548680101919</msg>
<status status="PASS" starttime="20250108 15:55:56.052" endtime="20250108 15:55:56.062"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:55:56.062" endtime="20250108 15:55:56.062"/>
</return>
<status status="PASS" starttime="20250108 15:55:56.051" endtime="20250108 15:55:56.062"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:55:56.062" endtime="20250108 15:55:56.062"/>
</return>
<status status="NOT RUN" starttime="20250108 15:55:56.062" endtime="20250108 15:55:56.062"/>
</branch>
<status status="PASS" starttime="20250108 15:55:56.051" endtime="20250108 15:55:56.062"/>
</if>
<msg timestamp="20250108 15:55:56.062" level="INFO">${uploadID} = fb8e8c1e-d914-47de-9f0e-07686b6cdcd3-113793548680101919</msg>
<status status="PASS" starttime="20250108 15:55:55.540" endtime="20250108 15:55:56.062"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_fail_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:56.066" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-0434345455 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:56.564" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:55:56.564" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250108 15:55:56.063" endtime="20250108 15:55:56.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:56.565" level="INFO">
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please ensure that the bucket layout is OBJECT_STORE or that the bucket is completely empty before delete.</msg>
<status status="PASS" starttime="20250108 15:55:56.564" endtime="20250108 15:55:56.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:56.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:56.565" endtime="20250108 15:55:56.565"/>
</kw>
<msg timestamp="20250108 15:55:56.565" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250108 15:55:56.063" endtime="20250108 15:55:56.565"/>
</kw>
<msg timestamp="20250108 15:55:56.566" level="INFO">${delete_fail_result} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20250108 15:55:56.062" endtime="20250108 15:55:56.566"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${delete_fail_result}</arg>
<arg>BucketNotEmpty</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:56.566" endtime="20250108 15:55:56.566"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${abort_result}</var>
<arg>${bucket}</arg>
<arg>incomplete-multipartkey</arg>
<arg>${uploadID}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:56.569" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-ozone-test-0434345455 --key incomplete-multipartkey --upload-id fb8e8c1e-d914-47de-9f0e-07686b6cdcd3-113793548680101919 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:57.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:57.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:56.567" endtime="20250108 15:55:57.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:57.109" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:57.109" endtime="20250108 15:55:57.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:57.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:57.109" endtime="20250108 15:55:57.110"/>
</kw>
<msg timestamp="20250108 15:55:57.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:56.567" endtime="20250108 15:55:57.110"/>
</kw>
<msg timestamp="20250108 15:55:57.110" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:55:56.566" endtime="20250108 15:55:57.110"/>
</kw>
<msg timestamp="20250108 15:55:57.110" level="INFO">${abort_result} = None</msg>
<status status="PASS" starttime="20250108 15:55:56.566" endtime="20250108 15:55:57.110"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:57.113" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-0434345455 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:57.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:57.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:57.111" endtime="20250108 15:55:57.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:57.639" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:57.639" endtime="20250108 15:55:57.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:57.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:57.640" endtime="20250108 15:55:57.640"/>
</kw>
<msg timestamp="20250108 15:55:57.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:57.111" endtime="20250108 15:55:57.640"/>
</kw>
<msg timestamp="20250108 15:55:57.640" level="INFO">${delete_result} = </msg>
<status status="PASS" starttime="20250108 15:55:57.110" endtime="20250108 15:55:57.640"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:54.998" endtime="20250108 15:55:57.641"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:55:53.351" endtime="20250108 15:55:57.641"/>
</suite>
<suite id="s1-s3-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:55:57.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:57.650" endtime="20250108 15:55:57.651"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:57.651" endtime="20250108 15:55:57.651"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:57.651" endtime="20250108 15:55:57.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:57.651" endtime="20250108 15:55:57.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:57.651" endtime="20250108 15:55:57.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:57.651" endtime="20250108 15:55:57.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:57.651" endtime="20250108 15:55:57.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:57.651" endtime="20250108 15:55:57.651"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:55:57.651" endtime="20250108 15:55:57.651"/>
</kw>
<status status="PASS" starttime="20250108 15:55:57.650" endtime="20250108 15:55:57.652"/>
</kw>
<test id="s1-s3-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:57.655" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:58.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:58.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:57.653" endtime="20250108 15:55:58.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:58.155" level="INFO"/>
<status status="PASS" starttime="20250108 15:55:58.155" endtime="20250108 15:55:58.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:58.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:58.155" endtime="20250108 15:55:58.156"/>
</kw>
<status status="PASS" starttime="20250108 15:55:57.653" endtime="20250108 15:55:58.156"/>
</kw>
<msg timestamp="20250108 15:55:58.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:57.653" endtime="20250108 15:55:58.156"/>
</kw>
<msg timestamp="20250108 15:55:58.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:55:57.652" endtime="20250108 15:55:58.156"/>
</kw>
<msg timestamp="20250108 15:55:58.156" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:55:57.652" endtime="20250108 15:55:58.156"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:57.652" endtime="20250108 15:55:58.156"/>
</test>
<test id="s1-s3-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:55:58.158" level="INFO">${randStr} = 8872109861</msg>
<status status="PASS" starttime="20250108 15:55:58.158" endtime="20250108 15:55:58.158"/>
</kw>
<msg timestamp="20250108 15:55:58.158" level="INFO">${randStr} = ozone-test-8872109861</msg>
<status status="PASS" starttime="20250108 15:55:58.157" endtime="20250108 15:55:58.158"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:58.161" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-8872109861 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:58.667" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:55:58.667" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:55:58.159" endtime="20250108 15:55:58.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:58.668" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:55:58.667" endtime="20250108 15:55:58.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:58.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:58.668" endtime="20250108 15:55:58.668"/>
</kw>
<msg timestamp="20250108 15:55:58.668" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:55:58.159" endtime="20250108 15:55:58.668"/>
</kw>
<msg timestamp="20250108 15:55:58.668" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:55:58.158" endtime="20250108 15:55:58.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:58.669" endtime="20250108 15:55:58.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:58.669" endtime="20250108 15:55:58.669"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:58.157" endtime="20250108 15:55:58.669"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:55:57.643" endtime="20250108 15:55:58.670"/>
</suite>
<suite id="s1-s3-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:55:58.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:58.678" endtime="20250108 15:55:58.678"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:58.679" endtime="20250108 15:55:58.679"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:55:58.679" endtime="20250108 15:55:58.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:58.679" endtime="20250108 15:55:58.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:58.679" endtime="20250108 15:55:58.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:58.679" endtime="20250108 15:55:58.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:58.679" endtime="20250108 15:55:58.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:55:58.679" endtime="20250108 15:55:58.679"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:55:58.679" endtime="20250108 15:55:58.679"/>
</kw>
<status status="PASS" starttime="20250108 15:55:58.678" endtime="20250108 15:55:58.679"/>
</kw>
<test id="s1-s3-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:58.683" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:55:59.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:55:59.196" level="INFO">${output} = bucket-mlvacfazpv
bucket-ozone-test-0748209966
bucket-ozone-test-5639534662
bucket-ozone-test-9173678312
bucket-test-owner1
bucket-test123
bucket-xiwjzuaoao
conf
encrypted
jmx
logs
logstream
prof
prom...</msg>
<status status="PASS" starttime="20250108 15:55:58.681" endtime="20250108 15:55:59.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:55:59.197" level="INFO">bucket-mlvacfazpv
bucket-ozone-test-0748209966
bucket-ozone-test-5639534662
bucket-ozone-test-9173678312
bucket-test-owner1
bucket-test123
bucket-xiwjzuaoao
conf
encrypted
jmx
logs
logstream
prof
prom
secret
stacks
static</msg>
<status status="PASS" starttime="20250108 15:55:59.197" endtime="20250108 15:55:59.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:55:59.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:55:59.197" endtime="20250108 15:55:59.198"/>
</kw>
<status status="PASS" starttime="20250108 15:55:58.681" endtime="20250108 15:55:59.198"/>
</kw>
<msg timestamp="20250108 15:55:59.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:58.680" endtime="20250108 15:55:59.198"/>
</kw>
<msg timestamp="20250108 15:55:59.198" level="INFO">${output} = bucket-mlvacfazpv
bucket-ozone-test-0748209966
bucket-ozone-test-5639534662
bucket-ozone-test-9173678312
bucket-test-owner1
bucket-test123
bucket-xiwjzuaoao
conf
encrypted
jmx
logs
logstream
prof
prom...</msg>
<status status="PASS" starttime="20250108 15:55:58.680" endtime="20250108 15:55:59.198"/>
</kw>
<msg timestamp="20250108 15:55:59.198" level="INFO">${result} = bucket-mlvacfazpv
bucket-ozone-test-0748209966
bucket-ozone-test-5639534662
bucket-ozone-test-9173678312
bucket-test-owner1
bucket-test123
bucket-xiwjzuaoao
conf
encrypted
jmx
logs
logstream
prof
prom...</msg>
<status status="PASS" starttime="20250108 15:55:58.680" endtime="20250108 15:55:59.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:55:59.198" endtime="20250108 15:55:59.199"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:58.680" endtime="20250108 15:55:59.199"/>
</test>
<test id="s1-s3-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:55:59.200" endtime="20250108 15:55:59.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:55:59.203" level="INFO">Running command 'ozone sh bucket info /s3v/encrypted | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:02.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:02.666" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20250108 15:55:59.201" endtime="20250108 15:56:02.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:02.667" level="INFO">testuser</msg>
<status status="PASS" starttime="20250108 15:56:02.667" endtime="20250108 15:56:02.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:02.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:02.667" endtime="20250108 15:56:02.668"/>
</kw>
<status status="PASS" starttime="20250108 15:55:59.201" endtime="20250108 15:56:02.668"/>
</kw>
<msg timestamp="20250108 15:56:02.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:55:59.200" endtime="20250108 15:56:02.668"/>
</kw>
<msg timestamp="20250108 15:56:02.668" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20250108 15:55:59.200" endtime="20250108 15:56:02.668"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:02.668" endtime="20250108 15:56:02.668"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:55:59.199" endtime="20250108 15:56:02.669"/>
</test>
<test id="s1-s3-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:02.672" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:03.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:03.039" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:56:02.670" endtime="20250108 15:56:03.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:03.040" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:56:03.039" endtime="20250108 15:56:03.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:03.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:03.040" endtime="20250108 15:56:03.040"/>
</kw>
<status status="PASS" starttime="20250108 15:56:02.670" endtime="20250108 15:56:03.040"/>
</kw>
<msg timestamp="20250108 15:56:03.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:02.670" endtime="20250108 15:56:03.041"/>
</kw>
<msg timestamp="20250108 15:56:03.041" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:56:02.670" endtime="20250108 15:56:03.041"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20250108 15:56:03.041" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:56:03.041" endtime="20250108 15:56:03.041"/>
</kw>
<status status="PASS" starttime="20250108 15:56:02.669" endtime="20250108 15:56:03.041"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:03.044" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:03.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:03.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:03.042" endtime="20250108 15:56:03.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:03.412" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:03.411" endtime="20250108 15:56:03.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:03.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:03.412" endtime="20250108 15:56:03.412"/>
</kw>
<status status="PASS" starttime="20250108 15:56:03.042" endtime="20250108 15:56:03.413"/>
</kw>
<msg timestamp="20250108 15:56:03.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:03.042" endtime="20250108 15:56:03.413"/>
</kw>
<status status="PASS" starttime="20250108 15:56:03.041" endtime="20250108 15:56:03.413"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:03.416" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:03.907" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:03.907" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250108 15:56:03.414" endtime="20250108 15:56:03.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:03.908" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250108 15:56:03.907" endtime="20250108 15:56:03.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:03.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:03.908" endtime="20250108 15:56:03.908"/>
</kw>
<msg timestamp="20250108 15:56:03.908" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250108 15:56:03.413" endtime="20250108 15:56:03.908"/>
</kw>
<msg timestamp="20250108 15:56:03.909" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20250108 15:56:03.413" endtime="20250108 15:56:03.909"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:03.909" endtime="20250108 15:56:03.909"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:03.912" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:04.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:04.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:03.911" endtime="20250108 15:56:04.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:04.268" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:04.267" endtime="20250108 15:56:04.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:04.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:04.268" endtime="20250108 15:56:04.268"/>
</kw>
<status status="PASS" starttime="20250108 15:56:03.910" endtime="20250108 15:56:04.268"/>
</kw>
<msg timestamp="20250108 15:56:04.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:03.910" endtime="20250108 15:56:04.268"/>
</kw>
<status status="PASS" starttime="20250108 15:56:03.909" endtime="20250108 15:56:04.268"/>
</kw>
<status status="PASS" starttime="20250108 15:56:03.909" endtime="20250108 15:56:04.268"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:02.669" endtime="20250108 15:56:04.269"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:55:58.671" endtime="20250108 15:56:04.269"/>
</suite>
<suite id="s1-s3-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:56:04.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:04.279" endtime="20250108 15:56:04.279"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:56:04.279" endtime="20250108 15:56:04.279"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:56:04.279" endtime="20250108 15:56:04.279"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:56:04.280" endtime="20250108 15:56:04.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:56:04.280" endtime="20250108 15:56:04.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:56:04.280" endtime="20250108 15:56:04.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:56:04.280" endtime="20250108 15:56:04.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:56:04.280" endtime="20250108 15:56:04.280"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:56:04.280" endtime="20250108 15:56:04.280"/>
</kw>
<status status="PASS" starttime="20250108 15:56:04.279" endtime="20250108 15:56:04.280"/>
</kw>
<test id="s1-s3-s7-t1" name="Run Freon S3BG" line="43">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:04.284" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:04.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:04.633" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:56:04.282" endtime="20250108 15:56:04.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:04.633" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:56:04.633" endtime="20250108 15:56:04.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:04.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:04.634" endtime="20250108 15:56:04.634"/>
</kw>
<status status="PASS" starttime="20250108 15:56:04.281" endtime="20250108 15:56:04.634"/>
</kw>
<msg timestamp="20250108 15:56:04.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:04.281" endtime="20250108 15:56:04.634"/>
</kw>
<msg timestamp="20250108 15:56:04.634" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:56:04.281" endtime="20250108 15:56:04.634"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:04.637" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:04.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:04.998" level="INFO">${output} = ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6</msg>
<status status="PASS" starttime="20250108 15:56:04.635" endtime="20250108 15:56:04.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:04.998" level="INFO">ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6</msg>
<status status="PASS" starttime="20250108 15:56:04.998" endtime="20250108 15:56:04.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:04.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:04.998" endtime="20250108 15:56:04.999"/>
</kw>
<status status="PASS" starttime="20250108 15:56:04.635" endtime="20250108 15:56:04.999"/>
</kw>
<msg timestamp="20250108 15:56:04.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:04.635" endtime="20250108 15:56:04.999"/>
</kw>
<msg timestamp="20250108 15:56:04.999" level="INFO">${secret} = ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6</msg>
<status status="PASS" starttime="20250108 15:56:04.634" endtime="20250108 15:56:04.999"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250108 15:56:05.000" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6'.</msg>
<status status="PASS" starttime="20250108 15:56:04.999" endtime="20250108 15:56:05.000"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250108 15:56:05.000" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/scm@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20250108 15:56:05.000" endtime="20250108 15:56:05.000"/>
</kw>
<status status="PASS" starttime="20250108 15:56:04.281" endtime="20250108 15:56:05.000"/>
</kw>
<kw name="Freon S3BG">
<arg>s3bg-${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:05.004" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg-encrypted  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:08.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:08.924" level="INFO">${output} = 2025-01-08 15:56:06,443 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-01-08 15:56:06,615 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250108 15:56:05.002" endtime="20250108 15:56:08.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:08.925" level="INFO">2025-01-08 15:56:06,443 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-01-08 15:56:06,615 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2025-01-08 15:56:06,615 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2025-01-08 15:56:06,770 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg-encrypted and number-of-tests 100
2025-01-08 15:56:06,849 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2025-01-08 15:56:07,863 [Thread-5] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2025-01-08 15:56:08,864 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2025-01-08 15:56:08,879 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=39.890174, max=247.736691, mean=99.21724709332771, stddev=44.80444423222374, median=86.12191, p75=118.572052, p95=191.183333, p98=243.123001, p99=244.310969, p999=247.736691, mean_rate=74.57919398297449, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2025-01-08 15:56:08,880 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2025-01-08 15:56:08,880 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2025-01-08 15:56:08,880 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20250108 15:56:08.925" endtime="20250108 15:56:08.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:08.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:08.925" endtime="20250108 15:56:08.925"/>
</kw>
<status status="PASS" starttime="20250108 15:56:05.002" endtime="20250108 15:56:08.926"/>
</kw>
<msg timestamp="20250108 15:56:08.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:05.001" endtime="20250108 15:56:08.926"/>
</kw>
<msg timestamp="20250108 15:56:08.926" level="INFO">${result} = 2025-01-08 15:56:06,443 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2025-01-08 15:56:06,615 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20250108 15:56:05.001" endtime="20250108 15:56:08.926"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:08.926" endtime="20250108 15:56:08.926"/>
</kw>
<status status="PASS" starttime="20250108 15:56:05.000" endtime="20250108 15:56:08.926"/>
</kw>
<tag>no-bucket-type</tag>
<status status="PASS" starttime="20250108 15:56:04.280" endtime="20250108 15:56:08.926"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:56:04.270" endtime="20250108 15:56:08.927"/>
</suite>
<suite id="s1-s3-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:56:08.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:08.939" endtime="20250108 15:56:08.939"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:56:08.939" endtime="20250108 15:56:08.940"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:56:08.940" endtime="20250108 15:56:08.940"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:56:08.940" endtime="20250108 15:56:08.940"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:56:08.940" endtime="20250108 15:56:08.940"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:56:08.940" endtime="20250108 15:56:08.940"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:56:08.940" endtime="20250108 15:56:08.940"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:56:08.940" endtime="20250108 15:56:08.940"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:56:08.940" endtime="20250108 15:56:08.940"/>
</kw>
<status status="PASS" starttime="20250108 15:56:08.939" endtime="20250108 15:56:08.940"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>5121</arg>
<arg>/tmp/part1</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250108 15:56:08.942" endtime="20250108 15:56:08.942"/>
</kw>
<msg timestamp="20250108 15:56:08.942" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20250108 15:56:08.941" endtime="20250108 15:56:08.942"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:08.946" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:08.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:08.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:08.943" endtime="20250108 15:56:08.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:08.989" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:08.988" endtime="20250108 15:56:08.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:08.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:08.989" endtime="20250108 15:56:08.989"/>
</kw>
<status status="PASS" starttime="20250108 15:56:08.943" endtime="20250108 15:56:08.989"/>
</kw>
<msg timestamp="20250108 15:56:08.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:08.943" endtime="20250108 15:56:08.989"/>
</kw>
<status status="PASS" starttime="20250108 15:56:08.942" endtime="20250108 15:56:08.989"/>
</kw>
<msg timestamp="20250108 15:56:08.989" level="INFO">${path} = /tmp/part1</msg>
<status status="PASS" starttime="20250108 15:56:08.941" endtime="20250108 15:56:08.989"/>
</kw>
<status status="PASS" starttime="20250108 15:56:08.941" endtime="20250108 15:56:08.990"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>1023</arg>
<arg>/tmp/part2</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250108 15:56:08.991" endtime="20250108 15:56:08.991"/>
</kw>
<msg timestamp="20250108 15:56:08.991" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20250108 15:56:08.990" endtime="20250108 15:56:08.991"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:08.994" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:09.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:09.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:08.992" endtime="20250108 15:56:09.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:09.007" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:09.006" endtime="20250108 15:56:09.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:09.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:09.007" endtime="20250108 15:56:09.007"/>
</kw>
<status status="PASS" starttime="20250108 15:56:08.992" endtime="20250108 15:56:09.007"/>
</kw>
<msg timestamp="20250108 15:56:09.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:08.992" endtime="20250108 15:56:09.007"/>
</kw>
<status status="PASS" starttime="20250108 15:56:08.991" endtime="20250108 15:56:09.007"/>
</kw>
<msg timestamp="20250108 15:56:09.007" level="INFO">${path} = /tmp/part2</msg>
<status status="PASS" starttime="20250108 15:56:08.990" endtime="20250108 15:56:09.008"/>
</kw>
<status status="PASS" starttime="20250108 15:56:08.990" endtime="20250108 15:56:09.008"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>10</arg>
<arg>/tmp/10mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250108 15:56:09.009" endtime="20250108 15:56:09.009"/>
</kw>
<msg timestamp="20250108 15:56:09.009" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20250108 15:56:09.008" endtime="20250108 15:56:09.009"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:09.013" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10mb bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:09.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:09.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:09.010" endtime="20250108 15:56:09.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:09.061" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:09.061" endtime="20250108 15:56:09.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:09.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:09.062" endtime="20250108 15:56:09.062"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.010" endtime="20250108 15:56:09.062"/>
</kw>
<msg timestamp="20250108 15:56:09.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:09.010" endtime="20250108 15:56:09.063"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.009" endtime="20250108 15:56:09.063"/>
</kw>
<msg timestamp="20250108 15:56:09.063" level="INFO">${path} = /tmp/10mb</msg>
<status status="PASS" starttime="20250108 15:56:09.008" endtime="20250108 15:56:09.063"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.008" endtime="20250108 15:56:09.063"/>
</kw>
<kw name="Create Random File MB" library="os">
<arg>22</arg>
<arg>/tmp/22mb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_megabytes}</arg>
<arg>1048576</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250108 15:56:09.065" endtime="20250108 15:56:09.065"/>
</kw>
<msg timestamp="20250108 15:56:09.065" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20250108 15:56:09.064" endtime="20250108 15:56:09.065"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:09.069" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/22mb bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:09.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:09.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:09.067" endtime="20250108 15:56:09.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:09.169" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:09.168" endtime="20250108 15:56:09.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:09.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:09.169" endtime="20250108 15:56:09.169"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.066" endtime="20250108 15:56:09.169"/>
</kw>
<msg timestamp="20250108 15:56:09.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:09.066" endtime="20250108 15:56:09.170"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.065" endtime="20250108 15:56:09.170"/>
</kw>
<msg timestamp="20250108 15:56:09.170" level="INFO">${path} = /tmp/22mb</msg>
<status status="PASS" starttime="20250108 15:56:09.063" endtime="20250108 15:56:09.170"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.063" endtime="20250108 15:56:09.170"/>
</kw>
<kw name="Create Random File KB" library="os">
<arg>10</arg>
<arg>/tmp/10kb</arg>
<kw name="Create Random File" library="os">
<var>${path}</var>
<arg>${size_in_kilobytes}</arg>
<arg>1024</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path}</var>
<arg>'${path}' == '${EMPTY}'</arg>
<arg>Get Random Filename</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${path}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250108 15:56:09.171" endtime="20250108 15:56:09.171"/>
</kw>
<msg timestamp="20250108 15:56:09.172" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20250108 15:56:09.171" endtime="20250108 15:56:09.172"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${path} bs=${block_size} count=${block_count} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:09.174" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/10kb bs=1024 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:09.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:09.178" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:09.172" endtime="20250108 15:56:09.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:09.178" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:09.178" endtime="20250108 15:56:09.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:09.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:09.179" endtime="20250108 15:56:09.179"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.172" endtime="20250108 15:56:09.179"/>
</kw>
<msg timestamp="20250108 15:56:09.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:09.172" endtime="20250108 15:56:09.179"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.172" endtime="20250108 15:56:09.179"/>
</kw>
<msg timestamp="20250108 15:56:09.179" level="INFO">${path} = /tmp/10kb</msg>
<status status="PASS" starttime="20250108 15:56:09.170" endtime="20250108 15:56:09.179"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.170" endtime="20250108 15:56:09.179"/>
</kw>
<status status="PASS" starttime="20250108 15:56:08.939" endtime="20250108 15:56:09.179"/>
</kw>
<test id="s1-s3-s8-t1" name="Test Multipart Upload With Adjusted Length" line="60">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:09.181" level="INFO">${randStr} = 8141369942</msg>
<status status="PASS" starttime="20250108 15:56:09.181" endtime="20250108 15:56:09.181"/>
</kw>
<msg timestamp="20250108 15:56:09.181" level="INFO">${random} = ozone-test-8141369942</msg>
<status status="PASS" starttime="20250108 15:56:09.180" endtime="20250108 15:56:09.181"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:09.182" level="INFO">${PREFIX} = ozone-test-8141369942</msg>
<status status="PASS" starttime="20250108 15:56:09.181" endtime="20250108 15:56:09.182"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.180" endtime="20250108 15:56:09.182"/>
</kw>
<kw name="Perform Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Initiate MPU" library="mpu_lib">
<var>${upload_id}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:09.186" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-8141369942  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:09.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:09.698" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-8141369942",
    "UploadId": "feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856"
}</msg>
<status status="PASS" starttime="20250108 15:56:09.184" endtime="20250108 15:56:09.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:09.699" level="INFO">{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-8141369942",
    "UploadId": "feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856"
}</msg>
<status status="PASS" starttime="20250108 15:56:09.698" endtime="20250108 15:56:09.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:09.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:09.699" endtime="20250108 15:56:09.699"/>
</kw>
<msg timestamp="20250108 15:56:09.699" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-8141369942",
    "UploadId": "feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856"
}</msg>
<status status="PASS" starttime="20250108 15:56:09.183" endtime="20250108 15:56:09.699"/>
</kw>
<msg timestamp="20250108 15:56:09.700" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-8141369942",
    "UploadId": "feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856"
}</msg>
<status status="PASS" starttime="20250108 15:56:09.183" endtime="20250108 15:56:09.700"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:09.700" endtime="20250108 15:56:09.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:09.700" endtime="20250108 15:56:09.701"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:09.703" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-8141369942",
    "UploadId": "feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:09.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:09.709" level="INFO">${output} = feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856</msg>
<status status="PASS" starttime="20250108 15:56:09.701" endtime="20250108 15:56:09.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:09.710" level="INFO">feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856</msg>
<status status="PASS" starttime="20250108 15:56:09.709" endtime="20250108 15:56:09.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:09.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:09.710" endtime="20250108 15:56:09.710"/>
</kw>
<msg timestamp="20250108 15:56:09.711" level="INFO">${upload_id} = feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856</msg>
<status status="PASS" starttime="20250108 15:56:09.701" endtime="20250108 15:56:09.711"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:09.711" endtime="20250108 15:56:09.711"/>
</return>
<status status="PASS" starttime="20250108 15:56:09.700" endtime="20250108 15:56:09.711"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:09.711" endtime="20250108 15:56:09.711"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:09.711" endtime="20250108 15:56:09.711"/>
</branch>
<status status="PASS" starttime="20250108 15:56:09.700" endtime="20250108 15:56:09.711"/>
</if>
<msg timestamp="20250108 15:56:09.711" level="INFO">${upload_id} = feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856</msg>
<status status="PASS" starttime="20250108 15:56:09.182" endtime="20250108 15:56:09.711"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>@{files}</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250108 15:56:09.712" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250108 15:56:09.712" endtime="20250108 15:56:09.712"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250108 15:56:09.713" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250108 15:56:09.712" endtime="20250108 15:56:09.713"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:09.716" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-8141369942 --part-number 1 --body /tmp/part1 --upload-id feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:10.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:10.464" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:09.714" endtime="20250108 15:56:10.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:10.466" level="INFO">{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:10.465" endtime="20250108 15:56:10.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:10.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:10.466" endtime="20250108 15:56:10.466"/>
</kw>
<msg timestamp="20250108 15:56:10.466" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:09.714" endtime="20250108 15:56:10.466"/>
</kw>
<msg timestamp="20250108 15:56:10.467" level="INFO">${result} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:09.713" endtime="20250108 15:56:10.467"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:10.467" endtime="20250108 15:56:10.467"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:10.471" level="INFO">Running command 'echo '{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:10.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:10.476" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:10.468" endtime="20250108 15:56:10.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:10.477" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:10.477" endtime="20250108 15:56:10.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:10.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:10.478" endtime="20250108 15:56:10.478"/>
</kw>
<status status="PASS" starttime="20250108 15:56:10.468" endtime="20250108 15:56:10.478"/>
</kw>
<msg timestamp="20250108 15:56:10.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:10.468" endtime="20250108 15:56:10.478"/>
</kw>
<msg timestamp="20250108 15:56:10.479" level="INFO">${etag} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:10.467" endtime="20250108 15:56:10.479"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:10.482" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:10.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:10.496" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:10.480" endtime="20250108 15:56:10.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:10.497" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:10.497" endtime="20250108 15:56:10.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:10.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:10.497" endtime="20250108 15:56:10.498"/>
</kw>
<status status="PASS" starttime="20250108 15:56:10.479" endtime="20250108 15:56:10.499"/>
</kw>
<msg timestamp="20250108 15:56:10.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:10.479" endtime="20250108 15:56:10.499"/>
</kw>
<msg timestamp="20250108 15:56:10.499" level="INFO">${md5sum} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:10.479" endtime="20250108 15:56:10.499"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:10.499" endtime="20250108 15:56:10.499"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:10.499" endtime="20250108 15:56:10.499"/>
</return>
<status status="PASS" starttime="20250108 15:56:10.467" endtime="20250108 15:56:10.499"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:10.500" endtime="20250108 15:56:10.500"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:10.499" endtime="20250108 15:56:10.500"/>
</branch>
<status status="PASS" starttime="20250108 15:56:10.467" endtime="20250108 15:56:10.500"/>
</if>
<msg timestamp="20250108 15:56:10.500" level="INFO">${etag} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:09.713" endtime="20250108 15:56:10.500"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:56:10.500" endtime="20250108 15:56:10.500"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.712" endtime="20250108 15:56:10.500"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250108 15:56:10.501" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250108 15:56:10.501" endtime="20250108 15:56:10.501"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:10.505" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-8141369942 --part-number 2 --body /tmp/part2 --upload-id feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:11.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:11.144" level="INFO">${output} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:10.503" endtime="20250108 15:56:11.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:11.145" level="INFO">{
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:11.145" endtime="20250108 15:56:11.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:11.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:11.145" endtime="20250108 15:56:11.146"/>
</kw>
<msg timestamp="20250108 15:56:11.146" level="INFO">${output} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:10.502" endtime="20250108 15:56:11.146"/>
</kw>
<msg timestamp="20250108 15:56:11.146" level="INFO">${result} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:10.502" endtime="20250108 15:56:11.146"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:11.146" endtime="20250108 15:56:11.147"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:11.150" level="INFO">Running command 'echo '{
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:11.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:11.155" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:11.148" endtime="20250108 15:56:11.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:11.156" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:11.155" endtime="20250108 15:56:11.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:11.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:11.156" endtime="20250108 15:56:11.156"/>
</kw>
<status status="PASS" starttime="20250108 15:56:11.147" endtime="20250108 15:56:11.156"/>
</kw>
<msg timestamp="20250108 15:56:11.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:11.147" endtime="20250108 15:56:11.157"/>
</kw>
<msg timestamp="20250108 15:56:11.157" level="INFO">${etag} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:11.147" endtime="20250108 15:56:11.157"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:11.160" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:11.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:11.166" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:11.158" endtime="20250108 15:56:11.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:11.166" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:11.166" endtime="20250108 15:56:11.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:11.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:11.167" endtime="20250108 15:56:11.167"/>
</kw>
<status status="PASS" starttime="20250108 15:56:11.157" endtime="20250108 15:56:11.167"/>
</kw>
<msg timestamp="20250108 15:56:11.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:11.157" endtime="20250108 15:56:11.167"/>
</kw>
<msg timestamp="20250108 15:56:11.167" level="INFO">${md5sum} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:11.157" endtime="20250108 15:56:11.167"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:11.167" endtime="20250108 15:56:11.168"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:11.168" endtime="20250108 15:56:11.168"/>
</return>
<status status="PASS" starttime="20250108 15:56:11.146" endtime="20250108 15:56:11.168"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:11.168" endtime="20250108 15:56:11.168"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:11.168" endtime="20250108 15:56:11.168"/>
</branch>
<status status="PASS" starttime="20250108 15:56:11.146" endtime="20250108 15:56:11.168"/>
</if>
<msg timestamp="20250108 15:56:11.168" level="INFO">${etag} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:10.501" endtime="20250108 15:56:11.168"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:56:11.168" endtime="20250108 15:56:11.169"/>
</kw>
<status status="PASS" starttime="20250108 15:56:10.501" endtime="20250108 15:56:11.169"/>
</iter>
<status status="PASS" starttime="20250108 15:56:09.712" endtime="20250108 15:56:11.169"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250108 15:56:11.169" level="INFO">${parts} = {ETag=8b159edb131173daa7e8acef6359359b,PartNumber=1},{ETag=564a98406c6377454f8aca7bf9b40043,PartNumber=2}</msg>
<status status="PASS" starttime="20250108 15:56:11.169" endtime="20250108 15:56:11.169"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250108 15:56:11.169" endtime="20250108 15:56:11.169"/>
</return>
<msg timestamp="20250108 15:56:11.169" level="INFO">${parts} = {ETag=8b159edb131173daa7e8acef6359359b,PartNumber=1},{ETag=564a98406c6377454f8aca7bf9b40043,PartNumber=2}</msg>
<status status="PASS" starttime="20250108 15:56:09.711" endtime="20250108 15:56:11.169"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${parts}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:11.173" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-8141369942 --upload-id feb844ee-2955-4f4b-b146-07b400dbbcf5-113793549574733856 --multipart-upload 'Parts=[{ETag=8b159edb131173daa7e8acef6359359b,PartNumber=1},{ETag=564a98406c6377454f8aca7bf9b40043,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:11.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:11.702" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-8141369942",
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:11.171" endtime="20250108 15:56:11.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:11.702" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-8141369942",
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:11.702" endtime="20250108 15:56:11.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:11.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:11.703" endtime="20250108 15:56:11.703"/>
</kw>
<msg timestamp="20250108 15:56:11.703" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-8141369942",
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:11.171" endtime="20250108 15:56:11.703"/>
</kw>
<msg timestamp="20250108 15:56:11.703" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-8141369942",
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:11.170" endtime="20250108 15:56:11.703"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:11.704" endtime="20250108 15:56:11.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:11.704" endtime="20250108 15:56:11.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:11.704" endtime="20250108 15:56:11.705"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:11.708" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-8141369942",
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:11.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:11.713" level="INFO">${output} = "309acf470e70d8f96d4d6c71abe3626e-2"</msg>
<status status="PASS" starttime="20250108 15:56:11.706" endtime="20250108 15:56:11.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:11.714" level="INFO">"309acf470e70d8f96d4d6c71abe3626e-2"</msg>
<status status="PASS" starttime="20250108 15:56:11.714" endtime="20250108 15:56:11.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:11.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:11.714" endtime="20250108 15:56:11.715"/>
</kw>
<status status="PASS" starttime="20250108 15:56:11.705" endtime="20250108 15:56:11.715"/>
</kw>
<msg timestamp="20250108 15:56:11.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:11.705" endtime="20250108 15:56:11.715"/>
</kw>
<msg timestamp="20250108 15:56:11.715" level="INFO">${etag} = "309acf470e70d8f96d4d6c71abe3626e-2"</msg>
<status status="PASS" starttime="20250108 15:56:11.705" endtime="20250108 15:56:11.715"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:11.715" endtime="20250108 15:56:11.715"/>
</return>
<status status="PASS" starttime="20250108 15:56:11.703" endtime="20250108 15:56:11.715"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:11.716" endtime="20250108 15:56:11.716"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:11.715" endtime="20250108 15:56:11.716"/>
</branch>
<status status="PASS" starttime="20250108 15:56:11.703" endtime="20250108 15:56:11.716"/>
</if>
<status status="PASS" starttime="20250108 15:56:11.170" endtime="20250108 15:56:11.716"/>
</kw>
<status status="PASS" starttime="20250108 15:56:09.182" endtime="20250108 15:56:11.716"/>
</kw>
<kw name="Verify Multipart Upload" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:11.717" level="INFO">${randStr} = 9935867845</msg>
<status status="PASS" starttime="20250108 15:56:11.717" endtime="20250108 15:56:11.717"/>
</kw>
<msg timestamp="20250108 15:56:11.717" level="INFO">${random} = ozone-test-9935867845</msg>
<status status="PASS" starttime="20250108 15:56:11.716" endtime="20250108 15:56:11.717"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:11.720" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key multipart/adjusted_length_ozone-test-8141369942 /tmp/verifyozone-test-9935867845 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:13.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:13.561" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:11 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:11.718" endtime="20250108 15:56:13.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:13.562" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:11 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:12 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:12 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:56:13.561" endtime="20250108 15:56:13.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:13.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:13.562" endtime="20250108 15:56:13.562"/>
</kw>
<status status="PASS" starttime="20250108 15:56:11.718" endtime="20250108 15:56:13.562"/>
</kw>
<msg timestamp="20250108 15:56:13.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:11.718" endtime="20250108 15:56:13.563"/>
</kw>
<msg timestamp="20250108 15:56:13.563" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:11 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:11.717" endtime="20250108 15:56:13.563"/>
</kw>
<status status="PASS" starttime="20250108 15:56:11.717" endtime="20250108 15:56:13.563"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250108 15:56:13.563" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20250108 15:56:13.563" endtime="20250108 15:56:13.563"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:13.568" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-9935867845'.</msg>
<msg timestamp="20250108 15:56:13.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:13.584" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:13.565" endtime="20250108 15:56:13.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:13.585" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:13.584" endtime="20250108 15:56:13.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:13.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:13.585" endtime="20250108 15:56:13.585"/>
</kw>
<status status="PASS" starttime="20250108 15:56:13.564" endtime="20250108 15:56:13.585"/>
</kw>
<msg timestamp="20250108 15:56:13.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:13.564" endtime="20250108 15:56:13.586"/>
</kw>
<status status="PASS" starttime="20250108 15:56:13.563" endtime="20250108 15:56:13.586"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:13.589" level="INFO">Running command 'md5sum /tmp/originalozone-test-9935867845 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:13.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:13.604" level="INFO">${output} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:13.587" endtime="20250108 15:56:13.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:13.606" level="INFO">fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:13.605" endtime="20250108 15:56:13.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:13.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:13.606" endtime="20250108 15:56:13.606"/>
</kw>
<status status="PASS" starttime="20250108 15:56:13.587" endtime="20250108 15:56:13.606"/>
</kw>
<msg timestamp="20250108 15:56:13.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:13.587" endtime="20250108 15:56:13.606"/>
</kw>
<msg timestamp="20250108 15:56:13.607" level="INFO">${checksumbefore} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:13.586" endtime="20250108 15:56:13.607"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:13.610" level="INFO">Running command 'md5sum /tmp/verifyozone-test-9935867845 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:13.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:13.625" level="INFO">${output} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:13.608" endtime="20250108 15:56:13.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:13.626" level="INFO">fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:13.626" endtime="20250108 15:56:13.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:13.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:13.626" endtime="20250108 15:56:13.627"/>
</kw>
<status status="PASS" starttime="20250108 15:56:13.608" endtime="20250108 15:56:13.627"/>
</kw>
<msg timestamp="20250108 15:56:13.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:13.607" endtime="20250108 15:56:13.627"/>
</kw>
<msg timestamp="20250108 15:56:13.627" level="INFO">${checksumafter} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:13.607" endtime="20250108 15:56:13.627"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:13.627" endtime="20250108 15:56:13.628"/>
</kw>
<status status="PASS" starttime="20250108 15:56:13.586" endtime="20250108 15:56:13.628"/>
</kw>
<status status="PASS" starttime="20250108 15:56:11.716" endtime="20250108 15:56:13.628"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:09.180" endtime="20250108 15:56:13.628"/>
</test>
<test id="s1-s3-s8-t2" name="Test Multipart Upload" line="64">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:13.630" level="INFO">${randStr} = 9065464590</msg>
<status status="PASS" starttime="20250108 15:56:13.630" endtime="20250108 15:56:13.630"/>
</kw>
<msg timestamp="20250108 15:56:13.630" level="INFO">${random} = ozone-test-9065464590</msg>
<status status="PASS" starttime="20250108 15:56:13.630" endtime="20250108 15:56:13.630"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:13.631" level="INFO">${PREFIX} = ozone-test-9065464590</msg>
<status status="PASS" starttime="20250108 15:56:13.630" endtime="20250108 15:56:13.631"/>
</kw>
<status status="PASS" starttime="20250108 15:56:13.629" endtime="20250108 15:56:13.631"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:13.635" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-9065464590/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:14.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:14.166" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9065464590/multipartKey",
    "UploadId": "2ea34132-4fae-4109-aaf0-63ec37c1a725-113793549866827811"
}</msg>
<status status="PASS" starttime="20250108 15:56:13.632" endtime="20250108 15:56:14.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:14.167" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-9065464590/multipartKey",
    "UploadId": "2ea34132-4fae-4109-aaf0-63ec37c1a725-113793549866827811"
}</msg>
<status status="PASS" starttime="20250108 15:56:14.167" endtime="20250108 15:56:14.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:14.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:14.168" endtime="20250108 15:56:14.168"/>
</kw>
<msg timestamp="20250108 15:56:14.168" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9065464590/multipartKey",
    "UploadId": "2ea34132-4fae-4109-aaf0-63ec37c1a725-113793549866827811"
}</msg>
<status status="PASS" starttime="20250108 15:56:13.632" endtime="20250108 15:56:14.168"/>
</kw>
<msg timestamp="20250108 15:56:14.168" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9065464590/multipartKey",
    "UploadId": "2ea34132-4fae-4109-aaf0-63ec37c1a725-113793549866827811"
}</msg>
<status status="PASS" starttime="20250108 15:56:13.632" endtime="20250108 15:56:14.168"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:14.169" endtime="20250108 15:56:14.169"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:14.169" endtime="20250108 15:56:14.169"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:14.172" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-9065464590/multipartKey",
    "UploadId": "2ea34132-4fae-4109-aaf0-63ec37c1a725-113793549866827811"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:14.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:14.178" level="INFO">${output} = 2ea34132-4fae-4109-aaf0-63ec37c1a725-113793549866827811</msg>
<status status="PASS" starttime="20250108 15:56:14.170" endtime="20250108 15:56:14.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:14.179" level="INFO">2ea34132-4fae-4109-aaf0-63ec37c1a725-113793549866827811</msg>
<status status="PASS" starttime="20250108 15:56:14.178" endtime="20250108 15:56:14.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:14.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:14.179" endtime="20250108 15:56:14.179"/>
</kw>
<msg timestamp="20250108 15:56:14.179" level="INFO">${upload_id} = 2ea34132-4fae-4109-aaf0-63ec37c1a725-113793549866827811</msg>
<status status="PASS" starttime="20250108 15:56:14.169" endtime="20250108 15:56:14.179"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:14.179" endtime="20250108 15:56:14.179"/>
</return>
<status status="PASS" starttime="20250108 15:56:14.168" endtime="20250108 15:56:14.179"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:14.180" endtime="20250108 15:56:14.180"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:14.179" endtime="20250108 15:56:14.180"/>
</branch>
<status status="PASS" starttime="20250108 15:56:14.168" endtime="20250108 15:56:14.180"/>
</if>
<msg timestamp="20250108 15:56:14.180" level="INFO">${uploadID} = 2ea34132-4fae-4109-aaf0-63ec37c1a725-113793549866827811</msg>
<status status="PASS" starttime="20250108 15:56:13.631" endtime="20250108 15:56:14.180"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${nextUploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:14.184" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-9065464590/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:14.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:14.685" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9065464590/multipartKey",
    "UploadId": "8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428"
}</msg>
<status status="PASS" starttime="20250108 15:56:14.182" endtime="20250108 15:56:14.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:14.686" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-9065464590/multipartKey",
    "UploadId": "8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428"
}</msg>
<status status="PASS" starttime="20250108 15:56:14.686" endtime="20250108 15:56:14.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:14.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:14.686" endtime="20250108 15:56:14.687"/>
</kw>
<msg timestamp="20250108 15:56:14.687" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9065464590/multipartKey",
    "UploadId": "8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428"
}</msg>
<status status="PASS" starttime="20250108 15:56:14.181" endtime="20250108 15:56:14.687"/>
</kw>
<msg timestamp="20250108 15:56:14.687" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9065464590/multipartKey",
    "UploadId": "8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428"
}</msg>
<status status="PASS" starttime="20250108 15:56:14.181" endtime="20250108 15:56:14.687"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:14.687" endtime="20250108 15:56:14.688"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:14.688" endtime="20250108 15:56:14.688"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:14.690" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-9065464590/multipartKey",
    "UploadId": "8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:14.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:14.695" level="INFO">${output} = 8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428</msg>
<status status="PASS" starttime="20250108 15:56:14.688" endtime="20250108 15:56:14.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:14.696" level="INFO">8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428</msg>
<status status="PASS" starttime="20250108 15:56:14.696" endtime="20250108 15:56:14.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:14.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:14.696" endtime="20250108 15:56:14.697"/>
</kw>
<msg timestamp="20250108 15:56:14.697" level="INFO">${upload_id} = 8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428</msg>
<status status="PASS" starttime="20250108 15:56:14.688" endtime="20250108 15:56:14.697"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:14.697" endtime="20250108 15:56:14.697"/>
</return>
<status status="PASS" starttime="20250108 15:56:14.687" endtime="20250108 15:56:14.697"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:14.697" endtime="20250108 15:56:14.697"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:14.697" endtime="20250108 15:56:14.697"/>
</branch>
<status status="PASS" starttime="20250108 15:56:14.687" endtime="20250108 15:56:14.697"/>
</if>
<msg timestamp="20250108 15:56:14.697" level="INFO">${nextUploadID} = 8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428</msg>
<status status="PASS" starttime="20250108 15:56:14.180" endtime="20250108 15:56:14.697"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20250108 15:56:14.698" endtime="20250108 15:56:14.698"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>${nextUploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:14.701" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9065464590/multipartKey --part-number 1 --body /tmp/part1 --upload-id 8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:15.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:15.441" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:14.699" endtime="20250108 15:56:15.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:15.441" level="INFO">{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:15.441" endtime="20250108 15:56:15.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:15.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:15.442" endtime="20250108 15:56:15.442"/>
</kw>
<msg timestamp="20250108 15:56:15.442" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:14.699" endtime="20250108 15:56:15.442"/>
</kw>
<msg timestamp="20250108 15:56:15.442" level="INFO">${result} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:14.698" endtime="20250108 15:56:15.442"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:15.443" endtime="20250108 15:56:15.443"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:15.446" level="INFO">Running command 'echo '{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:15.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:15.451" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:15.444" endtime="20250108 15:56:15.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:15.452" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:15.451" endtime="20250108 15:56:15.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:15.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:15.452" endtime="20250108 15:56:15.452"/>
</kw>
<status status="PASS" starttime="20250108 15:56:15.444" endtime="20250108 15:56:15.452"/>
</kw>
<msg timestamp="20250108 15:56:15.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:15.443" endtime="20250108 15:56:15.453"/>
</kw>
<msg timestamp="20250108 15:56:15.453" level="INFO">${etag} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:15.443" endtime="20250108 15:56:15.453"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:15.456" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:15.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:15.468" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:15.454" endtime="20250108 15:56:15.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:15.469" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:15.469" endtime="20250108 15:56:15.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:15.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:15.469" endtime="20250108 15:56:15.470"/>
</kw>
<status status="PASS" starttime="20250108 15:56:15.453" endtime="20250108 15:56:15.470"/>
</kw>
<msg timestamp="20250108 15:56:15.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:15.453" endtime="20250108 15:56:15.470"/>
</kw>
<msg timestamp="20250108 15:56:15.470" level="INFO">${md5sum} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:15.453" endtime="20250108 15:56:15.470"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:15.470" endtime="20250108 15:56:15.471"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:15.471" endtime="20250108 15:56:15.471"/>
</return>
<status status="PASS" starttime="20250108 15:56:15.442" endtime="20250108 15:56:15.471"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:15.471" endtime="20250108 15:56:15.471"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:15.471" endtime="20250108 15:56:15.471"/>
</branch>
<status status="PASS" starttime="20250108 15:56:15.442" endtime="20250108 15:56:15.471"/>
</if>
<status status="PASS" starttime="20250108 15:56:14.698" endtime="20250108 15:56:15.471"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>${nextUploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:15.474" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9065464590/multipartKey --part-number 1 --body /tmp/part1 --upload-id 8a828e1b-0505-44df-b186-f2e082d5f420-113793549901627428 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:16.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:16.345" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:15.472" endtime="20250108 15:56:16.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:16.346" level="INFO">{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:16.345" endtime="20250108 15:56:16.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:16.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:16.346" endtime="20250108 15:56:16.346"/>
</kw>
<msg timestamp="20250108 15:56:16.346" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:15.472" endtime="20250108 15:56:16.346"/>
</kw>
<msg timestamp="20250108 15:56:16.347" level="INFO">${result} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:15.472" endtime="20250108 15:56:16.347"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:16.347" endtime="20250108 15:56:16.347"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:16.351" level="INFO">Running command 'echo '{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:16.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:16.356" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:16.348" endtime="20250108 15:56:16.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:16.357" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:16.357" endtime="20250108 15:56:16.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:16.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:16.358" endtime="20250108 15:56:16.358"/>
</kw>
<status status="PASS" starttime="20250108 15:56:16.348" endtime="20250108 15:56:16.358"/>
</kw>
<msg timestamp="20250108 15:56:16.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:16.348" endtime="20250108 15:56:16.358"/>
</kw>
<msg timestamp="20250108 15:56:16.358" level="INFO">${etag} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:16.347" endtime="20250108 15:56:16.358"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:16.361" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:16.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:16.374" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:16.359" endtime="20250108 15:56:16.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:16.375" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:16.375" endtime="20250108 15:56:16.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:16.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:16.375" endtime="20250108 15:56:16.376"/>
</kw>
<status status="PASS" starttime="20250108 15:56:16.359" endtime="20250108 15:56:16.376"/>
</kw>
<msg timestamp="20250108 15:56:16.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:16.359" endtime="20250108 15:56:16.376"/>
</kw>
<msg timestamp="20250108 15:56:16.376" level="INFO">${md5sum} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:16.358" endtime="20250108 15:56:16.376"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:16.376" endtime="20250108 15:56:16.377"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:16.377" endtime="20250108 15:56:16.377"/>
</return>
<status status="PASS" starttime="20250108 15:56:16.347" endtime="20250108 15:56:16.377"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:16.377" endtime="20250108 15:56:16.377"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:16.377" endtime="20250108 15:56:16.377"/>
</branch>
<status status="PASS" starttime="20250108 15:56:16.347" endtime="20250108 15:56:16.377"/>
</if>
<status status="PASS" starttime="20250108 15:56:15.471" endtime="20250108 15:56:16.377"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:13.629" endtime="20250108 15:56:16.377"/>
</test>
<test id="s1-s3-s8-t3" name="Test Multipart Upload Complete" line="78">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:16.379" level="INFO">${randStr} = 6242848406</msg>
<status status="PASS" starttime="20250108 15:56:16.379" endtime="20250108 15:56:16.379"/>
</kw>
<msg timestamp="20250108 15:56:16.380" level="INFO">${random} = ozone-test-6242848406</msg>
<status status="PASS" starttime="20250108 15:56:16.379" endtime="20250108 15:56:16.380"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:16.380" level="INFO">${PREFIX} = ozone-test-6242848406</msg>
<status status="PASS" starttime="20250108 15:56:16.380" endtime="20250108 15:56:16.380"/>
</kw>
<status status="PASS" starttime="20250108 15:56:16.379" endtime="20250108 15:56:16.380"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>0</arg>
<arg>--metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:16.383" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-6242848406/multipartKey1 --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:16.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:16.910" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6242848406/multipartKey1",
    "UploadId": "2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815"
}</msg>
<status status="PASS" starttime="20250108 15:56:16.381" endtime="20250108 15:56:16.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:16.911" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-6242848406/multipartKey1",
    "UploadId": "2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815"
}</msg>
<status status="PASS" starttime="20250108 15:56:16.910" endtime="20250108 15:56:16.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:16.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:16.911" endtime="20250108 15:56:16.911"/>
</kw>
<msg timestamp="20250108 15:56:16.911" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6242848406/multipartKey1",
    "UploadId": "2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815"
}</msg>
<status status="PASS" starttime="20250108 15:56:16.381" endtime="20250108 15:56:16.911"/>
</kw>
<msg timestamp="20250108 15:56:16.912" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6242848406/multipartKey1",
    "UploadId": "2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815"
}</msg>
<status status="PASS" starttime="20250108 15:56:16.380" endtime="20250108 15:56:16.912"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:16.912" endtime="20250108 15:56:16.912"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:16.912" endtime="20250108 15:56:16.912"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:16.915" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-6242848406/multipartKey1",
    "UploadId": "2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:16.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:16.922" level="INFO">${output} = 2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815</msg>
<status status="PASS" starttime="20250108 15:56:16.913" endtime="20250108 15:56:16.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:16.923" level="INFO">2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815</msg>
<status status="PASS" starttime="20250108 15:56:16.922" endtime="20250108 15:56:16.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:16.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:16.923" endtime="20250108 15:56:16.923"/>
</kw>
<msg timestamp="20250108 15:56:16.923" level="INFO">${upload_id} = 2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815</msg>
<status status="PASS" starttime="20250108 15:56:16.913" endtime="20250108 15:56:16.923"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:16.923" endtime="20250108 15:56:16.923"/>
</return>
<status status="PASS" starttime="20250108 15:56:16.912" endtime="20250108 15:56:16.923"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:16.924" endtime="20250108 15:56:16.924"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:16.924" endtime="20250108 15:56:16.924"/>
</branch>
<status status="PASS" starttime="20250108 15:56:16.912" endtime="20250108 15:56:16.924"/>
</if>
<msg timestamp="20250108 15:56:16.924" level="INFO">${uploadID} = 2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815</msg>
<status status="PASS" starttime="20250108 15:56:16.380" endtime="20250108 15:56:16.924"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:16.928" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-6242848406/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:17.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:17.810" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:16.925" endtime="20250108 15:56:17.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:17.811" level="INFO">{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:17.811" endtime="20250108 15:56:17.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:17.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:17.812" endtime="20250108 15:56:17.812"/>
</kw>
<msg timestamp="20250108 15:56:17.812" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:16.925" endtime="20250108 15:56:17.812"/>
</kw>
<msg timestamp="20250108 15:56:17.813" level="INFO">${result} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:16.925" endtime="20250108 15:56:17.813"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:17.813" endtime="20250108 15:56:17.814"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:17.820" level="INFO">Running command 'echo '{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:17.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:17.838" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:17.816" endtime="20250108 15:56:17.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:17.840" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:17.839" endtime="20250108 15:56:17.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:17.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:17.840" endtime="20250108 15:56:17.840"/>
</kw>
<status status="PASS" starttime="20250108 15:56:17.814" endtime="20250108 15:56:17.840"/>
</kw>
<msg timestamp="20250108 15:56:17.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:17.814" endtime="20250108 15:56:17.841"/>
</kw>
<msg timestamp="20250108 15:56:17.841" level="INFO">${etag} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:17.814" endtime="20250108 15:56:17.841"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:17.846" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:17.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:17.863" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:17.842" endtime="20250108 15:56:17.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:17.864" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:17.864" endtime="20250108 15:56:17.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:17.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:17.865" endtime="20250108 15:56:17.865"/>
</kw>
<status status="PASS" starttime="20250108 15:56:17.842" endtime="20250108 15:56:17.865"/>
</kw>
<msg timestamp="20250108 15:56:17.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:17.842" endtime="20250108 15:56:17.865"/>
</kw>
<msg timestamp="20250108 15:56:17.865" level="INFO">${md5sum} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:17.841" endtime="20250108 15:56:17.865"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:17.865" endtime="20250108 15:56:17.866"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:17.866" endtime="20250108 15:56:17.866"/>
</return>
<status status="PASS" starttime="20250108 15:56:17.813" endtime="20250108 15:56:17.866"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:17.866" endtime="20250108 15:56:17.866"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:17.866" endtime="20250108 15:56:17.866"/>
</branch>
<status status="PASS" starttime="20250108 15:56:17.813" endtime="20250108 15:56:17.866"/>
</if>
<msg timestamp="20250108 15:56:17.866" level="INFO">${eTag1} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:16.924" endtime="20250108 15:56:17.866"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:17.870" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-6242848406/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:18.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:18.492" level="INFO">${output} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:17.868" endtime="20250108 15:56:18.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:18.493" level="INFO">{
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:18.492" endtime="20250108 15:56:18.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:18.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:18.493" endtime="20250108 15:56:18.493"/>
</kw>
<msg timestamp="20250108 15:56:18.494" level="INFO">${output} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:17.867" endtime="20250108 15:56:18.494"/>
</kw>
<msg timestamp="20250108 15:56:18.494" level="INFO">${result} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:17.867" endtime="20250108 15:56:18.494"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:18.494" endtime="20250108 15:56:18.494"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:18.498" level="INFO">Running command 'echo '{
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:18.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:18.504" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:18.495" endtime="20250108 15:56:18.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:18.505" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:18.504" endtime="20250108 15:56:18.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:18.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:18.505" endtime="20250108 15:56:18.505"/>
</kw>
<status status="PASS" starttime="20250108 15:56:18.495" endtime="20250108 15:56:18.505"/>
</kw>
<msg timestamp="20250108 15:56:18.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:18.495" endtime="20250108 15:56:18.506"/>
</kw>
<msg timestamp="20250108 15:56:18.506" level="INFO">${etag} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:18.495" endtime="20250108 15:56:18.506"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:18.509" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:18.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:18.516" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:18.507" endtime="20250108 15:56:18.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:18.517" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:18.516" endtime="20250108 15:56:18.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:18.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:18.517" endtime="20250108 15:56:18.517"/>
</kw>
<status status="PASS" starttime="20250108 15:56:18.506" endtime="20250108 15:56:18.517"/>
</kw>
<msg timestamp="20250108 15:56:18.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:18.506" endtime="20250108 15:56:18.517"/>
</kw>
<msg timestamp="20250108 15:56:18.518" level="INFO">${md5sum} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:18.506" endtime="20250108 15:56:18.518"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:18.518" endtime="20250108 15:56:18.518"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:18.518" endtime="20250108 15:56:18.518"/>
</return>
<status status="PASS" starttime="20250108 15:56:18.494" endtime="20250108 15:56:18.518"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:18.518" endtime="20250108 15:56:18.518"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:18.518" endtime="20250108 15:56:18.518"/>
</branch>
<status status="PASS" starttime="20250108 15:56:18.494" endtime="20250108 15:56:18.518"/>
</if>
<msg timestamp="20250108 15:56:18.519" level="INFO">${eTag2} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:17.867" endtime="20250108 15:56:18.519"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:18.522" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815 --bucket encrypted --key ozone-test-6242848406/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:19.003" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:19.003" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250108 15:56:18.520" endtime="20250108 15:56:19.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:19.004" level="INFO">
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250108 15:56:19.003" endtime="20250108 15:56:19.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:19.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:19.004" endtime="20250108 15:56:19.004"/>
</kw>
<msg timestamp="20250108 15:56:19.004" level="INFO">${output} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250108 15:56:18.519" endtime="20250108 15:56:19.004"/>
</kw>
<msg timestamp="20250108 15:56:19.004" level="INFO">${result} = 
An error occurred (InvalidRequest) when calling the CompleteMultipartUpload operation: You must specify at least one part</msg>
<status status="PASS" starttime="20250108 15:56:18.519" endtime="20250108 15:56:19.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRequest</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:19.005" endtime="20250108 15:56:19.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>must specify at least one part</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:19.005" endtime="20250108 15:56:19.005"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${resultETag}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:19.009" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-6242848406/multipartKey1 --upload-id 2a7ea1f8-862c-4765-830d-73688db9d16d-113793550047051815 --multipart-upload 'Parts=[{ETag=8b159edb131173daa7e8acef6359359b,PartNumber=1},{ETag=564a98406c6377454f8aca7bf9b40043,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:19.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:19.546" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6242848406/multipartKey1",
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:19.007" endtime="20250108 15:56:19.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:19.547" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6242848406/multipartKey1",
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:19.546" endtime="20250108 15:56:19.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:19.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:19.547" endtime="20250108 15:56:19.547"/>
</kw>
<msg timestamp="20250108 15:56:19.547" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6242848406/multipartKey1",
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:19.006" endtime="20250108 15:56:19.547"/>
</kw>
<msg timestamp="20250108 15:56:19.548" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6242848406/multipartKey1",
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:19.006" endtime="20250108 15:56:19.548"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:19.548" endtime="20250108 15:56:19.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:19.548" endtime="20250108 15:56:19.549"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:19.549" endtime="20250108 15:56:19.549"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:19.552" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6242848406/multipartKey1",
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:19.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:19.557" level="INFO">${output} = "309acf470e70d8f96d4d6c71abe3626e-2"</msg>
<status status="PASS" starttime="20250108 15:56:19.550" endtime="20250108 15:56:19.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:19.558" level="INFO">"309acf470e70d8f96d4d6c71abe3626e-2"</msg>
<status status="PASS" starttime="20250108 15:56:19.558" endtime="20250108 15:56:19.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:19.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:19.558" endtime="20250108 15:56:19.558"/>
</kw>
<status status="PASS" starttime="20250108 15:56:19.550" endtime="20250108 15:56:19.559"/>
</kw>
<msg timestamp="20250108 15:56:19.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:19.550" endtime="20250108 15:56:19.559"/>
</kw>
<msg timestamp="20250108 15:56:19.559" level="INFO">${etag} = "309acf470e70d8f96d4d6c71abe3626e-2"</msg>
<status status="PASS" starttime="20250108 15:56:19.549" endtime="20250108 15:56:19.559"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:19.559" endtime="20250108 15:56:19.559"/>
</return>
<status status="PASS" starttime="20250108 15:56:19.548" endtime="20250108 15:56:19.559"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:19.559" endtime="20250108 15:56:19.559"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:19.559" endtime="20250108 15:56:19.559"/>
</branch>
<status status="PASS" starttime="20250108 15:56:19.548" endtime="20250108 15:56:19.559"/>
</if>
<msg timestamp="20250108 15:56:19.559" level="INFO">${resultETag} = "309acf470e70d8f96d4d6c71abe3626e-2"</msg>
<status status="PASS" starttime="20250108 15:56:19.005" endtime="20250108 15:56:19.559"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedResultETag}</var>
<arg>echo -n ${eTag1}${eTag2} | md5sum | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:19.562" level="INFO">Running command 'echo -n 8b159edb131173daa7e8acef6359359b564a98406c6377454f8aca7bf9b40043 | md5sum | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:19.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:19.567" level="INFO">${output} = 309acf470e70d8f96d4d6c71abe3626e</msg>
<status status="PASS" starttime="20250108 15:56:19.560" endtime="20250108 15:56:19.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:19.567" level="INFO">309acf470e70d8f96d4d6c71abe3626e</msg>
<status status="PASS" starttime="20250108 15:56:19.567" endtime="20250108 15:56:19.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:19.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:19.567" endtime="20250108 15:56:19.568"/>
</kw>
<status status="PASS" starttime="20250108 15:56:19.560" endtime="20250108 15:56:19.568"/>
</kw>
<msg timestamp="20250108 15:56:19.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:19.560" endtime="20250108 15:56:19.568"/>
</kw>
<msg timestamp="20250108 15:56:19.568" level="INFO">${expectedResultETag} = 309acf470e70d8f96d4d6c71abe3626e</msg>
<status status="PASS" starttime="20250108 15:56:19.559" endtime="20250108 15:56:19.568"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${resultETag}</arg>
<arg>"${expectedResultETag}-2"</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:19.568" endtime="20250108 15:56:19.569"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:19.572" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-6242848406/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:20.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:20.056" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250108 15:56:19.570" endtime="20250108 15:56:20.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:20.057" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:19 GMT",
    "Metadata": {
        "gdprenabled": "true",
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:19 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:56:20.056" endtime="20250108 15:56:20.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:20.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:20.057" endtime="20250108 15:56:20.057"/>
</kw>
<status status="PASS" starttime="20250108 15:56:19.570" endtime="20250108 15:56:20.057"/>
</kw>
<msg timestamp="20250108 15:56:20.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:19.569" endtime="20250108 15:56:20.058"/>
</kw>
<msg timestamp="20250108 15:56:20.058" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250108 15:56:19.569" endtime="20250108 15:56:20.058"/>
</kw>
<msg timestamp="20250108 15:56:20.058" level="INFO">${result} = {
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oc...</msg>
<status status="PASS" starttime="20250108 15:56:19.569" endtime="20250108 15:56:20.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:20.058" endtime="20250108 15:56:20.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:20.059" endtime="20250108 15:56:20.059"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:20.061" level="INFO">Running command 'echo '{
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:19 GMT",
    "Metadata": {
        "gdprenabled": "true",
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "PartsCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:19 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:20.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:20.066" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250108 15:56:20.059" endtime="20250108 15:56:20.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:20.067" level="INFO">2</msg>
<status status="PASS" starttime="20250108 15:56:20.067" endtime="20250108 15:56:20.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:20.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:20.067" endtime="20250108 15:56:20.068"/>
</kw>
<msg timestamp="20250108 15:56:20.068" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250108 15:56:20.059" endtime="20250108 15:56:20.068"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:20.068" endtime="20250108 15:56:20.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:20.071" level="INFO">Running command 'ozone sh key info /s3v/encrypted/ozone-test-6242848406/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:23.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:23.691" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-6242848406/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-01-08T15:56:19.481Z",...</msg>
<status status="PASS" starttime="20250108 15:56:20.069" endtime="20250108 15:56:23.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:23.691" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-6242848406/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-01-08T15:56:19.481Z",
  "modificationTime" : "2025-01-08T15:56:19.481Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "gdprenabled" : "true",
    "ETag" : "309acf470e70d8f96d4d6c71abe3626e-2",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 115816896921600033,
    "length" : 5243904,
    "offset" : 0,
    "keyOffset" : 0
  }, {
    "containerID" : 1,
    "localID" : 115816896921600034,
    "length" : 1047552,
    "offset" : 0,
    "keyOffset" : 5243904
  } ],
  "generation" : 513,
  "fileEncryptionInfo" : {
    "cipherSuite" : "AES_CTR_NOPADDING",
    "iv" : "mUwSa8EryUgmw/VBQ8mXGQ==",
    "keyName" : "key1",
    "ezKeyVersionName" : "key1@0",
    "cryptoProtocolVersion" : "ENCRYPTION_ZONES",
    "encryptedDataEncryptionKey" : "FZgCMG7WQgT8+Aw8yYCdXA=="
  },
  "file" : true
}</msg>
<status status="PASS" starttime="20250108 15:56:23.691" endtime="20250108 15:56:23.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:23.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:23.692" endtime="20250108 15:56:23.692"/>
</kw>
<status status="PASS" starttime="20250108 15:56:20.069" endtime="20250108 15:56:23.692"/>
</kw>
<msg timestamp="20250108 15:56:23.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:20.069" endtime="20250108 15:56:23.692"/>
</kw>
<msg timestamp="20250108 15:56:23.692" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-6242848406/multipartKey1",
  "owner" : "testuser",
  "dataSize" : 6291456,
  "creationTime" : "2025-01-08T15:56:19.481Z",...</msg>
<status status="PASS" starttime="20250108 15:56:20.068" endtime="20250108 15:56:23.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:23.693" endtime="20250108 15:56:23.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:23.693" endtime="20250108 15:56:23.693"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:23.693" endtime="20250108 15:56:23.694"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:23.694" endtime="20250108 15:56:23.694"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:23.694" endtime="20250108 15:56:23.694"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:23.698" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-6242848406/multipartKey1 /tmp/ozone-test-6242848406-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:25.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:25.106" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:23.696" endtime="20250108 15:56:25.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:25.107" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:24 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:24 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:56:25.106" endtime="20250108 15:56:25.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:25.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:25.107" endtime="20250108 15:56:25.107"/>
</kw>
<status status="PASS" starttime="20250108 15:56:23.695" endtime="20250108 15:56:25.107"/>
</kw>
<msg timestamp="20250108 15:56:25.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:23.695" endtime="20250108 15:56:25.108"/>
</kw>
<msg timestamp="20250108 15:56:25.108" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:23.695" endtime="20250108 15:56:25.108"/>
</kw>
<msg timestamp="20250108 15:56:25.108" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:23.694" endtime="20250108 15:56:25.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:25.108" endtime="20250108 15:56:25.108"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:25.111" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:24 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:24 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:25.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:25.116" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250108 15:56:25.109" endtime="20250108 15:56:25.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:25.116" level="INFO">2</msg>
<status status="PASS" starttime="20250108 15:56:25.116" endtime="20250108 15:56:25.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:25.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:25.117" endtime="20250108 15:56:25.117"/>
</kw>
<msg timestamp="20250108 15:56:25.117" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250108 15:56:25.108" endtime="20250108 15:56:25.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:25.117" endtime="20250108 15:56:25.118"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:25.120" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:24 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:24 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:25.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:25.124" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250108 15:56:25.118" endtime="20250108 15:56:25.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:25.125" level="INFO">2</msg>
<status status="PASS" starttime="20250108 15:56:25.125" endtime="20250108 15:56:25.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:25.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:25.125" endtime="20250108 15:56:25.125"/>
</kw>
<msg timestamp="20250108 15:56:25.126" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250108 15:56:25.118" endtime="20250108 15:56:25.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:25.126" endtime="20250108 15:56:25.126"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:25.129" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-6242848406-multipartKey1'.</msg>
<msg timestamp="20250108 15:56:25.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:25.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:25.127" endtime="20250108 15:56:25.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:25.141" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:25.141" endtime="20250108 15:56:25.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:25.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:25.141" endtime="20250108 15:56:25.141"/>
</kw>
<status status="PASS" starttime="20250108 15:56:25.127" endtime="20250108 15:56:25.142"/>
</kw>
<msg timestamp="20250108 15:56:25.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:25.126" endtime="20250108 15:56:25.142"/>
</kw>
<status status="PASS" starttime="20250108 15:56:25.126" endtime="20250108 15:56:25.142"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:25.145" level="INFO">Running command 'md5sum /tmp/ozone-test-6242848406-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:25.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:25.160" level="INFO">${output} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:25.143" endtime="20250108 15:56:25.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:25.161" level="INFO">fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:25.160" endtime="20250108 15:56:25.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:25.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:25.161" endtime="20250108 15:56:25.161"/>
</kw>
<status status="PASS" starttime="20250108 15:56:25.143" endtime="20250108 15:56:25.161"/>
</kw>
<msg timestamp="20250108 15:56:25.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:25.143" endtime="20250108 15:56:25.161"/>
</kw>
<msg timestamp="20250108 15:56:25.161" level="INFO">${checksumbefore} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:25.142" endtime="20250108 15:56:25.162"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:25.164" level="INFO">Running command 'md5sum /tmp/ozone-test-6242848406-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:25.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:25.179" level="INFO">${output} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:25.163" endtime="20250108 15:56:25.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:25.180" level="INFO">fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:25.179" endtime="20250108 15:56:25.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:25.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:25.180" endtime="20250108 15:56:25.180"/>
</kw>
<status status="PASS" starttime="20250108 15:56:25.162" endtime="20250108 15:56:25.180"/>
</kw>
<msg timestamp="20250108 15:56:25.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:25.162" endtime="20250108 15:56:25.181"/>
</kw>
<msg timestamp="20250108 15:56:25.181" level="INFO">${checksumafter} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:25.162" endtime="20250108 15:56:25.181"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:25.181" endtime="20250108 15:56:25.181"/>
</kw>
<status status="PASS" starttime="20250108 15:56:25.142" endtime="20250108 15:56:25.181"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:25.185" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-6242848406/multipartKey1 --part-number 1 /tmp/ozone-test-6242848406-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:26.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:26.416" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 5243904,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:25.183" endtime="20250108 15:56:26.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:26.417" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 5243904,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:25 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:25 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:56:26.416" endtime="20250108 15:56:26.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:26.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:26.417" endtime="20250108 15:56:26.417"/>
</kw>
<status status="PASS" starttime="20250108 15:56:25.182" endtime="20250108 15:56:26.418"/>
</kw>
<msg timestamp="20250108 15:56:26.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:25.182" endtime="20250108 15:56:26.418"/>
</kw>
<msg timestamp="20250108 15:56:26.418" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 5243904,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:25.182" endtime="20250108 15:56:26.418"/>
</kw>
<msg timestamp="20250108 15:56:26.418" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 5243904,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:25.181" endtime="20250108 15:56:26.418"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:26.421" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:26.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:26.434" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:26.419" endtime="20250108 15:56:26.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:26.435" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:26.435" endtime="20250108 15:56:26.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:26.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:26.435" endtime="20250108 15:56:26.435"/>
</kw>
<status status="PASS" starttime="20250108 15:56:26.419" endtime="20250108 15:56:26.436"/>
</kw>
<msg timestamp="20250108 15:56:26.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:26.419" endtime="20250108 15:56:26.436"/>
</kw>
<msg timestamp="20250108 15:56:26.436" level="INFO">${checksumbefore} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:26.419" endtime="20250108 15:56:26.436"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:26.439" level="INFO">Running command 'md5sum /tmp/ozone-test-6242848406-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:26.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:26.451" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:26.437" endtime="20250108 15:56:26.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:26.452" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:26.452" endtime="20250108 15:56:26.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:26.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:26.452" endtime="20250108 15:56:26.453"/>
</kw>
<status status="PASS" starttime="20250108 15:56:26.437" endtime="20250108 15:56:26.453"/>
</kw>
<msg timestamp="20250108 15:56:26.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:26.436" endtime="20250108 15:56:26.453"/>
</kw>
<msg timestamp="20250108 15:56:26.453" level="INFO">${checksumafter} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:26.436" endtime="20250108 15:56:26.453"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:26.453" endtime="20250108 15:56:26.453"/>
</kw>
<status status="PASS" starttime="20250108 15:56:26.418" endtime="20250108 15:56:26.454"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:26.456" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 5243904,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:25 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:25 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:26.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:26.461" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250108 15:56:26.454" endtime="20250108 15:56:26.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:26.462" level="INFO">2</msg>
<status status="PASS" starttime="20250108 15:56:26.461" endtime="20250108 15:56:26.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:26.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:26.462" endtime="20250108 15:56:26.462"/>
</kw>
<msg timestamp="20250108 15:56:26.462" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250108 15:56:26.454" endtime="20250108 15:56:26.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:26.463" endtime="20250108 15:56:26.463"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${partsCount}</var>
<arg>echo '${result}' | jq -r '.PartsCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:26.465" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 5243904,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:25 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:25 GMT"
}' | jq -r '.PartsCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:26.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:26.470" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250108 15:56:26.463" endtime="20250108 15:56:26.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:26.470" level="INFO">2</msg>
<status status="PASS" starttime="20250108 15:56:26.470" endtime="20250108 15:56:26.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:26.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:26.471" endtime="20250108 15:56:26.471"/>
</kw>
<msg timestamp="20250108 15:56:26.471" level="INFO">${partsCount} = 2</msg>
<status status="PASS" starttime="20250108 15:56:26.463" endtime="20250108 15:56:26.471"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${partsCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:26.471" endtime="20250108 15:56:26.471"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:26.475" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-6242848406/multipartKey1 --part-number 2 /tmp/ozone-test-6242848406-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:27.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:27.206" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 1047552,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:26.473" endtime="20250108 15:56:27.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:27.207" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 1047552,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:26 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:26 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:56:27.206" endtime="20250108 15:56:27.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:27.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:27.207" endtime="20250108 15:56:27.208"/>
</kw>
<status status="PASS" starttime="20250108 15:56:26.472" endtime="20250108 15:56:27.208"/>
</kw>
<msg timestamp="20250108 15:56:27.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:26.472" endtime="20250108 15:56:27.208"/>
</kw>
<msg timestamp="20250108 15:56:27.208" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 1047552,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:26.472" endtime="20250108 15:56:27.208"/>
</kw>
<msg timestamp="20250108 15:56:27.209" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:19 GMT",
    "ContentLength": 1047552,
    "ETag": "\"309acf470e70d8f96d4d6c71abe3626e-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:26.472" endtime="20250108 15:56:27.209"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:27.216" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:27.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:27.224" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:27.211" endtime="20250108 15:56:27.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:27.225" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:27.224" endtime="20250108 15:56:27.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:27.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:27.225" endtime="20250108 15:56:27.226"/>
</kw>
<status status="PASS" starttime="20250108 15:56:27.211" endtime="20250108 15:56:27.226"/>
</kw>
<msg timestamp="20250108 15:56:27.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:27.211" endtime="20250108 15:56:27.226"/>
</kw>
<msg timestamp="20250108 15:56:27.227" level="INFO">${checksumbefore} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:27.209" endtime="20250108 15:56:27.227"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:27.233" level="INFO">Running command 'md5sum /tmp/ozone-test-6242848406-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:27.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:27.241" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:27.228" endtime="20250108 15:56:27.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:27.242" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:27.242" endtime="20250108 15:56:27.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:27.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:27.243" endtime="20250108 15:56:27.243"/>
</kw>
<status status="PASS" starttime="20250108 15:56:27.228" endtime="20250108 15:56:27.243"/>
</kw>
<msg timestamp="20250108 15:56:27.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:27.227" endtime="20250108 15:56:27.243"/>
</kw>
<msg timestamp="20250108 15:56:27.244" level="INFO">${checksumafter} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:27.227" endtime="20250108 15:56:27.244"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:27.244" endtime="20250108 15:56:27.244"/>
</kw>
<status status="PASS" starttime="20250108 15:56:27.209" endtime="20250108 15:56:27.244"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:16.378" endtime="20250108 15:56:27.245"/>
</test>
<test id="s1-s3-s8-t4" name="Test Multipart Upload with user defined metadata size larger than 2 KB" line="134">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:27.249" level="INFO">${randStr} = 7409229236</msg>
<status status="PASS" starttime="20250108 15:56:27.249" endtime="20250108 15:56:27.249"/>
</kw>
<msg timestamp="20250108 15:56:27.249" level="INFO">${random} = ozone-test-7409229236</msg>
<status status="PASS" starttime="20250108 15:56:27.248" endtime="20250108 15:56:27.249"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:27.250" level="INFO">${PREFIX} = ozone-test-7409229236</msg>
<status status="PASS" starttime="20250108 15:56:27.249" endtime="20250108 15:56:27.250"/>
</kw>
<status status="PASS" starttime="20250108 15:56:27.248" endtime="20250108 15:56:27.250"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:27.254" level="INFO">${custom_metadata_value} = LToUOwwVBxMx9Xs7BRxiWaTUEn1IDS9Wk3MznbQYwxa16uEtAss85NhziLLNseWZ9yLdJAL1r8668LkDTr0xEPt7VxU9VizUdacr9N0hDMiVRS93HrAS5dlvuKWH2xLqlqt9IwYGtIdYBg5edgDUaKdZBwBlvz6LYM5uRTFxbaGFeATg0gneKK580H3qth2TTdJN78w1...</msg>
<status status="PASS" starttime="20250108 15:56:27.250" endtime="20250108 15:56:27.254"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/mpuWithLargeMetadata</arg>
<arg>255</arg>
<arg>--metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:27.260" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-7409229236/mpuWithLargeMetadata --metadata="custom-key1=LToUOwwVBxMx9Xs7BRxiWaTUEn1IDS9Wk3MznbQYwxa16uEtAss85NhziLLNseWZ9yLdJAL1r8668LkDTr0xEPt7VxU9VizUdacr9N0hDMiVRS93HrAS5dlvuKWH2xLqlqt9IwYGtIdYBg5edgDUaKdZBwBlvz6LYM5uRTFxbaGFeATg0gneKK580H3qth2TTdJN78w1vFw2qPB4uPVyD3lBhHQSwEOd24xcfxWNdEQWXiu1Z0DWcXePyaO7iHPUWidwssvtA78PXKxYXJ2XlizbSSSNzIj0rIfZWGHQRl4blQcNc4Ycxgu2ijJMrN8ZqqDYu5LTwdZAICX2edvVSew7ZT5RBWpj7tXO2ggGi1tKSbsYnop47JEnl5ZcVWyU7or5utsI4Hj1UaM76KLRJzUZpznX0gfHgtyvCPNLL6YFw9vDe8EwW1MJhlCxptnSiWSHYecoAMBGc880UJU4NYEzX1sZV7BvyylxVvQ6M6vhMz9JTeQ7PhIKX3TT2ULBO65yAGBgs2EDnCpi1HJSqejpQgxzNxbqW4cimlrF3LQTAQ1snEMW6HVUaOXHcRxg8oTFQkaYSKoWe3ZjuBcICEHP9PGaYNcMwNb18y5TwQO8tPeImRZ2TvnSCWC6Fe9BCgFAjpxgQ8OXNcErN1y3oAo7ps33HjvSXejv9fyhSQMK5OneBGLE0HJLvfHR8XGmvrO39A3awjKHVQZAg2xiSIbUdQ1d1HO8Sz3TODRMeXDkDoRtmco7a5GvR8jzNpNF3xHF4LBlp8tn2V8aaOuEZEzqwtaPH4hYaul4IyP1IQhxVgTfGDtipd2kcJRlyPLXOoonwpwR7DcDtxTkXIRxNVpOjtImBClRLKpzbZb1sOxtNriWpBwsJWClB0h3uobXxt3T048dn9dKEWLJAKbpXOWJIFhM4y6rGGULlj0Uwn9kSsSrte4FHpu9vZr4NWrIWYvfC5Y4bAoQaBuqy239PTQrADhpX5Y0VBEYAqMNDqZKxZdo95Qg00vi1Zgessk2Qqsz2fJN3L0pJMw0o5eZcHSiPOrG28cq4e0OYkWV9WYI1P5uUAGQtc6xdFzntsSPiU5LrgRjFCSNAcUIaGudkG2OzDKVoYneClXYugbsB2BXMbLUFI9rc5SPHw84J7DrVVi2I0zAxpD96sZ1UM18vbFKRBLhsAnRuENCg8ISLAYUoCMkevw9Z2Vi8NB5ArpQTk2U2pzuFFd0EWxIt5CLcxHyXXpsOVBeRPtIHbEH5Zv2YrJCK5XfWH8RaxgAxPiQWJ1JyZffHLLF9W6KxsF4I0Dgr67Vh9Ioqoa71431bfxgmQVpi1Txt7nUhweNRnkuolIEezFDBlJZ3Fc0CeN1GIQZ7yEWybMo6aVqk4pOW8zHYoSOzmUv6bU08BNHbH0m6U0efd4ichEypiX9SqNpHrFeSxaJqNDS54T7GAww5K817IPFTkRt7g2k5fkTDXc3uoIGMVaIHW2cae1xrlO99RAe09PkrKaTHnLanCtKqq1KlodwbUCqoqktgHsMAwtm8mF510ZoIEuXSH3uj9WDm2wWZ1FLaIQVgANeCQQh7cXeMd54To7jIAl5Og0JzFU0OkNsQC7CLh6h4IChkhmWRypDUcHTVFeXlvqkBFdO511deqvLRQq17IgtBvGpDufl73B6HXQ5k0Pexr1e6Z8u97WzVgmHxLFjyq1CkQLu1ZaszrZKCxdPXZTecsBCW0wv0ikblsVlxvheJ3IS4NrOsGUvnVDhbtFQcvdC9xqsg44301USbfUZTSV7xmPefauMvg7no8ZIdCln7iTvpDGYNjltix5yIw5pxQpIOoy6GX8pGxZRw0ipWhl5dP4lnFcp1YdKK4D9IzLj5emLSXhICPxlM4sdfQXCmw4Qr6XZvHPZuKGsqrKrGR1F0sduxtJupAEH09MEiP1UY0GpwaIERATi54Yl7nO6N1EZkvOeXfCKEHTq3qBCKlUJhOaY7pGCGDFljjflR6fhHi7wycPu5WA9N9K7eImY9CTfIQYa6akZhTk18bIRN87m19yzNqB4AXeN6UJeeKHovnwK6kM3pZehaUrnuwJV7JnpeqIPTdk5UvLZMJhNuRcF2GKLDdRQNC8HCGr3NqBSzmuSv699HyLQe30HMymWak9NkTfLPGg0UdHeRrtnOX28a8CSsgkcaHYaUFESthvQNbFBlgaTHka8MTNavqmwgZsPr6VC3yI4gZ44n1A7Y9KXGrm2TtkvpjF3FassunPuCPZ9d1zfeCwQybKbOyVAfsyLacjklaf8u10WZnfY2IfTMFSIIaGll3JcCLyxTtV3Gos34yinPfdkJQa5yv960yZjS6wvP6SOxrmJzUkEg6yuTuXmEecMd5Z2XTRJGgYA65D0vb8VKwAxlUzAUCIZHpZKD56mQPdMR0pj3wMy7tGyc6K86Z7Vc2KSOds1vXMEwosmfhUSGc1WmIdbn8Mx86sues9K8LjEOfWGbRLXV4nMaUQIS6ZgUhbvgUeyPsSPz4RRYRvJuTdYYUc1op3II59Fy5aetM9UrFm7sMTrrSm5L1iwF9T5iE4AifrUX13Zk0CI1nJ1P1acx6p9JnYUNl4oZbgP0PGaMjmmnhym1dnAyImzOOjBH8KnKzx6LYxNqxNXXDxrZgao1uhz2IpZEJBqrxpeXB4mx4FI4xJiVqpqPP6YjNfZCmdi38T4ofOWYz6djs5Pcyw2TDCXaGITSW5zIH6MRROymKleo6B45pxFwZEErJ3x5qjuxzmDmqz2wTXjiyUdICYeA93nRNDdUaaP0Zj3vSeNcCLZw1vRBXrGVHQnEfoPJr03kjsUZIUutgS5AMqpjAxDWhWYHytmQvpQcar0Lb54quHu2BbAvZsRp2kvUfIicwQ6r1o5ZNn3F5xairfQGynbN8OM7c2ZBRDncYh4FsSkNDOXrntapyjZbCQPzsYt5ySlnvC2uCmmJPabOnj4apGfOpDztuXrEoD2OngRliP4DJaPz6DnQOlX" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:27.793" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:27.793" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:56:27.256" endtime="20250108 15:56:27.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:27.794" level="INFO">
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:56:27.793" endtime="20250108 15:56:27.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:27.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:27.794" endtime="20250108 15:56:27.794"/>
</kw>
<msg timestamp="20250108 15:56:27.794" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:56:27.255" endtime="20250108 15:56:27.794"/>
</kw>
<msg timestamp="20250108 15:56:27.794" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:56:27.255" endtime="20250108 15:56:27.794"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:27.795" endtime="20250108 15:56:27.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:27.795" endtime="20250108 15:56:27.795"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20250108 15:56:27.795" endtime="20250108 15:56:27.795"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="NOT RUN" starttime="20250108 15:56:27.795" endtime="20250108 15:56:27.795"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:27.795" endtime="20250108 15:56:27.795"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250108 15:56:27.795" endtime="20250108 15:56:27.795"/>
</return>
<status status="PASS" starttime="20250108 15:56:27.795" endtime="20250108 15:56:27.795"/>
</branch>
<status status="PASS" starttime="20250108 15:56:27.794" endtime="20250108 15:56:27.795"/>
</if>
<msg timestamp="20250108 15:56:27.796" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CreateMultipartUpload operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:56:27.254" endtime="20250108 15:56:27.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:27.796" endtime="20250108 15:56:27.796"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:27.796" endtime="20250108 15:56:27.796"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:27.247" endtime="20250108 15:56:27.796"/>
</test>
<test id="s1-s3-s8-t5" name="Test Multipart Upload Complete Entity too small" line="140">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:27.798" level="INFO">${randStr} = 5367125768</msg>
<status status="PASS" starttime="20250108 15:56:27.798" endtime="20250108 15:56:27.798"/>
</kw>
<msg timestamp="20250108 15:56:27.798" level="INFO">${random} = ozone-test-5367125768</msg>
<status status="PASS" starttime="20250108 15:56:27.798" endtime="20250108 15:56:27.798"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:27.799" level="INFO">${PREFIX} = ozone-test-5367125768</msg>
<status status="PASS" starttime="20250108 15:56:27.798" endtime="20250108 15:56:27.799"/>
</kw>
<status status="PASS" starttime="20250108 15:56:27.797" endtime="20250108 15:56:27.799"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:27.803" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-5367125768/multipartKey2  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:28.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:28.299" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5367125768/multipartKey2",
    "UploadId": "2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218"
}</msg>
<status status="PASS" starttime="20250108 15:56:27.800" endtime="20250108 15:56:28.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:28.300" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-5367125768/multipartKey2",
    "UploadId": "2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218"
}</msg>
<status status="PASS" starttime="20250108 15:56:28.300" endtime="20250108 15:56:28.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:28.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:28.300" endtime="20250108 15:56:28.301"/>
</kw>
<msg timestamp="20250108 15:56:28.301" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5367125768/multipartKey2",
    "UploadId": "2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218"
}</msg>
<status status="PASS" starttime="20250108 15:56:27.800" endtime="20250108 15:56:28.301"/>
</kw>
<msg timestamp="20250108 15:56:28.301" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-5367125768/multipartKey2",
    "UploadId": "2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218"
}</msg>
<status status="PASS" starttime="20250108 15:56:27.800" endtime="20250108 15:56:28.301"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:28.301" endtime="20250108 15:56:28.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:28.302" endtime="20250108 15:56:28.302"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:28.305" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-5367125768/multipartKey2",
    "UploadId": "2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:28.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:28.310" level="INFO">${output} = 2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218</msg>
<status status="PASS" starttime="20250108 15:56:28.303" endtime="20250108 15:56:28.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:28.310" level="INFO">2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218</msg>
<status status="PASS" starttime="20250108 15:56:28.310" endtime="20250108 15:56:28.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:28.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:28.310" endtime="20250108 15:56:28.311"/>
</kw>
<msg timestamp="20250108 15:56:28.311" level="INFO">${upload_id} = 2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218</msg>
<status status="PASS" starttime="20250108 15:56:28.302" endtime="20250108 15:56:28.311"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:28.311" endtime="20250108 15:56:28.311"/>
</return>
<status status="PASS" starttime="20250108 15:56:28.301" endtime="20250108 15:56:28.311"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:28.311" endtime="20250108 15:56:28.311"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:28.311" endtime="20250108 15:56:28.311"/>
</branch>
<status status="PASS" starttime="20250108 15:56:28.301" endtime="20250108 15:56:28.311"/>
</if>
<msg timestamp="20250108 15:56:28.311" level="INFO">${uploadID} = 2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218</msg>
<status status="PASS" starttime="20250108 15:56:27.799" endtime="20250108 15:56:28.311"/>
</kw>
<kw name="Upload MPU parts" library="mpu_lib">
<var>${parts}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<arg>${uploadID}</arg>
<arg>/tmp/10kb</arg>
<arg>/tmp/10kb</arg>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250108 15:56:28.312" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20250108 15:56:28.312" endtime="20250108 15:56:28.312"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/10kb</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250108 15:56:28.313" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20250108 15:56:28.313" endtime="20250108 15:56:28.313"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:28.316" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-5367125768/multipartKey2 --part-number 1 --body /tmp/10kb --upload-id 2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:28.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:28.911" level="INFO">${output} = {
    "ETag": "05d88036fe411ed39e763d133dd3d107"
}</msg>
<status status="PASS" starttime="20250108 15:56:28.314" endtime="20250108 15:56:28.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:28.912" level="INFO">{
    "ETag": "05d88036fe411ed39e763d133dd3d107"
}</msg>
<status status="PASS" starttime="20250108 15:56:28.911" endtime="20250108 15:56:28.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:28.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:28.912" endtime="20250108 15:56:28.912"/>
</kw>
<msg timestamp="20250108 15:56:28.912" level="INFO">${output} = {
    "ETag": "05d88036fe411ed39e763d133dd3d107"
}</msg>
<status status="PASS" starttime="20250108 15:56:28.314" endtime="20250108 15:56:28.912"/>
</kw>
<msg timestamp="20250108 15:56:28.912" level="INFO">${result} = {
    "ETag": "05d88036fe411ed39e763d133dd3d107"
}</msg>
<status status="PASS" starttime="20250108 15:56:28.313" endtime="20250108 15:56:28.912"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:28.913" endtime="20250108 15:56:28.913"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:28.916" level="INFO">Running command 'echo '{
    "ETag": "05d88036fe411ed39e763d133dd3d107"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:28.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:28.921" level="INFO">${output} = 05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:28.914" endtime="20250108 15:56:28.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:28.922" level="INFO">05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:28.922" endtime="20250108 15:56:28.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:28.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:28.922" endtime="20250108 15:56:28.923"/>
</kw>
<status status="PASS" starttime="20250108 15:56:28.914" endtime="20250108 15:56:28.923"/>
</kw>
<msg timestamp="20250108 15:56:28.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:28.914" endtime="20250108 15:56:28.923"/>
</kw>
<msg timestamp="20250108 15:56:28.923" level="INFO">${etag} = 05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:28.913" endtime="20250108 15:56:28.923"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:28.927" level="INFO">Running command 'md5sum /tmp/10kb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:28.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:28.931" level="INFO">${output} = 05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:28.924" endtime="20250108 15:56:28.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:28.932" level="INFO">05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:28.931" endtime="20250108 15:56:28.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:28.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:28.932" endtime="20250108 15:56:28.932"/>
</kw>
<status status="PASS" starttime="20250108 15:56:28.924" endtime="20250108 15:56:28.933"/>
</kw>
<msg timestamp="20250108 15:56:28.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:28.924" endtime="20250108 15:56:28.933"/>
</kw>
<msg timestamp="20250108 15:56:28.933" level="INFO">${md5sum} = 05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:28.923" endtime="20250108 15:56:28.933"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:28.933" endtime="20250108 15:56:28.933"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:28.933" endtime="20250108 15:56:28.933"/>
</return>
<status status="PASS" starttime="20250108 15:56:28.913" endtime="20250108 15:56:28.933"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:28.934" endtime="20250108 15:56:28.934"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:28.933" endtime="20250108 15:56:28.934"/>
</branch>
<status status="PASS" starttime="20250108 15:56:28.913" endtime="20250108 15:56:28.934"/>
</if>
<msg timestamp="20250108 15:56:28.934" level="INFO">${etag} = 05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:28.313" endtime="20250108 15:56:28.934"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:56:28.934" endtime="20250108 15:56:28.934"/>
</kw>
<status status="PASS" starttime="20250108 15:56:28.312" endtime="20250108 15:56:28.934"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/10kb</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250108 15:56:28.935" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20250108 15:56:28.934" endtime="20250108 15:56:28.935"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${etag}</var>
<arg>${bucket}</arg>
<arg>${key}</arg>
<arg>${upload_id}</arg>
<arg>${part}</arg>
<arg>${file}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:28.938" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-5367125768/multipartKey2 --part-number 2 --body /tmp/10kb --upload-id 2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:29.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:29.518" level="INFO">${output} = {
    "ETag": "05d88036fe411ed39e763d133dd3d107"
}</msg>
<status status="PASS" starttime="20250108 15:56:28.936" endtime="20250108 15:56:29.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:29.519" level="INFO">{
    "ETag": "05d88036fe411ed39e763d133dd3d107"
}</msg>
<status status="PASS" starttime="20250108 15:56:29.519" endtime="20250108 15:56:29.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:29.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:29.519" endtime="20250108 15:56:29.520"/>
</kw>
<msg timestamp="20250108 15:56:29.520" level="INFO">${output} = {
    "ETag": "05d88036fe411ed39e763d133dd3d107"
}</msg>
<status status="PASS" starttime="20250108 15:56:28.936" endtime="20250108 15:56:29.520"/>
</kw>
<msg timestamp="20250108 15:56:29.520" level="INFO">${result} = {
    "ETag": "05d88036fe411ed39e763d133dd3d107"
}</msg>
<status status="PASS" starttime="20250108 15:56:28.935" endtime="20250108 15:56:29.520"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:29.520" endtime="20250108 15:56:29.521"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:29.524" level="INFO">Running command 'echo '{
    "ETag": "05d88036fe411ed39e763d133dd3d107"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:29.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:29.529" level="INFO">${output} = 05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:29.522" endtime="20250108 15:56:29.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:29.529" level="INFO">05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:29.529" endtime="20250108 15:56:29.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:29.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:29.529" endtime="20250108 15:56:29.530"/>
</kw>
<status status="PASS" starttime="20250108 15:56:29.521" endtime="20250108 15:56:29.530"/>
</kw>
<msg timestamp="20250108 15:56:29.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:29.521" endtime="20250108 15:56:29.530"/>
</kw>
<msg timestamp="20250108 15:56:29.530" level="INFO">${etag} = 05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:29.521" endtime="20250108 15:56:29.530"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:29.533" level="INFO">Running command 'md5sum /tmp/10kb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:29.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:29.537" level="INFO">${output} = 05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:29.531" endtime="20250108 15:56:29.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:29.538" level="INFO">05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:29.537" endtime="20250108 15:56:29.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:29.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:29.538" endtime="20250108 15:56:29.538"/>
</kw>
<status status="PASS" starttime="20250108 15:56:29.531" endtime="20250108 15:56:29.538"/>
</kw>
<msg timestamp="20250108 15:56:29.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:29.531" endtime="20250108 15:56:29.539"/>
</kw>
<msg timestamp="20250108 15:56:29.539" level="INFO">${md5sum} = 05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:29.530" endtime="20250108 15:56:29.539"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:29.539" endtime="20250108 15:56:29.539"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:29.539" endtime="20250108 15:56:29.539"/>
</return>
<status status="PASS" starttime="20250108 15:56:29.520" endtime="20250108 15:56:29.539"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:29.539" endtime="20250108 15:56:29.539"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:29.539" endtime="20250108 15:56:29.539"/>
</branch>
<status status="PASS" starttime="20250108 15:56:29.520" endtime="20250108 15:56:29.539"/>
</if>
<msg timestamp="20250108 15:56:29.540" level="INFO">${etag} = 05d88036fe411ed39e763d133dd3d107</msg>
<status status="PASS" starttime="20250108 15:56:28.935" endtime="20250108 15:56:29.540"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:56:29.540" endtime="20250108 15:56:29.540"/>
</kw>
<status status="PASS" starttime="20250108 15:56:28.934" endtime="20250108 15:56:29.540"/>
</iter>
<status status="PASS" starttime="20250108 15:56:28.312" endtime="20250108 15:56:29.540"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250108 15:56:29.540" level="INFO">${parts} = {ETag=05d88036fe411ed39e763d133dd3d107,PartNumber=1},{ETag=05d88036fe411ed39e763d133dd3d107,PartNumber=2}</msg>
<status status="PASS" starttime="20250108 15:56:29.540" endtime="20250108 15:56:29.540"/>
</kw>
<return>
<value>${parts}</value>
<status status="PASS" starttime="20250108 15:56:29.541" endtime="20250108 15:56:29.541"/>
</return>
<msg timestamp="20250108 15:56:29.541" level="INFO">${parts} = {ETag=05d88036fe411ed39e763d133dd3d107,PartNumber=1},{ETag=05d88036fe411ed39e763d133dd3d107,PartNumber=2}</msg>
<status status="PASS" starttime="20250108 15:56:28.312" endtime="20250108 15:56:29.541"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey2</arg>
<arg>${uploadID}</arg>
<arg>${parts}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:29.544" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-5367125768/multipartKey2 --upload-id 2a9f0f56-0f97-47c7-a2b3-14bc6e69ee8b-113793550794162218 --multipart-upload 'Parts=[{ETag=05d88036fe411ed39e763d133dd3d107,PartNumber=1},{ETag=05d88036fe411ed39e763d133dd3d107,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:30.030" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:30.030" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250108 15:56:29.542" endtime="20250108 15:56:30.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:30.031" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20250108 15:56:30.031" endtime="20250108 15:56:30.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:30.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:30.032" endtime="20250108 15:56:30.032"/>
</kw>
<msg timestamp="20250108 15:56:30.032" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250108 15:56:29.542" endtime="20250108 15:56:30.032"/>
</kw>
<msg timestamp="20250108 15:56:30.032" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250108 15:56:29.541" endtime="20250108 15:56:30.032"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:30.033" endtime="20250108 15:56:30.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:30.033" endtime="20250108 15:56:30.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:30.033" endtime="20250108 15:56:30.033"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250108 15:56:30.033" endtime="20250108 15:56:30.033"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250108 15:56:30.033" endtime="20250108 15:56:30.033"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:30.032" endtime="20250108 15:56:30.033"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250108 15:56:30.033" endtime="20250108 15:56:30.033"/>
</return>
<status status="PASS" starttime="20250108 15:56:30.033" endtime="20250108 15:56:30.033"/>
</branch>
<status status="PASS" starttime="20250108 15:56:30.032" endtime="20250108 15:56:30.033"/>
</if>
<msg timestamp="20250108 15:56:30.033" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20250108 15:56:29.541" endtime="20250108 15:56:30.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:30.034" endtime="20250108 15:56:30.034"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:27.797" endtime="20250108 15:56:30.034"/>
</test>
<test id="s1-s3-s8-t6" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="147">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:30.036" level="INFO">${randStr} = 2896340679</msg>
<status status="PASS" starttime="20250108 15:56:30.035" endtime="20250108 15:56:30.036"/>
</kw>
<msg timestamp="20250108 15:56:30.036" level="INFO">${random} = ozone-test-2896340679</msg>
<status status="PASS" starttime="20250108 15:56:30.035" endtime="20250108 15:56:30.036"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:30.036" level="INFO">${PREFIX} = ozone-test-2896340679</msg>
<status status="PASS" starttime="20250108 15:56:30.036" endtime="20250108 15:56:30.036"/>
</kw>
<status status="PASS" starttime="20250108 15:56:30.035" endtime="20250108 15:56:30.036"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:30.040" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2896340679/multipartKey3  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:30.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:30.525" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2896340679/multipartKey3",
    "UploadId": "63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893"
}</msg>
<status status="PASS" starttime="20250108 15:56:30.038" endtime="20250108 15:56:30.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:30.526" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2896340679/multipartKey3",
    "UploadId": "63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893"
}</msg>
<status status="PASS" starttime="20250108 15:56:30.525" endtime="20250108 15:56:30.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:30.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:30.526" endtime="20250108 15:56:30.526"/>
</kw>
<msg timestamp="20250108 15:56:30.526" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2896340679/multipartKey3",
    "UploadId": "63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893"
}</msg>
<status status="PASS" starttime="20250108 15:56:30.038" endtime="20250108 15:56:30.526"/>
</kw>
<msg timestamp="20250108 15:56:30.526" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2896340679/multipartKey3",
    "UploadId": "63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893"
}</msg>
<status status="PASS" starttime="20250108 15:56:30.037" endtime="20250108 15:56:30.526"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:30.527" endtime="20250108 15:56:30.527"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:30.527" endtime="20250108 15:56:30.527"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:30.530" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2896340679/multipartKey3",
    "UploadId": "63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:30.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:30.535" level="INFO">${output} = 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893</msg>
<status status="PASS" starttime="20250108 15:56:30.528" endtime="20250108 15:56:30.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:30.535" level="INFO">63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893</msg>
<status status="PASS" starttime="20250108 15:56:30.535" endtime="20250108 15:56:30.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:30.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:30.536" endtime="20250108 15:56:30.536"/>
</kw>
<msg timestamp="20250108 15:56:30.536" level="INFO">${upload_id} = 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893</msg>
<status status="PASS" starttime="20250108 15:56:30.527" endtime="20250108 15:56:30.536"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:30.536" endtime="20250108 15:56:30.536"/>
</return>
<status status="PASS" starttime="20250108 15:56:30.527" endtime="20250108 15:56:30.536"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:30.536" endtime="20250108 15:56:30.536"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:30.536" endtime="20250108 15:56:30.536"/>
</branch>
<status status="PASS" starttime="20250108 15:56:30.526" endtime="20250108 15:56:30.536"/>
</if>
<msg timestamp="20250108 15:56:30.537" level="INFO">${uploadID} = 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893</msg>
<status status="PASS" starttime="20250108 15:56:30.036" endtime="20250108 15:56:30.537"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:30.540" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-2896340679/multipartKey3 --upload-id 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:31.036" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:31.036" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:30.538" endtime="20250108 15:56:31.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:31.038" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250108 15:56:31.037" endtime="20250108 15:56:31.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:31.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:31.038" endtime="20250108 15:56:31.038"/>
</kw>
<msg timestamp="20250108 15:56:31.038" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:30.538" endtime="20250108 15:56:31.038"/>
</kw>
<msg timestamp="20250108 15:56:31.038" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:30.537" endtime="20250108 15:56:31.038"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:31.039" endtime="20250108 15:56:31.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:31.039" endtime="20250108 15:56:31.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:31.039" endtime="20250108 15:56:31.039"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250108 15:56:31.039" endtime="20250108 15:56:31.039"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250108 15:56:31.039" endtime="20250108 15:56:31.039"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:31.039" endtime="20250108 15:56:31.039"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250108 15:56:31.039" endtime="20250108 15:56:31.039"/>
</return>
<status status="PASS" starttime="20250108 15:56:31.039" endtime="20250108 15:56:31.039"/>
</branch>
<status status="PASS" starttime="20250108 15:56:31.039" endtime="20250108 15:56:31.040"/>
</if>
<msg timestamp="20250108 15:56:31.040" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:30.537" endtime="20250108 15:56:31.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:31.040" endtime="20250108 15:56:31.040"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:31.043" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-2896340679/multipartKey3 --upload-id 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:31.561" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:31.561" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:31.041" endtime="20250108 15:56:31.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:31.562" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250108 15:56:31.562" endtime="20250108 15:56:31.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:31.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:31.563" endtime="20250108 15:56:31.563"/>
</kw>
<msg timestamp="20250108 15:56:31.563" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:31.041" endtime="20250108 15:56:31.563"/>
</kw>
<msg timestamp="20250108 15:56:31.563" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:31.041" endtime="20250108 15:56:31.563"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:31.564" endtime="20250108 15:56:31.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:31.564" endtime="20250108 15:56:31.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:31.564" endtime="20250108 15:56:31.564"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250108 15:56:31.564" endtime="20250108 15:56:31.564"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250108 15:56:31.564" endtime="20250108 15:56:31.564"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:31.563" endtime="20250108 15:56:31.564"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250108 15:56:31.564" endtime="20250108 15:56:31.564"/>
</return>
<status status="PASS" starttime="20250108 15:56:31.564" endtime="20250108 15:56:31.564"/>
</branch>
<status status="PASS" starttime="20250108 15:56:31.563" endtime="20250108 15:56:31.564"/>
</if>
<msg timestamp="20250108 15:56:31.564" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:31.040" endtime="20250108 15:56:31.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:31.565" endtime="20250108 15:56:31.565"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:31.568" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2896340679/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:32.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:32.452" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:31.566" endtime="20250108 15:56:32.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:32.453" level="INFO">{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:32.453" endtime="20250108 15:56:32.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:32.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:32.454" endtime="20250108 15:56:32.454"/>
</kw>
<msg timestamp="20250108 15:56:32.454" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:31.566" endtime="20250108 15:56:32.454"/>
</kw>
<msg timestamp="20250108 15:56:32.454" level="INFO">${result} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:31.565" endtime="20250108 15:56:32.455"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:32.455" endtime="20250108 15:56:32.455"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:32.468" level="INFO">Running command 'echo '{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:32.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:32.476" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:32.456" endtime="20250108 15:56:32.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:32.477" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:32.477" endtime="20250108 15:56:32.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:32.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:32.478" endtime="20250108 15:56:32.478"/>
</kw>
<status status="PASS" starttime="20250108 15:56:32.456" endtime="20250108 15:56:32.478"/>
</kw>
<msg timestamp="20250108 15:56:32.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:32.456" endtime="20250108 15:56:32.478"/>
</kw>
<msg timestamp="20250108 15:56:32.479" level="INFO">${etag} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:32.455" endtime="20250108 15:56:32.479"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:32.483" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:32.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:32.500" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:32.480" endtime="20250108 15:56:32.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:32.501" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:32.500" endtime="20250108 15:56:32.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:32.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:32.501" endtime="20250108 15:56:32.501"/>
</kw>
<status status="PASS" starttime="20250108 15:56:32.480" endtime="20250108 15:56:32.502"/>
</kw>
<msg timestamp="20250108 15:56:32.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:32.479" endtime="20250108 15:56:32.502"/>
</kw>
<msg timestamp="20250108 15:56:32.502" level="INFO">${md5sum} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:32.479" endtime="20250108 15:56:32.502"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:32.502" endtime="20250108 15:56:32.502"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:32.503" endtime="20250108 15:56:32.503"/>
</return>
<status status="PASS" starttime="20250108 15:56:32.455" endtime="20250108 15:56:32.503"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:32.503" endtime="20250108 15:56:32.503"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:32.503" endtime="20250108 15:56:32.503"/>
</branch>
<status status="PASS" starttime="20250108 15:56:32.455" endtime="20250108 15:56:32.503"/>
</if>
<msg timestamp="20250108 15:56:32.503" level="INFO">${eTag1} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:31.565" endtime="20250108 15:56:32.503"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:32.508" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2896340679/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:33.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:33.220" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:32.505" endtime="20250108 15:56:33.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:33.221" level="INFO">{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:33.221" endtime="20250108 15:56:33.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:33.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:33.221" endtime="20250108 15:56:33.222"/>
</kw>
<msg timestamp="20250108 15:56:33.222" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:32.504" endtime="20250108 15:56:33.222"/>
</kw>
<msg timestamp="20250108 15:56:33.222" level="INFO">${result} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:32.504" endtime="20250108 15:56:33.222"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:33.222" endtime="20250108 15:56:33.223"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:33.226" level="INFO">Running command 'echo '{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:33.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:33.231" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:33.224" endtime="20250108 15:56:33.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:33.232" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:33.232" endtime="20250108 15:56:33.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:33.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:33.232" endtime="20250108 15:56:33.233"/>
</kw>
<status status="PASS" starttime="20250108 15:56:33.223" endtime="20250108 15:56:33.233"/>
</kw>
<msg timestamp="20250108 15:56:33.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:33.223" endtime="20250108 15:56:33.233"/>
</kw>
<msg timestamp="20250108 15:56:33.233" level="INFO">${etag} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:33.223" endtime="20250108 15:56:33.233"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:33.236" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:33.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:33.251" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:33.234" endtime="20250108 15:56:33.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:33.252" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:33.251" endtime="20250108 15:56:33.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:33.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:33.252" endtime="20250108 15:56:33.252"/>
</kw>
<status status="PASS" starttime="20250108 15:56:33.234" endtime="20250108 15:56:33.252"/>
</kw>
<msg timestamp="20250108 15:56:33.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:33.234" endtime="20250108 15:56:33.253"/>
</kw>
<msg timestamp="20250108 15:56:33.253" level="INFO">${md5sum} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:33.233" endtime="20250108 15:56:33.253"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:33.253" endtime="20250108 15:56:33.253"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:33.253" endtime="20250108 15:56:33.253"/>
</return>
<status status="PASS" starttime="20250108 15:56:33.222" endtime="20250108 15:56:33.253"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:33.253" endtime="20250108 15:56:33.253"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:33.253" endtime="20250108 15:56:33.253"/>
</branch>
<status status="PASS" starttime="20250108 15:56:33.222" endtime="20250108 15:56:33.253"/>
</if>
<msg timestamp="20250108 15:56:33.254" level="INFO">${eTag2} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:32.503" endtime="20250108 15:56:33.254"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag3}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>3</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:33.258" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2896340679/multipartKey3 --part-number 3 --body /tmp/part2 --upload-id 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:33.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:33.867" level="INFO">${output} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:33.256" endtime="20250108 15:56:33.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:33.867" level="INFO">{
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:33.867" endtime="20250108 15:56:33.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:33.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:33.868" endtime="20250108 15:56:33.868"/>
</kw>
<msg timestamp="20250108 15:56:33.868" level="INFO">${output} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:33.255" endtime="20250108 15:56:33.868"/>
</kw>
<msg timestamp="20250108 15:56:33.868" level="INFO">${result} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:33.254" endtime="20250108 15:56:33.868"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:33.869" endtime="20250108 15:56:33.869"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:33.872" level="INFO">Running command 'echo '{
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:33.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:33.878" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:33.870" endtime="20250108 15:56:33.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:33.879" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:33.878" endtime="20250108 15:56:33.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:33.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:33.879" endtime="20250108 15:56:33.879"/>
</kw>
<status status="PASS" starttime="20250108 15:56:33.870" endtime="20250108 15:56:33.879"/>
</kw>
<msg timestamp="20250108 15:56:33.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:33.869" endtime="20250108 15:56:33.879"/>
</kw>
<msg timestamp="20250108 15:56:33.880" level="INFO">${etag} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:33.869" endtime="20250108 15:56:33.880"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:33.883" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:33.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:33.888" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:33.881" endtime="20250108 15:56:33.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:33.889" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:33.889" endtime="20250108 15:56:33.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:33.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:33.889" endtime="20250108 15:56:33.890"/>
</kw>
<status status="PASS" starttime="20250108 15:56:33.880" endtime="20250108 15:56:33.890"/>
</kw>
<msg timestamp="20250108 15:56:33.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:33.880" endtime="20250108 15:56:33.890"/>
</kw>
<msg timestamp="20250108 15:56:33.890" level="INFO">${md5sum} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:33.880" endtime="20250108 15:56:33.890"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:33.890" endtime="20250108 15:56:33.891"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:33.891" endtime="20250108 15:56:33.891"/>
</return>
<status status="PASS" starttime="20250108 15:56:33.868" endtime="20250108 15:56:33.891"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:33.891" endtime="20250108 15:56:33.891"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:33.891" endtime="20250108 15:56:33.891"/>
</branch>
<status status="PASS" starttime="20250108 15:56:33.868" endtime="20250108 15:56:33.891"/>
</if>
<msg timestamp="20250108 15:56:33.891" level="INFO">${eTag3} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:33.254" endtime="20250108 15:56:33.891"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:33.895" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-2896340679/multipartKey3 --upload-id 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:34.413" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:34.414" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:33.893" endtime="20250108 15:56:34.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:34.414" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250108 15:56:34.414" endtime="20250108 15:56:34.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:34.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:34.415" endtime="20250108 15:56:34.415"/>
</kw>
<msg timestamp="20250108 15:56:34.415" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:33.892" endtime="20250108 15:56:34.415"/>
</kw>
<msg timestamp="20250108 15:56:34.415" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:33.892" endtime="20250108 15:56:34.415"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:34.416" endtime="20250108 15:56:34.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:34.416" endtime="20250108 15:56:34.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:34.416" endtime="20250108 15:56:34.416"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250108 15:56:34.416" endtime="20250108 15:56:34.416"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250108 15:56:34.416" endtime="20250108 15:56:34.416"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:34.415" endtime="20250108 15:56:34.416"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250108 15:56:34.416" endtime="20250108 15:56:34.416"/>
</return>
<status status="PASS" starttime="20250108 15:56:34.416" endtime="20250108 15:56:34.416"/>
</branch>
<status status="PASS" starttime="20250108 15:56:34.415" endtime="20250108 15:56:34.416"/>
</if>
<msg timestamp="20250108 15:56:34.417" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:33.891" endtime="20250108 15:56:34.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:34.417" endtime="20250108 15:56:34.417"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:34.421" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-2896340679/multipartKey3 --upload-id 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893 --multipart-upload 'Parts=[{ETag=8b159edb131173daa7e8acef6359359b,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:34.956" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:34.956" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:34.419" endtime="20250108 15:56:34.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:34.957" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20250108 15:56:34.956" endtime="20250108 15:56:34.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:34.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:34.957" endtime="20250108 15:56:34.957"/>
</kw>
<msg timestamp="20250108 15:56:34.957" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:34.418" endtime="20250108 15:56:34.957"/>
</kw>
<msg timestamp="20250108 15:56:34.957" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:34.418" endtime="20250108 15:56:34.957"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:34.958" endtime="20250108 15:56:34.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:34.958" endtime="20250108 15:56:34.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:34.958" endtime="20250108 15:56:34.958"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250108 15:56:34.958" endtime="20250108 15:56:34.958"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250108 15:56:34.958" endtime="20250108 15:56:34.958"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:34.958" endtime="20250108 15:56:34.958"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250108 15:56:34.958" endtime="20250108 15:56:34.958"/>
</return>
<status status="PASS" starttime="20250108 15:56:34.958" endtime="20250108 15:56:34.958"/>
</branch>
<status status="PASS" starttime="20250108 15:56:34.958" endtime="20250108 15:56:34.959"/>
</if>
<msg timestamp="20250108 15:56:34.959" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20250108 15:56:34.417" endtime="20250108 15:56:34.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:34.959" endtime="20250108 15:56:34.959"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:34.963" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-2896340679/multipartKey3 --upload-id 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893 --multipart-upload 'Parts=[{ETag=8b159edb131173daa7e8acef6359359b,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:35.477" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:35.477" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250108 15:56:34.960" endtime="20250108 15:56:35.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:35.478" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250108 15:56:35.478" endtime="20250108 15:56:35.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:35.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:35.478" endtime="20250108 15:56:35.479"/>
</kw>
<msg timestamp="20250108 15:56:35.479" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250108 15:56:34.960" endtime="20250108 15:56:35.479"/>
</kw>
<msg timestamp="20250108 15:56:35.479" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250108 15:56:34.960" endtime="20250108 15:56:35.479"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:35.479" endtime="20250108 15:56:35.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:35.480" endtime="20250108 15:56:35.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:35.480" endtime="20250108 15:56:35.480"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250108 15:56:35.480" endtime="20250108 15:56:35.480"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250108 15:56:35.480" endtime="20250108 15:56:35.480"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:35.479" endtime="20250108 15:56:35.480"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250108 15:56:35.480" endtime="20250108 15:56:35.480"/>
</return>
<status status="PASS" starttime="20250108 15:56:35.480" endtime="20250108 15:56:35.480"/>
</branch>
<status status="PASS" starttime="20250108 15:56:35.479" endtime="20250108 15:56:35.480"/>
</if>
<msg timestamp="20250108 15:56:35.480" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20250108 15:56:34.959" endtime="20250108 15:56:35.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:35.481" endtime="20250108 15:56:35.481"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:35.484" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-2896340679/multipartKey3 --upload-id 63dc3ed4-7610-4d4e-8046-7d6976958d4b-113793550940110893 --multipart-upload 'Parts=[{ETag=8b159edb131173daa7e8acef6359359b,PartNumber=1},{ETag=564a98406c6377454f8aca7bf9b40043,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:35.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:35.991" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2896340679/multipartKey3",
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\""
}</msg>
<status status="PASS" starttime="20250108 15:56:35.482" endtime="20250108 15:56:35.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:35.992" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2896340679/multipartKey3",
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\""
}</msg>
<status status="PASS" starttime="20250108 15:56:35.992" endtime="20250108 15:56:35.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:35.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:35.992" endtime="20250108 15:56:35.993"/>
</kw>
<msg timestamp="20250108 15:56:35.993" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2896340679/multipartKey3",
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\""
}</msg>
<status status="PASS" starttime="20250108 15:56:35.482" endtime="20250108 15:56:35.993"/>
</kw>
<msg timestamp="20250108 15:56:35.993" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2896340679/multipartKey3",
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\""
}</msg>
<status status="PASS" starttime="20250108 15:56:35.481" endtime="20250108 15:56:35.993"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:35.993" endtime="20250108 15:56:35.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:35.994" endtime="20250108 15:56:35.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:35.994" endtime="20250108 15:56:35.994"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:35.998" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2896340679/multipartKey3",
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:36.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:36.003" level="INFO">${output} = "911c5565443cefdaff10f1b30855cbf4-3"</msg>
<status status="PASS" starttime="20250108 15:56:35.995" endtime="20250108 15:56:36.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:36.004" level="INFO">"911c5565443cefdaff10f1b30855cbf4-3"</msg>
<status status="PASS" starttime="20250108 15:56:36.004" endtime="20250108 15:56:36.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:36.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:36.004" endtime="20250108 15:56:36.005"/>
</kw>
<status status="PASS" starttime="20250108 15:56:35.995" endtime="20250108 15:56:36.005"/>
</kw>
<msg timestamp="20250108 15:56:36.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:35.995" endtime="20250108 15:56:36.005"/>
</kw>
<msg timestamp="20250108 15:56:36.005" level="INFO">${etag} = "911c5565443cefdaff10f1b30855cbf4-3"</msg>
<status status="PASS" starttime="20250108 15:56:35.994" endtime="20250108 15:56:36.005"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:36.005" endtime="20250108 15:56:36.005"/>
</return>
<status status="PASS" starttime="20250108 15:56:35.993" endtime="20250108 15:56:36.005"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:36.005" endtime="20250108 15:56:36.005"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:36.005" endtime="20250108 15:56:36.005"/>
</branch>
<status status="PASS" starttime="20250108 15:56:35.993" endtime="20250108 15:56:36.005"/>
</if>
<msg timestamp="20250108 15:56:36.006" level="INFO">${result} = "911c5565443cefdaff10f1b30855cbf4-3"</msg>
<status status="PASS" starttime="20250108 15:56:35.481" endtime="20250108 15:56:36.006"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:36.009" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2896340679/multipartKey3 /tmp/ozone-test-2896340679-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:37.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:37.615" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 6291456,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:36.007" endtime="20250108 15:56:37.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:37.616" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 6291456,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:36 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:36 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:56:37.616" endtime="20250108 15:56:37.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:37.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:37.616" endtime="20250108 15:56:37.617"/>
</kw>
<status status="PASS" starttime="20250108 15:56:36.007" endtime="20250108 15:56:37.617"/>
</kw>
<msg timestamp="20250108 15:56:37.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:36.006" endtime="20250108 15:56:37.617"/>
</kw>
<msg timestamp="20250108 15:56:37.617" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 6291456,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:36.006" endtime="20250108 15:56:37.617"/>
</kw>
<msg timestamp="20250108 15:56:37.617" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 6291456,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:36.006" endtime="20250108 15:56:37.617"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:37.621" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-2896340679-multipartKey3'.</msg>
<msg timestamp="20250108 15:56:37.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:37.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:37.618" endtime="20250108 15:56:37.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:37.633" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:37.633" endtime="20250108 15:56:37.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:37.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:37.633" endtime="20250108 15:56:37.634"/>
</kw>
<status status="PASS" starttime="20250108 15:56:37.618" endtime="20250108 15:56:37.634"/>
</kw>
<msg timestamp="20250108 15:56:37.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:37.618" endtime="20250108 15:56:37.634"/>
</kw>
<status status="PASS" starttime="20250108 15:56:37.617" endtime="20250108 15:56:37.634"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:37.638" level="INFO">Running command 'md5sum /tmp/ozone-test-2896340679-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:37.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:37.653" level="INFO">${output} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:37.635" endtime="20250108 15:56:37.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:37.654" level="INFO">fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:37.653" endtime="20250108 15:56:37.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:37.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:37.654" endtime="20250108 15:56:37.655"/>
</kw>
<status status="PASS" starttime="20250108 15:56:37.635" endtime="20250108 15:56:37.655"/>
</kw>
<msg timestamp="20250108 15:56:37.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:37.635" endtime="20250108 15:56:37.655"/>
</kw>
<msg timestamp="20250108 15:56:37.655" level="INFO">${checksumbefore} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:37.635" endtime="20250108 15:56:37.655"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:37.659" level="INFO">Running command 'md5sum /tmp/ozone-test-2896340679-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:37.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:37.674" level="INFO">${output} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:37.656" endtime="20250108 15:56:37.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:37.675" level="INFO">fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:37.674" endtime="20250108 15:56:37.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:37.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:37.675" endtime="20250108 15:56:37.675"/>
</kw>
<status status="PASS" starttime="20250108 15:56:37.656" endtime="20250108 15:56:37.675"/>
</kw>
<msg timestamp="20250108 15:56:37.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:37.655" endtime="20250108 15:56:37.675"/>
</kw>
<msg timestamp="20250108 15:56:37.676" level="INFO">${checksumafter} = fe490f572ac079f86c8c6a3a973bc314</msg>
<status status="PASS" starttime="20250108 15:56:37.655" endtime="20250108 15:56:37.676"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:37.676" endtime="20250108 15:56:37.676"/>
</kw>
<status status="PASS" starttime="20250108 15:56:37.634" endtime="20250108 15:56:37.676"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:37.679" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2896340679/multipartKey3 --part-number 1 /tmp/ozone-test-2896340679-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:38.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:38.664" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 5243904,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:37.677" endtime="20250108 15:56:38.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:38.665" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 5243904,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:38 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:38 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:56:38.664" endtime="20250108 15:56:38.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:38.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:38.665" endtime="20250108 15:56:38.665"/>
</kw>
<status status="PASS" starttime="20250108 15:56:37.677" endtime="20250108 15:56:38.665"/>
</kw>
<msg timestamp="20250108 15:56:38.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:37.677" endtime="20250108 15:56:38.666"/>
</kw>
<msg timestamp="20250108 15:56:38.666" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 5243904,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:37.676" endtime="20250108 15:56:38.666"/>
</kw>
<msg timestamp="20250108 15:56:38.666" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 5243904,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:37.676" endtime="20250108 15:56:38.666"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:38.669" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:38.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:38.682" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:38.667" endtime="20250108 15:56:38.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:38.683" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:38.682" endtime="20250108 15:56:38.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:38.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:38.683" endtime="20250108 15:56:38.683"/>
</kw>
<status status="PASS" starttime="20250108 15:56:38.667" endtime="20250108 15:56:38.684"/>
</kw>
<msg timestamp="20250108 15:56:38.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:38.667" endtime="20250108 15:56:38.684"/>
</kw>
<msg timestamp="20250108 15:56:38.684" level="INFO">${checksumbefore} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:38.666" endtime="20250108 15:56:38.684"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:38.687" level="INFO">Running command 'md5sum /tmp/ozone-test-2896340679-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:38.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:38.700" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:38.685" endtime="20250108 15:56:38.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:38.701" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:38.700" endtime="20250108 15:56:38.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:38.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:38.701" endtime="20250108 15:56:38.701"/>
</kw>
<status status="PASS" starttime="20250108 15:56:38.685" endtime="20250108 15:56:38.701"/>
</kw>
<msg timestamp="20250108 15:56:38.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:38.684" endtime="20250108 15:56:38.701"/>
</kw>
<msg timestamp="20250108 15:56:38.702" level="INFO">${checksumafter} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:38.684" endtime="20250108 15:56:38.702"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:38.702" endtime="20250108 15:56:38.702"/>
</kw>
<status status="PASS" starttime="20250108 15:56:38.666" endtime="20250108 15:56:38.702"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:38.706" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2896340679/multipartKey3 --part-number 3 /tmp/ozone-test-2896340679-multipartKey3-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:39.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:39.480" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 1047552,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:38.704" endtime="20250108 15:56:39.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:39.481" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 1047552,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:39 GMT",
    "Metadata": {},
    "PartsCount": 3,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:39 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:56:39.480" endtime="20250108 15:56:39.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:39.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:39.481" endtime="20250108 15:56:39.481"/>
</kw>
<status status="PASS" starttime="20250108 15:56:38.703" endtime="20250108 15:56:39.482"/>
</kw>
<msg timestamp="20250108 15:56:39.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:38.703" endtime="20250108 15:56:39.482"/>
</kw>
<msg timestamp="20250108 15:56:39.482" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 1047552,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:38.703" endtime="20250108 15:56:39.482"/>
</kw>
<msg timestamp="20250108 15:56:39.482" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:35 GMT",
    "ContentLength": 1047552,
    "ETag": "\"911c5565443cefdaff10f1b30855cbf4-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:38.702" endtime="20250108 15:56:39.482"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:39.485" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:39.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:39.491" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:39.483" endtime="20250108 15:56:39.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:39.492" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:39.491" endtime="20250108 15:56:39.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:39.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:39.492" endtime="20250108 15:56:39.492"/>
</kw>
<status status="PASS" starttime="20250108 15:56:39.483" endtime="20250108 15:56:39.492"/>
</kw>
<msg timestamp="20250108 15:56:39.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:39.483" endtime="20250108 15:56:39.492"/>
</kw>
<msg timestamp="20250108 15:56:39.492" level="INFO">${checksumbefore} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:39.482" endtime="20250108 15:56:39.492"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:39.495" level="INFO">Running command 'md5sum /tmp/ozone-test-2896340679-multipartKey3-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:39.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:39.501" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:39.493" endtime="20250108 15:56:39.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:39.501" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:39.501" endtime="20250108 15:56:39.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:39.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:39.502" endtime="20250108 15:56:39.502"/>
</kw>
<status status="PASS" starttime="20250108 15:56:39.493" endtime="20250108 15:56:39.502"/>
</kw>
<msg timestamp="20250108 15:56:39.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:39.493" endtime="20250108 15:56:39.502"/>
</kw>
<msg timestamp="20250108 15:56:39.502" level="INFO">${checksumafter} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:39.493" endtime="20250108 15:56:39.502"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:39.502" endtime="20250108 15:56:39.503"/>
</kw>
<status status="PASS" starttime="20250108 15:56:39.482" endtime="20250108 15:56:39.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:30.034" endtime="20250108 15:56:39.503"/>
</test>
<test id="s1-s3-s8-t7" name="Test abort Multipart upload" line="180">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:39.505" level="INFO">${randStr} = 0899329316</msg>
<status status="PASS" starttime="20250108 15:56:39.504" endtime="20250108 15:56:39.505"/>
</kw>
<msg timestamp="20250108 15:56:39.505" level="INFO">${random} = ozone-test-0899329316</msg>
<status status="PASS" starttime="20250108 15:56:39.504" endtime="20250108 15:56:39.505"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:39.505" level="INFO">${PREFIX} = ozone-test-0899329316</msg>
<status status="PASS" starttime="20250108 15:56:39.505" endtime="20250108 15:56:39.505"/>
</kw>
<status status="PASS" starttime="20250108 15:56:39.504" endtime="20250108 15:56:39.505"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey4</arg>
<arg>0</arg>
<arg>--storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:39.509" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-0899329316/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:40.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:40.011" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0899329316/multipartKey4",
    "UploadId": "effdc503-da40-4b34-857e-72276982d9c1-113793551561588785"
}</msg>
<status status="PASS" starttime="20250108 15:56:39.506" endtime="20250108 15:56:40.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:40.012" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-0899329316/multipartKey4",
    "UploadId": "effdc503-da40-4b34-857e-72276982d9c1-113793551561588785"
}</msg>
<status status="PASS" starttime="20250108 15:56:40.011" endtime="20250108 15:56:40.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:40.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:40.012" endtime="20250108 15:56:40.013"/>
</kw>
<msg timestamp="20250108 15:56:40.013" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0899329316/multipartKey4",
    "UploadId": "effdc503-da40-4b34-857e-72276982d9c1-113793551561588785"
}</msg>
<status status="PASS" starttime="20250108 15:56:39.506" endtime="20250108 15:56:40.013"/>
</kw>
<msg timestamp="20250108 15:56:40.013" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0899329316/multipartKey4",
    "UploadId": "effdc503-da40-4b34-857e-72276982d9c1-113793551561588785"
}</msg>
<status status="PASS" starttime="20250108 15:56:39.506" endtime="20250108 15:56:40.013"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:40.013" endtime="20250108 15:56:40.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:40.014" endtime="20250108 15:56:40.014"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:40.016" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-0899329316/multipartKey4",
    "UploadId": "effdc503-da40-4b34-857e-72276982d9c1-113793551561588785"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:40.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:40.021" level="INFO">${output} = effdc503-da40-4b34-857e-72276982d9c1-113793551561588785</msg>
<status status="PASS" starttime="20250108 15:56:40.014" endtime="20250108 15:56:40.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:40.022" level="INFO">effdc503-da40-4b34-857e-72276982d9c1-113793551561588785</msg>
<status status="PASS" starttime="20250108 15:56:40.022" endtime="20250108 15:56:40.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:40.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:40.022" endtime="20250108 15:56:40.023"/>
</kw>
<msg timestamp="20250108 15:56:40.023" level="INFO">${upload_id} = effdc503-da40-4b34-857e-72276982d9c1-113793551561588785</msg>
<status status="PASS" starttime="20250108 15:56:40.014" endtime="20250108 15:56:40.023"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:40.023" endtime="20250108 15:56:40.023"/>
</return>
<status status="PASS" starttime="20250108 15:56:40.013" endtime="20250108 15:56:40.023"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:40.023" endtime="20250108 15:56:40.023"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:40.023" endtime="20250108 15:56:40.023"/>
</branch>
<status status="PASS" starttime="20250108 15:56:40.013" endtime="20250108 15:56:40.023"/>
</if>
<msg timestamp="20250108 15:56:40.023" level="INFO">${uploadID} = effdc503-da40-4b34-857e-72276982d9c1-113793551561588785</msg>
<status status="PASS" starttime="20250108 15:56:39.505" endtime="20250108 15:56:40.023"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey4</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:40.026" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-0899329316/multipartKey4 --upload-id effdc503-da40-4b34-857e-72276982d9c1-113793551561588785 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:40.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:40.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:40.025" endtime="20250108 15:56:40.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:40.530" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:40.529" endtime="20250108 15:56:40.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:40.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:40.530" endtime="20250108 15:56:40.530"/>
</kw>
<msg timestamp="20250108 15:56:40.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:40.024" endtime="20250108 15:56:40.530"/>
</kw>
<msg timestamp="20250108 15:56:40.531" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:56:40.024" endtime="20250108 15:56:40.531"/>
</kw>
<msg timestamp="20250108 15:56:40.531" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250108 15:56:40.023" endtime="20250108 15:56:40.531"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:39.503" endtime="20250108 15:56:40.531"/>
</test>
<test id="s1-s3-s8-t8" name="Test abort Multipart upload with invalid uploadId" line="184">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:40.533" level="INFO">${randStr} = 9189701869</msg>
<status status="PASS" starttime="20250108 15:56:40.532" endtime="20250108 15:56:40.533"/>
</kw>
<msg timestamp="20250108 15:56:40.533" level="INFO">${random} = ozone-test-9189701869</msg>
<status status="PASS" starttime="20250108 15:56:40.532" endtime="20250108 15:56:40.533"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:40.533" level="INFO">${PREFIX} = ozone-test-9189701869</msg>
<status status="PASS" starttime="20250108 15:56:40.533" endtime="20250108 15:56:40.533"/>
</kw>
<status status="PASS" starttime="20250108 15:56:40.532" endtime="20250108 15:56:40.533"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>"random"</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:40.537" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-9189701869/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:41.034" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:41.034" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250108 15:56:40.535" endtime="20250108 15:56:41.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:41.035" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20250108 15:56:41.034" endtime="20250108 15:56:41.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:41.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:41.035" endtime="20250108 15:56:41.035"/>
</kw>
<msg timestamp="20250108 15:56:41.036" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250108 15:56:40.534" endtime="20250108 15:56:41.036"/>
</kw>
<msg timestamp="20250108 15:56:41.036" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20250108 15:56:40.534" endtime="20250108 15:56:41.036"/>
</kw>
<msg timestamp="20250108 15:56:41.036" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250108 15:56:40.534" endtime="20250108 15:56:41.036"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:40.531" endtime="20250108 15:56:41.036"/>
</test>
<test id="s1-s3-s8-t9" name="Upload part with Incorrect uploadID" line="187">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:41.039" level="INFO">${randStr} = 4146500063</msg>
<status status="PASS" starttime="20250108 15:56:41.039" endtime="20250108 15:56:41.039"/>
</kw>
<msg timestamp="20250108 15:56:41.039" level="INFO">${random} = ozone-test-4146500063</msg>
<status status="PASS" starttime="20250108 15:56:41.039" endtime="20250108 15:56:41.040"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:41.040" level="INFO">${PREFIX} = ozone-test-4146500063</msg>
<status status="PASS" starttime="20250108 15:56:41.040" endtime="20250108 15:56:41.040"/>
</kw>
<status status="PASS" starttime="20250108 15:56:41.038" endtime="20250108 15:56:41.040"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:41.046" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4146500063/multipartKey  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:41.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:41.560" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4146500063/multipartKey",
    "UploadId": "bacea674-3c4c-4d7f-804b-85bc3ccd17d2-113793551662710834"
}</msg>
<status status="PASS" starttime="20250108 15:56:41.042" endtime="20250108 15:56:41.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:41.561" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4146500063/multipartKey",
    "UploadId": "bacea674-3c4c-4d7f-804b-85bc3ccd17d2-113793551662710834"
}</msg>
<status status="PASS" starttime="20250108 15:56:41.561" endtime="20250108 15:56:41.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:41.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:41.561" endtime="20250108 15:56:41.562"/>
</kw>
<msg timestamp="20250108 15:56:41.562" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4146500063/multipartKey",
    "UploadId": "bacea674-3c4c-4d7f-804b-85bc3ccd17d2-113793551662710834"
}</msg>
<status status="PASS" starttime="20250108 15:56:41.041" endtime="20250108 15:56:41.562"/>
</kw>
<msg timestamp="20250108 15:56:41.562" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4146500063/multipartKey",
    "UploadId": "bacea674-3c4c-4d7f-804b-85bc3ccd17d2-113793551662710834"
}</msg>
<status status="PASS" starttime="20250108 15:56:41.041" endtime="20250108 15:56:41.562"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:41.563" endtime="20250108 15:56:41.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:41.563" endtime="20250108 15:56:41.563"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:41.566" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4146500063/multipartKey",
    "UploadId": "bacea674-3c4c-4d7f-804b-85bc3ccd17d2-113793551662710834"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:41.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:41.571" level="INFO">${output} = bacea674-3c4c-4d7f-804b-85bc3ccd17d2-113793551662710834</msg>
<status status="PASS" starttime="20250108 15:56:41.564" endtime="20250108 15:56:41.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:41.572" level="INFO">bacea674-3c4c-4d7f-804b-85bc3ccd17d2-113793551662710834</msg>
<status status="PASS" starttime="20250108 15:56:41.572" endtime="20250108 15:56:41.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:41.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:41.572" endtime="20250108 15:56:41.573"/>
</kw>
<msg timestamp="20250108 15:56:41.573" level="INFO">${upload_id} = bacea674-3c4c-4d7f-804b-85bc3ccd17d2-113793551662710834</msg>
<status status="PASS" starttime="20250108 15:56:41.563" endtime="20250108 15:56:41.573"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:41.573" endtime="20250108 15:56:41.573"/>
</return>
<status status="PASS" starttime="20250108 15:56:41.562" endtime="20250108 15:56:41.573"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:41.573" endtime="20250108 15:56:41.573"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:41.573" endtime="20250108 15:56:41.573"/>
</branch>
<status status="PASS" starttime="20250108 15:56:41.562" endtime="20250108 15:56:41.573"/>
</if>
<msg timestamp="20250108 15:56:41.573" level="INFO">${uploadID} = bacea674-3c4c-4d7f-804b-85bc3ccd17d2-113793551662710834</msg>
<status status="PASS" starttime="20250108 15:56:41.040" endtime="20250108 15:56:41.574"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey</arg>
<arg>"no-such-upload-id"</arg>
<arg>1</arg>
<arg>/tmp/10kb</arg>
<arg>255</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:41.577" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-4146500063/multipartKey --part-number 1 --body /tmp/10kb --upload-id "no-such-upload-id" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:42.081" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:56:42.081" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250108 15:56:41.575" endtime="20250108 15:56:42.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:42.082" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20250108 15:56:42.081" endtime="20250108 15:56:42.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:42.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:42.082" endtime="20250108 15:56:42.082"/>
</kw>
<msg timestamp="20250108 15:56:42.082" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250108 15:56:41.575" endtime="20250108 15:56:42.082"/>
</kw>
<msg timestamp="20250108 15:56:42.083" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250108 15:56:41.574" endtime="20250108 15:56:42.083"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:56:42.083" endtime="20250108 15:56:42.083"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<status status="NOT RUN" starttime="20250108 15:56:42.083" endtime="20250108 15:56:42.083"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<status status="NOT RUN" starttime="20250108 15:56:42.083" endtime="20250108 15:56:42.083"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20250108 15:56:42.083" endtime="20250108 15:56:42.083"/>
</kw>
<return>
<value>${etag}</value>
<status status="NOT RUN" starttime="20250108 15:56:42.083" endtime="20250108 15:56:42.083"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:42.083" endtime="20250108 15:56:42.084"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="PASS" starttime="20250108 15:56:42.084" endtime="20250108 15:56:42.084"/>
</return>
<status status="PASS" starttime="20250108 15:56:42.084" endtime="20250108 15:56:42.084"/>
</branch>
<status status="PASS" starttime="20250108 15:56:42.083" endtime="20250108 15:56:42.084"/>
</if>
<msg timestamp="20250108 15:56:42.084" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20250108 15:56:41.574" endtime="20250108 15:56:42.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:42.084" endtime="20250108 15:56:42.084"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:41.037" endtime="20250108 15:56:42.084"/>
</test>
<test id="s1-s3-s8-t10" name="Test list parts" line="192">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:42.086" level="INFO">${randStr} = 7787021429</msg>
<status status="PASS" starttime="20250108 15:56:42.086" endtime="20250108 15:56:42.086"/>
</kw>
<msg timestamp="20250108 15:56:42.086" level="INFO">${random} = ozone-test-7787021429</msg>
<status status="PASS" starttime="20250108 15:56:42.086" endtime="20250108 15:56:42.086"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:42.087" level="INFO">${PREFIX} = ozone-test-7787021429</msg>
<status status="PASS" starttime="20250108 15:56:42.087" endtime="20250108 15:56:42.087"/>
</kw>
<status status="PASS" starttime="20250108 15:56:42.085" endtime="20250108 15:56:42.087"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:42.091" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-7787021429/multipartKey5  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:42.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:42.608" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7787021429/multipartKey5",
    "UploadId": "081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028"
}</msg>
<status status="PASS" starttime="20250108 15:56:42.089" endtime="20250108 15:56:42.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:42.610" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-7787021429/multipartKey5",
    "UploadId": "081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028"
}</msg>
<status status="PASS" starttime="20250108 15:56:42.609" endtime="20250108 15:56:42.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:42.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:42.610" endtime="20250108 15:56:42.610"/>
</kw>
<msg timestamp="20250108 15:56:42.611" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7787021429/multipartKey5",
    "UploadId": "081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028"
}</msg>
<status status="PASS" starttime="20250108 15:56:42.088" endtime="20250108 15:56:42.611"/>
</kw>
<msg timestamp="20250108 15:56:42.611" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7787021429/multipartKey5",
    "UploadId": "081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028"
}</msg>
<status status="PASS" starttime="20250108 15:56:42.088" endtime="20250108 15:56:42.611"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:42.611" endtime="20250108 15:56:42.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:42.611" endtime="20250108 15:56:42.612"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:42.614" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-7787021429/multipartKey5",
    "UploadId": "081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:42.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:42.619" level="INFO">${output} = 081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028</msg>
<status status="PASS" starttime="20250108 15:56:42.612" endtime="20250108 15:56:42.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:42.620" level="INFO">081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028</msg>
<status status="PASS" starttime="20250108 15:56:42.620" endtime="20250108 15:56:42.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:42.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:42.620" endtime="20250108 15:56:42.621"/>
</kw>
<msg timestamp="20250108 15:56:42.621" level="INFO">${upload_id} = 081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028</msg>
<status status="PASS" starttime="20250108 15:56:42.612" endtime="20250108 15:56:42.621"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:42.621" endtime="20250108 15:56:42.621"/>
</return>
<status status="PASS" starttime="20250108 15:56:42.611" endtime="20250108 15:56:42.621"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:42.621" endtime="20250108 15:56:42.621"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:42.621" endtime="20250108 15:56:42.621"/>
</branch>
<status status="PASS" starttime="20250108 15:56:42.611" endtime="20250108 15:56:42.621"/>
</if>
<msg timestamp="20250108 15:56:42.622" level="INFO">${uploadID} = 081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028</msg>
<status status="PASS" starttime="20250108 15:56:42.087" endtime="20250108 15:56:42.622"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>1</arg>
<arg>/tmp/part1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:42.625" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-7787021429/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:43.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:43.422" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:42.623" endtime="20250108 15:56:43.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:43.423" level="INFO">{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:43.422" endtime="20250108 15:56:43.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:43.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:43.423" endtime="20250108 15:56:43.423"/>
</kw>
<msg timestamp="20250108 15:56:43.423" level="INFO">${output} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:42.623" endtime="20250108 15:56:43.423"/>
</kw>
<msg timestamp="20250108 15:56:43.424" level="INFO">${result} = {
    "ETag": "8b159edb131173daa7e8acef6359359b"
}</msg>
<status status="PASS" starttime="20250108 15:56:42.622" endtime="20250108 15:56:43.424"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:43.424" endtime="20250108 15:56:43.424"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:43.427" level="INFO">Running command 'echo '{
    "ETag": "8b159edb131173daa7e8acef6359359b"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:43.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:43.432" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:43.425" endtime="20250108 15:56:43.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:43.433" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:43.433" endtime="20250108 15:56:43.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:43.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:43.433" endtime="20250108 15:56:43.434"/>
</kw>
<status status="PASS" starttime="20250108 15:56:43.425" endtime="20250108 15:56:43.434"/>
</kw>
<msg timestamp="20250108 15:56:43.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:43.425" endtime="20250108 15:56:43.434"/>
</kw>
<msg timestamp="20250108 15:56:43.434" level="INFO">${etag} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:43.424" endtime="20250108 15:56:43.434"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:43.437" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:43.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:43.450" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:43.435" endtime="20250108 15:56:43.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:43.451" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:43.451" endtime="20250108 15:56:43.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:43.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:43.452" endtime="20250108 15:56:43.452"/>
</kw>
<status status="PASS" starttime="20250108 15:56:43.435" endtime="20250108 15:56:43.452"/>
</kw>
<msg timestamp="20250108 15:56:43.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:43.435" endtime="20250108 15:56:43.452"/>
</kw>
<msg timestamp="20250108 15:56:43.452" level="INFO">${md5sum} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:43.434" endtime="20250108 15:56:43.452"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:43.453" endtime="20250108 15:56:43.453"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:43.453" endtime="20250108 15:56:43.453"/>
</return>
<status status="PASS" starttime="20250108 15:56:43.424" endtime="20250108 15:56:43.453"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:43.453" endtime="20250108 15:56:43.453"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:43.453" endtime="20250108 15:56:43.453"/>
</branch>
<status status="PASS" starttime="20250108 15:56:43.424" endtime="20250108 15:56:43.453"/>
</if>
<msg timestamp="20250108 15:56:43.453" level="INFO">${eTag1} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:42.622" endtime="20250108 15:56:43.453"/>
</kw>
<kw name="Upload MPU part" library="mpu_lib">
<var>${eTag2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>2</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:43.458" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-7787021429/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:44.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:44.101" level="INFO">${output} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:43.455" endtime="20250108 15:56:44.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:44.102" level="INFO">{
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:44.101" endtime="20250108 15:56:44.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:44.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:44.102" endtime="20250108 15:56:44.102"/>
</kw>
<msg timestamp="20250108 15:56:44.102" level="INFO">${output} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:43.455" endtime="20250108 15:56:44.102"/>
</kw>
<msg timestamp="20250108 15:56:44.103" level="INFO">${result} = {
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}</msg>
<status status="PASS" starttime="20250108 15:56:43.454" endtime="20250108 15:56:44.103"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:44.103" endtime="20250108 15:56:44.103"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:44.107" level="INFO">Running command 'echo '{
    "ETag": "564a98406c6377454f8aca7bf9b40043"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:44.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:44.112" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:44.104" endtime="20250108 15:56:44.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:44.113" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:44.113" endtime="20250108 15:56:44.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:44.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:44.114" endtime="20250108 15:56:44.114"/>
</kw>
<status status="PASS" starttime="20250108 15:56:44.104" endtime="20250108 15:56:44.114"/>
</kw>
<msg timestamp="20250108 15:56:44.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:44.104" endtime="20250108 15:56:44.114"/>
</kw>
<msg timestamp="20250108 15:56:44.114" level="INFO">${etag} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:44.103" endtime="20250108 15:56:44.114"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum ${file} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:44.117" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:44.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:44.123" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:44.115" endtime="20250108 15:56:44.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:44.124" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:44.123" endtime="20250108 15:56:44.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:44.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:44.124" endtime="20250108 15:56:44.124"/>
</kw>
<status status="PASS" starttime="20250108 15:56:44.115" endtime="20250108 15:56:44.124"/>
</kw>
<msg timestamp="20250108 15:56:44.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:44.115" endtime="20250108 15:56:44.124"/>
</kw>
<msg timestamp="20250108 15:56:44.125" level="INFO">${md5sum} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:44.114" endtime="20250108 15:56:44.125"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag}</arg>
<arg>${md5sum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:56:44.125" endtime="20250108 15:56:44.125"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:44.125" endtime="20250108 15:56:44.125"/>
</return>
<status status="PASS" starttime="20250108 15:56:44.103" endtime="20250108 15:56:44.125"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:44.125" endtime="20250108 15:56:44.125"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:44.125" endtime="20250108 15:56:44.125"/>
</branch>
<status status="PASS" starttime="20250108 15:56:44.103" endtime="20250108 15:56:44.125"/>
</if>
<msg timestamp="20250108 15:56:44.126" level="INFO">${eTag2} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:43.454" endtime="20250108 15:56:44.126"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:44.129" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-7787021429/multipartKey5 --upload-id 081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:44.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:44.630" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250108 15:56:44.127" endtime="20250108 15:56:44.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:44.631" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-01-08T15:56:44.003Z",
            "ETag": "564a98406c6377454f8aca7bf9b40043",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20250108 15:56:44.630" endtime="20250108 15:56:44.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:44.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:44.631" endtime="20250108 15:56:44.632"/>
</kw>
<status status="PASS" starttime="20250108 15:56:44.127" endtime="20250108 15:56:44.632"/>
</kw>
<msg timestamp="20250108 15:56:44.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:44.126" endtime="20250108 15:56:44.632"/>
</kw>
<msg timestamp="20250108 15:56:44.632" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250108 15:56:44.126" endtime="20250108 15:56:44.632"/>
</kw>
<msg timestamp="20250108 15:56:44.632" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250108 15:56:44.126" endtime="20250108 15:56:44.632"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:44.635" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-01-08T15:56:44.003Z",
            "ETag": "564a98406c6377454f8aca7bf9b40043",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:44.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:44.640" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:44.633" endtime="20250108 15:56:44.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:44.641" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:44.640" endtime="20250108 15:56:44.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:44.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:44.641" endtime="20250108 15:56:44.641"/>
</kw>
<msg timestamp="20250108 15:56:44.641" level="INFO">${part1} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:44.632" endtime="20250108 15:56:44.641"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:44.644" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
        },
        {
            "PartNumber": 2,
            "LastModified": "2025-01-08T15:56:44.003Z",
            "ETag": "564a98406c6377454f8aca7bf9b40043",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:44.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:44.649" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:44.642" endtime="20250108 15:56:44.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:44.650" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:44.650" endtime="20250108 15:56:44.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:44.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:44.650" endtime="20250108 15:56:44.651"/>
</kw>
<msg timestamp="20250108 15:56:44.651" level="INFO">${part2} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:44.642" endtime="20250108 15:56:44.651"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:44.651" endtime="20250108 15:56:44.651"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:44.651" endtime="20250108 15:56:44.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:44.652" endtime="20250108 15:56:44.652"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:44.655" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-7787021429/multipartKey5 --upload-id 081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:45.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:45.161" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250108 15:56:44.653" endtime="20250108 15:56:45.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:45.162" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20250108 15:56:45.161" endtime="20250108 15:56:45.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:45.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:45.162" endtime="20250108 15:56:45.163"/>
</kw>
<status status="PASS" starttime="20250108 15:56:44.653" endtime="20250108 15:56:45.163"/>
</kw>
<msg timestamp="20250108 15:56:45.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:44.653" endtime="20250108 15:56:45.163"/>
</kw>
<msg timestamp="20250108 15:56:45.163" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250108 15:56:44.652" endtime="20250108 15:56:45.163"/>
</kw>
<msg timestamp="20250108 15:56:45.164" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
    ...</msg>
<status status="PASS" starttime="20250108 15:56:44.652" endtime="20250108 15:56:45.164"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:45.167" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:45.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:45.172" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:45.164" endtime="20250108 15:56:45.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:45.173" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:45.172" endtime="20250108 15:56:45.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:45.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:45.173" endtime="20250108 15:56:45.173"/>
</kw>
<msg timestamp="20250108 15:56:45.173" level="INFO">${part1} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:45.164" endtime="20250108 15:56:45.173"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:45.176" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2025-01-08T15:56:43.319Z",
            "ETag": "8b159edb131173daa7e8acef6359359b",
            "Size": 5243904
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:45.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:45.181" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250108 15:56:45.174" endtime="20250108 15:56:45.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:45.182" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250108 15:56:45.181" endtime="20250108 15:56:45.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:45.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:45.182" endtime="20250108 15:56:45.182"/>
</kw>
<msg timestamp="20250108 15:56:45.183" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20250108 15:56:45.174" endtime="20250108 15:56:45.183"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:45.183" endtime="20250108 15:56:45.183"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:45.183" endtime="20250108 15:56:45.183"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:45.187" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-7787021429/multipartKey5 --upload-id 081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:45.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:45.697" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-01-08T15:56:44.003Z",
            "ETag": "564a98406c6377454f8aca7bf9b40043",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250108 15:56:45.185" endtime="20250108 15:56:45.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:45.698" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-01-08T15:56:44.003Z",
            "ETag": "564a98406c6377454f8aca7bf9b40043",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20250108 15:56:45.698" endtime="20250108 15:56:45.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:45.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:45.698" endtime="20250108 15:56:45.699"/>
</kw>
<status status="PASS" starttime="20250108 15:56:45.185" endtime="20250108 15:56:45.699"/>
</kw>
<msg timestamp="20250108 15:56:45.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:45.184" endtime="20250108 15:56:45.699"/>
</kw>
<msg timestamp="20250108 15:56:45.699" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-01-08T15:56:44.003Z",
            "ETag": "564a98406c6377454f8aca7bf9b40043",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250108 15:56:45.184" endtime="20250108 15:56:45.699"/>
</kw>
<msg timestamp="20250108 15:56:45.699" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-01-08T15:56:44.003Z",
            "ETag": "564a98406c6377454f8aca7bf9b40043",
            "Size": 1047552
    ...</msg>
<status status="PASS" starttime="20250108 15:56:45.183" endtime="20250108 15:56:45.699"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:45.702" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2025-01-08T15:56:44.003Z",
            "ETag": "564a98406c6377454f8aca7bf9b40043",
            "Size": 1047552
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:45.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:45.707" level="INFO">${output} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:45.700" endtime="20250108 15:56:45.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:45.707" level="INFO">564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:45.707" endtime="20250108 15:56:45.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:45.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:45.708" endtime="20250108 15:56:45.708"/>
</kw>
<msg timestamp="20250108 15:56:45.708" level="INFO">${part2} = 564a98406c6377454f8aca7bf9b40043</msg>
<status status="PASS" starttime="20250108 15:56:45.699" endtime="20250108 15:56:45.708"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:45.708" endtime="20250108 15:56:45.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:45.709" endtime="20250108 15:56:45.709"/>
</kw>
<kw name="Abort MPU" library="mpu_lib">
<var>${result}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/multipartKey5</arg>
<arg>${uploadID}</arg>
<arg>0</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:45.712" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-7787021429/multipartKey5 --upload-id 081c9024-41b9-4243-854e-44bad5174c1b-113793551731327028 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:46.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:46.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:45.710" endtime="20250108 15:56:46.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:46.245" level="INFO"/>
<status status="PASS" starttime="20250108 15:56:46.245" endtime="20250108 15:56:46.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:46.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:46.245" endtime="20250108 15:56:46.246"/>
</kw>
<msg timestamp="20250108 15:56:46.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:56:45.710" endtime="20250108 15:56:46.246"/>
</kw>
<msg timestamp="20250108 15:56:46.246" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:56:45.710" endtime="20250108 15:56:46.246"/>
</kw>
<msg timestamp="20250108 15:56:46.246" level="INFO">${result} = None</msg>
<status status="PASS" starttime="20250108 15:56:45.709" endtime="20250108 15:56:46.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:42.085" endtime="20250108 15:56:46.246"/>
</test>
<test id="s1-s3-s8-t11" name="Test Multipart Upload with the simplified aws s3 cp API" line="223">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:46.248" level="INFO">${randStr} = 4965296482</msg>
<status status="PASS" starttime="20250108 15:56:46.248" endtime="20250108 15:56:46.248"/>
</kw>
<msg timestamp="20250108 15:56:46.248" level="INFO">${random} = ozone-test-4965296482</msg>
<status status="PASS" starttime="20250108 15:56:46.248" endtime="20250108 15:56:46.248"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:46.249" level="INFO">${PREFIX} = ozone-test-4965296482</msg>
<status status="PASS" starttime="20250108 15:56:46.248" endtime="20250108 15:56:46.249"/>
</kw>
<status status="PASS" starttime="20250108 15:56:46.247" endtime="20250108 15:56:46.249"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/22mb s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:46.252" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/22mb s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:47.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:47.629" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250108 15:56:46.250" endtime="20250108 15:56:47.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:47.630" level="INFO">Completed 256.0 KiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (10.2 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/22.0 MiB (12.3 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (14.1 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (15.7 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (17.7 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (19.8 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (21.3 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (23.2 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (23.9 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (25.5 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (26.8 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (28.4 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (29.2 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (30.8 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (32.2 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (33.7 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (34.9 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (36.4 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (37.8 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (38.2 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (39.7 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (41.1 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (41.8 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (42.7 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (42.9 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (44.1 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (44.8 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (46.1 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (47.3 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (47.8 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (49.0 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (50.0 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (50.5 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (51.3 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (50.5 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (51.7 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (52.1 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (53.1 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (53.8 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (54.7 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (56.7 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (57.4 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (57.9 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (58.3 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (58.8 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (59.1 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (59.4 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (59.8 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (60.2 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (60.5 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (60.7 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (61.2 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (61.4 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (62.0 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (62.0 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (62.6 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (63.5 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (64.4 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (64.9 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (65.5 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (66.4 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (66.5 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (66.8 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (67.4 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (67.8 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (68.1 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (68.2 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (68.8 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (68.9 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (69.5 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (66.9 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (66.4 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (65.7 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (66.1 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (64.9 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (64.0 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (64.0 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (63.5 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (62.6 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (62.6 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining
upload: ../../tmp/22mb to s3://encrypted/mpyawscli               </msg>
<status status="PASS" starttime="20250108 15:56:47.630" endtime="20250108 15:56:47.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:47.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:47.630" endtime="20250108 15:56:47.631"/>
</kw>
<status status="PASS" starttime="20250108 15:56:46.250" endtime="20250108 15:56:47.631"/>
</kw>
<msg timestamp="20250108 15:56:47.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:46.249" endtime="20250108 15:56:47.631"/>
</kw>
<msg timestamp="20250108 15:56:47.631" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20250108 15:56:46.249" endtime="20250108 15:56:47.631"/>
</kw>
<status status="PASS" starttime="20250108 15:56:46.249" endtime="20250108 15:56:47.631"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:47.635" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://encrypted/mpyawscli /tmp/22mb.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:50.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:50.616" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (275.7 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (550.0 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (824.6 KiB/s) with 1 file(s) remain...</msg>
<status status="PASS" starttime="20250108 15:56:47.633" endtime="20250108 15:56:50.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:50.617" level="INFO">Completed 256.0 KiB/22.0 MiB (275.7 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (550.0 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (824.6 KiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (1.1 MiB/s) with 1 file(s) remaining    
Completed 1.2 MiB/22.0 MiB (1.3 MiB/s) with 1 file(s) remaining    
Completed 1.5 MiB/22.0 MiB (1.6 MiB/s) with 1 file(s) remaining    
Completed 1.8 MiB/22.0 MiB (1.9 MiB/s) with 1 file(s) remaining    
Completed 2.0 MiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining    
Completed 2.2 MiB/22.0 MiB (2.4 MiB/s) with 1 file(s) remaining    
Completed 2.5 MiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remaining    
Completed 2.8 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining    
Completed 3.0 MiB/22.0 MiB (3.2 MiB/s) with 1 file(s) remaining    
Completed 3.2 MiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining    
Completed 3.5 MiB/22.0 MiB (3.7 MiB/s) with 1 file(s) remaining    
Completed 3.8 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining    
Completed 4.0 MiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining    
Completed 4.2 MiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining    
Completed 4.5 MiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining    
Completed 4.8 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining    
Completed 5.0 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining    
Completed 5.2 MiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining    
Completed 5.5 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining    
Completed 5.8 MiB/22.0 MiB (5.8 MiB/s) with 1 file(s) remaining    
Completed 6.0 MiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining    
Completed 6.2 MiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining    
Completed 6.5 MiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining    
Completed 6.8 MiB/22.0 MiB (6.7 MiB/s) with 1 file(s) remaining    
Completed 7.0 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining    
Completed 7.2 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining    
Completed 7.5 MiB/22.0 MiB (7.3 MiB/s) with 1 file(s) remaining    
Completed 7.8 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining    
Completed 8.0 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining    
Completed 8.2 MiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining    
Completed 8.5 MiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining    
Completed 8.8 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining    
Completed 9.0 MiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining    
Completed 9.2 MiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining    
Completed 9.5 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining    
Completed 9.8 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining    
Completed 10.0 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 10.2 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining   
Completed 10.5 MiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining   
Completed 10.8 MiB/22.0 MiB (5.3 MiB/s) with 1 file(s) remaining   
Completed 11.0 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining   
Completed 11.2 MiB/22.0 MiB (5.6 MiB/s) with 1 file(s) remaining   
Completed 11.5 MiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining   
Completed 11.8 MiB/22.0 MiB (5.8 MiB/s) with 1 file(s) remaining   
Completed 12.0 MiB/22.0 MiB (5.9 MiB/s) with 1 file(s) remaining   
Completed 12.2 MiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining   
Completed 12.5 MiB/22.0 MiB (5.9 MiB/s) with 1 file(s) remaining   
Completed 12.8 MiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining   
Completed 13.0 MiB/22.0 MiB (6.1 MiB/s) with 1 file(s) remaining   
Completed 13.2 MiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining   
Completed 13.5 MiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining   
Completed 13.8 MiB/22.0 MiB (6.4 MiB/s) with 1 file(s) remaining   
Completed 14.0 MiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining   
Completed 14.2 MiB/22.0 MiB (6.7 MiB/s) with 1 file(s) remaining   
Completed 14.5 MiB/22.0 MiB (6.8 MiB/s) with 1 file(s) remaining   
Completed 14.8 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining   
Completed 15.0 MiB/22.0 MiB (7.0 MiB/s) with 1 file(s) remaining   
Completed 15.2 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining   
Completed 15.5 MiB/22.0 MiB (7.2 MiB/s) with 1 file(s) remaining   
Completed 15.8 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining   
Completed 16.0 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 16.2 MiB/22.0 MiB (7.3 MiB/s) with 1 file(s) remaining   
Completed 16.5 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining   
Completed 16.8 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining   
Completed 17.0 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining   
Completed 17.2 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining   
Completed 17.5 MiB/22.0 MiB (7.9 MiB/s) with 1 file(s) remaining   
Completed 17.8 MiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining   
Completed 18.0 MiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining   
Completed 18.2 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining   
Completed 18.5 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining   
Completed 18.8 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining   
Completed 19.0 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 19.2 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining   
Completed 19.5 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining   
Completed 19.8 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining   
Completed 20.0 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining   
Completed 20.2 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining   
Completed 20.5 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining   
Completed 20.8 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining   
Completed 21.0 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 21.2 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining   
Completed 21.5 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining   
Completed 21.8 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining   
Completed 22.0 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining   
download: s3://encrypted/mpyawscli to ../../tmp/22mb.result        </msg>
<status status="PASS" starttime="20250108 15:56:50.617" endtime="20250108 15:56:50.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:50.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:50.618" endtime="20250108 15:56:50.618"/>
</kw>
<status status="PASS" starttime="20250108 15:56:47.632" endtime="20250108 15:56:50.619"/>
</kw>
<msg timestamp="20250108 15:56:50.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:47.632" endtime="20250108 15:56:50.619"/>
</kw>
<msg timestamp="20250108 15:56:50.619" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (275.7 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (550.0 KiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (824.6 KiB/s) with 1 file(s) remain...</msg>
<status status="PASS" starttime="20250108 15:56:47.632" endtime="20250108 15:56:50.619"/>
</kw>
<status status="PASS" starttime="20250108 15:56:47.631" endtime="20250108 15:56:50.619"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:50.624" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:51.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:51.147" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20250108 15:56:50.621" endtime="20250108 15:56:51.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:51.148" level="INFO">delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20250108 15:56:51.147" endtime="20250108 15:56:51.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:51.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:51.148" endtime="20250108 15:56:51.148"/>
</kw>
<status status="PASS" starttime="20250108 15:56:50.621" endtime="20250108 15:56:51.149"/>
</kw>
<msg timestamp="20250108 15:56:51.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:50.620" endtime="20250108 15:56:51.149"/>
</kw>
<msg timestamp="20250108 15:56:51.149" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20250108 15:56:50.620" endtime="20250108 15:56:51.149"/>
</kw>
<status status="PASS" starttime="20250108 15:56:50.619" endtime="20250108 15:56:51.149"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/22mb</arg>
<arg>/tmp/22mb.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:51.152" level="INFO">Running command 'md5sum /tmp/22mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:51.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:51.196" level="INFO">${output} = 59bcd42628bb10a2733a0fce9931b77b</msg>
<status status="PASS" starttime="20250108 15:56:51.150" endtime="20250108 15:56:51.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:51.197" level="INFO">59bcd42628bb10a2733a0fce9931b77b</msg>
<status status="PASS" starttime="20250108 15:56:51.196" endtime="20250108 15:56:51.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:51.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:51.197" endtime="20250108 15:56:51.197"/>
</kw>
<status status="PASS" starttime="20250108 15:56:51.150" endtime="20250108 15:56:51.198"/>
</kw>
<msg timestamp="20250108 15:56:51.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:51.150" endtime="20250108 15:56:51.198"/>
</kw>
<msg timestamp="20250108 15:56:51.198" level="INFO">${checksumbefore} = 59bcd42628bb10a2733a0fce9931b77b</msg>
<status status="PASS" starttime="20250108 15:56:51.150" endtime="20250108 15:56:51.198"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:51.201" level="INFO">Running command 'md5sum /tmp/22mb.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:51.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:51.244" level="INFO">${output} = 59bcd42628bb10a2733a0fce9931b77b</msg>
<status status="PASS" starttime="20250108 15:56:51.199" endtime="20250108 15:56:51.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:51.245" level="INFO">59bcd42628bb10a2733a0fce9931b77b</msg>
<status status="PASS" starttime="20250108 15:56:51.244" endtime="20250108 15:56:51.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:51.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:51.245" endtime="20250108 15:56:51.245"/>
</kw>
<status status="PASS" starttime="20250108 15:56:51.199" endtime="20250108 15:56:51.245"/>
</kw>
<msg timestamp="20250108 15:56:51.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:51.198" endtime="20250108 15:56:51.245"/>
</kw>
<msg timestamp="20250108 15:56:51.245" level="INFO">${checksumafter} = 59bcd42628bb10a2733a0fce9931b77b</msg>
<status status="PASS" starttime="20250108 15:56:51.198" endtime="20250108 15:56:51.245"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:51.246" endtime="20250108 15:56:51.246"/>
</kw>
<status status="PASS" starttime="20250108 15:56:51.149" endtime="20250108 15:56:51.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:46.247" endtime="20250108 15:56:51.246"/>
</test>
<test id="s1-s3-s8-t12" name="Test Multipart Upload Put With Copy" line="229">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:51.249" level="INFO">${randStr} = 6449010021</msg>
<status status="PASS" starttime="20250108 15:56:51.248" endtime="20250108 15:56:51.249"/>
</kw>
<msg timestamp="20250108 15:56:51.249" level="INFO">${random} = ozone-test-6449010021</msg>
<status status="PASS" starttime="20250108 15:56:51.248" endtime="20250108 15:56:51.249"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:51.249" level="INFO">${PREFIX} = ozone-test-6449010021</msg>
<status status="PASS" starttime="20250108 15:56:51.249" endtime="20250108 15:56:51.249"/>
</kw>
<status status="PASS" starttime="20250108 15:56:51.247" endtime="20250108 15:56:51.249"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:51.253" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-6449010021/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:51.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:51.977" level="INFO">${output} = {
    "ETag": "\"8b159edb131173daa7e8acef6359359b\""
}</msg>
<status status="PASS" starttime="20250108 15:56:51.250" endtime="20250108 15:56:51.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:51.978" level="INFO">{
    "ETag": "\"8b159edb131173daa7e8acef6359359b\""
}</msg>
<status status="PASS" starttime="20250108 15:56:51.978" endtime="20250108 15:56:51.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:51.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:51.979" endtime="20250108 15:56:51.979"/>
</kw>
<status status="PASS" starttime="20250108 15:56:51.250" endtime="20250108 15:56:51.979"/>
</kw>
<msg timestamp="20250108 15:56:51.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:51.250" endtime="20250108 15:56:51.979"/>
</kw>
<msg timestamp="20250108 15:56:51.979" level="INFO">${output} = {
    "ETag": "\"8b159edb131173daa7e8acef6359359b\""
}</msg>
<status status="PASS" starttime="20250108 15:56:51.250" endtime="20250108 15:56:51.979"/>
</kw>
<msg timestamp="20250108 15:56:51.980" level="INFO">${result} = {
    "ETag": "\"8b159edb131173daa7e8acef6359359b\""
}</msg>
<status status="PASS" starttime="20250108 15:56:51.249" endtime="20250108 15:56:51.980"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copytest/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:51.984" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-6449010021/copytest/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:52.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:52.514" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6449010021/copytest/destination",
    "UploadId": "81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148"
}</msg>
<status status="PASS" starttime="20250108 15:56:51.981" endtime="20250108 15:56:52.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:52.515" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-6449010021/copytest/destination",
    "UploadId": "81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148"
}</msg>
<status status="PASS" starttime="20250108 15:56:52.514" endtime="20250108 15:56:52.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:52.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:52.515" endtime="20250108 15:56:52.515"/>
</kw>
<msg timestamp="20250108 15:56:52.516" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6449010021/copytest/destination",
    "UploadId": "81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148"
}</msg>
<status status="PASS" starttime="20250108 15:56:51.981" endtime="20250108 15:56:52.516"/>
</kw>
<msg timestamp="20250108 15:56:52.516" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6449010021/copytest/destination",
    "UploadId": "81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148"
}</msg>
<status status="PASS" starttime="20250108 15:56:51.981" endtime="20250108 15:56:52.516"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:52.516" endtime="20250108 15:56:52.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:52.517" endtime="20250108 15:56:52.517"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:52.520" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-6449010021/copytest/destination",
    "UploadId": "81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:52.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:52.525" level="INFO">${output} = 81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148</msg>
<status status="PASS" starttime="20250108 15:56:52.517" endtime="20250108 15:56:52.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:52.526" level="INFO">81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148</msg>
<status status="PASS" starttime="20250108 15:56:52.526" endtime="20250108 15:56:52.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:52.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:52.526" endtime="20250108 15:56:52.527"/>
</kw>
<msg timestamp="20250108 15:56:52.527" level="INFO">${upload_id} = 81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148</msg>
<status status="PASS" starttime="20250108 15:56:52.517" endtime="20250108 15:56:52.527"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:52.527" endtime="20250108 15:56:52.527"/>
</return>
<status status="PASS" starttime="20250108 15:56:52.516" endtime="20250108 15:56:52.527"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:52.527" endtime="20250108 15:56:52.527"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:52.527" endtime="20250108 15:56:52.527"/>
</branch>
<status status="PASS" starttime="20250108 15:56:52.516" endtime="20250108 15:56:52.527"/>
</if>
<msg timestamp="20250108 15:56:52.528" level="INFO">${uploadID} = 81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148</msg>
<status status="PASS" starttime="20250108 15:56:51.980" endtime="20250108 15:56:52.528"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:52.531" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6449010021/copytest/destination --upload-id 81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148 --part-number 1 --copy-source encrypted/ozone-test-6449010021/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:53.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:53.706" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "8b159edb131173daa7e8acef6359359b",
        "LastModified": "2025-01-08T15:56:53.641Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:52.529" endtime="20250108 15:56:53.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:53.707" level="INFO">{
    "CopyPartResult": {
        "ETag": "8b159edb131173daa7e8acef6359359b",
        "LastModified": "2025-01-08T15:56:53.641Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:53.706" endtime="20250108 15:56:53.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:53.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:53.707" endtime="20250108 15:56:53.707"/>
</kw>
<status status="PASS" starttime="20250108 15:56:52.529" endtime="20250108 15:56:53.707"/>
</kw>
<msg timestamp="20250108 15:56:53.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:52.528" endtime="20250108 15:56:53.708"/>
</kw>
<msg timestamp="20250108 15:56:53.708" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "8b159edb131173daa7e8acef6359359b",
        "LastModified": "2025-01-08T15:56:53.641Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:52.528" endtime="20250108 15:56:53.708"/>
</kw>
<msg timestamp="20250108 15:56:53.708" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "8b159edb131173daa7e8acef6359359b",
        "LastModified": "2025-01-08T15:56:53.641Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:52.528" endtime="20250108 15:56:53.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:53.708" endtime="20250108 15:56:53.708"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:53.708" endtime="20250108 15:56:53.708"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:53.711" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "8b159edb131173daa7e8acef6359359b",
        "LastModified": "2025-01-08T15:56:53.641Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:53.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:53.716" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:53.709" endtime="20250108 15:56:53.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:53.717" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:53.716" endtime="20250108 15:56:53.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:53.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:53.717" endtime="20250108 15:56:53.717"/>
</kw>
<msg timestamp="20250108 15:56:53.717" level="INFO">${eTag1} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:53.709" endtime="20250108 15:56:53.717"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copytest/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:53.721" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-6449010021/copytest/destination --upload-id 81ef8169-56d9-471f-861c-336b89f434a4-113793552379609148 --multipart-upload 'Parts=[{ETag=8b159edb131173daa7e8acef6359359b,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:54.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:54.218" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6449010021/copytest/destination",
    "ETag": "\"6023c455f8546f990683bad9700bc377-1\""
}</msg>
<status status="PASS" starttime="20250108 15:56:53.719" endtime="20250108 15:56:54.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:54.219" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6449010021/copytest/destination",
    "ETag": "\"6023c455f8546f990683bad9700bc377-1\""
}</msg>
<status status="PASS" starttime="20250108 15:56:54.218" endtime="20250108 15:56:54.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:54.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:54.219" endtime="20250108 15:56:54.219"/>
</kw>
<msg timestamp="20250108 15:56:54.219" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6449010021/copytest/destination",
    "ETag": "\"6023c455f8546f990683bad9700bc377-1\""
}</msg>
<status status="PASS" starttime="20250108 15:56:53.719" endtime="20250108 15:56:54.219"/>
</kw>
<msg timestamp="20250108 15:56:54.219" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6449010021/copytest/destination",
    "ETag": "\"6023c455f8546f990683bad9700bc377-1\""
}</msg>
<status status="PASS" starttime="20250108 15:56:53.718" endtime="20250108 15:56:54.220"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:54.220" endtime="20250108 15:56:54.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:54.220" endtime="20250108 15:56:54.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:54.220" endtime="20250108 15:56:54.221"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:54.224" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6449010021/copytest/destination",
    "ETag": "\"6023c455f8546f990683bad9700bc377-1\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:54.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:54.229" level="INFO">${output} = "6023c455f8546f990683bad9700bc377-1"</msg>
<status status="PASS" starttime="20250108 15:56:54.222" endtime="20250108 15:56:54.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:54.230" level="INFO">"6023c455f8546f990683bad9700bc377-1"</msg>
<status status="PASS" starttime="20250108 15:56:54.230" endtime="20250108 15:56:54.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:54.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:54.230" endtime="20250108 15:56:54.231"/>
</kw>
<status status="PASS" starttime="20250108 15:56:54.221" endtime="20250108 15:56:54.231"/>
</kw>
<msg timestamp="20250108 15:56:54.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:54.221" endtime="20250108 15:56:54.231"/>
</kw>
<msg timestamp="20250108 15:56:54.231" level="INFO">${etag} = "6023c455f8546f990683bad9700bc377-1"</msg>
<status status="PASS" starttime="20250108 15:56:54.221" endtime="20250108 15:56:54.231"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:54.231" endtime="20250108 15:56:54.231"/>
</return>
<status status="PASS" starttime="20250108 15:56:54.220" endtime="20250108 15:56:54.231"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:54.231" endtime="20250108 15:56:54.231"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:54.231" endtime="20250108 15:56:54.231"/>
</branch>
<status status="PASS" starttime="20250108 15:56:54.220" endtime="20250108 15:56:54.231"/>
</if>
<status status="PASS" starttime="20250108 15:56:53.718" endtime="20250108 15:56:54.232"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:54.235" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-6449010021/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:55.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:55.272" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:54 GMT",
    "ContentLength": 5243904,
    "ETag": "\"6023c455f8546f990683bad9700bc377-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:54.233" endtime="20250108 15:56:55.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:55.273" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:54 GMT",
    "ContentLength": 5243904,
    "ETag": "\"6023c455f8546f990683bad9700bc377-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:56:54 GMT",
    "Metadata": {},
    "PartsCount": 1,
    "ExpiresString": "Wed, 08 Jan 2025 15:56:54 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:56:55.273" endtime="20250108 15:56:55.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:55.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:55.273" endtime="20250108 15:56:55.274"/>
</kw>
<status status="PASS" starttime="20250108 15:56:54.233" endtime="20250108 15:56:55.274"/>
</kw>
<msg timestamp="20250108 15:56:55.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:54.232" endtime="20250108 15:56:55.274"/>
</kw>
<msg timestamp="20250108 15:56:55.274" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:54 GMT",
    "ContentLength": 5243904,
    "ETag": "\"6023c455f8546f990683bad9700bc377-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20250108 15:56:54.232" endtime="20250108 15:56:55.274"/>
</kw>
<status status="PASS" starttime="20250108 15:56:54.232" endtime="20250108 15:56:55.274"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:55.277" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:55.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:55.291" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:55.275" endtime="20250108 15:56:55.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:55.292" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:55.292" endtime="20250108 15:56:55.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:55.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:55.292" endtime="20250108 15:56:55.293"/>
</kw>
<status status="PASS" starttime="20250108 15:56:55.275" endtime="20250108 15:56:55.293"/>
</kw>
<msg timestamp="20250108 15:56:55.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:55.275" endtime="20250108 15:56:55.293"/>
</kw>
<msg timestamp="20250108 15:56:55.293" level="INFO">${checksumbefore} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:55.275" endtime="20250108 15:56:55.293"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:55.296" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:55.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:55.309" level="INFO">${output} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:55.294" endtime="20250108 15:56:55.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:55.310" level="INFO">8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:55.309" endtime="20250108 15:56:55.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:55.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:55.310" endtime="20250108 15:56:55.310"/>
</kw>
<status status="PASS" starttime="20250108 15:56:55.294" endtime="20250108 15:56:55.310"/>
</kw>
<msg timestamp="20250108 15:56:55.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:55.293" endtime="20250108 15:56:55.311"/>
</kw>
<msg timestamp="20250108 15:56:55.311" level="INFO">${checksumafter} = 8b159edb131173daa7e8acef6359359b</msg>
<status status="PASS" starttime="20250108 15:56:55.293" endtime="20250108 15:56:55.311"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:56:55.311" endtime="20250108 15:56:55.311"/>
</kw>
<status status="PASS" starttime="20250108 15:56:55.274" endtime="20250108 15:56:55.311"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:51.247" endtime="20250108 15:56:55.311"/>
</test>
<test id="s1-s3-s8-t13" name="Test Multipart Upload Put With Copy and range" line="245">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:56:55.314" level="INFO">${randStr} = 0036963812</msg>
<status status="PASS" starttime="20250108 15:56:55.313" endtime="20250108 15:56:55.314"/>
</kw>
<msg timestamp="20250108 15:56:55.314" level="INFO">${random} = ozone-test-0036963812</msg>
<status status="PASS" starttime="20250108 15:56:55.313" endtime="20250108 15:56:55.314"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:56:55.314" level="INFO">${PREFIX} = ozone-test-0036963812</msg>
<status status="PASS" starttime="20250108 15:56:55.314" endtime="20250108 15:56:55.314"/>
</kw>
<status status="PASS" starttime="20250108 15:56:55.313" endtime="20250108 15:56:55.314"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:55.318" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-0036963812/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:56.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:56.083" level="INFO">${output} = {
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\""
}</msg>
<status status="PASS" starttime="20250108 15:56:55.316" endtime="20250108 15:56:56.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:56.084" level="INFO">{
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\""
}</msg>
<status status="PASS" starttime="20250108 15:56:56.083" endtime="20250108 15:56:56.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:56.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:56.084" endtime="20250108 15:56:56.084"/>
</kw>
<status status="PASS" starttime="20250108 15:56:55.315" endtime="20250108 15:56:56.085"/>
</kw>
<msg timestamp="20250108 15:56:56.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:55.315" endtime="20250108 15:56:56.085"/>
</kw>
<msg timestamp="20250108 15:56:56.085" level="INFO">${output} = {
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\""
}</msg>
<status status="PASS" starttime="20250108 15:56:55.315" endtime="20250108 15:56:56.085"/>
</kw>
<msg timestamp="20250108 15:56:56.085" level="INFO">${result} = {
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\""
}</msg>
<status status="PASS" starttime="20250108 15:56:55.314" endtime="20250108 15:56:56.085"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:56.089" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-0036963812/copyrange/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:56.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:56.581" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0036963812/copyrange/destination",
    "UploadId": "3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463"
}</msg>
<status status="PASS" starttime="20250108 15:56:56.087" endtime="20250108 15:56:56.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:56.582" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-0036963812/copyrange/destination",
    "UploadId": "3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463"
}</msg>
<status status="PASS" starttime="20250108 15:56:56.582" endtime="20250108 15:56:56.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:56.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:56.582" endtime="20250108 15:56:56.583"/>
</kw>
<msg timestamp="20250108 15:56:56.583" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0036963812/copyrange/destination",
    "UploadId": "3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463"
}</msg>
<status status="PASS" starttime="20250108 15:56:56.086" endtime="20250108 15:56:56.583"/>
</kw>
<msg timestamp="20250108 15:56:56.583" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-0036963812/copyrange/destination",
    "UploadId": "3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463"
}</msg>
<status status="PASS" starttime="20250108 15:56:56.086" endtime="20250108 15:56:56.583"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:56.583" endtime="20250108 15:56:56.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:56.584" endtime="20250108 15:56:56.584"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:56.587" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-0036963812/copyrange/destination",
    "UploadId": "3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:56.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:56.592" level="INFO">${output} = 3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463</msg>
<status status="PASS" starttime="20250108 15:56:56.584" endtime="20250108 15:56:56.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:56.592" level="INFO">3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463</msg>
<status status="PASS" starttime="20250108 15:56:56.592" endtime="20250108 15:56:56.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:56.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:56.592" endtime="20250108 15:56:56.593"/>
</kw>
<msg timestamp="20250108 15:56:56.593" level="INFO">${upload_id} = 3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463</msg>
<status status="PASS" starttime="20250108 15:56:56.584" endtime="20250108 15:56:56.593"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:56:56.593" endtime="20250108 15:56:56.593"/>
</return>
<status status="PASS" starttime="20250108 15:56:56.583" endtime="20250108 15:56:56.593"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:56.593" endtime="20250108 15:56:56.593"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:56.593" endtime="20250108 15:56:56.593"/>
</branch>
<status status="PASS" starttime="20250108 15:56:56.583" endtime="20250108 15:56:56.593"/>
</if>
<msg timestamp="20250108 15:56:56.593" level="INFO">${uploadID} = 3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463</msg>
<status status="PASS" starttime="20250108 15:56:56.085" endtime="20250108 15:56:56.593"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:56.597" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-0036963812/copyrange/destination --upload-id 3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463 --part-number 1 --copy-source encrypted/ozone-test-0036963812/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:58.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:58.486" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:56:58.393Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:56.595" endtime="20250108 15:56:58.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:58.487" level="INFO">{
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:56:58.393Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:58.487" endtime="20250108 15:56:58.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:58.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:58.487" endtime="20250108 15:56:58.488"/>
</kw>
<status status="PASS" starttime="20250108 15:56:56.595" endtime="20250108 15:56:58.488"/>
</kw>
<msg timestamp="20250108 15:56:58.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:56.595" endtime="20250108 15:56:58.488"/>
</kw>
<msg timestamp="20250108 15:56:58.488" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:56:58.393Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:56.594" endtime="20250108 15:56:58.488"/>
</kw>
<msg timestamp="20250108 15:56:58.488" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:56:58.393Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:56.594" endtime="20250108 15:56:58.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:58.488" endtime="20250108 15:56:58.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:58.489" endtime="20250108 15:56:58.489"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:58.492" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:56:58.393Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:58.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:58.497" level="INFO">${output} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:56:58.489" endtime="20250108 15:56:58.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:58.498" level="INFO">08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:56:58.497" endtime="20250108 15:56:58.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:58.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:58.498" endtime="20250108 15:56:58.498"/>
</kw>
<msg timestamp="20250108 15:56:58.499" level="INFO">${eTag1} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:56:58.489" endtime="20250108 15:56:58.499"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:58.503" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-0036963812/copyrange/destination --upload-id 3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463 --part-number 2 --copy-source encrypted/ozone-test-0036963812/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:59.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:59.073" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:56:59.009Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:58.501" endtime="20250108 15:56:59.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:59.074" level="INFO">{
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:56:59.009Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:59.074" endtime="20250108 15:56:59.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:59.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:59.074" endtime="20250108 15:56:59.075"/>
</kw>
<status status="PASS" starttime="20250108 15:56:58.500" endtime="20250108 15:56:59.075"/>
</kw>
<msg timestamp="20250108 15:56:59.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:58.500" endtime="20250108 15:56:59.075"/>
</kw>
<msg timestamp="20250108 15:56:59.075" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:56:59.009Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:58.499" endtime="20250108 15:56:59.075"/>
</kw>
<msg timestamp="20250108 15:56:59.075" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:56:59.009Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:56:58.499" endtime="20250108 15:56:59.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:59.076" endtime="20250108 15:56:59.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:59.076" endtime="20250108 15:56:59.076"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:59.079" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:56:59.009Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:59.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:59.084" level="INFO">${output} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:56:59.077" endtime="20250108 15:56:59.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:59.085" level="INFO">08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:56:59.084" endtime="20250108 15:56:59.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:59.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:59.085" endtime="20250108 15:56:59.085"/>
</kw>
<msg timestamp="20250108 15:56:59.085" level="INFO">${eTag2} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:56:59.076" endtime="20250108 15:56:59.085"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:59.089" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-0036963812/copyrange/destination --upload-id 3aab4492-9c39-40c9-9680-2ba0c805891d-113793552647782463 --multipart-upload 'Parts=[{ETag=08c3ab7c5f6889fc6cf51bd3090d02be,PartNumber=1},{ETag=08c3ab7c5f6889fc6cf51bd3090d02be,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:59.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:59.595" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-0036963812/copyrange/destination",
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:59.087" endtime="20250108 15:56:59.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:59.596" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-0036963812/copyrange/destination",
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:59.596" endtime="20250108 15:56:59.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:59.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:59.597" endtime="20250108 15:56:59.597"/>
</kw>
<msg timestamp="20250108 15:56:59.597" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-0036963812/copyrange/destination",
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:59.086" endtime="20250108 15:56:59.597"/>
</kw>
<msg timestamp="20250108 15:56:59.597" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-0036963812/copyrange/destination",
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\""
}</msg>
<status status="PASS" starttime="20250108 15:56:59.086" endtime="20250108 15:56:59.597"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:59.598" endtime="20250108 15:56:59.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:59.598" endtime="20250108 15:56:59.598"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:56:59.598" endtime="20250108 15:56:59.598"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:59.602" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-0036963812/copyrange/destination",
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:56:59.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:56:59.607" level="INFO">${output} = "d06934f5bde68605c86bd389b8ec2bd1-2"</msg>
<status status="PASS" starttime="20250108 15:56:59.599" endtime="20250108 15:56:59.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:56:59.608" level="INFO">"d06934f5bde68605c86bd389b8ec2bd1-2"</msg>
<status status="PASS" starttime="20250108 15:56:59.607" endtime="20250108 15:56:59.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:56:59.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:56:59.608" endtime="20250108 15:56:59.608"/>
</kw>
<status status="PASS" starttime="20250108 15:56:59.599" endtime="20250108 15:56:59.608"/>
</kw>
<msg timestamp="20250108 15:56:59.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:59.599" endtime="20250108 15:56:59.608"/>
</kw>
<msg timestamp="20250108 15:56:59.609" level="INFO">${etag} = "d06934f5bde68605c86bd389b8ec2bd1-2"</msg>
<status status="PASS" starttime="20250108 15:56:59.599" endtime="20250108 15:56:59.609"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:56:59.609" endtime="20250108 15:56:59.609"/>
</return>
<status status="PASS" starttime="20250108 15:56:59.597" endtime="20250108 15:56:59.609"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:56:59.609" endtime="20250108 15:56:59.609"/>
</return>
<status status="NOT RUN" starttime="20250108 15:56:59.609" endtime="20250108 15:56:59.609"/>
</branch>
<status status="PASS" starttime="20250108 15:56:59.597" endtime="20250108 15:56:59.609"/>
</if>
<status status="PASS" starttime="20250108 15:56:59.085" endtime="20250108 15:56:59.609"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:56:59.613" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-0036963812/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:01.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:01.028" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:59 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250108 15:56:59.611" endtime="20250108 15:57:01.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:01.029" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:59 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:00 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:57:00 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:01.029" endtime="20250108 15:57:01.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:01.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:01.030" endtime="20250108 15:57:01.030"/>
</kw>
<status status="PASS" starttime="20250108 15:56:59.610" endtime="20250108 15:57:01.030"/>
</kw>
<msg timestamp="20250108 15:57:01.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:56:59.610" endtime="20250108 15:57:01.030"/>
</kw>
<msg timestamp="20250108 15:57:01.030" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:56:59 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250108 15:56:59.610" endtime="20250108 15:57:01.030"/>
</kw>
<status status="PASS" starttime="20250108 15:56:59.609" endtime="20250108 15:57:01.030"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:01.034" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:01.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:01.056" level="INFO">${output} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:01.032" endtime="20250108 15:57:01.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:01.057" level="INFO">08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:01.056" endtime="20250108 15:57:01.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:01.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:01.057" endtime="20250108 15:57:01.057"/>
</kw>
<status status="PASS" starttime="20250108 15:57:01.031" endtime="20250108 15:57:01.057"/>
</kw>
<msg timestamp="20250108 15:57:01.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:01.031" endtime="20250108 15:57:01.058"/>
</kw>
<msg timestamp="20250108 15:57:01.058" level="INFO">${checksumbefore} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:01.031" endtime="20250108 15:57:01.058"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:01.061" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:01.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:01.083" level="INFO">${output} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:01.059" endtime="20250108 15:57:01.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:01.084" level="INFO">08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:01.083" endtime="20250108 15:57:01.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:01.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:01.084" endtime="20250108 15:57:01.084"/>
</kw>
<status status="PASS" starttime="20250108 15:57:01.059" endtime="20250108 15:57:01.084"/>
</kw>
<msg timestamp="20250108 15:57:01.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:01.058" endtime="20250108 15:57:01.084"/>
</kw>
<msg timestamp="20250108 15:57:01.084" level="INFO">${checksumafter} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:01.058" endtime="20250108 15:57:01.084"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:01.085" endtime="20250108 15:57:01.085"/>
</kw>
<status status="PASS" starttime="20250108 15:57:01.031" endtime="20250108 15:57:01.085"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:56:55.312" endtime="20250108 15:57:01.085"/>
</test>
<test id="s1-s3-s8-t14" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="267">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:57:01.087" level="INFO">${randStr} = 1318928156</msg>
<status status="PASS" starttime="20250108 15:57:01.087" endtime="20250108 15:57:01.087"/>
</kw>
<msg timestamp="20250108 15:57:01.087" level="INFO">${random} = ozone-test-1318928156</msg>
<status status="PASS" starttime="20250108 15:57:01.086" endtime="20250108 15:57:01.087"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:57:01.087" level="INFO">${PREFIX} = ozone-test-1318928156</msg>
<status status="PASS" starttime="20250108 15:57:01.087" endtime="20250108 15:57:01.087"/>
</kw>
<status status="PASS" starttime="20250108 15:57:01.086" endtime="20250108 15:57:01.088"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250108 15:57:01.088" level="INFO">${curDate} = 2025-01-08 15:57:01.088</msg>
<status status="PASS" starttime="20250108 15:57:01.088" endtime="20250108 15:57:01.088"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20250108 15:57:01.091" level="INFO">${beforeCreate} = 2025-01-07 15:57:01.088</msg>
<status status="PASS" starttime="20250108 15:57:01.088" endtime="20250108 15:57:01.091"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250108 15:57:01.091" level="INFO">${tomorrow} = 2025-01-09 15:57:01.088</msg>
<status status="PASS" starttime="20250108 15:57:01.091" endtime="20250108 15:57:01.091"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/10mb</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:01.095" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-1318928156/copyrange/source --body /tmp/10mb 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:01.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:01.991" level="INFO">${output} = {
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\""
}</msg>
<status status="PASS" starttime="20250108 15:57:01.092" endtime="20250108 15:57:01.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:01.992" level="INFO">{
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\""
}</msg>
<status status="PASS" starttime="20250108 15:57:01.991" endtime="20250108 15:57:01.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:01.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:01.992" endtime="20250108 15:57:01.993"/>
</kw>
<status status="PASS" starttime="20250108 15:57:01.092" endtime="20250108 15:57:01.993"/>
</kw>
<msg timestamp="20250108 15:57:01.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:01.092" endtime="20250108 15:57:01.993"/>
</kw>
<msg timestamp="20250108 15:57:01.993" level="INFO">${output} = {
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\""
}</msg>
<status status="PASS" starttime="20250108 15:57:01.092" endtime="20250108 15:57:01.993"/>
</kw>
<msg timestamp="20250108 15:57:01.993" level="INFO">${result} = {
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\""
}</msg>
<status status="PASS" starttime="20250108 15:57:01.091" endtime="20250108 15:57:01.993"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:02.000" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-1318928156/copyrange/destination  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:02.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:02.523" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1318928156/copyrange/destination",
    "UploadId": "bc0a324f-1329-4120-819e-52a749792841-113793553036738627"
}</msg>
<status status="PASS" starttime="20250108 15:57:01.996" endtime="20250108 15:57:02.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:02.524" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-1318928156/copyrange/destination",
    "UploadId": "bc0a324f-1329-4120-819e-52a749792841-113793553036738627"
}</msg>
<status status="PASS" starttime="20250108 15:57:02.524" endtime="20250108 15:57:02.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:02.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:02.524" endtime="20250108 15:57:02.525"/>
</kw>
<msg timestamp="20250108 15:57:02.525" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1318928156/copyrange/destination",
    "UploadId": "bc0a324f-1329-4120-819e-52a749792841-113793553036738627"
}</msg>
<status status="PASS" starttime="20250108 15:57:01.995" endtime="20250108 15:57:02.525"/>
</kw>
<msg timestamp="20250108 15:57:02.525" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1318928156/copyrange/destination",
    "UploadId": "bc0a324f-1329-4120-819e-52a749792841-113793553036738627"
}</msg>
<status status="PASS" starttime="20250108 15:57:01.995" endtime="20250108 15:57:02.525"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:02.525" endtime="20250108 15:57:02.526"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:02.526" endtime="20250108 15:57:02.526"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:02.529" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-1318928156/copyrange/destination",
    "UploadId": "bc0a324f-1329-4120-819e-52a749792841-113793553036738627"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:02.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:02.534" level="INFO">${output} = bc0a324f-1329-4120-819e-52a749792841-113793553036738627</msg>
<status status="PASS" starttime="20250108 15:57:02.527" endtime="20250108 15:57:02.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:02.535" level="INFO">bc0a324f-1329-4120-819e-52a749792841-113793553036738627</msg>
<status status="PASS" starttime="20250108 15:57:02.534" endtime="20250108 15:57:02.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:02.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:02.535" endtime="20250108 15:57:02.535"/>
</kw>
<msg timestamp="20250108 15:57:02.536" level="INFO">${upload_id} = bc0a324f-1329-4120-819e-52a749792841-113793553036738627</msg>
<status status="PASS" starttime="20250108 15:57:02.526" endtime="20250108 15:57:02.536"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:57:02.536" endtime="20250108 15:57:02.536"/>
</return>
<status status="PASS" starttime="20250108 15:57:02.525" endtime="20250108 15:57:02.536"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:57:02.536" endtime="20250108 15:57:02.536"/>
</return>
<status status="NOT RUN" starttime="20250108 15:57:02.536" endtime="20250108 15:57:02.536"/>
</branch>
<status status="PASS" starttime="20250108 15:57:02.525" endtime="20250108 15:57:02.536"/>
</if>
<msg timestamp="20250108 15:57:02.536" level="INFO">${uploadID} = bc0a324f-1329-4120-819e-52a749792841-113793553036738627</msg>
<status status="PASS" starttime="20250108 15:57:01.994" endtime="20250108 15:57:02.536"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:02.540" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-1318928156/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:03.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:03.036" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:01 GMT",
    "ContentLength": 10485760,
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250108 15:57:02.538" endtime="20250108 15:57:03.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:03.037" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:57:01 GMT",
    "ContentLength": 10485760,
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:02 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:02 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:03.036" endtime="20250108 15:57:03.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:03.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:03.037" endtime="20250108 15:57:03.038"/>
</kw>
<status status="PASS" starttime="20250108 15:57:02.537" endtime="20250108 15:57:03.038"/>
</kw>
<msg timestamp="20250108 15:57:03.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:02.537" endtime="20250108 15:57:03.038"/>
</kw>
<msg timestamp="20250108 15:57:03.038" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:01 GMT",
    "ContentLength": 10485760,
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250108 15:57:02.537" endtime="20250108 15:57:03.038"/>
</kw>
<msg timestamp="20250108 15:57:03.038" level="INFO">${result} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:01 GMT",
    "ContentLength": 10485760,
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20250108 15:57:02.536" endtime="20250108 15:57:03.038"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:03.041" level="INFO">Running command 'echo '{
    "LastModified": "Wed, 08 Jan 2025 15:57:01 GMT",
    "ContentLength": 10485760,
    "ETag": "\"08c3ab7c5f6889fc6cf51bd3090d02be\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:02 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:02 GMT"
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:03.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:03.046" level="INFO">${output} = Wed, 08 Jan 2025 15:57:01 GMT</msg>
<status status="PASS" starttime="20250108 15:57:03.039" endtime="20250108 15:57:03.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:03.047" level="INFO">Wed, 08 Jan 2025 15:57:01 GMT</msg>
<status status="PASS" starttime="20250108 15:57:03.046" endtime="20250108 15:57:03.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:03.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:03.047" endtime="20250108 15:57:03.047"/>
</kw>
<msg timestamp="20250108 15:57:03.047" level="INFO">${lastModified} = Wed, 08 Jan 2025 15:57:01 GMT</msg>
<status status="PASS" starttime="20250108 15:57:03.038" endtime="20250108 15:57:03.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:03.047" endtime="20250108 15:57:03.048"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20250108 15:57:03.049" level="INFO">${lmDate} = 2025-01-08 15:57:01.000</msg>
<status status="PASS" starttime="20250108 15:57:03.048" endtime="20250108 15:57:03.049"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20250108 15:57:03.050" level="INFO">${afterCreate} = 2025-01-08 15:57:04.000</msg>
<status status="PASS" starttime="20250108 15:57:03.050" endtime="20250108 15:57:03.050"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250108 15:57:03.051" level="INFO">${latestDate} = 2025-01-08 15:57:03.051</msg>
<status status="PASS" starttime="20250108 15:57:03.050" endtime="20250108 15:57:03.051"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20250108 15:57:03.051" level="INFO">${sleepSeconds} = 0.949</msg>
<status status="PASS" starttime="20250108 15:57:03.051" endtime="20250108 15:57:03.051"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250108 15:57:04.001" level="INFO">Slept 949 milliseconds</msg>
<status status="PASS" starttime="20250108 15:57:03.052" endtime="20250108 15:57:04.001"/>
</kw>
<status status="PASS" starttime="20250108 15:57:03.051" endtime="20250108 15:57:04.001"/>
</kw>
<status status="PASS" starttime="20250108 15:57:03.050" endtime="20250108 15:57:04.001"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:04.005" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-1318928156/copyrange/destination --upload-id bc0a324f-1329-4120-819e-52a749792841-113793553036738627 --part-number 1 --copy-source encrypted/ozone-test-1318928156/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-01-08 15:57:04.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:04.521" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:04.521" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250108 15:57:04.003" endtime="20250108 15:57:04.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:04.522" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250108 15:57:04.522" endtime="20250108 15:57:04.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:04.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:04.522" endtime="20250108 15:57:04.523"/>
</kw>
<msg timestamp="20250108 15:57:04.523" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250108 15:57:04.002" endtime="20250108 15:57:04.523"/>
</kw>
<msg timestamp="20250108 15:57:04.523" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250108 15:57:04.001" endtime="20250108 15:57:04.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:04.523" endtime="20250108 15:57:04.524"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:04.527" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-1318928156/copyrange/destination --upload-id bc0a324f-1329-4120-819e-52a749792841-113793553036738627 --part-number 2 --copy-source encrypted/ozone-test-1318928156/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2025-01-07 15:57:01.088' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:05.049" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:05.049" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250108 15:57:04.525" endtime="20250108 15:57:05.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:05.050" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250108 15:57:05.049" endtime="20250108 15:57:05.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:05.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:05.050" endtime="20250108 15:57:05.050"/>
</kw>
<msg timestamp="20250108 15:57:05.050" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250108 15:57:04.524" endtime="20250108 15:57:05.051"/>
</kw>
<msg timestamp="20250108 15:57:05.051" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20250108 15:57:04.524" endtime="20250108 15:57:05.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:05.051" endtime="20250108 15:57:05.051"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:05.055" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-1318928156/copyrange/destination --upload-id bc0a324f-1329-4120-819e-52a749792841-113793553036738627 --part-number 1 --copy-source encrypted/ozone-test-1318928156/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-01-07 15:57:01.088' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:06.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:06.543" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:06.476Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:05.052" endtime="20250108 15:57:06.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:06.544" level="INFO">{
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:06.476Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:06.543" endtime="20250108 15:57:06.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:06.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:06.544" endtime="20250108 15:57:06.545"/>
</kw>
<msg timestamp="20250108 15:57:06.545" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:06.476Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:05.052" endtime="20250108 15:57:06.545"/>
</kw>
<msg timestamp="20250108 15:57:06.545" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:06.476Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:05.051" endtime="20250108 15:57:06.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:06.545" endtime="20250108 15:57:06.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:06.545" endtime="20250108 15:57:06.546"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:06.548" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:06.476Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:06.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:06.553" level="INFO">${output} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:06.546" endtime="20250108 15:57:06.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:06.554" level="INFO">08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:06.553" endtime="20250108 15:57:06.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:06.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:06.554" endtime="20250108 15:57:06.554"/>
</kw>
<msg timestamp="20250108 15:57:06.555" level="INFO">${eTag1} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:06.546" endtime="20250108 15:57:06.555"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:06.558" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-1318928156/copyrange/destination --upload-id bc0a324f-1329-4120-819e-52a749792841-113793553036738627 --part-number 2 --copy-source encrypted/ozone-test-1318928156/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2025-01-08 15:57:04.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:07.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:07.153" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:07.081Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:06.556" endtime="20250108 15:57:07.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:07.154" level="INFO">{
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:07.081Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:07.153" endtime="20250108 15:57:07.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:07.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:07.154" endtime="20250108 15:57:07.154"/>
</kw>
<msg timestamp="20250108 15:57:07.155" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:07.081Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:06.555" endtime="20250108 15:57:07.155"/>
</kw>
<msg timestamp="20250108 15:57:07.155" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:07.081Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:06.555" endtime="20250108 15:57:07.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:07.155" endtime="20250108 15:57:07.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:07.155" endtime="20250108 15:57:07.155"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:07.158" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:07.081Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:07.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:07.163" level="INFO">${output} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:07.156" endtime="20250108 15:57:07.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:07.164" level="INFO">08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:07.164" endtime="20250108 15:57:07.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:07.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:07.164" endtime="20250108 15:57:07.165"/>
</kw>
<msg timestamp="20250108 15:57:07.165" level="INFO">${eTag2} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:07.156" endtime="20250108 15:57:07.165"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:07.169" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-1318928156/copyrange/destination --upload-id bc0a324f-1329-4120-819e-52a749792841-113793553036738627 --part-number 1 --copy-source encrypted/ozone-test-1318928156/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2025-01-09 15:57:01.088' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:08.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:08.738" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:08.664Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:07.166" endtime="20250108 15:57:08.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:08.739" level="INFO">{
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:08.664Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:08.738" endtime="20250108 15:57:08.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:08.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:08.739" endtime="20250108 15:57:08.740"/>
</kw>
<msg timestamp="20250108 15:57:08.740" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:08.664Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:07.166" endtime="20250108 15:57:08.740"/>
</kw>
<msg timestamp="20250108 15:57:08.740" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:08.664Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:07.165" endtime="20250108 15:57:08.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:08.740" endtime="20250108 15:57:08.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:08.741" endtime="20250108 15:57:08.741"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:08.744" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "08c3ab7c5f6889fc6cf51bd3090d02be",
        "LastModified": "2025-01-08T15:57:08.664Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:08.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:08.750" level="INFO">${output} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:08.741" endtime="20250108 15:57:08.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:08.751" level="INFO">08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:08.750" endtime="20250108 15:57:08.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:08.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:08.751" endtime="20250108 15:57:08.751"/>
</kw>
<msg timestamp="20250108 15:57:08.752" level="INFO">${eTag1} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:08.741" endtime="20250108 15:57:08.752"/>
</kw>
<kw name="Complete MPU" library="mpu_lib">
<arg>${BUCKET}</arg>
<arg>${PREFIX}/copyrange/destination</arg>
<arg>${uploadID}</arg>
<arg>{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:08.756" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key ozone-test-1318928156/copyrange/destination --upload-id bc0a324f-1329-4120-819e-52a749792841-113793553036738627 --multipart-upload 'Parts=[{ETag=08c3ab7c5f6889fc6cf51bd3090d02be,PartNumber=1},{ETag=08c3ab7c5f6889fc6cf51bd3090d02be,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:09.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:09.293" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-1318928156/copyrange/destination",
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\""
}</msg>
<status status="PASS" starttime="20250108 15:57:08.754" endtime="20250108 15:57:09.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:09.294" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-1318928156/copyrange/destination",
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\""
}</msg>
<status status="PASS" starttime="20250108 15:57:09.294" endtime="20250108 15:57:09.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:09.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:09.294" endtime="20250108 15:57:09.295"/>
</kw>
<msg timestamp="20250108 15:57:09.295" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-1318928156/copyrange/destination",
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\""
}</msg>
<status status="PASS" starttime="20250108 15:57:08.753" endtime="20250108 15:57:09.295"/>
</kw>
<msg timestamp="20250108 15:57:09.295" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-1318928156/copyrange/destination",
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\""
}</msg>
<status status="PASS" starttime="20250108 15:57:08.752" endtime="20250108 15:57:09.295"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:09.295" endtime="20250108 15:57:09.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:09.296" endtime="20250108 15:57:09.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:09.296" endtime="20250108 15:57:09.296"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:09.300" level="INFO">Running command 'echo '{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-1318928156/copyrange/destination",
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:09.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:09.304" level="INFO">${output} = "d06934f5bde68605c86bd389b8ec2bd1-2"</msg>
<status status="PASS" starttime="20250108 15:57:09.297" endtime="20250108 15:57:09.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:09.305" level="INFO">"d06934f5bde68605c86bd389b8ec2bd1-2"</msg>
<status status="PASS" starttime="20250108 15:57:09.305" endtime="20250108 15:57:09.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:09.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:09.305" endtime="20250108 15:57:09.306"/>
</kw>
<status status="PASS" starttime="20250108 15:57:09.297" endtime="20250108 15:57:09.306"/>
</kw>
<msg timestamp="20250108 15:57:09.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:09.297" endtime="20250108 15:57:09.306"/>
</kw>
<msg timestamp="20250108 15:57:09.306" level="INFO">${etag} = "d06934f5bde68605c86bd389b8ec2bd1-2"</msg>
<status status="PASS" starttime="20250108 15:57:09.296" endtime="20250108 15:57:09.306"/>
</kw>
<return>
<value>${etag}</value>
<status status="PASS" starttime="20250108 15:57:09.306" endtime="20250108 15:57:09.306"/>
</return>
<status status="PASS" starttime="20250108 15:57:09.295" endtime="20250108 15:57:09.306"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:57:09.306" endtime="20250108 15:57:09.306"/>
</return>
<status status="NOT RUN" starttime="20250108 15:57:09.306" endtime="20250108 15:57:09.307"/>
</branch>
<status status="PASS" starttime="20250108 15:57:09.295" endtime="20250108 15:57:09.307"/>
</if>
<status status="PASS" starttime="20250108 15:57:08.752" endtime="20250108 15:57:09.307"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:09.310" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-1318928156/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:10.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:10.717" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:09 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250108 15:57:09.308" endtime="20250108 15:57:10.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:10.718" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:09 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:09 GMT",
    "Metadata": {},
    "PartsCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:57:09 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:10.717" endtime="20250108 15:57:10.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:10.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:10.718" endtime="20250108 15:57:10.718"/>
</kw>
<status status="PASS" starttime="20250108 15:57:09.308" endtime="20250108 15:57:10.718"/>
</kw>
<msg timestamp="20250108 15:57:10.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:09.307" endtime="20250108 15:57:10.719"/>
</kw>
<msg timestamp="20250108 15:57:10.719" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:09 GMT",
    "ContentLength": 10485760,
    "ETag": "\"d06934f5bde68605c86bd389b8ec2bd1-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20250108 15:57:09.307" endtime="20250108 15:57:10.719"/>
</kw>
<status status="PASS" starttime="20250108 15:57:09.307" endtime="20250108 15:57:10.719"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/10mb</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:10.722" level="INFO">Running command 'md5sum /tmp/10mb | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:10.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:10.745" level="INFO">${output} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:10.720" endtime="20250108 15:57:10.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:10.746" level="INFO">08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:10.745" endtime="20250108 15:57:10.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:10.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:10.746" endtime="20250108 15:57:10.747"/>
</kw>
<status status="PASS" starttime="20250108 15:57:10.720" endtime="20250108 15:57:10.747"/>
</kw>
<msg timestamp="20250108 15:57:10.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:10.720" endtime="20250108 15:57:10.747"/>
</kw>
<msg timestamp="20250108 15:57:10.747" level="INFO">${checksumbefore} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:10.719" endtime="20250108 15:57:10.747"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:10.750" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:10.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:10.773" level="INFO">${output} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:10.748" endtime="20250108 15:57:10.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:10.774" level="INFO">08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:10.773" endtime="20250108 15:57:10.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:10.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:10.774" endtime="20250108 15:57:10.774"/>
</kw>
<status status="PASS" starttime="20250108 15:57:10.748" endtime="20250108 15:57:10.774"/>
</kw>
<msg timestamp="20250108 15:57:10.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:10.748" endtime="20250108 15:57:10.775"/>
</kw>
<msg timestamp="20250108 15:57:10.775" level="INFO">${checksumafter} = 08c3ab7c5f6889fc6cf51bd3090d02be</msg>
<status status="PASS" starttime="20250108 15:57:10.747" endtime="20250108 15:57:10.775"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:10.775" endtime="20250108 15:57:10.775"/>
</kw>
<status status="PASS" starttime="20250108 15:57:10.719" endtime="20250108 15:57:10.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:01.086" endtime="20250108 15:57:10.775"/>
</test>
<test id="s1-s3-s8-t15" name="Test Multipart Upload list" line="314">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:57:10.777" level="INFO">${randStr} = 8661439290</msg>
<status status="PASS" starttime="20250108 15:57:10.777" endtime="20250108 15:57:10.777"/>
</kw>
<msg timestamp="20250108 15:57:10.777" level="INFO">${random} = ozone-test-8661439290</msg>
<status status="PASS" starttime="20250108 15:57:10.777" endtime="20250108 15:57:10.777"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250108 15:57:10.778" level="INFO">${PREFIX} = ozone-test-8661439290</msg>
<status status="PASS" starttime="20250108 15:57:10.778" endtime="20250108 15:57:10.778"/>
</kw>
<status status="PASS" starttime="20250108 15:57:10.776" endtime="20250108 15:57:10.778"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID1}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:10.782" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-8661439290/listtest/key1  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:11.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:11.315" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8661439290/listtest/key1",
    "UploadId": "06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783"
}</msg>
<status status="PASS" starttime="20250108 15:57:10.780" endtime="20250108 15:57:11.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:11.316" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-8661439290/listtest/key1",
    "UploadId": "06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783"
}</msg>
<status status="PASS" starttime="20250108 15:57:11.315" endtime="20250108 15:57:11.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:11.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:11.316" endtime="20250108 15:57:11.316"/>
</kw>
<msg timestamp="20250108 15:57:11.317" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8661439290/listtest/key1",
    "UploadId": "06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783"
}</msg>
<status status="PASS" starttime="20250108 15:57:10.779" endtime="20250108 15:57:11.317"/>
</kw>
<msg timestamp="20250108 15:57:11.317" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8661439290/listtest/key1",
    "UploadId": "06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783"
}</msg>
<status status="PASS" starttime="20250108 15:57:10.779" endtime="20250108 15:57:11.317"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:11.317" endtime="20250108 15:57:11.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:11.318" endtime="20250108 15:57:11.318"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:11.321" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-8661439290/listtest/key1",
    "UploadId": "06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:11.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:11.326" level="INFO">${output} = 06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783</msg>
<status status="PASS" starttime="20250108 15:57:11.318" endtime="20250108 15:57:11.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:11.327" level="INFO">06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783</msg>
<status status="PASS" starttime="20250108 15:57:11.327" endtime="20250108 15:57:11.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:11.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:11.327" endtime="20250108 15:57:11.328"/>
</kw>
<msg timestamp="20250108 15:57:11.328" level="INFO">${upload_id} = 06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783</msg>
<status status="PASS" starttime="20250108 15:57:11.318" endtime="20250108 15:57:11.328"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:57:11.328" endtime="20250108 15:57:11.328"/>
</return>
<status status="PASS" starttime="20250108 15:57:11.317" endtime="20250108 15:57:11.328"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:57:11.329" endtime="20250108 15:57:11.329"/>
</return>
<status status="NOT RUN" starttime="20250108 15:57:11.329" endtime="20250108 15:57:11.329"/>
</branch>
<status status="PASS" starttime="20250108 15:57:11.317" endtime="20250108 15:57:11.329"/>
</if>
<msg timestamp="20250108 15:57:11.329" level="INFO">${uploadID1} = 06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783</msg>
<status status="PASS" starttime="20250108 15:57:10.778" endtime="20250108 15:57:11.329"/>
</kw>
<kw name="Initiate MPU" library="mpu_lib">
<var>${uploadID2}</var>
<arg>${BUCKET}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key} ${opts}</arg>
<arg>${expected_rc}</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:11.334" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-8661439290/listtest/key2  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:11.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:11.841" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8661439290/listtest/key2",
    "UploadId": "83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080"
}</msg>
<status status="PASS" starttime="20250108 15:57:11.332" endtime="20250108 15:57:11.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:11.842" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-8661439290/listtest/key2",
    "UploadId": "83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080"
}</msg>
<status status="PASS" starttime="20250108 15:57:11.842" endtime="20250108 15:57:11.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:11.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:11.842" endtime="20250108 15:57:11.843"/>
</kw>
<msg timestamp="20250108 15:57:11.843" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8661439290/listtest/key2",
    "UploadId": "83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080"
}</msg>
<status status="PASS" starttime="20250108 15:57:11.331" endtime="20250108 15:57:11.843"/>
</kw>
<msg timestamp="20250108 15:57:11.843" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8661439290/listtest/key2",
    "UploadId": "83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080"
}</msg>
<status status="PASS" starttime="20250108 15:57:11.330" endtime="20250108 15:57:11.843"/>
</kw>
<if>
<branch type="IF" condition="'${expected_rc}' == '0'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:11.843" endtime="20250108 15:57:11.844"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${key}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:11.844" endtime="20250108 15:57:11.844"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:11.847" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-8661439290/listtest/key2",
    "UploadId": "83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:11.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:11.852" level="INFO">${output} = 83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080</msg>
<status status="PASS" starttime="20250108 15:57:11.845" endtime="20250108 15:57:11.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:11.852" level="INFO">83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080</msg>
<status status="PASS" starttime="20250108 15:57:11.852" endtime="20250108 15:57:11.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:11.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:11.853" endtime="20250108 15:57:11.853"/>
</kw>
<msg timestamp="20250108 15:57:11.853" level="INFO">${upload_id} = 83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080</msg>
<status status="PASS" starttime="20250108 15:57:11.844" endtime="20250108 15:57:11.853"/>
</kw>
<return>
<value>${upload_id}</value>
<status status="PASS" starttime="20250108 15:57:11.853" endtime="20250108 15:57:11.853"/>
</return>
<status status="PASS" starttime="20250108 15:57:11.843" endtime="20250108 15:57:11.853"/>
</branch>
<branch type="ELSE">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20250108 15:57:11.853" endtime="20250108 15:57:11.853"/>
</return>
<status status="NOT RUN" starttime="20250108 15:57:11.853" endtime="20250108 15:57:11.853"/>
</branch>
<status status="PASS" starttime="20250108 15:57:11.843" endtime="20250108 15:57:11.853"/>
</if>
<msg timestamp="20250108 15:57:11.854" level="INFO">${uploadID2} = 83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080</msg>
<status status="PASS" starttime="20250108 15:57:11.329" endtime="20250108 15:57:11.854"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:11.857" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket encrypted --prefix ozone-test-8661439290/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:12.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:12.362" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783",
            "Key": "ozone-test-8661439290/listtest/key1",
            "Initiated": "2025...</msg>
<status status="PASS" starttime="20250108 15:57:11.855" endtime="20250108 15:57:12.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:12.363" level="INFO">{
    "Uploads": [
        {
            "UploadId": "06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783",
            "Key": "ozone-test-8661439290/listtest/key1",
            "Initiated": "2025-01-08T15:57:11.242Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080",
            "Key": "ozone-test-8661439290/listtest/key2",
            "Initiated": "2025-01-08T15:57:11.778Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}</msg>
<status status="PASS" starttime="20250108 15:57:12.363" endtime="20250108 15:57:12.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:12.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:12.363" endtime="20250108 15:57:12.364"/>
</kw>
<status status="PASS" starttime="20250108 15:57:11.855" endtime="20250108 15:57:12.364"/>
</kw>
<msg timestamp="20250108 15:57:12.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:11.854" endtime="20250108 15:57:12.364"/>
</kw>
<msg timestamp="20250108 15:57:12.364" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783",
            "Key": "ozone-test-8661439290/listtest/key1",
            "Initiated": "2025...</msg>
<status status="PASS" starttime="20250108 15:57:11.854" endtime="20250108 15:57:12.364"/>
</kw>
<msg timestamp="20250108 15:57:12.364" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783",
            "Key": "ozone-test-8661439290/listtest/key1",
            "Initiated": "2025...</msg>
<status status="PASS" starttime="20250108 15:57:11.854" endtime="20250108 15:57:12.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:12.364" endtime="20250108 15:57:12.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:12.365" endtime="20250108 15:57:12.365"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:12.368" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "06f3678a-2adb-42f0-a9d8-e74bf61fa269-113793553612275783",
            "Key": "ozone-test-8661439290/listtest/key1",
            "Initiated": "2025-01-08T15:57:11.242Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "83c6278d-a3ac-48d5-b51a-97b87219b389-113793553647403080",
            "Key": "ozone-test-8661439290/listtest/key2",
            "Initiated": "2025-01-08T15:57:11.778Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": null
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:12.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:12.373" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250108 15:57:12.366" endtime="20250108 15:57:12.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:12.373" level="INFO">2</msg>
<status status="PASS" starttime="20250108 15:57:12.373" endtime="20250108 15:57:12.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:12.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:12.374" endtime="20250108 15:57:12.374"/>
</kw>
<msg timestamp="20250108 15:57:12.374" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20250108 15:57:12.365" endtime="20250108 15:57:12.374"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:12.374" endtime="20250108 15:57:12.374"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:10.776" endtime="20250108 15:57:12.375"/>
</test>
<kw name="Teardown Multipart Tests" type="TEARDOWN">
<kw name="Remove Files" library="OperatingSystem">
<arg>/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb</arg>
<doc>Uses `Remove File` to remove multiple files one-by-one.</doc>
<msg timestamp="20250108 15:57:12.376" level="INFO" html="true">File '&lt;a href="file:///tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb"&gt;/tmp/part1 /tmp/part2 /tmp/10mb /tmp/22mb /tmp/10kb&lt;/a&gt;' does not exist.</msg>
<status status="PASS" starttime="20250108 15:57:12.376" endtime="20250108 15:57:12.376"/>
</kw>
<status status="PASS" starttime="20250108 15:57:12.376" endtime="20250108 15:57:12.376"/>
</kw>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:56:08.928" endtime="20250108 15:57:12.376"/>
</suite>
<suite id="s1-s3-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:57:12.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:12.387" endtime="20250108 15:57:12.387"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:12.387" endtime="20250108 15:57:12.387"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:12.387" endtime="20250108 15:57:12.387"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:12.387" endtime="20250108 15:57:12.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:12.388" endtime="20250108 15:57:12.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:12.388" endtime="20250108 15:57:12.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:12.388" endtime="20250108 15:57:12.388"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:12.388" endtime="20250108 15:57:12.388"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:57:12.388" endtime="20250108 15:57:12.388"/>
</kw>
<status status="PASS" starttime="20250108 15:57:12.387" endtime="20250108 15:57:12.388"/>
</kw>
<test id="s1-s3-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:57:12.389" level="INFO">${postfix} = 27910</msg>
<status status="PASS" starttime="20250108 15:57:12.389" endtime="20250108 15:57:12.389"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:57:12.390" level="INFO">${DESTBUCKET} = destbucket-27910</msg>
<status status="PASS" starttime="20250108 15:57:12.390" endtime="20250108 15:57:12.390"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:12.393" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-27910 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:12.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:12.873" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-27910"
}</msg>
<status status="PASS" starttime="20250108 15:57:12.391" endtime="20250108 15:57:12.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:12.874" level="INFO">{
    "Location": "http://s3g:9878/destbucket-27910"
}</msg>
<status status="PASS" starttime="20250108 15:57:12.873" endtime="20250108 15:57:12.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:12.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:12.874" endtime="20250108 15:57:12.874"/>
</kw>
<status status="PASS" starttime="20250108 15:57:12.391" endtime="20250108 15:57:12.875"/>
</kw>
<msg timestamp="20250108 15:57:12.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:12.390" endtime="20250108 15:57:12.875"/>
</kw>
<msg timestamp="20250108 15:57:12.875" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-27910"
}</msg>
<status status="PASS" starttime="20250108 15:57:12.390" endtime="20250108 15:57:12.875"/>
</kw>
<status status="PASS" starttime="20250108 15:57:12.390" endtime="20250108 15:57:12.875"/>
</kw>
<status status="PASS" starttime="20250108 15:57:12.389" endtime="20250108 15:57:12.875"/>
</kw>
<status status="PASS" starttime="20250108 15:57:12.389" endtime="20250108 15:57:12.875"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:12.878" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20250108 15:57:12.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:12.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:12.876" endtime="20250108 15:57:12.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:12.882" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:12.882" endtime="20250108 15:57:12.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:12.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:12.882" endtime="20250108 15:57:12.883"/>
</kw>
<status status="PASS" starttime="20250108 15:57:12.876" endtime="20250108 15:57:12.883"/>
</kw>
<msg timestamp="20250108 15:57:12.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:12.875" endtime="20250108 15:57:12.883"/>
</kw>
<status status="PASS" starttime="20250108 15:57:12.875" endtime="20250108 15:57:12.883"/>
</kw>
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:12.886" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:12.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:12.890" level="INFO">${output} = bd261a2974682690abbdea6897e606b8</msg>
<status status="PASS" starttime="20250108 15:57:12.884" endtime="20250108 15:57:12.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:12.891" level="INFO">bd261a2974682690abbdea6897e606b8</msg>
<status status="PASS" starttime="20250108 15:57:12.891" endtime="20250108 15:57:12.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:12.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:12.891" endtime="20250108 15:57:12.892"/>
</kw>
<status status="PASS" starttime="20250108 15:57:12.884" endtime="20250108 15:57:12.892"/>
</kw>
<msg timestamp="20250108 15:57:12.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:12.883" endtime="20250108 15:57:12.892"/>
</kw>
<msg timestamp="20250108 15:57:12.892" level="INFO">${file_checksum} = bd261a2974682690abbdea6897e606b8</msg>
<status status="PASS" starttime="20250108 15:57:12.883" endtime="20250108 15:57:12.892"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:12.895" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/copyobject/key=value/f1 --body /tmp/copyfile --metadata="custom-key1=custom-value1,custom-key2=custom-value2,gdprEnabled=true" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:13.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:13.443" level="INFO">${output} = {
    "ETag": "\"bd261a2974682690abbdea6897e606b8\""
}</msg>
<status status="PASS" starttime="20250108 15:57:12.894" endtime="20250108 15:57:13.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:13.444" level="INFO">{
    "ETag": "\"bd261a2974682690abbdea6897e606b8\""
}</msg>
<status status="PASS" starttime="20250108 15:57:13.444" endtime="20250108 15:57:13.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:13.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:13.445" endtime="20250108 15:57:13.445"/>
</kw>
<status status="PASS" starttime="20250108 15:57:12.893" endtime="20250108 15:57:13.445"/>
</kw>
<msg timestamp="20250108 15:57:13.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:12.893" endtime="20250108 15:57:13.445"/>
</kw>
<msg timestamp="20250108 15:57:13.445" level="INFO">${output} = {
    "ETag": "\"bd261a2974682690abbdea6897e606b8\""
}</msg>
<status status="PASS" starttime="20250108 15:57:12.893" endtime="20250108 15:57:13.445"/>
</kw>
<msg timestamp="20250108 15:57:13.445" level="INFO">${result} = {
    "ETag": "\"bd261a2974682690abbdea6897e606b8\""
}</msg>
<status status="PASS" starttime="20250108 15:57:12.892" endtime="20250108 15:57:13.445"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:13.448" level="INFO">Running command 'echo '{
    "ETag": "\"bd261a2974682690abbdea6897e606b8\""
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:13.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:13.453" level="INFO">${output} = "bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:13.446" endtime="20250108 15:57:13.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:13.454" level="INFO">"bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:13.453" endtime="20250108 15:57:13.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:13.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:13.454" endtime="20250108 15:57:13.454"/>
</kw>
<msg timestamp="20250108 15:57:13.455" level="INFO">${eTag} = "bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:13.446" endtime="20250108 15:57:13.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:13.455" endtime="20250108 15:57:13.455"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:13.459" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:13.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:13.961" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:13.380Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250108 15:57:13.456" endtime="20250108 15:57:13.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:13.962" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:13.380Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:13.961" endtime="20250108 15:57:13.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:13.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:13.962" endtime="20250108 15:57:13.962"/>
</kw>
<status status="PASS" starttime="20250108 15:57:13.456" endtime="20250108 15:57:13.962"/>
</kw>
<msg timestamp="20250108 15:57:13.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:13.456" endtime="20250108 15:57:13.963"/>
</kw>
<msg timestamp="20250108 15:57:13.963" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:13.380Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250108 15:57:13.456" endtime="20250108 15:57:13.963"/>
</kw>
<msg timestamp="20250108 15:57:13.963" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:13.380Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250108 15:57:13.455" endtime="20250108 15:57:13.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:13.963" endtime="20250108 15:57:13.963"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:13.967" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 --copy-source encrypted/ozone-test-8661439290/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --tagging="tag-key3=tag-value3" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:14.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:14.526" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:14.459Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:13.965" endtime="20250108 15:57:14.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:14.527" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:14.459Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:14.527" endtime="20250108 15:57:14.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:14.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:14.527" endtime="20250108 15:57:14.528"/>
</kw>
<status status="PASS" starttime="20250108 15:57:13.964" endtime="20250108 15:57:14.528"/>
</kw>
<msg timestamp="20250108 15:57:14.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:13.964" endtime="20250108 15:57:14.528"/>
</kw>
<msg timestamp="20250108 15:57:14.528" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:14.459Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:13.964" endtime="20250108 15:57:14.528"/>
</kw>
<msg timestamp="20250108 15:57:14.528" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:14.459Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:13.963" endtime="20250108 15:57:14.528"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:14.531" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:14.459Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:14.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:14.536" level="INFO">${output} = "bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:14.529" endtime="20250108 15:57:14.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:14.537" level="INFO">"bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:14.536" endtime="20250108 15:57:14.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:14.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:14.537" endtime="20250108 15:57:14.537"/>
</kw>
<msg timestamp="20250108 15:57:14.537" level="INFO">${eTag} = "bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:14.529" endtime="20250108 15:57:14.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:14.537" endtime="20250108 15:57:14.538"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:14.541" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-27910 --prefix ozone-test-8661439290/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:15.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:15.043" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:14.459Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250108 15:57:14.539" endtime="20250108 15:57:15.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:15.044" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:14.459Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:15.044" endtime="20250108 15:57:15.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:15.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:15.045" endtime="20250108 15:57:15.045"/>
</kw>
<status status="PASS" starttime="20250108 15:57:14.539" endtime="20250108 15:57:15.045"/>
</kw>
<msg timestamp="20250108 15:57:15.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:14.538" endtime="20250108 15:57:15.045"/>
</kw>
<msg timestamp="20250108 15:57:15.045" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:14.459Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250108 15:57:14.538" endtime="20250108 15:57:15.045"/>
</kw>
<msg timestamp="20250108 15:57:15.045" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:14.459Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250108 15:57:14.538" endtime="20250108 15:57:15.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:15.046" endtime="20250108 15:57:15.046"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:15.049" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:15.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:15.535" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:14 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:15.047" endtime="20250108 15:57:15.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:15.536" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:57:14 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:15 GMT",
    "Metadata": {
        "gdprenabled": "true",
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Wed, 08 Jan 2025 15:57:15 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:15.535" endtime="20250108 15:57:15.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:15.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:15.536" endtime="20250108 15:57:15.536"/>
</kw>
<status status="PASS" starttime="20250108 15:57:15.047" endtime="20250108 15:57:15.536"/>
</kw>
<msg timestamp="20250108 15:57:15.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:15.047" endtime="20250108 15:57:15.536"/>
</kw>
<msg timestamp="20250108 15:57:15.537" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:14 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:15.046" endtime="20250108 15:57:15.537"/>
</kw>
<msg timestamp="20250108 15:57:15.537" level="INFO">${result} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:14 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:15.046" endtime="20250108 15:57:15.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:15.537" endtime="20250108 15:57:15.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:15.537" endtime="20250108 15:57:15.537"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:15.538" endtime="20250108 15:57:15.538"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:15.538" endtime="20250108 15:57:15.538"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:15.542" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:16.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:16.037" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:14 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:15.540" endtime="20250108 15:57:16.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:16.038" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:14 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:15 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:57:15 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:16.037" endtime="20250108 15:57:16.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:16.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:16.038" endtime="20250108 15:57:16.038"/>
</kw>
<status status="PASS" starttime="20250108 15:57:15.540" endtime="20250108 15:57:16.038"/>
</kw>
<msg timestamp="20250108 15:57:16.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:15.539" endtime="20250108 15:57:16.038"/>
</kw>
<msg timestamp="20250108 15:57:16.039" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:14 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:15.539" endtime="20250108 15:57:16.039"/>
</kw>
<msg timestamp="20250108 15:57:16.039" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:14 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:15.538" endtime="20250108 15:57:16.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:16.039" endtime="20250108 15:57:16.039"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:16.042" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:14 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:15 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:57:15 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:16.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:16.047" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250108 15:57:16.039" endtime="20250108 15:57:16.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:16.048" level="INFO">2</msg>
<status status="PASS" starttime="20250108 15:57:16.047" endtime="20250108 15:57:16.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:16.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:16.048" endtime="20250108 15:57:16.048"/>
</kw>
<msg timestamp="20250108 15:57:16.048" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250108 15:57:16.039" endtime="20250108 15:57:16.048"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:16.049" endtime="20250108 15:57:16.049"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:16.052" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 --copy-source encrypted/ozone-test-8661439290/copyobject/key=value/f1 --metadata="custom-key3=custom-value3,custom-key4=custom-value4" --metadata-directive REPLACE --tagging="tag-key3=tag-value3" --tagging-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:16.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:16.609" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:16.538Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:16.050" endtime="20250108 15:57:16.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:16.610" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:16.538Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:16.609" endtime="20250108 15:57:16.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:16.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:16.610" endtime="20250108 15:57:16.611"/>
</kw>
<status status="PASS" starttime="20250108 15:57:16.050" endtime="20250108 15:57:16.611"/>
</kw>
<msg timestamp="20250108 15:57:16.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:16.050" endtime="20250108 15:57:16.611"/>
</kw>
<msg timestamp="20250108 15:57:16.611" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:16.538Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:16.049" endtime="20250108 15:57:16.611"/>
</kw>
<msg timestamp="20250108 15:57:16.611" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:16.538Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:16.049" endtime="20250108 15:57:16.611"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:16.614" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:16.538Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:16.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:16.619" level="INFO">${output} = "bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:16.612" endtime="20250108 15:57:16.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:16.620" level="INFO">"bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:16.619" endtime="20250108 15:57:16.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:16.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:16.620" endtime="20250108 15:57:16.620"/>
</kw>
<msg timestamp="20250108 15:57:16.620" level="INFO">${eTag} = "bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:16.611" endtime="20250108 15:57:16.620"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:16.620" endtime="20250108 15:57:16.621"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:16.624" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-27910 --prefix ozone-test-8661439290/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:17.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:17.125" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:16.538Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250108 15:57:16.622" endtime="20250108 15:57:17.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:17.126" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:16.538Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/copyobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:17.125" endtime="20250108 15:57:17.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:17.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:17.126" endtime="20250108 15:57:17.127"/>
</kw>
<status status="PASS" starttime="20250108 15:57:16.622" endtime="20250108 15:57:17.127"/>
</kw>
<msg timestamp="20250108 15:57:17.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:16.622" endtime="20250108 15:57:17.127"/>
</kw>
<msg timestamp="20250108 15:57:17.127" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:16.538Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250108 15:57:16.621" endtime="20250108 15:57:17.127"/>
</kw>
<msg timestamp="20250108 15:57:17.127" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/copyobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:16.538Z",
            "Size": 29,
            "StorageCl...</msg>
<status status="PASS" starttime="20250108 15:57:16.621" endtime="20250108 15:57:17.127"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:17.127" endtime="20250108 15:57:17.128"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:17.131" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:17.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:17.636" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:16 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:17.129" endtime="20250108 15:57:17.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:17.637" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:57:16 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:17 GMT",
    "Metadata": {
        "custom-key3": "custom-value3",
        "custom-key4": "custom-value4"
    },
    "ExpiresString": "Wed, 08 Jan 2025 15:57:17 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:17.637" endtime="20250108 15:57:17.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:17.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:17.637" endtime="20250108 15:57:17.638"/>
</kw>
<status status="PASS" starttime="20250108 15:57:17.128" endtime="20250108 15:57:17.638"/>
</kw>
<msg timestamp="20250108 15:57:17.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:17.128" endtime="20250108 15:57:17.638"/>
</kw>
<msg timestamp="20250108 15:57:17.638" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:16 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:17.128" endtime="20250108 15:57:17.638"/>
</kw>
<msg timestamp="20250108 15:57:17.638" level="INFO">${result} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:16 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:17.128" endtime="20250108 15:57:17.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key3\": \"custom-value3\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:17.639" endtime="20250108 15:57:17.639"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key4\": \"custom-value4\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:17.639" endtime="20250108 15:57:17.639"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:17.639" endtime="20250108 15:57:17.639"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:17.639" endtime="20250108 15:57:17.640"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:17.643" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:18.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:18.153" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:16 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:17.641" endtime="20250108 15:57:18.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:18.153" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:16 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:18 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Wed, 08 Jan 2025 15:57:18 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:18.153" endtime="20250108 15:57:18.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:18.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:18.154" endtime="20250108 15:57:18.154"/>
</kw>
<status status="PASS" starttime="20250108 15:57:17.641" endtime="20250108 15:57:18.154"/>
</kw>
<msg timestamp="20250108 15:57:18.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:17.641" endtime="20250108 15:57:18.154"/>
</kw>
<msg timestamp="20250108 15:57:18.154" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:16 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:17.640" endtime="20250108 15:57:18.155"/>
</kw>
<msg timestamp="20250108 15:57:18.155" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:16 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:17.640" endtime="20250108 15:57:18.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:18.155" endtime="20250108 15:57:18.155"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:18.158" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:16 GMT",
    "ContentLength": 29,
    "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:18 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Wed, 08 Jan 2025 15:57:18 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:18.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:18.163" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250108 15:57:18.156" endtime="20250108 15:57:18.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:18.164" level="INFO">1</msg>
<status status="PASS" starttime="20250108 15:57:18.163" endtime="20250108 15:57:18.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:18.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:18.164" endtime="20250108 15:57:18.164"/>
</kw>
<msg timestamp="20250108 15:57:18.165" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20250108 15:57:18.155" endtime="20250108 15:57:18.165"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:18.165" endtime="20250108 15:57:18.165"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:12.388" endtime="20250108 15:57:18.165"/>
</test>
<test id="s1-s3-s9-t2" name="Copy Object Where Bucket is not available" line="90">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:18.169" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-8661439290/copyobject/key=value/f1 --copy-source encrypted/ozone-test-8661439290/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:18.667" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:18.667" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:18.167" endtime="20250108 15:57:18.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:18.668" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:18.667" endtime="20250108 15:57:18.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:18.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:18.668" endtime="20250108 15:57:18.668"/>
</kw>
<msg timestamp="20250108 15:57:18.669" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:18.167" endtime="20250108 15:57:18.669"/>
</kw>
<msg timestamp="20250108 15:57:18.669" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:18.166" endtime="20250108 15:57:18.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:18.669" endtime="20250108 15:57:18.669"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:18.672" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-8661439290/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:19.196" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:19.196" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:18.670" endtime="20250108 15:57:19.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:19.197" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:19.196" endtime="20250108 15:57:19.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:19.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:19.197" endtime="20250108 15:57:19.197"/>
</kw>
<msg timestamp="20250108 15:57:19.197" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:18.670" endtime="20250108 15:57:19.197"/>
</kw>
<msg timestamp="20250108 15:57:19.197" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:18.669" endtime="20250108 15:57:19.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:19.198" endtime="20250108 15:57:19.198"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:18.166" endtime="20250108 15:57:19.198"/>
</test>
<test id="s1-s3-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="96">
<kw name="Execute" library="os">
<var>${file_checksum}</var>
<arg>md5sum /tmp/copyfile | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:19.202" level="INFO">Running command 'md5sum /tmp/copyfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:19.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:19.206" level="INFO">${output} = bd261a2974682690abbdea6897e606b8</msg>
<status status="PASS" starttime="20250108 15:57:19.200" endtime="20250108 15:57:19.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:19.207" level="INFO">bd261a2974682690abbdea6897e606b8</msg>
<status status="PASS" starttime="20250108 15:57:19.207" endtime="20250108 15:57:19.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:19.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:19.207" endtime="20250108 15:57:19.208"/>
</kw>
<status status="PASS" starttime="20250108 15:57:19.200" endtime="20250108 15:57:19.208"/>
</kw>
<msg timestamp="20250108 15:57:19.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:19.199" endtime="20250108 15:57:19.208"/>
</kw>
<msg timestamp="20250108 15:57:19.208" level="INFO">${file_checksum} = bd261a2974682690abbdea6897e606b8</msg>
<status status="PASS" starttime="20250108 15:57:19.199" endtime="20250108 15:57:19.208"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:19.212" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 --copy-source destbucket-27910/ozone-test-8661439290/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:19.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:19.729" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:19.663Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:19.210" endtime="20250108 15:57:19.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:19.730" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:19.663Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:19.729" endtime="20250108 15:57:19.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:19.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:19.730" endtime="20250108 15:57:19.730"/>
</kw>
<status status="PASS" starttime="20250108 15:57:19.209" endtime="20250108 15:57:19.731"/>
</kw>
<msg timestamp="20250108 15:57:19.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:19.209" endtime="20250108 15:57:19.731"/>
</kw>
<msg timestamp="20250108 15:57:19.731" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:19.663Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:19.209" endtime="20250108 15:57:19.731"/>
</kw>
<msg timestamp="20250108 15:57:19.731" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:19.663Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:19.208" endtime="20250108 15:57:19.731"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:19.731" endtime="20250108 15:57:19.731"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag}</var>
<arg>echo '${result}' | jq -r '.CopyObjectResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:19.734" level="INFO">Running command 'echo '{
    "CopyObjectResult": {
        "ETag": "\"bd261a2974682690abbdea6897e606b8\"",
        "LastModified": "2025-01-08T15:57:19.663Z"
    }
}' | jq -r '.CopyObjectResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:19.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:19.739" level="INFO">${output} = "bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:19.732" endtime="20250108 15:57:19.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:19.740" level="INFO">"bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:19.739" endtime="20250108 15:57:19.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:19.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:19.740" endtime="20250108 15:57:19.740"/>
</kw>
<msg timestamp="20250108 15:57:19.741" level="INFO">${eTag} = "bd261a2974682690abbdea6897e606b8"</msg>
<status status="PASS" starttime="20250108 15:57:19.731" endtime="20250108 15:57:19.741"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${eTag}</arg>
<arg>\"${file_checksum}\"</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:19.741" endtime="20250108 15:57:19.741"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:19.198" endtime="20250108 15:57:19.741"/>
</test>
<test id="s1-s3-s9-t4" name="Copy Object Where Key not available" line="103">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:19.746" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 --copy-source encrypted/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:20.256" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:20.256" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250108 15:57:19.743" endtime="20250108 15:57:20.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:20.257" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250108 15:57:20.256" endtime="20250108 15:57:20.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:20.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:20.257" endtime="20250108 15:57:20.257"/>
</kw>
<msg timestamp="20250108 15:57:20.257" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250108 15:57:19.743" endtime="20250108 15:57:20.257"/>
</kw>
<msg timestamp="20250108 15:57:20.258" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250108 15:57:19.742" endtime="20250108 15:57:20.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:20.258" endtime="20250108 15:57:20.258"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:19.742" endtime="20250108 15:57:20.258"/>
</test>
<test id="s1-s3-s9-t5" name="Copy Object using an invalid copy directive" line="107">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:20.262" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 --copy-source encrypted/ozone-test-8661439290/copyobject/key=value/f1 --metadata-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:20.747" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:20.747" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250108 15:57:20.260" endtime="20250108 15:57:20.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:20.748" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20250108 15:57:20.747" endtime="20250108 15:57:20.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:20.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:20.748" endtime="20250108 15:57:20.748"/>
</kw>
<msg timestamp="20250108 15:57:20.748" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250108 15:57:20.260" endtime="20250108 15:57:20.748"/>
</kw>
<msg timestamp="20250108 15:57:20.749" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The metadata copy directive specified is invalid....</msg>
<status status="PASS" starttime="20250108 15:57:20.259" endtime="20250108 15:57:20.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:20.749" endtime="20250108 15:57:20.749"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --tagging-directive INVALID</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:20.752" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 --copy-source encrypted/ozone-test-8661439290/copyobject/key=value/f1 --tagging-directive INVALID 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:21.245" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:21.245" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250108 15:57:20.750" endtime="20250108 15:57:21.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:21.246" level="INFO">
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. Valid values are COPY or REPLACE.</msg>
<status status="PASS" starttime="20250108 15:57:21.245" endtime="20250108 15:57:21.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:21.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:21.246" endtime="20250108 15:57:21.246"/>
</kw>
<msg timestamp="20250108 15:57:21.246" level="INFO">${output} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250108 15:57:20.750" endtime="20250108 15:57:21.246"/>
</kw>
<msg timestamp="20250108 15:57:21.247" level="INFO">${result} = 
An error occurred (InvalidArgument) when calling the CopyObject operation: An error occurred (InvalidArgument) when calling the CopyObject operation: The tagging copy directive specified is invalid. ...</msg>
<status status="PASS" starttime="20250108 15:57:20.749" endtime="20250108 15:57:21.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidArgument</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:21.247" endtime="20250108 15:57:21.247"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:20.258" endtime="20250108 15:57:21.247"/>
</test>
<test id="s1-s3-s9-t6" name="Copy Object with user defined metadata size larger than 2 KB" line="113">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:21.251" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250108 15:57:21.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:21.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:21.249" endtime="20250108 15:57:21.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:21.253" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:21.253" endtime="20250108 15:57:21.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:21.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:21.254" endtime="20250108 15:57:21.254"/>
</kw>
<status status="PASS" starttime="20250108 15:57:21.249" endtime="20250108 15:57:21.254"/>
</kw>
<msg timestamp="20250108 15:57:21.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:21.248" endtime="20250108 15:57:21.254"/>
</kw>
<status status="PASS" starttime="20250108 15:57:21.248" endtime="20250108 15:57:21.254"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:57:21.257" level="INFO">${custom_metadata_value} = djewoEXPbHM6EFc78AOVdAuaWwqyP4dyrBh7qtB44cNmWEra1dBTUAanotVzPFewC9Pk7KjnIVueKSgimSwpAXtGTeCsZPdjvroGaCeRovKyUAvhhoRMeA426b95pnJGPvq6yPYqRIcEHEOtNVlmbBkZMS7YLJHp9FQWMl2h4rWxorEwci3fC3AB5eGiQ5DGblfUY3SV...</msg>
<status status="PASS" starttime="20250108 15:57:21.254" endtime="20250108 15:57:21.257"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1 --metadata="custom-key1=${custom_metadata_value}" --metadata-directive REPLACE</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:21.259" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-27910 --key ozone-test-8661439290/copyobject/key=value/f1 --copy-source encrypted/ozone-test-8661439290/copyobject/key=value/f1 --metadata="custom-key1=djewoEXPbHM6EFc78AOVdAuaWwqyP4dyrBh7qtB44cNmWEra1dBTUAanotVzPFewC9Pk7KjnIVueKSgimSwpAXtGTeCsZPdjvroGaCeRovKyUAvhhoRMeA426b95pnJGPvq6yPYqRIcEHEOtNVlmbBkZMS7YLJHp9FQWMl2h4rWxorEwci3fC3AB5eGiQ5DGblfUY3SV6ogz0JX3wRqwcqbRrLiLO3Xz3gVJEe57iPON7dMbjYwWl1U0LBjPXCYtKdo6AUcxVaQhNDRzYZurLmBVfP4P4lzL8fbpMD0YIMxkts9sUFZ6VmLmwmJFCCsaeUDkO5tUyQMuf0mMjgnhwcUMGdzMwzvILjzy0fcJa3Z2jBIcj1dT1q8kHabyDEaORZOchzXoWDkcyQ0stN5mSTkwt3v5AunAjMoxvEzCBf1t72VtgFkGGD6316hfJzeN1FLab14OL8LXoUzKkBDyPvKwW1mz85VYGpDKSw0GGObzbwpTZNHKdcTZhuC8qxWntKrKm99fxUvPJHwHDmU8SImmI1cvxAu3fqMgubOmhaxNYeeXdRlLjn9F1m1wlnhP0C5Vutkz63QyX3e2ia3ChDUWZE35qITUTHoD3L5cZ45Rw2lsC3jS5VMzWUkEJApJTsc6pe6leszxubHz5CRjzGBeYw3BMZR6zL9BXKeKBvb1g38ZmnQPTQLeuEx5jAT6dSavVxqqNw07UmlQtPKWz5kb5LrbDwDEIzpAlJ4kMAdP35b0zN9KflSJeCiAUbcypE3uHR8GEljfiWR1ZBYVeAK7UTVP908ij44GtkcvxJgviDprPPGq1KhBTWwr32mwZmiDgjyCDr3MNDdLxvxMHZqhJwGKIwJYSxPI08M9d2tp4S4BVQ3fJSammo77cUdp403m5tDCVivkq0FzTHiGmHKCGG16iUZOZfPssLFS5SLmW6PXN5S40wovpdXk4FIPz7DneILQ8iqEUK61q4Qrm9MKlFHo3EsUGbzjwpfCzGiPJCTH4rgURsmK6un9hni19K90c0g2aUVlt5Q2Uhg9rIISudwzuzd2JunwdyDDapazVxYxtzKhQJvUFnjIDEhbgWk7Jq7tylpquK2N9CQ8qAWd51kiYVtn52R45bEPmE93USBVzCMmGaNMy8nyuWRy5wR1TD7v5cyPo06UUlwFyLK31f2oyaHcEngnIJuJXTlDuhJ7hFJ1GzK10zuHvUKzqWCRYlzySiclDP7VuRfx4UsTONZUuohgskQF8c3Ay2pdYTougyUwIfWmSEf6BHijrvqdApm9GAvdZOvZdQETv3zNKtMpVGdhL2QpxUSdQnjpu9UuOQOPqotEAemsuJdIep4YoyO5tBiZ5HFwQEN68IdQxbUYp2VJGTHQIIPrxFVQsZlM2Vi4midPZhfqHTYktVnVX4zz7tPgS2x0MB1As6LZkQZ5CYhl4IvcM9VLoxCyImMhLqADV4cQj18zF95UFHBILZ3K93x1XGLB43ZcJ5ZwiShyNsOeBQpm4BIekTFkrOWVIhNItNnWq4dd60lBDdGYLFJL7IjTlUMV8tCJ35CfbzEdS2aBZ4YpteJTU6VduCO5Ei0RpMf59yzFOvrLKYkQHAsGBnjFOgLSEKjA4egw8UMXDynNf5f8xqnEYz2t4xT142InucfmqZ0SGEdNPkGfAIc9gqLTyqONxWxnSEMfNtiNZ50oeBqEbEYazlHXYQroBYfl0QYE1AOpsRIzyuIaBuWCIE3gHALLt1uwS73ydiJTj2cuOkVhAfgFKI14lrgzrAD9urACwhlOD4Ux24kcC7HR0anAwV6LhOg2k4yToSCkU2rBuytvCNrOiunkJC9EkcCMqJwOwpe2zgr2Fav1UKqLslbPQCiCOIyuox4nh16h7yqWFI1lTuokGFc1z0tpHZEHCZCXLMGV8AEDBFgYxmN6lz8LgEgnyB9SNAAXZetRfqzPorN3mtVGfSmsIOeF4sadMk6xeZOIp2M8sKzQqiFTNOidqh8n4toBfBexHUhK2gwCNgITlfGOZDL2pUaPaSU7go18VBTNgSG2rCvGgjc9T9Vlx9ZcEUN8PBvPiICmJNpotBi4WcEyNwDR0Z2gMDzYy3vehfQHQS5x5xlDgjXqzjSdpb4mOVkoojV1hnh1HCj5XqWMuOnMzQ67Aw0kAb9L7M4JRpbzv2qmc8JZiVixXA3ZUXhKp0PrO0thHxBGQaa2fuPpWagCiWc6B4MM7lOopFqU2uKTMr67o95lyAu40EhsjeroKJvF6jVVlZAPyP4XuasJwLYFMiic7Ilg0kaOPplIFyEZwKC19bqzT2FAEZUfA4ZAK6vRMts31rAoeMB3SLLdPZ0ds2iZWW75Hn66qKgV5SU8OAkZJwv6vd9QjFka3VfUNxlOD2CStllbfZjEJqFOzBgrGsLN1ZFL8pVeDG14rGVd6GDXa5KsXjilozsHtImiupROKauZy1Eq6sWieZn0oukm0vjqqRaRMEV9AfciXjikefxyEqes3T9DgOesi9tr3OkwMXe2UBrLfMQ9qK5bJQA3GAmrMrrfsJKwTCXMovoQWJxokSbf1MFcw2kUoQxERZaA4arrYDWfhTQe8kUTNbdJ5zekdQyWqMbcDHQ4rzL7nvEShtYL9yj58KluUipbKYbn4fzJytFDXb69vE1Vm4x1Xqbtjbw8dGmo5pAm9k6kmz2k2YGMC0iNOZDMY8F8bZKJsDFOh8Qw9Ge28nFEn0OPL9jid9ok9I7KAQMBBlfCaILHMAJ2igXzzUQjfsqCZbBCtebMLwGRd4Tng5yzm4KulDx61223spJKKUhoZdhKSjdtb1DTLCW84QzIOKZntmZ4JV8PMaiM3Y394MTCtJ1mL3qjDIZPY8R0DiPNp6xH0aiyFsAvk9mgFtNiz4aqtKOQwQfTbkfdtU1sIS5cYh0VLJ9CCBwSsEADTeqfYOkBunPsCYMRvtK5Vtm5FXUBJBhRh3A4h43ihXmgcjHHNNhnoy5avFqRhPREny7M" --metadata-directive REPLACE 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:21.770" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:21.770" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:57:21.258" endtime="20250108 15:57:21.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:21.771" level="INFO">
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:57:21.770" endtime="20250108 15:57:21.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:21.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:21.771" endtime="20250108 15:57:21.772"/>
</kw>
<msg timestamp="20250108 15:57:21.772" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:57:21.257" endtime="20250108 15:57:21.772"/>
</kw>
<msg timestamp="20250108 15:57:21.772" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the CopyObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:57:21.257" endtime="20250108 15:57:21.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:21.772" endtime="20250108 15:57:21.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:21.248" endtime="20250108 15:57:21.772"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:57:12.379" endtime="20250108 15:57:21.773"/>
</suite>
<suite id="s1-s3-s10" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:57:21.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:21.782" endtime="20250108 15:57:21.782"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:21.782" endtime="20250108 15:57:21.782"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:21.783" endtime="20250108 15:57:21.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:21.783" endtime="20250108 15:57:21.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:21.783" endtime="20250108 15:57:21.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:21.783" endtime="20250108 15:57:21.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:21.783" endtime="20250108 15:57:21.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:21.783" endtime="20250108 15:57:21.783"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:57:21.783" endtime="20250108 15:57:21.783"/>
</kw>
<status status="PASS" starttime="20250108 15:57:21.782" endtime="20250108 15:57:21.783"/>
</kw>
<test id="s1-s3-s10-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:21.787" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:57:21.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:21.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:21.785" endtime="20250108 15:57:21.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:21.790" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:21.789" endtime="20250108 15:57:21.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:21.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:21.790" endtime="20250108 15:57:21.790"/>
</kw>
<status status="PASS" starttime="20250108 15:57:21.784" endtime="20250108 15:57:21.790"/>
</kw>
<msg timestamp="20250108 15:57:21.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:21.784" endtime="20250108 15:57:21.790"/>
</kw>
<status status="PASS" starttime="20250108 15:57:21.784" endtime="20250108 15:57:21.791"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:21.793" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:22.281" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:22.281" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:21.791" endtime="20250108 15:57:22.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:22.282" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:22.282" endtime="20250108 15:57:22.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:22.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:22.282" endtime="20250108 15:57:22.283"/>
</kw>
<msg timestamp="20250108 15:57:22.283" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:21.791" endtime="20250108 15:57:22.283"/>
</kw>
<msg timestamp="20250108 15:57:22.283" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:21.791" endtime="20250108 15:57:22.283"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:22.286" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:22.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:22.807" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt/"
}</msg>
<status status="PASS" starttime="20250108 15:57:22.284" endtime="20250108 15:57:22.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:22.808" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt/"
}</msg>
<status status="PASS" starttime="20250108 15:57:22.808" endtime="20250108 15:57:22.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:22.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:22.808" endtime="20250108 15:57:22.809"/>
</kw>
<status status="PASS" starttime="20250108 15:57:22.284" endtime="20250108 15:57:22.809"/>
</kw>
<msg timestamp="20250108 15:57:22.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:22.284" endtime="20250108 15:57:22.809"/>
</kw>
<msg timestamp="20250108 15:57:22.809" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt/"
}</msg>
<status status="PASS" starttime="20250108 15:57:22.284" endtime="20250108 15:57:22.809"/>
</kw>
<msg timestamp="20250108 15:57:22.809" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt/"
}</msg>
<status status="PASS" starttime="20250108 15:57:22.283" endtime="20250108 15:57:22.809"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250108 15:57:22.809" endtime="20250108 15:57:22.810"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:22.813" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:23.333" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:23.333" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:22.811" endtime="20250108 15:57:23.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:23.334" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:23.333" endtime="20250108 15:57:23.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:23.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:23.334" endtime="20250108 15:57:23.334"/>
</kw>
<msg timestamp="20250108 15:57:23.334" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:22.810" endtime="20250108 15:57:23.334"/>
</kw>
<msg timestamp="20250108 15:57:23.335" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:22.810" endtime="20250108 15:57:23.335"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:23.338" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:23.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:23.850" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250108 15:57:23.336" endtime="20250108 15:57:23.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:23.851" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250108 15:57:23.850" endtime="20250108 15:57:23.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:23.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:23.851" endtime="20250108 15:57:23.851"/>
</kw>
<status status="PASS" starttime="20250108 15:57:23.336" endtime="20250108 15:57:23.852"/>
</kw>
<msg timestamp="20250108 15:57:23.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:23.336" endtime="20250108 15:57:23.852"/>
</kw>
<msg timestamp="20250108 15:57:23.852" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250108 15:57:23.335" endtime="20250108 15:57:23.852"/>
</kw>
<msg timestamp="20250108 15:57:23.852" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt._COPYING_/"
}</msg>
<status status="PASS" starttime="20250108 15:57:23.335" endtime="20250108 15:57:23.852"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt._COPYING_</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250108 15:57:23.852" endtime="20250108 15:57:23.852"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:23.856" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:24.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:24.394" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:23.854" endtime="20250108 15:57:24.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:24.395" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:24.395" endtime="20250108 15:57:24.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:24.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:24.396" endtime="20250108 15:57:24.396"/>
</kw>
<status status="PASS" starttime="20250108 15:57:23.854" endtime="20250108 15:57:24.396"/>
</kw>
<msg timestamp="20250108 15:57:24.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:23.853" endtime="20250108 15:57:24.396"/>
</kw>
<msg timestamp="20250108 15:57:24.396" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:23.853" endtime="20250108 15:57:24.396"/>
</kw>
<msg timestamp="20250108 15:57:24.397" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:23.853" endtime="20250108 15:57:24.397"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:24.399" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:24.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:24.890" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:24 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:24.397" endtime="20250108 15:57:24.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:24.891" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:57:24 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:24 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:24 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:24.890" endtime="20250108 15:57:24.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:24.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:24.891" endtime="20250108 15:57:24.891"/>
</kw>
<msg timestamp="20250108 15:57:24.891" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:24 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:24.397" endtime="20250108 15:57:24.891"/>
</kw>
<status status="PASS" starttime="20250108 15:57:24.397" endtime="20250108 15:57:24.891"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:24.894" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:25.387" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:25.388" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:24.892" endtime="20250108 15:57:25.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:25.389" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:25.388" endtime="20250108 15:57:25.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:25.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:25.389" endtime="20250108 15:57:25.389"/>
</kw>
<msg timestamp="20250108 15:57:25.389" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:24.892" endtime="20250108 15:57:25.389"/>
</kw>
<status status="PASS" starttime="20250108 15:57:24.891" endtime="20250108 15:57:25.389"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:25.393" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:25.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:25.912" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt/"
}</msg>
<status status="PASS" starttime="20250108 15:57:25.391" endtime="20250108 15:57:25.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:25.913" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt/"
}</msg>
<status status="PASS" starttime="20250108 15:57:25.912" endtime="20250108 15:57:25.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:25.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:25.913" endtime="20250108 15:57:25.913"/>
</kw>
<status status="PASS" starttime="20250108 15:57:25.391" endtime="20250108 15:57:25.913"/>
</kw>
<msg timestamp="20250108 15:57:25.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:25.390" endtime="20250108 15:57:25.914"/>
</kw>
<msg timestamp="20250108 15:57:25.914" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt/"
}</msg>
<status status="PASS" starttime="20250108 15:57:25.390" endtime="20250108 15:57:25.914"/>
</kw>
<msg timestamp="20250108 15:57:25.914" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/word.txt/"
}</msg>
<status status="PASS" starttime="20250108 15:57:25.390" endtime="20250108 15:57:25.914"/>
</kw>
<kw name="Should Not Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"Key".*word.txt._COPYING_</arg>
<doc>Fails if ``string`` matches ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250108 15:57:25.914" endtime="20250108 15:57:25.914"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:25.918" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket encrypted --key ozone-test-8661439290/word.txt --copy-source encrypted/ozone-test-8661439290/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:26.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:26.518" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-01-08T15:57:26.447Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:25.916" endtime="20250108 15:57:26.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:26.518" level="INFO">{
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-01-08T15:57:26.447Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:26.518" endtime="20250108 15:57:26.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:26.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:26.519" endtime="20250108 15:57:26.519"/>
</kw>
<status status="PASS" starttime="20250108 15:57:25.915" endtime="20250108 15:57:26.519"/>
</kw>
<msg timestamp="20250108 15:57:26.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:25.915" endtime="20250108 15:57:26.519"/>
</kw>
<msg timestamp="20250108 15:57:26.519" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-01-08T15:57:26.447Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:25.915" endtime="20250108 15:57:26.519"/>
</kw>
<msg timestamp="20250108 15:57:26.519" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
        "LastModified": "2025-01-08T15:57:26.447Z"
    }
}</msg>
<status status="PASS" starttime="20250108 15:57:25.914" endtime="20250108 15:57:26.519"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:26.523" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:27.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:27.038" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:26 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:26.521" endtime="20250108 15:57:27.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:27.039" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:57:26 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:26 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:26 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:27.038" endtime="20250108 15:57:27.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:27.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:27.039" endtime="20250108 15:57:27.039"/>
</kw>
<msg timestamp="20250108 15:57:27.040" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:26 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:26.520" endtime="20250108 15:57:27.040"/>
</kw>
<status status="PASS" starttime="20250108 15:57:26.520" endtime="20250108 15:57:27.040"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:27.043" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-8661439290/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:27.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:27.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:27.041" endtime="20250108 15:57:27.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:27.545" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:27.545" endtime="20250108 15:57:27.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:27.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:27.546" endtime="20250108 15:57:27.546"/>
</kw>
<status status="PASS" starttime="20250108 15:57:27.041" endtime="20250108 15:57:27.546"/>
</kw>
<msg timestamp="20250108 15:57:27.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:27.041" endtime="20250108 15:57:27.546"/>
</kw>
<msg timestamp="20250108 15:57:27.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:27.040" endtime="20250108 15:57:27.546"/>
</kw>
<status status="PASS" starttime="20250108 15:57:27.040" endtime="20250108 15:57:27.546"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:27.549" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:28.077" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:28.077" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:27.547" endtime="20250108 15:57:28.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:28.078" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:28.077" endtime="20250108 15:57:28.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:28.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:28.078" endtime="20250108 15:57:28.078"/>
</kw>
<msg timestamp="20250108 15:57:28.078" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:27.547" endtime="20250108 15:57:28.078"/>
</kw>
<status status="PASS" starttime="20250108 15:57:27.546" endtime="20250108 15:57:28.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:21.784" endtime="20250108 15:57:28.079"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:57:21.775" endtime="20250108 15:57:28.079"/>
</suite>
<suite id="s1-s3-s11" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:57:28.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:28.088" endtime="20250108 15:57:28.088"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:28.088" endtime="20250108 15:57:28.088"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:28.088" endtime="20250108 15:57:28.088"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:28.089" endtime="20250108 15:57:28.089"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:28.089" endtime="20250108 15:57:28.089"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:28.089" endtime="20250108 15:57:28.089"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:28.089" endtime="20250108 15:57:28.089"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:28.089" endtime="20250108 15:57:28.089"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:57:28.089" endtime="20250108 15:57:28.089"/>
</kw>
<status status="PASS" starttime="20250108 15:57:28.088" endtime="20250108 15:57:28.089"/>
</kw>
<test id="s1-s3-s11-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:28.093" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:57:28.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:28.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:28.091" endtime="20250108 15:57:28.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:28.097" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:28.097" endtime="20250108 15:57:28.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:28.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:28.098" endtime="20250108 15:57:28.098"/>
</kw>
<status status="PASS" starttime="20250108 15:57:28.090" endtime="20250108 15:57:28.098"/>
</kw>
<msg timestamp="20250108 15:57:28.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:28.090" endtime="20250108 15:57:28.098"/>
</kw>
<status status="PASS" starttime="20250108 15:57:28.090" endtime="20250108 15:57:28.098"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:28.102" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:28.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:28.695" level="INFO">${output} = {
    "ETag": "\"2de05a1912f5d0b8d1169e736e927939\""
}</msg>
<status status="PASS" starttime="20250108 15:57:28.100" endtime="20250108 15:57:28.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:28.696" level="INFO">{
    "ETag": "\"2de05a1912f5d0b8d1169e736e927939\""
}</msg>
<status status="PASS" starttime="20250108 15:57:28.695" endtime="20250108 15:57:28.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:28.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:28.696" endtime="20250108 15:57:28.696"/>
</kw>
<status status="PASS" starttime="20250108 15:57:28.099" endtime="20250108 15:57:28.696"/>
</kw>
<msg timestamp="20250108 15:57:28.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:28.099" endtime="20250108 15:57:28.697"/>
</kw>
<msg timestamp="20250108 15:57:28.697" level="INFO">${output} = {
    "ETag": "\"2de05a1912f5d0b8d1169e736e927939\""
}</msg>
<status status="PASS" starttime="20250108 15:57:28.099" endtime="20250108 15:57:28.697"/>
</kw>
<msg timestamp="20250108 15:57:28.697" level="INFO">${result} = {
    "ETag": "\"2de05a1912f5d0b8d1169e736e927939\""
}</msg>
<status status="PASS" starttime="20250108 15:57:28.098" endtime="20250108 15:57:28.697"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:28.700" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:29.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:29.257" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/deletetestapi/key=value/f1",
            "LastModified": "2025-01-08T15:57:28.607Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250108 15:57:28.698" endtime="20250108 15:57:29.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:29.258" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8661439290/deletetestapi/key=value/f1",
            "LastModified": "2025-01-08T15:57:28.607Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:29.257" endtime="20250108 15:57:29.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:29.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:29.258" endtime="20250108 15:57:29.258"/>
</kw>
<status status="PASS" starttime="20250108 15:57:28.698" endtime="20250108 15:57:29.258"/>
</kw>
<msg timestamp="20250108 15:57:29.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:28.698" endtime="20250108 15:57:29.259"/>
</kw>
<msg timestamp="20250108 15:57:29.259" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/deletetestapi/key=value/f1",
            "LastModified": "2025-01-08T15:57:28.607Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250108 15:57:28.698" endtime="20250108 15:57:29.259"/>
</kw>
<msg timestamp="20250108 15:57:29.259" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/deletetestapi/key=value/f1",
            "LastModified": "2025-01-08T15:57:28.607Z",
            "Size": 29,
            "Storag...</msg>
<status status="PASS" starttime="20250108 15:57:28.697" endtime="20250108 15:57:29.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:29.259" endtime="20250108 15:57:29.259"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:29.263" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-8661439290/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:29.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:29.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:29.261" endtime="20250108 15:57:29.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:29.775" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:29.775" endtime="20250108 15:57:29.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:29.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:29.775" endtime="20250108 15:57:29.776"/>
</kw>
<status status="PASS" starttime="20250108 15:57:29.260" endtime="20250108 15:57:29.776"/>
</kw>
<msg timestamp="20250108 15:57:29.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:29.260" endtime="20250108 15:57:29.776"/>
</kw>
<msg timestamp="20250108 15:57:29.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:29.260" endtime="20250108 15:57:29.776"/>
</kw>
<msg timestamp="20250108 15:57:29.776" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:57:29.260" endtime="20250108 15:57:29.776"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:29.780" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:30.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:30.274" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:29.778" endtime="20250108 15:57:30.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:30.275" level="INFO">{
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:30.275" endtime="20250108 15:57:30.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:30.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:30.275" endtime="20250108 15:57:30.276"/>
</kw>
<status status="PASS" starttime="20250108 15:57:29.778" endtime="20250108 15:57:30.276"/>
</kw>
<msg timestamp="20250108 15:57:30.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:29.777" endtime="20250108 15:57:30.276"/>
</kw>
<msg timestamp="20250108 15:57:30.276" level="INFO">${output} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:29.777" endtime="20250108 15:57:30.276"/>
</kw>
<msg timestamp="20250108 15:57:30.276" level="INFO">${result} = {
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/deletetestapi/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:29.776" endtime="20250108 15:57:30.276"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:30.276" endtime="20250108 15:57:30.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:28.089" endtime="20250108 15:57:30.277"/>
</test>
<test id="s1-s3-s11-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:30.281" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:30.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:30.813" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0036963812/
                           PRE ozone-test-1318928156/
             ...</msg>
<status status="PASS" starttime="20250108 15:57:30.279" endtime="20250108 15:57:30.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:30.814" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0036963812/
                           PRE ozone-test-1318928156/
                           PRE ozone-test-2896340679/
                           PRE ozone-test-6242848406/
                           PRE ozone-test-6449010021/
                           PRE ozone-test-8661439290/
                           PRE specialchars/
2025-01-08 15:55:20       4068 README1.md
2025-01-08 15:55:18       4068 README10.md
2025-01-08 15:55:27   20971522 cjoiyrkzzj
2025-01-08 15:55:19   10485761 multiUpload.1.gz
2025-01-08 15:55:20   10485761 multiUpload.2.gz
2025-01-08 15:55:14         29 testfile</msg>
<status status="PASS" starttime="20250108 15:57:30.814" endtime="20250108 15:57:30.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:30.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:30.814" endtime="20250108 15:57:30.815"/>
</kw>
<status status="PASS" starttime="20250108 15:57:30.279" endtime="20250108 15:57:30.815"/>
</kw>
<msg timestamp="20250108 15:57:30.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:30.278" endtime="20250108 15:57:30.815"/>
</kw>
<msg timestamp="20250108 15:57:30.815" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0036963812/
                           PRE ozone-test-1318928156/
             ...</msg>
<status status="PASS" starttime="20250108 15:57:30.278" endtime="20250108 15:57:30.815"/>
</kw>
<msg timestamp="20250108 15:57:30.815" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0036963812/
                           PRE ozone-test-1318928156/
             ...</msg>
<status status="PASS" starttime="20250108 15:57:30.278" endtime="20250108 15:57:30.815"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:30.815" endtime="20250108 15:57:30.816"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:30.819" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:31.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:31.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:30.817" endtime="20250108 15:57:31.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:31.311" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:31.311" endtime="20250108 15:57:31.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:31.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:31.311" endtime="20250108 15:57:31.312"/>
</kw>
<status status="PASS" starttime="20250108 15:57:30.816" endtime="20250108 15:57:31.312"/>
</kw>
<msg timestamp="20250108 15:57:31.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:30.816" endtime="20250108 15:57:31.312"/>
</kw>
<msg timestamp="20250108 15:57:31.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:30.816" endtime="20250108 15:57:31.312"/>
</kw>
<msg timestamp="20250108 15:57:31.312" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:57:30.816" endtime="20250108 15:57:31.312"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:31.316" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:31.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:31.820" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0036963812/
                           PRE ozone-test-1318928156/
             ...</msg>
<status status="PASS" starttime="20250108 15:57:31.313" endtime="20250108 15:57:31.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:31.821" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0036963812/
                           PRE ozone-test-1318928156/
                           PRE ozone-test-2896340679/
                           PRE ozone-test-6242848406/
                           PRE ozone-test-6449010021/
                           PRE ozone-test-8661439290/
                           PRE specialchars/
2025-01-08 15:55:20       4068 README1.md
2025-01-08 15:55:18       4068 README10.md
2025-01-08 15:55:27   20971522 cjoiyrkzzj
2025-01-08 15:55:19   10485761 multiUpload.1.gz
2025-01-08 15:55:20   10485761 multiUpload.2.gz
2025-01-08 15:55:14         29 testfile</msg>
<status status="PASS" starttime="20250108 15:57:31.821" endtime="20250108 15:57:31.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:31.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:31.821" endtime="20250108 15:57:31.822"/>
</kw>
<status status="PASS" starttime="20250108 15:57:31.313" endtime="20250108 15:57:31.822"/>
</kw>
<msg timestamp="20250108 15:57:31.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:31.313" endtime="20250108 15:57:31.822"/>
</kw>
<msg timestamp="20250108 15:57:31.822" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0036963812/
                           PRE ozone-test-1318928156/
             ...</msg>
<status status="PASS" starttime="20250108 15:57:31.313" endtime="20250108 15:57:31.822"/>
</kw>
<msg timestamp="20250108 15:57:31.822" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0036963812/
                           PRE ozone-test-1318928156/
             ...</msg>
<status status="PASS" starttime="20250108 15:57:31.312" endtime="20250108 15:57:31.822"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:31.822" endtime="20250108 15:57:31.823"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:30.277" endtime="20250108 15:57:31.823"/>
</test>
<test id="s1-s3-s11-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:31.827" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:57:31.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:31.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:31.825" endtime="20250108 15:57:31.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:31.831" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:31.831" endtime="20250108 15:57:31.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:31.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:31.831" endtime="20250108 15:57:31.831"/>
</kw>
<status status="PASS" starttime="20250108 15:57:31.824" endtime="20250108 15:57:31.832"/>
</kw>
<msg timestamp="20250108 15:57:31.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:31.824" endtime="20250108 15:57:31.832"/>
</kw>
<status status="PASS" starttime="20250108 15:57:31.824" endtime="20250108 15:57:31.832"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:31.835" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-8661439290/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:32.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:32.347" level="INFO">${output} = Completed 29 Bytes/29 Bytes (527 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-8661439290/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250108 15:57:31.833" endtime="20250108 15:57:32.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:32.348" level="INFO">Completed 29 Bytes/29 Bytes (527 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-8661439290/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250108 15:57:32.347" endtime="20250108 15:57:32.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:32.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:32.348" endtime="20250108 15:57:32.349"/>
</kw>
<status status="PASS" starttime="20250108 15:57:31.833" endtime="20250108 15:57:32.349"/>
</kw>
<msg timestamp="20250108 15:57:32.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:31.833" endtime="20250108 15:57:32.349"/>
</kw>
<msg timestamp="20250108 15:57:32.349" level="INFO">${output} = Completed 29 Bytes/29 Bytes (527 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-8661439290/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250108 15:57:31.832" endtime="20250108 15:57:32.349"/>
</kw>
<msg timestamp="20250108 15:57:32.349" level="INFO">${result} = Completed 29 Bytes/29 Bytes (527 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-8661439290/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20250108 15:57:31.832" endtime="20250108 15:57:32.349"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:32.353" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-8661439290/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:32.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:32.855" level="INFO">${output} = 2025-01-08 15:57:32         29 f1</msg>
<status status="PASS" starttime="20250108 15:57:32.351" endtime="20250108 15:57:32.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:32.856" level="INFO">2025-01-08 15:57:32         29 f1</msg>
<status status="PASS" starttime="20250108 15:57:32.856" endtime="20250108 15:57:32.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:32.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:32.857" endtime="20250108 15:57:32.857"/>
</kw>
<status status="PASS" starttime="20250108 15:57:32.351" endtime="20250108 15:57:32.857"/>
</kw>
<msg timestamp="20250108 15:57:32.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:32.350" endtime="20250108 15:57:32.857"/>
</kw>
<msg timestamp="20250108 15:57:32.858" level="INFO">${output} = 2025-01-08 15:57:32         29 f1</msg>
<status status="PASS" starttime="20250108 15:57:32.350" endtime="20250108 15:57:32.858"/>
</kw>
<msg timestamp="20250108 15:57:32.858" level="INFO">${result} = 2025-01-08 15:57:32         29 f1</msg>
<status status="PASS" starttime="20250108 15:57:32.349" endtime="20250108 15:57:32.858"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:32.858" endtime="20250108 15:57:32.858"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:32.862" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-8661439290/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:33.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:33.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:32.859" endtime="20250108 15:57:33.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:33.369" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:33.369" endtime="20250108 15:57:33.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:33.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:33.369" endtime="20250108 15:57:33.370"/>
</kw>
<status status="PASS" starttime="20250108 15:57:32.859" endtime="20250108 15:57:33.370"/>
</kw>
<msg timestamp="20250108 15:57:33.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:32.859" endtime="20250108 15:57:33.370"/>
</kw>
<msg timestamp="20250108 15:57:33.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:32.859" endtime="20250108 15:57:33.370"/>
</kw>
<msg timestamp="20250108 15:57:33.370" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:57:32.858" endtime="20250108 15:57:33.370"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:33.374" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-8661439290/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:33.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:33.861" level="INFO">${output} = 2025-01-08 15:57:32         29 f1</msg>
<status status="PASS" starttime="20250108 15:57:33.372" endtime="20250108 15:57:33.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:33.862" level="INFO">2025-01-08 15:57:32         29 f1</msg>
<status status="PASS" starttime="20250108 15:57:33.862" endtime="20250108 15:57:33.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:33.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:33.862" endtime="20250108 15:57:33.863"/>
</kw>
<status status="PASS" starttime="20250108 15:57:33.371" endtime="20250108 15:57:33.863"/>
</kw>
<msg timestamp="20250108 15:57:33.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:33.371" endtime="20250108 15:57:33.863"/>
</kw>
<msg timestamp="20250108 15:57:33.863" level="INFO">${output} = 2025-01-08 15:57:32         29 f1</msg>
<status status="PASS" starttime="20250108 15:57:33.371" endtime="20250108 15:57:33.863"/>
</kw>
<msg timestamp="20250108 15:57:33.863" level="INFO">${result} = 2025-01-08 15:57:32         29 f1</msg>
<status status="PASS" starttime="20250108 15:57:33.370" endtime="20250108 15:57:33.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:33.863" endtime="20250108 15:57:33.864"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:33.867" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-8661439290/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:34.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:34.354" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:33.865" endtime="20250108 15:57:34.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:34.355" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:34.354" endtime="20250108 15:57:34.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:34.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:34.355" endtime="20250108 15:57:34.355"/>
</kw>
<status status="PASS" starttime="20250108 15:57:33.865" endtime="20250108 15:57:34.355"/>
</kw>
<msg timestamp="20250108 15:57:34.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:33.864" endtime="20250108 15:57:34.355"/>
</kw>
<msg timestamp="20250108 15:57:34.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:33.864" endtime="20250108 15:57:34.356"/>
</kw>
<msg timestamp="20250108 15:57:34.356" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:57:33.864" endtime="20250108 15:57:34.356"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:31.823" endtime="20250108 15:57:34.356"/>
</test>
<test id="s1-s3-s11-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:34.360" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:57:34.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:34.363" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:34.358" endtime="20250108 15:57:34.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:34.364" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:34.364" endtime="20250108 15:57:34.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:34.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:34.364" endtime="20250108 15:57:34.364"/>
</kw>
<status status="PASS" starttime="20250108 15:57:34.357" endtime="20250108 15:57:34.365"/>
</kw>
<msg timestamp="20250108 15:57:34.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:34.357" endtime="20250108 15:57:34.365"/>
</kw>
<status status="PASS" starttime="20250108 15:57:34.357" endtime="20250108 15:57:34.365"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:34.368" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-8661439290/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:34.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:34.900" level="INFO">${output} = Completed 29 Bytes/29 Bytes (489 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-8661439290/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250108 15:57:34.366" endtime="20250108 15:57:34.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:34.901" level="INFO">Completed 29 Bytes/29 Bytes (489 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-8661439290/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250108 15:57:34.900" endtime="20250108 15:57:34.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:34.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:34.901" endtime="20250108 15:57:34.901"/>
</kw>
<status status="PASS" starttime="20250108 15:57:34.366" endtime="20250108 15:57:34.902"/>
</kw>
<msg timestamp="20250108 15:57:34.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:34.366" endtime="20250108 15:57:34.902"/>
</kw>
<msg timestamp="20250108 15:57:34.902" level="INFO">${output} = Completed 29 Bytes/29 Bytes (489 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-8661439290/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250108 15:57:34.365" endtime="20250108 15:57:34.902"/>
</kw>
<msg timestamp="20250108 15:57:34.902" level="INFO">${result} = Completed 29 Bytes/29 Bytes (489 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-8661439290/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20250108 15:57:34.365" endtime="20250108 15:57:34.902"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:34.906" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-8661439290/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:35.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:35.394" level="INFO">${output} = 2025-01-08 15:57:34         29 filefile</msg>
<status status="PASS" starttime="20250108 15:57:34.904" endtime="20250108 15:57:35.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:35.395" level="INFO">2025-01-08 15:57:34         29 filefile</msg>
<status status="PASS" starttime="20250108 15:57:35.394" endtime="20250108 15:57:35.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:35.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:35.395" endtime="20250108 15:57:35.395"/>
</kw>
<status status="PASS" starttime="20250108 15:57:34.903" endtime="20250108 15:57:35.395"/>
</kw>
<msg timestamp="20250108 15:57:35.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:34.903" endtime="20250108 15:57:35.396"/>
</kw>
<msg timestamp="20250108 15:57:35.396" level="INFO">${output} = 2025-01-08 15:57:34         29 filefile</msg>
<status status="PASS" starttime="20250108 15:57:34.903" endtime="20250108 15:57:35.396"/>
</kw>
<msg timestamp="20250108 15:57:35.396" level="INFO">${result} = 2025-01-08 15:57:34         29 filefile</msg>
<status status="PASS" starttime="20250108 15:57:34.902" endtime="20250108 15:57:35.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:35.396" endtime="20250108 15:57:35.396"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:35.400" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-8661439290/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:35.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:35.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:35.398" endtime="20250108 15:57:35.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:35.907" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:35.906" endtime="20250108 15:57:35.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:35.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:35.907" endtime="20250108 15:57:35.907"/>
</kw>
<status status="PASS" starttime="20250108 15:57:35.398" endtime="20250108 15:57:35.907"/>
</kw>
<msg timestamp="20250108 15:57:35.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:35.397" endtime="20250108 15:57:35.907"/>
</kw>
<msg timestamp="20250108 15:57:35.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:35.397" endtime="20250108 15:57:35.908"/>
</kw>
<msg timestamp="20250108 15:57:35.908" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:57:35.396" endtime="20250108 15:57:35.908"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:35.912" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-8661439290/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:36.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:36.422" level="INFO">${output} = 2025-01-08 15:57:34         29 filefile</msg>
<status status="PASS" starttime="20250108 15:57:35.909" endtime="20250108 15:57:36.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:36.423" level="INFO">2025-01-08 15:57:34         29 filefile</msg>
<status status="PASS" starttime="20250108 15:57:36.423" endtime="20250108 15:57:36.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:36.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:36.424" endtime="20250108 15:57:36.424"/>
</kw>
<status status="PASS" starttime="20250108 15:57:35.909" endtime="20250108 15:57:36.424"/>
</kw>
<msg timestamp="20250108 15:57:36.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:35.909" endtime="20250108 15:57:36.424"/>
</kw>
<msg timestamp="20250108 15:57:36.424" level="INFO">${output} = 2025-01-08 15:57:34         29 filefile</msg>
<status status="PASS" starttime="20250108 15:57:35.908" endtime="20250108 15:57:36.424"/>
</kw>
<msg timestamp="20250108 15:57:36.424" level="INFO">${result} = 2025-01-08 15:57:34         29 filefile</msg>
<status status="PASS" starttime="20250108 15:57:35.908" endtime="20250108 15:57:36.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:36.425" endtime="20250108 15:57:36.425"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:36.429" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-8661439290/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:36.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:36.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:36.426" endtime="20250108 15:57:36.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:36.915" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:36.915" endtime="20250108 15:57:36.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:36.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:36.916" endtime="20250108 15:57:36.916"/>
</kw>
<status status="PASS" starttime="20250108 15:57:36.426" endtime="20250108 15:57:36.916"/>
</kw>
<msg timestamp="20250108 15:57:36.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:36.426" endtime="20250108 15:57:36.916"/>
</kw>
<msg timestamp="20250108 15:57:36.916" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:36.425" endtime="20250108 15:57:36.916"/>
</kw>
<msg timestamp="20250108 15:57:36.917" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:57:36.425" endtime="20250108 15:57:36.917"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:34.356" endtime="20250108 15:57:36.917"/>
</test>
<test id="s1-s3-s11-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:36.921" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:37.441" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:37.441" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:36.918" endtime="20250108 15:57:37.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:37.442" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:37.441" endtime="20250108 15:57:37.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:37.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:37.442" endtime="20250108 15:57:37.442"/>
</kw>
<msg timestamp="20250108 15:57:37.442" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:36.918" endtime="20250108 15:57:37.442"/>
</kw>
<msg timestamp="20250108 15:57:37.442" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20250108 15:57:36.918" endtime="20250108 15:57:37.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:37.443" endtime="20250108 15:57:37.443"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:36.917" endtime="20250108 15:57:37.443"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:57:28.080" endtime="20250108 15:57:37.444"/>
</suite>
<suite id="s1-s3-s12" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:57:37.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:37.453" endtime="20250108 15:57:37.453"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:37.454" endtime="20250108 15:57:37.454"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:37.454" endtime="20250108 15:57:37.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:37.454" endtime="20250108 15:57:37.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:37.454" endtime="20250108 15:57:37.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:37.454" endtime="20250108 15:57:37.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:37.454" endtime="20250108 15:57:37.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:37.454" endtime="20250108 15:57:37.454"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:57:37.454" endtime="20250108 15:57:37.454"/>
</kw>
<status status="PASS" starttime="20250108 15:57:37.453" endtime="20250108 15:57:37.454"/>
</kw>
<test id="s1-s3-s12-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:37.458" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:57:37.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:37.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:37.456" endtime="20250108 15:57:37.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:37.461" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:37.460" endtime="20250108 15:57:37.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:37.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:37.461" endtime="20250108 15:57:37.461"/>
</kw>
<status status="PASS" starttime="20250108 15:57:37.455" endtime="20250108 15:57:37.461"/>
</kw>
<msg timestamp="20250108 15:57:37.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:37.455" endtime="20250108 15:57:37.462"/>
</kw>
<status status="PASS" starttime="20250108 15:57:37.455" endtime="20250108 15:57:37.462"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:37.464" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:38.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:38.024" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:37.463" endtime="20250108 15:57:38.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:38.025" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:38.024" endtime="20250108 15:57:38.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:38.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:38.025" endtime="20250108 15:57:38.026"/>
</kw>
<msg timestamp="20250108 15:57:38.026" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:37.462" endtime="20250108 15:57:38.026"/>
</kw>
<msg timestamp="20250108 15:57:38.026" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:37.462" endtime="20250108 15:57:38.026"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:38.030" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:38.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:38.546" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:37 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:38.027" endtime="20250108 15:57:38.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:38.548" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:57:37 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:38 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:38 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:38.547" endtime="20250108 15:57:38.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:38.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:38.548" endtime="20250108 15:57:38.548"/>
</kw>
<msg timestamp="20250108 15:57:38.548" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:37 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:38.027" endtime="20250108 15:57:38.548"/>
</kw>
<msg timestamp="20250108 15:57:38.548" level="INFO">${result} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:37 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:38.026" endtime="20250108 15:57:38.548"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:38.551" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-8661439290/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:39.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:39.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:38.549" endtime="20250108 15:57:39.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:39.043" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:39.042" endtime="20250108 15:57:39.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:39.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:39.043" endtime="20250108 15:57:39.043"/>
</kw>
<msg timestamp="20250108 15:57:39.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:38.549" endtime="20250108 15:57:39.044"/>
</kw>
<msg timestamp="20250108 15:57:39.044" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:57:38.549" endtime="20250108 15:57:39.044"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:37.455" endtime="20250108 15:57:39.044"/>
</test>
<test id="s1-s3-s12-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:39.048" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted-non-existent --key ozone-test-8661439290/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:39.541" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:39.541" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:39.046" endtime="20250108 15:57:39.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:39.542" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:39.542" endtime="20250108 15:57:39.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:39.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:39.542" endtime="20250108 15:57:39.543"/>
</kw>
<msg timestamp="20250108 15:57:39.543" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:39.045" endtime="20250108 15:57:39.543"/>
</kw>
<msg timestamp="20250108 15:57:39.543" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:39.045" endtime="20250108 15:57:39.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:39.543" endtime="20250108 15:57:39.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:39.544" endtime="20250108 15:57:39.544"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:39.044" endtime="20250108 15:57:39.544"/>
</test>
<test id="s1-s3-s12-t3" name="Head object where path is a directory" line="44">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:57:39.545" endtime="20250108 15:57:39.545"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:39.548" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:40.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:40.082" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:39.546" endtime="20250108 15:57:40.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:40.083" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:40.083" endtime="20250108 15:57:40.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:40.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:40.083" endtime="20250108 15:57:40.084"/>
</kw>
<msg timestamp="20250108 15:57:40.084" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:39.546" endtime="20250108 15:57:40.084"/>
</kw>
<msg timestamp="20250108 15:57:40.084" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:39.545" endtime="20250108 15:57:40.084"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:40.087" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:40.588" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:40.588" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:40.085" endtime="20250108 15:57:40.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:40.589" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:40.588" endtime="20250108 15:57:40.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:40.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:40.589" endtime="20250108 15:57:40.589"/>
</kw>
<msg timestamp="20250108 15:57:40.589" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:40.085" endtime="20250108 15:57:40.589"/>
</kw>
<msg timestamp="20250108 15:57:40.590" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:40.084" endtime="20250108 15:57:40.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:40.590" endtime="20250108 15:57:40.590"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:40.590" endtime="20250108 15:57:40.590"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:39.544" endtime="20250108 15:57:40.591"/>
</test>
<test id="s1-s3-s12-t4" name="Head directory objects" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>does not apply to FSO buckets</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:57:40.591" endtime="20250108 15:57:40.592"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:40.595" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:41.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:41.137" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:40.593" endtime="20250108 15:57:41.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:41.138" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:41.137" endtime="20250108 15:57:41.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:41.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:41.138" endtime="20250108 15:57:41.139"/>
</kw>
<msg timestamp="20250108 15:57:41.139" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:40.592" endtime="20250108 15:57:41.139"/>
</kw>
<msg timestamp="20250108 15:57:41.139" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:40.592" endtime="20250108 15:57:41.139"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:41.142" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:41.653" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:41.653" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:41.140" endtime="20250108 15:57:41.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:41.653" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:41.653" endtime="20250108 15:57:41.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:41.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:41.654" endtime="20250108 15:57:41.654"/>
</kw>
<msg timestamp="20250108 15:57:41.654" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:41.139" endtime="20250108 15:57:41.654"/>
</kw>
<msg timestamp="20250108 15:57:41.654" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:41.139" endtime="20250108 15:57:41.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:41.655" endtime="20250108 15:57:41.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:41.655" endtime="20250108 15:57:41.655"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:41.658" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:42.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:42.171" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:41 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:41.656" endtime="20250108 15:57:42.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:42.171" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:57:41 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:42 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:42 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:42.171" endtime="20250108 15:57:42.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:42.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:42.172" endtime="20250108 15:57:42.172"/>
</kw>
<msg timestamp="20250108 15:57:42.172" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:41 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:41.656" endtime="20250108 15:57:42.172"/>
</kw>
<msg timestamp="20250108 15:57:42.172" level="INFO">${result} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:41 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:41.655" endtime="20250108 15:57:42.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:40.591" endtime="20250108 15:57:42.173"/>
</test>
<test id="s1-s3-s12-t5" name="Head non existing key" line="59">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:42.176" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:42.662" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:42.662" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:42.174" endtime="20250108 15:57:42.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:42.663" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:42.662" endtime="20250108 15:57:42.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:42.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:42.663" endtime="20250108 15:57:42.663"/>
</kw>
<msg timestamp="20250108 15:57:42.663" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:42.174" endtime="20250108 15:57:42.663"/>
</kw>
<msg timestamp="20250108 15:57:42.664" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20250108 15:57:42.173" endtime="20250108 15:57:42.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:42.664" endtime="20250108 15:57:42.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:42.664" endtime="20250108 15:57:42.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:42.173" endtime="20250108 15:57:42.664"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:57:37.445" endtime="20250108 15:57:42.665"/>
</suite>
<suite id="s1-s3-s13" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:57:42.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:42.674" endtime="20250108 15:57:42.675"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:42.675" endtime="20250108 15:57:42.675"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:42.675" endtime="20250108 15:57:42.675"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:42.675" endtime="20250108 15:57:42.675"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:42.675" endtime="20250108 15:57:42.675"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:42.675" endtime="20250108 15:57:42.675"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:42.675" endtime="20250108 15:57:42.675"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:42.675" endtime="20250108 15:57:42.675"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:57:42.675" endtime="20250108 15:57:42.675"/>
</kw>
<status status="PASS" starttime="20250108 15:57:42.674" endtime="20250108 15:57:42.676"/>
</kw>
<test id="s1-s3-s13-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:42.679" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:57:42.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:42.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:42.677" endtime="20250108 15:57:42.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:42.683" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:42.683" endtime="20250108 15:57:42.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:42.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:42.683" endtime="20250108 15:57:42.683"/>
</kw>
<status status="PASS" starttime="20250108 15:57:42.676" endtime="20250108 15:57:42.684"/>
</kw>
<msg timestamp="20250108 15:57:42.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:42.676" endtime="20250108 15:57:42.684"/>
</kw>
<status status="PASS" starttime="20250108 15:57:42.676" endtime="20250108 15:57:42.684"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:42.687" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:43.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:43.233" level="INFO">${output} = {
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:42.685" endtime="20250108 15:57:43.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:43.234" level="INFO">{
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:43.234" endtime="20250108 15:57:43.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:43.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:43.234" endtime="20250108 15:57:43.235"/>
</kw>
<status status="PASS" starttime="20250108 15:57:42.685" endtime="20250108 15:57:43.235"/>
</kw>
<msg timestamp="20250108 15:57:43.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:42.685" endtime="20250108 15:57:43.235"/>
</kw>
<msg timestamp="20250108 15:57:43.235" level="INFO">${output} = {
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:42.684" endtime="20250108 15:57:43.235"/>
</kw>
<msg timestamp="20250108 15:57:43.235" level="INFO">${result} = {
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:42.684" endtime="20250108 15:57:43.235"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:43.239" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:43.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:43.815" level="INFO">${output} = {
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:43.237" endtime="20250108 15:57:43.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:43.816" level="INFO">{
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:43.815" endtime="20250108 15:57:43.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:43.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:43.816" endtime="20250108 15:57:43.816"/>
</kw>
<status status="PASS" starttime="20250108 15:57:43.236" endtime="20250108 15:57:43.816"/>
</kw>
<msg timestamp="20250108 15:57:43.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:43.236" endtime="20250108 15:57:43.817"/>
</kw>
<msg timestamp="20250108 15:57:43.817" level="INFO">${output} = {
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:43.236" endtime="20250108 15:57:43.817"/>
</kw>
<msg timestamp="20250108 15:57:43.817" level="INFO">${result} = {
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:43.236" endtime="20250108 15:57:43.817"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:43.821" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:44.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:44.359" level="INFO">${output} = {
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:43.818" endtime="20250108 15:57:44.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:44.359" level="INFO">{
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:44.359" endtime="20250108 15:57:44.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:44.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:44.360" endtime="20250108 15:57:44.360"/>
</kw>
<status status="PASS" starttime="20250108 15:57:43.818" endtime="20250108 15:57:44.360"/>
</kw>
<msg timestamp="20250108 15:57:44.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:43.818" endtime="20250108 15:57:44.360"/>
</kw>
<msg timestamp="20250108 15:57:44.360" level="INFO">${output} = {
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:43.818" endtime="20250108 15:57:44.360"/>
</kw>
<msg timestamp="20250108 15:57:44.361" level="INFO">${result} = {
    "ETag": "\"aad29ccaf8c9e19188e54f261232d3ff\""
}</msg>
<status status="PASS" starttime="20250108 15:57:43.817" endtime="20250108 15:57:44.361"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:44.364" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:44.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:44.859" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f1",
            "LastModified": "2025-01-08T15:57:43.171Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250108 15:57:44.362" endtime="20250108 15:57:44.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:44.860" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f1",
            "LastModified": "2025-01-08T15:57:43.171Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f2",
            "LastModified": "2025-01-08T15:57:43.737Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f3",
            "LastModified": "2025-01-08T15:57:44.300Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/multidelete/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:44.860" endtime="20250108 15:57:44.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:44.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:44.861" endtime="20250108 15:57:44.861"/>
</kw>
<status status="PASS" starttime="20250108 15:57:44.362" endtime="20250108 15:57:44.861"/>
</kw>
<msg timestamp="20250108 15:57:44.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:44.362" endtime="20250108 15:57:44.861"/>
</kw>
<msg timestamp="20250108 15:57:44.861" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f1",
            "LastModified": "2025-01-08T15:57:43.171Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250108 15:57:44.361" endtime="20250108 15:57:44.861"/>
</kw>
<msg timestamp="20250108 15:57:44.862" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f1",
            "LastModified": "2025-01-08T15:57:43.171Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250108 15:57:44.361" endtime="20250108 15:57:44.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:44.862" endtime="20250108 15:57:44.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:44.862" endtime="20250108 15:57:44.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:44.863" endtime="20250108 15:57:44.863"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:44.863" endtime="20250108 15:57:44.863"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:44.863" endtime="20250108 15:57:44.864"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:44.867" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket encrypted --delete 'Objects=[{Key=ozone-test-8661439290/multidelete/key=value/f1},{Key=ozone-test-8661439290/multidelete/key=value/f2},{Key=ozone-test-8661439290/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:45.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:45.383" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250108 15:57:44.865" endtime="20250108 15:57:45.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:45.384" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20250108 15:57:45.384" endtime="20250108 15:57:45.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:45.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:45.385" endtime="20250108 15:57:45.385"/>
</kw>
<status status="PASS" starttime="20250108 15:57:44.865" endtime="20250108 15:57:45.385"/>
</kw>
<msg timestamp="20250108 15:57:45.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:44.865" endtime="20250108 15:57:45.385"/>
</kw>
<msg timestamp="20250108 15:57:45.385" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250108 15:57:44.864" endtime="20250108 15:57:45.385"/>
</kw>
<msg timestamp="20250108 15:57:45.386" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20250108 15:57:44.864" endtime="20250108 15:57:45.386"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:45.386" endtime="20250108 15:57:45.386"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:45.390" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:45.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:45.893" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f3",
            "LastModified": "2025-01-08T15:57:44.300Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250108 15:57:45.387" endtime="20250108 15:57:45.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:45.894" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f3",
            "LastModified": "2025-01-08T15:57:44.300Z",
            "Size": 29,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/multidelete/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:45.894" endtime="20250108 15:57:45.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:45.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:45.894" endtime="20250108 15:57:45.895"/>
</kw>
<status status="PASS" starttime="20250108 15:57:45.387" endtime="20250108 15:57:45.895"/>
</kw>
<msg timestamp="20250108 15:57:45.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:45.387" endtime="20250108 15:57:45.895"/>
</kw>
<msg timestamp="20250108 15:57:45.895" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f3",
            "LastModified": "2025-01-08T15:57:44.300Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250108 15:57:45.386" endtime="20250108 15:57:45.895"/>
</kw>
<msg timestamp="20250108 15:57:45.895" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/multidelete/key=value/f3",
            "LastModified": "2025-01-08T15:57:44.300Z",
            "Size": 29,
            "StorageC...</msg>
<status status="PASS" starttime="20250108 15:57:45.386" endtime="20250108 15:57:45.895"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:45.896" endtime="20250108 15:57:45.896"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:45.896" endtime="20250108 15:57:45.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:45.896" endtime="20250108 15:57:45.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:45.897" endtime="20250108 15:57:45.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:45.897" endtime="20250108 15:57:45.897"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:42.676" endtime="20250108 15:57:45.898"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:57:42.667" endtime="20250108 15:57:45.898"/>
</suite>
<suite id="s1-s3-s14" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:57:45.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:45.907" endtime="20250108 15:57:45.907"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:45.907" endtime="20250108 15:57:45.907"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:57:45.907" endtime="20250108 15:57:45.908"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:45.908" endtime="20250108 15:57:45.908"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:45.908" endtime="20250108 15:57:45.908"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:45.908" endtime="20250108 15:57:45.908"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:45.908" endtime="20250108 15:57:45.908"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:57:45.908" endtime="20250108 15:57:45.908"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:57:45.908" endtime="20250108 15:57:45.908"/>
</kw>
<status status="PASS" starttime="20250108 15:57:45.907" endtime="20250108 15:57:45.908"/>
</kw>
<test id="s1-s3-s14-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:45.912" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:57:45.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:45.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:45.910" endtime="20250108 15:57:45.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:45.914" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:45.914" endtime="20250108 15:57:45.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:45.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:45.914" endtime="20250108 15:57:45.915"/>
</kw>
<status status="PASS" starttime="20250108 15:57:45.909" endtime="20250108 15:57:45.915"/>
</kw>
<msg timestamp="20250108 15:57:45.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:45.909" endtime="20250108 15:57:45.915"/>
</kw>
<status status="PASS" starttime="20250108 15:57:45.909" endtime="20250108 15:57:45.915"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:45.918" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:46.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:46.448" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:45.916" endtime="20250108 15:57:46.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:46.449" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:46.449" endtime="20250108 15:57:46.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:46.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:46.449" endtime="20250108 15:57:46.450"/>
</kw>
<status status="PASS" starttime="20250108 15:57:45.916" endtime="20250108 15:57:46.450"/>
</kw>
<msg timestamp="20250108 15:57:46.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:45.916" endtime="20250108 15:57:46.450"/>
</kw>
<msg timestamp="20250108 15:57:46.450" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:45.916" endtime="20250108 15:57:46.450"/>
</kw>
<msg timestamp="20250108 15:57:46.450" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:45.915" endtime="20250108 15:57:46.450"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:46.454" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:46.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:46.968" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:46.391Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250108 15:57:46.452" endtime="20250108 15:57:46.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:46.969" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:46.391Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:46.969" endtime="20250108 15:57:46.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:46.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:46.969" endtime="20250108 15:57:46.970"/>
</kw>
<status status="PASS" starttime="20250108 15:57:46.451" endtime="20250108 15:57:46.970"/>
</kw>
<msg timestamp="20250108 15:57:46.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:46.451" endtime="20250108 15:57:46.970"/>
</kw>
<msg timestamp="20250108 15:57:46.970" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:46.391Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250108 15:57:46.451" endtime="20250108 15:57:46.970"/>
</kw>
<msg timestamp="20250108 15:57:46.970" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:46.391Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250108 15:57:46.450" endtime="20250108 15:57:46.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:46.970" endtime="20250108 15:57:46.971"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:46.974" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:46.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:46.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:46.972" endtime="20250108 15:57:46.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:46.979" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:46.978" endtime="20250108 15:57:46.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:46.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:46.979" endtime="20250108 15:57:46.979"/>
</kw>
<status status="PASS" starttime="20250108 15:57:46.971" endtime="20250108 15:57:46.979"/>
</kw>
<msg timestamp="20250108 15:57:46.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:46.971" endtime="20250108 15:57:46.980"/>
</kw>
<status status="PASS" starttime="20250108 15:57:46.971" endtime="20250108 15:57:46.980"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:46.983" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:47.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:47.518" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250108 15:57:46.981" endtime="20250108 15:57:47.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:47.519" level="INFO">{
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250108 15:57:47.518" endtime="20250108 15:57:47.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:47.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:47.519" endtime="20250108 15:57:47.519"/>
</kw>
<status status="PASS" starttime="20250108 15:57:46.981" endtime="20250108 15:57:47.519"/>
</kw>
<msg timestamp="20250108 15:57:47.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:46.981" endtime="20250108 15:57:47.520"/>
</kw>
<msg timestamp="20250108 15:57:47.520" level="INFO">${output} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250108 15:57:46.980" endtime="20250108 15:57:47.520"/>
</kw>
<msg timestamp="20250108 15:57:47.520" level="INFO">${result} = {
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\""
}</msg>
<status status="PASS" starttime="20250108 15:57:46.980" endtime="20250108 15:57:47.520"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:47.523" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:48.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:48.051" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:46.391Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250108 15:57:47.521" endtime="20250108 15:57:48.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:48.051" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:46.391Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-8661439290/putobject/key=value/zerobyte",
            "LastModified": "2025-01-08T15:57:47.459Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:57:48.051" endtime="20250108 15:57:48.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:48.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:48.052" endtime="20250108 15:57:48.052"/>
</kw>
<status status="PASS" starttime="20250108 15:57:47.521" endtime="20250108 15:57:48.052"/>
</kw>
<msg timestamp="20250108 15:57:48.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:47.521" endtime="20250108 15:57:48.052"/>
</kw>
<msg timestamp="20250108 15:57:48.052" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:46.391Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250108 15:57:47.520" endtime="20250108 15:57:48.052"/>
</kw>
<msg timestamp="20250108 15:57:48.053" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:57:46.391Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250108 15:57:47.520" endtime="20250108 15:57:48.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:48.053" endtime="20250108 15:57:48.053"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:45.908" endtime="20250108 15:57:48.053"/>
</test>
<test id="s1-s3-s14-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:48.058" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:48.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:48.604" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:48.056" endtime="20250108 15:57:48.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:48.605" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:48 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:48 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:48.605" endtime="20250108 15:57:48.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:48.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:48.605" endtime="20250108 15:57:48.606"/>
</kw>
<status status="PASS" starttime="20250108 15:57:48.055" endtime="20250108 15:57:48.606"/>
</kw>
<msg timestamp="20250108 15:57:48.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:48.055" endtime="20250108 15:57:48.606"/>
</kw>
<msg timestamp="20250108 15:57:48.606" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:48.054" endtime="20250108 15:57:48.606"/>
</kw>
<msg timestamp="20250108 15:57:48.606" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:48.054" endtime="20250108 15:57:48.606"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:48.611" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:48.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:48.616" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250108 15:57:48.608" endtime="20250108 15:57:48.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:48.617" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250108 15:57:48.616" endtime="20250108 15:57:48.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:48.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:48.617" endtime="20250108 15:57:48.617"/>
</kw>
<status status="PASS" starttime="20250108 15:57:48.607" endtime="20250108 15:57:48.618"/>
</kw>
<msg timestamp="20250108 15:57:48.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:48.607" endtime="20250108 15:57:48.618"/>
</kw>
<msg timestamp="20250108 15:57:48.618" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250108 15:57:48.607" endtime="20250108 15:57:48.618"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:48.622" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:48.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:48.626" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250108 15:57:48.619" endtime="20250108 15:57:48.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:48.627" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250108 15:57:48.627" endtime="20250108 15:57:48.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:48.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:48.627" endtime="20250108 15:57:48.628"/>
</kw>
<status status="PASS" starttime="20250108 15:57:48.619" endtime="20250108 15:57:48.628"/>
</kw>
<msg timestamp="20250108 15:57:48.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:48.619" endtime="20250108 15:57:48.628"/>
</kw>
<msg timestamp="20250108 15:57:48.628" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20250108 15:57:48.618" endtime="20250108 15:57:48.628"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:48.628" endtime="20250108 15:57:48.628"/>
</kw>
<status status="PASS" starttime="20250108 15:57:48.606" endtime="20250108 15:57:48.628"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:48.628" endtime="20250108 15:57:48.629"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte /tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:48.632" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/zerobyte /tmp/zerobyte.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:49.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:49.181" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:47 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:48.630" endtime="20250108 15:57:49.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:49.182" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:47 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:49 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:49 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:49.181" endtime="20250108 15:57:49.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:49.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:49.182" endtime="20250108 15:57:49.183"/>
</kw>
<status status="PASS" starttime="20250108 15:57:48.630" endtime="20250108 15:57:49.183"/>
</kw>
<msg timestamp="20250108 15:57:49.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:48.630" endtime="20250108 15:57:49.183"/>
</kw>
<msg timestamp="20250108 15:57:49.183" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:47 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:48.629" endtime="20250108 15:57:49.183"/>
</kw>
<msg timestamp="20250108 15:57:49.183" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:47 GMT",
    "ContentLength": 0,
    "ETag": "\"d41d8cd98f00b204e9800998ecf8427e\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:48.629" endtime="20250108 15:57:49.183"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/zerobyte</arg>
<arg>/tmp/zerobyte.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:49.186" level="INFO">Running command 'md5sum /tmp/zerobyte | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:49.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:49.191" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250108 15:57:49.184" endtime="20250108 15:57:49.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:49.192" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250108 15:57:49.191" endtime="20250108 15:57:49.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:49.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:49.192" endtime="20250108 15:57:49.192"/>
</kw>
<status status="PASS" starttime="20250108 15:57:49.184" endtime="20250108 15:57:49.192"/>
</kw>
<msg timestamp="20250108 15:57:49.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:49.184" endtime="20250108 15:57:49.192"/>
</kw>
<msg timestamp="20250108 15:57:49.192" level="INFO">${checksumbefore} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250108 15:57:49.184" endtime="20250108 15:57:49.192"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:49.195" level="INFO">Running command 'md5sum /tmp/zerobyte.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:49.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:49.199" level="INFO">${output} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250108 15:57:49.193" endtime="20250108 15:57:49.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:49.200" level="INFO">d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250108 15:57:49.200" endtime="20250108 15:57:49.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:49.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:49.200" endtime="20250108 15:57:49.201"/>
</kw>
<status status="PASS" starttime="20250108 15:57:49.193" endtime="20250108 15:57:49.201"/>
</kw>
<msg timestamp="20250108 15:57:49.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:49.193" endtime="20250108 15:57:49.201"/>
</kw>
<msg timestamp="20250108 15:57:49.201" level="INFO">${checksumafter} = d41d8cd98f00b204e9800998ecf8427e</msg>
<status status="PASS" starttime="20250108 15:57:49.193" endtime="20250108 15:57:49.201"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:49.201" endtime="20250108 15:57:49.201"/>
</kw>
<status status="PASS" starttime="20250108 15:57:49.183" endtime="20250108 15:57:49.201"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:48.053" endtime="20250108 15:57:49.202"/>
</test>
<test id="s1-s3-s14-t3" name="Get object with wrong signature" line="52">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:57:49.202" endtime="20250108 15:57:49.203"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:49.205" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/encrypted/ozone-test-8661439290/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:49.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:49.217" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20250108 15:57:49.203" endtime="20250108 15:57:49.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:49.218" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0  49400      0 --:--:-- --:--:-- --:--:-- 49400
HTTP/1.1 403 Forbidden
date: Wed, 08 Jan 2025 15:57:49 GMT
cache-control: no-cache
expires: Wed, 08 Jan 2025 15:57:49 GMT
pragma: no-cache
content-type: text/plain;charset=utf-8
x-content-type-options: nosniff
x-xss-protection: 1; mode=block
x-frame-options: SAMEORIGIN
server: Ozone
x-amz-id-2: AEefM9sG
x-amz-request-id: fd4bdd1d-b258-4b2e-add4-b944a03f1dd5
content-length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20250108 15:57:49.218" endtime="20250108 15:57:49.218"/>
</kw>
<msg timestamp="20250108 15:57:49.219" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20250108 15:57:49.203" endtime="20250108 15:57:49.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:49.219" endtime="20250108 15:57:49.219"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:49.202" endtime="20250108 15:57:49.219"/>
</test>
<test id="s1-s3-s14-t4" name="Get Partial object from s3 with both start and endoffset" line="57">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:49.224" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:49.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:49.776" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:49.222" endtime="20250108 15:57:49.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:49.777" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:49 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:49 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:49.777" endtime="20250108 15:57:49.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:49.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:49.777" endtime="20250108 15:57:49.778"/>
</kw>
<status status="PASS" starttime="20250108 15:57:49.221" endtime="20250108 15:57:49.778"/>
</kw>
<msg timestamp="20250108 15:57:49.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:49.221" endtime="20250108 15:57:49.778"/>
</kw>
<msg timestamp="20250108 15:57:49.778" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:49.221" endtime="20250108 15:57:49.778"/>
</kw>
<msg timestamp="20250108 15:57:49.778" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:49.220" endtime="20250108 15:57:49.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:49.778" endtime="20250108 15:57:49.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:49.779" endtime="20250108 15:57:49.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:49.779" endtime="20250108 15:57:49.779"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:49.782" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20250108 15:57:49.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:49.786" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20250108 15:57:49.780" endtime="20250108 15:57:49.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:49.787" level="INFO">Rando</msg>
<status status="PASS" starttime="20250108 15:57:49.787" endtime="20250108 15:57:49.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:49.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:49.787" endtime="20250108 15:57:49.788"/>
</kw>
<status status="PASS" starttime="20250108 15:57:49.780" endtime="20250108 15:57:49.788"/>
</kw>
<msg timestamp="20250108 15:57:49.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:49.780" endtime="20250108 15:57:49.788"/>
</kw>
<msg timestamp="20250108 15:57:49.788" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20250108 15:57:49.779" endtime="20250108 15:57:49.788"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:49.791" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:49.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:49.795" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20250108 15:57:49.789" endtime="20250108 15:57:49.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:49.796" level="INFO">Rando</msg>
<status status="PASS" starttime="20250108 15:57:49.795" endtime="20250108 15:57:49.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:49.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:49.796" endtime="20250108 15:57:49.796"/>
</kw>
<status status="PASS" starttime="20250108 15:57:49.789" endtime="20250108 15:57:49.796"/>
</kw>
<msg timestamp="20250108 15:57:49.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:49.788" endtime="20250108 15:57:49.796"/>
</kw>
<msg timestamp="20250108 15:57:49.797" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20250108 15:57:49.788" endtime="20250108 15:57:49.797"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:49.797" endtime="20250108 15:57:49.797"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:49.801" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:50.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:50.327" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:49.799" endtime="20250108 15:57:50.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:50.327" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:50 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:50 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:50.327" endtime="20250108 15:57:50.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:50.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:50.328" endtime="20250108 15:57:50.328"/>
</kw>
<status status="PASS" starttime="20250108 15:57:49.798" endtime="20250108 15:57:50.328"/>
</kw>
<msg timestamp="20250108 15:57:50.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:49.798" endtime="20250108 15:57:50.328"/>
</kw>
<msg timestamp="20250108 15:57:50.328" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:49.798" endtime="20250108 15:57:50.328"/>
</kw>
<msg timestamp="20250108 15:57:50.329" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:49.797" endtime="20250108 15:57:50.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:50.329" endtime="20250108 15:57:50.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:50.329" endtime="20250108 15:57:50.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:50.329" endtime="20250108 15:57:50.330"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:50.333" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20250108 15:57:50.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:50.337" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20250108 15:57:50.331" endtime="20250108 15:57:50.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:50.337" level="INFO">ndo</msg>
<status status="PASS" starttime="20250108 15:57:50.337" endtime="20250108 15:57:50.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:50.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:50.337" endtime="20250108 15:57:50.338"/>
</kw>
<status status="PASS" starttime="20250108 15:57:50.330" endtime="20250108 15:57:50.338"/>
</kw>
<msg timestamp="20250108 15:57:50.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:50.330" endtime="20250108 15:57:50.338"/>
</kw>
<msg timestamp="20250108 15:57:50.338" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20250108 15:57:50.330" endtime="20250108 15:57:50.338"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:50.341" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:50.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:50.344" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20250108 15:57:50.339" endtime="20250108 15:57:50.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:50.345" level="INFO">ndo</msg>
<status status="PASS" starttime="20250108 15:57:50.344" endtime="20250108 15:57:50.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:50.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:50.345" endtime="20250108 15:57:50.345"/>
</kw>
<status status="PASS" starttime="20250108 15:57:50.339" endtime="20250108 15:57:50.346"/>
</kw>
<msg timestamp="20250108 15:57:50.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:50.339" endtime="20250108 15:57:50.346"/>
</kw>
<msg timestamp="20250108 15:57:50.346" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20250108 15:57:50.338" endtime="20250108 15:57:50.346"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:50.346" endtime="20250108 15:57:50.346"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:50.350" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:50.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:50.866" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:50.348" endtime="20250108 15:57:50.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:50.867" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:50 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:50 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:50.867" endtime="20250108 15:57:50.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:50.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:50.867" endtime="20250108 15:57:50.868"/>
</kw>
<status status="PASS" starttime="20250108 15:57:50.347" endtime="20250108 15:57:50.868"/>
</kw>
<msg timestamp="20250108 15:57:50.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:50.347" endtime="20250108 15:57:50.868"/>
</kw>
<msg timestamp="20250108 15:57:50.868" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:50.347" endtime="20250108 15:57:50.868"/>
</kw>
<msg timestamp="20250108 15:57:50.868" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:50.346" endtime="20250108 15:57:50.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:50.868" endtime="20250108 15:57:50.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:50.869" endtime="20250108 15:57:50.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:50.869" endtime="20250108 15:57:50.869"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:50.872" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20250108 15:57:50.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:50.876" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20250108 15:57:50.870" endtime="20250108 15:57:50.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:50.877" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20250108 15:57:50.877" endtime="20250108 15:57:50.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:50.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:50.877" endtime="20250108 15:57:50.878"/>
</kw>
<status status="PASS" starttime="20250108 15:57:50.870" endtime="20250108 15:57:50.878"/>
</kw>
<msg timestamp="20250108 15:57:50.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:50.870" endtime="20250108 15:57:50.878"/>
</kw>
<msg timestamp="20250108 15:57:50.878" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20250108 15:57:50.869" endtime="20250108 15:57:50.878"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:50.881" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:50.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:50.885" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20250108 15:57:50.879" endtime="20250108 15:57:50.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:50.886" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20250108 15:57:50.885" endtime="20250108 15:57:50.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:50.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:50.886" endtime="20250108 15:57:50.886"/>
</kw>
<status status="PASS" starttime="20250108 15:57:50.879" endtime="20250108 15:57:50.886"/>
</kw>
<msg timestamp="20250108 15:57:50.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:50.879" endtime="20250108 15:57:50.886"/>
</kw>
<msg timestamp="20250108 15:57:50.886" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20250108 15:57:50.878" endtime="20250108 15:57:50.886"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:50.887" endtime="20250108 15:57:50.887"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:49.220" endtime="20250108 15:57:50.887"/>
</test>
<test id="s1-s3-s14-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="83">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:50.891" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:51.411" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:51.411" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:50.889" endtime="20250108 15:57:51.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:51.412" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:51.412" endtime="20250108 15:57:51.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:51.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:51.413" endtime="20250108 15:57:51.413"/>
</kw>
<msg timestamp="20250108 15:57:51.413" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:50.888" endtime="20250108 15:57:51.413"/>
</kw>
<msg timestamp="20250108 15:57:51.413" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:50.888" endtime="20250108 15:57:51.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:51.413" endtime="20250108 15:57:51.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:50.887" endtime="20250108 15:57:51.414"/>
</test>
<test id="s1-s3-s14-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="88">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:51.419" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:51.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:51.938" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:51.416" endtime="20250108 15:57:51.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:51.939" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:51 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:51 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:51.938" endtime="20250108 15:57:51.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:51.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:51.939" endtime="20250108 15:57:51.939"/>
</kw>
<status status="PASS" starttime="20250108 15:57:51.416" endtime="20250108 15:57:51.939"/>
</kw>
<msg timestamp="20250108 15:57:51.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:51.416" endtime="20250108 15:57:51.940"/>
</kw>
<msg timestamp="20250108 15:57:51.940" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:51.415" endtime="20250108 15:57:51.940"/>
</kw>
<msg timestamp="20250108 15:57:51.940" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:51.415" endtime="20250108 15:57:51.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:51.940" endtime="20250108 15:57:51.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:51.940" endtime="20250108 15:57:51.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:51.941" endtime="20250108 15:57:51.941"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:51.944" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:51.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:51.947" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:51.942" endtime="20250108 15:57:51.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:51.948" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:51.948" endtime="20250108 15:57:51.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:51.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:51.948" endtime="20250108 15:57:51.949"/>
</kw>
<status status="PASS" starttime="20250108 15:57:51.942" endtime="20250108 15:57:51.949"/>
</kw>
<msg timestamp="20250108 15:57:51.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:51.941" endtime="20250108 15:57:51.949"/>
</kw>
<msg timestamp="20250108 15:57:51.949" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:51.941" endtime="20250108 15:57:51.949"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:51.952" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:51.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:51.955" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:51.950" endtime="20250108 15:57:51.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:51.956" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:51.956" endtime="20250108 15:57:51.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:51.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:51.956" endtime="20250108 15:57:51.956"/>
</kw>
<status status="PASS" starttime="20250108 15:57:51.950" endtime="20250108 15:57:51.957"/>
</kw>
<msg timestamp="20250108 15:57:51.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:51.950" endtime="20250108 15:57:51.957"/>
</kw>
<msg timestamp="20250108 15:57:51.957" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:51.949" endtime="20250108 15:57:51.957"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:51.957" endtime="20250108 15:57:51.957"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:51.414" endtime="20250108 15:57:51.957"/>
</test>
<test id="s1-s3-s14-t7" name="Get Partial object from s3 with only start offset" line="97">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:51.961" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:52.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:52.461" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:51.960" endtime="20250108 15:57:52.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:52.462" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:52 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:52 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:52.461" endtime="20250108 15:57:52.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:52.462" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:52.462" endtime="20250108 15:57:52.462"/>
</kw>
<status status="PASS" starttime="20250108 15:57:51.959" endtime="20250108 15:57:52.462"/>
</kw>
<msg timestamp="20250108 15:57:52.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:51.959" endtime="20250108 15:57:52.463"/>
</kw>
<msg timestamp="20250108 15:57:52.463" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:51.959" endtime="20250108 15:57:52.463"/>
</kw>
<msg timestamp="20250108 15:57:52.463" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:51.958" endtime="20250108 15:57:52.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:52.463" endtime="20250108 15:57:52.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:52.463" endtime="20250108 15:57:52.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:52.464" endtime="20250108 15:57:52.464"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:52.467" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:52.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:52.470" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:52.465" endtime="20250108 15:57:52.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:52.471" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:52.471" endtime="20250108 15:57:52.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:52.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:52.471" endtime="20250108 15:57:52.471"/>
</kw>
<status status="PASS" starttime="20250108 15:57:52.464" endtime="20250108 15:57:52.472"/>
</kw>
<msg timestamp="20250108 15:57:52.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:52.464" endtime="20250108 15:57:52.472"/>
</kw>
<msg timestamp="20250108 15:57:52.472" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:52.464" endtime="20250108 15:57:52.472"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:52.476" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:52.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:52.479" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:52.474" endtime="20250108 15:57:52.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:52.480" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:52.479" endtime="20250108 15:57:52.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:52.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:52.480" endtime="20250108 15:57:52.480"/>
</kw>
<status status="PASS" starttime="20250108 15:57:52.472" endtime="20250108 15:57:52.480"/>
</kw>
<msg timestamp="20250108 15:57:52.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:52.472" endtime="20250108 15:57:52.481"/>
</kw>
<msg timestamp="20250108 15:57:52.481" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:52.472" endtime="20250108 15:57:52.481"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:52.481" endtime="20250108 15:57:52.481"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:51.958" endtime="20250108 15:57:52.481"/>
</test>
<test id="s1-s3-s14-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="106">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:52.485" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:52.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:52.987" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:52.483" endtime="20250108 15:57:52.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:52.988" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:52 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:52 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:52.988" endtime="20250108 15:57:52.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:52.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:52.988" endtime="20250108 15:57:52.989"/>
</kw>
<status status="PASS" starttime="20250108 15:57:52.483" endtime="20250108 15:57:52.989"/>
</kw>
<msg timestamp="20250108 15:57:52.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:52.483" endtime="20250108 15:57:52.989"/>
</kw>
<msg timestamp="20250108 15:57:52.989" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:52.483" endtime="20250108 15:57:52.989"/>
</kw>
<msg timestamp="20250108 15:57:52.989" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:52.482" endtime="20250108 15:57:52.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:52.989" endtime="20250108 15:57:52.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:52.990" endtime="20250108 15:57:52.990"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:52.990" endtime="20250108 15:57:52.990"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:52.993" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20250108 15:57:52.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:52.997" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20250108 15:57:52.991" endtime="20250108 15:57:52.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:52.997" level="INFO">R</msg>
<status status="PASS" starttime="20250108 15:57:52.997" endtime="20250108 15:57:52.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:52.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:52.998" endtime="20250108 15:57:52.998"/>
</kw>
<status status="PASS" starttime="20250108 15:57:52.991" endtime="20250108 15:57:52.998"/>
</kw>
<msg timestamp="20250108 15:57:52.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:52.991" endtime="20250108 15:57:52.998"/>
</kw>
<msg timestamp="20250108 15:57:52.998" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20250108 15:57:52.990" endtime="20250108 15:57:52.998"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:53.001" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:53.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:53.004" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20250108 15:57:52.999" endtime="20250108 15:57:53.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:53.005" level="INFO">R</msg>
<status status="PASS" starttime="20250108 15:57:53.004" endtime="20250108 15:57:53.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:53.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:53.005" endtime="20250108 15:57:53.006"/>
</kw>
<status status="PASS" starttime="20250108 15:57:52.999" endtime="20250108 15:57:53.006"/>
</kw>
<msg timestamp="20250108 15:57:53.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:52.999" endtime="20250108 15:57:53.006"/>
</kw>
<msg timestamp="20250108 15:57:53.006" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20250108 15:57:52.998" endtime="20250108 15:57:53.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:53.006" endtime="20250108 15:57:53.006"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:53.010" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:53.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:53.513" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:53.008" endtime="20250108 15:57:53.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:53.514" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:53 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:53 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:53.513" endtime="20250108 15:57:53.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:53.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:53.514" endtime="20250108 15:57:53.514"/>
</kw>
<status status="PASS" starttime="20250108 15:57:53.007" endtime="20250108 15:57:53.514"/>
</kw>
<msg timestamp="20250108 15:57:53.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:53.007" endtime="20250108 15:57:53.514"/>
</kw>
<msg timestamp="20250108 15:57:53.515" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:53.007" endtime="20250108 15:57:53.515"/>
</kw>
<msg timestamp="20250108 15:57:53.515" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:53.006" endtime="20250108 15:57:53.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:53.515" endtime="20250108 15:57:53.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:53.515" endtime="20250108 15:57:53.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:53.516" endtime="20250108 15:57:53.516"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:53.519" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20250108 15:57:53.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:53.522" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20250108 15:57:53.517" endtime="20250108 15:57:53.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:53.523" level="INFO">o</msg>
<status status="PASS" starttime="20250108 15:57:53.522" endtime="20250108 15:57:53.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:53.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:53.523" endtime="20250108 15:57:53.523"/>
</kw>
<status status="PASS" starttime="20250108 15:57:53.516" endtime="20250108 15:57:53.523"/>
</kw>
<msg timestamp="20250108 15:57:53.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:53.516" endtime="20250108 15:57:53.523"/>
</kw>
<msg timestamp="20250108 15:57:53.523" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20250108 15:57:53.516" endtime="20250108 15:57:53.524"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:53.526" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:53.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:53.530" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20250108 15:57:53.524" endtime="20250108 15:57:53.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:53.530" level="INFO">o</msg>
<status status="PASS" starttime="20250108 15:57:53.530" endtime="20250108 15:57:53.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:53.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:53.531" endtime="20250108 15:57:53.531"/>
</kw>
<status status="PASS" starttime="20250108 15:57:53.524" endtime="20250108 15:57:53.531"/>
</kw>
<msg timestamp="20250108 15:57:53.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:53.524" endtime="20250108 15:57:53.531"/>
</kw>
<msg timestamp="20250108 15:57:53.531" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20250108 15:57:53.524" endtime="20250108 15:57:53.531"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:53.531" endtime="20250108 15:57:53.532"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:52.482" endtime="20250108 15:57:53.532"/>
</test>
<test id="s1-s3-s14-t9" name="Get Partial object from s3 to get last n bytes" line="123">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:53.536" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:54.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:54.036" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:53.534" endtime="20250108 15:57:54.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:54.037" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:53 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:53 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:54.036" endtime="20250108 15:57:54.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:54.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:54.037" endtime="20250108 15:57:54.038"/>
</kw>
<status status="PASS" starttime="20250108 15:57:53.534" endtime="20250108 15:57:54.038"/>
</kw>
<msg timestamp="20250108 15:57:54.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:53.534" endtime="20250108 15:57:54.038"/>
</kw>
<msg timestamp="20250108 15:57:54.038" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:53.533" endtime="20250108 15:57:54.038"/>
</kw>
<msg timestamp="20250108 15:57:54.038" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20250108 15:57:53.533" endtime="20250108 15:57:54.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:54.038" endtime="20250108 15:57:54.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:54.039" endtime="20250108 15:57:54.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:54.039" endtime="20250108 15:57:54.039"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:54.042" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20250108 15:57:54.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:54.046" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20250108 15:57:54.040" endtime="20250108 15:57:54.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:54.047" level="INFO">ext</msg>
<status status="PASS" starttime="20250108 15:57:54.047" endtime="20250108 15:57:54.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:54.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:54.047" endtime="20250108 15:57:54.048"/>
</kw>
<status status="PASS" starttime="20250108 15:57:54.040" endtime="20250108 15:57:54.048"/>
</kw>
<msg timestamp="20250108 15:57:54.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:54.040" endtime="20250108 15:57:54.048"/>
</kw>
<msg timestamp="20250108 15:57:54.048" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20250108 15:57:54.039" endtime="20250108 15:57:54.048"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:54.051" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:54.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:54.054" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20250108 15:57:54.049" endtime="20250108 15:57:54.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:54.055" level="INFO">ext</msg>
<status status="PASS" starttime="20250108 15:57:54.055" endtime="20250108 15:57:54.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:54.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:54.055" endtime="20250108 15:57:54.055"/>
</kw>
<status status="PASS" starttime="20250108 15:57:54.049" endtime="20250108 15:57:54.056"/>
</kw>
<msg timestamp="20250108 15:57:54.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:54.048" endtime="20250108 15:57:54.056"/>
</kw>
<msg timestamp="20250108 15:57:54.056" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20250108 15:57:54.048" endtime="20250108 15:57:54.056"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:54.056" endtime="20250108 15:57:54.056"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:54.060" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:54.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:54.554" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:54.058" endtime="20250108 15:57:54.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:54.555" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:54 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:54 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:54.555" endtime="20250108 15:57:54.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:54.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:54.555" endtime="20250108 15:57:54.556"/>
</kw>
<status status="PASS" starttime="20250108 15:57:54.057" endtime="20250108 15:57:54.556"/>
</kw>
<msg timestamp="20250108 15:57:54.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:54.057" endtime="20250108 15:57:54.556"/>
</kw>
<msg timestamp="20250108 15:57:54.556" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:54.057" endtime="20250108 15:57:54.556"/>
</kw>
<msg timestamp="20250108 15:57:54.556" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:54.056" endtime="20250108 15:57:54.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:54.556" endtime="20250108 15:57:54.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:54.557" endtime="20250108 15:57:54.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:54.557" endtime="20250108 15:57:54.557"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:54.560" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:54.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:54.564" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:54.558" endtime="20250108 15:57:54.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:54.564" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:54.564" endtime="20250108 15:57:54.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:54.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:54.565" endtime="20250108 15:57:54.565"/>
</kw>
<status status="PASS" starttime="20250108 15:57:54.558" endtime="20250108 15:57:54.565"/>
</kw>
<msg timestamp="20250108 15:57:54.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:54.558" endtime="20250108 15:57:54.565"/>
</kw>
<msg timestamp="20250108 15:57:54.565" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:54.557" endtime="20250108 15:57:54.565"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:54.568" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:54.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:54.571" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:54.566" endtime="20250108 15:57:54.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:54.572" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:54.572" endtime="20250108 15:57:54.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:54.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:54.572" endtime="20250108 15:57:54.573"/>
</kw>
<status status="PASS" starttime="20250108 15:57:54.566" endtime="20250108 15:57:54.573"/>
</kw>
<msg timestamp="20250108 15:57:54.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:54.566" endtime="20250108 15:57:54.573"/>
</kw>
<msg timestamp="20250108 15:57:54.573" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:54.565" endtime="20250108 15:57:54.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:54.573" endtime="20250108 15:57:54.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:53.532" endtime="20250108 15:57:54.574"/>
</test>
<test id="s1-s3-s14-t10" name="Incorrect values for end and start offset" line="141">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:54.578" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:55.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:55.077" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:54.576" endtime="20250108 15:57:55.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:55.078" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:55 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:55 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:55.077" endtime="20250108 15:57:55.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:55.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:55.078" endtime="20250108 15:57:55.078"/>
</kw>
<status status="PASS" starttime="20250108 15:57:54.576" endtime="20250108 15:57:55.078"/>
</kw>
<msg timestamp="20250108 15:57:55.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:54.575" endtime="20250108 15:57:55.079"/>
</kw>
<msg timestamp="20250108 15:57:55.079" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:54.575" endtime="20250108 15:57:55.079"/>
</kw>
<msg timestamp="20250108 15:57:55.079" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:54.575" endtime="20250108 15:57:55.079"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:55.079" endtime="20250108 15:57:55.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:55.079" endtime="20250108 15:57:55.080"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:55.083" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:55.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:55.086" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.081" endtime="20250108 15:57:55.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:55.087" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.087" endtime="20250108 15:57:55.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:55.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:55.087" endtime="20250108 15:57:55.088"/>
</kw>
<status status="PASS" starttime="20250108 15:57:55.081" endtime="20250108 15:57:55.088"/>
</kw>
<msg timestamp="20250108 15:57:55.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:55.080" endtime="20250108 15:57:55.088"/>
</kw>
<msg timestamp="20250108 15:57:55.088" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.080" endtime="20250108 15:57:55.088"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:55.091" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:55.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:55.094" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.089" endtime="20250108 15:57:55.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:55.095" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.095" endtime="20250108 15:57:55.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:55.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:55.095" endtime="20250108 15:57:55.096"/>
</kw>
<status status="PASS" starttime="20250108 15:57:55.089" endtime="20250108 15:57:55.096"/>
</kw>
<msg timestamp="20250108 15:57:55.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:55.089" endtime="20250108 15:57:55.096"/>
</kw>
<msg timestamp="20250108 15:57:55.096" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.088" endtime="20250108 15:57:55.096"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:55.096" endtime="20250108 15:57:55.096"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:55.100" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:55.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:55.602" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:55.098" endtime="20250108 15:57:55.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:55.603" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:55 GMT",
    "Metadata": {},
    "ExpiresString": "Wed, 08 Jan 2025 15:57:55 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:55.602" endtime="20250108 15:57:55.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:55.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:55.603" endtime="20250108 15:57:55.603"/>
</kw>
<status status="PASS" starttime="20250108 15:57:55.097" endtime="20250108 15:57:55.603"/>
</kw>
<msg timestamp="20250108 15:57:55.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:55.097" endtime="20250108 15:57:55.603"/>
</kw>
<msg timestamp="20250108 15:57:55.604" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:55.097" endtime="20250108 15:57:55.604"/>
</kw>
<msg timestamp="20250108 15:57:55.604" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:46 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:57:55.096" endtime="20250108 15:57:55.604"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:55.604" endtime="20250108 15:57:55.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:55.604" endtime="20250108 15:57:55.604"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:55.607" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:55.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:55.611" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.605" endtime="20250108 15:57:55.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:55.612" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.611" endtime="20250108 15:57:55.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:55.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:55.612" endtime="20250108 15:57:55.612"/>
</kw>
<status status="PASS" starttime="20250108 15:57:55.605" endtime="20250108 15:57:55.612"/>
</kw>
<msg timestamp="20250108 15:57:55.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:55.605" endtime="20250108 15:57:55.612"/>
</kw>
<msg timestamp="20250108 15:57:55.612" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.604" endtime="20250108 15:57:55.612"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:55.615" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:55.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:55.619" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.614" endtime="20250108 15:57:55.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:55.619" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.619" endtime="20250108 15:57:55.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:55.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:55.620" endtime="20250108 15:57:55.620"/>
</kw>
<status status="PASS" starttime="20250108 15:57:55.613" endtime="20250108 15:57:55.620"/>
</kw>
<msg timestamp="20250108 15:57:55.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:55.613" endtime="20250108 15:57:55.620"/>
</kw>
<msg timestamp="20250108 15:57:55.620" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20250108 15:57:55.613" endtime="20250108 15:57:55.620"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:57:55.620" endtime="20250108 15:57:55.621"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:54.574" endtime="20250108 15:57:55.621"/>
</test>
<test id="s1-s3-s14-t11" name="Zero byte file" line="156">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:55.624" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:56.118" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:56.118" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:55.622" endtime="20250108 15:57:56.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:56.119" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:56.118" endtime="20250108 15:57:56.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:56.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:56.119" endtime="20250108 15:57:56.119"/>
</kw>
<msg timestamp="20250108 15:57:56.119" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:55.622" endtime="20250108 15:57:56.119"/>
</kw>
<msg timestamp="20250108 15:57:56.119" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:55.622" endtime="20250108 15:57:56.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:56.120" endtime="20250108 15:57:56.120"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:56.123" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:56.613" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:56.613" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:56.121" endtime="20250108 15:57:56.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:56.614" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:56.614" endtime="20250108 15:57:56.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:56.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:56.614" endtime="20250108 15:57:56.615"/>
</kw>
<msg timestamp="20250108 15:57:56.615" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:56.120" endtime="20250108 15:57:56.615"/>
</kw>
<msg timestamp="20250108 15:57:56.615" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:56.120" endtime="20250108 15:57:56.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:56.615" endtime="20250108 15:57:56.615"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:56.619" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:57.120" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:57:57.120" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:56.616" endtime="20250108 15:57:57.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:57.121" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:57.120" endtime="20250108 15:57:57.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:57.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:57.121" endtime="20250108 15:57:57.121"/>
</kw>
<msg timestamp="20250108 15:57:57.121" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:56.616" endtime="20250108 15:57:57.121"/>
</kw>
<msg timestamp="20250108 15:57:57.122" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20250108 15:57:56.615" endtime="20250108 15:57:57.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:57.122" endtime="20250108 15:57:57.122"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:55.621" endtime="20250108 15:57:57.122"/>
</test>
<test id="s1-s3-s14-t12" name="Create file with user defined metadata and tags" line="166">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:57.126" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250108 15:57:57.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:57.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:57:57.124" endtime="20250108 15:57:57.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:57.128" level="INFO"/>
<status status="PASS" starttime="20250108 15:57:57.128" endtime="20250108 15:57:57.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:57.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:57.129" endtime="20250108 15:57:57.129"/>
</kw>
<status status="PASS" starttime="20250108 15:57:57.123" endtime="20250108 15:57:57.129"/>
</kw>
<msg timestamp="20250108 15:57:57.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:57.123" endtime="20250108 15:57:57.130"/>
</kw>
<status status="PASS" starttime="20250108 15:57:57.123" endtime="20250108 15:57:57.130"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:57.133" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" --tagging="tag-key1=tag-value1&amp;tag-key2=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:57.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:57.695" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:57.131" endtime="20250108 15:57:57.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:57.696" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:57.695" endtime="20250108 15:57:57.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:57.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:57.696" endtime="20250108 15:57:57.696"/>
</kw>
<status status="PASS" starttime="20250108 15:57:57.131" endtime="20250108 15:57:57.697"/>
</kw>
<msg timestamp="20250108 15:57:57.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:57.130" endtime="20250108 15:57:57.697"/>
</kw>
<msg timestamp="20250108 15:57:57.697" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:57:57.130" endtime="20250108 15:57:57.697"/>
</kw>
<status status="PASS" starttime="20250108 15:57:57.130" endtime="20250108 15:57:57.697"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:57.701" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:57:58.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:57:58.213" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:57.698" endtime="20250108 15:57:58.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:57:58.214" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:57:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:57:58 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Wed, 08 Jan 2025 15:57:58 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:57:58.214" endtime="20250108 15:57:58.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:57:58.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:57:58.215" endtime="20250108 15:57:58.215"/>
</kw>
<status status="PASS" starttime="20250108 15:57:57.698" endtime="20250108 15:57:58.215"/>
</kw>
<msg timestamp="20250108 15:57:58.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:57.698" endtime="20250108 15:57:58.215"/>
</kw>
<msg timestamp="20250108 15:57:58.215" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:57.698" endtime="20250108 15:57:58.215"/>
</kw>
<msg timestamp="20250108 15:57:58.216" level="INFO">${result} = {
    "LastModified": "Wed, 08 Jan 2025 15:57:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:57:57.697" endtime="20250108 15:57:58.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:58.216" endtime="20250108 15:57:58.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:57:58.216" endtime="20250108 15:57:58.216"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:57:58.220" level="INFO">Running command 'ozone sh key info /s3v/encrypted/ozone-test-8661439290/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:01.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:01.981" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-8661439290/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-01-08T15:...</msg>
<status status="PASS" starttime="20250108 15:57:58.217" endtime="20250108 15:58:01.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:01.982" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-8661439290/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-01-08T15:57:57.578Z",
  "modificationTime" : "2025-01-08T15:57:57.623Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "minimumNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "tags" : {
    "tag-key1" : "tag-value1",
    "tag-key2" : "tag-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 115816896921600070,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "generation" : 767,
  "fileEncryptionInfo" : {
    "cipherSuite" : "AES_CTR_NOPADDING",
    "iv" : "q4zjc6fM7piaLpqnpTcLVA==",
    "keyName" : "key1",
    "ezKeyVersionName" : "key1@0",
    "cryptoProtocolVersion" : "ENCRYPTION_ZONES",
    "encryptedDataEncryptionKey" : "M5CsHpYpSPP/6M650yHbAQ=="
  },
  "file" : true
}</msg>
<status status="PASS" starttime="20250108 15:58:01.982" endtime="20250108 15:58:01.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:01.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:01.982" endtime="20250108 15:58:01.983"/>
</kw>
<status status="PASS" starttime="20250108 15:57:58.217" endtime="20250108 15:58:01.983"/>
</kw>
<msg timestamp="20250108 15:58:01.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:57:58.217" endtime="20250108 15:58:01.983"/>
</kw>
<msg timestamp="20250108 15:58:01.983" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-8661439290/putobject/custom-metadata/key1",
  "owner" : "testuser",
  "dataSize" : 11,
  "creationTime" : "2025-01-08T15:...</msg>
<status status="PASS" starttime="20250108 15:57:58.216" endtime="20250108 15:58:01.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:01.983" endtime="20250108 15:58:01.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:01.984" endtime="20250108 15:58:01.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key1\" : \"tag-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:01.984" endtime="20250108 15:58:01.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"tag-key2\" : \"tag-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:01.984" endtime="20250108 15:58:01.985"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:01.988" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/custom-metadata/key1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:02.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:02.482" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:58:01.986" endtime="20250108 15:58:02.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:02.483" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:58:02 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:58:02 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:58:02.483" endtime="20250108 15:58:02.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:02.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:02.484" endtime="20250108 15:58:02.484"/>
</kw>
<status status="PASS" starttime="20250108 15:58:01.986" endtime="20250108 15:58:02.484"/>
</kw>
<msg timestamp="20250108 15:58:02.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:01.986" endtime="20250108 15:58:02.484"/>
</kw>
<msg timestamp="20250108 15:58:02.484" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:58:01.985" endtime="20250108 15:58:02.484"/>
</kw>
<msg timestamp="20250108 15:58:02.485" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:58:01.985" endtime="20250108 15:58:02.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:02.485" endtime="20250108 15:58:02.485"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:02.488" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:57:57 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:58:02 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:58:02 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:02.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:02.493" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250108 15:58:02.485" endtime="20250108 15:58:02.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:02.494" level="INFO">2</msg>
<status status="PASS" starttime="20250108 15:58:02.493" endtime="20250108 15:58:02.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:02.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:02.494" endtime="20250108 15:58:02.494"/>
</kw>
<msg timestamp="20250108 15:58:02.494" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250108 15:58:02.485" endtime="20250108 15:58:02.494"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:58:02.495" endtime="20250108 15:58:02.495"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:57:57.122" endtime="20250108 15:58:02.495"/>
</test>
<test id="s1-s3-s14-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="185">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:02.499" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250108 15:58:02.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:02.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:02.497" endtime="20250108 15:58:02.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:02.502" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:02.501" endtime="20250108 15:58:02.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:02.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:02.502" endtime="20250108 15:58:02.502"/>
</kw>
<status status="PASS" starttime="20250108 15:58:02.496" endtime="20250108 15:58:02.502"/>
</kw>
<msg timestamp="20250108 15:58:02.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:02.496" endtime="20250108 15:58:02.502"/>
</kw>
<status status="PASS" starttime="20250108 15:58:02.496" endtime="20250108 15:58:02.502"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:02.506" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:03.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:03.063" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:58:02.504" endtime="20250108 15:58:03.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:03.063" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:58:03.063" endtime="20250108 15:58:03.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:03.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:03.064" endtime="20250108 15:58:03.064"/>
</kw>
<status status="PASS" starttime="20250108 15:58:02.504" endtime="20250108 15:58:03.064"/>
</kw>
<msg timestamp="20250108 15:58:03.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:02.503" endtime="20250108 15:58:03.064"/>
</kw>
<msg timestamp="20250108 15:58:03.064" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:58:02.503" endtime="20250108 15:58:03.064"/>
</kw>
<status status="PASS" starttime="20250108 15:58:02.503" endtime="20250108 15:58:03.065"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:03.068" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-8661439290/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:03.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:03.611" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:58:02 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:58:03.066" endtime="20250108 15:58:03.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:03.612" level="INFO">{
    "LastModified": "Wed, 08 Jan 2025 15:58:02 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:58:03 GMT",
    "Metadata": {
        "gdprenabled": "true",
        "custom-key2": "custom-value2"
    },
    "ExpiresString": "Wed, 08 Jan 2025 15:58:03 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:58:03.612" endtime="20250108 15:58:03.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:03.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:03.612" endtime="20250108 15:58:03.613"/>
</kw>
<status status="PASS" starttime="20250108 15:58:03.066" endtime="20250108 15:58:03.613"/>
</kw>
<msg timestamp="20250108 15:58:03.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:03.066" endtime="20250108 15:58:03.613"/>
</kw>
<msg timestamp="20250108 15:58:03.613" level="INFO">${output} = {
    "LastModified": "Wed, 08 Jan 2025 15:58:02 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:58:03.065" endtime="20250108 15:58:03.613"/>
</kw>
<msg timestamp="20250108 15:58:03.613" level="INFO">${result} = {
    "LastModified": "Wed, 08 Jan 2025 15:58:02 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20250108 15:58:03.065" endtime="20250108 15:58:03.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:03.614" endtime="20250108 15:58:03.614"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:03.614" endtime="20250108 15:58:03.614"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:02.495" endtime="20250108 15:58:03.614"/>
</test>
<test id="s1-s3-s14-t14" name="Create file with user defined metadata size larger than 2 KB" line="193">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:03.619" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250108 15:58:03.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:03.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:03.616" endtime="20250108 15:58:03.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:03.622" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:03.621" endtime="20250108 15:58:03.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:03.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:03.622" endtime="20250108 15:58:03.622"/>
</kw>
<status status="PASS" starttime="20250108 15:58:03.616" endtime="20250108 15:58:03.623"/>
</kw>
<msg timestamp="20250108 15:58:03.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:03.616" endtime="20250108 15:58:03.623"/>
</kw>
<status status="PASS" starttime="20250108 15:58:03.615" endtime="20250108 15:58:03.623"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${custom_metadata_value}</var>
<arg>3000</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:58:03.625" level="INFO">${custom_metadata_value} = o3RywMwVkww6Ee8MKbY7fVozcVMBpWANdq33dPtheMs7oT13pVwHQ42QM83e1ZfCUbmGmtXXrFtOWqMt1uFBVB7LL5DC8bA3vN8u2IzsrNydVPfkIuckUsdMCnwWpVkc20RF5CJsqHo6ZVXQ97vWMFWGD5Lo1XYYX32x32wSkVB51X5h1DATE3CExa3blciB07SDd7um...</msg>
<status status="PASS" starttime="20250108 15:58:03.623" endtime="20250108 15:58:03.625"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:03.628" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=o3RywMwVkww6Ee8MKbY7fVozcVMBpWANdq33dPtheMs7oT13pVwHQ42QM83e1ZfCUbmGmtXXrFtOWqMt1uFBVB7LL5DC8bA3vN8u2IzsrNydVPfkIuckUsdMCnwWpVkc20RF5CJsqHo6ZVXQ97vWMFWGD5Lo1XYYX32x32wSkVB51X5h1DATE3CExa3blciB07SDd7umXeRLpLYVPDS5UNB0swdO3i6bBChSdLq5CpT4NlR4kYb7yB69RhxNqKgqmRhBvJfOv4MhdldK8KITqz7U7P0pQOG7Pkb7hs4w4cR9T04hMwdH3bC0t4GuH0ExEeJ9I8QWOcAhtx454R5obBzf6XWzRBaNTIWH5zMJp0L43vZFY5Soz9L2fgnwmnuZQyMGBMOFMHfUk66StPKWLmI5mOec3NoNHkCSzSjP2qndUx7mG77AxhuVRvkir7cSXbBJbrgK09Xp1QgKaKI2G83Z8iTrpuYeERJUuORXZhFulj5I1151iqRltXc5LfXtsRcSyf8Kssp31XrOV241Rpr8OKQrpQ5gv1FMZrkSCJutd6zeRApp0HlrHpw1JgvMI3crBDOay6mnHllvhQgPbLrLJBVz8kQqWvVKdGonDS327B3YOP7twXMJsh5PYlJCtrXy1BtksCGmvKi15PQlDxDJ7gsSkp669peFtJggyVARYexS9H2ydgd3pCVWtij3D1FXMQYihN6WcfTAqdg7lhWuolh4gK3fALiaZ66AOE2CbB9fznrPM8NshJUXQwvlASKXsJIBbIsYiyjREfZe2in9qCgsYE6hYDzwEl8kjGnUfJy1wMcsVbDUGoWSBCUCTSM6KYrNuQx9ZkVo4NghpjWqTvIxwM3ra81ERVBfMnduSxOkyd4AGICl8S0quwRzPjpGLJhzuDPzczZIaPdR7Or1Hhoq8fAdpz8HaKhq2R4TELCRYeLDU9kuDVzKqo9AwY4V7NC66tdpe5P6kXUr1qIkPCIfIe13SeGD2T8ErEsxYo6AMnZAeUjFQwDPCmmt2godWCiXkf21HjhZKQzpS10rMttr8WCNPokwlzv8CtHBPQQDpEmqn2xNRLFzBGFXoSeWEDf0z3pJfWDfnsu45AWYXT0rfYmRbHb67jy1IDS02ejtHSNprbSMIZnCxDyGlzsY7MOzHCBsJgrY46PMlh5albOhS2bDWhFNAYah7u7snyzWvdB6sgVtt7dL2CQP0Y200TK45SUhEbzxtTXjRKirD2YW43F4l5rshp39AqA7KZwykjNX2vmxl28ayGI7W1SHWoo5E8Fo8Wq0VOTQkND28L0jgfMNV1H6D0H8oIZ2MVsOgVUmpdHYTl7cKXYCkl4gYfXqY0iQyRfNTs8PTW2rx9Es9b75DKt7Cgdlh2aXKuoBbWq15TFmpdHZxhMu302yIBvAm2j0hKegGje8UdxKCrzC5iOVy7LQ8LlTnA98sspm8CGF8q2vnvGDihOZFzqAAKcBsEovwLTut1NmPx8L6GdQ47uqpLOzpVwYWphloiHN7WdXvjOSB2bPE7GFhBxiPQ6rKRse4jfY75riQssBN8w0qxt9KsvOyZCiddQMNUCIIAuYqhsl0vCKtgCpLEju3QgRyCp3LnAxihtWWvGqnyRZ3lgJrdZtTHveAo1aC9qwuxmdjmKOlFJH6o3UhFFDanTy6T0buhgfDEzPjATsux1v5riFgSmhfUPywp44SeqHIfqSRFwh1ScYFIV8fNRjDYfUrIbykXTMBtqn6gEQO8KjODREJYdRFUJHlHI3mRbJ97Tckx9CvmPooCJZxlnYX5FCx2MiYRsCxYVSFRqvLCkCxvTrAZsyjoijBFAkok0GiET1Z5mQisprT8MJCsw0Xhsb0XN5MLZrCepC4wNUDq1TwMESxmlV38SvhVdUYbbHHoCLRZoDbE0V35J2TBDoYZLaH3FYCD9VtFv15zEvoPlfv6ilR3NTqn1LJNI2hbQAO9Tk6MXJlf4xxoZkxLdAj5HGfq7TfUTb8n8xs6xIJ0wCaA7I73JosjROR2bXhZ8FTZNRPEpXqNgjoiNG1ZSusXROyUjTUdfc86ywVC8CsBXGb8Q0w1mOSJQoce365owYI6cvxMLVATSYCYw5sILmqVenHOFnBzpqLO4XuO2kxobCP8zbfOLVwTfFYrUDcurtqZhvp66oaquwO7IvBhq4qd5hApSQFmWDOsD7giJDYR2tLFoRxpOpII0KZs3RRKajan3eZLp4oynR2lOSxkOCkqaFulZdu022eVfXt9ukJ7uPY6ARvgemHAJcnSyaIEKdTcoZ1deYVUmmfmZSQwnvR4FdZOJLzq43SJxQMaRPZ9bxB3VlYxTnn7tj9TfoqIJgBDvhEqLLZlpYTbAcWXxVlOJvKfHU9il0NuspfLMzRzM6CkKBCyBIi3byRikTIWTI5JItv7NK9qPVH4sn2mR7TV4Fahl1wxLUvIuZoETOWyjbjdd57YWDpp9FJEbE3RYoMS4X0f0wNRDcaQB3EG0DLyEznYKyJ28Zt6bmHLlGUyx8MGkeGhHOMJcluoVvUKu9MVH42yWj4Pu7PJuFLfTHmE4ZEsukLe9lcyHOUu6JDyMcfeWl8QdQG9A9KuiUSsRH4tzqz1U75NVEW0yCIu8qS3Vcw589dq9augqUPfwA9zyuquRPCWqe3o2qtjqq7hDKqika85IFEWsTyGBrepdwcZZ4RPPEDDOZMAbLbDgkX4pIk7p1dvWIhVP8HZUWSuJkNNsCao94L1AhvhAZPHZzr9pYIYOpik22JXAeNyZdPel9BgdqCWLdT8Ay24YahiyTYFCDGtSSQOKGwyBgHaP9x4Alz91ghlw2XPRthLlRb3zeW6ttbGqoDZ8WV0AUiGj0CvwXSgrnop8AZsvMqMuxEVJLlLDpQbYcY03OeapXKgnj2xAoN6UEy924d1ukFJUxyK9tFYztX40JqfeomTjtPf4XMsXFyQAhm2K4L2CyQBarrTd0s2GLZlLuk39sLmyYLAu8VNUj" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:04.141" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:04.141" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:58:03.626" endtime="20250108 15:58:04.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:04.142" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:58:04.141" endtime="20250108 15:58:04.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:04.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:04.142" endtime="20250108 15:58:04.142"/>
</kw>
<msg timestamp="20250108 15:58:04.143" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:58:03.626" endtime="20250108 15:58:04.143"/>
</kw>
<msg timestamp="20250108 15:58:04.143" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20250108 15:58:03.625" endtime="20250108 15:58:04.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MetadataTooLarge</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:04.143" endtime="20250108 15:58:04.143"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:04.143" endtime="20250108 15:58:04.144"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:03.615" endtime="20250108 15:58:04.144"/>
</test>
<test id="s1-s3-s14-t15" name="Create files invalid tags" line="200">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:04.148" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=tag-value1&amp;tag-key1=tag-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:04.645" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:04.645" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250108 15:58:04.146" endtime="20250108 15:58:04.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:04.646" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250108 15:58:04.645" endtime="20250108 15:58:04.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:04.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:04.646" endtime="20250108 15:58:04.646"/>
</kw>
<msg timestamp="20250108 15:58:04.646" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250108 15:58:04.145" endtime="20250108 15:58:04.646"/>
</kw>
<msg timestamp="20250108 15:58:04.647" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: There are tags with duplicate tag keys, tag keys should be unique</msg>
<status status="PASS" starttime="20250108 15:58:04.145" endtime="20250108 15:58:04.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:04.647" endtime="20250108 15:58:04.647"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_key}</var>
<arg>129</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:58:04.647" level="INFO">${long_tag_key} = pala7902mXw5kn1GKsucxFist1iGEjHLrEoZYUMNNxSu5T82BPvaXdtw4jiJXN8NUc4GutlpYSC2Z4VxAIVXbjeeIdtNBkSAPOR0oenc3QGLfQ3cB2k5Ak3iyx3xFHREj</msg>
<status status="PASS" starttime="20250108 15:58:04.647" endtime="20250108 15:58:04.647"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${long_tag_key}=tag-value1"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:04.651" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="pala7902mXw5kn1GKsucxFist1iGEjHLrEoZYUMNNxSu5T82BPvaXdtw4jiJXN8NUc4GutlpYSC2Z4VxAIVXbjeeIdtNBkSAPOR0oenc3QGLfQ3cB2k5Ak3iyx3xFHREj=tag-value1" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:05.172" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:05.172" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250108 15:58:04.649" endtime="20250108 15:58:05.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:05.173" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250108 15:58:05.172" endtime="20250108 15:58:05.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:05.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:05.173" endtime="20250108 15:58:05.173"/>
</kw>
<msg timestamp="20250108 15:58:05.173" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250108 15:58:04.648" endtime="20250108 15:58:05.173"/>
</kw>
<msg timestamp="20250108 15:58:05.174" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag key exceeds the maximum length of 128</msg>
<status status="PASS" starttime="20250108 15:58:04.648" endtime="20250108 15:58:05.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:05.174" endtime="20250108 15:58:05.174"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${long_tag_value}</var>
<arg>257</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20250108 15:58:05.175" level="INFO">${long_tag_value} = 1kV1Nmifau117gIxAIAlzXieDYWn3XeCEm10zI6EKrsSxKzEBU91CtGavev77GldYO5VSJCTrZeAlmR13Ak21D0mCUHzwXeCHGd1B1j8ePxI2L0kPaIztkf1drZal82qU9fsJ1VCgAJpJV5YitviiWYlPc5cvzYJnGMqiqkBjzP0AM230O4I207iaQaklj4Mm1DO0k9C...</msg>
<status status="PASS" starttime="20250108 15:58:05.174" endtime="20250108 15:58:05.175"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=${long_tag_value}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:05.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key1=1kV1Nmifau117gIxAIAlzXieDYWn3XeCEm10zI6EKrsSxKzEBU91CtGavev77GldYO5VSJCTrZeAlmR13Ak21D0mCUHzwXeCHGd1B1j8ePxI2L0kPaIztkf1drZal82qU9fsJ1VCgAJpJV5YitviiWYlPc5cvzYJnGMqiqkBjzP0AM230O4I207iaQaklj4Mm1DO0k9CP6MmpiPCTTVBEaFz042C97vCJDFklf7H340yB6kEUzfNKtdAMVv0nyAxX" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:05.700" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:05.701" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250108 15:58:05.176" endtime="20250108 15:58:05.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:05.702" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250108 15:58:05.701" endtime="20250108 15:58:05.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:05.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:05.702" endtime="20250108 15:58:05.702"/>
</kw>
<msg timestamp="20250108 15:58:05.702" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250108 15:58:05.175" endtime="20250108 15:58:05.702"/>
</kw>
<msg timestamp="20250108 15:58:05.702" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The tag value exceeds the maximum length of 256</msg>
<status status="PASS" starttime="20250108 15:58:05.175" endtime="20250108 15:58:05.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:05.702" endtime="20250108 15:58:05.703"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:04.144" endtime="20250108 15:58:05.703"/>
</test>
<test id="s1-s3-s14-t16" name="Create files with too many tags" line="210">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:05.707" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20250108 15:58:05.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:05.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:05.705" endtime="20250108 15:58:05.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:05.711" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:05.710" endtime="20250108 15:58:05.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:05.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:05.711" endtime="20250108 15:58:05.711"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.704" endtime="20250108 15:58:05.711"/>
</kw>
<msg timestamp="20250108 15:58:05.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:05.704" endtime="20250108 15:58:05.711"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.704" endtime="20250108 15:58:05.712"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20250108 15:58:05.712" level="INFO">@{tags_list} = [ ]</msg>
<status status="PASS" starttime="20250108 15:58:05.712" endtime="20250108 15:58:05.712"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>11</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.712" endtime="20250108 15:58:05.713"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.712" endtime="20250108 15:58:05.713"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.713" endtime="20250108 15:58:05.713"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.713" endtime="20250108 15:58:05.713"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.713" endtime="20250108 15:58:05.714"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.713" endtime="20250108 15:58:05.714"/>
</iter>
<iter>
<var name="${i}">3</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.714" endtime="20250108 15:58:05.714"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.714" endtime="20250108 15:58:05.714"/>
</iter>
<iter>
<var name="${i}">4</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.714" endtime="20250108 15:58:05.715"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.714" endtime="20250108 15:58:05.715"/>
</iter>
<iter>
<var name="${i}">5</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.715" endtime="20250108 15:58:05.715"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.715" endtime="20250108 15:58:05.715"/>
</iter>
<iter>
<var name="${i}">6</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.715" endtime="20250108 15:58:05.716"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.715" endtime="20250108 15:58:05.716"/>
</iter>
<iter>
<var name="${i}">7</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.716" endtime="20250108 15:58:05.716"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.716" endtime="20250108 15:58:05.716"/>
</iter>
<iter>
<var name="${i}">8</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.716" endtime="20250108 15:58:05.717"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.716" endtime="20250108 15:58:05.717"/>
</iter>
<iter>
<var name="${i}">9</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.717" endtime="20250108 15:58:05.717"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.717" endtime="20250108 15:58:05.717"/>
</iter>
<iter>
<var name="${i}">10</var>
<kw name="Append To List" library="Collections">
<arg>${tags_list}</arg>
<arg>tag-key-${i}=tag-value-${i}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20250108 15:58:05.718" endtime="20250108 15:58:05.718"/>
</kw>
<status status="PASS" starttime="20250108 15:58:05.718" endtime="20250108 15:58:05.718"/>
</iter>
<status status="PASS" starttime="20250108 15:58:05.712" endtime="20250108 15:58:05.718"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${tags_over_limit}</var>
<arg>SEPARATOR=&amp;</arg>
<arg>@{tags_list}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20250108 15:58:05.718" level="INFO">${tags_over_limit} = tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;ta...</msg>
<status status="PASS" starttime="20250108 15:58:05.718" endtime="20250108 15:58:05.718"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="${tags_over_limit}"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:05.722" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/putobject/custom-metadata/key2 --body /tmp/testfile2 --tagging="tag-key-0=tag-value-0&amp;tag-key-1=tag-value-1&amp;tag-key-2=tag-value-2&amp;tag-key-3=tag-value-3&amp;tag-key-4=tag-value-4&amp;tag-key-5=tag-value-5&amp;tag-key-6=tag-value-6&amp;tag-key-7=tag-value-7&amp;tag-key-8=tag-value-8&amp;tag-key-9=tag-value-9&amp;tag-key-10=tag-value-10" 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:06.241" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:06.241" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250108 15:58:05.720" endtime="20250108 15:58:06.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:06.242" level="INFO">
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250108 15:58:06.242" endtime="20250108 15:58:06.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:06.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:06.242" endtime="20250108 15:58:06.243"/>
</kw>
<msg timestamp="20250108 15:58:06.243" level="INFO">${output} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250108 15:58:05.719" endtime="20250108 15:58:06.243"/>
</kw>
<msg timestamp="20250108 15:58:06.243" level="INFO">${result} = 
An error occurred (InvalidTag) when calling the PutObject operation: The number of tags 11 exceeded the maximum number of tags of 10</msg>
<status status="PASS" starttime="20250108 15:58:05.718" endtime="20250108 15:58:06.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidTag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:06.243" endtime="20250108 15:58:06.243"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:05.703" endtime="20250108 15:58:06.244"/>
</test>
<test id="s1-s3-s14-t17" name="Create small file and expect ETag (MD5) in a reponse header" line="221">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:06.247" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20250108 15:58:06.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:06.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:06.245" endtime="20250108 15:58:06.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:06.256" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:06.256" endtime="20250108 15:58:06.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:06.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:06.257" endtime="20250108 15:58:06.257"/>
</kw>
<status status="PASS" starttime="20250108 15:58:06.245" endtime="20250108 15:58:06.257"/>
</kw>
<msg timestamp="20250108 15:58:06.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:06.245" endtime="20250108 15:58:06.257"/>
</kw>
<status status="PASS" starttime="20250108 15:58:06.244" endtime="20250108 15:58:06.257"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:06.260" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:06.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:06.265" level="INFO">${output} = 28c9c29503c8851396360a2276130295</msg>
<status status="PASS" starttime="20250108 15:58:06.258" endtime="20250108 15:58:06.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:06.266" level="INFO">28c9c29503c8851396360a2276130295</msg>
<status status="PASS" starttime="20250108 15:58:06.265" endtime="20250108 15:58:06.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:06.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:06.266" endtime="20250108 15:58:06.266"/>
</kw>
<status status="PASS" starttime="20250108 15:58:06.258" endtime="20250108 15:58:06.266"/>
</kw>
<msg timestamp="20250108 15:58:06.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:06.258" endtime="20250108 15:58:06.267"/>
</kw>
<msg timestamp="20250108 15:58:06.267" level="INFO">${file_md5_checksum} = 28c9c29503c8851396360a2276130295</msg>
<status status="PASS" starttime="20250108 15:58:06.257" endtime="20250108 15:58:06.267"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:06.270" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:06.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:06.845" level="INFO">${output} = 2025-01-08 15:58:06,579 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:06,579 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:06.268" endtime="20250108 15:58:06.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:06.846" level="INFO">2025-01-08 15:58:06,579 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:06,579 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://encrypted']
2025-01-08 15:58:06,579 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f68c33a1820&gt;
2025-01-08 15:58:06,580 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f68c3c8bc10&gt;
2025-01-08 15:58:06,580 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f68c397de50&gt;
2025-01-08 15:58:06,581 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-01-08 15:58:06,583 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f68c340e4c0&gt;
2025-01-08 15:58:06,584 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f68c3352820&gt;
2025-01-08 15:58:06,584 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f68c3425310&gt;
2025-01-08 15:58:06,584 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,584 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f68c3352820&gt;
2025-01-08 15:58:06,585 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f68c3425310&gt;
2025-01-08 15:58:06,586 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,586 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,586 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f68c394cc70&gt;
2025-01-08 15:58:06,586 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,586 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f68c394cc70&gt;
2025-01-08 15:58:06,586 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,586 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,587 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,587 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f68c394cc70&gt;
2025-01-08 15:58:06,587 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,587 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,587 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,587 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,587 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,587 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,587 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,587 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f68c394cc70&gt;
2025-01-08 15:58:06,588 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f68c394cc70&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f68c394cc70&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,589 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f68c32ab4c0&gt;
2025-01-08 15:58:06,590 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-01-08 15:58:06,590 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-01-08 15:58:06,591 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-01-08 15:58:06,615 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-01-08 15:58:06,616 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f68c4ec29d0&gt;
2025-01-08 15:58:06,622 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-01-08 15:58:06,631 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-01-08 15:58:06,652 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-01-08 15:58:06,655 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-01-08 15:58:06,657 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f68c3fc4a60&gt;
2025-01-08 15:58:06,657 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f68c3fc4820&gt;
2025-01-08 15:58:06,658 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:06,661 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:06,663 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-01-08 15:58:06,663 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:06,663 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:06,664 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:06,664 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:06,664 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f68c4ec29d0&gt;
2025-01-08 15:58:06,665 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f68c3fc4a60&gt;
2025-01-08 15:58:06,665 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f68c3fc4820&gt;
2025-01-08 15:58:06,665 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:06,667 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:06,669 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:06,669 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:06,670 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:06,670 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:06,670 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f68c4ec29d0&gt;
2025-01-08 15:58:06,671 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f68c3fc4a60&gt;
2025-01-08 15:58:06,671 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f68c3fc4820&gt;
2025-01-08 15:58:06,671 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:06,673 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:06,675 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:06,676 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:06,676 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:06,676 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:06,676 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-01-08 15:58:06,677 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:06,678 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f68c26d7820&gt;}) about to wait for the following futures []
2025-01-08 15:58:06,678 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f68c26d7820&gt;}) done waiting for dependent futures
2025-01-08 15:58:06,678 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f68c26d7820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f68c28ef8e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f68c26cedc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f68c26cee50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f68c26d40d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f68c26d7820&gt;}
2025-01-08 15:58:06,678 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f68c26d40d0&gt; for transfer request: 0.
2025-01-08 15:58:06,679 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:06,679 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2025-01-08 15:58:06,679 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2025-01-08 15:58:06,679 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f68c28ef8e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f68c066d0d0&gt;, 'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f68c3f0f4c0&gt;
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f68c3f0c8b0&gt;
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f68c3f0fdc0&gt;
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f68c3f0c820&gt;
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f68c3f12700&gt;
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f68c28c9820&gt;&gt;
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f68c294e6d0&gt;&gt;
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f68c3f0c670&gt;
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f68c3f128b0&gt;
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f68c28c9820&gt;&gt;
2025-01-08 15:58:06,680 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:06,680 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:06,681 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:06,681 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:06,681 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:06,682 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f68c4080790&gt;
2025-01-08 15:58:06,684 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f68c3f0cb80&gt;
2025-01-08 15:58:06,684 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-01-08 15:58:06,684 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f68c28c97f0&gt;&gt;
2025-01-08 15:58:06,684 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f68c3f0c280&gt;
2025-01-08 15:58:06,684 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f68c3f12d30&gt;
2025-01-08 15:58:06,684 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f68c3f0fee0&gt;
2025-01-08 15:58:06,684 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'KMnClQPIhROWNgoidhMClQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f68c066d0d0&gt;, 'auth_path': '/encrypted/small_file', 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f68c28efa60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'small_file', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f68c066d0d0&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:06,685 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f68c3647790&gt;
2025-01-08 15:58:06,685 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f68c28ef9d0&gt;&gt;
2025-01-08 15:58:06,685 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f68c3f0c4c0&gt;
2025-01-08 15:58:06,685 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f68c3f12820&gt;
2025-01-08 15:58:06,685 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f68c28c97f0&gt;&gt;
2025-01-08 15:58:06,686 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:06,686 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/small_file

content-md5:KMnClQPIhROWNgoidhMClQ==
host:s3g:9878
x-amz-content-sha256:13426338e20389c4fcc86112aac5e4c94429ef68026b867c01346516e245a3a8
x-amz-date:20250108T155806Z

content-md5;host;x-amz-content-sha256;x-amz-date
13426338e20389c4fcc86112aac5e4c94429ef68026b867c01346516e245a3a8
2025-01-08 15:58:06,686 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155806Z
20250108/us-west-1/s3/aws4_request
0dd9a0ed3c22eed9c455fa36354f011247fb3f1fefbb771c49f040145e725178
2025-01-08 15:58:06,686 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
12cdf0084c08da6c9c64fabd72e084245abff7cda31455fcf91c57c29cdd023b
2025-01-08 15:58:06,686 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f68c3647820&gt;
2025-01-08 15:58:06,686 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f68c3f12670&gt;
2025-01-08 15:58:06,687 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'KMnClQPIhROWNgoidhMClQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250108T155806Z', 'X-Amz-Content-SHA256': b'13426338e20389c4fcc86112aac5e4c94429ef68026b867c01346516e245a3a8', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=12cdf0084c08da6c9c64fabd72e084245abff7cda31455fcf91c57c29cdd023b', 'amz-sdk-invocation-id': b'1ff903d6-0f9c-427a-8909-d6b38bcf0d2d', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2025-01-08 15:58:06,687 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:06,688 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-01-08 15:58:06,714 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (5.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (11.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (16.4 MiB/s) with 1 file(s) remaining
2025-01-08 15:58:06,775 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/small_file HTTP/1.1" 200 0
2025-01-08 15:58:06,775 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f68c3f12b80&gt;
2025-01-08 15:58:06,776 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f68c3f129d0&gt;
2025-01-08 15:58:06,776 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:06 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:06 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"28c9c29503c8851396360a2276130295"', 'server': 'Ozone', 'x-amz-id-2': 'e0CgKc4yGT1kDwi', 'x-amz-request-id': '3b095eaa-1b8a-4837-b250-42fc5370da93', 'content-length': '0'}
2025-01-08 15:58:06,776 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-01-08 15:58:06,776 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f68c3f12ca0&gt;
2025-01-08 15:58:06,776 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f68c28c9760&gt;
2025-01-08 15:58:06,776 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:06,776 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f68c28c9820&gt;&gt;
2025-01-08 15:58:06,776 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f68c339dd30&gt;
Completed 976.6 KiB/976.6 KiB (9.8 MiB/s) with 1 file(s) remaining 
2025-01-08 15:58:06,777 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://encrypted/small_file          
2025-01-08 15:58:06,777 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250108 15:58:06.846" endtime="20250108 15:58:06.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:06.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:06.847" endtime="20250108 15:58:06.847"/>
</kw>
<status status="PASS" starttime="20250108 15:58:06.268" endtime="20250108 15:58:06.847"/>
</kw>
<msg timestamp="20250108 15:58:06.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:06.267" endtime="20250108 15:58:06.847"/>
</kw>
<msg timestamp="20250108 15:58:06.848" level="INFO">${output} = 2025-01-08 15:58:06,579 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:06,579 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:06.267" endtime="20250108 15:58:06.848"/>
</kw>
<msg timestamp="20250108 15:58:06.848" level="INFO">${result} = 2025-01-08 15:58:06,579 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:06,579 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:06.267" endtime="20250108 15:58:06.848"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250108 15:58:06.848" endtime="20250108 15:58:06.849"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:06.244" endtime="20250108 15:58:06.849"/>
</test>
<test id="s1-s3-s14-t18" name="Download small file end expect ETag (MD5) in a response header" line="228">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:06.853" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:06.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:06.859" level="INFO">${output} = 28c9c29503c8851396360a2276130295</msg>
<status status="PASS" starttime="20250108 15:58:06.851" endtime="20250108 15:58:06.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:06.860" level="INFO">28c9c29503c8851396360a2276130295</msg>
<status status="PASS" starttime="20250108 15:58:06.859" endtime="20250108 15:58:06.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:06.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:06.860" endtime="20250108 15:58:06.860"/>
</kw>
<status status="PASS" starttime="20250108 15:58:06.851" endtime="20250108 15:58:06.860"/>
</kw>
<msg timestamp="20250108 15:58:06.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:06.851" endtime="20250108 15:58:06.861"/>
</kw>
<msg timestamp="20250108 15:58:06.861" level="INFO">${file_md5_checksum} = 28c9c29503c8851396360a2276130295</msg>
<status status="PASS" starttime="20250108 15:58:06.850" endtime="20250108 15:58:06.861"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:06.864" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:07.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:07.556" level="INFO">${output} = 2025-01-08 15:58:07,201 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:07,201 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:06.862" endtime="20250108 15:58:07.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:07.557" level="INFO">2025-01-08 15:58:07,201 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:07,201 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/small_file', '/tmp/small_file_downloaded']
2025-01-08 15:58:07,201 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f558a92d820&gt;
2025-01-08 15:58:07,201 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f558b217c10&gt;
2025-01-08 15:58:07,202 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f558af09e50&gt;
2025-01-08 15:58:07,203 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-01-08 15:58:07,205 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f558a99a4c0&gt;
2025-01-08 15:58:07,206 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f558a8de820&gt;
2025-01-08 15:58:07,206 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f558a9b1310&gt;
2025-01-08 15:58:07,206 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,206 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f558a8de820&gt;
2025-01-08 15:58:07,207 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f558a9b1310&gt;
2025-01-08 15:58:07,208 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,208 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,208 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f558aed8c70&gt;
2025-01-08 15:58:07,208 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,208 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f558aed8c70&gt;
2025-01-08 15:58:07,208 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f558aed8c70&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,209 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f558aed8c70&gt;
2025-01-08 15:58:07,210 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,211 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,211 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,211 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f558aed8c70&gt;
2025-01-08 15:58:07,211 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,211 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f558aed8c70&gt;
2025-01-08 15:58:07,211 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,211 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,211 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,211 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,211 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,212 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,212 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f558a8374c0&gt;
2025-01-08 15:58:07,212 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-01-08 15:58:07,212 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-01-08 15:58:07,213 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-01-08 15:58:07,251 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-01-08 15:58:07,251 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f558c44d9d0&gt;
2025-01-08 15:58:07,259 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-01-08 15:58:07,274 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-01-08 15:58:07,294 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-01-08 15:58:07,297 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-01-08 15:58:07,298 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f558b550a60&gt;
2025-01-08 15:58:07,298 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f558b550820&gt;
2025-01-08 15:58:07,299 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:07,302 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:07,304 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-01-08 15:58:07,305 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:07,305 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:07,305 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:07,305 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:07,306 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f558c44d9d0&gt;
2025-01-08 15:58:07,307 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f558b550a60&gt;
2025-01-08 15:58:07,307 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f558b550820&gt;
2025-01-08 15:58:07,307 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:07,309 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:07,311 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:07,311 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:07,311 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:07,311 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:07,312 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f558c44d9d0&gt;
2025-01-08 15:58:07,313 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f558b550a60&gt;
2025-01-08 15:58:07,313 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f558b550820&gt;
2025-01-08 15:58:07,313 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:07,316 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:07,318 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:07,318 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:07,318 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:07,318 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:07,319 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-01-08 15:58:07,319 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f558b4988b0&gt;
2025-01-08 15:58:07,319 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f558b498820&gt;
2025-01-08 15:58:07,319 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f558b49e700&gt;
2025-01-08 15:58:07,319 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5589c5aa30&gt;&gt;
2025-01-08 15:58:07,320 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f5589e55940&gt;&gt;
2025-01-08 15:58:07,320 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f558b498670&gt;
2025-01-08 15:58:07,320 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f558b49e8b0&gt;
2025-01-08 15:58:07,320 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5589c5aa30&gt;&gt;
2025-01-08 15:58:07,320 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:07,321 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:07,321 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:07,321 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:07,321 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f558b498b80&gt;
2025-01-08 15:58:07,322 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5589c5aa00&gt;&gt;
2025-01-08 15:58:07,322 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f558b498280&gt;
2025-01-08 15:58:07,322 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7f558b49ed30&gt;
2025-01-08 15:58:07,322 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f558b49bee0&gt;
2025-01-08 15:58:07,322 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/small_file', 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f5589c89ca0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'small_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:07,322 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f5589c89c10&gt;&gt;
2025-01-08 15:58:07,322 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f558b4984c0&gt;
2025-01-08 15:58:07,322 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f558b49e820&gt;
2025-01-08 15:58:07,322 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5589c5aa00&gt;&gt;
2025-01-08 15:58:07,323 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:07,323 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250108T155807Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-01-08 15:58:07,323 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155807Z
20250108/us-west-1/s3/aws4_request
56eb215fca430d0af4db4f7f154be675e77e8c7fd74df3c2aa6a050951e48566
2025-01-08 15:58:07,323 - MainThread - botocore.auth - DEBUG - Signature:
0410635e17e093611840e3ae3d8d403c5f8804f5dcd10f65295fc104203b68b8
2025-01-08 15:58:07,323 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f558b49e670&gt;
2025-01-08 15:58:07,323 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250108T155807Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=0410635e17e093611840e3ae3d8d403c5f8804f5dcd10f65295fc104203b68b8', 'amz-sdk-invocation-id': b'1083fb0f-6aa9-47af-a118-c8b6f36a108c', 'amz-sdk-request': b'attempt=1'}&gt;
2025-01-08 15:58:07,323 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:07,334 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/small_file HTTP/1.1" 200 0
2025-01-08 15:58:07,334 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f558b49eb80&gt;
2025-01-08 15:58:07,334 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7f558b49e9d0&gt;
2025-01-08 15:58:07,335 - MainThread - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:07 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:07 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"28c9c29503c8851396360a2276130295"', 'last-modified': 'Wed, 08 Jan 2025 15:58:06 GMT', 'server': 'Ozone', 'x-amz-id-2': '2R1O57ZFz', 'x-amz-request-id': '31a4aaf3-5492-42c2-b72d-150ab1c33b31', 'content-length': '1000000'}
2025-01-08 15:58:07,335 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-01-08 15:58:07,335 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7f558b49eca0&gt;
2025-01-08 15:58:07,335 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f5589c5a970&gt;
2025-01-08 15:58:07,335 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:07,335 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5589c5aa30&gt;&gt;
2025-01-08 15:58:07,336 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f558a929d30&gt;
2025-01-08 15:58:07,336 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:07,337 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5588c0e8b0&gt;}) about to wait for the following futures []
2025-01-08 15:58:07,337 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5588c0e8b0&gt;}) done waiting for dependent futures
2025-01-08 15:58:07,337 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5588c0e8b0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5589e7b8e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f5589c5adc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f5589c5ae50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f5589c600d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5588c0e8b0&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f5589c60190&gt;}
2025-01-08 15:58:07,337 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f5589c600d0&gt; for transfer request: 0.
2025-01-08 15:58:07,338 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:07,338 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2025-01-08 15:58:07,338 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2025-01-08 15:58:07,338 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5589e7b8e0&gt;, 'bucket': 'encrypted', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f5588c0edf0&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f5589c63e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f5588c0e8b0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f5589c63eb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f5588c0e8b0&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f5588c0e370&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f5588c0e8b0&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f5588c0e310&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f5588c0e8b0&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f5588c0ed30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-01-08 15:58:07,338 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f558b4988b0&gt;
2025-01-08 15:58:07,338 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f558b498820&gt;
2025-01-08 15:58:07,338 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f558b49e700&gt;
2025-01-08 15:58:07,338 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5589e55820&gt;&gt;
2025-01-08 15:58:07,338 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f5589eda730&gt;&gt;
2025-01-08 15:58:07,338 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f558b498670&gt;
2025-01-08 15:58:07,339 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f558b49e8b0&gt;
2025-01-08 15:58:07,339 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5589e55820&gt;&gt;
2025-01-08 15:58:07,339 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'small_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:07,339 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:07,339 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:07,339 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:07,340 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f558b498b80&gt;
2025-01-08 15:58:07,340 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:07,340 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5589e557f0&gt;&gt;
2025-01-08 15:58:07,340 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f558b498280&gt;
2025-01-08 15:58:07,340 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f558b49ed30&gt;
2025-01-08 15:58:07,340 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f558b49bee0&gt;
2025-01-08 15:58:07,340 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/small_file', 'url': 'http://s3g:9878/encrypted/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f5589e7ba60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'small_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'small_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:07,341 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f558abd3790&gt;
2025-01-08 15:58:07,341 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f5589e7b9d0&gt;&gt;
2025-01-08 15:58:07,341 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f558b4984c0&gt;
2025-01-08 15:58:07,341 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f558b49e820&gt;
2025-01-08 15:58:07,341 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5589e557f0&gt;&gt;
2025-01-08 15:58:07,341 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:07,341 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250108T155807Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-01-08 15:58:07,341 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155807Z
20250108/us-west-1/s3/aws4_request
dc6722c53fa168a46ea602d0f1a59dccb28e535385d972b5ee10f4d91729a04f
2025-01-08 15:58:07,341 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
f7209e4709bf77731e5a790adcf892089bc79485ff3f979601f10b77a9b12456
2025-01-08 15:58:07,341 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f558abd3820&gt;
2025-01-08 15:58:07,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f558b49e670&gt;
2025-01-08 15:58:07,342 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/small_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250108T155807Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=f7209e4709bf77731e5a790adcf892089bc79485ff3f979601f10b77a9b12456', 'amz-sdk-invocation-id': b'21a1c605-cd08-4a8c-bb3c-6422384f13e5', 'amz-sdk-request': b'attempt=1'}&gt;
2025-01-08 15:58:07,342 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:07,381 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/small_file HTTP/1.1" 200 1000000
2025-01-08 15:58:07,381 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f558b49eb80&gt;
2025-01-08 15:58:07,381 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f558b49e9d0&gt;
2025-01-08 15:58:07,382 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:07 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:07 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'accept-ranges': 'bytes', 'etag': '"28c9c29503c8851396360a2276130295"', 'last-modified': 'Wed, 08 Jan 2025 15:58:06 GMT', 'server': 'Ozone', 'x-amz-id-2': 'WD5DTQfL4x2Yf', 'x-amz-request-id': 'b8768c80-01ca-419f-b565-fc51b718a27f', 'content-length': '1000000'}
2025-01-08 15:58:07,382 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f5588bdbc10&gt;
2025-01-08 15:58:07,382 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f558b49eca0&gt;
2025-01-08 15:58:07,382 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f5589e55760&gt;
2025-01-08 15:58:07,382 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:07,382 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5589e55820&gt;&gt;
2025-01-08 15:58:07,383 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f558a929d30&gt;
2025-01-08 15:58:07,397 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
Completed 256.0 KiB/976.6 KiB (4.2 MiB/s) with 1 file(s) remaining
2025-01-08 15:58:07,398 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-01-08 15:58:07,398 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f5588c0edf0&gt;, 'offset': 0}
Completed 512.0 KiB/976.6 KiB (6.1 MiB/s) with 1 file(s) remaining
2025-01-08 15:58:07,420 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2025-01-08 15:58:07,420 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-01-08 15:58:07,420 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f5588c0edf0&gt;, 'offset': 262144}
Completed 768.0 KiB/976.6 KiB (7.0 MiB/s) with 1 file(s) remaining
2025-01-08 15:58:07,445 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-01-08 15:58:07,445 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-01-08 15:58:07,445 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f5588c0edf0&gt;, 'offset': 524288}
Completed 976.6 KiB/976.6 KiB (7.5 MiB/s) with 1 file(s) remaining
2025-01-08 15:58:07,465 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2025-01-08 15:58:07,466 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-01-08 15:58:07,466 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f5588c0edf0&gt;, 'offset': 786432}
2025-01-08 15:58:07,466 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2025-01-08 15:58:07,466 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2025-01-08 15:58:07,466 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f5588c0edf0&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f5589c5ae50&gt;}
2025-01-08 15:58:07,467 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/small_file to ../../tmp/small_file_downloaded
2025-01-08 15:58:07,468 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250108 15:58:07.557" endtime="20250108 15:58:07.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:07.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:07.558" endtime="20250108 15:58:07.558"/>
</kw>
<status status="PASS" starttime="20250108 15:58:06.862" endtime="20250108 15:58:07.559"/>
</kw>
<msg timestamp="20250108 15:58:07.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:06.862" endtime="20250108 15:58:07.559"/>
</kw>
<msg timestamp="20250108 15:58:07.560" level="INFO">${output} = 2025-01-08 15:58:07,201 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:07,201 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:06.861" endtime="20250108 15:58:07.560"/>
</kw>
<msg timestamp="20250108 15:58:07.560" level="INFO">${result} = 2025-01-08 15:58:07,201 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:07,201 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:06.861" endtime="20250108 15:58:07.560"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250108 15:58:07.560" endtime="20250108 15:58:07.561"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20250108 15:58:07.561" endtime="20250108 15:58:07.562"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:07.565" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:08.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:08.082" level="INFO">${output} = delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20250108 15:58:07.563" endtime="20250108 15:58:08.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:08.083" level="INFO">delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20250108 15:58:08.082" endtime="20250108 15:58:08.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:08.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:08.083" endtime="20250108 15:58:08.083"/>
</kw>
<status status="PASS" starttime="20250108 15:58:07.563" endtime="20250108 15:58:08.083"/>
</kw>
<msg timestamp="20250108 15:58:08.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:07.563" endtime="20250108 15:58:08.083"/>
</kw>
<msg timestamp="20250108 15:58:08.083" level="INFO">${output} = delete: s3://encrypted/small_file</msg>
<status status="PASS" starttime="20250108 15:58:07.562" endtime="20250108 15:58:08.083"/>
</kw>
<status status="PASS" starttime="20250108 15:58:07.562" endtime="20250108 15:58:08.084"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:08.087" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:08.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:08.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:08.084" endtime="20250108 15:58:08.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:08.091" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:08.091" endtime="20250108 15:58:08.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:08.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:08.091" endtime="20250108 15:58:08.091"/>
</kw>
<status status="PASS" starttime="20250108 15:58:08.084" endtime="20250108 15:58:08.092"/>
</kw>
<msg timestamp="20250108 15:58:08.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:08.084" endtime="20250108 15:58:08.092"/>
</kw>
<status status="PASS" starttime="20250108 15:58:08.084" endtime="20250108 15:58:08.092"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:06.850" endtime="20250108 15:58:08.092"/>
</test>
<test id="s1-s3-s14-t19" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="237">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:08.096" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:08.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:08.102" level="INFO">${output} = 28c9c29503c8851396360a2276130295</msg>
<status status="PASS" starttime="20250108 15:58:08.094" endtime="20250108 15:58:08.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:08.102" level="INFO">28c9c29503c8851396360a2276130295</msg>
<status status="PASS" starttime="20250108 15:58:08.102" endtime="20250108 15:58:08.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:08.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:08.103" endtime="20250108 15:58:08.103"/>
</kw>
<status status="PASS" starttime="20250108 15:58:08.094" endtime="20250108 15:58:08.103"/>
</kw>
<msg timestamp="20250108 15:58:08.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:08.094" endtime="20250108 15:58:08.103"/>
</kw>
<msg timestamp="20250108 15:58:08.103" level="INFO">${file_md5_checksum} = 28c9c29503c8851396360a2276130295</msg>
<status status="PASS" starttime="20250108 15:58:08.093" endtime="20250108 15:58:08.103"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:08.106" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://encrypted/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:08.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:08.681" level="INFO">${output} = 2025-01-08 15:58:08,420 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:08,420 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:08.105" endtime="20250108 15:58:08.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:08.682" level="INFO">2025-01-08 15:58:08,420 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:08,420 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://encrypted/test_file']
2025-01-08 15:58:08,420 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f362d1bb820&gt;
2025-01-08 15:58:08,420 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f362daa5c10&gt;
2025-01-08 15:58:08,420 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f362d796e50&gt;
2025-01-08 15:58:08,422 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-01-08 15:58:08,424 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f362d2284c0&gt;
2025-01-08 15:58:08,424 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f362d16c820&gt;
2025-01-08 15:58:08,424 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f362d240310&gt;
2025-01-08 15:58:08,424 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,425 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f362d16c820&gt;
2025-01-08 15:58:08,425 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f362d240310&gt;
2025-01-08 15:58:08,426 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,426 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,426 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f362d766c70&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f362d766c70&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f362d766c70&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,427 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,428 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f362d766c70&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f362d766c70&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f362d766c70&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,429 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,430 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,430 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f362d766c70&gt;
2025-01-08 15:58:08,430 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2025-01-08 15:58:08,430 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,430 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,430 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f362d0c54c0&gt;
2025-01-08 15:58:08,430 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-01-08 15:58:08,430 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-01-08 15:58:08,432 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-01-08 15:58:08,455 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-01-08 15:58:08,455 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f362ecdb9d0&gt;
2025-01-08 15:58:08,462 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-01-08 15:58:08,470 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-01-08 15:58:08,490 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-01-08 15:58:08,493 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-01-08 15:58:08,495 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f362dddea60&gt;
2025-01-08 15:58:08,495 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f362ddde820&gt;
2025-01-08 15:58:08,495 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:08,498 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:08,500 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-01-08 15:58:08,500 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:08,500 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:08,501 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:08,501 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:08,501 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f362ecdb9d0&gt;
2025-01-08 15:58:08,502 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f362dddea60&gt;
2025-01-08 15:58:08,502 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f362ddde820&gt;
2025-01-08 15:58:08,502 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:08,504 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:08,505 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:08,505 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:08,506 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:08,506 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:08,506 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f362ecdb9d0&gt;
2025-01-08 15:58:08,507 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f362dddea60&gt;
2025-01-08 15:58:08,507 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f362ddde820&gt;
2025-01-08 15:58:08,507 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:08,509 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:08,511 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:08,511 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:08,511 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:08,511 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:08,512 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-01-08 15:58:08,513 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:08,513 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f362c4f5880&gt;}) about to wait for the following futures []
2025-01-08 15:58:08,513 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f362c4f5880&gt;}) done waiting for dependent futures
2025-01-08 15:58:08,513 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f362c4f5880&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f362c70c940&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f362c4ebe20&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f362c4ebeb0&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f362c4f2130&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f362c4f5880&gt;}
2025-01-08 15:58:08,514 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f362c4f2130&gt; for transfer request: 0.
2025-01-08 15:58:08,514 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:08,514 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2025-01-08 15:58:08,514 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2025-01-08 15:58:08,514 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:08,514 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f362c70c940&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f362b48a130&gt;, 'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2025-01-08 15:58:08,515 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f362dd294c0&gt;
2025-01-08 15:58:08,515 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f362dd268b0&gt;
2025-01-08 15:58:08,515 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f362dd29dc0&gt;
2025-01-08 15:58:08,515 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f362dd26820&gt;
2025-01-08 15:58:08,515 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f362dd2c700&gt;
2025-01-08 15:58:08,515 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f362c6e5880&gt;&gt;
2025-01-08 15:58:08,515 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f362c6ee730&gt;&gt;
2025-01-08 15:58:08,515 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f362dd26670&gt;
2025-01-08 15:58:08,515 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f362dd2c8b0&gt;
2025-01-08 15:58:08,515 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f362c6e5880&gt;&gt;
2025-01-08 15:58:08,516 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:08,516 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:08,516 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:08,516 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:08,517 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f362de9a790&gt;
2025-01-08 15:58:08,519 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f362dd26b80&gt;
2025-01-08 15:58:08,519 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-01-08 15:58:08,519 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f362c6e5850&gt;&gt;
2025-01-08 15:58:08,519 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f362dd26280&gt;
2025-01-08 15:58:08,519 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f362dd2cd30&gt;
2025-01-08 15:58:08,519 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f362dd29ee0&gt;
2025-01-08 15:58:08,519 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'KMnClQPIhROWNgoidhMClQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f362b48a130&gt;, 'auth_path': '/encrypted/test_file', 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f362c70cac0&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'test_file', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f362b48a130&gt;, 'Metadata': {'ETag': 'custom-etag-value'}}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:08,519 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f362d461790&gt;
2025-01-08 15:58:08,520 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f362c70ca30&gt;&gt;
2025-01-08 15:58:08,520 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f362dd264c0&gt;
2025-01-08 15:58:08,520 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f362dd2c820&gt;
2025-01-08 15:58:08,520 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f362c6e5850&gt;&gt;
2025-01-08 15:58:08,521 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:08,521 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_file

content-md5:KMnClQPIhROWNgoidhMClQ==
host:s3g:9878
x-amz-content-sha256:13426338e20389c4fcc86112aac5e4c94429ef68026b867c01346516e245a3a8
x-amz-date:20250108T155808Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
13426338e20389c4fcc86112aac5e4c94429ef68026b867c01346516e245a3a8
2025-01-08 15:58:08,521 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155808Z
20250108/us-west-1/s3/aws4_request
9c34a307bfeca45a1c9bd9621c6819f92cceffeee28fbe49302e5982b5f57a97
2025-01-08 15:58:08,521 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
7d437b3a8a497f8b4ab76769b7c781a8be6da9528088c9e54b90c1f845f89d50
2025-01-08 15:58:08,521 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f362d461820&gt;
2025-01-08 15:58:08,521 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f362dd2c670&gt;
2025-01-08 15:58:08,521 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'KMnClQPIhROWNgoidhMClQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250108T155808Z', 'X-Amz-Content-SHA256': b'13426338e20389c4fcc86112aac5e4c94429ef68026b867c01346516e245a3a8', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=7d437b3a8a497f8b4ab76769b7c781a8be6da9528088c9e54b90c1f845f89d50', 'amz-sdk-invocation-id': b'59d90937-bb12-4e47-8363-37345d488b0b', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2025-01-08 15:58:08,522 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:08,523 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-01-08 15:58:08,544 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (7.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (14.7 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (21.2 MiB/s) with 1 file(s) remaining
2025-01-08 15:58:08,611 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_file HTTP/1.1" 200 0
2025-01-08 15:58:08,611 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f362dd2cb80&gt;
2025-01-08 15:58:08,611 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f362dd2c9d0&gt;
2025-01-08 15:58:08,611 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:08 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:08 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"28c9c29503c8851396360a2276130295"', 'server': 'Ozone', 'x-amz-id-2': 'IxxAl7FHA0TXi', 'x-amz-request-id': '89817b42-3f89-4728-8056-bee5e75eacd2', 'content-length': '0'}
2025-01-08 15:58:08,611 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-01-08 15:58:08,612 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f362dd2cca0&gt;
2025-01-08 15:58:08,612 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f362c6e57c0&gt;
2025-01-08 15:58:08,612 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:08,612 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f362c6e5880&gt;&gt;
2025-01-08 15:58:08,612 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f362d1b7d30&gt;
Completed 976.6 KiB/976.6 KiB (9.7 MiB/s) with 1 file(s) remaining 
2025-01-08 15:58:08,613 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://encrypted/test_file           
2025-01-08 15:58:08,613 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250108 15:58:08.682" endtime="20250108 15:58:08.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:08.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:08.683" endtime="20250108 15:58:08.683"/>
</kw>
<status status="PASS" starttime="20250108 15:58:08.104" endtime="20250108 15:58:08.683"/>
</kw>
<msg timestamp="20250108 15:58:08.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:08.104" endtime="20250108 15:58:08.683"/>
</kw>
<msg timestamp="20250108 15:58:08.684" level="INFO">${output} = 2025-01-08 15:58:08,420 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:08,420 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:08.104" endtime="20250108 15:58:08.684"/>
</kw>
<status status="PASS" starttime="20250108 15:58:08.103" endtime="20250108 15:58:08.684"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:08.687" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:09.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:09.272" level="INFO">${output} = 2025-01-08 15:58:08,987 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:08,988 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:08.685" endtime="20250108 15:58:09.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:09.273" level="INFO">2025-01-08 15:58:08,987 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:08,988 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/test_file', '/tmp/test_file_downloaded']
2025-01-08 15:58:08,988 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f7bee1e4820&gt;
2025-01-08 15:58:08,988 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f7beeacec10&gt;
2025-01-08 15:58:08,988 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f7bee7c0e50&gt;
2025-01-08 15:58:08,989 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-01-08 15:58:08,991 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f7bee2514c0&gt;
2025-01-08 15:58:08,992 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f7bee195820&gt;
2025-01-08 15:58:08,992 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f7bee268310&gt;
2025-01-08 15:58:08,992 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,992 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f7bee195820&gt;
2025-01-08 15:58:08,993 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f7bee268310&gt;
2025-01-08 15:58:08,994 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,994 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,994 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7bee78fc70&gt;
2025-01-08 15:58:08,994 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,994 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7bee78fc70&gt;
2025-01-08 15:58:08,994 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,994 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7bee78fc70&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,995 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7bee78fc70&gt;
2025-01-08 15:58:08,996 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,997 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,997 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,997 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7bee78fc70&gt;
2025-01-08 15:58:08,997 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,997 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f7bee78fc70&gt;
2025-01-08 15:58:08,997 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,997 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,997 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,997 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,997 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,998 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,998 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f7bee0ee4c0&gt;
2025-01-08 15:58:08,998 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-01-08 15:58:08,998 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-01-08 15:58:08,999 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-01-08 15:58:09,022 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-01-08 15:58:09,023 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f7befd049d0&gt;
2025-01-08 15:58:09,029 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-01-08 15:58:09,037 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-01-08 15:58:09,057 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-01-08 15:58:09,060 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-01-08 15:58:09,062 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f7beee07a60&gt;
2025-01-08 15:58:09,062 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f7beee07820&gt;
2025-01-08 15:58:09,063 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:09,066 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:09,068 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-01-08 15:58:09,068 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:09,068 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:09,069 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:09,069 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:09,069 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f7befd049d0&gt;
2025-01-08 15:58:09,070 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f7beee07a60&gt;
2025-01-08 15:58:09,070 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f7beee07820&gt;
2025-01-08 15:58:09,070 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:09,072 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:09,074 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:09,074 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:09,074 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:09,074 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:09,074 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f7befd049d0&gt;
2025-01-08 15:58:09,075 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f7beee07a60&gt;
2025-01-08 15:58:09,075 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f7beee07820&gt;
2025-01-08 15:58:09,075 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:09,078 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:09,079 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:09,079 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:09,080 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:09,080 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:09,080 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-01-08 15:58:09,081 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f7beed4e8b0&gt;
2025-01-08 15:58:09,081 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f7beed4e820&gt;
2025-01-08 15:58:09,081 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f7beed55700&gt;
2025-01-08 15:58:09,081 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f7bed511a30&gt;&gt;
2025-01-08 15:58:09,081 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f7bed70c940&gt;&gt;
2025-01-08 15:58:09,081 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f7beed4e670&gt;
2025-01-08 15:58:09,081 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f7beed558b0&gt;
2025-01-08 15:58:09,081 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f7bed511a30&gt;&gt;
2025-01-08 15:58:09,081 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:09,082 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:09,082 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:09,082 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:09,083 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f7beed4eb80&gt;
2025-01-08 15:58:09,083 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f7bed511a00&gt;&gt;
2025-01-08 15:58:09,083 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f7beed4e280&gt;
2025-01-08 15:58:09,083 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7f7beed55d30&gt;
2025-01-08 15:58:09,083 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f7beed52ee0&gt;
2025-01-08 15:58:09,083 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/test_file', 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f7bed53fca0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'test_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:09,083 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f7bed53fc10&gt;&gt;
2025-01-08 15:58:09,083 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f7beed4e4c0&gt;
2025-01-08 15:58:09,083 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f7beed55820&gt;
2025-01-08 15:58:09,083 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f7bed511a00&gt;&gt;
2025-01-08 15:58:09,084 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:09,084 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250108T155809Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-01-08 15:58:09,084 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155809Z
20250108/us-west-1/s3/aws4_request
1ea8e36b1186e3573afbf74dde8f147b0517f98e4235d52e4c8a6858e2865acd
2025-01-08 15:58:09,084 - MainThread - botocore.auth - DEBUG - Signature:
a2b01766b0e200915a646fdae72f1369b1a91ee3cf5d7a5e2ef262b6602b78a7
2025-01-08 15:58:09,084 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f7beed55670&gt;
2025-01-08 15:58:09,084 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/test_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250108T155809Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=a2b01766b0e200915a646fdae72f1369b1a91ee3cf5d7a5e2ef262b6602b78a7', 'amz-sdk-invocation-id': b'31836834-e051-4498-9403-7851d9a56fbe', 'amz-sdk-request': b'attempt=1'}&gt;
2025-01-08 15:58:09,084 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:09,093 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/test_file HTTP/1.1" 200 0
2025-01-08 15:58:09,094 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f7beed55b80&gt;
2025-01-08 15:58:09,094 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7f7beed559d0&gt;
2025-01-08 15:58:09,094 - MainThread - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:09 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:09 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"28c9c29503c8851396360a2276130295"', 'last-modified': 'Wed, 08 Jan 2025 15:58:08 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'server': 'Ozone', 'x-amz-id-2': 'diMocLRxihwYYgd', 'x-amz-request-id': '41d18c73-2fb1-4da6-8277-1971764f860a', 'content-length': '1000000'}
2025-01-08 15:58:09,094 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-01-08 15:58:09,094 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7f7beed55ca0&gt;
2025-01-08 15:58:09,094 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f7bed511970&gt;
2025-01-08 15:58:09,095 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:09,095 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f7bed511a30&gt;&gt;
2025-01-08 15:58:09,095 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f7bee1e0d30&gt;
2025-01-08 15:58:09,095 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:09,096 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7bec4c4820&gt;}) about to wait for the following futures []
2025-01-08 15:58:09,096 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7bec4c4820&gt;}) done waiting for dependent futures
2025-01-08 15:58:09,096 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7bec4c4820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f7bed7328e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f7bed511dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f7bed511e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f7bed5160d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f7bec4c4820&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f7bed516190&gt;}
2025-01-08 15:58:09,096 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f7bed5160d0&gt; for transfer request: 0.
2025-01-08 15:58:09,097 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:09,097 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2025-01-08 15:58:09,097 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2025-01-08 15:58:09,097 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f7bed7328e0&gt;, 'bucket': 'encrypted', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f7bec4c4dc0&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f7bed519e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f7bec4c4820&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f7bed519eb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f7bec4c4820&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f7bec4c4340&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f7bec4c4820&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f7bec4c42e0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f7bec4c4820&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f7bec4c4d00&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-01-08 15:58:09,097 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f7beed4e8b0&gt;
2025-01-08 15:58:09,097 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f7beed4e820&gt;
2025-01-08 15:58:09,097 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f7beed55700&gt;
2025-01-08 15:58:09,097 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f7bed70c820&gt;&gt;
2025-01-08 15:58:09,097 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f7bed791730&gt;&gt;
2025-01-08 15:58:09,097 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f7beed4e670&gt;
2025-01-08 15:58:09,098 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f7beed558b0&gt;
2025-01-08 15:58:09,098 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f7bed70c820&gt;&gt;
2025-01-08 15:58:09,098 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:09,098 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:09,099 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:09,099 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:09,099 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f7beed4eb80&gt;
2025-01-08 15:58:09,099 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f7bed70c7f0&gt;&gt;
2025-01-08 15:58:09,099 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f7beed4e280&gt;
2025-01-08 15:58:09,099 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f7beed55d30&gt;
2025-01-08 15:58:09,099 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f7beed52ee0&gt;
2025-01-08 15:58:09,099 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/test_file', 'url': 'http://s3g:9878/encrypted/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f7bed732a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'test_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'test_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f7bee48a790&gt;
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f7bed7329d0&gt;&gt;
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f7beed4e4c0&gt;
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f7beed55820&gt;
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f7bed70c7f0&gt;&gt;
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250108T155809Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155809Z
20250108/us-west-1/s3/aws4_request
99232ae02ce42f4fe180e1d943d7d9be3ae9921adcd7e4411a25fb43c8ec4571
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
75e87f92f635ec1cc6fad67b26d8cb3ac8a3d72db9b2590143b98bec49264401
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f7bee48a820&gt;
2025-01-08 15:58:09,100 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f7beed55670&gt;
2025-01-08 15:58:09,101 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/test_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250108T155809Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=75e87f92f635ec1cc6fad67b26d8cb3ac8a3d72db9b2590143b98bec49264401', 'amz-sdk-invocation-id': b'fddf4936-d105-4e53-b695-4aaefdd3229e', 'amz-sdk-request': b'attempt=1'}&gt;
2025-01-08 15:58:09,101 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:09,101 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:09,127 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/test_file HTTP/1.1" 200 1000000
2025-01-08 15:58:09,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f7beed55b80&gt;
2025-01-08 15:58:09,127 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f7beed559d0&gt;
2025-01-08 15:58:09,128 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:09 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:09 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'accept-ranges': 'bytes', 'etag': '"28c9c29503c8851396360a2276130295"', 'last-modified': 'Wed, 08 Jan 2025 15:58:08 GMT', 'server': 'Ozone', 'x-amz-id-2': 'tPkDNuI8Q', 'x-amz-request-id': 'b370c37f-8be0-47f0-9612-051086eae19c', 'content-length': '1000000'}
2025-01-08 15:58:09,128 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f7bec490b80&gt;
2025-01-08 15:58:09,128 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f7beed55ca0&gt;
2025-01-08 15:58:09,128 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f7bed70c760&gt;
2025-01-08 15:58:09,128 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:09,128 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f7bed70c820&gt;&gt;
2025-01-08 15:58:09,129 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f7bee1e0d30&gt;
2025-01-08 15:58:09,147 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-01-08 15:58:09,147 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-01-08 15:58:09,147 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f7bec4c4dc0&gt;, 'offset': 0}
Completed 256.0 KiB/976.6 KiB (4.9 MiB/s) with 1 file(s) remaining
2025-01-08 15:58:09,164 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (7.4 MiB/s) with 1 file(s) remaining
2025-01-08 15:58:09,164 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-01-08 15:58:09,164 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f7bec4c4dc0&gt;, 'offset': 262144}
2025-01-08 15:58:09,179 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
Completed 768.0 KiB/976.6 KiB (9.1 MiB/s) with 1 file(s) remaining
2025-01-08 15:58:09,179 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-01-08 15:58:09,179 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f7bec4c4dc0&gt;, 'offset': 524288}
2025-01-08 15:58:09,202 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
Completed 976.6 KiB/976.6 KiB (9.1 MiB/s) with 1 file(s) remaining
2025-01-08 15:58:09,202 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-01-08 15:58:09,202 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f7bec4c4dc0&gt;, 'offset': 786432}
2025-01-08 15:58:09,203 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2025-01-08 15:58:09,203 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2025-01-08 15:58:09,203 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f7bec4c4dc0&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f7bed511e50&gt;}
2025-01-08 15:58:09,203 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/test_file to ../../tmp/test_file_downloaded
2025-01-08 15:58:09,204 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250108 15:58:09.272" endtime="20250108 15:58:09.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:09.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:09.274" endtime="20250108 15:58:09.274"/>
</kw>
<status status="PASS" starttime="20250108 15:58:08.685" endtime="20250108 15:58:09.274"/>
</kw>
<msg timestamp="20250108 15:58:09.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:08.685" endtime="20250108 15:58:09.274"/>
</kw>
<msg timestamp="20250108 15:58:09.275" level="INFO">${output} = 2025-01-08 15:58:08,987 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:08,988 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:08.684" endtime="20250108 15:58:09.275"/>
</kw>
<msg timestamp="20250108 15:58:09.275" level="INFO">${result} = 2025-01-08 15:58:08,987 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:08,988 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:08.684" endtime="20250108 15:58:09.276"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250108 15:58:09.277" level="INFO">${match} = HEAD /encrypted/test_file HTTP/1.1" 200 0
2025-01-08 15:58:09,094 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f7beed55b8...</msg>
<msg timestamp="20250108 15:58:09.277" level="INFO">${ETag} = 28c9c29503c8851396360a2276130295</msg>
<msg timestamp="20250108 15:58:09.277" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20250108 15:58:09.276" endtime="20250108 15:58:09.277"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:58:09.277" endtime="20250108 15:58:09.277"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:58:09.277" endtime="20250108 15:58:09.277"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:58:09.278" endtime="20250108 15:58:09.278"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:09.281" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:09.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:09.751" level="INFO">${output} = delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20250108 15:58:09.279" endtime="20250108 15:58:09.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:09.752" level="INFO">delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20250108 15:58:09.751" endtime="20250108 15:58:09.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:09.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:09.752" endtime="20250108 15:58:09.752"/>
</kw>
<status status="PASS" starttime="20250108 15:58:09.279" endtime="20250108 15:58:09.752"/>
</kw>
<msg timestamp="20250108 15:58:09.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:09.278" endtime="20250108 15:58:09.753"/>
</kw>
<msg timestamp="20250108 15:58:09.753" level="INFO">${output} = delete: s3://encrypted/test_file</msg>
<status status="PASS" starttime="20250108 15:58:09.278" endtime="20250108 15:58:09.753"/>
</kw>
<status status="PASS" starttime="20250108 15:58:09.278" endtime="20250108 15:58:09.753"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:09.756" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:09.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:09.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:09.754" endtime="20250108 15:58:09.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:09.761" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:09.760" endtime="20250108 15:58:09.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:09.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:09.761" endtime="20250108 15:58:09.761"/>
</kw>
<status status="PASS" starttime="20250108 15:58:09.754" endtime="20250108 15:58:09.761"/>
</kw>
<msg timestamp="20250108 15:58:09.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:09.753" endtime="20250108 15:58:09.761"/>
</kw>
<status status="PASS" starttime="20250108 15:58:09.753" endtime="20250108 15:58:09.761"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:09.764" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:09.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:09.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:09.762" endtime="20250108 15:58:09.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:09.769" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:09.768" endtime="20250108 15:58:09.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:09.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:09.769" endtime="20250108 15:58:09.769"/>
</kw>
<status status="PASS" starttime="20250108 15:58:09.762" endtime="20250108 15:58:09.770"/>
</kw>
<msg timestamp="20250108 15:58:09.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:09.762" endtime="20250108 15:58:09.770"/>
</kw>
<status status="PASS" starttime="20250108 15:58:09.762" endtime="20250108 15:58:09.770"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:08.092" endtime="20250108 15:58:09.770"/>
</test>
<test id="s1-s3-s14-t20" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="250">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:09.774" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20250108 15:58:09.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:09.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:09.772" endtime="20250108 15:58:09.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:09.825" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:09.824" endtime="20250108 15:58:09.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:09.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:09.825" endtime="20250108 15:58:09.825"/>
</kw>
<status status="PASS" starttime="20250108 15:58:09.771" endtime="20250108 15:58:09.826"/>
</kw>
<msg timestamp="20250108 15:58:09.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:09.771" endtime="20250108 15:58:09.826"/>
</kw>
<status status="PASS" starttime="20250108 15:58:09.771" endtime="20250108 15:58:09.826"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:09.830" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:10.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:10.756" level="INFO">${output} = 2025-01-08 15:58:10,136 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:10,136 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:09.827" endtime="20250108 15:58:10.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:10.757" level="INFO">2025-01-08 15:58:10,136 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:10,136 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://encrypted/']
2025-01-08 15:58:10,136 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f1053407820&gt;
2025-01-08 15:58:10,136 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f1053cf1c10&gt;
2025-01-08 15:58:10,136 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f10539e3e50&gt;
2025-01-08 15:58:10,138 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-01-08 15:58:10,140 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f10534744c0&gt;
2025-01-08 15:58:10,140 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f10533b8820&gt;
2025-01-08 15:58:10,140 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f105348b310&gt;
2025-01-08 15:58:10,141 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,141 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f10533b8820&gt;
2025-01-08 15:58:10,141 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f105348b310&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10539b2c70&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10539b2c70&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10539b2c70&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,143 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,144 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10539b2c70&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10539b2c70&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f10539b2c70&gt;
2025-01-08 15:58:10,145 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,146 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10533114c0&gt;
2025-01-08 15:58:10,146 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-01-08 15:58:10,146 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-01-08 15:58:10,147 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-01-08 15:58:10,171 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-01-08 15:58:10,172 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1054f279d0&gt;
2025-01-08 15:58:10,178 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-01-08 15:58:10,187 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-01-08 15:58:10,207 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-01-08 15:58:10,210 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-01-08 15:58:10,211 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f105402aa60&gt;
2025-01-08 15:58:10,211 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f105402a820&gt;
2025-01-08 15:58:10,212 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:10,215 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:10,217 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-01-08 15:58:10,217 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:10,217 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:10,217 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:10,218 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:10,218 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1054f279d0&gt;
2025-01-08 15:58:10,219 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f105402aa60&gt;
2025-01-08 15:58:10,219 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f105402a820&gt;
2025-01-08 15:58:10,219 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:10,221 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:10,222 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:10,223 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:10,223 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:10,223 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:10,223 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1054f279d0&gt;
2025-01-08 15:58:10,224 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f105402aa60&gt;
2025-01-08 15:58:10,224 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f105402a820&gt;
2025-01-08 15:58:10,224 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:10,226 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:10,228 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:10,228 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:10,228 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:10,228 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:10,229 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-01-08 15:58:10,230 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:10,230 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f105273d820&gt;}) about to wait for the following futures []
2025-01-08 15:58:10,230 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f105273d820&gt;}) done waiting for dependent futures
2025-01-08 15:58:10,230 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f105273d820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f10529558e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f1052734dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f1052734e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f105273a0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f105273d820&gt;}
2025-01-08 15:58:10,231 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f105273a0d0&gt; for transfer request: 0.
2025-01-08 15:58:10,231 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:10,231 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2025-01-08 15:58:10,231 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-01-08 15:58:10,231 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f10529558e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}
2025-01-08 15:58:10,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f1053f754c0&gt;
2025-01-08 15:58:10,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f1053f718b0&gt;
2025-01-08 15:58:10,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f1053f71820&gt;
2025-01-08 15:58:10,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f1053f78700&gt;
2025-01-08 15:58:10,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f10529b56d0&gt;&gt;
2025-01-08 15:58:10,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f1053f71670&gt;
2025-01-08 15:58:10,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f1053f788b0&gt;
2025-01-08 15:58:10,232 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,232 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:10,233 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:10,233 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:10,233 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:10,234 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f1053f71b80&gt;
2025-01-08 15:58:10,234 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f105292f7f0&gt;&gt;
2025-01-08 15:58:10,234 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f1053f71280&gt;
2025-01-08 15:58:10,234 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f1053f78d30&gt;
2025-01-08 15:58:10,234 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1053f75ee0&gt;
2025-01-08 15:58:10,234 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1052955a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:10,234 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f10536ac790&gt;
2025-01-08 15:58:10,234 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f10529559d0&gt;&gt;
2025-01-08 15:58:10,235 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f1053f714c0&gt;
2025-01-08 15:58:10,235 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f1053f78820&gt;
2025-01-08 15:58:10,235 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f105292f7f0&gt;&gt;
2025-01-08 15:58:10,235 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:10,235 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250108T155810Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-01-08 15:58:10,235 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155810Z
20250108/us-west-1/s3/aws4_request
c0d5086d784500325edf438e54c46cec4b4dd9413a39ac8941a50c1582145974
2025-01-08 15:58:10,235 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
d56332775165588d1a4575aec6496d2c77047784a2f531d348cb2ba0a260e281
2025-01-08 15:58:10,235 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f10536ac820&gt;
2025-01-08 15:58:10,235 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f1053f78670&gt;
2025-01-08 15:58:10,235 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploads, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250108T155810Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=d56332775165588d1a4575aec6496d2c77047784a2f531d348cb2ba0a260e281', 'amz-sdk-invocation-id': b'e8cccc8b-0362-4448-a370-d58014c18cb1', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2025-01-08 15:58:10,236 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:10,236 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f105273a0d0&gt; for transfer request: 0.
2025-01-08 15:58:10,236 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:10,237 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f10506d2370&gt;]
2025-01-08 15:58:10,237 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10506d2370&gt;
2025-01-08 15:58:10,237 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f105273a0d0&gt; for transfer request: 0.
2025-01-08 15:58:10,237 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:10,237 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f10506d2370&gt;]
2025-01-08 15:58:10,237 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10506d2370&gt;
2025-01-08 15:58:10,238 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f105273a0d0&gt; for transfer request: 0.
2025-01-08 15:58:10,238 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:10,238 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f10506d2370&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f10506971c0&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f1050702a60&gt;]
2025-01-08 15:58:10,238 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10506d2370&gt;
2025-01-08 15:58:10,238 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:10,255 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploads HTTP/1.1" 200 287
2025-01-08 15:58:10,262 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f1053f78b80&gt;
2025-01-08 15:58:10,262 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.CreateMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f1053f789d0&gt;
2025-01-08 15:58:10,263 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:10 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:10 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'GTtiJhxEB7KpinD', 'x-amz-request-id': '970cad71-1c6b-4e56-86e5-f0c81809f804', 'content-length': '287'}
2025-01-08 15:58:10,263 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2025-01-08 15:58:10,263 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;function _update_status_code at 0x7f1053f78ca0&gt;
2025-01-08 15:58:10,263 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f105292f760&gt;
2025-01-08 15:58:10,263 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:10,263 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,263 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f1053403d30&gt;
2025-01-08 15:58:10,263 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f10529558e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f1050697520&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557'}
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f1053f718b0&gt;
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f1053f75dc0&gt;
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f1053f71820&gt;
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f1053f78700&gt;
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f10529b56d0&gt;&gt;
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f10506971c0&gt;
2025-01-08 15:58:10,265 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f1053f71670&gt;
2025-01-08 15:58:10,265 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f1053f788b0&gt;
2025-01-08 15:58:10,265 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,265 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:10,265 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:10,265 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:10,265 - ThreadPoolExecutor-0_2 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:10,265 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f10540e68b0&gt;
2025-01-08 15:58:10,264 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f10529558e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f1050702d30&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557'}
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f1053f718b0&gt;
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f1053f75dc0&gt;
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f1053f71820&gt;
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f1053f78700&gt;
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f10529b56d0&gt;&gt;
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f1053f71670&gt;
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f1053f788b0&gt;
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:10,266 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:10,267 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f10540e68b0&gt;
2025-01-08 15:58:10,270 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f1053f71b80&gt;
2025-01-08 15:58:10,270 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-01-08 15:58:10,270 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f105292f7f0&gt;&gt;
2025-01-08 15:58:10,270 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f1053f71280&gt;
2025-01-08 15:58:10,270 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f1053f78d30&gt;
2025-01-08 15:58:10,270 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1053f75ee0&gt;
2025-01-08 15:58:10,270 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'FhfV2vBQbYaDXH2RZnCkFA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f1050697520&gt;, 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1052955a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557', 'PartNumber': 2, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f1050697520&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:10,270 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f10536ac790&gt;
2025-01-08 15:58:10,271 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f10529559d0&gt;&gt;
2025-01-08 15:58:10,271 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f1053f714c0&gt;
2025-01-08 15:58:10,271 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f1053f78820&gt;
2025-01-08 15:58:10,271 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f105292f7f0&gt;&gt;
2025-01-08 15:58:10,273 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:10,273 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=2&amp;uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557
content-md5:FhfV2vBQbYaDXH2RZnCkFA==
host:s3g:9878
x-amz-content-sha256:ece430b65b00b734c0118a427857684638eb30faa25bd2968c49629f4984eeb2
x-amz-date:20250108T155810Z

content-md5;host;x-amz-content-sha256;x-amz-date
ece430b65b00b734c0118a427857684638eb30faa25bd2968c49629f4984eeb2
2025-01-08 15:58:10,273 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155810Z
20250108/us-west-1/s3/aws4_request
df7b128d05359c919ce2fe531fdb3ed214f72834f026308686ba3778d79a26e0
2025-01-08 15:58:10,273 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
27e41650eba6c7bb9660ba63736854b9b5517fb35c97eba4ed7fc20c8af5d488
2025-01-08 15:58:10,273 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f10536ac820&gt;
2025-01-08 15:58:10,273 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f1053f78670&gt;
2025-01-08 15:58:10,273 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'FhfV2vBQbYaDXH2RZnCkFA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250108T155810Z', 'X-Amz-Content-SHA256': b'ece430b65b00b734c0118a427857684638eb30faa25bd2968c49629f4984eeb2', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=27e41650eba6c7bb9660ba63736854b9b5517fb35c97eba4ed7fc20c8af5d488', 'amz-sdk-invocation-id': b'71bd6777-6702-4000-9f2b-1288e9315a27', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2025-01-08 15:58:10,274 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-01-08 15:58:10,284 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f1053f71b80&gt;
2025-01-08 15:58:10,284 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-01-08 15:58:10,284 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f105292f7f0&gt;&gt;
2025-01-08 15:58:10,284 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f1053f71280&gt;
2025-01-08 15:58:10,284 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_query_compatibility_header at 0x7f1053f78d30&gt;
2025-01-08 15:58:10,284 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1053f75ee0&gt;
2025-01-08 15:58:10,284 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': '9839utEAJ1iPxSBoRwTrbQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f1050702d30&gt;, 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1052955a60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557', 'PartNumber': 1, 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f1050702d30&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:10,284 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f10536ac790&gt;
2025-01-08 15:58:10,284 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f10529559d0&gt;&gt;
2025-01-08 15:58:10,285 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f1053f714c0&gt;
2025-01-08 15:58:10,285 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;function remove_arn_from_signing_path at 0x7f1053f78820&gt;
2025-01-08 15:58:10,285 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f105292f7f0&gt;&gt;
2025-01-08 15:58:10,292 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
2025-01-08 15:58:10,293 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:10,293 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/big_file
partNumber=1&amp;uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557
content-md5:9839utEAJ1iPxSBoRwTrbQ==
host:s3g:9878
x-amz-content-sha256:4748ae96a3811907ca1469340d1d4ea9c166d429fb8b7fdce6bfb7d586c25fa9
x-amz-date:20250108T155810Z

content-md5;host;x-amz-content-sha256;x-amz-date
4748ae96a3811907ca1469340d1d4ea9c166d429fb8b7fdce6bfb7d586c25fa9
2025-01-08 15:58:10,293 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155810Z
20250108/us-west-1/s3/aws4_request
76cc7f3d8251a3f3e7f7bd2d66ac3ea3dfbc1823e3a6daa11ae8b3c7964fce53
2025-01-08 15:58:10,293 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
50e4338308c795097fb0f0ab72ee4ac1d1f813f01476b874990e8677444620cd
2025-01-08 15:58:10,293 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f10536ac820&gt;
2025-01-08 15:58:10,294 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f1053f78670&gt;
2025-01-08 15:58:10,294 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/big_file?uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'9839utEAJ1iPxSBoRwTrbQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250108T155810Z', 'X-Amz-Content-SHA256': b'4748ae96a3811907ca1469340d1d4ea9c166d429fb8b7fdce6bfb7d586c25fa9', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=50e4338308c795097fb0f0ab72ee4ac1d1f813f01476b874990e8677444620cd', 'amz-sdk-invocation-id': b'16b81bc8-2370-4542-9689-857bfe0805bb', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2025-01-08 15:58:10,294 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-01-08 15:58:10,296 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
Completed 256.0 KiB/9.5 MiB (3.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (6.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (8.8 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (11.2 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/9.5 MiB (12.7 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/9.5 MiB (14.4 MiB/s) with 1 file(s) remaining 
2025-01-08 15:58:10,359 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 1.8 MiB/9.5 MiB (13.6 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/9.5 MiB (15.3 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/9.5 MiB (17.1 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/9.5 MiB (18.5 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/9.5 MiB (20.1 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/9.5 MiB (21.8 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/9.5 MiB (23.5 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/9.5 MiB (22.1 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/9.5 MiB (23.6 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/9.5 MiB (25.0 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/9.5 MiB (26.5 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/9.5 MiB (27.9 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/9.5 MiB (28.8 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/9.5 MiB (28.5 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/9.5 MiB (29.0 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/9.5 MiB (28.1 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/9.5 MiB (28.6 MiB/s) with 1 file(s) remaining 
2025-01-08 15:58:10,435 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557&amp;partNumber=2 HTTP/1.1" 200 0
2025-01-08 15:58:10,436 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f1053f78b80&gt;
2025-01-08 15:58:10,436 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f1053f789d0&gt;
2025-01-08 15:58:10,436 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:10 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:10 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '1617d5daf0506d86835c7d916670a414', 'server': 'Ozone', 'x-amz-id-2': 'i3ltvEumeM', 'x-amz-request-id': '097cc5cf-6bf9-4fe5-985c-def95f46fbc1', 'content-length': '0'}
2025-01-08 15:58:10,436 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2025-01-08 15:58:10,436 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f1053f78ca0&gt;
2025-01-08 15:58:10,436 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f105292f760&gt;
2025-01-08 15:58:10,436 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:10,436 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,437 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f1053403d30&gt;
2025-01-08 15:58:10,437 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 5.8 MiB/9.5 MiB (28.1 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/9.5 MiB (29.1 MiB/s) with 1 file(s) remaining 
Completed 6.3 MiB/9.5 MiB (29.9 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/9.5 MiB (30.8 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/9.5 MiB (31.6 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/9.5 MiB (32.4 MiB/s) with 1 file(s) remaining 
Completed 7.3 MiB/9.5 MiB (33.1 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/9.5 MiB (33.9 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/9.5 MiB (34.7 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/9.5 MiB (34.4 MiB/s) with 1 file(s) remaining 
Completed 8.3 MiB/9.5 MiB (34.6 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/9.5 MiB (35.4 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/9.5 MiB (35.7 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/9.5 MiB (36.4 MiB/s) with 1 file(s) remaining 
Completed 9.3 MiB/9.5 MiB (37.1 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/9.5 MiB (36.7 MiB/s) with 1 file(s) remaining 
2025-01-08 15:58:10,664 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/big_file?uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557&amp;partNumber=1 HTTP/1.1" 200 0
2025-01-08 15:58:10,664 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function _handle_200_error at 0x7f1053f78b80&gt;
2025-01-08 15:58:10,664 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.UploadPart: calling handler &lt;function handle_expires_header at 0x7f1053f789d0&gt;
2025-01-08 15:58:10,664 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:10 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:10 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': 'f7cdfdbad10027588fc520684704eb6d', 'server': 'Ozone', 'x-amz-id-2': 'pYoHCS88Z2oV3hE', 'x-amz-request-id': '48406d01-7166-4fae-9f81-c8a916e089c4', 'content-length': '0'}
2025-01-08 15:58:10,665 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2025-01-08 15:58:10,665 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;function _update_status_code at 0x7f1053f78ca0&gt;
2025-01-08 15:58:10,665 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f105292f760&gt;
2025-01-08 15:58:10,665 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:10,665 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,665 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f1053403d30&gt;
2025-01-08 15:58:10,665 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:10,665 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f1050702a60&gt;
2025-01-08 15:58:10,666 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2025-01-08 15:58:10,666 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f10529558e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {}, 'upload_id': '65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557', 'parts': [{'ETag': 'f7cdfdbad10027588fc520684704eb6d', 'PartNumber': 1}, {'ETag': '1617d5daf0506d86835c7d916670a414', 'PartNumber': 2}]}
2025-01-08 15:58:10,666 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function sse_md5 at 0x7f1053f718b0&gt;
2025-01-08 15:58:10,666 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f1053f71820&gt;
2025-01-08 15:58:10,666 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f1053f78700&gt;
2025-01-08 15:58:10,666 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,666 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f10529b56d0&gt;&gt;
2025-01-08 15:58:10,666 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f1053f71670&gt;
2025-01-08 15:58:10,666 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f1053f788b0&gt;
2025-01-08 15:58:10,666 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,667 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:10,667 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:10,667 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:10,667 - ThreadPoolExecutor-0_3 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:10,667 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f1053f71b80&gt;
2025-01-08 15:58:10,668 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f105292f7f0&gt;&gt;
2025-01-08 15:58:10,668 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f1053f71280&gt;
2025-01-08 15:58:10,668 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_query_compatibility_header at 0x7f1053f78d30&gt;
2025-01-08 15:58:10,668 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1053f75ee0&gt;
2025-01-08 15:58:10,668 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/big_file', 'query_string': {'uploadId': '65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;f7cdfdbad10027588fc520684704eb6d&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;1617d5daf0506d86835c7d916670a414&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file?uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1052955a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'UploadId': '65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557', 'MultipartUpload': {'Parts': [{'ETag': 'f7cdfdbad10027588fc520684704eb6d', 'PartNumber': 1}, {'ETag': '1617d5daf0506d86835c7d916670a414', 'PartNumber': 2}]}}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:10,668 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f10536ac790&gt;
2025-01-08 15:58:10,668 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f10529559d0&gt;&gt;
2025-01-08 15:58:10,668 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f1053f714c0&gt;
2025-01-08 15:58:10,668 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;function remove_arn_from_signing_path at 0x7f1053f78820&gt;
2025-01-08 15:58:10,668 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f105292f7f0&gt;&gt;
2025-01-08 15:58:10,669 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:10,669 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/encrypted/big_file
uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557
host:s3g:9878
x-amz-content-sha256:d81a53b26ea9cf626a4c2ef2e438ad86e9a1619bbd54b4030cc4b8c04b4126ff
x-amz-date:20250108T155810Z

host;x-amz-content-sha256;x-amz-date
d81a53b26ea9cf626a4c2ef2e438ad86e9a1619bbd54b4030cc4b8c04b4126ff
2025-01-08 15:58:10,669 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155810Z
20250108/us-west-1/s3/aws4_request
ffae191921b7a1e4032f3cff619001f0ba147d54c4b8a7252c81735de641b0e6
2025-01-08 15:58:10,669 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
4b7b3d28689fac2423e070f12584a984676c25a8cabce84ad10f8337ceb0f5a7
2025-01-08 15:58:10,669 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f10536ac820&gt;
2025-01-08 15:58:10,669 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f1053f78670&gt;
2025-01-08 15:58:10,669 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/encrypted/big_file?uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250108T155810Z', 'X-Amz-Content-SHA256': b'd81a53b26ea9cf626a4c2ef2e438ad86e9a1619bbd54b4030cc4b8c04b4126ff', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=4b7b3d28689fac2423e070f12584a984676c25a8cabce84ad10f8337ceb0f5a7', 'amz-sdk-invocation-id': b'7654e6d5-edc6-43d5-9784-ac5920b14718', 'amz-sdk-request': b'attempt=1', 'Content-Length': '267'}&gt;
2025-01-08 15:58:10,691 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /encrypted/big_file?uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557 HTTP/1.1" 200 290
2025-01-08 15:58:10,691 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function _handle_200_error at 0x7f1053f78b80&gt;
2025-01-08 15:58:10,691 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parse.s3.CompleteMultipartUpload: calling handler &lt;function handle_expires_header at 0x7f1053f789d0&gt;
2025-01-08 15:58:10,692 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:10 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:10 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '0NUK4cok3', 'x-amz-request-id': '9770d713-4c45-41c9-a976-ebdee6ec7249', 'content-length': '290'}
2025-01-08 15:58:10,692 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;encrypted&lt;/Location&gt;&lt;Bucket&gt;encrypted&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"aa57cb8378bc2530f9446774e723a34a-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2025-01-08 15:58:10,692 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function _update_status_code at 0x7f1053f78ca0&gt;
2025-01-08 15:58:10,692 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f105292f760&gt;
2025-01-08 15:58:10,692 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:10,692 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f105292f820&gt;&gt;
2025-01-08 15:58:10,692 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f1053403d30&gt;
2025-01-08 15:58:10,693 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://encrypted/big_file           
2025-01-08 15:58:10,694 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250108 15:58:10.757" endtime="20250108 15:58:10.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:10.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:10.758" endtime="20250108 15:58:10.758"/>
</kw>
<status status="PASS" starttime="20250108 15:58:09.827" endtime="20250108 15:58:10.759"/>
</kw>
<msg timestamp="20250108 15:58:10.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:09.827" endtime="20250108 15:58:10.759"/>
</kw>
<msg timestamp="20250108 15:58:10.760" level="INFO">${output} = 2025-01-08 15:58:10,136 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:10,136 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:09.826" endtime="20250108 15:58:10.760"/>
</kw>
<msg timestamp="20250108 15:58:10.760" level="INFO">${result} = 2025-01-08 15:58:10,136 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:10,136 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:09.826" endtime="20250108 15:58:10.761"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250108 15:58:10.762" level="INFO">${match} = POST /encrypted/big_file?uploadId=65ba5c2a-4451-40c0-89c2-3cd284abf7e0-113793557479358557 HTTP/1.1" 200 290
2025-01-08 15:58:10,691 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-par...</msg>
<msg timestamp="20250108 15:58:10.762" level="INFO">${etag1} = aa57cb8378bc2530f9446774e723a34a-2</msg>
<status status="PASS" starttime="20250108 15:58:10.761" endtime="20250108 15:58:10.762"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:10.765" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://encrypted/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:12.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:12.108" level="INFO">${output} = 2025-01-08 15:58:11,076 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:11,076 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:10.763" endtime="20250108 15:58:12.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:12.109" level="INFO">2025-01-08 15:58:11,076 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:11,076 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://encrypted/big_file', '/tmp/big_file_downloaded']
2025-01-08 15:58:11,076 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f09d8902820&gt;
2025-01-08 15:58:11,076 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f09d91ecc10&gt;
2025-01-08 15:58:11,076 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f09d8edde50&gt;
2025-01-08 15:58:11,078 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-01-08 15:58:11,080 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f09d896e4c0&gt;
2025-01-08 15:58:11,080 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f09d88b3820&gt;
2025-01-08 15:58:11,080 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f09d8985310&gt;
2025-01-08 15:58:11,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,080 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f09d88b3820&gt;
2025-01-08 15:58:11,081 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f09d8985310&gt;
2025-01-08 15:58:11,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,082 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09d8eabc70&gt;
2025-01-08 15:58:11,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09d8eabc70&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09d8eabc70&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09d8eabc70&gt;
2025-01-08 15:58:11,084 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09d8eabc70&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f09d8eabc70&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,085 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f09d880c4c0&gt;
2025-01-08 15:58:11,086 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-01-08 15:58:11,086 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-01-08 15:58:11,087 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-01-08 15:58:11,109 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-01-08 15:58:11,109 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f09da4229d0&gt;
2025-01-08 15:58:11,116 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-01-08 15:58:11,124 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-01-08 15:58:11,144 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-01-08 15:58:11,147 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-01-08 15:58:11,149 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f09d9525a60&gt;
2025-01-08 15:58:11,149 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f09d9525820&gt;
2025-01-08 15:58:11,149 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:11,153 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:11,154 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-01-08 15:58:11,155 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:11,155 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:11,155 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:11,155 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:11,156 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f09da4229d0&gt;
2025-01-08 15:58:11,156 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f09d9525a60&gt;
2025-01-08 15:58:11,156 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f09d9525820&gt;
2025-01-08 15:58:11,157 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:11,158 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:11,160 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:11,160 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:11,160 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:11,160 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:11,161 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f09da4229d0&gt;
2025-01-08 15:58:11,161 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f09d9525a60&gt;
2025-01-08 15:58:11,161 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f09d9525820&gt;
2025-01-08 15:58:11,162 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:11,164 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:11,166 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:11,166 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:11,166 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:11,166 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:11,167 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-01-08 15:58:11,167 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f09d946c8b0&gt;
2025-01-08 15:58:11,167 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f09d946c820&gt;
2025-01-08 15:58:11,167 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f09d9473700&gt;
2025-01-08 15:58:11,167 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f09d7c2fa30&gt;&gt;
2025-01-08 15:58:11,167 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f09d7e2a940&gt;&gt;
2025-01-08 15:58:11,167 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f09d946c670&gt;
2025-01-08 15:58:11,168 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f09d94738b0&gt;
2025-01-08 15:58:11,168 - MainThread - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f09d7c2fa30&gt;&gt;
2025-01-08 15:58:11,168 - MainThread - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:11,169 - MainThread - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:11,169 - MainThread - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:11,169 - MainThread - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:11,169 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f09d946cb80&gt;
2025-01-08 15:58:11,169 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f09d7c2fa00&gt;&gt;
2025-01-08 15:58:11,169 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f09d946c280&gt;
2025-01-08 15:58:11,169 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_query_compatibility_header at 0x7f09d9473d30&gt;
2025-01-08 15:58:11,169 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f09d9470ee0&gt;
2025-01-08 15:58:11,169 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f09d7c5dca0&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:11,170 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f09d7c5dc10&gt;&gt;
2025-01-08 15:58:11,170 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f09d946c4c0&gt;
2025-01-08 15:58:11,170 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f09d9473820&gt;
2025-01-08 15:58:11,170 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f09d7c2fa00&gt;&gt;
2025-01-08 15:58:11,170 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:11,170 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/encrypted/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250108T155811Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-01-08 15:58:11,170 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155811Z
20250108/us-west-1/s3/aws4_request
a3611de4c85634e6e5b8ef25d5b6ca1086ec022b6fcd585e71c7efe8c38b34f4
2025-01-08 15:58:11,170 - MainThread - botocore.auth - DEBUG - Signature:
1b7ef184d1bfcfa2bcde954dd8faa76a6f1b259715298f0bf2d8e6af3f9ae968
2025-01-08 15:58:11,170 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f09d9473670&gt;
2025-01-08 15:58:11,171 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/encrypted/big_file, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250108T155811Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=1b7ef184d1bfcfa2bcde954dd8faa76a6f1b259715298f0bf2d8e6af3f9ae968', 'amz-sdk-invocation-id': b'8b09a0e9-b58f-4766-b331-0fd297817eb7', 'amz-sdk-request': b'attempt=1'}&gt;
2025-01-08 15:58:11,171 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:11,180 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /encrypted/big_file HTTP/1.1" 200 0
2025-01-08 15:58:11,181 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function _handle_200_error at 0x7f09d9473b80&gt;
2025-01-08 15:58:11,181 - MainThread - botocore.hooks - DEBUG - Event before-parse.s3.HeadObject: calling handler &lt;function handle_expires_header at 0x7f09d94739d0&gt;
2025-01-08 15:58:11,181 - MainThread - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:11 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:11 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"aa57cb8378bc2530f9446774e723a34a-2"', 'x-amz-mp-parts-count': '2', 'last-modified': 'Wed, 08 Jan 2025 15:58:10 GMT', 'server': 'Ozone', 'x-amz-id-2': 'xYdPwTbqIlqzlG', 'x-amz-request-id': '5212c906-6e78-48d4-a6df-758fc198a4ab', 'content-length': '10000000'}
2025-01-08 15:58:11,181 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2025-01-08 15:58:11,182 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;function _update_status_code at 0x7f09d9473ca0&gt;
2025-01-08 15:58:11,182 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f09d7c2f970&gt;
2025-01-08 15:58:11,182 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:11,182 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f09d7c2fa30&gt;&gt;
2025-01-08 15:58:11,182 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f09d88fed30&gt;
2025-01-08 15:58:11,183 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,183 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;}) about to wait for the following futures []
2025-01-08 15:58:11,183 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;}) done waiting for dependent futures
2025-01-08 15:58:11,183 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f09d7e508e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f09d7c2fdc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f09d7c2fe50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c340d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt;}
2025-01-08 15:58:11,184 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c340d0&gt; for transfer request: 0.
2025-01-08 15:58:11,184 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,184 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2025-01-08 15:58:11,184 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2025-01-08 15:58:11,184 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f09d7e508e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f09d7c37e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f09d7c37eb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f09d6be2370&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f09d6be2310&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f09d6be2d30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-01-08 15:58:11,185 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f09d946c8b0&gt;
2025-01-08 15:58:11,185 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f09d946c820&gt;
2025-01-08 15:58:11,185 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f09d9473700&gt;
2025-01-08 15:58:11,185 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f09d7e2a820&gt;&gt;
2025-01-08 15:58:11,185 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f09d7eaf730&gt;&gt;
2025-01-08 15:58:11,185 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f09d946c670&gt;
2025-01-08 15:58:11,185 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f09d94738b0&gt;
2025-01-08 15:58:11,185 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f09d7e2a820&gt;&gt;
2025-01-08 15:58:11,185 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:11,186 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:11,186 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:11,186 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:11,186 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f09d946cb80&gt;
2025-01-08 15:58:11,184 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c340d0&gt; for transfer request: 0.
2025-01-08 15:58:11,187 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f09d7e2a7f0&gt;&gt;
2025-01-08 15:58:11,187 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,187 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f09d946c280&gt;
2025-01-08 15:58:11,187 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f09d9473d30&gt;
2025-01-08 15:58:11,187 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f09d9470ee0&gt;
2025-01-08 15:58:11,187 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f09d7e50a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'Range': 'bytes=0-8388607'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:11,188 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f09d8ba7790&gt;
2025-01-08 15:58:11,188 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f09d7e509d0&gt;&gt;
2025-01-08 15:58:11,188 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f09d946c4c0&gt;
2025-01-08 15:58:11,188 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f09d9473820&gt;
2025-01-08 15:58:11,188 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f09d7e2a7f0&gt;&gt;
2025-01-08 15:58:11,188 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2025-01-08 15:58:11,189 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:11,189 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250108T155811Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-01-08 15:58:11,189 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155811Z
20250108/us-west-1/s3/aws4_request
9418f946fd335976a10b1bb1d8f731b7d78e2200ba2c11759427b067fc6dd3b6
2025-01-08 15:58:11,189 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
84cc89d69c3d748136011684febbe5abde73dd98ca78b81a36967d4f45002ef3
2025-01-08 15:58:11,189 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f09d8ba7820&gt;
2025-01-08 15:58:11,189 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f09d9473670&gt;
2025-01-08 15:58:11,189 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250108T155811Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=84cc89d69c3d748136011684febbe5abde73dd98ca78b81a36967d4f45002ef3', 'amz-sdk-invocation-id': b'81e4a264-9458-4554-a743-1de9c403fc56', 'amz-sdk-request': b'attempt=1'}&gt;
2025-01-08 15:58:11,190 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:11,189 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,189 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2025-01-08 15:58:11,190 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f09d7e508e0&gt;, 'bucket': 'encrypted', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f09d7c37e80&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f09d7c37eb0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f09d6be2370&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f09d6be2310&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f09d6be2850&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f09d6be2d30&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2025-01-08 15:58:11,190 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f09d946c8b0&gt;
2025-01-08 15:58:11,190 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f09d946c820&gt;
2025-01-08 15:58:11,190 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f09d9473700&gt;
2025-01-08 15:58:11,190 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f09d7e2a820&gt;&gt;
2025-01-08 15:58:11,190 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f09d7eaf730&gt;&gt;
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f09d946c670&gt;
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f09d94738b0&gt;
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f09d7e2a820&gt;&gt;
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'big_file', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f09d946cb80&gt;
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f09d7e2a7f0&gt;&gt;
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f09d946c280&gt;
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_query_compatibility_header at 0x7f09d9473d30&gt;
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f09d9470ee0&gt;
2025-01-08 15:58:11,191 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81'}, 'body': b'', 'auth_path': '/encrypted/big_file', 'url': 'http://s3g:9878/encrypted/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f09d7e50a60&gt;, 'has_streaming_input': False, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'big_file', 'Range': 'bytes=8388608-'}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'big_file'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f09d8ba7790&gt;
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f09d7e509d0&gt;&gt;
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f09d946c4c0&gt;
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f09d9473820&gt;
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f09d7e2a7f0&gt;&gt;
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/encrypted/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20250108T155811Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155811Z
20250108/us-west-1/s3/aws4_request
8adc17f7eb109faf55e6502e69e4d413bfa3ba2e2df12951757183bd08958ad6
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
04aa4fe8dd2c100d537959f3bc706ff788e1fa988d360643f8d2c2188ce544d4
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f09d8ba7820&gt;
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f09d9473670&gt;
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/encrypted/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'X-Amz-Date': b'20250108T155811Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=04aa4fe8dd2c100d537959f3bc706ff788e1fa988d360643f8d2c2188ce544d4', 'amz-sdk-invocation-id': b'85c42f16-e024-419d-9608-7df99e13d58e', 'amz-sdk-request': b'attempt=1'}&gt;
2025-01-08 15:58:11,192 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2025-01-08 15:58:11,452 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/big_file HTTP/1.1" 206 1611392
2025-01-08 15:58:11,452 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f09d9473b80&gt;
2025-01-08 15:58:11,452 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f09d94739d0&gt;
2025-01-08 15:58:11,453 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:11 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:11 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'content-range': 'bytes 8388608-9999999/10000000', 'accept-ranges': 'bytes', 'etag': '"aa57cb8378bc2530f9446774e723a34a-2"', 'x-amz-mp-parts-count': '2', 'last-modified': 'Wed, 08 Jan 2025 15:58:10 GMT', 'server': 'Ozone', 'x-amz-id-2': 'mCJau43i', 'x-amz-request-id': '8e42abac-c5bb-4e7b-bd64-433f2b9d1f87', 'content-length': '1611392'}
2025-01-08 15:58:11,453 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f09d6bbb4c0&gt;
2025-01-08 15:58:11,453 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f09d9473ca0&gt;
2025-01-08 15:58:11,454 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f09d7e2a760&gt;
2025-01-08 15:58:11,454 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:11,454 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f09d7e2a820&gt;&gt;
2025-01-08 15:58:11,454 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f09d88fed30&gt;
2025-01-08 15:58:11,455 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,455 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,456 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2025-01-08 15:58:11,456 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
2025-01-08 15:58:11,456 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 8388608}
Completed 256.0 KiB/9.5 MiB (944.2 KiB/s) with 1 file(s) remaining
2025-01-08 15:58:11,459 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,460 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,460 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,460 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2025-01-08 15:58:11,460 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2025-01-08 15:58:11,460 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 8650752}
2025-01-08 15:58:11,460 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 512.0 KiB/9.5 MiB (1.8 MiB/s) with 1 file(s) remaining  
2025-01-08 15:58:11,461 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,461 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,461 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,461 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,461 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,461 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,462 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,462 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,462 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,462 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,462 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 768.0 KiB/9.5 MiB (2.7 MiB/s) with 1 file(s) remaining  
Completed 1.0 MiB/9.5 MiB (3.6 MiB/s) with 1 file(s) remaining    
Completed 1.2 MiB/9.5 MiB (4.5 MiB/s) with 1 file(s) remaining    
Completed 1.5 MiB/9.5 MiB (5.4 MiB/s) with 1 file(s) remaining    
Completed 1.5 MiB/9.5 MiB (5.5 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,462 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2025-01-08 15:58:11,462 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2025-01-08 15:58:11,463 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 8912896}
2025-01-08 15:58:11,463 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,463 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2025-01-08 15:58:11,463 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2025-01-08 15:58:11,463 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 9175040}
2025-01-08 15:58:11,464 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,464 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2025-01-08 15:58:11,464 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2025-01-08 15:58:11,464 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 9437184}
2025-01-08 15:58:11,464 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,464 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2025-01-08 15:58:11,464 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2025-01-08 15:58:11,464 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 9699328}
2025-01-08 15:58:11,465 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,465 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2025-01-08 15:58:11,465 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2025-01-08 15:58:11,465 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 9961472}
2025-01-08 15:58:11,465 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,662 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /encrypted/big_file HTTP/1.1" 206 8388608
2025-01-08 15:58:11,662 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error at 0x7f09d9473b80&gt;
2025-01-08 15:58:11,663 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function handle_expires_header at 0x7f09d94739d0&gt;
2025-01-08 15:58:11,663 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:11 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:11 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'content-range': 'bytes 0-8388607/10000000', 'accept-ranges': 'bytes', 'etag': '"aa57cb8378bc2530f9446774e723a34a-2"', 'x-amz-mp-parts-count': '2', 'last-modified': 'Wed, 08 Jan 2025 15:58:10 GMT', 'server': 'Ozone', 'x-amz-id-2': 'EQ56Pv8FKN7Yohe', 'x-amz-request-id': 'e43b7abe-58c9-4e3e-8788-9dff5cd5ca7d', 'content-length': '8388608'}
2025-01-08 15:58:11,663 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f09d6be2580&gt;
2025-01-08 15:58:11,663 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;function _update_status_code at 0x7f09d9473ca0&gt;
2025-01-08 15:58:11,663 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f09d7e2a760&gt;
2025-01-08 15:58:11,663 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:11,663 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f09d7e2a820&gt;&gt;
2025-01-08 15:58:11,663 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f09d88fed30&gt;
2025-01-08 15:58:11,664 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,664 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.8 MiB/9.5 MiB (3.7 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,665 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2025-01-08 15:58:11,665 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2025-01-08 15:58:11,665 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 0}
2025-01-08 15:58:11,665 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,665 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,666 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.0 MiB/9.5 MiB (4.2 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,666 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2025-01-08 15:58:11,666 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2025-01-08 15:58:11,666 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 262144}
Completed 2.3 MiB/9.5 MiB (4.7 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,666 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,666 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,667 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,667 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (5.3 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,667 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,668 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,668 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,668 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2025-01-08 15:58:11,668 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2025-01-08 15:58:11,668 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 524288}
Completed 2.8 MiB/9.5 MiB (5.8 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,668 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,668 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.0 MiB/9.5 MiB (6.3 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,669 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,669 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2025-01-08 15:58:11,669 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2025-01-08 15:58:11,669 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 786432}
2025-01-08 15:58:11,669 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,669 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.3 MiB/9.5 MiB (6.8 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,669 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
Completed 3.5 MiB/9.5 MiB (7.3 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,670 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,670 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,670 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.8 MiB/9.5 MiB (7.8 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,671 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,671 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.0 MiB/9.5 MiB (8.3 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,671 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,671 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.3 MiB/9.5 MiB (8.8 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,672 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,672 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2025-01-08 15:58:11,672 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2025-01-08 15:58:11,672 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 1048576}
2025-01-08 15:58:11,672 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
Completed 4.5 MiB/9.5 MiB (9.3 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,672 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,672 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2025-01-08 15:58:11,672 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,672 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2025-01-08 15:58:11,673 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 1310720}
Completed 4.8 MiB/9.5 MiB (9.8 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:11,673 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,673 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,673 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,673 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2025-01-08 15:58:11,673 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2025-01-08 15:58:11,674 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 1572864}
2025-01-08 15:58:11,674 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,674 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.0 MiB/9.5 MiB (10.3 MiB/s) with 1 file(s) remaining   
2025-01-08 15:58:11,674 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:11,674 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.3 MiB/9.5 MiB (10.8 MiB/s) with 1 file(s) remaining   
2025-01-08 15:58:11,675 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
Completed 5.5 MiB/9.5 MiB (11.3 MiB/s) with 1 file(s) remaining   
2025-01-08 15:58:11,675 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,675 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2025-01-08 15:58:11,675 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2025-01-08 15:58:11,675 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:11,675 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 1835008}
2025-01-08 15:58:11,676 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,676 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2025-01-08 15:58:11,676 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2025-01-08 15:58:11,676 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 2097152}
2025-01-08 15:58:11,676 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,676 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2025-01-08 15:58:11,677 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2025-01-08 15:58:11,677 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 2359296}
2025-01-08 15:58:11,677 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,677 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2025-01-08 15:58:11,677 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2025-01-08 15:58:11,677 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 2621440}
2025-01-08 15:58:11,677 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,677 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2025-01-08 15:58:11,677 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2025-01-08 15:58:11,678 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 2883584}
2025-01-08 15:58:11,678 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,678 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
2025-01-08 15:58:11,678 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2025-01-08 15:58:11,678 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 3145728}
2025-01-08 15:58:11,678 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,678 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2025-01-08 15:58:11,678 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2025-01-08 15:58:11,679 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 3407872}
2025-01-08 15:58:11,679 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,679 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2025-01-08 15:58:11,679 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2025-01-08 15:58:11,679 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 3670016}
2025-01-08 15:58:11,679 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:11,679 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2025-01-08 15:58:11,679 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2025-01-08 15:58:11,680 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 3932160}
2025-01-08 15:58:11,680 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,024 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
Completed 5.8 MiB/9.5 MiB (6.9 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,024 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,024 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2025-01-08 15:58:12,024 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2025-01-08 15:58:12,025 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 4194304}
Completed 6.0 MiB/9.5 MiB (7.2 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,025 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,025 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,025 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,025 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2025-01-08 15:58:12,025 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2025-01-08 15:58:12,025 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 4456448}
Completed 6.3 MiB/9.5 MiB (7.5 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,026 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,026 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,026 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2025-01-08 15:58:12,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2025-01-08 15:58:12,026 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 4718592}
Completed 6.5 MiB/9.5 MiB (7.8 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,026 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,026 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,027 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,027 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2025-01-08 15:58:12,027 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2025-01-08 15:58:12,027 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 4980736}
Completed 6.8 MiB/9.5 MiB (8.1 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,027 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,027 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,027 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,027 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
2025-01-08 15:58:12,028 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
Completed 7.0 MiB/9.5 MiB (8.3 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,028 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,028 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.3 MiB/9.5 MiB (8.6 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,028 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,028 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,028 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 5242880}
Completed 7.5 MiB/9.5 MiB (8.9 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,029 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,029 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,029 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2025-01-08 15:58:12,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2025-01-08 15:58:12,029 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 5505024}
Completed 7.8 MiB/9.5 MiB (9.2 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,029 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,030 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,030 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,030 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2025-01-08 15:58:12,030 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2025-01-08 15:58:12,030 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 5767168}
Completed 8.0 MiB/9.5 MiB (9.5 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,030 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,030 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,031 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2025-01-08 15:58:12,031 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2025-01-08 15:58:12,030 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,031 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 6029312}
Completed 8.3 MiB/9.5 MiB (9.8 MiB/s) with 1 file(s) remaining    
2025-01-08 15:58:12,031 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,031 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,031 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,031 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2025-01-08 15:58:12,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2025-01-08 15:58:12,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 6291456}
Completed 8.5 MiB/9.5 MiB (10.1 MiB/s) with 1 file(s) remaining   
2025-01-08 15:58:12,032 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,032 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,032 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2025-01-08 15:58:12,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2025-01-08 15:58:12,032 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 6553600}
Completed 8.8 MiB/9.5 MiB (10.4 MiB/s) with 1 file(s) remaining   
2025-01-08 15:58:12,033 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,033 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,033 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,033 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2025-01-08 15:58:12,033 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2025-01-08 15:58:12,033 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 6815744}
Completed 9.0 MiB/9.5 MiB (10.6 MiB/s) with 1 file(s) remaining   
2025-01-08 15:58:12,033 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,034 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,034 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,034 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2025-01-08 15:58:12,034 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2025-01-08 15:58:12,034 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 7077888}
Completed 9.3 MiB/9.5 MiB (10.9 MiB/s) with 1 file(s) remaining   
2025-01-08 15:58:12,034 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,034 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,035 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,035 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2025-01-08 15:58:12,035 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2025-01-08 15:58:12,035 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 7340032}
2025-01-08 15:58:12,035 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
Completed 9.5 MiB/9.5 MiB (11.2 MiB/s) with 1 file(s) remaining   
2025-01-08 15:58:12,035 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,035 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,035 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f09d7c34190&gt; for transfer request: 0.
2025-01-08 15:58:12,036 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2025-01-08 15:58:12,036 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:12,036 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2025-01-08 15:58:12,036 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,036 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 7602176}
2025-01-08 15:58:12,036 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,036 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2025-01-08 15:58:12,036 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2025-01-08 15:58:12,036 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 7864320}
2025-01-08 15:58:12,037 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2025-01-08 15:58:12,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2025-01-08 15:58:12,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'offset': 8126464}
2025-01-08 15:58:12,037 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:12,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2025-01-08 15:58:12,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2025-01-08 15:58:12,037 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f09d6be2e50&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f09d7c2fe50&gt;}
2025-01-08 15:58:12,038 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://encrypted/big_file to ../../tmp/big_file_downloaded
2025-01-08 15:58:12,038 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250108 15:58:12.109" endtime="20250108 15:58:12.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:12.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:12.111" endtime="20250108 15:58:12.111"/>
</kw>
<status status="PASS" starttime="20250108 15:58:10.763" endtime="20250108 15:58:12.111"/>
</kw>
<msg timestamp="20250108 15:58:12.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:10.763" endtime="20250108 15:58:12.111"/>
</kw>
<msg timestamp="20250108 15:58:12.113" level="INFO">${output} = 2025-01-08 15:58:11,076 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:11,076 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:10.762" endtime="20250108 15:58:12.113"/>
</kw>
<msg timestamp="20250108 15:58:12.114" level="INFO">${file_download_result} = 2025-01-08 15:58:11,076 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:11,076 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:10.762" endtime="20250108 15:58:12.114"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250108 15:58:12.115" level="INFO">${match} = GET /encrypted/big_file HTTP/1.1" 206 1611392
2025-01-08 15:58:11,452 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parse.s3.GetObject: calling handler &lt;function _handle_200_error a...</msg>
<msg timestamp="20250108 15:58:12.115" level="INFO">${etag2} = aa57cb8378bc2530f9446774e723a34a-2</msg>
<status status="PASS" starttime="20250108 15:58:12.114" endtime="20250108 15:58:12.115"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:58:12.115" endtime="20250108 15:58:12.116"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:12.119" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:12.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:12.588" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250108 15:58:12.117" endtime="20250108 15:58:12.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:12.589" level="INFO">delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250108 15:58:12.588" endtime="20250108 15:58:12.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:12.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:12.589" endtime="20250108 15:58:12.589"/>
</kw>
<status status="PASS" starttime="20250108 15:58:12.117" endtime="20250108 15:58:12.589"/>
</kw>
<msg timestamp="20250108 15:58:12.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:12.116" endtime="20250108 15:58:12.590"/>
</kw>
<msg timestamp="20250108 15:58:12.590" level="INFO">${output} = delete: s3://encrypted/big_file</msg>
<status status="PASS" starttime="20250108 15:58:12.116" endtime="20250108 15:58:12.590"/>
</kw>
<status status="PASS" starttime="20250108 15:58:12.116" endtime="20250108 15:58:12.590"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:12.593" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:12.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:12.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:12.591" endtime="20250108 15:58:12.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:12.599" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:12.599" endtime="20250108 15:58:12.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:12.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:12.599" endtime="20250108 15:58:12.600"/>
</kw>
<status status="PASS" starttime="20250108 15:58:12.590" endtime="20250108 15:58:12.600"/>
</kw>
<msg timestamp="20250108 15:58:12.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:12.590" endtime="20250108 15:58:12.600"/>
</kw>
<status status="PASS" starttime="20250108 15:58:12.590" endtime="20250108 15:58:12.600"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:09.770" endtime="20250108 15:58:12.600"/>
</test>
<test id="s1-s3-s14-t21" name="Create key twice with different content and expect different ETags" line="261">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:12.604" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20250108 15:58:12.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:12.613" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:12.602" endtime="20250108 15:58:12.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:12.614" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:12.613" endtime="20250108 15:58:12.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:12.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:12.614" endtime="20250108 15:58:12.614"/>
</kw>
<status status="PASS" starttime="20250108 15:58:12.602" endtime="20250108 15:58:12.615"/>
</kw>
<msg timestamp="20250108 15:58:12.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:12.602" endtime="20250108 15:58:12.615"/>
</kw>
<status status="PASS" starttime="20250108 15:58:12.601" endtime="20250108 15:58:12.615"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:12.618" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20250108 15:58:12.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:12.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:12.616" endtime="20250108 15:58:12.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:12.628" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:12.627" endtime="20250108 15:58:12.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:12.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:12.628" endtime="20250108 15:58:12.628"/>
</kw>
<status status="PASS" starttime="20250108 15:58:12.615" endtime="20250108 15:58:12.628"/>
</kw>
<msg timestamp="20250108 15:58:12.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:12.615" endtime="20250108 15:58:12.628"/>
</kw>
<status status="PASS" starttime="20250108 15:58:12.615" endtime="20250108 15:58:12.628"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:12.632" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:13.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:13.207" level="INFO">${output} = 2025-01-08 15:58:12,952 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:12,952 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:12.630" endtime="20250108 15:58:13.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:13.208" level="INFO">2025-01-08 15:58:12,952 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:12,952 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://encrypted/test_key_to_check_etag_differences']
2025-01-08 15:58:12,952 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f5b9593c820&gt;
2025-01-08 15:58:12,953 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f5b96226c10&gt;
2025-01-08 15:58:12,953 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f5b95f18e50&gt;
2025-01-08 15:58:12,954 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-01-08 15:58:12,956 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f5b959a94c0&gt;
2025-01-08 15:58:12,956 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f5b958ed820&gt;
2025-01-08 15:58:12,956 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f5b959c0310&gt;
2025-01-08 15:58:12,957 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,957 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f5b958ed820&gt;
2025-01-08 15:58:12,957 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f5b959c0310&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5b95ee7c70&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5b95ee7c70&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5b95ee7c70&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,959 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,960 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5b95ee7c70&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5b95ee7c70&gt;
2025-01-08 15:58:12,961 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,962 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f5b95ee7c70&gt;
2025-01-08 15:58:12,962 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,962 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,962 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,962 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,962 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,962 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,962 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f5b958464c0&gt;
2025-01-08 15:58:12,962 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-01-08 15:58:12,962 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-01-08 15:58:12,964 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-01-08 15:58:12,987 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-01-08 15:58:12,987 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5b9745d9d0&gt;
2025-01-08 15:58:12,994 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-01-08 15:58:13,002 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-01-08 15:58:13,023 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-01-08 15:58:13,026 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-01-08 15:58:13,028 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f5b9655fa60&gt;
2025-01-08 15:58:13,028 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f5b9655f820&gt;
2025-01-08 15:58:13,029 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,032 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:13,034 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-01-08 15:58:13,035 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:13,035 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:13,035 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,035 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:13,036 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5b9745d9d0&gt;
2025-01-08 15:58:13,036 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f5b9655fa60&gt;
2025-01-08 15:58:13,036 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f5b9655f820&gt;
2025-01-08 15:58:13,036 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,038 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:13,040 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:13,041 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:13,041 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,041 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:13,041 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f5b9745d9d0&gt;
2025-01-08 15:58:13,042 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f5b9655fa60&gt;
2025-01-08 15:58:13,042 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f5b9655f820&gt;
2025-01-08 15:58:13,042 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,045 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:13,047 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:13,047 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:13,047 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,048 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:13,048 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-01-08 15:58:13,049 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:13,049 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5b94c72820&gt;}) about to wait for the following futures []
2025-01-08 15:58:13,049 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5b94c72820&gt;}) done waiting for dependent futures
2025-01-08 15:58:13,050 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5b94c72820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5b94e8a8e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f5b94c69dc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f5b94c69e50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f5b94c6f0d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f5b94c72820&gt;}
2025-01-08 15:58:13,050 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f5b94c6f0d0&gt; for transfer request: 0.
2025-01-08 15:58:13,050 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:13,051 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2025-01-08 15:58:13,051 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2025-01-08 15:58:13,051 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f5b94e8a8e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5b92c080d0&gt;, 'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2025-01-08 15:58:13,051 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f5b964aa4c0&gt;
2025-01-08 15:58:13,051 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:13,051 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f5b964a78b0&gt;
2025-01-08 15:58:13,052 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f5b964aadc0&gt;
2025-01-08 15:58:13,052 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f5b964a7820&gt;
2025-01-08 15:58:13,052 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f5b964ad700&gt;
2025-01-08 15:58:13,052 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5b94e64820&gt;&gt;
2025-01-08 15:58:13,052 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f5b94ee96d0&gt;&gt;
2025-01-08 15:58:13,052 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f5b964a7670&gt;
2025-01-08 15:58:13,052 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f5b964ad8b0&gt;
2025-01-08 15:58:13,052 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5b94e64820&gt;&gt;
2025-01-08 15:58:13,052 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_key_to_check_etag_differences', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:13,053 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:13,053 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:13,053 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:13,054 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f5b9661b790&gt;
2025-01-08 15:58:13,056 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f5b964a7b80&gt;
2025-01-08 15:58:13,056 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-01-08 15:58:13,056 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5b94e647f0&gt;&gt;
2025-01-08 15:58:13,056 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f5b964a7280&gt;
2025-01-08 15:58:13,056 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f5b964add30&gt;
2025-01-08 15:58:13,056 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f5b964aaee0&gt;
2025-01-08 15:58:13,056 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'W00gM9TrbMTezPlzZ8YR9Q==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5b92c080d0&gt;, 'auth_path': '/encrypted/test_key_to_check_etag_differences', 'url': 'http://s3g:9878/encrypted/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f5b94e8aa60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'test_key_to_check_etag_differences', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f5b92c080d0&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'test_key_to_check_etag_differences'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:13,057 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f5b95be2790&gt;
2025-01-08 15:58:13,057 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f5b94e8a9d0&gt;&gt;
2025-01-08 15:58:13,057 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f5b964a74c0&gt;
2025-01-08 15:58:13,057 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f5b964ad820&gt;
2025-01-08 15:58:13,057 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f5b94e647f0&gt;&gt;
2025-01-08 15:58:13,058 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:13,058 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_key_to_check_etag_differences

content-md5:W00gM9TrbMTezPlzZ8YR9Q==
host:s3g:9878
x-amz-content-sha256:da95c092e2e857386412d771ec8c3a7830179d9ab6f4e0bd2e4bf7a3ebd330ef
x-amz-date:20250108T155813Z

content-md5;host;x-amz-content-sha256;x-amz-date
da95c092e2e857386412d771ec8c3a7830179d9ab6f4e0bd2e4bf7a3ebd330ef
2025-01-08 15:58:13,058 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155813Z
20250108/us-west-1/s3/aws4_request
501cc17dc352c2ec8814f9ba6dc2ec37a11ef90d9c0d535650680400708fbb0b
2025-01-08 15:58:13,058 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
bd24545fe5f7359f1e00f62cfa875355f6f74ac62b15cc7f173f52e550a43fbb
2025-01-08 15:58:13,058 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f5b95be2820&gt;
2025-01-08 15:58:13,059 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f5b964ad670&gt;
2025-01-08 15:58:13,059 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'W00gM9TrbMTezPlzZ8YR9Q==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250108T155813Z', 'X-Amz-Content-SHA256': b'da95c092e2e857386412d771ec8c3a7830179d9ab6f4e0bd2e4bf7a3ebd330ef', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=bd24545fe5f7359f1e00f62cfa875355f6f74ac62b15cc7f173f52e550a43fbb', 'amz-sdk-invocation-id': b'88a436fc-1a51-4ebd-bd11-d6e496d1f09c', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2025-01-08 15:58:13,059 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:13,060 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-01-08 15:58:13,085 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (6.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (13.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (16.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (21.1 MiB/s) with 1 file(s) remaining  
2025-01-08 15:58:13,135 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-01-08 15:58:13,135 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f5b964adb80&gt;
2025-01-08 15:58:13,135 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f5b964ad9d0&gt;
2025-01-08 15:58:13,135 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:13 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:13 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"5b4d2033d4eb6cc4deccf97367c611f5"', 'server': 'Ozone', 'x-amz-id-2': 's0WpNCVe', 'x-amz-request-id': 'b289b225-2780-4af3-81ef-b009e10d61d1', 'content-length': '0'}
2025-01-08 15:58:13,136 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-01-08 15:58:13,136 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f5b964adca0&gt;
2025-01-08 15:58:13,136 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f5b94e64760&gt;
2025-01-08 15:58:13,136 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:13,136 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f5b94e64820&gt;&gt;
2025-01-08 15:58:13,136 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f5b95938d30&gt;
2025-01-08 15:58:13,137 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://encrypted/test_key_to_check_etag_differences
2025-01-08 15:58:13,137 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250108 15:58:13.207" endtime="20250108 15:58:13.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:13.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:13.209" endtime="20250108 15:58:13.209"/>
</kw>
<status status="PASS" starttime="20250108 15:58:12.629" endtime="20250108 15:58:13.209"/>
</kw>
<msg timestamp="20250108 15:58:13.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:12.629" endtime="20250108 15:58:13.209"/>
</kw>
<msg timestamp="20250108 15:58:13.210" level="INFO">${output} = 2025-01-08 15:58:12,952 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:12,952 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:12.629" endtime="20250108 15:58:13.210"/>
</kw>
<msg timestamp="20250108 15:58:13.210" level="INFO">${file1UploadResult} = 2025-01-08 15:58:12,952 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:12,952 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:12.629" endtime="20250108 15:58:13.210"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250108 15:58:13.212" level="INFO">${match} = PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-01-08 15:58:13,135 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function...</msg>
<msg timestamp="20250108 15:58:13.212" level="INFO">${etag1} = 5b4d2033d4eb6cc4deccf97367c611f5</msg>
<status status="PASS" starttime="20250108 15:58:13.210" endtime="20250108 15:58:13.212"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:13.215" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:13.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:13.773" level="INFO">${output} = 2025-01-08 15:58:13,530 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:13,530 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:13.213" endtime="20250108 15:58:13.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:13.774" level="INFO">2025-01-08 15:58:13,530 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:13,530 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://encrypted/test_key_to_check_etag_differences']
2025-01-08 15:58:13,530 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f244136f820&gt;
2025-01-08 15:58:13,530 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f2441c59c10&gt;
2025-01-08 15:58:13,530 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f244194be50&gt;
2025-01-08 15:58:13,532 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2025-01-08 15:58:13,534 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f24413db4c0&gt;
2025-01-08 15:58:13,534 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f2441320820&gt;
2025-01-08 15:58:13,534 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3: calling handler &lt;function update_endpoint_url at 0x7f24413f5310&gt;
2025-01-08 15:58:13,535 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,535 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f2441320820&gt;
2025-01-08 15:58:13,535 - MainThread - botocore.hooks - DEBUG - Event before-building-argument-table-parser.s3.cp: calling handler &lt;function update_endpoint_url at 0x7f24413f5310&gt;
2025-01-08 15:58:13,536 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,536 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2441918c70&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2441918c70&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2441918c70&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,537 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,538 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2441918c70&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2441918c70&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f2441918c70&gt;
2025-01-08 15:58:13,539 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,540 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-mode: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,540 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.checksum-algorithm: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,540 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,540 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,540 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,540 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24412794c0&gt;
2025-01-08 15:58:13,540 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2025-01-08 15:58:13,540 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2025-01-08 15:58:13,542 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/endpoints.json
2025-01-08 15:58:13,565 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/sdk-default-configuration.json
2025-01-08 15:58:13,566 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f2442e8f9d0&gt;
2025-01-08 15:58:13,573 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.json.gz
2025-01-08 15:58:13,583 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/service-2.sdk-extras.json
2025-01-08 15:58:13,604 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/s3/2006-03-01/endpoint-rule-set-1.json.gz
2025-01-08 15:58:13,607 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/partitions.json
2025-01-08 15:58:13,609 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2441f92a60&gt;
2025-01-08 15:58:13,609 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2441f92820&gt;
2025-01-08 15:58:13,609 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,613 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:13,615 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.9/site-packages/botocore/data/_retry.json
2025-01-08 15:58:13,615 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:13,615 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:13,616 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,616 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:13,616 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f2442e8f9d0&gt;
2025-01-08 15:58:13,617 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2441f92a60&gt;
2025-01-08 15:58:13,617 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2441f92820&gt;
2025-01-08 15:58:13,617 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,619 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:13,621 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:13,621 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:13,621 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,621 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:13,622 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f2442e8f9d0&gt;
2025-01-08 15:58:13,622 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f2441f92a60&gt;
2025-01-08 15:58:13,622 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f2441f92820&gt;
2025-01-08 15:58:13,623 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,625 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2025-01-08 15:58:13,627 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2025-01-08 15:58:13,627 - MainThread - botocore.utils - DEBUG - Registering S3 region redirector handler
2025-01-08 15:58:13,627 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2025-01-08 15:58:13,627 - MainThread - botocore.utils - DEBUG - Registering S3Express Identity Resolver
2025-01-08 15:58:13,628 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2025-01-08 15:58:13,628 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:13,629 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24406a4820&gt;}) about to wait for the following futures []
2025-01-08 15:58:13,629 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24406a4820&gt;}) done waiting for dependent futures
2025-01-08 15:58:13,629 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24406a4820&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f24408bd8e0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f244069cdc0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f244069ce50&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f24406a10d0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24406a4820&gt;}
2025-01-08 15:58:13,630 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f24406a10d0&gt; for transfer request: 0.
2025-01-08 15:58:13,630 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2025-01-08 15:58:13,630 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2025-01-08 15:58:13,630 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2025-01-08 15:58:13,630 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2025-01-08 15:58:13,630 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f24408bd8e0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f243e63b0d0&gt;, 'bucket': 'encrypted', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f2441edd4c0&gt;
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f2441ed98b0&gt;
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f2441edddc0&gt;
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f2441ed9820&gt;
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function remove_bucket_from_url_paths_from_model at 0x7f2441ee0700&gt;
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.annotate_request_context of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f2440897820&gt;&gt;
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method ClientCreator._inject_s3_input_parameters of &lt;botocore.client.ClientCreator object at 0x7f244091c6d0&gt;&gt;
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f2441ed9670&gt;
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;function customize_endpoint_resolver_builtins at 0x7f2441ee08b0&gt;
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-endpoint-resolution.s3: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_cache of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f2440897820&gt;&gt;
2025-01-08 15:58:13,631 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Calling endpoint provider with parameters: {'Bucket': 'encrypted', 'Region': 'us-west-1', 'UseFIPS': False, 'UseDualStack': False, 'Endpoint': 'http://s3g:9878', 'ForcePathStyle': True, 'Accelerate': False, 'UseGlobalEndpoint': False, 'Key': 'test_key_to_check_etag_differences', 'DisableMultiRegionAccessPoints': False, 'UseArnRegion': True}
2025-01-08 15:58:13,632 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Endpoint provider result: http://s3g:9878/encrypted
2025-01-08 15:58:13,632 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selecting from endpoint provider's list of auth schemes: "sigv4". User selected auth scheme is: "None"
2025-01-08 15:58:13,632 - ThreadPoolExecutor-0_0 - botocore.regions - DEBUG - Selected auth type "v4" as "v4" with signing context params: {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}
2025-01-08 15:58:13,633 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_checksum at 0x7f244204e790&gt;
2025-01-08 15:58:13,635 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f2441ed9b80&gt;
2025-01-08 15:58:13,635 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2025-01-08 15:58:13,635 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.apply_signing_cache_key of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f24408977f0&gt;&gt;
2025-01-08 15:58:13,635 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f2441ed9280&gt;
2025-01-08 15:58:13,635 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_query_compatibility_header at 0x7f2441ee0d30&gt;
2025-01-08 15:58:13,635 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f2441eddee0&gt;
2025-01-08 15:58:13,635 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': 'vTl3DtVdV6Lvfei6ydH+Xg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f243e63b0d0&gt;, 'auth_path': '/encrypted/test_key_to_check_etag_differences', 'url': 'http://s3g:9878/encrypted/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f24408bda60&gt;, 'has_streaming_input': True, 'auth_type': 'v4', 'unsigned_payload': None, 's3_redirect': {'redirected': False, 'bucket': 'encrypted', 'params': {'Bucket': 'encrypted', 'Key': 'test_key_to_check_etag_differences', 'Body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f243e63b0d0&gt;}}, 'input_params': {'Bucket': 'encrypted', 'Key': 'test_key_to_check_etag_differences'}, 'signing': {'region': 'us-west-1', 'signing_name': 's3', 'disableDoubleEncoding': True}, 'endpoint_properties': {'authSchemes': [{'disableDoubleEncoding': True, 'name': 'sigv4', 'signingName': 's3', 'signingRegion': 'us-west-1'}]}}}
2025-01-08 15:58:13,636 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f2441615790&gt;
2025-01-08 15:58:13,636 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f24408bd9d0&gt;&gt;
2025-01-08 15:58:13,636 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f2441ed94c0&gt;
2025-01-08 15:58:13,636 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;function remove_arn_from_signing_path at 0x7f2441ee0820&gt;
2025-01-08 15:58:13,636 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3ExpressIdentityResolver.resolve_s3express_identity of &lt;botocore.utils.S3ExpressIdentityResolver object at 0x7f24408977f0&gt;&gt;
2025-01-08 15:58:13,637 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2025-01-08 15:58:13,637 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/encrypted/test_key_to_check_etag_differences

content-md5:vTl3DtVdV6Lvfei6ydH+Xg==
host:s3g:9878
x-amz-content-sha256:bd3e2bc7f2418a636163ab87f3a8f9bfc7f37bc9f68cf6fea592af57bb705ca1
x-amz-date:20250108T155813Z

content-md5;host;x-amz-content-sha256;x-amz-date
bd3e2bc7f2418a636163ab87f3a8f9bfc7f37bc9f68cf6fea592af57bb705ca1
2025-01-08 15:58:13,637 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20250108T155813Z
20250108/us-west-1/s3/aws4_request
690af4f89e708976ddeb40b8d6471bbbc323edd2a69c0f5ad57e1faf16385174
2025-01-08 15:58:13,637 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
4a04e0f46bb474d60054520ff12b2f00c3c2fa0d7512e25d18c13ed9a359c9b3
2025-01-08 15:58:13,637 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f2441615820&gt;
2025-01-08 15:58:13,638 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f2441ee0670&gt;
2025-01-08 15:58:13,638 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/encrypted/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.36.22 md/Botocore#1.35.81 ua/2.0 os/linux#5.15.0-1074-azure md/arch#x86_64 lang/python#3.9.21 md/pyimpl#CPython cfg/retry-mode#legacy botocore/1.35.81', 'Content-MD5': b'vTl3DtVdV6Lvfei6ydH+Xg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20250108T155813Z', 'X-Amz-Content-SHA256': b'bd3e2bc7f2418a636163ab87f3a8f9bfc7f37bc9f68cf6fea592af57bb705ca1', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20250108/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=4a04e0f46bb474d60054520ff12b2f00c3c2fa0d7512e25d18c13ed9a359c9b3', 'amz-sdk-invocation-id': b'66c34003-f74d-4be8-904d-3492361cd3a8', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2025-01-08 15:58:13,638 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2025-01-08 15:58:13,639 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2025-01-08 15:58:13,660 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (7.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (14.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (20.4 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (26.4 MiB/s) with 1 file(s) remaining  
2025-01-08 15:58:13,713 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-01-08 15:58:13,713 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function _handle_200_error at 0x7f2441ee0b80&gt;
2025-01-08 15:58:13,713 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function handle_expires_header at 0x7f2441ee09d0&gt;
2025-01-08 15:58:13,713 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'date': 'Wed, 08 Jan 2025 15:58:13 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 08 Jan 2025 15:58:13 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"bd39770ed55d57a2ef7de8bac9d1fe5e"', 'server': 'Ozone', 'x-amz-id-2': 'x1pRkaFSY', 'x-amz-request-id': '539975c3-eec6-4780-b42d-8a382c31668e', 'content-length': '0'}
2025-01-08 15:58:13,714 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2025-01-08 15:58:13,714 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;function _update_status_code at 0x7f2441ee0ca0&gt;
2025-01-08 15:58:13,714 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f2440897760&gt;
2025-01-08 15:58:13,714 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2025-01-08 15:58:13,714 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirectorv2.redirect_from_error of &lt;botocore.utils.S3RegionRedirectorv2 object at 0x7f2440897820&gt;&gt;
2025-01-08 15:58:13,714 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f244136bd30&gt;
2025-01-08 15:58:13,714 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file2 to s3://encrypted/test_key_to_check_etag_differences
2025-01-08 15:58:13,715 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20250108 15:58:13.773" endtime="20250108 15:58:13.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:13.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:13.774" endtime="20250108 15:58:13.775"/>
</kw>
<status status="PASS" starttime="20250108 15:58:13.213" endtime="20250108 15:58:13.775"/>
</kw>
<msg timestamp="20250108 15:58:13.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:13.212" endtime="20250108 15:58:13.775"/>
</kw>
<msg timestamp="20250108 15:58:13.776" level="INFO">${output} = 2025-01-08 15:58:13,530 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:13,530 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:13.212" endtime="20250108 15:58:13.776"/>
</kw>
<msg timestamp="20250108 15:58:13.776" level="INFO">${file2UploadResult} = 2025-01-08 15:58:13,530 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.36.22 Python/3.9.21 Linux/5.15.0-1074-azure botocore/1.35.81
2025-01-08 15:58:13,530 - MainThread - awscli.clid...</msg>
<status status="PASS" starttime="20250108 15:58:13.212" endtime="20250108 15:58:13.776"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL | IGNORECASE</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20250108 15:58:13.777" level="INFO">${match} = PUT /encrypted/test_key_to_check_etag_differences HTTP/1.1" 200 0
2025-01-08 15:58:13,713 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parse.s3.PutObject: calling handler &lt;function...</msg>
<msg timestamp="20250108 15:58:13.777" level="INFO">${etag2} = bd39770ed55d57a2ef7de8bac9d1fe5e</msg>
<status status="PASS" starttime="20250108 15:58:13.776" endtime="20250108 15:58:13.777"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20250108 15:58:13.777" endtime="20250108 15:58:13.777"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:13.781" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:14.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:14.276" level="INFO">${output} = delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250108 15:58:13.779" endtime="20250108 15:58:14.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:14.277" level="INFO">delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250108 15:58:14.277" endtime="20250108 15:58:14.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:14.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:14.277" endtime="20250108 15:58:14.278"/>
</kw>
<status status="PASS" starttime="20250108 15:58:13.779" endtime="20250108 15:58:14.278"/>
</kw>
<msg timestamp="20250108 15:58:14.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:13.779" endtime="20250108 15:58:14.278"/>
</kw>
<msg timestamp="20250108 15:58:14.278" level="INFO">${output} = delete: s3://encrypted/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20250108 15:58:13.778" endtime="20250108 15:58:14.278"/>
</kw>
<status status="PASS" starttime="20250108 15:58:13.777" endtime="20250108 15:58:14.278"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:14.282" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:14.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:14.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:14.279" endtime="20250108 15:58:14.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:14.287" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:14.286" endtime="20250108 15:58:14.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:14.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:14.287" endtime="20250108 15:58:14.287"/>
</kw>
<status status="PASS" starttime="20250108 15:58:14.279" endtime="20250108 15:58:14.287"/>
</kw>
<msg timestamp="20250108 15:58:14.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:14.279" endtime="20250108 15:58:14.287"/>
</kw>
<status status="PASS" starttime="20250108 15:58:14.278" endtime="20250108 15:58:14.287"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:14.291" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:14.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:14.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:14.288" endtime="20250108 15:58:14.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:14.296" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:14.295" endtime="20250108 15:58:14.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:14.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:14.296" endtime="20250108 15:58:14.296"/>
</kw>
<status status="PASS" starttime="20250108 15:58:14.288" endtime="20250108 15:58:14.297"/>
</kw>
<msg timestamp="20250108 15:58:14.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:14.288" endtime="20250108 15:58:14.297"/>
</kw>
<status status="PASS" starttime="20250108 15:58:14.288" endtime="20250108 15:58:14.297"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:12.601" endtime="20250108 15:58:14.297"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:57:45.899" endtime="20250108 15:58:14.298"/>
</suite>
<suite id="s1-s3-s15" name="Objecttagging" source="/opt/hadoop/smoketest/s3/objecttagging.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:58:14.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:14.310" endtime="20250108 15:58:14.310"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:58:14.310" endtime="20250108 15:58:14.310"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:58:14.310" endtime="20250108 15:58:14.310"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:58:14.310" endtime="20250108 15:58:14.310"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:58:14.310" endtime="20250108 15:58:14.310"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:58:14.310" endtime="20250108 15:58:14.310"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:58:14.310" endtime="20250108 15:58:14.310"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:58:14.311" endtime="20250108 15:58:14.311"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:58:14.311" endtime="20250108 15:58:14.311"/>
</kw>
<status status="PASS" starttime="20250108 15:58:14.309" endtime="20250108 15:58:14.311"/>
</kw>
<test id="s1-s3-s15-t1" name="Put object tagging" line="33">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:14.314" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20250108 15:58:14.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:14.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:14.312" endtime="20250108 15:58:14.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:14.317" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:14.317" endtime="20250108 15:58:14.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:14.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:14.318" endtime="20250108 15:58:14.318"/>
</kw>
<status status="PASS" starttime="20250108 15:58:14.312" endtime="20250108 15:58:14.318"/>
</kw>
<msg timestamp="20250108 15:58:14.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:14.312" endtime="20250108 15:58:14.318"/>
</kw>
<status status="PASS" starttime="20250108 15:58:14.311" endtime="20250108 15:58:14.318"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:14.322" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:14.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:14.858" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:58:14.320" endtime="20250108 15:58:14.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:14.859" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:58:14.858" endtime="20250108 15:58:14.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:14.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:14.859" endtime="20250108 15:58:14.859"/>
</kw>
<status status="PASS" starttime="20250108 15:58:14.319" endtime="20250108 15:58:14.859"/>
</kw>
<msg timestamp="20250108 15:58:14.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:14.319" endtime="20250108 15:58:14.860"/>
</kw>
<msg timestamp="20250108 15:58:14.860" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:58:14.319" endtime="20250108 15:58:14.860"/>
</kw>
<msg timestamp="20250108 15:58:14.860" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20250108 15:58:14.318" endtime="20250108 15:58:14.860"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:14.864" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-8661439290/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:15.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:15.361" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:58:14.794Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250108 15:58:14.861" endtime="20250108 15:58:15.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:15.362" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:58:14.794Z",
            "Size": 11,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        },
        {
            "Key": "ozone-test-8661439290/putobject/key=value/zerobyte",
            "LastModified": "2025-01-08T15:57:47.459Z",
            "Size": 0,
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "testuser",
                "ID": "testuser"
            }
        }
    ],
    "RequestCharged": null,
    "Prefix": "ozone-test-8661439290/putobject/key%3Dvalue/"
}</msg>
<status status="PASS" starttime="20250108 15:58:15.362" endtime="20250108 15:58:15.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:15.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:15.362" endtime="20250108 15:58:15.363"/>
</kw>
<status status="PASS" starttime="20250108 15:58:14.861" endtime="20250108 15:58:15.363"/>
</kw>
<msg timestamp="20250108 15:58:15.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:14.861" endtime="20250108 15:58:15.363"/>
</kw>
<msg timestamp="20250108 15:58:15.363" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:58:14.794Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250108 15:58:14.861" endtime="20250108 15:58:15.363"/>
</kw>
<msg timestamp="20250108 15:58:15.363" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-8661439290/putobject/key=value/f1",
            "LastModified": "2025-01-08T15:58:14.794Z",
            "Size": 11,
            "StorageCla...</msg>
<status status="PASS" starttime="20250108 15:58:14.860" endtime="20250108 15:58:15.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:15.364" endtime="20250108 15:58:15.364"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:15.367" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:15.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:15.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:15.365" endtime="20250108 15:58:15.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:15.863" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:15.863" endtime="20250108 15:58:15.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:15.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:15.863" endtime="20250108 15:58:15.864"/>
</kw>
<status status="PASS" starttime="20250108 15:58:15.365" endtime="20250108 15:58:15.864"/>
</kw>
<msg timestamp="20250108 15:58:15.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:15.365" endtime="20250108 15:58:15.864"/>
</kw>
<msg timestamp="20250108 15:58:15.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:15.364" endtime="20250108 15:58:15.864"/>
</kw>
<msg timestamp="20250108 15:58:15.864" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:58:15.364" endtime="20250108 15:58:15.864"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:15.868" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:16.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:16.379" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:58:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:58:15.866" endtime="20250108 15:58:16.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:16.380" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:58:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:58:16 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Wed, 08 Jan 2025 15:58:16 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:58:16.379" endtime="20250108 15:58:16.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:16.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:16.380" endtime="20250108 15:58:16.380"/>
</kw>
<status status="PASS" starttime="20250108 15:58:15.865" endtime="20250108 15:58:16.380"/>
</kw>
<msg timestamp="20250108 15:58:16.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:15.865" endtime="20250108 15:58:16.381"/>
</kw>
<msg timestamp="20250108 15:58:16.381" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:58:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:58:15.865" endtime="20250108 15:58:16.381"/>
</kw>
<msg timestamp="20250108 15:58:16.381" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:58:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:58:15.864" endtime="20250108 15:58:16.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:16.381" endtime="20250108 15:58:16.381"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:16.384" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:58:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:58:16 GMT",
    "Metadata": {},
    "TagCount": 1,
    "ExpiresString": "Wed, 08 Jan 2025 15:58:16 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:16.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:16.389" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20250108 15:58:16.382" endtime="20250108 15:58:16.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:16.390" level="INFO">1</msg>
<status status="PASS" starttime="20250108 15:58:16.389" endtime="20250108 15:58:16.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:16.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:16.390" endtime="20250108 15:58:16.390"/>
</kw>
<msg timestamp="20250108 15:58:16.391" level="INFO">${tagCount} = 1</msg>
<status status="PASS" starttime="20250108 15:58:16.381" endtime="20250108 15:58:16.391"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:58:16.391" endtime="20250108 15:58:16.391"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key2", "Value": "tag-value2" },{ "Key": "tag-key3", "Value": "tag-value3" }]}'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:16.395" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 --tagging '{"TagSet": [{ "Key": "tag-key2", "Value": "tag-value2" },{ "Key": "tag-key3", "Value": "tag-value3" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:16.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:16.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:16.392" endtime="20250108 15:58:16.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:16.920" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:16.919" endtime="20250108 15:58:16.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:16.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:16.920" endtime="20250108 15:58:16.920"/>
</kw>
<status status="PASS" starttime="20250108 15:58:16.392" endtime="20250108 15:58:16.920"/>
</kw>
<msg timestamp="20250108 15:58:16.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:16.392" endtime="20250108 15:58:16.921"/>
</kw>
<msg timestamp="20250108 15:58:16.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:16.392" endtime="20250108 15:58:16.921"/>
</kw>
<msg timestamp="20250108 15:58:16.921" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:58:16.391" endtime="20250108 15:58:16.921"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:16.926" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:17.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:17.452" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:58:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:58:16.923" endtime="20250108 15:58:17.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:17.453" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:58:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:58:17 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:58:17 GMT"
}</msg>
<status status="PASS" starttime="20250108 15:58:17.452" endtime="20250108 15:58:17.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:17.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:17.453" endtime="20250108 15:58:17.453"/>
</kw>
<status status="PASS" starttime="20250108 15:58:16.922" endtime="20250108 15:58:17.453"/>
</kw>
<msg timestamp="20250108 15:58:17.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:16.922" endtime="20250108 15:58:17.453"/>
</kw>
<msg timestamp="20250108 15:58:17.453" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:58:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:58:16.922" endtime="20250108 15:58:17.453"/>
</kw>
<msg timestamp="20250108 15:58:17.454" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:58:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20250108 15:58:16.921" endtime="20250108 15:58:17.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagCount</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:17.454" endtime="20250108 15:58:17.454"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq -r '.TagCount'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:17.456" level="INFO">Running command 'echo '{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 08 Jan 2025 15:58:14 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 08 Jan 2025 15:58:17 GMT",
    "Metadata": {},
    "TagCount": 2,
    "ExpiresString": "Wed, 08 Jan 2025 15:58:17 GMT"
}' | jq -r '.TagCount' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:17.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:17.462" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250108 15:58:17.454" endtime="20250108 15:58:17.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:17.462" level="INFO">2</msg>
<status status="PASS" starttime="20250108 15:58:17.462" endtime="20250108 15:58:17.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:17.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:17.463" endtime="20250108 15:58:17.463"/>
</kw>
<msg timestamp="20250108 15:58:17.463" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250108 15:58:17.454" endtime="20250108 15:58:17.463"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:58:17.463" endtime="20250108 15:58:17.463"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object-tagging --bucket ${BUCKET} --key ${PREFIX}/nonexistent --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:17.466" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object-tagging --bucket encrypted --key ozone-test-8661439290/nonexistent --tagging '{"TagSet": [{ "Key": "tag-key1", "Value": "tag-value1" }]}' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:18.016" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:18.016" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250108 15:58:17.464" endtime="20250108 15:58:18.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:18.017" level="INFO">
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250108 15:58:18.017" endtime="20250108 15:58:18.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:18.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:18.018" endtime="20250108 15:58:18.018"/>
</kw>
<msg timestamp="20250108 15:58:18.018" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250108 15:58:17.464" endtime="20250108 15:58:18.018"/>
</kw>
<msg timestamp="20250108 15:58:18.018" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the PutObjectTagging operation: The specified key does not exist</msg>
<status status="PASS" starttime="20250108 15:58:17.464" endtime="20250108 15:58:18.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:18.018" endtime="20250108 15:58:18.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:14.311" endtime="20250108 15:58:18.019"/>
</test>
<test id="s1-s3-s15-t2" name="Get object tagging" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:18.024" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object-tagging --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:18.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:18.529" level="INFO">${output} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250108 15:58:18.021" endtime="20250108 15:58:18.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:18.530" level="INFO">{
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250108 15:58:18.530" endtime="20250108 15:58:18.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:18.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:18.530" endtime="20250108 15:58:18.531"/>
</kw>
<status status="PASS" starttime="20250108 15:58:18.021" endtime="20250108 15:58:18.531"/>
</kw>
<msg timestamp="20250108 15:58:18.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:18.021" endtime="20250108 15:58:18.531"/>
</kw>
<msg timestamp="20250108 15:58:18.531" level="INFO">${output} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250108 15:58:18.020" endtime="20250108 15:58:18.531"/>
</kw>
<msg timestamp="20250108 15:58:18.531" level="INFO">${result} = {
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}</msg>
<status status="PASS" starttime="20250108 15:58:18.020" endtime="20250108 15:58:18.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagSet</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:18.531" endtime="20250108 15:58:18.531"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq '.TagSet | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:18.534" level="INFO">Running command 'echo '{
    "TagSet": [
        {
            "Key": "tag-key2",
            "Value": "tag-value2"
        },
        {
            "Key": "tag-key3",
            "Value": "tag-value3"
        }
    ]
}' | jq '.TagSet | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:18.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:18.539" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20250108 15:58:18.532" endtime="20250108 15:58:18.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:18.540" level="INFO">2</msg>
<status status="PASS" starttime="20250108 15:58:18.539" endtime="20250108 15:58:18.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:18.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:18.540" endtime="20250108 15:58:18.540"/>
</kw>
<msg timestamp="20250108 15:58:18.540" level="INFO">${tagCount} = 2</msg>
<status status="PASS" starttime="20250108 15:58:18.532" endtime="20250108 15:58:18.540"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:58:18.540" endtime="20250108 15:58:18.541"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:18.019" endtime="20250108 15:58:18.541"/>
</test>
<test id="s1-s3-s15-t3" name="Delete object tagging" line="67">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:18.545" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object-tagging --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:19.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:19.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:18.543" endtime="20250108 15:58:19.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:19.054" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:19.054" endtime="20250108 15:58:19.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:19.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:19.054" endtime="20250108 15:58:19.055"/>
</kw>
<status status="PASS" starttime="20250108 15:58:18.543" endtime="20250108 15:58:19.055"/>
</kw>
<msg timestamp="20250108 15:58:19.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:18.543" endtime="20250108 15:58:19.055"/>
</kw>
<msg timestamp="20250108 15:58:19.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:18.542" endtime="20250108 15:58:19.055"/>
</kw>
<msg timestamp="20250108 15:58:19.056" level="INFO">${result} = </msg>
<status status="PASS" starttime="20250108 15:58:18.542" endtime="20250108 15:58:19.056"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object-tagging --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:19.060" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object-tagging --bucket encrypted --key ozone-test-8661439290/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:19.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:19.585" level="INFO">${output} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250108 15:58:19.058" endtime="20250108 15:58:19.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:19.586" level="INFO">{
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250108 15:58:19.585" endtime="20250108 15:58:19.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:19.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:19.586" endtime="20250108 15:58:19.586"/>
</kw>
<status status="PASS" starttime="20250108 15:58:19.057" endtime="20250108 15:58:19.586"/>
</kw>
<msg timestamp="20250108 15:58:19.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:19.057" endtime="20250108 15:58:19.587"/>
</kw>
<msg timestamp="20250108 15:58:19.587" level="INFO">${output} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250108 15:58:19.056" endtime="20250108 15:58:19.587"/>
</kw>
<msg timestamp="20250108 15:58:19.587" level="INFO">${result} = {
    "TagSet": []
}</msg>
<status status="PASS" starttime="20250108 15:58:19.056" endtime="20250108 15:58:19.587"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TagSet</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:19.587" endtime="20250108 15:58:19.587"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${tagCount}</var>
<arg>echo '${result}' | jq '.TagSet | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:19.590" level="INFO">Running command 'echo '{
    "TagSet": []
}' | jq '.TagSet | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:19.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:19.595" level="INFO">${output} = 0</msg>
<status status="PASS" starttime="20250108 15:58:19.588" endtime="20250108 15:58:19.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:19.596" level="INFO">0</msg>
<status status="PASS" starttime="20250108 15:58:19.595" endtime="20250108 15:58:19.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:19.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:19.596" endtime="20250108 15:58:19.596"/>
</kw>
<msg timestamp="20250108 15:58:19.596" level="INFO">${tagCount} = 0</msg>
<status status="PASS" starttime="20250108 15:58:19.587" endtime="20250108 15:58:19.596"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${tagCount}</arg>
<arg>0</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20250108 15:58:19.596" endtime="20250108 15:58:19.597"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20250108 15:58:18.541" endtime="20250108 15:58:19.597"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20250108 15:58:14.301" endtime="20250108 15:58:19.598"/>
</suite>
<suite id="s1-s3-s16" name="Rclone" source="/opt/hadoop/smoketest/s3/rclone.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 15:58:19.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:19.607" endtime="20250108 15:58:19.607"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:58:19.607" endtime="20250108 15:58:19.607"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 15:58:19.607" endtime="20250108 15:58:19.607"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:58:19.607" endtime="20250108 15:58:19.607"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:58:19.607" endtime="20250108 15:58:19.607"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:58:19.607" endtime="20250108 15:58:19.607"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:58:19.608" endtime="20250108 15:58:19.608"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 15:58:19.608" endtime="20250108 15:58:19.608"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 15:58:19.608" endtime="20250108 15:58:19.608"/>
</kw>
<status status="PASS" starttime="20250108 15:58:19.606" endtime="20250108 15:58:19.608"/>
</kw>
<test id="s1-s3-s16-t1" name="Rclone Client Test" line="41">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:19.612" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:19.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:19.978" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:58:19.610" endtime="20250108 15:58:19.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:19.979" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:58:19.979" endtime="20250108 15:58:19.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:19.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:19.979" endtime="20250108 15:58:19.980"/>
</kw>
<status status="PASS" starttime="20250108 15:58:19.609" endtime="20250108 15:58:19.980"/>
</kw>
<msg timestamp="20250108 15:58:19.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:19.609" endtime="20250108 15:58:19.980"/>
</kw>
<msg timestamp="20250108 15:58:19.980" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:58:19.609" endtime="20250108 15:58:19.980"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:19.983" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:20.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:20.345" level="INFO">${output} = ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6</msg>
<status status="PASS" starttime="20250108 15:58:19.981" endtime="20250108 15:58:20.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:20.346" level="INFO">ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6</msg>
<status status="PASS" starttime="20250108 15:58:20.345" endtime="20250108 15:58:20.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:20.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:20.347" endtime="20250108 15:58:20.347"/>
</kw>
<status status="PASS" starttime="20250108 15:58:19.981" endtime="20250108 15:58:20.347"/>
</kw>
<msg timestamp="20250108 15:58:20.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:19.981" endtime="20250108 15:58:20.347"/>
</kw>
<msg timestamp="20250108 15:58:20.347" level="INFO">${secret} = ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6</msg>
<status status="PASS" starttime="20250108 15:58:19.980" endtime="20250108 15:58:20.347"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250108 15:58:20.348" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'ec78f16dafc386d641ed7a17a9f4df3e44620ee8969a81dac80f0b6a52f813b6'.</msg>
<status status="PASS" starttime="20250108 15:58:20.348" endtime="20250108 15:58:20.348"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250108 15:58:20.348" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/scm@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20250108 15:58:20.348" endtime="20250108 15:58:20.348"/>
</kw>
<status status="PASS" starttime="20250108 15:58:19.609" endtime="20250108 15:58:20.348"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>RCLONE_CONFIG</arg>
<arg>${RCLONE_CONFIG_PATH}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250108 15:58:20.348" level="INFO">Environment variable 'RCLONE_CONFIG' set to value '/tmp/rclone.conf'.</msg>
<status status="PASS" starttime="20250108 15:58:20.348" endtime="20250108 15:58:20.349"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>RCLONE_VERBOSE</arg>
<arg>${RCLONE_VERBOSE_LEVEL}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20250108 15:58:20.349" level="INFO">Environment variable 'RCLONE_VERBOSE' set to value '2'.</msg>
<status status="PASS" starttime="20250108 15:58:20.349" endtime="20250108 15:58:20.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>rclone config create ${RCLONE_CONFIG_NAME} s3 env_auth=true provider=Other endpoint=${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:20.352" level="INFO">Running command 'rclone config create ozone s3 env_auth=true provider=Other endpoint=http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:20.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:20.411" level="INFO">${output} = 2025/01/08 15:58:20 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/01/08 15:58:20...</msg>
<status status="PASS" starttime="20250108 15:58:20.350" endtime="20250108 15:58:20.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:20.412" level="INFO">2025/01/08 15:58:20 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/01/08 15:58:20 NOTICE: Config file "/tmp/rclone.conf" not found - using defaults
2025/01/08 15:58:20 DEBUG : Saving config "env_auth" in section "ozone" of the config file
2025/01/08 15:58:20 DEBUG : Using default permissions for config file: -rw-------
2025/01/08 15:58:20 DEBUG : Saving config "provider" in section "ozone" of the config file
2025/01/08 15:58:20 DEBUG : Saving config "endpoint" in section "ozone" of the config file
2025/01/08 15:58:20 DEBUG : ozone: config in: state="", result=""
2025/01/08 15:58:20 DEBUG : ozone: config out: out=&lt;nil&gt;, err=&lt;nil&gt;
[ozone]
type = s3
env_auth = true
provider = Other
endpoint = http://s3g:9878
2025/01/08 15:58:20 DEBUG : rclone: Version "v1.68.2" finishing with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]</msg>
<status status="PASS" starttime="20250108 15:58:20.411" endtime="20250108 15:58:20.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:20.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:20.412" endtime="20250108 15:58:20.413"/>
</kw>
<status status="PASS" starttime="20250108 15:58:20.350" endtime="20250108 15:58:20.413"/>
</kw>
<msg timestamp="20250108 15:58:20.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:20.349" endtime="20250108 15:58:20.413"/>
</kw>
<msg timestamp="20250108 15:58:20.413" level="INFO">${result} = 2025/01/08 15:58:20 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "config" "create" "ozone" "s3" "env_auth=true" "provider=Other" "endpoint=http://s3g:9878"]
2025/01/08 15:58:20...</msg>
<status status="PASS" starttime="20250108 15:58:20.349" endtime="20250108 15:58:20.413"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>rclone copy /opt/hadoop/smoketest ${RCLONE_CONFIG_NAME}:/${S3_VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:20.416" level="INFO">Running command 'rclone copy /opt/hadoop/smoketest ozone:/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:25.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:25.843" level="INFO">${output} = 2025/01/08 15:58:20 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/encrypted"]
2025/01/08 15:58:20 DEBUG : Creating backend with remote...</msg>
<status status="PASS" starttime="20250108 15:58:20.414" endtime="20250108 15:58:25.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:25.844" level="INFO">2025/01/08 15:58:20 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/encrypted"]
2025/01/08 15:58:20 DEBUG : Creating backend with remote "/opt/hadoop/smoketest"
2025/01/08 15:58:20 DEBUG : Using config file from "/tmp/rclone.conf"
2025/01/08 15:58:20 DEBUG : Creating backend with remote "ozone:/s3v/encrypted"
2025/01/08 15:58:20 DEBUG : fs cache: renaming cache item "ozone:/s3v/encrypted" to be canonical "ozone:s3v/encrypted"
2025/01/08 15:58:20 DEBUG : .env: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : README.md: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : __init__.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : commonlib.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : createbucketenv.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : createmrenv.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : csi.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : kinit-hadoop.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : kinit.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : mapreduce.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : test.sh: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : debug/ozone-debug-corrupt-block.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : debug/ozone-debug-dead-datanode.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : debug/ozone-debug-ldb.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : debug/ozone-debug-lease-recovery.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : debug/ozone-debug-stale-datanode.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : debug/ozone-debug-tests.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : debug/ozone-debug.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ec/basic.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ec/lib.resource: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ec/read.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ec/rewrite.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ec/upgrade-ec-check.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : failing/test1.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : failing/test2.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : fcq/s3_om_fcq.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : freon/echoRPCLoad.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : freon/generate-chunk.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : freon/generate.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : freon/hsync.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : freon/metadata-generate.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : freon/read-write-key.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : freon/remove.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : freon/validate-chunk.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : freon/validate.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : gdpr/gdpr.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : certrotation/cert-rotation.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : grpc/grpc-om-s3-metrics.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : hsync/upgrade-hsync-check.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : cli/classpath.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : httpfs/operations.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : httpfs/operations_tests.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : lib/fs.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : certrotation/root-ca-rotation-client-checks.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : cli/envvars.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : balancer/testBalancer.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : basic/basic.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : admincli/admin.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : auditparser/auditparser.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : compatibility/dn-one-rocksdb.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : lib/fs_tests.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : lib/os.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : lib/os_tests.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : lib/string.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : lib/string_tests.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ozonefs/hadoopo3fs.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ozonefs/ozonefs.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ozonefs/setup.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : recon/recon-api.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : recon/recon-nssummary.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : basic/getconf.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : basic/links.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : basic/ozone-shell-lib.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : basic/ozone-shell-single.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : basic/ozone-shell.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : basic/single_node.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : scmha/primordial-scm.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : scmha/root-ca-rotation.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : scmha/scm-decommission.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : scmha/scm-leader-transfer.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : replication/wait.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : security/S3-secret.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : security/admin-cert.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : security/ozone-secure-fs.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : security/ozone-secure-owner-s3.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : security/ozone-secure-s3.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : security/ozone-secure-tenant.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : security/ozone-secure-token.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : spnego/web.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : topology/cli.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : topology/loaddata.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : topology/readdata.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : upgrade/check-finalization.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : upgrade/finalize.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : upgrade/generate.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : upgrade/prepare.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : upgrade/validate.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : snapshot/snapshot-acls.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : snapshot/snapshot-fs.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : snapshot/snapshot-setup.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : snapshot/snapshot-sh.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : snapshot/upgrade-snapshot-check.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : omha/data-creation-before-om-bootstrap.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : omha/data-validation-after-om-bootstrap.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : omha/om-cancel-prepare.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : omha/om-fetch-key.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : omha/om-leader-transfer.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : omha/om-prepare.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : omha/om-prepared.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : omha/om-roles.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : omha/testOMHA.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ozone-lib/freon.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ozone-lib/shell.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : compatibility/dn.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : om-ratis/testOMAdminCmd.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : admincli/cert.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/MultipartUpload.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/README.md: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/__init__.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/awss3.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/awss3virtualhost.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/boto3.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/boto_client.py: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/bucketcreate.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/bucketdelete.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/buckethead.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/bucketlist.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/commonawslib.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/freon.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/mpu_lib.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/objectcopy.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/objectcopys3a.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/objectdelete.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/objecthead.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/objectmultidelete.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/objectputget.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/objecttagging.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/rclone.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/s3_compatbility_check.sh: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/s3_getsecret.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/secretgenerate.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/secretrevoke.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : s3/webui.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : ozone-lib/shell_tests.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : compatibility/om.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : compatibility/read.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : compatibility/recon.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : compatibility/scm.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : compatibility/setup.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : compatibility/write.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : admincli/container.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : admincli/datanode.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : admincli/pipeline.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : admincli/printTopology.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : admincli/reconfigure.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : admincli/replicationmanager.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : admincli/safemode.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : admincli/scmrole.robot: Need to transfer - File not found at Destination
2025/01/08 15:58:20 DEBUG : S3 bucket s3v path encrypted: Waiting for checks to finish
2025/01/08 15:58:20 DEBUG : S3 bucket s3v path encrypted: Waiting for transfers to finish
2025/01/08 15:58:20 INFO  : S3 bucket s3v path encrypted: Bucket "s3v" created with ACL ""
2025/01/08 15:58:20 DEBUG : commonlib.robot: md5 = f35ee74dcb4b089c1dd2a06c8d59a7cb OK
2025/01/08 15:58:20 INFO  : commonlib.robot: Copied (new)
2025/01/08 15:58:20 DEBUG : README.md: md5 = 17df896fbc01fff5fb5b9db87fd9e014 OK
2025/01/08 15:58:20 INFO  : README.md: Copied (new)
2025/01/08 15:58:20 DEBUG : .env: md5 = 2de437d9b3eab670f0cd120a8106be95 OK
2025/01/08 15:58:20 INFO  : .env: Copied (new)
2025/01/08 15:58:20 DEBUG : __init__.robot: md5 = 3e4f357bbd75e1f408f5730125e3d69f OK
2025/01/08 15:58:20 INFO  : __init__.robot: Copied (new)
2025/01/08 15:58:20 DEBUG : createbucketenv.robot: md5 = c879380e6beff95ce11e3a64a51f113e OK
2025/01/08 15:58:20 INFO  : createbucketenv.robot: Copied (new)
2025/01/08 15:58:20 DEBUG : csi.robot: md5 = b626d511d7707277a894085bf5374e83 OK
2025/01/08 15:58:20 INFO  : csi.robot: Copied (new)
2025/01/08 15:58:20 DEBUG : createmrenv.robot: md5 = 76f31b9aa05ce60f5b2960a224ba8cfd OK
2025/01/08 15:58:20 INFO  : createmrenv.robot: Copied (new)
2025/01/08 15:58:20 DEBUG : kinit-hadoop.robot: md5 = 8401390e0e40e74a4185c2b7f4187b01 OK
2025/01/08 15:58:20 INFO  : kinit-hadoop.robot: Copied (new)
2025/01/08 15:58:20 DEBUG : kinit.robot: md5 = ff777fbe3aa12927c1de1e4a3d0126bf OK
2025/01/08 15:58:20 INFO  : kinit.robot: Copied (new)
2025/01/08 15:58:20 DEBUG : test.sh: md5 = ed5682637036980f884a70c9d898cffd OK
2025/01/08 15:58:20 INFO  : test.sh: Copied (new)
2025/01/08 15:58:21 DEBUG : debug/ozone-debug-dead-datanode.robot: md5 = 4aef4e89c8971dfb52dfc5cbaa3478e2 OK
2025/01/08 15:58:21 INFO  : debug/ozone-debug-dead-datanode.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : debug/ozone-debug-corrupt-block.robot: md5 = f556fab8e3925a4fea40eb972f71bc27 OK
2025/01/08 15:58:21 INFO  : debug/ozone-debug-corrupt-block.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : mapreduce.robot: md5 = 0f9c6faf7612a3a08a73382cc5cc3285 OK
2025/01/08 15:58:21 INFO  : mapreduce.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : debug/ozone-debug-ldb.robot: md5 = cc5a9707d5b273b0cc1b185fdaddd415 OK
2025/01/08 15:58:21 INFO  : debug/ozone-debug-ldb.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : debug/ozone-debug-stale-datanode.robot: md5 = 9997cee365bb0695b2d9d37c2752b77c OK
2025/01/08 15:58:21 INFO  : debug/ozone-debug-stale-datanode.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : debug/ozone-debug-lease-recovery.robot: md5 = 837a3fb9cb2240c800a59ceb149d6282 OK
2025/01/08 15:58:21 INFO  : debug/ozone-debug-lease-recovery.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : debug/ozone-debug-tests.robot: md5 = a81feeb100f6d06d2844a10a0c3cfa0e OK
2025/01/08 15:58:21 INFO  : debug/ozone-debug-tests.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : debug/ozone-debug.robot: md5 = abe981782e4f739012ee17efd15c653a OK
2025/01/08 15:58:21 INFO  : debug/ozone-debug.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : ec/basic.robot: md5 = 5c31a5db433ed08496f786ee27531a8e OK
2025/01/08 15:58:21 INFO  : ec/basic.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : ec/lib.resource: md5 = 9db19e6c4eec84a56e1527a0e5c0eedb OK
2025/01/08 15:58:21 INFO  : ec/lib.resource: Copied (new)
2025/01/08 15:58:21 DEBUG : ec/rewrite.robot: md5 = 58ee9e6157cf8e88593d686d55eebea5 OK
2025/01/08 15:58:21 INFO  : ec/rewrite.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : ec/read.robot: md5 = 6a1409d13888ee6c452afae4e1fa5440 OK
2025/01/08 15:58:21 INFO  : ec/read.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : failing/test1.robot: md5 = 096d2965be1aba0411e6f60d8b90db60 OK
2025/01/08 15:58:21 INFO  : failing/test1.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : ec/upgrade-ec-check.robot: md5 = 98acf9175a001fb901e6fc90808a6c5b OK
2025/01/08 15:58:21 INFO  : ec/upgrade-ec-check.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : fcq/s3_om_fcq.robot: md5 = 09872d18952b1ed19476e9be82197d97 OK
2025/01/08 15:58:21 INFO  : fcq/s3_om_fcq.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : failing/test2.robot: md5 = 48a8a3810b50776e3c666ad8329874c4 OK
2025/01/08 15:58:21 INFO  : failing/test2.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : freon/generate-chunk.robot: md5 = b2ea5843932f9dd4aace06b987a5a95b OK
2025/01/08 15:58:21 INFO  : freon/generate-chunk.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : freon/echoRPCLoad.robot: md5 = 2fc53080896aa6c46c9065a2f95f8a06 OK
2025/01/08 15:58:21 INFO  : freon/echoRPCLoad.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : freon/generate.robot: md5 = 794114406a50ce0efa2eb018c63e3569 OK
2025/01/08 15:58:21 INFO  : freon/generate.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : freon/hsync.robot: md5 = 67303a57b73bf512cd3c115506691ab4 OK
2025/01/08 15:58:21 INFO  : freon/hsync.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : freon/metadata-generate.robot: md5 = 9212bb41f3c6725b4cfbf27563256dc1 OK
2025/01/08 15:58:21 INFO  : freon/metadata-generate.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : freon/read-write-key.robot: md5 = 97b5b3757ce62078e01acb30bf857bc9 OK
2025/01/08 15:58:21 INFO  : freon/read-write-key.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : freon/remove.robot: md5 = 069bd821affc2700b55e95e923debb40 OK
2025/01/08 15:58:21 INFO  : freon/remove.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : freon/validate.robot: md5 = de7167e08a627d9edba48f6493b3b21d OK
2025/01/08 15:58:21 INFO  : freon/validate.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : gdpr/gdpr.robot: md5 = 55db38304c3687e1ced9f24c5351acc3 OK
2025/01/08 15:58:21 INFO  : gdpr/gdpr.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : freon/validate-chunk.robot: md5 = 59e91563fa0a2fb6c3c84ca4e85fa12a OK
2025/01/08 15:58:21 INFO  : freon/validate-chunk.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : certrotation/cert-rotation.robot: md5 = c5c790317ea695e9a10056e4d3345633 OK
2025/01/08 15:58:21 INFO  : certrotation/cert-rotation.robot: Copied (new)
2025/01/08 15:58:21 DEBUG : hsync/upgrade-hsync-check.robot: md5 = 29b422caf7a6104c83d4dd7403c43bb3 OK
2025/01/08 15:58:21 INFO  : hsync/upgrade-hsync-check.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : grpc/grpc-om-s3-metrics.robot: md5 = 46e600db0f1a54a11f51e680ea737807 OK
2025/01/08 15:58:22 INFO  : grpc/grpc-om-s3-metrics.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : httpfs/operations.robot: md5 = 3abce0ef1c2d9e19c348e2eb093a0123 OK
2025/01/08 15:58:22 INFO  : httpfs/operations.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : cli/classpath.robot: md5 = 56071fa2cdcf819011667d597f0de700 OK
2025/01/08 15:58:22 INFO  : cli/classpath.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : httpfs/operations_tests.robot: md5 = b5037537a59479fa397f521858151de7 OK
2025/01/08 15:58:22 INFO  : httpfs/operations_tests.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : certrotation/root-ca-rotation-client-checks.robot: md5 = 753e60393a600d76facb7a02c9377546 OK
2025/01/08 15:58:22 INFO  : certrotation/root-ca-rotation-client-checks.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : lib/fs.robot: md5 = 37f5052dda89a5965f9b25e32a19400f OK
2025/01/08 15:58:22 INFO  : lib/fs.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : cli/envvars.robot: md5 = 97be7992b4b7681defe5391bbe55c75d OK
2025/01/08 15:58:22 INFO  : cli/envvars.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : lib/os.robot: md5 = 0d5c26d90f992ec5e493fbd261b802a0 OK
2025/01/08 15:58:22 INFO  : lib/os.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : balancer/testBalancer.robot: md5 = b100fea9912fc01d1e27cc1b77c83b31 OK
2025/01/08 15:58:22 INFO  : balancer/testBalancer.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : lib/fs_tests.robot: md5 = 659a8762cd74723d9f1aa58553c56bd3 OK
2025/01/08 15:58:22 INFO  : lib/fs_tests.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : lib/os_tests.robot: md5 = 2fff5aeac04f4cd0b44ad37027aee143 OK
2025/01/08 15:58:22 INFO  : lib/os_tests.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : lib/string.robot: md5 = 3f328b056d05b4c0b1de0155300722b3 OK
2025/01/08 15:58:22 INFO  : lib/string.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : lib/string_tests.robot: md5 = 6cb4abeaa32800093caab1e3ef3a6dc8 OK
2025/01/08 15:58:22 INFO  : lib/string_tests.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : ozonefs/hadoopo3fs.robot: md5 = af6c7cdaa17e6814065c51678a719de8 OK
2025/01/08 15:58:22 INFO  : ozonefs/hadoopo3fs.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : ozonefs/setup.robot: md5 = 654df9c1aba73bbe70615bd138bbe9ea OK
2025/01/08 15:58:22 INFO  : ozonefs/setup.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : ozonefs/ozonefs.robot: md5 = c065378df949a1edbd8438dc17438755 OK
2025/01/08 15:58:22 INFO  : ozonefs/ozonefs.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : recon/recon-api.robot: md5 = f5af7d2e74c23d011027ac387f521a4b OK
2025/01/08 15:58:22 INFO  : recon/recon-api.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : recon/recon-nssummary.robot: md5 = 6913f9075574a8ea22e660e42bda74fe OK
2025/01/08 15:58:22 INFO  : recon/recon-nssummary.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : basic/basic.robot: md5 = 82a250b46e17af336904e2a40ae44f7c OK
2025/01/08 15:58:22 INFO  : basic/basic.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : auditparser/auditparser.robot: md5 = 8ff2197aa518510361cdc3ce585b6ce2 OK
2025/01/08 15:58:22 INFO  : auditparser/auditparser.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : basic/getconf.robot: md5 = e4b3cc6aba745ad47ae7096b96b696d7 OK
2025/01/08 15:58:22 INFO  : basic/getconf.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : basic/links.robot: md5 = 8c83ffb1ea41297c3739ac299f4bf9c8 OK
2025/01/08 15:58:22 INFO  : basic/links.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : basic/ozone-shell-single.robot: md5 = 91830dc70ef59cdfc3776547feecf417 OK
2025/01/08 15:58:22 INFO  : basic/ozone-shell-single.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : basic/ozone-shell-lib.robot: md5 = 758fd970cf17e94cb1f66fdeb17aa64d OK
2025/01/08 15:58:22 INFO  : basic/ozone-shell-lib.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : basic/ozone-shell.robot: md5 = 3afa3f07707cfbf3931b321af6db8332 OK
2025/01/08 15:58:22 INFO  : basic/ozone-shell.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : scmha/primordial-scm.robot: md5 = c6be6e3c99778e59a6941565ea904f37 OK
2025/01/08 15:58:22 INFO  : scmha/primordial-scm.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : basic/single_node.robot: md5 = 83014215421eac19113e5d9e73d3b5d8 OK
2025/01/08 15:58:22 INFO  : basic/single_node.robot: Copied (new)
2025/01/08 15:58:22 DEBUG : scmha/root-ca-rotation.robot: md5 = bcffcde9f44f71177636bd67d64cde0c OK
2025/01/08 15:58:22 INFO  : scmha/root-ca-rotation.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : scmha/scm-decommission.robot: md5 = 4f92e183f637f288f1c09cc28e5c35f8 OK
2025/01/08 15:58:23 INFO  : scmha/scm-decommission.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : scmha/scm-leader-transfer.robot: md5 = 51aaf7c7dd2e3a9ef6ce31b50e617425 OK
2025/01/08 15:58:23 INFO  : scmha/scm-leader-transfer.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : replication/wait.robot: md5 = 6c2234cd0a195a66958f1b95e06ca22f OK
2025/01/08 15:58:23 INFO  : replication/wait.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : security/S3-secret.robot: md5 = d7dcdb93c4d1410f43c692576b9a021e OK
2025/01/08 15:58:23 INFO  : security/S3-secret.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : security/admin-cert.robot: md5 = 77c7d7f0aa43c7b81b26021bd3da0531 OK
2025/01/08 15:58:23 INFO  : security/admin-cert.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : compatibility/dn-one-rocksdb.robot: md5 = d16efdee6f3305a9f69a124ffcbe24bc OK
2025/01/08 15:58:23 INFO  : compatibility/dn-one-rocksdb.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : admincli/admin.robot: md5 = d39b70dc555c6c987f6cc5bed2811b3d OK
2025/01/08 15:58:23 INFO  : admincli/admin.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : security/ozone-secure-fs.robot: md5 = feac34a4a3e86b047206038a9018f31a OK
2025/01/08 15:58:23 INFO  : security/ozone-secure-fs.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : security/ozone-secure-owner-s3.robot: md5 = 3e7cfb86bcac237e0fbb8d56f0f744b0 OK
2025/01/08 15:58:23 INFO  : security/ozone-secure-owner-s3.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : security/ozone-secure-s3.robot: md5 = f2ee95c122db6a64890f21818ff5d0f5 OK
2025/01/08 15:58:23 INFO  : security/ozone-secure-s3.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : security/ozone-secure-tenant.robot: md5 = 638546f4ca6201cfc7bba27b87a2495c OK
2025/01/08 15:58:23 INFO  : security/ozone-secure-tenant.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : security/ozone-secure-token.robot: md5 = f0bc9c409bf869d559d0386a5d3bd826 OK
2025/01/08 15:58:23 INFO  : security/ozone-secure-token.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : spnego/web.robot: md5 = 6891b9a6a120773f347563f2b334730e OK
2025/01/08 15:58:23 INFO  : spnego/web.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : topology/loaddata.robot: md5 = 6f2723e7d07650f411a67a272b33de40 OK
2025/01/08 15:58:23 INFO  : topology/loaddata.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : topology/cli.robot: md5 = 1312a3e8e54ae621f71b8c579610389c OK
2025/01/08 15:58:23 INFO  : topology/cli.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : topology/readdata.robot: md5 = 924403a1188642f6cb1f939631d9b8fd OK
2025/01/08 15:58:23 INFO  : topology/readdata.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : upgrade/finalize.robot: md5 = 2a8a50ebe55fd6527750e3f997a3caed OK
2025/01/08 15:58:23 INFO  : upgrade/finalize.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : upgrade/check-finalization.robot: md5 = 2ec44c3cfb922f39cc948eee24d3ee44 OK
2025/01/08 15:58:23 INFO  : upgrade/check-finalization.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : upgrade/prepare.robot: md5 = 6b07fdc028074a0ea045f14392770610 OK
2025/01/08 15:58:23 INFO  : upgrade/prepare.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : upgrade/generate.robot: md5 = 87c3babbadb7231a37035b0fb45c012d OK
2025/01/08 15:58:23 INFO  : upgrade/generate.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : upgrade/validate.robot: md5 = 4997452324a0fd6c01066d94d2938704 OK
2025/01/08 15:58:23 INFO  : upgrade/validate.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : snapshot/snapshot-acls.robot: md5 = 5165ce0e5d63ddba8123fccdbc7fe74e OK
2025/01/08 15:58:23 INFO  : snapshot/snapshot-acls.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : snapshot/snapshot-fs.robot: md5 = 8303ebaf2fc12efc0eedf897a3b8388b OK
2025/01/08 15:58:23 INFO  : snapshot/snapshot-fs.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : snapshot/snapshot-setup.robot: md5 = deee56580a640f4f2a24c27e2875deef OK
2025/01/08 15:58:23 INFO  : snapshot/snapshot-setup.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : snapshot/snapshot-sh.robot: md5 = b7089719e57e909dc80406968156276e OK
2025/01/08 15:58:23 INFO  : snapshot/snapshot-sh.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : snapshot/upgrade-snapshot-check.robot: md5 = 94052acf25531c5779f6e67fe1a5e5d8 OK
2025/01/08 15:58:23 INFO  : snapshot/upgrade-snapshot-check.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : omha/data-creation-before-om-bootstrap.robot: md5 = 7ce911a55a7fb5edd84c77e3942ae57b OK
2025/01/08 15:58:23 INFO  : omha/data-creation-before-om-bootstrap.robot: Copied (new)
2025/01/08 15:58:23 DEBUG : omha/data-validation-after-om-bootstrap.robot: md5 = ebef0dcb8b6ade5f72ea7805764edd61 OK
2025/01/08 15:58:23 INFO  : omha/data-validation-after-om-bootstrap.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : omha/om-cancel-prepare.robot: md5 = 9d970a2b8e82faa67bfb3f2559f3b2d5 OK
2025/01/08 15:58:24 INFO  : omha/om-cancel-prepare.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : omha/om-fetch-key.robot: md5 = 107bc35bac744c63479a62c484173dcd OK
2025/01/08 15:58:24 INFO  : omha/om-fetch-key.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : omha/om-prepare.robot: md5 = d555d6a6176d694c0e68139157d7178f OK
2025/01/08 15:58:24 INFO  : omha/om-prepare.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : omha/om-leader-transfer.robot: md5 = 2300435cfdb5fd36295701e65c730217 OK
2025/01/08 15:58:24 INFO  : omha/om-leader-transfer.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : omha/om-prepared.robot: md5 = cef530c89296bc0f60aa3abc750c67ae OK
2025/01/08 15:58:24 INFO  : omha/om-prepared.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : omha/om-roles.robot: md5 = 72254e4c5dcce7eb25e939dd388c184e OK
2025/01/08 15:58:24 INFO  : omha/om-roles.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : ozone-lib/freon.robot: md5 = 92b3859196c46cf840c46923815692a5 OK
2025/01/08 15:58:24 INFO  : ozone-lib/freon.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : omha/testOMHA.robot: md5 = 76420a98f0abcd940eb808e88dca8ddb OK
2025/01/08 15:58:24 INFO  : omha/testOMHA.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/README.md: md5 = 4967f548b5fbc96c22e590f6352de20c OK
2025/01/08 15:58:24 INFO  : s3/README.md: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/MultipartUpload.robot: md5 = ae748c4e0af847b0700ee6a9c53b9006 OK
2025/01/08 15:58:24 INFO  : s3/MultipartUpload.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/awss3.robot: md5 = 613af88fef39a5eb7fd1ad90f655accf OK
2025/01/08 15:58:24 INFO  : s3/awss3.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/__init__.robot: md5 = 23063b5cc483e26c9391946748d0e9c0 OK
2025/01/08 15:58:24 INFO  : s3/__init__.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/boto3.robot: md5 = 57deba6f5134410aa7132bcbba35bf02 OK
2025/01/08 15:58:24 INFO  : s3/boto3.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/awss3virtualhost.robot: md5 = 96d3468b5d85ac399b3955acfb0f5dfb OK
2025/01/08 15:58:24 INFO  : s3/awss3virtualhost.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/bucketcreate.robot: md5 = 62dba6ffa76fe172082a845dca604d6e OK
2025/01/08 15:58:24 INFO  : s3/bucketcreate.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/bucketdelete.robot: md5 = c1d00766ad49e0c124d009c6007d5c91 OK
2025/01/08 15:58:24 INFO  : s3/bucketdelete.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/buckethead.robot: md5 = 2bb1986d15d3ae567300b5e313e894bb OK
2025/01/08 15:58:24 INFO  : s3/buckethead.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/boto_client.py: md5 = 67191f51cc17259b5b31d0083dd1c8af OK
2025/01/08 15:58:24 INFO  : s3/boto_client.py: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/bucketlist.robot: md5 = fbb9afb6fa4f7f2ac2eea383f8bf319e OK
2025/01/08 15:58:24 INFO  : s3/bucketlist.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/commonawslib.robot: md5 = 24fad4f84a921ea9819269ea5c1c1104 OK
2025/01/08 15:58:24 INFO  : s3/commonawslib.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/freon.robot: md5 = a0a59d691e3baf7be0aea34198319f79 OK
2025/01/08 15:58:24 INFO  : s3/freon.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/mpu_lib.robot: md5 = 64b8fcd0c76085408602f5224a615a5d OK
2025/01/08 15:58:24 INFO  : s3/mpu_lib.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/objectdelete.robot: md5 = e088e8a4177b2a88978d9d7b0e0eca7c OK
2025/01/08 15:58:24 INFO  : s3/objectdelete.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/objectcopy.robot: md5 = 30e2c16d6411104c566d3d278fe9158c OK
2025/01/08 15:58:24 INFO  : s3/objectcopy.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/objectcopys3a.robot: md5 = bef140aaa9c1c502fabaf129f9ac516c OK
2025/01/08 15:58:24 INFO  : s3/objectcopys3a.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/objecthead.robot: md5 = 013c35538293ecef75dec800ad2052e2 OK
2025/01/08 15:58:24 INFO  : s3/objecthead.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/objectmultidelete.robot: md5 = df1f9f0b36f9093d141d3eee4ea1a941 OK
2025/01/08 15:58:24 INFO  : s3/objectmultidelete.robot: Copied (new)
2025/01/08 15:58:24 DEBUG : s3/objectputget.robot: md5 = 7573fe2e4e0debbd5a5479aef8992172 OK
2025/01/08 15:58:24 INFO  : s3/objectputget.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : s3/rclone.robot: md5 = d21ab56698189510215111a278dad68e OK
2025/01/08 15:58:25 INFO  : s3/rclone.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : s3/objecttagging.robot: md5 = 91be9cf21ad20dcdec46bd5b4ee2df90 OK
2025/01/08 15:58:25 INFO  : s3/objecttagging.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : s3/s3_compatbility_check.sh: md5 = 034162b7078c6076ebb59eaa4b5473cc OK
2025/01/08 15:58:25 INFO  : s3/s3_compatbility_check.sh: Copied (new)
2025/01/08 15:58:25 DEBUG : s3/s3_getsecret.robot: md5 = 13e88d6b5040c3bfd441335745f803bc OK
2025/01/08 15:58:25 INFO  : s3/s3_getsecret.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : s3/secretgenerate.robot: md5 = 6488717e37a1b9dfdcb45948caf4eaf2 OK
2025/01/08 15:58:25 INFO  : s3/secretgenerate.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : s3/secretrevoke.robot: md5 = fad00ae3b97b2b3e21180a73f59f44c8 OK
2025/01/08 15:58:25 INFO  : s3/secretrevoke.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : s3/webui.robot: md5 = 9bb0ab60ddd8632befc79c71790aeaa0 OK
2025/01/08 15:58:25 INFO  : s3/webui.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : ozone-lib/shell.robot: md5 = 57d075c0e77bc7db6882a8ba6066b428 OK
2025/01/08 15:58:25 INFO  : ozone-lib/shell.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : ozone-lib/shell_tests.robot: md5 = 0731e1512a9ef08685cd5f1a671a0374 OK
2025/01/08 15:58:25 INFO  : ozone-lib/shell_tests.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : compatibility/dn.robot: md5 = 1562fd650324206ae5229fcaf4d978c3 OK
2025/01/08 15:58:25 INFO  : compatibility/dn.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : compatibility/om.robot: md5 = 214be7d865c25b6c8808ddae5aceea2b OK
2025/01/08 15:58:25 INFO  : compatibility/om.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : compatibility/read.robot: md5 = e8bf5f54cb4228c809efa9e0efe09fa0 OK
2025/01/08 15:58:25 INFO  : compatibility/read.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : compatibility/recon.robot: md5 = 17fc42834a46180c6a0d09722792d51a OK
2025/01/08 15:58:25 INFO  : compatibility/recon.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : compatibility/setup.robot: md5 = abee4cf943dea0d9eb9404a65c62259c OK
2025/01/08 15:58:25 INFO  : compatibility/setup.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : compatibility/scm.robot: md5 = b52956a2ccb6ca2ead8138b966a3cf69 OK
2025/01/08 15:58:25 INFO  : compatibility/scm.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : om-ratis/testOMAdminCmd.robot: md5 = b3e566d742593fdcbd4b25c49c1df9b9 OK
2025/01/08 15:58:25 INFO  : om-ratis/testOMAdminCmd.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : compatibility/write.robot: md5 = 27c4325259d4b71fd120a49c8a5b6246 OK
2025/01/08 15:58:25 INFO  : compatibility/write.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : admincli/container.robot: md5 = a7eb0d23c26a124b37bf2286589a01d2 OK
2025/01/08 15:58:25 INFO  : admincli/container.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : admincli/datanode.robot: md5 = b80f648efc34bae344513a2bbf822420 OK
2025/01/08 15:58:25 INFO  : admincli/datanode.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : admincli/cert.robot: md5 = 77dfdeefa42fc03d3ad817a2764b9278 OK
2025/01/08 15:58:25 INFO  : admincli/cert.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : admincli/pipeline.robot: md5 = f21de9178c946f815dca4591c48b6dce OK
2025/01/08 15:58:25 INFO  : admincli/pipeline.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : admincli/printTopology.robot: md5 = b13fb6db17d23a519907f231ccf56059 OK
2025/01/08 15:58:25 INFO  : admincli/printTopology.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : admincli/replicationmanager.robot: md5 = 93b30cc65865d2d684e987c4b94610e4 OK
2025/01/08 15:58:25 INFO  : admincli/replicationmanager.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : admincli/reconfigure.robot: md5 = 1a9e5cf67cb3472c99ca26262e522fcf OK
2025/01/08 15:58:25 INFO  : admincli/reconfigure.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : admincli/safemode.robot: md5 = d547033e4e042a61474a44e175954b86 OK
2025/01/08 15:58:25 INFO  : admincli/safemode.robot: Copied (new)
2025/01/08 15:58:25 DEBUG : admincli/scmrole.robot: md5 = c7a5aa9ad1e2277764da1517ff91e386 OK
2025/01/08 15:58:25 INFO  : admincli/scmrole.robot: Copied (new)
2025/01/08 15:58:25 INFO  : 
Transferred:   	  531.443 KiB / 531.443 KiB, 100%, 102.334 KiB/s, ETA 0s
Transferred:          148 / 148, 100%
Elapsed time:         5.3s

2025/01/08 15:58:25 DEBUG : 13 go routines active</msg>
<status status="PASS" starttime="20250108 15:58:25.843" endtime="20250108 15:58:25.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:25.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:25.845" endtime="20250108 15:58:25.846"/>
</kw>
<status status="PASS" starttime="20250108 15:58:20.414" endtime="20250108 15:58:25.846"/>
</kw>
<msg timestamp="20250108 15:58:25.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:20.414" endtime="20250108 15:58:25.846"/>
</kw>
<msg timestamp="20250108 15:58:25.848" level="INFO">${result} = 2025/01/08 15:58:20 DEBUG : rclone: Version "v1.68.2" starting with parameters ["rclone" "copy" "/opt/hadoop/smoketest" "ozone:/s3v/encrypted"]
2025/01/08 15:58:20 DEBUG : Creating backend with remote...</msg>
<status status="PASS" starttime="20250108 15:58:20.413" endtime="20250108 15:58:25.848"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20250108 15:58:19.608" endtime="20250108 15:58:25.848"/>
</test>
<doc>S3 gateway test with rclone client</doc>
<status status="PASS" starttime="20250108 15:58:19.599" endtime="20250108 15:58:25.849"/>
</suite>
<suite id="s1-s3-s17" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:58:25.857" endtime="20250108 15:58:25.858"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:25.863" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:25.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:25.873" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:58:25.859" endtime="20250108 15:58:25.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:25.874" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:58:25.873" endtime="20250108 15:58:25.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:25.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:25.874" endtime="20250108 15:58:25.875"/>
</kw>
<status status="PASS" starttime="20250108 15:58:25.859" endtime="20250108 15:58:25.875"/>
</kw>
<msg timestamp="20250108 15:58:25.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:25.859" endtime="20250108 15:58:25.875"/>
</kw>
<msg timestamp="20250108 15:58:25.875" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:58:25.858" endtime="20250108 15:58:25.875"/>
</kw>
<msg timestamp="20250108 15:58:25.875" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:58:25.858" endtime="20250108 15:58:25.875"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:58:25.876" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:58:25.876" endtime="20250108 15:58:25.876"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:25.882" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:25.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:25.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:25.878" endtime="20250108 15:58:25.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:25.931" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:25.930" endtime="20250108 15:58:25.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:25.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:25.931" endtime="20250108 15:58:25.931"/>
</kw>
<status status="PASS" starttime="20250108 15:58:25.878" endtime="20250108 15:58:25.932"/>
</kw>
<msg timestamp="20250108 15:58:25.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:25.877" endtime="20250108 15:58:25.932"/>
</kw>
<status status="PASS" starttime="20250108 15:58:25.877" endtime="20250108 15:58:25.932"/>
</kw>
<status status="PASS" starttime="20250108 15:58:25.876" endtime="20250108 15:58:25.932"/>
</kw>
<status status="PASS" starttime="20250108 15:58:25.857" endtime="20250108 15:58:25.932"/>
</kw>
<status status="PASS" starttime="20250108 15:58:25.856" endtime="20250108 15:58:25.932"/>
</kw>
<test id="s1-s3-s17-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:58:25.933" endtime="20250108 15:58:25.933"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:25.937" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:28.812" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:28.812" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:25.934" endtime="20250108 15:58:28.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:28.813" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:28.813" endtime="20250108 15:58:28.813"/>
</kw>
<status status="PASS" starttime="20250108 15:58:25.934" endtime="20250108 15:58:28.813"/>
</kw>
<status status="PASS" starttime="20250108 15:58:25.933" endtime="20250108 15:58:28.813"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:28.817" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:31.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:31.814" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=bd6eac343ed12eab7e39cc79fd506f5b4efba284a4e34ac8d30e8207d6b6bd57</msg>
<status status="PASS" starttime="20250108 15:58:28.815" endtime="20250108 15:58:31.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:31.815" level="INFO">awsAccessKey=testuser2
awsSecret=bd6eac343ed12eab7e39cc79fd506f5b4efba284a4e34ac8d30e8207d6b6bd57</msg>
<status status="PASS" starttime="20250108 15:58:31.814" endtime="20250108 15:58:31.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:31.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:31.815" endtime="20250108 15:58:31.815"/>
</kw>
<status status="PASS" starttime="20250108 15:58:28.814" endtime="20250108 15:58:31.815"/>
</kw>
<msg timestamp="20250108 15:58:31.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:28.814" endtime="20250108 15:58:31.815"/>
</kw>
<msg timestamp="20250108 15:58:31.815" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=bd6eac343ed12eab7e39cc79fd506f5b4efba284a4e34ac8d30e8207d6b6bd57</msg>
<status status="PASS" starttime="20250108 15:58:28.814" endtime="20250108 15:58:31.815"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:31.816" endtime="20250108 15:58:31.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20250108 15:58:31.816" endtime="20250108 15:58:31.817"/>
</kw>
<status status="PASS" starttime="20250108 15:58:31.816" endtime="20250108 15:58:31.817"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:31.819" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:34.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:34.888" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:58:31.817" endtime="20250108 15:58:34.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:34.889" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:58:34.888" endtime="20250108 15:58:34.889"/>
</kw>
<status status="PASS" starttime="20250108 15:58:31.817" endtime="20250108 15:58:34.889"/>
</kw>
<status status="PASS" starttime="20250108 15:58:31.817" endtime="20250108 15:58:34.889"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250108 15:58:25.932" endtime="20250108 15:58:34.889"/>
</test>
<test id="s1-s3-s17-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20250108 15:58:34.891" level="INFO">Execution passed with message:
duplicate test in non-HA env.</msg>
<status status="PASS" starttime="20250108 15:58:34.890" endtime="20250108 15:58:34.891"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20250108 15:58:34.891" endtime="20250108 15:58:34.891"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250108 15:58:34.892" endtime="20250108 15:58:34.892"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250108 15:58:34.892" endtime="20250108 15:58:34.892"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20250108 15:58:34.892" endtime="20250108 15:58:34.892"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20250108 15:58:34.892" endtime="20250108 15:58:34.892"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20250108 15:58:34.890" endtime="20250108 15:58:34.892">duplicate test in non-HA env.</status>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20250108 15:58:25.850" endtime="20250108 15:58:34.892"/>
</suite>
<suite id="s1-s3-s18" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<test id="s1-s3-s18-t1" name="S3 Gateway Generate Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:58:34.902" endtime="20250108 15:58:34.902"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:34.906" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:34.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:34.910" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:58:34.903" endtime="20250108 15:58:34.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:34.911" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:58:34.910" endtime="20250108 15:58:34.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:34.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:34.911" endtime="20250108 15:58:34.911"/>
</kw>
<status status="PASS" starttime="20250108 15:58:34.903" endtime="20250108 15:58:34.912"/>
</kw>
<msg timestamp="20250108 15:58:34.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:34.903" endtime="20250108 15:58:34.912"/>
</kw>
<msg timestamp="20250108 15:58:34.912" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:58:34.903" endtime="20250108 15:58:34.912"/>
</kw>
<msg timestamp="20250108 15:58:34.912" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:58:34.902" endtime="20250108 15:58:34.912"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:58:34.912" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:58:34.912" endtime="20250108 15:58:34.912"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:34.916" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:34.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:34.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:34.914" endtime="20250108 15:58:34.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:34.952" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:34.952" endtime="20250108 15:58:34.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:34.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:34.953" endtime="20250108 15:58:34.953"/>
</kw>
<status status="PASS" starttime="20250108 15:58:34.913" endtime="20250108 15:58:34.953"/>
</kw>
<msg timestamp="20250108 15:58:34.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:34.913" endtime="20250108 15:58:34.953"/>
</kw>
<status status="PASS" starttime="20250108 15:58:34.913" endtime="20250108 15:58:34.953"/>
</kw>
<status status="PASS" starttime="20250108 15:58:34.913" endtime="20250108 15:58:34.953"/>
</kw>
<status status="PASS" starttime="20250108 15:58:34.902" endtime="20250108 15:58:34.954"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:34.957" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:37.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:37.969" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:58:34.954" endtime="20250108 15:58:37.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:37.970" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:58:37.970" endtime="20250108 15:58:37.970"/>
</kw>
<status status="PASS" starttime="20250108 15:58:34.954" endtime="20250108 15:58:37.970"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:37.973" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:40.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:40.998" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:58:37.971" endtime="20250108 15:58:40.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:40.999" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:58:40.998" endtime="20250108 15:58:40.999"/>
</kw>
<status status="PASS" starttime="20250108 15:58:37.971" endtime="20250108 15:58:40.999"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:41.002" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:44.150" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:44.150" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:40.999" endtime="20250108 15:58:44.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:44.151" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:44.150" endtime="20250108 15:58:44.151"/>
</kw>
<status status="PASS" starttime="20250108 15:58:40.999" endtime="20250108 15:58:44.151"/>
</kw>
<status status="PASS" starttime="20250108 15:58:34.954" endtime="20250108 15:58:44.151"/>
</kw>
<status status="PASS" starttime="20250108 15:58:34.901" endtime="20250108 15:58:44.151"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:58:44.151" endtime="20250108 15:58:44.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:44.156" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:44.163" level="INFO">${rc} = 7</msg>
<msg timestamp="20250108 15:58:44.163" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250108 15:58:44.153" endtime="20250108 15:58:44.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:44.164" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.7:19878...
* connect to 172.19.0.7 port 19878 failed: Connection refused
* Failed to connect to s3g port 19878: Connection refused

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
curl: (7) Failed to connect to s3g port 19878: Connection refused</msg>
<status status="PASS" starttime="20250108 15:58:44.163" endtime="20250108 15:58:44.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:44.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250108 15:58:44.165" level="FAIL">7 != 0</msg>
<status status="FAIL" starttime="20250108 15:58:44.164" endtime="20250108 15:58:44.165"/>
</kw>
<status status="FAIL" starttime="20250108 15:58:44.152" endtime="20250108 15:58:44.165"/>
</kw>
<msg timestamp="20250108 15:58:44.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250108 15:58:44.152" endtime="20250108 15:58:44.165"/>
</kw>
<status status="FAIL" starttime="20250108 15:58:44.152" endtime="20250108 15:58:44.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:58:44.165" endtime="20250108 15:58:44.165"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20250108 15:58:44.165" endtime="20250108 15:58:44.165"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:44.169" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:47.423" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:47.423" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:44.167" endtime="20250108 15:58:47.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:47.423" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:47.423" endtime="20250108 15:58:47.424"/>
</kw>
<status status="PASS" starttime="20250108 15:58:44.166" endtime="20250108 15:58:47.424"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:47.426" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:50.674" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:50.674" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:47.424" endtime="20250108 15:58:50.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:50.675" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:50.674" endtime="20250108 15:58:50.675"/>
</kw>
<status status="PASS" starttime="20250108 15:58:47.424" endtime="20250108 15:58:50.675"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:50.678" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:53.779" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:53.779" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:50.676" endtime="20250108 15:58:53.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:53.780" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:53.780" endtime="20250108 15:58:53.780"/>
</kw>
<status status="PASS" starttime="20250108 15:58:50.675" endtime="20250108 15:58:53.780"/>
</kw>
<status status="PASS" starttime="20250108 15:58:44.166" endtime="20250108 15:58:53.780"/>
</kw>
<status status="PASS" starttime="20250108 15:58:44.166" endtime="20250108 15:58:53.780"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250108 15:58:34.901" endtime="20250108 15:58:53.781">7 != 0</status>
</test>
<test id="s1-s3-s18-t2" name="S3 Gateway Secret Already Exists" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:58:53.782" endtime="20250108 15:58:53.783"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:53.786" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:53.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:53.790" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:58:53.784" endtime="20250108 15:58:53.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:53.791" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:58:53.790" endtime="20250108 15:58:53.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:53.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:53.791" endtime="20250108 15:58:53.791"/>
</kw>
<status status="PASS" starttime="20250108 15:58:53.783" endtime="20250108 15:58:53.792"/>
</kw>
<msg timestamp="20250108 15:58:53.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:53.783" endtime="20250108 15:58:53.792"/>
</kw>
<msg timestamp="20250108 15:58:53.792" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:58:53.783" endtime="20250108 15:58:53.792"/>
</kw>
<msg timestamp="20250108 15:58:53.792" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:58:53.783" endtime="20250108 15:58:53.792"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:58:53.792" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:58:53.792" endtime="20250108 15:58:53.792"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:53.796" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:53.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:58:53.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:58:53.794" endtime="20250108 15:58:53.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:53.847" level="INFO"/>
<status status="PASS" starttime="20250108 15:58:53.846" endtime="20250108 15:58:53.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:58:53.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:58:53.847" endtime="20250108 15:58:53.847"/>
</kw>
<status status="PASS" starttime="20250108 15:58:53.794" endtime="20250108 15:58:53.848"/>
</kw>
<msg timestamp="20250108 15:58:53.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:58:53.794" endtime="20250108 15:58:53.848"/>
</kw>
<status status="PASS" starttime="20250108 15:58:53.793" endtime="20250108 15:58:53.848"/>
</kw>
<status status="PASS" starttime="20250108 15:58:53.793" endtime="20250108 15:58:53.848"/>
</kw>
<status status="PASS" starttime="20250108 15:58:53.782" endtime="20250108 15:58:53.848"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:53.851" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:58:56.886" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:58:56.886" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:53.849" endtime="20250108 15:58:56.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:58:56.887" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:56.886" endtime="20250108 15:58:56.887"/>
</kw>
<status status="PASS" starttime="20250108 15:58:53.848" endtime="20250108 15:58:56.887"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:58:56.890" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:00.057" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:00.057" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:58:56.888" endtime="20250108 15:59:00.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:00.058" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:00.057" endtime="20250108 15:59:00.058"/>
</kw>
<status status="PASS" starttime="20250108 15:58:56.887" endtime="20250108 15:59:00.058"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:00.060" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:03.138" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:03.138" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:00.058" endtime="20250108 15:59:03.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:03.139" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:03.139" endtime="20250108 15:59:03.139"/>
</kw>
<status status="PASS" starttime="20250108 15:59:00.058" endtime="20250108 15:59:03.140"/>
</kw>
<status status="PASS" starttime="20250108 15:58:53.848" endtime="20250108 15:59:03.140"/>
</kw>
<status status="PASS" starttime="20250108 15:58:53.782" endtime="20250108 15:59:03.140"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:59:03.140" endtime="20250108 15:59:03.140"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:03.144" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:06.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:59:06.045" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1276a13776fc4bd5d6361860d73ba46e4a3e0e3102094f96dd054669083ef8ee</msg>
<status status="PASS" starttime="20250108 15:59:03.141" endtime="20250108 15:59:06.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:06.046" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1276a13776fc4bd5d6361860d73ba46e4a3e0e3102094f96dd054669083ef8ee</msg>
<status status="PASS" starttime="20250108 15:59:06.045" endtime="20250108 15:59:06.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:59:06.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:59:06.046" endtime="20250108 15:59:06.046"/>
</kw>
<status status="PASS" starttime="20250108 15:59:03.141" endtime="20250108 15:59:06.047"/>
</kw>
<msg timestamp="20250108 15:59:06.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:59:03.141" endtime="20250108 15:59:06.047"/>
</kw>
<status status="PASS" starttime="20250108 15:59:03.140" endtime="20250108 15:59:06.047"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:06.050" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:06.057" level="INFO">${rc} = 7</msg>
<msg timestamp="20250108 15:59:06.057" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250108 15:59:06.048" endtime="20250108 15:59:06.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:06.058" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.7:19878...
* connect to 172.19.0.7 port 19878 failed: Connection refused
* Failed to connect to s3g port 19878: Connection refused

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
curl: (7) Failed to connect to s3g port 19878: Connection refused</msg>
<status status="PASS" starttime="20250108 15:59:06.058" endtime="20250108 15:59:06.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:59:06.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250108 15:59:06.059" level="FAIL">7 != 0</msg>
<status status="FAIL" starttime="20250108 15:59:06.058" endtime="20250108 15:59:06.059"/>
</kw>
<status status="FAIL" starttime="20250108 15:59:06.047" endtime="20250108 15:59:06.059"/>
</kw>
<msg timestamp="20250108 15:59:06.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250108 15:59:06.047" endtime="20250108 15:59:06.059"/>
</kw>
<status status="FAIL" starttime="20250108 15:59:06.047" endtime="20250108 15:59:06.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 400 S3_SECRET_ALREADY_EXISTS</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:59:06.059" endtime="20250108 15:59:06.059"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:06.062" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:09.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:59:09.285" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:59:06.060" endtime="20250108 15:59:09.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:09.286" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 15:59:09.286" endtime="20250108 15:59:09.286"/>
</kw>
<status status="PASS" starttime="20250108 15:59:06.060" endtime="20250108 15:59:09.286"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:09.289" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:12.340" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:12.340" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:09.287" endtime="20250108 15:59:12.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:12.341" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:12.341" endtime="20250108 15:59:12.341"/>
</kw>
<status status="PASS" starttime="20250108 15:59:09.286" endtime="20250108 15:59:12.341"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:12.344" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:15.180" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:15.180" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:12.342" endtime="20250108 15:59:15.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:15.181" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:15.181" endtime="20250108 15:59:15.181"/>
</kw>
<status status="PASS" starttime="20250108 15:59:12.341" endtime="20250108 15:59:15.181"/>
</kw>
<status status="PASS" starttime="20250108 15:59:06.060" endtime="20250108 15:59:15.181"/>
</kw>
<status status="PASS" starttime="20250108 15:59:06.060" endtime="20250108 15:59:15.181"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250108 15:58:53.781" endtime="20250108 15:59:15.181">7 != 0</status>
</test>
<test id="s1-s3-s18-t3" name="S3 Gateway Generate Secret By Username" line="47">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:59:15.183" endtime="20250108 15:59:15.183"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:15.186" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:15.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:59:15.190" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:59:15.184" endtime="20250108 15:59:15.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:15.191" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:59:15.190" endtime="20250108 15:59:15.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:59:15.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:59:15.191" endtime="20250108 15:59:15.191"/>
</kw>
<status status="PASS" starttime="20250108 15:59:15.184" endtime="20250108 15:59:15.191"/>
</kw>
<msg timestamp="20250108 15:59:15.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:59:15.184" endtime="20250108 15:59:15.191"/>
</kw>
<msg timestamp="20250108 15:59:15.191" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:59:15.184" endtime="20250108 15:59:15.191"/>
</kw>
<msg timestamp="20250108 15:59:15.192" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:59:15.183" endtime="20250108 15:59:15.192"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:59:15.192" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:59:15.192" endtime="20250108 15:59:15.192"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:15.195" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:15.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:59:15.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:59:15.194" endtime="20250108 15:59:15.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:15.235" level="INFO"/>
<status status="PASS" starttime="20250108 15:59:15.234" endtime="20250108 15:59:15.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:59:15.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:59:15.235" endtime="20250108 15:59:15.235"/>
</kw>
<status status="PASS" starttime="20250108 15:59:15.193" endtime="20250108 15:59:15.235"/>
</kw>
<msg timestamp="20250108 15:59:15.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:59:15.193" endtime="20250108 15:59:15.235"/>
</kw>
<status status="PASS" starttime="20250108 15:59:15.192" endtime="20250108 15:59:15.235"/>
</kw>
<status status="PASS" starttime="20250108 15:59:15.192" endtime="20250108 15:59:15.236"/>
</kw>
<status status="PASS" starttime="20250108 15:59:15.183" endtime="20250108 15:59:15.236"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:15.239" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:18.088" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:18.088" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:15.236" endtime="20250108 15:59:18.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:18.089" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:18.088" endtime="20250108 15:59:18.089"/>
</kw>
<status status="PASS" starttime="20250108 15:59:15.236" endtime="20250108 15:59:18.089"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:18.092" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:21.244" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:21.244" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:18.089" endtime="20250108 15:59:21.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:21.245" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:21.245" endtime="20250108 15:59:21.245"/>
</kw>
<status status="PASS" starttime="20250108 15:59:18.089" endtime="20250108 15:59:21.246"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:21.248" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:24.374" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:24.374" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:21.246" endtime="20250108 15:59:24.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:24.375" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:24.375" endtime="20250108 15:59:24.375"/>
</kw>
<status status="PASS" starttime="20250108 15:59:21.246" endtime="20250108 15:59:24.376"/>
</kw>
<status status="PASS" starttime="20250108 15:59:15.236" endtime="20250108 15:59:24.376"/>
</kw>
<status status="PASS" starttime="20250108 15:59:15.182" endtime="20250108 15:59:24.376"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:59:24.376" endtime="20250108 15:59:24.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:24.379" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:24.386" level="INFO">${rc} = 7</msg>
<msg timestamp="20250108 15:59:24.386" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250108 15:59:24.377" endtime="20250108 15:59:24.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:24.387" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.7:19878...
* connect to 172.19.0.7 port 19878 failed: Connection refused
* Failed to connect to s3g port 19878: Connection refused

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
curl: (7) Failed to connect to s3g port 19878: Connection refused</msg>
<status status="PASS" starttime="20250108 15:59:24.386" endtime="20250108 15:59:24.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:59:24.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250108 15:59:24.387" level="FAIL">7 != 0</msg>
<status status="FAIL" starttime="20250108 15:59:24.387" endtime="20250108 15:59:24.387"/>
</kw>
<status status="FAIL" starttime="20250108 15:59:24.377" endtime="20250108 15:59:24.387"/>
</kw>
<msg timestamp="20250108 15:59:24.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250108 15:59:24.377" endtime="20250108 15:59:24.388"/>
</kw>
<status status="FAIL" starttime="20250108 15:59:24.376" endtime="20250108 15:59:24.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:59:24.388" endtime="20250108 15:59:24.388"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20250108 15:59:24.388" endtime="20250108 15:59:24.388"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:24.391" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:27.581" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:27.581" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:24.389" endtime="20250108 15:59:27.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:27.582" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:27.581" endtime="20250108 15:59:27.582"/>
</kw>
<status status="PASS" starttime="20250108 15:59:24.389" endtime="20250108 15:59:27.582"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:27.584" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:30.685" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:30.685" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:27.582" endtime="20250108 15:59:30.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:30.686" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:30.685" endtime="20250108 15:59:30.686"/>
</kw>
<status status="PASS" starttime="20250108 15:59:27.582" endtime="20250108 15:59:30.686"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:30.688" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:33.505" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:33.505" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:30.686" endtime="20250108 15:59:33.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:33.506" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:33.506" endtime="20250108 15:59:33.506"/>
</kw>
<status status="PASS" starttime="20250108 15:59:30.686" endtime="20250108 15:59:33.506"/>
</kw>
<status status="PASS" starttime="20250108 15:59:24.388" endtime="20250108 15:59:33.506"/>
</kw>
<status status="PASS" starttime="20250108 15:59:24.388" endtime="20250108 15:59:33.506"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250108 15:59:15.182" endtime="20250108 15:59:33.506">7 != 0</status>
</test>
<test id="s1-s3-s18-t4" name="S3 Gateway Generate Secret By Username For Other User" line="53">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:59:33.508" endtime="20250108 15:59:33.509"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:33.512" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:33.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:59:33.516" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:59:33.510" endtime="20250108 15:59:33.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:33.517" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:59:33.516" endtime="20250108 15:59:33.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:59:33.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:59:33.517" endtime="20250108 15:59:33.517"/>
</kw>
<status status="PASS" starttime="20250108 15:59:33.509" endtime="20250108 15:59:33.518"/>
</kw>
<msg timestamp="20250108 15:59:33.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:59:33.509" endtime="20250108 15:59:33.518"/>
</kw>
<msg timestamp="20250108 15:59:33.518" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:59:33.509" endtime="20250108 15:59:33.518"/>
</kw>
<msg timestamp="20250108 15:59:33.518" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:59:33.509" endtime="20250108 15:59:33.518"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:59:33.518" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:59:33.518" endtime="20250108 15:59:33.518"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:33.522" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:33.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:59:33.554" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:59:33.520" endtime="20250108 15:59:33.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:33.555" level="INFO"/>
<status status="PASS" starttime="20250108 15:59:33.555" endtime="20250108 15:59:33.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:59:33.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:59:33.555" endtime="20250108 15:59:33.556"/>
</kw>
<status status="PASS" starttime="20250108 15:59:33.519" endtime="20250108 15:59:33.556"/>
</kw>
<msg timestamp="20250108 15:59:33.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:59:33.519" endtime="20250108 15:59:33.556"/>
</kw>
<status status="PASS" starttime="20250108 15:59:33.519" endtime="20250108 15:59:33.556"/>
</kw>
<status status="PASS" starttime="20250108 15:59:33.518" endtime="20250108 15:59:33.556"/>
</kw>
<status status="PASS" starttime="20250108 15:59:33.508" endtime="20250108 15:59:33.556"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:33.559" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:36.614" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:36.614" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:33.557" endtime="20250108 15:59:36.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:36.615" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:36.614" endtime="20250108 15:59:36.615"/>
</kw>
<status status="PASS" starttime="20250108 15:59:33.557" endtime="20250108 15:59:36.615"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:36.617" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:39.752" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:39.752" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:36.615" endtime="20250108 15:59:39.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:39.753" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:39.752" endtime="20250108 15:59:39.753"/>
</kw>
<status status="PASS" starttime="20250108 15:59:36.615" endtime="20250108 15:59:39.753"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:39.755" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:42.799" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:42.799" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:39.753" endtime="20250108 15:59:42.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:42.800" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:42.799" endtime="20250108 15:59:42.800"/>
</kw>
<status status="PASS" starttime="20250108 15:59:39.753" endtime="20250108 15:59:42.800"/>
</kw>
<status status="PASS" starttime="20250108 15:59:33.556" endtime="20250108 15:59:42.800"/>
</kw>
<status status="PASS" starttime="20250108 15:59:33.508" endtime="20250108 15:59:42.800"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:59:42.800" endtime="20250108 15:59:42.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:42.804" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:42.812" level="INFO">${rc} = 7</msg>
<msg timestamp="20250108 15:59:42.812" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250108 15:59:42.802" endtime="20250108 15:59:42.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:42.813" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.7:19878...
* connect to 172.19.0.7 port 19878 failed: Connection refused
* Failed to connect to s3g port 19878: Connection refused

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
curl: (7) Failed to connect to s3g port 19878: Connection refused</msg>
<status status="PASS" starttime="20250108 15:59:42.812" endtime="20250108 15:59:42.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:59:42.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250108 15:59:42.814" level="FAIL">7 != 0</msg>
<status status="FAIL" starttime="20250108 15:59:42.813" endtime="20250108 15:59:42.814"/>
</kw>
<status status="FAIL" starttime="20250108 15:59:42.801" endtime="20250108 15:59:42.814"/>
</kw>
<msg timestamp="20250108 15:59:42.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250108 15:59:42.801" endtime="20250108 15:59:42.814"/>
</kw>
<status status="FAIL" starttime="20250108 15:59:42.801" endtime="20250108 15:59:42.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 15:59:42.814" endtime="20250108 15:59:42.814"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20250108 15:59:42.814" endtime="20250108 15:59:42.815"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:42.818" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:45.790" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:45.790" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:42.816" endtime="20250108 15:59:45.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:45.791" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:45.791" endtime="20250108 15:59:45.791"/>
</kw>
<status status="PASS" starttime="20250108 15:59:42.815" endtime="20250108 15:59:45.791"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:45.794" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:48.776" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:48.776" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:45.792" endtime="20250108 15:59:48.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:48.777" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:48.776" endtime="20250108 15:59:48.777"/>
</kw>
<status status="PASS" starttime="20250108 15:59:45.791" endtime="20250108 15:59:48.777"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:48.779" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:52.056" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:52.056" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:48.777" endtime="20250108 15:59:52.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:52.057" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:52.056" endtime="20250108 15:59:52.057"/>
</kw>
<status status="PASS" starttime="20250108 15:59:48.777" endtime="20250108 15:59:52.057"/>
</kw>
<status status="PASS" starttime="20250108 15:59:42.815" endtime="20250108 15:59:52.057"/>
</kw>
<status status="PASS" starttime="20250108 15:59:42.815" endtime="20250108 15:59:52.057"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250108 15:59:33.507" endtime="20250108 15:59:52.057">7 != 0</status>
</test>
<test id="s1-s3-s18-t5" name="S3 Gateway Reject Secret Generation By Non-admin User" line="59">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 15:59:52.059" endtime="20250108 15:59:52.059"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:52.063" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:52.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:59:52.066" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 15:59:52.060" endtime="20250108 15:59:52.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:52.067" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 15:59:52.067" endtime="20250108 15:59:52.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:59:52.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:59:52.067" endtime="20250108 15:59:52.067"/>
</kw>
<status status="PASS" starttime="20250108 15:59:52.060" endtime="20250108 15:59:52.068"/>
</kw>
<msg timestamp="20250108 15:59:52.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:59:52.060" endtime="20250108 15:59:52.068"/>
</kw>
<msg timestamp="20250108 15:59:52.068" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 15:59:52.059" endtime="20250108 15:59:52.068"/>
</kw>
<msg timestamp="20250108 15:59:52.068" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:59:52.059" endtime="20250108 15:59:52.068"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 15:59:52.068" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 15:59:52.068" endtime="20250108 15:59:52.068"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:52.072" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:52.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 15:59:52.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 15:59:52.070" endtime="20250108 15:59:52.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:52.097" level="INFO"/>
<status status="PASS" starttime="20250108 15:59:52.096" endtime="20250108 15:59:52.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 15:59:52.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 15:59:52.097" endtime="20250108 15:59:52.097"/>
</kw>
<status status="PASS" starttime="20250108 15:59:52.069" endtime="20250108 15:59:52.097"/>
</kw>
<msg timestamp="20250108 15:59:52.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 15:59:52.069" endtime="20250108 15:59:52.098"/>
</kw>
<status status="PASS" starttime="20250108 15:59:52.069" endtime="20250108 15:59:52.098"/>
</kw>
<status status="PASS" starttime="20250108 15:59:52.069" endtime="20250108 15:59:52.098"/>
</kw>
<status status="PASS" starttime="20250108 15:59:52.059" endtime="20250108 15:59:52.098"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:52.100" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:55.255" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:55.255" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:52.098" endtime="20250108 15:59:55.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:55.256" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:55.256" endtime="20250108 15:59:55.256"/>
</kw>
<status status="PASS" starttime="20250108 15:59:52.098" endtime="20250108 15:59:55.256"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:55.259" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 15:59:58.210" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 15:59:58.210" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:55.257" endtime="20250108 15:59:58.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 15:59:58.211" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:58.211" endtime="20250108 15:59:58.211"/>
</kw>
<status status="PASS" starttime="20250108 15:59:55.257" endtime="20250108 15:59:58.211"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 15:59:58.214" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:01.280" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:01.280" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 15:59:58.212" endtime="20250108 16:00:01.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:01.281" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:01.280" endtime="20250108 16:00:01.281"/>
</kw>
<status status="PASS" starttime="20250108 15:59:58.211" endtime="20250108 16:00:01.281"/>
</kw>
<status status="PASS" starttime="20250108 15:59:52.098" endtime="20250108 16:00:01.281"/>
</kw>
<status status="PASS" starttime="20250108 15:59:52.058" endtime="20250108 16:00:01.281"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:01.281" endtime="20250108 16:00:01.282"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:01.282" endtime="20250108 16:00:01.282"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:01.286" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:01.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:01.290" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 16:00:01.284" endtime="20250108 16:00:01.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:01.291" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 16:00:01.291" endtime="20250108 16:00:01.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:01.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:01.292" endtime="20250108 16:00:01.292"/>
</kw>
<status status="PASS" starttime="20250108 16:00:01.284" endtime="20250108 16:00:01.292"/>
</kw>
<msg timestamp="20250108 16:00:01.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:01.283" endtime="20250108 16:00:01.292"/>
</kw>
<msg timestamp="20250108 16:00:01.293" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 16:00:01.283" endtime="20250108 16:00:01.293"/>
</kw>
<msg timestamp="20250108 16:00:01.293" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:01.283" endtime="20250108 16:00:01.293"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 16:00:01.294" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:01.293" endtime="20250108 16:00:01.294"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:01.297" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:01.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:01.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:01.295" endtime="20250108 16:00:01.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:01.334" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:01.333" endtime="20250108 16:00:01.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:01.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:01.334" endtime="20250108 16:00:01.334"/>
</kw>
<status status="PASS" starttime="20250108 16:00:01.295" endtime="20250108 16:00:01.334"/>
</kw>
<msg timestamp="20250108 16:00:01.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:01.295" endtime="20250108 16:00:01.334"/>
</kw>
<status status="PASS" starttime="20250108 16:00:01.294" endtime="20250108 16:00:01.334"/>
</kw>
<status status="PASS" starttime="20250108 16:00:01.294" endtime="20250108 16:00:01.334"/>
</kw>
<status status="PASS" starttime="20250108 16:00:01.282" endtime="20250108 16:00:01.334"/>
</kw>
<status status="PASS" starttime="20250108 16:00:01.282" endtime="20250108 16:00:01.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:01.337" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:01.344" level="INFO">${rc} = 7</msg>
<msg timestamp="20250108 16:00:01.344" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250108 16:00:01.335" endtime="20250108 16:00:01.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:01.345" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.7:19878...
* connect to 172.19.0.7 port 19878 failed: Connection refused
* Failed to connect to s3g port 19878: Connection refused

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
curl: (7) Failed to connect to s3g port 19878: Connection refused</msg>
<status status="PASS" starttime="20250108 16:00:01.345" endtime="20250108 16:00:01.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:01.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250108 16:00:01.346" level="FAIL">7 != 0</msg>
<status status="FAIL" starttime="20250108 16:00:01.345" endtime="20250108 16:00:01.346"/>
</kw>
<status status="FAIL" starttime="20250108 16:00:01.335" endtime="20250108 16:00:01.346"/>
</kw>
<msg timestamp="20250108 16:00:01.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250108 16:00:01.335" endtime="20250108 16:00:01.346"/>
</kw>
<status status="FAIL" starttime="20250108 16:00:01.335" endtime="20250108 16:00:01.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 403 FORBIDDEN</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 16:00:01.346" endtime="20250108 16:00:01.346"/>
</kw>
<kw name="Run Keyword" library="BuiltIn" type="TEARDOWN">
<arg>Revoke S3 secrets</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:01.349" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:04.165" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:04.165" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:01.347" endtime="20250108 16:00:04.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:04.166" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:04.166" endtime="20250108 16:00:04.166"/>
</kw>
<status status="PASS" starttime="20250108 16:00:01.347" endtime="20250108 16:00:04.166"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:04.169" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:07.170" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:07.170" level="INFO">${output} = USER_MISMATCH Requested accessId 'testuser' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250108 16:00:04.167" endtime="20250108 16:00:07.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:07.171" level="INFO">USER_MISMATCH Requested accessId 'testuser' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250108 16:00:07.170" endtime="20250108 16:00:07.171"/>
</kw>
<status status="PASS" starttime="20250108 16:00:04.167" endtime="20250108 16:00:07.171"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:07.174" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:10.186" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:10.186" level="INFO">${output} = USER_MISMATCH Requested accessId 'testuser2' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250108 16:00:07.172" endtime="20250108 16:00:10.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:10.187" level="INFO">USER_MISMATCH Requested accessId 'testuser2' doesn't match current user 'testuser2/scm@EXAMPLE.COM', nor does current user has administrator privilege.</msg>
<status status="PASS" starttime="20250108 16:00:10.186" endtime="20250108 16:00:10.187"/>
</kw>
<status status="PASS" starttime="20250108 16:00:07.171" endtime="20250108 16:00:10.187"/>
</kw>
<status status="PASS" starttime="20250108 16:00:01.347" endtime="20250108 16:00:10.187"/>
</kw>
<status status="PASS" starttime="20250108 16:00:01.346" endtime="20250108 16:00:10.187"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250108 15:59:52.058" endtime="20250108 16:00:10.187">7 != 0</status>
</test>
<doc>S3 Secret Generate test</doc>
<status status="FAIL" starttime="20250108 15:58:34.893" endtime="20250108 16:00:10.188"/>
</suite>
<suite id="s1-s3-s19" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<test id="s1-s3-s19-t1" name="S3 Gateway Revoke Secret" line="35">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:10.198" endtime="20250108 16:00:10.198"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:10.201" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:10.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:10.205" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 16:00:10.199" endtime="20250108 16:00:10.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:10.206" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 16:00:10.205" endtime="20250108 16:00:10.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:10.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:10.206" endtime="20250108 16:00:10.206"/>
</kw>
<status status="PASS" starttime="20250108 16:00:10.199" endtime="20250108 16:00:10.206"/>
</kw>
<msg timestamp="20250108 16:00:10.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:10.199" endtime="20250108 16:00:10.207"/>
</kw>
<msg timestamp="20250108 16:00:10.207" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 16:00:10.199" endtime="20250108 16:00:10.207"/>
</kw>
<msg timestamp="20250108 16:00:10.207" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:10.198" endtime="20250108 16:00:10.207"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 16:00:10.207" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:10.207" endtime="20250108 16:00:10.207"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:10.211" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:10.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:10.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:10.209" endtime="20250108 16:00:10.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:10.249" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:10.248" endtime="20250108 16:00:10.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:10.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:10.249" endtime="20250108 16:00:10.249"/>
</kw>
<status status="PASS" starttime="20250108 16:00:10.208" endtime="20250108 16:00:10.249"/>
</kw>
<msg timestamp="20250108 16:00:10.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:10.208" endtime="20250108 16:00:10.250"/>
</kw>
<status status="PASS" starttime="20250108 16:00:10.208" endtime="20250108 16:00:10.250"/>
</kw>
<status status="PASS" starttime="20250108 16:00:10.207" endtime="20250108 16:00:10.250"/>
</kw>
<status status="PASS" starttime="20250108 16:00:10.198" endtime="20250108 16:00:10.250"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:10.253" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:13.070" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:13.070" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:10.250" endtime="20250108 16:00:13.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:13.071" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:13.070" endtime="20250108 16:00:13.071"/>
</kw>
<status status="PASS" starttime="20250108 16:00:10.250" endtime="20250108 16:00:13.071"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:13.074" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:16.230" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:16.230" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:13.071" endtime="20250108 16:00:16.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:16.231" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:16.230" endtime="20250108 16:00:16.231"/>
</kw>
<status status="PASS" starttime="20250108 16:00:13.071" endtime="20250108 16:00:16.231"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:16.234" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:19.096" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:19.096" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:16.232" endtime="20250108 16:00:19.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:19.097" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:19.096" endtime="20250108 16:00:19.097"/>
</kw>
<status status="PASS" starttime="20250108 16:00:16.231" endtime="20250108 16:00:19.097"/>
</kw>
<status status="PASS" starttime="20250108 16:00:10.250" endtime="20250108 16:00:19.097"/>
</kw>
<status status="PASS" starttime="20250108 16:00:10.197" endtime="20250108 16:00:19.097"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:19.097" endtime="20250108 16:00:19.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:19.101" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:22.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:22.104" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1c68b4c6eb484fd0d9d19e468eea2f1aea0536d02711707cc4d88e00f750b70c</msg>
<status status="PASS" starttime="20250108 16:00:19.099" endtime="20250108 16:00:22.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:22.105" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=1c68b4c6eb484fd0d9d19e468eea2f1aea0536d02711707cc4d88e00f750b70c</msg>
<status status="PASS" starttime="20250108 16:00:22.104" endtime="20250108 16:00:22.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:22.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:22.105" endtime="20250108 16:00:22.105"/>
</kw>
<status status="PASS" starttime="20250108 16:00:19.098" endtime="20250108 16:00:22.105"/>
</kw>
<msg timestamp="20250108 16:00:22.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:19.098" endtime="20250108 16:00:22.105"/>
</kw>
<status status="PASS" starttime="20250108 16:00:19.098" endtime="20250108 16:00:22.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:22.109" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:22.116" level="INFO">${rc} = 7</msg>
<msg timestamp="20250108 16:00:22.116" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250108 16:00:22.106" endtime="20250108 16:00:22.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:22.117" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.7:19878...
* connect to 172.19.0.7 port 19878 failed: Connection refused
* Failed to connect to s3g port 19878: Connection refused

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
curl: (7) Failed to connect to s3g port 19878: Connection refused</msg>
<status status="PASS" starttime="20250108 16:00:22.116" endtime="20250108 16:00:22.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:22.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250108 16:00:22.118" level="FAIL">7 != 0</msg>
<status status="FAIL" starttime="20250108 16:00:22.117" endtime="20250108 16:00:22.118"/>
</kw>
<status status="FAIL" starttime="20250108 16:00:22.106" endtime="20250108 16:00:22.118"/>
</kw>
<msg timestamp="20250108 16:00:22.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250108 16:00:22.106" endtime="20250108 16:00:22.118"/>
</kw>
<status status="FAIL" starttime="20250108 16:00:22.106" endtime="20250108 16:00:22.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 16:00:22.118" endtime="20250108 16:00:22.118"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250108 16:00:10.197" endtime="20250108 16:00:22.118">7 != 0</status>
</test>
<test id="s1-s3-s19-t2" name="S3 Gateway Revoke Secret By Username" line="41">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:22.120" endtime="20250108 16:00:22.120"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:22.124" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:22.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:22.128" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 16:00:22.122" endtime="20250108 16:00:22.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:22.128" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 16:00:22.128" endtime="20250108 16:00:22.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:22.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:22.129" endtime="20250108 16:00:22.129"/>
</kw>
<status status="PASS" starttime="20250108 16:00:22.121" endtime="20250108 16:00:22.129"/>
</kw>
<msg timestamp="20250108 16:00:22.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:22.121" endtime="20250108 16:00:22.129"/>
</kw>
<msg timestamp="20250108 16:00:22.129" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 16:00:22.121" endtime="20250108 16:00:22.129"/>
</kw>
<msg timestamp="20250108 16:00:22.130" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:22.121" endtime="20250108 16:00:22.130"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 16:00:22.130" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:22.130" endtime="20250108 16:00:22.130"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:22.133" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:22.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:22.157" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:22.131" endtime="20250108 16:00:22.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:22.158" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:22.158" endtime="20250108 16:00:22.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:22.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:22.158" endtime="20250108 16:00:22.159"/>
</kw>
<status status="PASS" starttime="20250108 16:00:22.131" endtime="20250108 16:00:22.159"/>
</kw>
<msg timestamp="20250108 16:00:22.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:22.131" endtime="20250108 16:00:22.159"/>
</kw>
<status status="PASS" starttime="20250108 16:00:22.130" endtime="20250108 16:00:22.159"/>
</kw>
<status status="PASS" starttime="20250108 16:00:22.130" endtime="20250108 16:00:22.159"/>
</kw>
<status status="PASS" starttime="20250108 16:00:22.120" endtime="20250108 16:00:22.159"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:22.162" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:25.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:25.031" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 16:00:22.160" endtime="20250108 16:00:25.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:25.032" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 16:00:25.031" endtime="20250108 16:00:25.032"/>
</kw>
<status status="PASS" starttime="20250108 16:00:22.160" endtime="20250108 16:00:25.032"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:25.035" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:28.002" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:28.002" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:25.033" endtime="20250108 16:00:28.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:28.003" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:28.002" endtime="20250108 16:00:28.003"/>
</kw>
<status status="PASS" starttime="20250108 16:00:25.032" endtime="20250108 16:00:28.003"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:28.005" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:31.179" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:31.179" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:28.003" endtime="20250108 16:00:31.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:31.180" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:31.180" endtime="20250108 16:00:31.180"/>
</kw>
<status status="PASS" starttime="20250108 16:00:28.003" endtime="20250108 16:00:31.180"/>
</kw>
<status status="PASS" starttime="20250108 16:00:22.159" endtime="20250108 16:00:31.181"/>
</kw>
<status status="PASS" starttime="20250108 16:00:22.119" endtime="20250108 16:00:31.181"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:31.181" endtime="20250108 16:00:31.181"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret -u testuser ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:31.185" level="INFO">Running command 'ozone s3 getsecret -u testuser  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:34.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:34.195" level="INFO">${output} = awsAccessKey=testuser
awsSecret=5cef4aead97c584fafa4c6cf9657b28a8b5bdac9b94b7592810fe5b6a7e7761e</msg>
<status status="PASS" starttime="20250108 16:00:31.182" endtime="20250108 16:00:34.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:34.196" level="INFO">awsAccessKey=testuser
awsSecret=5cef4aead97c584fafa4c6cf9657b28a8b5bdac9b94b7592810fe5b6a7e7761e</msg>
<status status="PASS" starttime="20250108 16:00:34.195" endtime="20250108 16:00:34.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:34.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:34.196" endtime="20250108 16:00:34.196"/>
</kw>
<status status="PASS" starttime="20250108 16:00:31.182" endtime="20250108 16:00:34.196"/>
</kw>
<msg timestamp="20250108 16:00:34.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:31.182" endtime="20250108 16:00:34.197"/>
</kw>
<status status="PASS" starttime="20250108 16:00:31.181" endtime="20250108 16:00:34.197"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:34.200" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:34.207" level="INFO">${rc} = 7</msg>
<msg timestamp="20250108 16:00:34.207" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250108 16:00:34.198" endtime="20250108 16:00:34.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:34.208" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.7:19878...
* connect to 172.19.0.7 port 19878 failed: Connection refused
* Failed to connect to s3g port 19878: Connection refused

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
curl: (7) Failed to connect to s3g port 19878: Connection refused</msg>
<status status="PASS" starttime="20250108 16:00:34.208" endtime="20250108 16:00:34.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:34.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250108 16:00:34.209" level="FAIL">7 != 0</msg>
<status status="FAIL" starttime="20250108 16:00:34.208" endtime="20250108 16:00:34.209"/>
</kw>
<status status="FAIL" starttime="20250108 16:00:34.197" endtime="20250108 16:00:34.209"/>
</kw>
<msg timestamp="20250108 16:00:34.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250108 16:00:34.197" endtime="20250108 16:00:34.209"/>
</kw>
<status status="FAIL" starttime="20250108 16:00:34.197" endtime="20250108 16:00:34.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 16:00:34.210" endtime="20250108 16:00:34.210"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250108 16:00:22.119" endtime="20250108 16:00:34.210">7 != 0</status>
</test>
<test id="s1-s3-s19-t3" name="S3 Gateway Revoke Secret By Username For Other User" line="47">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:34.211" endtime="20250108 16:00:34.211"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:34.215" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:34.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:34.218" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 16:00:34.212" endtime="20250108 16:00:34.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:34.219" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 16:00:34.219" endtime="20250108 16:00:34.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:34.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:34.220" endtime="20250108 16:00:34.220"/>
</kw>
<status status="PASS" starttime="20250108 16:00:34.212" endtime="20250108 16:00:34.220"/>
</kw>
<msg timestamp="20250108 16:00:34.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:34.212" endtime="20250108 16:00:34.220"/>
</kw>
<msg timestamp="20250108 16:00:34.220" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 16:00:34.212" endtime="20250108 16:00:34.220"/>
</kw>
<msg timestamp="20250108 16:00:34.220" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:34.212" endtime="20250108 16:00:34.220"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 16:00:34.221" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:34.221" endtime="20250108 16:00:34.221"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:34.225" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:34.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:34.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:34.223" endtime="20250108 16:00:34.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:34.262" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:34.262" endtime="20250108 16:00:34.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:34.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:34.263" endtime="20250108 16:00:34.263"/>
</kw>
<status status="PASS" starttime="20250108 16:00:34.222" endtime="20250108 16:00:34.263"/>
</kw>
<msg timestamp="20250108 16:00:34.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:34.222" endtime="20250108 16:00:34.263"/>
</kw>
<status status="PASS" starttime="20250108 16:00:34.221" endtime="20250108 16:00:34.263"/>
</kw>
<status status="PASS" starttime="20250108 16:00:34.221" endtime="20250108 16:00:34.263"/>
</kw>
<status status="PASS" starttime="20250108 16:00:34.211" endtime="20250108 16:00:34.263"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:34.266" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:37.219" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:37.219" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:34.264" endtime="20250108 16:00:37.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:37.220" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:37.220" endtime="20250108 16:00:37.220"/>
</kw>
<status status="PASS" starttime="20250108 16:00:34.264" endtime="20250108 16:00:37.220"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:37.223" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:40.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:40.079" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 16:00:37.221" endtime="20250108 16:00:40.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:40.080" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 16:00:40.079" endtime="20250108 16:00:40.080"/>
</kw>
<status status="PASS" starttime="20250108 16:00:37.220" endtime="20250108 16:00:40.080"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:40.083" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:43.075" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:43.075" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:40.080" endtime="20250108 16:00:43.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:43.076" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:43.076" endtime="20250108 16:00:43.077"/>
</kw>
<status status="PASS" starttime="20250108 16:00:40.080" endtime="20250108 16:00:43.077"/>
</kw>
<status status="PASS" starttime="20250108 16:00:34.264" endtime="20250108 16:00:43.077"/>
</kw>
<status status="PASS" starttime="20250108 16:00:34.211" endtime="20250108 16:00:43.077"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:43.077" endtime="20250108 16:00:43.077"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:43.080" level="INFO">Running command 'ozone s3 getsecret -u testuser2  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:46.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:46.061" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=0e41f3b7d98cfc28dbcb20674eca508942e5ab6f22581fe54e5b31e343d632f7</msg>
<status status="PASS" starttime="20250108 16:00:43.078" endtime="20250108 16:00:46.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:46.062" level="INFO">awsAccessKey=testuser2
awsSecret=0e41f3b7d98cfc28dbcb20674eca508942e5ab6f22581fe54e5b31e343d632f7</msg>
<status status="PASS" starttime="20250108 16:00:46.062" endtime="20250108 16:00:46.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:46.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:46.062" endtime="20250108 16:00:46.063"/>
</kw>
<status status="PASS" starttime="20250108 16:00:43.078" endtime="20250108 16:00:46.063"/>
</kw>
<msg timestamp="20250108 16:00:46.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:43.078" endtime="20250108 16:00:46.063"/>
</kw>
<status status="PASS" starttime="20250108 16:00:43.077" endtime="20250108 16:00:46.063"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:46.066" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:46.074" level="INFO">${rc} = 7</msg>
<msg timestamp="20250108 16:00:46.074" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250108 16:00:46.064" endtime="20250108 16:00:46.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:46.075" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.7:19878...
* connect to 172.19.0.7 port 19878 failed: Connection refused
* Failed to connect to s3g port 19878: Connection refused

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
curl: (7) Failed to connect to s3g port 19878: Connection refused</msg>
<status status="PASS" starttime="20250108 16:00:46.074" endtime="20250108 16:00:46.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:46.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250108 16:00:46.076" level="FAIL">7 != 0</msg>
<status status="FAIL" starttime="20250108 16:00:46.075" endtime="20250108 16:00:46.076"/>
</kw>
<status status="FAIL" starttime="20250108 16:00:46.064" endtime="20250108 16:00:46.076"/>
</kw>
<msg timestamp="20250108 16:00:46.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250108 16:00:46.063" endtime="20250108 16:00:46.076"/>
</kw>
<status status="FAIL" starttime="20250108 16:00:46.063" endtime="20250108 16:00:46.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 16:00:46.076" endtime="20250108 16:00:46.076"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250108 16:00:34.210" endtime="20250108 16:00:46.076">7 != 0</status>
</test>
<test id="s1-s3-s19-t4" name="S3 Gateway Reject Secret Revoke By Non-admin User" line="53">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<arg>AND</arg>
<arg>Revoke S3 secrets</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:46.078" endtime="20250108 16:00:46.079"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:46.082" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:46.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:46.086" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 16:00:46.080" endtime="20250108 16:00:46.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:46.087" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 16:00:46.086" endtime="20250108 16:00:46.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:46.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:46.087" endtime="20250108 16:00:46.087"/>
</kw>
<status status="PASS" starttime="20250108 16:00:46.079" endtime="20250108 16:00:46.087"/>
</kw>
<msg timestamp="20250108 16:00:46.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:46.079" endtime="20250108 16:00:46.087"/>
</kw>
<msg timestamp="20250108 16:00:46.087" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 16:00:46.079" endtime="20250108 16:00:46.087"/>
</kw>
<msg timestamp="20250108 16:00:46.088" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:46.079" endtime="20250108 16:00:46.088"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 16:00:46.088" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:46.088" endtime="20250108 16:00:46.088"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:46.092" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:46.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:46.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:46.089" endtime="20250108 16:00:46.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:46.125" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:46.124" endtime="20250108 16:00:46.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:46.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:46.125" endtime="20250108 16:00:46.125"/>
</kw>
<status status="PASS" starttime="20250108 16:00:46.089" endtime="20250108 16:00:46.126"/>
</kw>
<msg timestamp="20250108 16:00:46.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:46.089" endtime="20250108 16:00:46.126"/>
</kw>
<status status="PASS" starttime="20250108 16:00:46.088" endtime="20250108 16:00:46.126"/>
</kw>
<status status="PASS" starttime="20250108 16:00:46.088" endtime="20250108 16:00:46.126"/>
</kw>
<status status="PASS" starttime="20250108 16:00:46.078" endtime="20250108 16:00:46.126"/>
</kw>
<kw name="Revoke S3 secrets" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:46.129" level="INFO">Running command 'ozone s3 revokesecret -y 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:49.219" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:49.220" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:46.127" endtime="20250108 16:00:49.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:49.220" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:49.220" endtime="20250108 16:00:49.220"/>
</kw>
<status status="PASS" starttime="20250108 16:00:46.126" endtime="20250108 16:00:49.221"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:49.223" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:52.414" level="INFO">${rc} = 255</msg>
<msg timestamp="20250108 16:00:52.415" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:49.221" endtime="20250108 16:00:52.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:52.415" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20250108 16:00:52.415" endtime="20250108 16:00:52.416"/>
</kw>
<status status="PASS" starttime="20250108 16:00:49.221" endtime="20250108 16:00:52.416"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:52.418" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:55.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:55.362" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 16:00:52.416" endtime="20250108 16:00:55.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:55.363" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20250108 16:00:55.362" endtime="20250108 16:00:55.363"/>
</kw>
<status status="PASS" starttime="20250108 16:00:52.416" endtime="20250108 16:00:55.363"/>
</kw>
<status status="PASS" starttime="20250108 16:00:46.126" endtime="20250108 16:00:55.363"/>
</kw>
<status status="PASS" starttime="20250108 16:00:46.078" endtime="20250108 16:00:55.363"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:55.363" endtime="20250108 16:00:55.364"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:55.364" endtime="20250108 16:00:55.365"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:55.368" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:55.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:55.372" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 16:00:55.366" endtime="20250108 16:00:55.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:55.372" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 16:00:55.372" endtime="20250108 16:00:55.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:55.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:55.373" endtime="20250108 16:00:55.373"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.366" endtime="20250108 16:00:55.373"/>
</kw>
<msg timestamp="20250108 16:00:55.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:55.365" endtime="20250108 16:00:55.373"/>
</kw>
<msg timestamp="20250108 16:00:55.373" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 16:00:55.365" endtime="20250108 16:00:55.373"/>
</kw>
<msg timestamp="20250108 16:00:55.373" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:55.365" endtime="20250108 16:00:55.373"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 16:00:55.374" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:55.374" endtime="20250108 16:00:55.374"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:55.377" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:55.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:55.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:55.375" endtime="20250108 16:00:55.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:55.406" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:55.405" endtime="20250108 16:00:55.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:55.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:55.406" endtime="20250108 16:00:55.406"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.375" endtime="20250108 16:00:55.406"/>
</kw>
<msg timestamp="20250108 16:00:55.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:55.375" endtime="20250108 16:00:55.406"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.374" endtime="20250108 16:00:55.406"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.374" endtime="20250108 16:00:55.406"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.364" endtime="20250108 16:00:55.407"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.364" endtime="20250108 16:00:55.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:55.410" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:19878/secret/testuser 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:55.417" level="INFO">${rc} = 7</msg>
<msg timestamp="20250108 16:00:55.417" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250108 16:00:55.408" endtime="20250108 16:00:55.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:55.418" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.7:19878...
* connect to 172.19.0.7 port 19878 failed: Connection refused
* Failed to connect to s3g port 19878: Connection refused

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
curl: (7) Failed to connect to s3g port 19878: Connection refused</msg>
<status status="PASS" starttime="20250108 16:00:55.417" endtime="20250108 16:00:55.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:55.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250108 16:00:55.418" level="FAIL">7 != 0</msg>
<status status="FAIL" starttime="20250108 16:00:55.418" endtime="20250108 16:00:55.418"/>
</kw>
<status status="FAIL" starttime="20250108 16:00:55.407" endtime="20250108 16:00:55.419"/>
</kw>
<msg timestamp="20250108 16:00:55.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250108 16:00:55.407" endtime="20250108 16:00:55.419"/>
</kw>
<status status="FAIL" starttime="20250108 16:00:55.407" endtime="20250108 16:00:55.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 403 FORBIDDEN</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 16:00:55.419" endtime="20250108 16:00:55.419"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250108 16:00:46.077" endtime="20250108 16:00:55.419">7 != 0</status>
</test>
<kw name="Setup v4 headers" library="commonawslib" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20250108 16:00:55.421" endtime="20250108 16:00:55.421"/>
</kw>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:55.424" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:55.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:55.428" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20250108 16:00:55.422" endtime="20250108 16:00:55.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:55.428" level="INFO">scm</msg>
<status status="PASS" starttime="20250108 16:00:55.428" endtime="20250108 16:00:55.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:55.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:55.428" endtime="20250108 16:00:55.429"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.422" endtime="20250108 16:00:55.429"/>
</kw>
<msg timestamp="20250108 16:00:55.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:55.422" endtime="20250108 16:00:55.429"/>
</kw>
<msg timestamp="20250108 16:00:55.429" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20250108 16:00:55.422" endtime="20250108 16:00:55.429"/>
</kw>
<msg timestamp="20250108 16:00:55.429" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:55.421" endtime="20250108 16:00:55.429"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20250108 16:00:55.430" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:55.429" endtime="20250108 16:00:55.430"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:55.433" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:55.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:55.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:55.431" endtime="20250108 16:00:55.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:55.468" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:55.468" endtime="20250108 16:00:55.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:55.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:55.468" endtime="20250108 16:00:55.468"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.431" endtime="20250108 16:00:55.469"/>
</kw>
<msg timestamp="20250108 16:00:55.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:55.430" endtime="20250108 16:00:55.469"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.430" endtime="20250108 16:00:55.469"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.430" endtime="20250108 16:00:55.469"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.421" endtime="20250108 16:00:55.469"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.420" endtime="20250108 16:00:55.469"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:55.472" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:58.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:58.490" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ada2d4243d1ea4996c31efe65193f7374e5374079f82bb53ae14071cbf65c7ac</msg>
<status status="PASS" starttime="20250108 16:00:55.470" endtime="20250108 16:00:58.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:58.491" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ada2d4243d1ea4996c31efe65193f7374e5374079f82bb53ae14071cbf65c7ac</msg>
<status status="PASS" starttime="20250108 16:00:58.490" endtime="20250108 16:00:58.491"/>
</kw>
<msg timestamp="20250108 16:00:58.491" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ada2d4243d1ea4996c31efe65193f7374e5374079f82bb53ae14071cbf65c7ac</msg>
<status status="PASS" starttime="20250108 16:00:55.470" endtime="20250108 16:00:58.491"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20250108 16:00:58.492" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=ada2d4243d1ea4996c31efe65193f7374e5374079f82bb53ae14071cbf65c7ac' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20250108 16:00:58.491" endtime="20250108 16:00:58.492"/>
</kw>
<msg timestamp="20250108 16:00:58.492" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20250108 16:00:58.491" endtime="20250108 16:00:58.492"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250108 16:00:58.492" endtime="20250108 16:00:58.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20250108 16:00:58.492" endtime="20250108 16:00:58.492"/>
</kw>
<status status="NOT RUN" starttime="20250108 16:00:58.492" endtime="20250108 16:00:58.492"/>
</branch>
<status status="PASS" starttime="20250108 16:00:58.492" endtime="20250108 16:00:58.492"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 16:00:58.493" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250108 16:00:58.492" endtime="20250108 16:00:58.493"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20250108 16:00:58.493" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20250108 16:00:58.493" endtime="20250108 16:00:58.493"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20250108 16:00:58.494" level="INFO">${secret} = ['ada2d4243d1ea4996c31efe65193f7374e5374079f82bb53ae14071cbf65c7ac']</msg>
<status status="PASS" starttime="20250108 16:00:58.493" endtime="20250108 16:00:58.494"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 16:00:58.495" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20250108 16:00:58.494" endtime="20250108 16:00:58.495"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250108 16:00:58.495" level="INFO">${secret} = ada2d4243d1ea4996c31efe65193f7374e5374079f82bb53ae14071cbf65c7ac</msg>
<status status="PASS" starttime="20250108 16:00:58.495" endtime="20250108 16:00:58.495"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:58.498" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:58.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:58.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:58.496" endtime="20250108 16:00:58.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:58.863" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:58.863" endtime="20250108 16:00:58.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:58.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:58.863" endtime="20250108 16:00:58.864"/>
</kw>
<status status="PASS" starttime="20250108 16:00:58.496" endtime="20250108 16:00:58.864"/>
</kw>
<msg timestamp="20250108 16:00:58.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:58.496" endtime="20250108 16:00:58.864"/>
</kw>
<status status="PASS" starttime="20250108 16:00:58.495" endtime="20250108 16:00:58.864"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:58.867" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:59.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:59.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:58.865" endtime="20250108 16:00:59.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:59.232" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:59.231" endtime="20250108 16:00:59.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:59.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:59.232" endtime="20250108 16:00:59.232"/>
</kw>
<status status="PASS" starttime="20250108 16:00:58.865" endtime="20250108 16:00:59.232"/>
</kw>
<msg timestamp="20250108 16:00:59.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:58.864" endtime="20250108 16:00:59.233"/>
</kw>
<status status="PASS" starttime="20250108 16:00:58.864" endtime="20250108 16:00:59.233"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:59.236" level="INFO">Running command 'aws configure set aws_secret_access_key ada2d4243d1ea4996c31efe65193f7374e5374079f82bb53ae14071cbf65c7ac 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:59.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:59.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:59.234" endtime="20250108 16:00:59.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:59.590" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:59.590" endtime="20250108 16:00:59.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:59.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:59.590" endtime="20250108 16:00:59.590"/>
</kw>
<status status="PASS" starttime="20250108 16:00:59.234" endtime="20250108 16:00:59.591"/>
</kw>
<msg timestamp="20250108 16:00:59.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:59.233" endtime="20250108 16:00:59.591"/>
</kw>
<status status="PASS" starttime="20250108 16:00:59.233" endtime="20250108 16:00:59.591"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:59.594" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:00:59.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:00:59.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:59.592" endtime="20250108 16:00:59.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:00:59.948" level="INFO"/>
<status status="PASS" starttime="20250108 16:00:59.947" endtime="20250108 16:00:59.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:00:59.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:00:59.948" endtime="20250108 16:00:59.948"/>
</kw>
<status status="PASS" starttime="20250108 16:00:59.591" endtime="20250108 16:00:59.948"/>
</kw>
<msg timestamp="20250108 16:00:59.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:59.591" endtime="20250108 16:00:59.949"/>
</kw>
<status status="PASS" starttime="20250108 16:00:59.591" endtime="20250108 16:00:59.949"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:00:59.952" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:01:00.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20250108 16:01:00.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20250108 16:00:59.950" endtime="20250108 16:01:00.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:01:00.301" level="INFO"/>
<status status="PASS" starttime="20250108 16:01:00.301" endtime="20250108 16:01:00.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:01:00.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20250108 16:01:00.301" endtime="20250108 16:01:00.301"/>
</kw>
<status status="PASS" starttime="20250108 16:00:59.950" endtime="20250108 16:01:00.302"/>
</kw>
<msg timestamp="20250108 16:01:00.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:00:59.949" endtime="20250108 16:01:00.302"/>
</kw>
<status status="PASS" starttime="20250108 16:00:59.949" endtime="20250108 16:01:00.302"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.469" endtime="20250108 16:01:00.302"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.469" endtime="20250108 16:01:00.302"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20250108 16:01:00.302" endtime="20250108 16:01:00.302"/>
</kw>
<status status="PASS" starttime="20250108 16:00:55.420" endtime="20250108 16:01:00.302"/>
</kw>
<doc>S3 Secret Revoke test</doc>
<status status="FAIL" starttime="20250108 16:00:10.190" endtime="20250108 16:01:00.302"/>
</suite>
<suite id="s1-s3-s20" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250108 16:01:00.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250108 16:01:00.312" endtime="20250108 16:01:00.312"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 16:01:00.312" endtime="20250108 16:01:00.312"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20250108 16:01:00.312" endtime="20250108 16:01:00.312"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 16:01:00.312" endtime="20250108 16:01:00.312"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<arg>${BUCKET_LAYOUT}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 16:01:00.312" endtime="20250108 16:01:00.312"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 16:01:00.312" endtime="20250108 16:01:00.312"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 16:01:00.312" endtime="20250108 16:01:00.313"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20250108 16:01:00.313" endtime="20250108 16:01:00.313"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250108 16:01:00.313" endtime="20250108 16:01:00.313"/>
</kw>
<status status="PASS" starttime="20250108 16:01:00.311" endtime="20250108 16:01:00.313"/>
</kw>
<test id="s1-s3-s20-t1" name="Check web UI" line="33">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${S3G_WEB_UI}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20250108 16:01:00.316" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:19878 2&gt;&amp;1'.</msg>
<msg timestamp="20250108 16:01:00.323" level="INFO">${rc} = 7</msg>
<msg timestamp="20250108 16:01:00.323" level="INFO">${output} = * Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload ...</msg>
<status status="PASS" starttime="20250108 16:01:00.314" endtime="20250108 16:01:00.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250108 16:01:00.324" level="INFO">* Uses proxy env variable no_proxy == 'om,scm,recon,s3g,kdc,localhost,127.0.0.1'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 172.19.0.7:19878...
* connect to 172.19.0.7 port 19878 failed: Connection refused
* Failed to connect to s3g port 19878: Connection refused

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
curl: (7) Failed to connect to s3g port 19878: Connection refused</msg>
<status status="PASS" starttime="20250108 16:01:00.323" endtime="20250108 16:01:00.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20250108 16:01:00.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20250108 16:01:00.324" level="FAIL">7 != 0</msg>
<status status="FAIL" starttime="20250108 16:01:00.324" endtime="20250108 16:01:00.324"/>
</kw>
<status status="FAIL" starttime="20250108 16:01:00.314" endtime="20250108 16:01:00.325"/>
</kw>
<msg timestamp="20250108 16:01:00.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20250108 16:01:00.314" endtime="20250108 16:01:00.325"/>
</kw>
<status status="FAIL" starttime="20250108 16:01:00.313" endtime="20250108 16:01:00.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20250108 16:01:00.325" endtime="20250108 16:01:00.325"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20250108 16:01:00.313" endtime="20250108 16:01:00.325">7 != 0</status>
</test>
<doc>S3 gateway web ui test</doc>
<status status="FAIL" starttime="20250108 16:01:00.304" endtime="20250108 16:01:00.326"/>
</suite>
<status status="FAIL" starttime="20250108 15:54:55.367" endtime="20250108 16:01:00.329"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="562377"/>
</suite>
<statistics>
<total>
<stat pass="123" fail="10" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">aws-skip</stat>
<stat pass="9" fail="10" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="123" fail="10" skip="0" id="s1" name="ozonesecure-haproxy-s3g">ozonesecure-haproxy-s3g</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-haproxy-s3g.Kinit</stat>
<stat pass="45" fail="0" skip="0" id="s1-s2" name="Security">ozonesecure-haproxy-s3g.Security</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s1" name="Admin-Cert">ozonesecure-haproxy-s3g.Security.Admin-Cert</stat>
<stat pass="6" fail="0" skip="0" id="s1-s2-s2" name="Ozone-Secure-Fs">ozonesecure-haproxy-s3g.Security.Ozone-Secure-Fs</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s3" name="Ozone-Secure-Owner-S3">ozonesecure-haproxy-s3g.Security.Ozone-Secure-Owner-S3</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2-s4" name="Ozone-Secure-S3">ozonesecure-haproxy-s3g.Security.Ozone-Secure-S3</stat>
<stat pass="28" fail="0" skip="0" id="s1-s2-s5" name="Ozone-Secure-Tenant">ozonesecure-haproxy-s3g.Security.Ozone-Secure-Tenant</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Ozone-Secure-Token">ozonesecure-haproxy-s3g.Security.Ozone-Secure-Token</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="S3-secret">ozonesecure-haproxy-s3g.Security.S3-secret</stat>
<stat pass="77" fail="10" skip="0" id="s1-s3" name="s3-encrypted">ozonesecure-haproxy-s3g.s3-encrypted</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s1" name="Awss3">ozonesecure-haproxy-s3g.s3-encrypted.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s2" name="Boto3">ozonesecure-haproxy-s3g.s3-encrypted.Boto3</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3-s3" name="Bucketcreate">ozonesecure-haproxy-s3g.s3-encrypted.Bucketcreate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s4" name="Bucketdelete">ozonesecure-haproxy-s3g.s3-encrypted.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s5" name="Buckethead">ozonesecure-haproxy-s3g.s3-encrypted.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s6" name="Bucketlist">ozonesecure-haproxy-s3g.s3-encrypted.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s7" name="Freon">ozonesecure-haproxy-s3g.s3-encrypted.Freon</stat>
<stat pass="15" fail="0" skip="0" id="s1-s3-s8" name="MultipartUpload">ozonesecure-haproxy-s3g.s3-encrypted.MultipartUpload</stat>
<stat pass="6" fail="0" skip="0" id="s1-s3-s9" name="Objectcopy">ozonesecure-haproxy-s3g.s3-encrypted.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s10" name="Objectcopys3A">ozonesecure-haproxy-s3g.s3-encrypted.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3-s11" name="Objectdelete">ozonesecure-haproxy-s3g.s3-encrypted.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3-s12" name="Objecthead">ozonesecure-haproxy-s3g.s3-encrypted.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s13" name="Objectmultidelete">ozonesecure-haproxy-s3g.s3-encrypted.Objectmultidelete</stat>
<stat pass="21" fail="0" skip="0" id="s1-s3-s14" name="Objectputget">ozonesecure-haproxy-s3g.s3-encrypted.Objectputget</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3-s15" name="Objecttagging">ozonesecure-haproxy-s3g.s3-encrypted.Objecttagging</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3-s16" name="Rclone">ozonesecure-haproxy-s3g.s3-encrypted.Rclone</stat>
<stat pass="2" fail="0" skip="0" id="s1-s3-s17" name="S3 Getsecret">ozonesecure-haproxy-s3g.s3-encrypted.S3 Getsecret</stat>
<stat pass="0" fail="5" skip="0" id="s1-s3-s18" name="Secretgenerate">ozonesecure-haproxy-s3g.s3-encrypted.Secretgenerate</stat>
<stat pass="0" fail="4" skip="0" id="s1-s3-s19" name="Secretrevoke">ozonesecure-haproxy-s3g.s3-encrypted.Secretrevoke</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3-s20" name="Webui">ozonesecure-haproxy-s3g.s3-encrypted.Webui</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
