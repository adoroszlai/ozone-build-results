<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210407 09:19:08.427" schemaversion="2" generator="Rebot 4.0 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:29:13.220" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:29:13.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:29:13.223" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:29:13.223" starttime="20210407 08:29:13.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:29:13.225" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:29:13.225" starttime="20210407 08:29:13.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:29:13.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:29:13.226" starttime="20210407 08:29:13.225"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.226" starttime="20210407 08:29:13.216"/>
</kw>
<msg timestamp="20210407 08:29:13.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:29:13.226" starttime="20210407 08:29:13.216"/>
</kw>
<msg timestamp="20210407 08:29:13.227" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:29:13.227" starttime="20210407 08:29:13.215"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:29:13.231" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:29:13.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:29:13.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:29:13.239" starttime="20210407 08:29:13.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:29:13.240" level="INFO"/>
<status status="PASS" endtime="20210407 08:29:13.240" starttime="20210407 08:29:13.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:29:13.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:29:13.241" starttime="20210407 08:29:13.240"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.241" starttime="20210407 08:29:13.228"/>
</kw>
<msg timestamp="20210407 08:29:13.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:29:13.241" starttime="20210407 08:29:13.228"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.241" starttime="20210407 08:29:13.227"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.241" starttime="20210407 08:29:13.227"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.242" starttime="20210407 08:29:13.215"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.242" starttime="20210407 08:29:13.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:29:13.246" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:29:13.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:29:13.367" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210407 08:29:13.367" starttime="20210407 08:29:13.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:29:13.368" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Wed, 07 Apr 2021 08:29:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCl67zUUgF8LqRMDU5QozCQ6WP1cLMQ+cFtE1PpSYOMnafngqkyLAncYAwrSHG0eLDuldOeM65+KuTYBVDbGvoGM7V
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1617820153357&amp;s=kj/79RpjCfOX73HIgUKZktk/gV25K7te1WUHsfdRv6Q="; Path=/; HttpOnly
Last-Modified: Wed, 07 Apr 2021 08:09:06 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210407 08:29:13.369" starttime="20210407 08:29:13.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:29:13.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:29:13.369" starttime="20210407 08:29:13.369"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.370" starttime="20210407 08:29:13.243"/>
</kw>
<msg timestamp="20210407 08:29:13.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:29:13.370" starttime="20210407 08:29:13.243"/>
</kw>
<msg timestamp="20210407 08:29:13.370" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210407 08:29:13.370" starttime="20210407 08:29:13.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:29:13.371" starttime="20210407 08:29:13.371"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210407 08:29:13.371" starttime="20210407 08:29:13.213"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:29:13.380" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:29:13.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:29:13.383" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:29:13.383" starttime="20210407 08:29:13.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:29:13.384" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:29:13.384" starttime="20210407 08:29:13.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:29:13.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:29:13.385" starttime="20210407 08:29:13.384"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.386" starttime="20210407 08:29:13.376"/>
</kw>
<msg timestamp="20210407 08:29:13.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:29:13.386" starttime="20210407 08:29:13.376"/>
</kw>
<msg timestamp="20210407 08:29:13.386" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:29:13.387" starttime="20210407 08:29:13.375"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:29:13.389" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:29:13.389" starttime="20210407 08:29:13.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:29:13.394" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:29:13.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:29:13.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:29:13.403" starttime="20210407 08:29:13.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:29:13.404" level="INFO"/>
<status status="PASS" endtime="20210407 08:29:13.404" starttime="20210407 08:29:13.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:29:13.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:29:13.406" starttime="20210407 08:29:13.405"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.406" starttime="20210407 08:29:13.391"/>
</kw>
<msg timestamp="20210407 08:29:13.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:29:13.407" starttime="20210407 08:29:13.390"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.407" starttime="20210407 08:29:13.389"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.407" starttime="20210407 08:29:13.389"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.407" starttime="20210407 08:29:13.374"/>
</kw>
<status status="PASS" endtime="20210407 08:29:13.407" starttime="20210407 08:29:13.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:29:13.412" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:13.374" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210407 08:34:13.374" starttime="20210407 08:29:13.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210407 08:34:13.375" starttime="20210407 08:34:13.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210407 08:34:13.375" starttime="20210407 08:34:13.375"/>
</kw>
<status status="FAIL" endtime="20210407 08:34:13.376" starttime="20210407 08:29:13.408"/>
</kw>
<msg timestamp="20210407 08:34:13.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210407 08:34:13.376" starttime="20210407 08:29:13.408"/>
</kw>
<status status="FAIL" endtime="20210407 08:34:13.376" starttime="20210407 08:29:13.408"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" endtime="20210407 08:34:13.377" starttime="20210407 08:34:13.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 08:34:13.377" starttime="20210407 08:34:13.377"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210407 08:34:13.377" starttime="20210407 08:29:13.372">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20210407 08:34:13.379" starttime="20210407 08:29:13.182"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:13.393" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:16.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:34:16.572" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210407 08:34:16.572" starttime="20210407 08:34:13.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:16.574" level="INFO">om</msg>
<status status="PASS" endtime="20210407 08:34:16.574" starttime="20210407 08:34:16.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:16.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:16.575" starttime="20210407 08:34:16.574"/>
</kw>
<status status="PASS" endtime="20210407 08:34:16.575" starttime="20210407 08:34:13.389"/>
</kw>
<msg timestamp="20210407 08:34:16.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:34:16.576" starttime="20210407 08:34:13.388"/>
</kw>
<msg timestamp="20210407 08:34:16.576" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210407 08:34:16.576" starttime="20210407 08:34:13.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:34:16.577" starttime="20210407 08:34:16.576"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:16.581" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:19.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:34:19.564" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210407 08:34:19.564" starttime="20210407 08:34:16.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:19.566" level="INFO">om</msg>
<status status="PASS" endtime="20210407 08:34:19.566" starttime="20210407 08:34:19.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:19.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:19.567" starttime="20210407 08:34:19.566"/>
</kw>
<status status="PASS" endtime="20210407 08:34:19.567" starttime="20210407 08:34:16.578"/>
</kw>
<msg timestamp="20210407 08:34:19.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:34:19.567" starttime="20210407 08:34:16.577"/>
</kw>
<msg timestamp="20210407 08:34:19.568" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210407 08:34:19.568" starttime="20210407 08:34:16.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:34:19.568" starttime="20210407 08:34:19.568"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210407 08:34:19.569" starttime="20210407 08:34:13.386"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:19.578" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:22.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:34:22.741" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:34:22.741" starttime="20210407 08:34:19.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:22.743" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:34:22.743" starttime="20210407 08:34:22.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:22.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:22.744" starttime="20210407 08:34:22.743"/>
</kw>
<status status="PASS" endtime="20210407 08:34:22.745" starttime="20210407 08:34:19.573"/>
</kw>
<msg timestamp="20210407 08:34:22.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:34:22.746" starttime="20210407 08:34:19.572"/>
</kw>
<msg timestamp="20210407 08:34:22.746" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210407 08:34:22.746" starttime="20210407 08:34:19.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:34:22.749" starttime="20210407 08:34:22.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:22.757" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:25.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:34:25.842" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:34:25.842" starttime="20210407 08:34:22.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:25.843" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:34:25.843" starttime="20210407 08:34:25.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:25.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:25.844" starttime="20210407 08:34:25.844"/>
</kw>
<status status="PASS" endtime="20210407 08:34:25.845" starttime="20210407 08:34:22.751"/>
</kw>
<msg timestamp="20210407 08:34:25.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:34:25.845" starttime="20210407 08:34:22.750"/>
</kw>
<msg timestamp="20210407 08:34:25.845" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210407 08:34:25.845" starttime="20210407 08:34:22.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:34:25.846" starttime="20210407 08:34:25.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210407 08:34:25.846" starttime="20210407 08:34:19.570"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:25.853" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:28.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:34:28.559" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210407 08:34:28.559" starttime="20210407 08:34:25.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:28.560" level="INFO">om</msg>
<status status="PASS" endtime="20210407 08:34:28.560" starttime="20210407 08:34:28.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:28.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:28.561" starttime="20210407 08:34:28.560"/>
</kw>
<status status="PASS" endtime="20210407 08:34:28.561" starttime="20210407 08:34:25.850"/>
</kw>
<msg timestamp="20210407 08:34:28.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:34:28.562" starttime="20210407 08:34:25.850"/>
</kw>
<msg timestamp="20210407 08:34:28.562" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210407 08:34:28.562" starttime="20210407 08:34:25.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:34:28.563" starttime="20210407 08:34:28.562"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:34:28.563" starttime="20210407 08:34:28.563"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:28.567" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:30.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:34:30.893" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210407 08:34:30.893" starttime="20210407 08:34:28.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:30.895" level="INFO">om</msg>
<status status="PASS" endtime="20210407 08:34:30.895" starttime="20210407 08:34:30.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:30.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:30.896" starttime="20210407 08:34:30.895"/>
</kw>
<status status="PASS" endtime="20210407 08:34:30.896" starttime="20210407 08:34:28.565"/>
</kw>
<msg timestamp="20210407 08:34:30.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:34:30.896" starttime="20210407 08:34:28.564"/>
</kw>
<msg timestamp="20210407 08:34:30.897" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210407 08:34:30.897" starttime="20210407 08:34:28.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:34:30.898" starttime="20210407 08:34:30.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:34:30.898" starttime="20210407 08:34:30.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210407 08:34:30.899" starttime="20210407 08:34:25.847"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:30.903" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:32.317" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:34:32.317" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210407 08:34:32.317" starttime="20210407 08:34:30.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:32.318" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210407 08:34:32.318" starttime="20210407 08:34:32.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:32.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:32.320" starttime="20210407 08:34:32.319"/>
</kw>
<msg timestamp="20210407 08:34:32.320" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210407 08:34:32.320" starttime="20210407 08:34:30.900"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:34:32.321" starttime="20210407 08:34:32.320"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:32.324" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:34.970" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:34:34.970" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210407 08:34:34.970" starttime="20210407 08:34:32.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:34.972" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210407 08:34:34.972" starttime="20210407 08:34:34.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:34.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:34.973" starttime="20210407 08:34:34.972"/>
</kw>
<msg timestamp="20210407 08:34:34.973" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210407 08:34:34.974" starttime="20210407 08:34:32.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:34:34.974" starttime="20210407 08:34:34.974"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210407 08:34:34.974" starttime="20210407 08:34:30.899"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210407 08:34:34.976" starttime="20210407 08:34:13.381"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="SETUP" name="Create volumes">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210407 08:34:35.000" level="INFO">${random} = 53725</msg>
<status status="PASS" endtime="20210407 08:34:35.000" starttime="20210407 08:34:34.999"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:34:35.002" level="INFO">${source} = 53725-source</msg>
<status status="PASS" endtime="20210407 08:34:35.002" starttime="20210407 08:34:35.000"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:34:35.004" level="INFO">${target} = 53725-target</msg>
<status status="PASS" endtime="20210407 08:34:35.004" starttime="20210407 08:34:35.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:35.009" level="INFO">Running command 'ozone sh volume create 53725-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:42.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:34:42.420" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:34:42.420" starttime="20210407 08:34:35.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:42.421" level="INFO"/>
<status status="PASS" endtime="20210407 08:34:42.421" starttime="20210407 08:34:42.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:42.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:42.422" starttime="20210407 08:34:42.421"/>
</kw>
<status status="PASS" endtime="20210407 08:34:42.422" starttime="20210407 08:34:35.006"/>
</kw>
<msg timestamp="20210407 08:34:42.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:34:42.423" starttime="20210407 08:34:35.005"/>
</kw>
<status status="PASS" endtime="20210407 08:34:42.423" starttime="20210407 08:34:35.005"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:42.427" level="INFO">Running command 'ozone sh volume create 53725-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:50.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:34:50.013" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:34:50.013" starttime="20210407 08:34:42.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:50.014" level="INFO"/>
<status status="PASS" endtime="20210407 08:34:50.014" starttime="20210407 08:34:50.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:50.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:50.015" starttime="20210407 08:34:50.014"/>
</kw>
<status status="PASS" endtime="20210407 08:34:50.015" starttime="20210407 08:34:42.424"/>
</kw>
<msg timestamp="20210407 08:34:50.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:34:50.016" starttime="20210407 08:34:42.424"/>
</kw>
<status status="PASS" endtime="20210407 08:34:50.017" starttime="20210407 08:34:42.423"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:50.024" level="INFO">Running command 'ozone sh bucket create 53725-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:34:57.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:34:57.131" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:34:57.132" starttime="20210407 08:34:50.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:34:57.134" level="INFO"/>
<status status="PASS" endtime="20210407 08:34:57.134" starttime="20210407 08:34:57.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:34:57.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:34:57.136" starttime="20210407 08:34:57.135"/>
</kw>
<status status="PASS" endtime="20210407 08:34:57.137" starttime="20210407 08:34:50.021"/>
</kw>
<msg timestamp="20210407 08:34:57.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:34:57.137" starttime="20210407 08:34:50.019"/>
</kw>
<status status="PASS" endtime="20210407 08:34:57.138" starttime="20210407 08:34:50.018"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:34:57.145" level="INFO">Running command 'ozone sh key put 53725-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:38:07.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:38:07.763" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:38:07.764" starttime="20210407 08:34:57.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:38:07.766" level="INFO"/>
<status status="PASS" endtime="20210407 08:38:07.766" starttime="20210407 08:38:07.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:38:07.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:38:07.767" starttime="20210407 08:38:07.767"/>
</kw>
<status status="PASS" endtime="20210407 08:38:07.768" starttime="20210407 08:34:57.141"/>
</kw>
<msg timestamp="20210407 08:38:07.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:38:07.769" starttime="20210407 08:34:57.140"/>
</kw>
<status status="PASS" endtime="20210407 08:38:07.769" starttime="20210407 08:34:57.138"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:38:07.776" level="INFO">Running command 'ozone sh bucket create 53725-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:38:15.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:38:15.123" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:38:15.123" starttime="20210407 08:38:07.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:38:15.124" level="INFO"/>
<status status="PASS" endtime="20210407 08:38:15.124" starttime="20210407 08:38:15.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:38:15.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:38:15.125" starttime="20210407 08:38:15.124"/>
</kw>
<status status="PASS" endtime="20210407 08:38:15.125" starttime="20210407 08:38:07.772"/>
</kw>
<msg timestamp="20210407 08:38:15.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:38:15.126" starttime="20210407 08:38:07.772"/>
</kw>
<status status="PASS" endtime="20210407 08:38:15.126" starttime="20210407 08:38:07.770"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:38:15.130" level="INFO">Running command 'ozone sh bucket link 53725-source/readable-bucket 53725-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:38:22.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:38:22.704" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:38:22.704" starttime="20210407 08:38:15.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:38:22.705" level="INFO"/>
<status status="PASS" endtime="20210407 08:38:22.706" starttime="20210407 08:38:22.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:38:22.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:38:22.706" starttime="20210407 08:38:22.706"/>
</kw>
<status status="PASS" endtime="20210407 08:38:22.707" starttime="20210407 08:38:15.127"/>
</kw>
<msg timestamp="20210407 08:38:22.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:38:22.707" starttime="20210407 08:38:15.127"/>
</kw>
<status status="PASS" endtime="20210407 08:38:22.707" starttime="20210407 08:38:15.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:38:22.711" level="INFO">Running command 'ozone sh bucket link 53725-source/readable-bucket 53725-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:38:28.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:38:28.170" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:38:28.170" starttime="20210407 08:38:22.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:38:28.173" level="INFO"/>
<status status="PASS" endtime="20210407 08:38:28.173" starttime="20210407 08:38:28.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:38:28.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:38:28.175" starttime="20210407 08:38:28.174"/>
</kw>
<status status="PASS" endtime="20210407 08:38:28.176" starttime="20210407 08:38:22.708"/>
</kw>
<msg timestamp="20210407 08:38:28.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:38:28.176" starttime="20210407 08:38:22.708"/>
</kw>
<status status="PASS" endtime="20210407 08:38:28.177" starttime="20210407 08:38:22.707"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:38:28.183" level="INFO">Running command 'ozone sh bucket link 53725-source/unreadable-bucket 53725-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:38:35.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:38:35.053" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:38:35.053" starttime="20210407 08:38:28.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:38:35.054" level="INFO"/>
<status status="PASS" endtime="20210407 08:38:35.054" starttime="20210407 08:38:35.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:38:35.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:38:35.055" starttime="20210407 08:38:35.054"/>
</kw>
<status status="PASS" endtime="20210407 08:38:35.056" starttime="20210407 08:38:28.179"/>
</kw>
<msg timestamp="20210407 08:38:35.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:38:35.056" starttime="20210407 08:38:28.178"/>
</kw>
<status status="PASS" endtime="20210407 08:38:35.057" starttime="20210407 08:38:28.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:38:35.063" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53725-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:38:42.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:38:42.921" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:38:42.921" starttime="20210407 08:38:35.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:38:42.924" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:38:42.925" starttime="20210407 08:38:42.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:38:42.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:38:42.927" starttime="20210407 08:38:42.925"/>
</kw>
<status status="PASS" endtime="20210407 08:38:42.928" starttime="20210407 08:38:35.058"/>
</kw>
<msg timestamp="20210407 08:38:42.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:38:42.929" starttime="20210407 08:38:35.058"/>
</kw>
<status status="PASS" endtime="20210407 08:38:42.930" starttime="20210407 08:38:35.057"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:38:42.936" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 53725-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:38:50.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:38:50.260" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:38:50.260" starttime="20210407 08:38:42.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:38:50.261" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:38:50.261" starttime="20210407 08:38:50.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:38:50.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:38:50.262" starttime="20210407 08:38:50.261"/>
</kw>
<status status="PASS" endtime="20210407 08:38:50.262" starttime="20210407 08:38:42.933"/>
</kw>
<msg timestamp="20210407 08:38:50.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:38:50.263" starttime="20210407 08:38:42.932"/>
</kw>
<status status="PASS" endtime="20210407 08:38:50.263" starttime="20210407 08:38:42.930"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:38:50.268" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 53725-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:38:57.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:38:57.281" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:38:57.281" starttime="20210407 08:38:50.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:38:57.282" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:38:57.282" starttime="20210407 08:38:57.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:38:57.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:38:57.283" starttime="20210407 08:38:57.282"/>
</kw>
<status status="PASS" endtime="20210407 08:38:57.283" starttime="20210407 08:38:50.265"/>
</kw>
<msg timestamp="20210407 08:38:57.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:38:57.284" starttime="20210407 08:38:50.264"/>
</kw>
<status status="PASS" endtime="20210407 08:38:57.284" starttime="20210407 08:38:50.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:38:57.291" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53725-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:39:04.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:39:04.378" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:39:04.378" starttime="20210407 08:38:57.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:39:04.379" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:39:04.379" starttime="20210407 08:39:04.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:39:04.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:39:04.380" starttime="20210407 08:39:04.379"/>
</kw>
<status status="PASS" endtime="20210407 08:39:04.380" starttime="20210407 08:38:57.287"/>
</kw>
<msg timestamp="20210407 08:39:04.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:39:04.381" starttime="20210407 08:38:57.286"/>
</kw>
<status status="PASS" endtime="20210407 08:39:04.381" starttime="20210407 08:38:57.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:39:04.385" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53725-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:39:11.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:39:11.507" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:39:11.507" starttime="20210407 08:39:04.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:39:11.508" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:39:11.509" starttime="20210407 08:39:11.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:39:11.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:39:11.509" starttime="20210407 08:39:11.509"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.510" starttime="20210407 08:39:04.382"/>
</kw>
<msg timestamp="20210407 08:39:11.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:39:11.510" starttime="20210407 08:39:04.382"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.510" starttime="20210407 08:39:04.381"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.511" starttime="20210407 08:34:50.018"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.511" starttime="20210407 08:34:50.017"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.511" starttime="20210407 08:34:34.999"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:39:11.520" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:39:11.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:39:11.521" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:39:11.522" starttime="20210407 08:39:11.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:39:11.523" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:39:11.523" starttime="20210407 08:39:11.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:39:11.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:39:11.524" starttime="20210407 08:39:11.523"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.524" starttime="20210407 08:39:11.515"/>
</kw>
<msg timestamp="20210407 08:39:11.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:39:11.525" starttime="20210407 08:39:11.515"/>
</kw>
<msg timestamp="20210407 08:39:11.525" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:39:11.525" starttime="20210407 08:39:11.514"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:39:11.527" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:39:11.527" starttime="20210407 08:39:11.525"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:39:11.532" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:39:11.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:39:11.736" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:39:11.736" starttime="20210407 08:39:11.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:39:11.738" level="INFO"/>
<status status="PASS" endtime="20210407 08:39:11.738" starttime="20210407 08:39:11.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:39:11.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:39:11.739" starttime="20210407 08:39:11.738"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.739" starttime="20210407 08:39:11.529"/>
</kw>
<msg timestamp="20210407 08:39:11.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:39:11.739" starttime="20210407 08:39:11.529"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.740" starttime="20210407 08:39:11.528"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.740" starttime="20210407 08:39:11.527"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.740" starttime="20210407 08:39:11.513"/>
</kw>
<status status="PASS" endtime="20210407 08:39:11.740" starttime="20210407 08:39:11.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:39:11.747" level="INFO">Running command 'ozone sh bucket link 53725-source/no-such-bucket 53725-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:39:19.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:39:19.131" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:39:19.131" starttime="20210407 08:39:11.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:39:19.132" level="INFO"/>
<status status="PASS" endtime="20210407 08:39:19.132" starttime="20210407 08:39:19.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:39:19.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:39:19.133" starttime="20210407 08:39:19.132"/>
</kw>
<status status="PASS" endtime="20210407 08:39:19.133" starttime="20210407 08:39:11.742"/>
</kw>
<msg timestamp="20210407 08:39:19.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:39:19.134" starttime="20210407 08:39:11.741"/>
</kw>
<status status="PASS" endtime="20210407 08:39:19.134" starttime="20210407 08:39:11.740"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:39:19.139" level="INFO">Running command 'ozone sh key list 53725-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:39:26.467" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:39:26.467" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210407 08:39:26.467" starttime="20210407 08:39:19.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:39:26.470" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210407 08:39:26.470" starttime="20210407 08:39:26.468"/>
</kw>
<msg timestamp="20210407 08:39:26.471" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210407 08:39:26.471" starttime="20210407 08:39:19.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:39:26.473" starttime="20210407 08:39:26.471"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:39:26.473" starttime="20210407 08:39:11.511"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:39:26.485" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:39:26.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:39:26.489" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:39:26.489" starttime="20210407 08:39:26.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:39:26.491" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:39:26.492" starttime="20210407 08:39:26.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:39:26.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:39:26.493" starttime="20210407 08:39:26.492"/>
</kw>
<status status="PASS" endtime="20210407 08:39:26.494" starttime="20210407 08:39:26.480"/>
</kw>
<msg timestamp="20210407 08:39:26.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:39:26.494" starttime="20210407 08:39:26.479"/>
</kw>
<msg timestamp="20210407 08:39:26.495" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:39:26.495" starttime="20210407 08:39:26.478"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:39:26.497" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:39:26.497" starttime="20210407 08:39:26.495"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:39:26.505" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:39:26.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:39:26.517" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:39:26.517" starttime="20210407 08:39:26.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:39:26.518" level="INFO"/>
<status status="PASS" endtime="20210407 08:39:26.518" starttime="20210407 08:39:26.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:39:26.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:39:26.519" starttime="20210407 08:39:26.518"/>
</kw>
<status status="PASS" endtime="20210407 08:39:26.519" starttime="20210407 08:39:26.501"/>
</kw>
<msg timestamp="20210407 08:39:26.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:39:26.520" starttime="20210407 08:39:26.500"/>
</kw>
<status status="PASS" endtime="20210407 08:39:26.520" starttime="20210407 08:39:26.498"/>
</kw>
<status status="PASS" endtime="20210407 08:39:26.520" starttime="20210407 08:39:26.497"/>
</kw>
<status status="PASS" endtime="20210407 08:39:26.520" starttime="20210407 08:39:26.478"/>
</kw>
<status status="PASS" endtime="20210407 08:39:26.520" starttime="20210407 08:39:26.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:39:26.526" level="INFO">Running command 'ozone sh bucket link 53725-source/bucket1 53725-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:39:33.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:39:33.840" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:39:33.840" starttime="20210407 08:39:26.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:39:33.841" level="INFO"/>
<status status="PASS" endtime="20210407 08:39:33.841" starttime="20210407 08:39:33.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:39:33.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:39:33.842" starttime="20210407 08:39:33.842"/>
</kw>
<status status="PASS" endtime="20210407 08:39:33.843" starttime="20210407 08:39:26.522"/>
</kw>
<msg timestamp="20210407 08:39:33.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:39:33.843" starttime="20210407 08:39:26.522"/>
</kw>
<status status="PASS" endtime="20210407 08:39:33.843" starttime="20210407 08:39:26.521"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:39:33.851" level="INFO">Running command 'ozone sh bucket create 53725-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:39:39.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:39:39.048" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:39:39.048" starttime="20210407 08:39:33.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:39:39.049" level="INFO"/>
<status status="PASS" endtime="20210407 08:39:39.049" starttime="20210407 08:39:39.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:39:39.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:39:39.050" starttime="20210407 08:39:39.049"/>
</kw>
<status status="PASS" endtime="20210407 08:39:39.050" starttime="20210407 08:39:33.846"/>
</kw>
<msg timestamp="20210407 08:39:39.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:39:39.051" starttime="20210407 08:39:33.845"/>
</kw>
<status status="PASS" endtime="20210407 08:39:39.051" starttime="20210407 08:39:33.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:39:39.059" level="INFO">Running command 'ozone sh key put 53725-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:41:26.476" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210407 08:41:26.476" starttime="20210407 08:39:39.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210407 08:41:26.477" starttime="20210407 08:41:26.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210407 08:41:26.477" starttime="20210407 08:41:26.477"/>
</kw>
<status status="FAIL" endtime="20210407 08:41:26.478" starttime="20210407 08:39:39.054"/>
</kw>
<msg timestamp="20210407 08:41:26.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210407 08:41:26.478" starttime="20210407 08:39:39.053"/>
</kw>
<status status="FAIL" endtime="20210407 08:41:26.478" starttime="20210407 08:39:39.052"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" endtime="20210407 08:41:26.479" starttime="20210407 08:41:26.478"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210407 08:41:26.479" starttime="20210407 08:39:26.475">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:41:26.486" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:41:26.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:41:26.490" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:41:26.490" starttime="20210407 08:41:26.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:41:26.491" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:41:26.492" starttime="20210407 08:41:26.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:41:26.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:41:26.493" starttime="20210407 08:41:26.492"/>
</kw>
<status status="PASS" endtime="20210407 08:41:26.493" starttime="20210407 08:41:26.483"/>
</kw>
<msg timestamp="20210407 08:41:26.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:41:26.494" starttime="20210407 08:41:26.483"/>
</kw>
<msg timestamp="20210407 08:41:26.494" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:41:26.494" starttime="20210407 08:41:26.482"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:41:26.495" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:41:26.495" starttime="20210407 08:41:26.495"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:41:26.502" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:41:26.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:41:26.511" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:41:26.512" starttime="20210407 08:41:26.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:41:26.514" level="INFO"/>
<status status="PASS" endtime="20210407 08:41:26.515" starttime="20210407 08:41:26.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:41:26.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:41:26.516" starttime="20210407 08:41:26.515"/>
</kw>
<status status="PASS" endtime="20210407 08:41:26.516" starttime="20210407 08:41:26.498"/>
</kw>
<msg timestamp="20210407 08:41:26.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:41:26.517" starttime="20210407 08:41:26.497"/>
</kw>
<status status="PASS" endtime="20210407 08:41:26.517" starttime="20210407 08:41:26.496"/>
</kw>
<status status="PASS" endtime="20210407 08:41:26.517" starttime="20210407 08:41:26.496"/>
</kw>
<status status="PASS" endtime="20210407 08:41:26.518" starttime="20210407 08:41:26.481"/>
</kw>
<status status="PASS" endtime="20210407 08:41:26.518" starttime="20210407 08:41:26.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:41:26.523" level="INFO">Running command 'ozone sh key put 53725-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:26.480" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210407 08:43:26.480" starttime="20210407 08:41:26.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210407 08:43:26.482" starttime="20210407 08:43:26.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210407 08:43:26.482" starttime="20210407 08:43:26.482"/>
</kw>
<status status="FAIL" endtime="20210407 08:43:26.482" starttime="20210407 08:41:26.519"/>
</kw>
<msg timestamp="20210407 08:43:26.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210407 08:43:26.483" starttime="20210407 08:41:26.519"/>
</kw>
<status status="FAIL" endtime="20210407 08:43:26.483" starttime="20210407 08:41:26.518"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" endtime="20210407 08:43:26.483" starttime="20210407 08:43:26.483"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210407 08:43:26.484" starttime="20210407 08:41:26.480">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:26.493" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:26.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:26.496" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:43:26.496" starttime="20210407 08:43:26.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:26.498" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:43:26.498" starttime="20210407 08:43:26.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:26.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:26.500" starttime="20210407 08:43:26.498"/>
</kw>
<status status="PASS" endtime="20210407 08:43:26.500" starttime="20210407 08:43:26.488"/>
</kw>
<msg timestamp="20210407 08:43:26.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:26.501" starttime="20210407 08:43:26.488"/>
</kw>
<msg timestamp="20210407 08:43:26.501" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:43:26.501" starttime="20210407 08:43:26.488"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:43:26.502" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:43:26.502" starttime="20210407 08:43:26.502"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:26.508" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:26.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:26.522" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:43:26.523" starttime="20210407 08:43:26.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:26.526" level="INFO"/>
<status status="PASS" endtime="20210407 08:43:26.526" starttime="20210407 08:43:26.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:26.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:26.527" starttime="20210407 08:43:26.527"/>
</kw>
<status status="PASS" endtime="20210407 08:43:26.528" starttime="20210407 08:43:26.504"/>
</kw>
<msg timestamp="20210407 08:43:26.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:26.528" starttime="20210407 08:43:26.504"/>
</kw>
<status status="PASS" endtime="20210407 08:43:26.528" starttime="20210407 08:43:26.503"/>
</kw>
<status status="PASS" endtime="20210407 08:43:26.528" starttime="20210407 08:43:26.503"/>
</kw>
<status status="PASS" endtime="20210407 08:43:26.529" starttime="20210407 08:43:26.487"/>
</kw>
<status status="PASS" endtime="20210407 08:43:26.529" starttime="20210407 08:43:26.486"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:26.533" level="INFO">Running command 'ozone sh key list 53725-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:33.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:33.718" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210407 08:43:33.718" starttime="20210407 08:43:26.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:33.721" level="INFO">key1</msg>
<status status="PASS" endtime="20210407 08:43:33.721" starttime="20210407 08:43:33.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:33.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:33.723" starttime="20210407 08:43:33.721"/>
</kw>
<status status="PASS" endtime="20210407 08:43:33.723" starttime="20210407 08:43:26.530"/>
</kw>
<msg timestamp="20210407 08:43:33.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:33.724" starttime="20210407 08:43:26.530"/>
</kw>
<msg timestamp="20210407 08:43:33.724" level="INFO">${target_list} = key1</msg>
<status status="PASS" endtime="20210407 08:43:33.724" starttime="20210407 08:43:26.529"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:33.729" level="INFO">Running command 'ozone sh key list 53725-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:41.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:41.894" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210407 08:43:41.894" starttime="20210407 08:43:33.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:41.896" level="INFO">key1</msg>
<status status="PASS" endtime="20210407 08:43:41.896" starttime="20210407 08:43:41.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:41.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:41.897" starttime="20210407 08:43:41.897"/>
</kw>
<status status="PASS" endtime="20210407 08:43:41.898" starttime="20210407 08:43:33.725"/>
</kw>
<msg timestamp="20210407 08:43:41.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:41.898" starttime="20210407 08:43:33.725"/>
</kw>
<msg timestamp="20210407 08:43:41.899" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210407 08:43:41.899" starttime="20210407 08:43:33.724"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:43:41.900" starttime="20210407 08:43:41.899"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:43:41.900" starttime="20210407 08:43:41.900"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210407 08:43:41.901" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" endtime="20210407 08:43:41.902" starttime="20210407 08:43:41.901"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210407 08:43:41.902" starttime="20210407 08:43:26.485">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:41.911" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:41.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:41.915" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:43:41.915" starttime="20210407 08:43:41.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:41.917" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:43:41.917" starttime="20210407 08:43:41.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:41.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:41.918" starttime="20210407 08:43:41.917"/>
</kw>
<status status="PASS" endtime="20210407 08:43:41.919" starttime="20210407 08:43:41.907"/>
</kw>
<msg timestamp="20210407 08:43:41.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:41.919" starttime="20210407 08:43:41.907"/>
</kw>
<msg timestamp="20210407 08:43:41.919" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:43:41.920" starttime="20210407 08:43:41.906"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:43:41.921" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:43:41.921" starttime="20210407 08:43:41.920"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:41.931" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:41.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:41.940" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:43:41.941" starttime="20210407 08:43:41.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:41.942" level="INFO"/>
<status status="PASS" endtime="20210407 08:43:41.942" starttime="20210407 08:43:41.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:41.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:41.943" starttime="20210407 08:43:41.942"/>
</kw>
<status status="PASS" endtime="20210407 08:43:41.944" starttime="20210407 08:43:41.927"/>
</kw>
<msg timestamp="20210407 08:43:41.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:41.944" starttime="20210407 08:43:41.927"/>
</kw>
<status status="PASS" endtime="20210407 08:43:41.944" starttime="20210407 08:43:41.922"/>
</kw>
<status status="PASS" endtime="20210407 08:43:41.944" starttime="20210407 08:43:41.921"/>
</kw>
<status status="PASS" endtime="20210407 08:43:41.945" starttime="20210407 08:43:41.905"/>
</kw>
<status status="PASS" endtime="20210407 08:43:41.945" starttime="20210407 08:43:41.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:41.950" level="INFO">Running command 'ozone sh key delete 53725-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:47.327" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:43:47.327" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210407 08:43:47.327" starttime="20210407 08:43:41.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:47.329" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210407 08:43:47.329" starttime="20210407 08:43:47.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:47.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210407 08:43:47.330" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210407 08:43:47.330" starttime="20210407 08:43:47.329"/>
</kw>
<status status="FAIL" endtime="20210407 08:43:47.330" starttime="20210407 08:43:41.946"/>
</kw>
<msg timestamp="20210407 08:43:47.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210407 08:43:47.330" starttime="20210407 08:43:41.946"/>
</kw>
<status status="FAIL" endtime="20210407 08:43:47.331" starttime="20210407 08:43:41.945"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" endtime="20210407 08:43:47.331" starttime="20210407 08:43:47.331"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 08:43:47.331" starttime="20210407 08:43:47.331"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210407 08:43:47.332" starttime="20210407 08:43:41.903">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:47.350" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:47.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:47.352" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:43:47.352" starttime="20210407 08:43:47.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:47.354" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:43:47.354" starttime="20210407 08:43:47.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:47.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:47.355" starttime="20210407 08:43:47.354"/>
</kw>
<status status="PASS" endtime="20210407 08:43:47.355" starttime="20210407 08:43:47.344"/>
</kw>
<msg timestamp="20210407 08:43:47.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:47.355" starttime="20210407 08:43:47.339"/>
</kw>
<msg timestamp="20210407 08:43:47.356" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:43:47.356" starttime="20210407 08:43:47.338"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:43:47.358" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:43:47.359" starttime="20210407 08:43:47.356"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:47.365" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:47.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:47.375" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:43:47.375" starttime="20210407 08:43:47.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:47.377" level="INFO"/>
<status status="PASS" endtime="20210407 08:43:47.378" starttime="20210407 08:43:47.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:47.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:47.379" starttime="20210407 08:43:47.378"/>
</kw>
<status status="PASS" endtime="20210407 08:43:47.380" starttime="20210407 08:43:47.362"/>
</kw>
<msg timestamp="20210407 08:43:47.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:47.381" starttime="20210407 08:43:47.361"/>
</kw>
<status status="PASS" endtime="20210407 08:43:47.381" starttime="20210407 08:43:47.360"/>
</kw>
<status status="PASS" endtime="20210407 08:43:47.381" starttime="20210407 08:43:47.359"/>
</kw>
<status status="PASS" endtime="20210407 08:43:47.382" starttime="20210407 08:43:47.338"/>
</kw>
<status status="PASS" endtime="20210407 08:43:47.382" starttime="20210407 08:43:47.337"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:47.389" level="INFO">Running command 'ozone sh bucket list 53725-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:55.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:55.319" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210407 08:43:55.319" starttime="20210407 08:43:47.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:55.321" level="INFO">{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:39:19.050Z",
  "modificationTime" : "2021-04-07T08:39:19.050Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:38:34.853Z",
  "modificationTime" : "2021-04-07T08:39:11.378Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:39:33.761Z",
  "modificationTime" : "2021-04-07T08:39:33.761Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:38:22.436Z",
  "modificationTime" : "2021-04-07T08:39:04.268Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:38:28.070Z",
  "modificationTime" : "2021-04-07T08:38:28.070Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210407 08:43:55.321" starttime="20210407 08:43:55.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:55.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:55.322" starttime="20210407 08:43:55.321"/>
</kw>
<status status="PASS" endtime="20210407 08:43:55.322" starttime="20210407 08:43:47.384"/>
</kw>
<msg timestamp="20210407 08:43:55.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:55.323" starttime="20210407 08:43:47.384"/>
</kw>
<msg timestamp="20210407 08:43:55.323" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210407 08:43:55.323" starttime="20210407 08:43:47.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:43:55.324" starttime="20210407 08:43:55.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:43:55.324" starttime="20210407 08:43:55.324"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:43:55.325" starttime="20210407 08:43:47.336"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:55.335" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:55.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:55.338" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:43:55.338" starttime="20210407 08:43:55.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:55.340" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:43:55.340" starttime="20210407 08:43:55.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:55.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:55.341" starttime="20210407 08:43:55.341"/>
</kw>
<status status="PASS" endtime="20210407 08:43:55.342" starttime="20210407 08:43:55.331"/>
</kw>
<msg timestamp="20210407 08:43:55.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:55.342" starttime="20210407 08:43:55.330"/>
</kw>
<msg timestamp="20210407 08:43:55.346" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:43:55.346" starttime="20210407 08:43:55.329"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:43:55.347" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:43:55.347" starttime="20210407 08:43:55.346"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:55.354" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:43:55.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:43:55.363" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:43:55.364" starttime="20210407 08:43:55.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:43:55.365" level="INFO"/>
<status status="PASS" endtime="20210407 08:43:55.365" starttime="20210407 08:43:55.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:43:55.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:43:55.367" starttime="20210407 08:43:55.366"/>
</kw>
<status status="PASS" endtime="20210407 08:43:55.367" starttime="20210407 08:43:55.350"/>
</kw>
<msg timestamp="20210407 08:43:55.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:43:55.368" starttime="20210407 08:43:55.350"/>
</kw>
<status status="PASS" endtime="20210407 08:43:55.368" starttime="20210407 08:43:55.349"/>
</kw>
<status status="PASS" endtime="20210407 08:43:55.368" starttime="20210407 08:43:55.348"/>
</kw>
<status status="PASS" endtime="20210407 08:43:55.369" starttime="20210407 08:43:55.328"/>
</kw>
<status status="PASS" endtime="20210407 08:43:55.369" starttime="20210407 08:43:55.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:43:55.374" level="INFO">Running command 'ozone sh bucket info 53725-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:03.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:03.130" level="INFO">${output} = 53725-source bucket1</msg>
<status status="PASS" endtime="20210407 08:44:03.130" starttime="20210407 08:43:55.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:03.132" level="INFO">53725-source bucket1</msg>
<status status="PASS" endtime="20210407 08:44:03.132" starttime="20210407 08:44:03.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:03.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:03.132" starttime="20210407 08:44:03.132"/>
</kw>
<status status="PASS" endtime="20210407 08:44:03.134" starttime="20210407 08:43:55.371"/>
</kw>
<msg timestamp="20210407 08:44:03.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:03.134" starttime="20210407 08:43:55.370"/>
</kw>
<msg timestamp="20210407 08:44:03.135" level="INFO">${result} = 53725-source bucket1</msg>
<status status="PASS" endtime="20210407 08:44:03.135" starttime="20210407 08:43:55.369"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:44:03.137" starttime="20210407 08:44:03.135"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:44:03.138" starttime="20210407 08:43:55.326"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:03.153" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:03.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:03.158" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:44:03.158" starttime="20210407 08:44:03.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:03.160" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:44:03.160" starttime="20210407 08:44:03.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:03.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:03.162" starttime="20210407 08:44:03.161"/>
</kw>
<status status="PASS" endtime="20210407 08:44:03.162" starttime="20210407 08:44:03.149"/>
</kw>
<msg timestamp="20210407 08:44:03.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:03.163" starttime="20210407 08:44:03.148"/>
</kw>
<msg timestamp="20210407 08:44:03.163" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:44:03.163" starttime="20210407 08:44:03.147"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:44:03.165" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:44:03.165" starttime="20210407 08:44:03.164"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:03.170" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:03.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:03.181" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:44:03.181" starttime="20210407 08:44:03.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:03.184" level="INFO"/>
<status status="PASS" endtime="20210407 08:44:03.184" starttime="20210407 08:44:03.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:03.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:03.186" starttime="20210407 08:44:03.184"/>
</kw>
<status status="PASS" endtime="20210407 08:44:03.186" starttime="20210407 08:44:03.167"/>
</kw>
<msg timestamp="20210407 08:44:03.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:03.187" starttime="20210407 08:44:03.167"/>
</kw>
<status status="PASS" endtime="20210407 08:44:03.188" starttime="20210407 08:44:03.166"/>
</kw>
<status status="PASS" endtime="20210407 08:44:03.188" starttime="20210407 08:44:03.165"/>
</kw>
<status status="PASS" endtime="20210407 08:44:03.189" starttime="20210407 08:44:03.145"/>
</kw>
<status status="PASS" endtime="20210407 08:44:03.189" starttime="20210407 08:44:03.144"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:03.195" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 53725-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:10.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:10.186" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:44:10.186" starttime="20210407 08:44:03.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:10.187" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:44:10.188" starttime="20210407 08:44:10.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:10.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:10.189" starttime="20210407 08:44:10.188"/>
</kw>
<status status="PASS" endtime="20210407 08:44:10.189" starttime="20210407 08:44:03.191"/>
</kw>
<msg timestamp="20210407 08:44:10.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:10.190" starttime="20210407 08:44:03.190"/>
</kw>
<status status="PASS" endtime="20210407 08:44:10.190" starttime="20210407 08:44:03.189"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:10.195" level="INFO">Running command 'ozone sh bucket getacl 53725-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:17.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:17.940" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210407 08:44:17.940" starttime="20210407 08:44:10.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:17.942" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210407 08:44:17.942" starttime="20210407 08:44:17.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:17.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:17.943" starttime="20210407 08:44:17.942"/>
</kw>
<status status="PASS" endtime="20210407 08:44:17.943" starttime="20210407 08:44:10.192"/>
</kw>
<msg timestamp="20210407 08:44:17.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:17.944" starttime="20210407 08:44:10.192"/>
</kw>
<msg timestamp="20210407 08:44:17.944" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210407 08:44:17.944" starttime="20210407 08:44:10.191"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:44:17.945" starttime="20210407 08:44:17.945"/>
</kw>
<status status="PASS" endtime="20210407 08:44:17.946" starttime="20210407 08:44:10.190"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:17.953" level="INFO">Running command 'ozone sh bucket getacl 53725-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:25.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:25.602" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:44:25.602" starttime="20210407 08:44:17.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:25.605" level="INFO"/>
<status status="PASS" endtime="20210407 08:44:25.605" starttime="20210407 08:44:25.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:25.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:25.608" starttime="20210407 08:44:25.606"/>
</kw>
<status status="PASS" endtime="20210407 08:44:25.609" starttime="20210407 08:44:17.950"/>
</kw>
<msg timestamp="20210407 08:44:25.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:25.610" starttime="20210407 08:44:17.950"/>
</kw>
<msg timestamp="20210407 08:44:25.612" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210407 08:44:25.612" starttime="20210407 08:44:17.948"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:44:25.615" starttime="20210407 08:44:25.613"/>
</kw>
<status status="PASS" endtime="20210407 08:44:25.615" starttime="20210407 08:44:17.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:25.623" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 53725-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:32.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:32.780" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:44:32.780" starttime="20210407 08:44:25.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:32.783" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 08:44:32.783" starttime="20210407 08:44:32.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:32.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:32.785" starttime="20210407 08:44:32.783"/>
</kw>
<status status="PASS" endtime="20210407 08:44:32.785" starttime="20210407 08:44:25.618"/>
</kw>
<msg timestamp="20210407 08:44:32.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:32.786" starttime="20210407 08:44:25.618"/>
</kw>
<status status="PASS" endtime="20210407 08:44:32.786" starttime="20210407 08:44:25.615"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:32.798" level="INFO">Running command 'ozone sh bucket getacl 53725-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:40.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:40.730" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:44:40.730" starttime="20210407 08:44:32.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:40.732" level="INFO"/>
<status status="PASS" endtime="20210407 08:44:40.732" starttime="20210407 08:44:40.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:40.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:40.733" starttime="20210407 08:44:40.732"/>
</kw>
<status status="PASS" endtime="20210407 08:44:40.734" starttime="20210407 08:44:32.794"/>
</kw>
<msg timestamp="20210407 08:44:40.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:40.734" starttime="20210407 08:44:32.793"/>
</kw>
<msg timestamp="20210407 08:44:40.734" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210407 08:44:40.734" starttime="20210407 08:44:32.790"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:44:40.736" starttime="20210407 08:44:40.735"/>
</kw>
<status status="PASS" endtime="20210407 08:44:40.736" starttime="20210407 08:44:32.787"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:40.747" level="INFO">Running command 'ozone sh bucket getacl 53725-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:48.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:48.429" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210407 08:44:48.429" starttime="20210407 08:44:40.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:48.430" level="INFO">READ</msg>
<status status="PASS" endtime="20210407 08:44:48.430" starttime="20210407 08:44:48.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:48.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:48.431" starttime="20210407 08:44:48.431"/>
</kw>
<status status="PASS" endtime="20210407 08:44:48.432" starttime="20210407 08:44:40.740"/>
</kw>
<msg timestamp="20210407 08:44:48.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:48.432" starttime="20210407 08:44:40.739"/>
</kw>
<msg timestamp="20210407 08:44:48.432" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210407 08:44:48.432" starttime="20210407 08:44:40.738"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:44:48.433" starttime="20210407 08:44:48.432"/>
</kw>
<status status="PASS" endtime="20210407 08:44:48.433" starttime="20210407 08:44:40.736"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:44:48.434" starttime="20210407 08:44:03.139"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:48.442" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:48.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:48.447" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:44:48.447" starttime="20210407 08:44:48.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:48.449" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:44:48.449" starttime="20210407 08:44:48.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:48.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:48.450" starttime="20210407 08:44:48.449"/>
</kw>
<status status="PASS" endtime="20210407 08:44:48.451" starttime="20210407 08:44:48.438"/>
</kw>
<msg timestamp="20210407 08:44:48.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:48.451" starttime="20210407 08:44:48.438"/>
</kw>
<msg timestamp="20210407 08:44:48.452" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:44:48.452" starttime="20210407 08:44:48.437"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:44:48.453" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:44:48.453" starttime="20210407 08:44:48.452"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:48.460" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:48.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:48.702" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:44:48.702" starttime="20210407 08:44:48.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:48.703" level="INFO"/>
<status status="PASS" endtime="20210407 08:44:48.704" starttime="20210407 08:44:48.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:48.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:48.705" starttime="20210407 08:44:48.704"/>
</kw>
<status status="PASS" endtime="20210407 08:44:48.705" starttime="20210407 08:44:48.456"/>
</kw>
<msg timestamp="20210407 08:44:48.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:48.705" starttime="20210407 08:44:48.456"/>
</kw>
<status status="PASS" endtime="20210407 08:44:48.706" starttime="20210407 08:44:48.454"/>
</kw>
<status status="PASS" endtime="20210407 08:44:48.706" starttime="20210407 08:44:48.453"/>
</kw>
<status status="PASS" endtime="20210407 08:44:48.706" starttime="20210407 08:44:48.437"/>
</kw>
<status status="PASS" endtime="20210407 08:44:48.706" starttime="20210407 08:44:48.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:48.713" level="INFO">Running command 'ozone sh bucket link 53725-source/bucket2 53725-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:44:55.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:44:55.688" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:44:55.688" starttime="20210407 08:44:48.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:44:55.691" level="INFO"/>
<status status="PASS" endtime="20210407 08:44:55.692" starttime="20210407 08:44:55.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:44:55.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:44:55.693" starttime="20210407 08:44:55.692"/>
</kw>
<status status="PASS" endtime="20210407 08:44:55.693" starttime="20210407 08:44:48.708"/>
</kw>
<msg timestamp="20210407 08:44:55.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:44:55.693" starttime="20210407 08:44:48.707"/>
</kw>
<status status="PASS" endtime="20210407 08:44:55.698" starttime="20210407 08:44:48.707"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:44:55.705" level="INFO">Running command 'ozone sh bucket create 53725-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:03.394" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:45:03.394" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210407 08:45:03.394" starttime="20210407 08:44:55.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:03.396" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210407 08:45:03.397" starttime="20210407 08:45:03.395"/>
</kw>
<msg timestamp="20210407 08:45:03.397" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210407 08:45:03.397" starttime="20210407 08:44:55.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:45:03.398" starttime="20210407 08:45:03.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:03.403" level="INFO">Running command 'ozone sh bucket create 53725-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:10.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:10.686" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:10.686" starttime="20210407 08:45:03.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:10.688" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:10.688" starttime="20210407 08:45:10.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:10.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:10.689" starttime="20210407 08:45:10.688"/>
</kw>
<status status="PASS" endtime="20210407 08:45:10.689" starttime="20210407 08:45:03.399"/>
</kw>
<msg timestamp="20210407 08:45:10.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:10.689" starttime="20210407 08:45:03.399"/>
</kw>
<status status="PASS" endtime="20210407 08:45:10.690" starttime="20210407 08:45:03.398"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:10.694" level="INFO">Running command 'ozone sh bucket link 53725-source/bucket1 53725-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:18.116" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:45:18.116" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210407 08:45:18.116" starttime="20210407 08:45:10.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:18.118" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210407 08:45:18.118" starttime="20210407 08:45:18.117"/>
</kw>
<msg timestamp="20210407 08:45:18.118" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210407 08:45:18.119" starttime="20210407 08:45:10.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:45:18.120" starttime="20210407 08:45:18.119"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:45:18.121" starttime="20210407 08:44:48.434"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:18.140" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:18.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:18.144" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:45:18.144" starttime="20210407 08:45:18.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:18.146" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:45:18.146" starttime="20210407 08:45:18.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:18.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:18.147" starttime="20210407 08:45:18.146"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.147" starttime="20210407 08:45:18.132"/>
</kw>
<msg timestamp="20210407 08:45:18.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:18.148" starttime="20210407 08:45:18.132"/>
</kw>
<msg timestamp="20210407 08:45:18.148" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:45:18.148" starttime="20210407 08:45:18.131"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:45:18.149" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:45:18.150" starttime="20210407 08:45:18.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:18.159" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:18.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:18.168" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:18.168" starttime="20210407 08:45:18.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:18.171" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:18.171" starttime="20210407 08:45:18.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:18.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:18.174" starttime="20210407 08:45:18.172"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.174" starttime="20210407 08:45:18.155"/>
</kw>
<msg timestamp="20210407 08:45:18.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:18.174" starttime="20210407 08:45:18.151"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.174" starttime="20210407 08:45:18.150"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.175" starttime="20210407 08:45:18.150"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.175" starttime="20210407 08:45:18.130"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.175" starttime="20210407 08:45:18.130"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:18.183" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:18.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:18.190" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:18.190" starttime="20210407 08:45:18.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:18.193" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:18.193" starttime="20210407 08:45:18.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:18.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:18.194" starttime="20210407 08:45:18.193"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.195" starttime="20210407 08:45:18.179"/>
</kw>
<msg timestamp="20210407 08:45:18.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:18.195" starttime="20210407 08:45:18.178"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.196" starttime="20210407 08:45:18.177"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:18.202" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:18.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:18.207" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:45:18.207" starttime="20210407 08:45:18.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:18.209" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:45:18.209" starttime="20210407 08:45:18.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:18.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:18.211" starttime="20210407 08:45:18.210"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.212" starttime="20210407 08:45:18.198"/>
</kw>
<msg timestamp="20210407 08:45:18.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:18.212" starttime="20210407 08:45:18.198"/>
</kw>
<msg timestamp="20210407 08:45:18.212" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:45:18.213" starttime="20210407 08:45:18.197"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:45:18.214" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:45:18.214" starttime="20210407 08:45:18.213"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:18.223" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:18.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:18.234" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:18.234" starttime="20210407 08:45:18.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:18.236" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:18.236" starttime="20210407 08:45:18.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:18.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:18.237" starttime="20210407 08:45:18.236"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.238" starttime="20210407 08:45:18.218"/>
</kw>
<msg timestamp="20210407 08:45:18.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:18.238" starttime="20210407 08:45:18.217"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.239" starttime="20210407 08:45:18.215"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.239" starttime="20210407 08:45:18.215"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.239" starttime="20210407 08:45:18.196"/>
</kw>
<status status="PASS" endtime="20210407 08:45:18.239" starttime="20210407 08:45:18.196"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:18.244" level="INFO">Running command 'ozone sh key list 53725-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:25.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:25.527" level="INFO">${output} = {
  "volumeName" : "53725-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-07T08:35:02.944Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210407 08:45:25.527" starttime="20210407 08:45:18.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:25.530" level="INFO">{
  "volumeName" : "53725-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-07T08:35:02.944Z",
  "modificationTime" : "2021-04-07T08:38:06.429Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210407 08:45:25.530" starttime="20210407 08:45:25.528"/>
</kw>
<msg timestamp="20210407 08:45:25.531" level="INFO">${result} = {
  "volumeName" : "53725-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-07T08:35:02.944Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210407 08:45:25.531" starttime="20210407 08:45:18.240"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:45:25.532" starttime="20210407 08:45:25.531"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.532" starttime="20210407 08:45:18.176"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.532" starttime="20210407 08:45:18.175"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:45:25.533" starttime="20210407 08:45:18.128"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:25.541" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:25.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:25.544" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:45:25.545" starttime="20210407 08:45:25.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:25.546" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:45:25.546" starttime="20210407 08:45:25.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:25.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:25.547" starttime="20210407 08:45:25.546"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.548" starttime="20210407 08:45:25.538"/>
</kw>
<msg timestamp="20210407 08:45:25.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:25.548" starttime="20210407 08:45:25.538"/>
</kw>
<msg timestamp="20210407 08:45:25.548" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:45:25.549" starttime="20210407 08:45:25.537"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:45:25.550" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:45:25.550" starttime="20210407 08:45:25.549"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:25.556" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:25.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:25.564" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:25.564" starttime="20210407 08:45:25.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:25.566" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:25.566" starttime="20210407 08:45:25.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:25.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:25.568" starttime="20210407 08:45:25.567"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.569" starttime="20210407 08:45:25.552"/>
</kw>
<msg timestamp="20210407 08:45:25.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:25.569" starttime="20210407 08:45:25.552"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.570" starttime="20210407 08:45:25.551"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.570" starttime="20210407 08:45:25.550"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.570" starttime="20210407 08:45:25.536"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.570" starttime="20210407 08:45:25.535"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:25.576" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:25.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:25.581" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:25.581" starttime="20210407 08:45:25.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:25.582" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:25.583" starttime="20210407 08:45:25.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:25.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:25.584" starttime="20210407 08:45:25.583"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.584" starttime="20210407 08:45:25.573"/>
</kw>
<msg timestamp="20210407 08:45:25.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:25.585" starttime="20210407 08:45:25.573"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.585" starttime="20210407 08:45:25.572"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:25.591" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:25.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:25.596" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:45:25.596" starttime="20210407 08:45:25.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:25.597" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:45:25.598" starttime="20210407 08:45:25.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:25.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:25.599" starttime="20210407 08:45:25.598"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.600" starttime="20210407 08:45:25.588"/>
</kw>
<msg timestamp="20210407 08:45:25.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:25.600" starttime="20210407 08:45:25.588"/>
</kw>
<msg timestamp="20210407 08:45:25.601" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:45:25.601" starttime="20210407 08:45:25.587"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:45:25.604" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:45:25.604" starttime="20210407 08:45:25.601"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:25.612" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:25.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:25.623" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:25.624" starttime="20210407 08:45:25.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:25.626" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:25.626" starttime="20210407 08:45:25.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:25.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:25.627" starttime="20210407 08:45:25.626"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.627" starttime="20210407 08:45:25.606"/>
</kw>
<msg timestamp="20210407 08:45:25.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:25.628" starttime="20210407 08:45:25.606"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.628" starttime="20210407 08:45:25.605"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.628" starttime="20210407 08:45:25.605"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.629" starttime="20210407 08:45:25.586"/>
</kw>
<status status="PASS" endtime="20210407 08:45:25.629" starttime="20210407 08:45:25.585"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:25.632" level="INFO">Running command 'ozone sh key list 53725-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:33.221" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:45:33.222" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53725-target unreadable-link null</msg>
<status status="PASS" endtime="20210407 08:45:33.222" starttime="20210407 08:45:25.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:33.224" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53725-target unreadable-link null</msg>
<status status="PASS" endtime="20210407 08:45:33.224" starttime="20210407 08:45:33.223"/>
</kw>
<msg timestamp="20210407 08:45:33.224" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53725-target unreadable-link null</msg>
<status status="PASS" endtime="20210407 08:45:33.224" starttime="20210407 08:45:25.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:45:33.225" starttime="20210407 08:45:33.225"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.225" starttime="20210407 08:45:25.571"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.225" starttime="20210407 08:45:25.571"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:45:33.226" starttime="20210407 08:45:25.534"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:33.238" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:33.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:33.242" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:45:33.243" starttime="20210407 08:45:33.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:33.245" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:45:33.245" starttime="20210407 08:45:33.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:33.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:33.247" starttime="20210407 08:45:33.245"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.247" starttime="20210407 08:45:33.232"/>
</kw>
<msg timestamp="20210407 08:45:33.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:33.248" starttime="20210407 08:45:33.231"/>
</kw>
<msg timestamp="20210407 08:45:33.248" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:45:33.249" starttime="20210407 08:45:33.230"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:45:33.250" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:45:33.250" starttime="20210407 08:45:33.249"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:33.257" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:33.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:33.266" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:33.266" starttime="20210407 08:45:33.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:33.267" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:33.267" starttime="20210407 08:45:33.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:33.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:33.268" starttime="20210407 08:45:33.268"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.269" starttime="20210407 08:45:33.253"/>
</kw>
<msg timestamp="20210407 08:45:33.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:33.270" starttime="20210407 08:45:33.253"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.270" starttime="20210407 08:45:33.251"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.270" starttime="20210407 08:45:33.250"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.271" starttime="20210407 08:45:33.230"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.271" starttime="20210407 08:45:33.229"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:33.278" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:33.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:33.284" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:33.284" starttime="20210407 08:45:33.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:33.285" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:33.285" starttime="20210407 08:45:33.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:33.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:33.287" starttime="20210407 08:45:33.286"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.287" starttime="20210407 08:45:33.274"/>
</kw>
<msg timestamp="20210407 08:45:33.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:33.287" starttime="20210407 08:45:33.274"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.288" starttime="20210407 08:45:33.273"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:33.295" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:33.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:33.299" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:45:33.299" starttime="20210407 08:45:33.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:33.300" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:45:33.301" starttime="20210407 08:45:33.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:33.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:33.302" starttime="20210407 08:45:33.301"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.303" starttime="20210407 08:45:33.292"/>
</kw>
<msg timestamp="20210407 08:45:33.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:33.303" starttime="20210407 08:45:33.291"/>
</kw>
<msg timestamp="20210407 08:45:33.304" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:45:33.304" starttime="20210407 08:45:33.290"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:45:33.305" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:45:33.305" starttime="20210407 08:45:33.304"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:33.312" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:33.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:33.322" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:33.322" starttime="20210407 08:45:33.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:33.323" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:33.323" starttime="20210407 08:45:33.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:33.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:33.324" starttime="20210407 08:45:33.324"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.325" starttime="20210407 08:45:33.308"/>
</kw>
<msg timestamp="20210407 08:45:33.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:33.325" starttime="20210407 08:45:33.307"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.326" starttime="20210407 08:45:33.306"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.326" starttime="20210407 08:45:33.306"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.326" starttime="20210407 08:45:33.289"/>
</kw>
<status status="PASS" endtime="20210407 08:45:33.326" starttime="20210407 08:45:33.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:33.334" level="INFO">Running command 'ozone sh bucket info 53725-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:40.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:40.739" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210407 08:45:40.739" starttime="20210407 08:45:33.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:40.741" level="INFO">{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:38:34.853Z",
  "modificationTime" : "2021-04-07T08:39:11.378Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210407 08:45:40.741" starttime="20210407 08:45:40.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:40.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:40.742" starttime="20210407 08:45:40.741"/>
</kw>
<status status="PASS" endtime="20210407 08:45:40.742" starttime="20210407 08:45:33.330"/>
</kw>
<msg timestamp="20210407 08:45:40.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:40.742" starttime="20210407 08:45:33.329"/>
</kw>
<msg timestamp="20210407 08:45:40.743" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210407 08:45:40.743" starttime="20210407 08:45:33.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:45:40.743" starttime="20210407 08:45:40.743"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:45:40.744" starttime="20210407 08:45:40.744"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:40.748" level="INFO">Running command 'ozone sh key list 53725-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:47.448" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:45:47.449" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53725-source unreadable-bucket </msg>
<status status="PASS" endtime="20210407 08:45:47.449" starttime="20210407 08:45:40.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:47.450" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53725-source unreadable-bucket </msg>
<status status="PASS" endtime="20210407 08:45:47.450" starttime="20210407 08:45:47.449"/>
</kw>
<msg timestamp="20210407 08:45:47.452" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53725-source unreadable-bucket </msg>
<status status="PASS" endtime="20210407 08:45:47.452" starttime="20210407 08:45:40.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:45:47.453" starttime="20210407 08:45:47.452"/>
</kw>
<status status="PASS" endtime="20210407 08:45:47.453" starttime="20210407 08:45:33.272"/>
</kw>
<status status="PASS" endtime="20210407 08:45:47.454" starttime="20210407 08:45:33.271"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:45:47.454" starttime="20210407 08:45:33.227"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:47.464" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:47.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:47.468" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:45:47.468" starttime="20210407 08:45:47.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:47.470" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:45:47.470" starttime="20210407 08:45:47.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:47.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:47.471" starttime="20210407 08:45:47.470"/>
</kw>
<status status="PASS" endtime="20210407 08:45:47.472" starttime="20210407 08:45:47.461"/>
</kw>
<msg timestamp="20210407 08:45:47.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:47.472" starttime="20210407 08:45:47.461"/>
</kw>
<msg timestamp="20210407 08:45:47.473" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:45:47.473" starttime="20210407 08:45:47.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:45:47.475" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:45:47.475" starttime="20210407 08:45:47.473"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:47.480" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:47.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:47.495" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:47.496" starttime="20210407 08:45:47.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:47.498" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:47.498" starttime="20210407 08:45:47.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:47.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:47.500" starttime="20210407 08:45:47.499"/>
</kw>
<status status="PASS" endtime="20210407 08:45:47.501" starttime="20210407 08:45:47.477"/>
</kw>
<msg timestamp="20210407 08:45:47.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:47.501" starttime="20210407 08:45:47.476"/>
</kw>
<status status="PASS" endtime="20210407 08:45:47.502" starttime="20210407 08:45:47.475"/>
</kw>
<status status="PASS" endtime="20210407 08:45:47.502" starttime="20210407 08:45:47.475"/>
</kw>
<status status="PASS" endtime="20210407 08:45:47.503" starttime="20210407 08:45:47.459"/>
</kw>
<status status="PASS" endtime="20210407 08:45:47.503" starttime="20210407 08:45:47.459"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:47.510" level="INFO">Running command 'ozone sh bucket link 53725-target/loop1 53725-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:45:55.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:45:55.604" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:45:55.604" starttime="20210407 08:45:47.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:45:55.606" level="INFO"/>
<status status="PASS" endtime="20210407 08:45:55.606" starttime="20210407 08:45:55.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:45:55.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:45:55.607" starttime="20210407 08:45:55.606"/>
</kw>
<status status="PASS" endtime="20210407 08:45:55.607" starttime="20210407 08:45:47.506"/>
</kw>
<msg timestamp="20210407 08:45:55.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:45:55.608" starttime="20210407 08:45:47.505"/>
</kw>
<status status="PASS" endtime="20210407 08:45:55.609" starttime="20210407 08:45:47.503"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:45:55.615" level="INFO">Running command 'ozone sh bucket link 53725-target/loop2 53725-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:46:02.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:46:02.820" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:46:02.820" starttime="20210407 08:45:55.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:46:02.821" level="INFO"/>
<status status="PASS" endtime="20210407 08:46:02.821" starttime="20210407 08:46:02.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:46:02.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:46:02.822" starttime="20210407 08:46:02.822"/>
</kw>
<status status="PASS" endtime="20210407 08:46:02.823" starttime="20210407 08:45:55.611"/>
</kw>
<msg timestamp="20210407 08:46:02.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:46:02.823" starttime="20210407 08:45:55.610"/>
</kw>
<status status="PASS" endtime="20210407 08:46:02.823" starttime="20210407 08:45:55.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:46:02.831" level="INFO">Running command 'ozone sh bucket link 53725-target/loop3 53725-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:46:10.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:46:10.473" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:46:10.473" starttime="20210407 08:46:02.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:46:10.475" level="INFO"/>
<status status="PASS" endtime="20210407 08:46:10.475" starttime="20210407 08:46:10.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:46:10.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:46:10.476" starttime="20210407 08:46:10.475"/>
</kw>
<status status="PASS" endtime="20210407 08:46:10.476" starttime="20210407 08:46:02.826"/>
</kw>
<msg timestamp="20210407 08:46:10.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:46:10.476" starttime="20210407 08:46:02.825"/>
</kw>
<status status="PASS" endtime="20210407 08:46:10.477" starttime="20210407 08:46:02.823"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:46:10.480" level="INFO">Running command 'ozone sh key list 53725-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:46:17.514" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:46:17.514" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210407 08:46:17.515" starttime="20210407 08:46:10.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:46:17.517" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210407 08:46:17.517" starttime="20210407 08:46:17.515"/>
</kw>
<msg timestamp="20210407 08:46:17.517" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210407 08:46:17.517" starttime="20210407 08:46:10.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:46:17.519" starttime="20210407 08:46:17.518"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:46:17.519" starttime="20210407 08:45:47.458"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:46:17.529" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:46:17.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:46:17.532" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:46:17.532" starttime="20210407 08:46:17.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:46:17.534" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:46:17.534" starttime="20210407 08:46:17.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:46:17.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:46:17.535" starttime="20210407 08:46:17.534"/>
</kw>
<status status="PASS" endtime="20210407 08:46:17.535" starttime="20210407 08:46:17.525"/>
</kw>
<msg timestamp="20210407 08:46:17.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:46:17.536" starttime="20210407 08:46:17.524"/>
</kw>
<msg timestamp="20210407 08:46:17.536" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:46:17.536" starttime="20210407 08:46:17.524"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:46:17.538" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:46:17.538" starttime="20210407 08:46:17.537"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:46:17.544" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:46:17.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:46:17.555" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:46:17.556" starttime="20210407 08:46:17.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:46:17.557" level="INFO"/>
<status status="PASS" endtime="20210407 08:46:17.558" starttime="20210407 08:46:17.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:46:17.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:46:17.559" starttime="20210407 08:46:17.558"/>
</kw>
<status status="PASS" endtime="20210407 08:46:17.559" starttime="20210407 08:46:17.540"/>
</kw>
<msg timestamp="20210407 08:46:17.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:46:17.560" starttime="20210407 08:46:17.540"/>
</kw>
<status status="PASS" endtime="20210407 08:46:17.560" starttime="20210407 08:46:17.539"/>
</kw>
<status status="PASS" endtime="20210407 08:46:17.560" starttime="20210407 08:46:17.538"/>
</kw>
<status status="PASS" endtime="20210407 08:46:17.560" starttime="20210407 08:46:17.523"/>
</kw>
<status status="PASS" endtime="20210407 08:46:17.561" starttime="20210407 08:46:17.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:46:17.566" level="INFO">Running command 'ozone sh bucket link 53725-source/bucket1 53725-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:46:24.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:46:24.906" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:46:24.907" starttime="20210407 08:46:17.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:46:24.908" level="INFO"/>
<status status="PASS" endtime="20210407 08:46:24.908" starttime="20210407 08:46:24.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:46:24.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:46:24.909" starttime="20210407 08:46:24.908"/>
</kw>
<status status="PASS" endtime="20210407 08:46:24.910" starttime="20210407 08:46:17.562"/>
</kw>
<msg timestamp="20210407 08:46:24.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:46:24.910" starttime="20210407 08:46:17.562"/>
</kw>
<status status="PASS" endtime="20210407 08:46:24.910" starttime="20210407 08:46:17.561"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:46:24.915" level="INFO">Running command 'ozone sh key put 53725-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:48:17.522" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210407 08:48:17.522" starttime="20210407 08:46:24.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210407 08:48:17.523" starttime="20210407 08:48:17.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210407 08:48:17.523" starttime="20210407 08:48:17.523"/>
</kw>
<status status="FAIL" endtime="20210407 08:48:17.524" starttime="20210407 08:46:24.912"/>
</kw>
<msg timestamp="20210407 08:48:17.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210407 08:48:17.524" starttime="20210407 08:46:24.911"/>
</kw>
<status status="FAIL" endtime="20210407 08:48:17.524" starttime="20210407 08:46:24.911"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" endtime="20210407 08:48:17.525" starttime="20210407 08:48:17.525"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210407 08:48:17.525" starttime="20210407 08:46:17.521">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:48:17.533" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:48:17.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:48:17.537" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:48:17.537" starttime="20210407 08:48:17.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:48:17.538" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:48:17.538" starttime="20210407 08:48:17.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:48:17.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:48:17.539" starttime="20210407 08:48:17.539"/>
</kw>
<status status="PASS" endtime="20210407 08:48:17.540" starttime="20210407 08:48:17.530"/>
</kw>
<msg timestamp="20210407 08:48:17.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:48:17.540" starttime="20210407 08:48:17.530"/>
</kw>
<msg timestamp="20210407 08:48:17.541" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:48:17.541" starttime="20210407 08:48:17.529"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:48:17.542" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:48:17.542" starttime="20210407 08:48:17.541"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:48:17.549" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:48:17.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:48:17.558" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:48:17.558" starttime="20210407 08:48:17.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:48:17.560" level="INFO"/>
<status status="PASS" endtime="20210407 08:48:17.560" starttime="20210407 08:48:17.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:48:17.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:48:17.562" starttime="20210407 08:48:17.561"/>
</kw>
<status status="PASS" endtime="20210407 08:48:17.562" starttime="20210407 08:48:17.545"/>
</kw>
<msg timestamp="20210407 08:48:17.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:48:17.563" starttime="20210407 08:48:17.544"/>
</kw>
<status status="PASS" endtime="20210407 08:48:17.563" starttime="20210407 08:48:17.543"/>
</kw>
<status status="PASS" endtime="20210407 08:48:17.563" starttime="20210407 08:48:17.542"/>
</kw>
<status status="PASS" endtime="20210407 08:48:17.564" starttime="20210407 08:48:17.528"/>
</kw>
<status status="PASS" endtime="20210407 08:48:17.564" starttime="20210407 08:48:17.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:48:17.569" level="INFO">Running command 'ozone sh bucket delete 53725-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:48:24.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:48:24.768" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:48:24.768" starttime="20210407 08:48:17.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:48:24.771" level="INFO"/>
<status status="PASS" endtime="20210407 08:48:24.772" starttime="20210407 08:48:24.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:48:24.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:48:24.773" starttime="20210407 08:48:24.772"/>
</kw>
<status status="PASS" endtime="20210407 08:48:24.773" starttime="20210407 08:48:17.566"/>
</kw>
<msg timestamp="20210407 08:48:24.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:48:24.774" starttime="20210407 08:48:17.565"/>
</kw>
<status status="PASS" endtime="20210407 08:48:24.774" starttime="20210407 08:48:17.564"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:48:24.781" level="INFO">Running command 'ozone sh bucket list 53725-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:48:33.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:48:33.339" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T...</msg>
<status status="PASS" endtime="20210407 08:48:33.339" starttime="20210407 08:48:24.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:48:33.342" level="INFO">{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:45:10.538Z",
  "modificationTime" : "2021-04-07T08:45:10.538Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:39:19.050Z",
  "modificationTime" : "2021-04-07T08:39:19.050Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:38:34.853Z",
  "modificationTime" : "2021-04-07T08:39:11.378Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:44:55.350Z",
  "modificationTime" : "2021-04-07T08:44:55.350Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:46:24.812Z",
  "modificationTime" : "2021-04-07T08:46:24.812Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:46:10.364Z",
  "modificationTime" : "2021-04-07T08:46:10.364Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:45:55.521Z",
  "modificationTime" : "2021-04-07T08:45:55.521Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:46:02.467Z",
  "modificationTime" : "2021-04-07T08:46:02.467Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:38:22.436Z",
  "modificationTime" : "2021-04-07T08:39:04.268Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T08:38:28.070Z",
  "modificationTime" : "2021-04-07T08:38:28.070Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53725-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210407 08:48:33.342" starttime="20210407 08:48:33.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:48:33.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:48:33.344" starttime="20210407 08:48:33.343"/>
</kw>
<status status="PASS" endtime="20210407 08:48:33.345" starttime="20210407 08:48:24.776"/>
</kw>
<msg timestamp="20210407 08:48:33.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:48:33.346" starttime="20210407 08:48:24.776"/>
</kw>
<msg timestamp="20210407 08:48:33.347" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "53725-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-07T...</msg>
<status status="PASS" endtime="20210407 08:48:33.347" starttime="20210407 08:48:24.774"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:48:33.349" starttime="20210407 08:48:33.347"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:48:33.355" level="INFO">Running command 'ozone sh key list 53725-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:48:41.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:48:41.392" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210407 08:48:41.392" starttime="20210407 08:48:33.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:48:41.394" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210407 08:48:41.395" starttime="20210407 08:48:41.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:48:41.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:48:41.396" starttime="20210407 08:48:41.395"/>
</kw>
<status status="PASS" endtime="20210407 08:48:41.397" starttime="20210407 08:48:33.352"/>
</kw>
<msg timestamp="20210407 08:48:41.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:48:41.397" starttime="20210407 08:48:33.351"/>
</kw>
<msg timestamp="20210407 08:48:41.398" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210407 08:48:41.398" starttime="20210407 08:48:33.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:48:41.399" starttime="20210407 08:48:41.398"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:48:41.400" starttime="20210407 08:48:17.526"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20210407 08:48:41.403" starttime="20210407 08:34:34.980"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210407 08:48:41.441" level="INFO">${random} = 92418</msg>
<status status="PASS" endtime="20210407 08:48:41.442" starttime="20210407 08:48:41.441"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:48:41.443" level="INFO">${prefix} = 92418</msg>
<status status="PASS" endtime="20210407 08:48:41.443" starttime="20210407 08:48:41.442"/>
</kw>
<status status="PASS" endtime="20210407 08:48:41.443" starttime="20210407 08:48:41.440"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:48:41.450" level="INFO">Running command 'ozone sh volume info /92418-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:48:48.813" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:48:48.813" level="INFO">${output} = VOLUME_NOT_FOUND Volume 92418-rpcbasic is not found</msg>
<status status="PASS" endtime="20210407 08:48:48.813" starttime="20210407 08:48:41.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:48:48.815" level="INFO">VOLUME_NOT_FOUND Volume 92418-rpcbasic is not found</msg>
<status status="PASS" endtime="20210407 08:48:48.815" starttime="20210407 08:48:48.814"/>
</kw>
<msg timestamp="20210407 08:48:48.815" level="INFO">${result} = VOLUME_NOT_FOUND Volume 92418-rpcbasic is not found</msg>
<status status="PASS" endtime="20210407 08:48:48.816" starttime="20210407 08:48:41.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:48:48.816" starttime="20210407 08:48:48.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:48:48.821" level="INFO">Running command 'ozone sh volume create /92418-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:48:56.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:48:56.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:48:56.605" starttime="20210407 08:48:48.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:48:56.606" level="INFO"/>
<status status="PASS" endtime="20210407 08:48:56.606" starttime="20210407 08:48:56.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:48:56.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:48:56.607" starttime="20210407 08:48:56.606"/>
</kw>
<status status="PASS" endtime="20210407 08:48:56.608" starttime="20210407 08:48:48.818"/>
</kw>
<msg timestamp="20210407 08:48:56.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:48:56.608" starttime="20210407 08:48:48.817"/>
</kw>
<msg timestamp="20210407 08:48:56.608" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210407 08:48:56.608" starttime="20210407 08:48:48.817"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:48:56.609" starttime="20210407 08:48:56.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:48:56.615" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="92418-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:49:04.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:49:04.302" level="INFO">${output} = {
  "metadata": {},
  "name": "92418-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210407 08:49:04.302" starttime="20210407 08:48:56.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:49:04.303" level="INFO">{
  "metadata": {},
  "name": "92418-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-07T08:48:56.309Z",
  "modificationTime": "2021-04-07T08:48:56.309Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210407 08:49:04.304" starttime="20210407 08:49:04.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:49:04.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:49:04.305" starttime="20210407 08:49:04.304"/>
</kw>
<status status="PASS" endtime="20210407 08:49:04.305" starttime="20210407 08:48:56.611"/>
</kw>
<msg timestamp="20210407 08:49:04.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:49:04.305" starttime="20210407 08:48:56.610"/>
</kw>
<msg timestamp="20210407 08:49:04.306" level="INFO">${result} = {
  "metadata": {},
  "name": "92418-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210407 08:49:04.306" starttime="20210407 08:48:56.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:49:04.306" starttime="20210407 08:49:04.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:49:04.311" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="92418-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:49:11.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:49:11.274" level="INFO">${output} = {
  "metadata": {},
  "name": "92418-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210407 08:49:11.274" starttime="20210407 08:49:04.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:49:11.277" level="INFO">{
  "metadata": {},
  "name": "92418-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-07T08:48:56.309Z",
  "modificationTime": "2021-04-07T08:48:56.309Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210407 08:49:11.277" starttime="20210407 08:49:11.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:49:11.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:49:11.278" starttime="20210407 08:49:11.277"/>
</kw>
<status status="PASS" endtime="20210407 08:49:11.279" starttime="20210407 08:49:04.308"/>
</kw>
<msg timestamp="20210407 08:49:11.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:49:11.279" starttime="20210407 08:49:04.308"/>
</kw>
<msg timestamp="20210407 08:49:11.280" level="INFO">${result} = {
  "metadata": {},
  "name": "92418-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210407 08:49:11.280" starttime="20210407 08:49:04.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:49:11.281" starttime="20210407 08:49:11.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:49:11.287" level="INFO">Running command 'ozone sh volume setquota /92418-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:49:16.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:49:16.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:49:16.830" starttime="20210407 08:49:11.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:49:16.831" level="INFO"/>
<status status="PASS" endtime="20210407 08:49:16.832" starttime="20210407 08:49:16.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:49:16.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:49:16.832" starttime="20210407 08:49:16.832"/>
</kw>
<status status="PASS" endtime="20210407 08:49:16.833" starttime="20210407 08:49:11.283"/>
</kw>
<msg timestamp="20210407 08:49:16.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:49:16.833" starttime="20210407 08:49:11.282"/>
</kw>
<status status="PASS" endtime="20210407 08:49:16.836" starttime="20210407 08:49:11.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:49:16.850" level="INFO">Running command 'ozone sh volume info /92418-rpcbasic | jq -r '. | select(.name=="92418-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:49:24.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:49:24.604" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210407 08:49:24.604" starttime="20210407 08:49:16.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:49:24.605" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210407 08:49:24.605" starttime="20210407 08:49:24.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:49:24.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:49:24.606" starttime="20210407 08:49:24.605"/>
</kw>
<status status="PASS" endtime="20210407 08:49:24.607" starttime="20210407 08:49:16.838"/>
</kw>
<msg timestamp="20210407 08:49:24.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:49:24.607" starttime="20210407 08:49:16.837"/>
</kw>
<msg timestamp="20210407 08:49:24.607" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210407 08:49:24.607" starttime="20210407 08:49:16.836"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:49:24.608" starttime="20210407 08:49:24.608"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:49:24.613" level="INFO">Running command 'ozone sh bucket create /92418-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:49:31.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:49:31.943" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:49:31.943" starttime="20210407 08:49:24.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:49:31.945" level="INFO"/>
<status status="PASS" endtime="20210407 08:49:31.946" starttime="20210407 08:49:31.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:49:31.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:49:31.947" starttime="20210407 08:49:31.946"/>
</kw>
<status status="PASS" endtime="20210407 08:49:31.948" starttime="20210407 08:49:24.610"/>
</kw>
<msg timestamp="20210407 08:49:31.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:49:31.948" starttime="20210407 08:49:24.610"/>
</kw>
<status status="PASS" endtime="20210407 08:49:31.948" starttime="20210407 08:49:24.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:49:31.955" level="INFO">Running command 'ozone sh bucket info /92418-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:49:40.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:49:40.503" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210407 08:49:40.503" starttime="20210407 08:49:31.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:49:40.504" level="INFO">DISK</msg>
<status status="PASS" endtime="20210407 08:49:40.505" starttime="20210407 08:49:40.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:49:40.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:49:40.506" starttime="20210407 08:49:40.505"/>
</kw>
<status status="PASS" endtime="20210407 08:49:40.506" starttime="20210407 08:49:31.951"/>
</kw>
<msg timestamp="20210407 08:49:40.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:49:40.506" starttime="20210407 08:49:31.950"/>
</kw>
<msg timestamp="20210407 08:49:40.507" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210407 08:49:40.507" starttime="20210407 08:49:31.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:49:40.508" starttime="20210407 08:49:40.507"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:49:40.515" level="INFO">Running command 'ozone sh bucket info /92418-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:49:47.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:49:47.676" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210407 08:49:47.676" starttime="20210407 08:49:40.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:49:47.678" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210407 08:49:47.678" starttime="20210407 08:49:47.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:49:47.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:49:47.679" starttime="20210407 08:49:47.678"/>
</kw>
<status status="PASS" endtime="20210407 08:49:47.679" starttime="20210407 08:49:40.511"/>
</kw>
<msg timestamp="20210407 08:49:47.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:49:47.680" starttime="20210407 08:49:40.510"/>
</kw>
<msg timestamp="20210407 08:49:47.680" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210407 08:49:47.680" starttime="20210407 08:49:40.508"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:49:47.681" starttime="20210407 08:49:47.680"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:49:47.685" level="INFO">Running command 'ozone sh bucket info /92418-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:49:55.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:49:55.065" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210407 08:49:55.065" starttime="20210407 08:49:47.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:49:55.067" level="INFO">100</msg>
<status status="PASS" endtime="20210407 08:49:55.068" starttime="20210407 08:49:55.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:49:55.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:49:55.069" starttime="20210407 08:49:55.068"/>
</kw>
<status status="PASS" endtime="20210407 08:49:55.070" starttime="20210407 08:49:47.682"/>
</kw>
<msg timestamp="20210407 08:49:55.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:49:55.070" starttime="20210407 08:49:47.682"/>
</kw>
<msg timestamp="20210407 08:49:55.071" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210407 08:49:55.071" starttime="20210407 08:49:47.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:49:55.072" starttime="20210407 08:49:55.071"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:49:55.080" level="INFO">Running command 'ozone sh bucket setquota /92418-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:50:02.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:50:02.266" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:50:02.266" starttime="20210407 08:49:55.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:50:02.270" level="INFO"/>
<status status="PASS" endtime="20210407 08:50:02.270" starttime="20210407 08:50:02.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:50:02.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:50:02.272" starttime="20210407 08:50:02.270"/>
</kw>
<status status="PASS" endtime="20210407 08:50:02.273" starttime="20210407 08:49:55.075"/>
</kw>
<msg timestamp="20210407 08:50:02.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:50:02.273" starttime="20210407 08:49:55.074"/>
</kw>
<status status="PASS" endtime="20210407 08:50:02.274" starttime="20210407 08:49:55.073"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:50:02.283" level="INFO">Running command 'ozone sh bucket info /92418-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:50:07.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:50:07.765" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210407 08:50:07.765" starttime="20210407 08:50:02.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:50:07.767" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210407 08:50:07.767" starttime="20210407 08:50:07.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:50:07.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:50:07.768" starttime="20210407 08:50:07.768"/>
</kw>
<status status="PASS" endtime="20210407 08:50:07.769" starttime="20210407 08:50:02.278"/>
</kw>
<msg timestamp="20210407 08:50:07.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:50:07.769" starttime="20210407 08:50:02.277"/>
</kw>
<msg timestamp="20210407 08:50:07.769" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210407 08:50:07.769" starttime="20210407 08:50:02.274"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:50:07.770" starttime="20210407 08:50:07.770"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:50:07.775" level="INFO">Running command 'ozone sh bucket info /92418-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:50:13.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:50:13.170" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210407 08:50:13.170" starttime="20210407 08:50:07.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:50:13.171" level="INFO">1000</msg>
<status status="PASS" endtime="20210407 08:50:13.171" starttime="20210407 08:50:13.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:50:13.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:50:13.173" starttime="20210407 08:50:13.172"/>
</kw>
<status status="PASS" endtime="20210407 08:50:13.173" starttime="20210407 08:50:07.772"/>
</kw>
<msg timestamp="20210407 08:50:13.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:50:13.173" starttime="20210407 08:50:07.772"/>
</kw>
<msg timestamp="20210407 08:50:13.174" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210407 08:50:13.174" starttime="20210407 08:50:07.770"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:50:13.174" starttime="20210407 08:50:13.174"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:50:13.180" level="INFO">Running command 'ozone sh bucket list /92418-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:50:21.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:50:21.189" level="INFO">${output} = 92418-rpcbasic</msg>
<status status="PASS" endtime="20210407 08:50:21.189" starttime="20210407 08:50:13.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:50:21.192" level="INFO">92418-rpcbasic</msg>
<status status="PASS" endtime="20210407 08:50:21.192" starttime="20210407 08:50:21.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:50:21.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:50:21.194" starttime="20210407 08:50:21.192"/>
</kw>
<status status="PASS" endtime="20210407 08:50:21.195" starttime="20210407 08:50:13.176"/>
</kw>
<msg timestamp="20210407 08:50:21.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:50:21.195" starttime="20210407 08:50:13.176"/>
</kw>
<msg timestamp="20210407 08:50:21.196" level="INFO">${result} = 92418-rpcbasic</msg>
<status status="PASS" endtime="20210407 08:50:21.196" starttime="20210407 08:50:13.175"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:50:21.197" starttime="20210407 08:50:21.196"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:50:21.207" level="INFO">Running command 'ozone sh key put /92418-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:53:32.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:53:32.501" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:53:32.501" starttime="20210407 08:50:21.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:53:32.503" level="INFO"/>
<status status="PASS" endtime="20210407 08:53:32.503" starttime="20210407 08:53:32.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:53:32.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:53:32.504" starttime="20210407 08:53:32.503"/>
</kw>
<status status="PASS" endtime="20210407 08:53:32.504" starttime="20210407 08:50:21.200"/>
</kw>
<msg timestamp="20210407 08:53:32.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:53:32.504" starttime="20210407 08:50:21.200"/>
</kw>
<status status="PASS" endtime="20210407 08:53:32.505" starttime="20210407 08:50:21.199"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:53:32.510" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:53:32.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:53:32.512" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:53:32.512" starttime="20210407 08:53:32.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:53:32.513" level="INFO"/>
<status status="PASS" endtime="20210407 08:53:32.513" starttime="20210407 08:53:32.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:53:32.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:53:32.514" starttime="20210407 08:53:32.513"/>
</kw>
<status status="PASS" endtime="20210407 08:53:32.515" starttime="20210407 08:53:32.506"/>
</kw>
<msg timestamp="20210407 08:53:32.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:53:32.515" starttime="20210407 08:53:32.505"/>
</kw>
<status status="PASS" endtime="20210407 08:53:32.515" starttime="20210407 08:53:32.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:53:32.521" level="INFO">Running command 'ozone sh key get /92418-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:53:41.444" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210407 08:53:41.445" starttime="20210407 08:53:32.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.445" starttime="20210407 08:53:41.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.446" starttime="20210407 08:53:41.445"/>
</kw>
<status status="FAIL" endtime="20210407 08:53:41.446" starttime="20210407 08:53:32.518"/>
</kw>
<msg timestamp="20210407 08:53:41.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210407 08:53:41.446" starttime="20210407 08:53:32.516"/>
</kw>
<status status="FAIL" endtime="20210407 08:53:41.447" starttime="20210407 08:53:32.515"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.447" starttime="20210407 08:53:41.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.447" starttime="20210407 08:53:41.447"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.448" starttime="20210407 08:53:41.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.448" starttime="20210407 08:53:41.448"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.448" starttime="20210407 08:53:41.448"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.448" starttime="20210407 08:53:41.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.449" starttime="20210407 08:53:41.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.449" starttime="20210407 08:53:41.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.449" starttime="20210407 08:53:41.449"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.449" starttime="20210407 08:53:41.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.449" starttime="20210407 08:53:41.449"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.450" starttime="20210407 08:53:41.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.450" starttime="20210407 08:53:41.450"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.450" starttime="20210407 08:53:41.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.451" starttime="20210407 08:53:41.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.451" starttime="20210407 08:53:41.451"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.451" starttime="20210407 08:53:41.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.454" starttime="20210407 08:53:41.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.454" starttime="20210407 08:53:41.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.454" starttime="20210407 08:53:41.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.455" starttime="20210407 08:53:41.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.455" starttime="20210407 08:53:41.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.455" starttime="20210407 08:53:41.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.459" starttime="20210407 08:53:41.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.460" starttime="20210407 08:53:41.460"/>
</kw>
<status status="FAIL" endtime="20210407 08:53:41.460" starttime="20210407 08:50:21.198"/>
</kw>
<status status="FAIL" endtime="20210407 08:53:41.460" starttime="20210407 08:50:21.197"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.461" starttime="20210407 08:53:41.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.461" starttime="20210407 08:53:41.461"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.461" starttime="20210407 08:53:41.461"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.461" starttime="20210407 08:53:41.461"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.461" starttime="20210407 08:53:41.461"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.462" starttime="20210407 08:53:41.462"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.462" starttime="20210407 08:53:41.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.462" starttime="20210407 08:53:41.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.462" starttime="20210407 08:53:41.462"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.463" starttime="20210407 08:53:41.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.463" starttime="20210407 08:53:41.463"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.463" starttime="20210407 08:53:41.463"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.467" starttime="20210407 08:53:41.467"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.468" starttime="20210407 08:53:41.468"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.468" starttime="20210407 08:53:41.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.468" starttime="20210407 08:53:41.468"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.468" starttime="20210407 08:53:41.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.469" starttime="20210407 08:53:41.468"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.469" starttime="20210407 08:53:41.469"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.469" starttime="20210407 08:53:41.469"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.469" starttime="20210407 08:53:41.469"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.469" starttime="20210407 08:53:41.469"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.470" starttime="20210407 08:53:41.470"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:53:41.470" starttime="20210407 08:53:41.470"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.470" starttime="20210407 08:53:41.470"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 08:53:41.471" starttime="20210407 08:53:41.471"/>
</kw>
<status status="FAIL" endtime="20210407 08:53:41.471" starttime="20210407 08:48:41.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210407 08:53:41.471" starttime="20210407 08:48:41.443">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210407 08:53:41.476" starttime="20210407 08:48:41.412"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210407 08:53:41.495" level="INFO">${random} = 30272</msg>
<status status="PASS" endtime="20210407 08:53:41.495" starttime="20210407 08:53:41.494"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:53:41.496" level="INFO">${prefix} = 30272</msg>
<status status="PASS" endtime="20210407 08:53:41.496" starttime="20210407 08:53:41.495"/>
</kw>
<status status="PASS" endtime="20210407 08:53:41.496" starttime="20210407 08:53:41.494"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:53:41.506" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:53:41.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:53:41.510" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:53:41.510" starttime="20210407 08:53:41.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:53:41.511" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:53:41.511" starttime="20210407 08:53:41.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:53:41.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:53:41.512" starttime="20210407 08:53:41.512"/>
</kw>
<status status="PASS" endtime="20210407 08:53:41.513" starttime="20210407 08:53:41.503"/>
</kw>
<msg timestamp="20210407 08:53:41.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:53:41.513" starttime="20210407 08:53:41.502"/>
</kw>
<msg timestamp="20210407 08:53:41.515" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:53:41.515" starttime="20210407 08:53:41.501"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:53:41.518" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:53:41.518" starttime="20210407 08:53:41.515"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:53:41.524" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:53:41.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:53:41.743" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:53:41.743" starttime="20210407 08:53:41.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:53:41.744" level="INFO"/>
<status status="PASS" endtime="20210407 08:53:41.745" starttime="20210407 08:53:41.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:53:41.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:53:41.745" starttime="20210407 08:53:41.745"/>
</kw>
<status status="PASS" endtime="20210407 08:53:41.746" starttime="20210407 08:53:41.521"/>
</kw>
<msg timestamp="20210407 08:53:41.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:53:41.746" starttime="20210407 08:53:41.520"/>
</kw>
<status status="PASS" endtime="20210407 08:53:41.747" starttime="20210407 08:53:41.519"/>
</kw>
<status status="PASS" endtime="20210407 08:53:41.747" starttime="20210407 08:53:41.518"/>
</kw>
<status status="PASS" endtime="20210407 08:53:41.747" starttime="20210407 08:53:41.501"/>
</kw>
<status status="PASS" endtime="20210407 08:53:41.747" starttime="20210407 08:53:41.497"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:53:41.751" level="INFO">Running command 'ozone sh volume info o3://om:9862/30272-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:53:47.982" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 08:53:47.982" level="INFO">${output} = VOLUME_NOT_FOUND Volume 30272-rpcwoport is not found</msg>
<status status="PASS" endtime="20210407 08:53:47.982" starttime="20210407 08:53:41.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:53:47.985" level="INFO">VOLUME_NOT_FOUND Volume 30272-rpcwoport is not found</msg>
<status status="PASS" endtime="20210407 08:53:47.985" starttime="20210407 08:53:47.983"/>
</kw>
<msg timestamp="20210407 08:53:47.986" level="INFO">${result} = VOLUME_NOT_FOUND Volume 30272-rpcwoport is not found</msg>
<status status="PASS" endtime="20210407 08:53:47.986" starttime="20210407 08:53:41.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:53:47.988" starttime="20210407 08:53:47.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:53:47.995" level="INFO">Running command 'ozone sh volume create o3://om:9862/30272-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:53:55.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:53:55.221" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:53:55.221" starttime="20210407 08:53:47.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:53:55.222" level="INFO"/>
<status status="PASS" endtime="20210407 08:53:55.222" starttime="20210407 08:53:55.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:53:55.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:53:55.223" starttime="20210407 08:53:55.223"/>
</kw>
<status status="PASS" endtime="20210407 08:53:55.224" starttime="20210407 08:53:47.990"/>
</kw>
<msg timestamp="20210407 08:53:55.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:53:55.224" starttime="20210407 08:53:47.990"/>
</kw>
<msg timestamp="20210407 08:53:55.224" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210407 08:53:55.224" starttime="20210407 08:53:47.988"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:53:55.225" starttime="20210407 08:53:55.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:53:55.231" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="30272-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:54:02.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:54:02.313" level="INFO">${output} = {
  "metadata": {},
  "name": "30272-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210407 08:54:02.313" starttime="20210407 08:53:55.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:54:02.315" level="INFO">{
  "metadata": {},
  "name": "30272-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-07T08:53:55.069Z",
  "modificationTime": "2021-04-07T08:53:55.069Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210407 08:54:02.315" starttime="20210407 08:54:02.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:54:02.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:54:02.317" starttime="20210407 08:54:02.315"/>
</kw>
<status status="PASS" endtime="20210407 08:54:02.317" starttime="20210407 08:53:55.227"/>
</kw>
<msg timestamp="20210407 08:54:02.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:54:02.317" starttime="20210407 08:53:55.226"/>
</kw>
<msg timestamp="20210407 08:54:02.318" level="INFO">${result} = {
  "metadata": {},
  "name": "30272-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210407 08:54:02.318" starttime="20210407 08:53:55.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:54:02.319" starttime="20210407 08:54:02.318"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:54:02.327" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="30272-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:54:10.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:54:10.252" level="INFO">${output} = {
  "metadata": {},
  "name": "30272-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210407 08:54:10.252" starttime="20210407 08:54:02.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:54:10.255" level="INFO">{
  "metadata": {},
  "name": "30272-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-07T08:53:55.069Z",
  "modificationTime": "2021-04-07T08:53:55.069Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210407 08:54:10.256" starttime="20210407 08:54:10.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:54:10.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:54:10.257" starttime="20210407 08:54:10.256"/>
</kw>
<status status="PASS" endtime="20210407 08:54:10.257" starttime="20210407 08:54:02.323"/>
</kw>
<msg timestamp="20210407 08:54:10.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:54:10.258" starttime="20210407 08:54:02.322"/>
</kw>
<msg timestamp="20210407 08:54:10.258" level="INFO">${result} = {
  "metadata": {},
  "name": "30272-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210407 08:54:10.258" starttime="20210407 08:54:02.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 08:54:10.259" starttime="20210407 08:54:10.258"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:54:10.265" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/30272-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:54:16.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:54:16.965" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:54:16.965" starttime="20210407 08:54:10.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:54:16.966" level="INFO"/>
<status status="PASS" endtime="20210407 08:54:16.966" starttime="20210407 08:54:16.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:54:16.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:54:16.967" starttime="20210407 08:54:16.966"/>
</kw>
<status status="PASS" endtime="20210407 08:54:16.967" starttime="20210407 08:54:10.260"/>
</kw>
<msg timestamp="20210407 08:54:16.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:54:16.972" starttime="20210407 08:54:10.260"/>
</kw>
<status status="PASS" endtime="20210407 08:54:16.972" starttime="20210407 08:54:10.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:54:16.984" level="INFO">Running command 'ozone sh volume info o3://om:9862/30272-rpcwoport | jq -r '. | select(.name=="30272-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:54:22.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:54:22.550" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210407 08:54:22.550" starttime="20210407 08:54:16.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:54:22.551" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210407 08:54:22.552" starttime="20210407 08:54:22.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:54:22.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:54:22.552" starttime="20210407 08:54:22.552"/>
</kw>
<status status="PASS" endtime="20210407 08:54:22.553" starttime="20210407 08:54:16.977"/>
</kw>
<msg timestamp="20210407 08:54:22.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:54:22.553" starttime="20210407 08:54:16.977"/>
</kw>
<msg timestamp="20210407 08:54:22.553" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210407 08:54:22.553" starttime="20210407 08:54:16.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:54:22.554" starttime="20210407 08:54:22.554"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:54:22.559" level="INFO">Running command 'ozone sh bucket create o3://om:9862/30272-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:54:29.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:54:29.269" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:54:29.269" starttime="20210407 08:54:22.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:54:29.271" level="INFO"/>
<status status="PASS" endtime="20210407 08:54:29.271" starttime="20210407 08:54:29.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:54:29.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:54:29.272" starttime="20210407 08:54:29.271"/>
</kw>
<status status="PASS" endtime="20210407 08:54:29.272" starttime="20210407 08:54:22.555"/>
</kw>
<msg timestamp="20210407 08:54:29.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:54:29.272" starttime="20210407 08:54:22.555"/>
</kw>
<status status="PASS" endtime="20210407 08:54:29.272" starttime="20210407 08:54:22.554"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:54:29.279" level="INFO">Running command 'ozone sh bucket info o3://om:9862/30272-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:54:36.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:54:36.931" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210407 08:54:36.931" starttime="20210407 08:54:29.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:54:36.933" level="INFO">DISK</msg>
<status status="PASS" endtime="20210407 08:54:36.933" starttime="20210407 08:54:36.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:54:36.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:54:36.935" starttime="20210407 08:54:36.934"/>
</kw>
<status status="PASS" endtime="20210407 08:54:36.936" starttime="20210407 08:54:29.274"/>
</kw>
<msg timestamp="20210407 08:54:36.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:54:36.937" starttime="20210407 08:54:29.274"/>
</kw>
<msg timestamp="20210407 08:54:36.938" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210407 08:54:36.938" starttime="20210407 08:54:29.273"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:54:36.939" starttime="20210407 08:54:36.938"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:54:36.947" level="INFO">Running command 'ozone sh bucket info o3://om:9862/30272-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:54:42.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:54:42.885" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210407 08:54:42.885" starttime="20210407 08:54:36.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:54:42.886" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210407 08:54:42.886" starttime="20210407 08:54:42.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:54:42.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:54:42.888" starttime="20210407 08:54:42.887"/>
</kw>
<status status="PASS" endtime="20210407 08:54:42.888" starttime="20210407 08:54:36.942"/>
</kw>
<msg timestamp="20210407 08:54:42.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:54:42.888" starttime="20210407 08:54:36.942"/>
</kw>
<msg timestamp="20210407 08:54:42.888" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210407 08:54:42.889" starttime="20210407 08:54:36.940"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:54:42.889" starttime="20210407 08:54:42.889"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:54:42.894" level="INFO">Running command 'ozone sh bucket info o3://om:9862/30272-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:54:49.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:54:49.979" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210407 08:54:49.979" starttime="20210407 08:54:42.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:54:49.982" level="INFO">100</msg>
<status status="PASS" endtime="20210407 08:54:49.982" starttime="20210407 08:54:49.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:54:49.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:54:49.984" starttime="20210407 08:54:49.982"/>
</kw>
<status status="PASS" endtime="20210407 08:54:49.984" starttime="20210407 08:54:42.891"/>
</kw>
<msg timestamp="20210407 08:54:49.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:54:49.985" starttime="20210407 08:54:42.891"/>
</kw>
<msg timestamp="20210407 08:54:49.985" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210407 08:54:49.985" starttime="20210407 08:54:42.890"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:54:49.986" starttime="20210407 08:54:49.986"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:54:49.995" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/30272-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:54:57.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:54:57.482" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:54:57.482" starttime="20210407 08:54:49.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:54:57.483" level="INFO"/>
<status status="PASS" endtime="20210407 08:54:57.484" starttime="20210407 08:54:57.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:54:57.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:54:57.485" starttime="20210407 08:54:57.484"/>
</kw>
<status status="PASS" endtime="20210407 08:54:57.485" starttime="20210407 08:54:49.989"/>
</kw>
<msg timestamp="20210407 08:54:57.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:54:57.485" starttime="20210407 08:54:49.989"/>
</kw>
<status status="PASS" endtime="20210407 08:54:57.486" starttime="20210407 08:54:49.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:54:57.492" level="INFO">Running command 'ozone sh bucket info o3://om:9862/30272-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:55:04.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:55:04.964" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210407 08:55:04.964" starttime="20210407 08:54:57.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:55:04.966" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210407 08:55:04.966" starttime="20210407 08:55:04.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:55:04.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:55:04.967" starttime="20210407 08:55:04.966"/>
</kw>
<status status="PASS" endtime="20210407 08:55:04.968" starttime="20210407 08:54:57.487"/>
</kw>
<msg timestamp="20210407 08:55:04.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:55:04.969" starttime="20210407 08:54:57.487"/>
</kw>
<msg timestamp="20210407 08:55:04.969" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210407 08:55:04.969" starttime="20210407 08:54:57.486"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:55:04.971" starttime="20210407 08:55:04.970"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:55:04.979" level="INFO">Running command 'ozone sh bucket info o3://om:9862/30272-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:55:11.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:55:11.998" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210407 08:55:11.998" starttime="20210407 08:55:04.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:55:12.000" level="INFO">1000</msg>
<status status="PASS" endtime="20210407 08:55:12.000" starttime="20210407 08:55:11.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:55:12.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:55:12.001" starttime="20210407 08:55:12.000"/>
</kw>
<status status="PASS" endtime="20210407 08:55:12.001" starttime="20210407 08:55:04.974"/>
</kw>
<msg timestamp="20210407 08:55:12.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:55:12.002" starttime="20210407 08:55:04.974"/>
</kw>
<msg timestamp="20210407 08:55:12.002" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210407 08:55:12.002" starttime="20210407 08:55:04.971"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:55:12.003" starttime="20210407 08:55:12.002"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:55:12.011" level="INFO">Running command 'ozone sh bucket list o3://om:9862/30272-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:55:19.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:55:19.778" level="INFO">${output} = 30272-rpcwoport</msg>
<status status="PASS" endtime="20210407 08:55:19.778" starttime="20210407 08:55:12.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:55:19.779" level="INFO">30272-rpcwoport</msg>
<status status="PASS" endtime="20210407 08:55:19.779" starttime="20210407 08:55:19.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:55:19.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:55:19.780" starttime="20210407 08:55:19.779"/>
</kw>
<status status="PASS" endtime="20210407 08:55:19.780" starttime="20210407 08:55:12.006"/>
</kw>
<msg timestamp="20210407 08:55:19.780" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:55:19.781" starttime="20210407 08:55:12.006"/>
</kw>
<msg timestamp="20210407 08:55:19.781" level="INFO">${result} = 30272-rpcwoport</msg>
<status status="PASS" endtime="20210407 08:55:19.781" starttime="20210407 08:55:12.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 08:55:19.782" starttime="20210407 08:55:19.781"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:55:19.792" level="INFO">Running command 'ozone sh key put o3://om:9862/30272-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:58:31.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:58:31.527" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:58:31.527" starttime="20210407 08:55:19.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:58:31.530" level="INFO"/>
<status status="PASS" endtime="20210407 08:58:31.530" starttime="20210407 08:58:31.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:58:31.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:58:31.532" starttime="20210407 08:58:31.530"/>
</kw>
<status status="PASS" endtime="20210407 08:58:31.532" starttime="20210407 08:55:19.785"/>
</kw>
<msg timestamp="20210407 08:58:31.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:58:31.533" starttime="20210407 08:55:19.785"/>
</kw>
<status status="PASS" endtime="20210407 08:58:31.533" starttime="20210407 08:55:19.783"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:58:31.539" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:58:31.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:58:31.542" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:58:31.542" starttime="20210407 08:58:31.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:58:31.543" level="INFO"/>
<status status="PASS" endtime="20210407 08:58:31.543" starttime="20210407 08:58:31.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:58:31.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:58:31.544" starttime="20210407 08:58:31.543"/>
</kw>
<status status="PASS" endtime="20210407 08:58:31.545" starttime="20210407 08:58:31.536"/>
</kw>
<msg timestamp="20210407 08:58:31.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:58:31.545" starttime="20210407 08:58:31.535"/>
</kw>
<status status="PASS" endtime="20210407 08:58:31.546" starttime="20210407 08:58:31.534"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:58:31.553" level="INFO">Running command 'ozone sh key get o3://om:9862/30272-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:58:41.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:58:41.449" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:58:41.449" starttime="20210407 08:58:31.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:58:41.450" level="INFO"/>
<status status="PASS" endtime="20210407 08:58:41.450" starttime="20210407 08:58:41.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:58:41.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:58:41.451" starttime="20210407 08:58:41.450"/>
</kw>
<status status="PASS" endtime="20210407 08:58:41.452" starttime="20210407 08:58:31.549"/>
</kw>
<msg timestamp="20210407 08:58:41.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:58:41.452" starttime="20210407 08:58:31.548"/>
</kw>
<status status="PASS" endtime="20210407 08:58:41.452" starttime="20210407 08:58:31.546"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:58:41.458" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:58:41.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:58:41.461" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:58:41.461" starttime="20210407 08:58:41.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:58:41.462" level="INFO"/>
<status status="PASS" endtime="20210407 08:58:41.462" starttime="20210407 08:58:41.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:58:41.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:58:41.464" starttime="20210407 08:58:41.463"/>
</kw>
<status status="PASS" endtime="20210407 08:58:41.464" starttime="20210407 08:58:41.453"/>
</kw>
<msg timestamp="20210407 08:58:41.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:58:41.464" starttime="20210407 08:58:41.453"/>
</kw>
<status status="PASS" endtime="20210407 08:58:41.465" starttime="20210407 08:58:41.452"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:58:41.469" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/30272-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:58:41.497" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210407 08:58:41.497" starttime="20210407 08:58:41.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.498" starttime="20210407 08:58:41.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.512" starttime="20210407 08:58:41.498"/>
</kw>
<status status="FAIL" endtime="20210407 08:58:41.513" starttime="20210407 08:58:41.466"/>
</kw>
<msg timestamp="20210407 08:58:41.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210407 08:58:41.513" starttime="20210407 08:58:41.466"/>
</kw>
<status status="FAIL" endtime="20210407 08:58:41.513" starttime="20210407 08:58:41.465"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.513" starttime="20210407 08:58:41.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.514" starttime="20210407 08:58:41.513"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.514" starttime="20210407 08:58:41.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.514" starttime="20210407 08:58:41.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.514" starttime="20210407 08:58:41.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.514" starttime="20210407 08:58:41.514"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.515" starttime="20210407 08:58:41.515"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.515" starttime="20210407 08:58:41.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.515" starttime="20210407 08:58:41.515"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.515" starttime="20210407 08:58:41.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.516" starttime="20210407 08:58:41.515"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.516" starttime="20210407 08:58:41.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.516" starttime="20210407 08:58:41.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.516" starttime="20210407 08:58:41.516"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.516" starttime="20210407 08:58:41.516"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.517" starttime="20210407 08:58:41.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.517" starttime="20210407 08:58:41.517"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.517" starttime="20210407 08:58:41.517"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.517" starttime="20210407 08:58:41.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.518" starttime="20210407 08:58:41.518"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.518" starttime="20210407 08:58:41.518"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.518" starttime="20210407 08:58:41.518"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.518" starttime="20210407 08:58:41.518"/>
</kw>
<status status="FAIL" endtime="20210407 08:58:41.518" starttime="20210407 08:55:19.783"/>
</kw>
<status status="FAIL" endtime="20210407 08:58:41.519" starttime="20210407 08:55:19.782"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.519" starttime="20210407 08:58:41.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.519" starttime="20210407 08:58:41.519"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.522" starttime="20210407 08:58:41.519"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.522" starttime="20210407 08:58:41.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.522" starttime="20210407 08:58:41.522"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.523" starttime="20210407 08:58:41.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.523" starttime="20210407 08:58:41.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.523" starttime="20210407 08:58:41.523"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.523" starttime="20210407 08:58:41.523"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.523" starttime="20210407 08:58:41.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.524" starttime="20210407 08:58:41.524"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.524" starttime="20210407 08:58:41.524"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.524" starttime="20210407 08:58:41.524"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.524" starttime="20210407 08:58:41.524"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.525" starttime="20210407 08:58:41.524"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.525" starttime="20210407 08:58:41.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.525" starttime="20210407 08:58:41.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.525" starttime="20210407 08:58:41.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.525" starttime="20210407 08:58:41.525"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.526" starttime="20210407 08:58:41.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.526" starttime="20210407 08:58:41.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.526" starttime="20210407 08:58:41.526"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.526" starttime="20210407 08:58:41.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 08:58:41.527" starttime="20210407 08:58:41.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.527" starttime="20210407 08:58:41.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 08:58:41.527" starttime="20210407 08:58:41.527"/>
</kw>
<status status="FAIL" endtime="20210407 08:58:41.527" starttime="20210407 08:53:41.747"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210407 08:58:41.528" starttime="20210407 08:53:41.496">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:58:41.539" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:58:41.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:58:41.543" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:58:41.543" starttime="20210407 08:58:41.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:58:41.544" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:58:41.544" starttime="20210407 08:58:41.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:58:41.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:58:41.545" starttime="20210407 08:58:41.545"/>
</kw>
<status status="PASS" endtime="20210407 08:58:41.546" starttime="20210407 08:58:41.532"/>
</kw>
<msg timestamp="20210407 08:58:41.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:58:41.546" starttime="20210407 08:58:41.532"/>
</kw>
<msg timestamp="20210407 08:58:41.546" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:58:41.546" starttime="20210407 08:58:41.531"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:58:41.547" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:58:41.547" starttime="20210407 08:58:41.547"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:58:41.554" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:58:41.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:58:41.575" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:58:41.575" starttime="20210407 08:58:41.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:58:41.577" level="INFO"/>
<status status="PASS" endtime="20210407 08:58:41.577" starttime="20210407 08:58:41.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:58:41.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:58:41.578" starttime="20210407 08:58:41.578"/>
</kw>
<status status="PASS" endtime="20210407 08:58:41.579" starttime="20210407 08:58:41.549"/>
</kw>
<msg timestamp="20210407 08:58:41.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:58:41.579" starttime="20210407 08:58:41.549"/>
</kw>
<status status="PASS" endtime="20210407 08:58:41.580" starttime="20210407 08:58:41.548"/>
</kw>
<status status="PASS" endtime="20210407 08:58:41.580" starttime="20210407 08:58:41.547"/>
</kw>
<status status="PASS" endtime="20210407 08:58:41.580" starttime="20210407 08:58:41.530"/>
</kw>
<status status="PASS" endtime="20210407 08:58:41.580" starttime="20210407 08:58:41.529"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:58:41.588" level="INFO">Running command 'ozone sh volume create o3://om:9862/30272-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:58:54.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:58:54.679" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:58:54.679" starttime="20210407 08:58:41.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:58:54.683" level="INFO"/>
<status status="PASS" endtime="20210407 08:58:54.683" starttime="20210407 08:58:54.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:58:54.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:58:54.685" starttime="20210407 08:58:54.684"/>
</kw>
<status status="PASS" endtime="20210407 08:58:54.685" starttime="20210407 08:58:41.583"/>
</kw>
<msg timestamp="20210407 08:58:54.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:58:54.685" starttime="20210407 08:58:41.582"/>
</kw>
<status status="PASS" endtime="20210407 08:58:54.686" starttime="20210407 08:58:41.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:58:54.713" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/30272-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:59:06.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:59:06.918" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 08:59:06.918" starttime="20210407 08:58:54.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:59:06.920" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210407 08:59:06.920" starttime="20210407 08:59:06.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:59:06.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:59:06.923" starttime="20210407 08:59:06.921"/>
</kw>
<status status="PASS" endtime="20210407 08:59:06.924" starttime="20210407 08:58:54.691"/>
</kw>
<msg timestamp="20210407 08:59:06.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:59:06.925" starttime="20210407 08:58:54.690"/>
</kw>
<msg timestamp="20210407 08:59:06.925" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 08:59:06.925" starttime="20210407 08:58:54.686"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 08:59:06.929" starttime="20210407 08:59:06.926"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:59:06.937" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/30272-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:59:13.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:59:13.312" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210407 08:59:13.312" starttime="20210407 08:59:06.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:59:13.315" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210407 08:59:13.315" starttime="20210407 08:59:13.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:59:13.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:59:13.317" starttime="20210407 08:59:13.316"/>
</kw>
<status status="PASS" endtime="20210407 08:59:13.317" starttime="20210407 08:59:06.932"/>
</kw>
<msg timestamp="20210407 08:59:13.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:59:13.318" starttime="20210407 08:59:06.931"/>
</kw>
<msg timestamp="20210407 08:59:13.319" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210407 08:59:13.319" starttime="20210407 08:59:06.929"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:59:13.327" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/30272-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:59:20.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:59:20.902" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 08:59:20.902" starttime="20210407 08:59:13.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:59:20.903" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210407 08:59:20.904" starttime="20210407 08:59:20.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:59:20.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:59:20.905" starttime="20210407 08:59:20.904"/>
</kw>
<status status="PASS" endtime="20210407 08:59:20.906" starttime="20210407 08:59:13.322"/>
</kw>
<msg timestamp="20210407 08:59:20.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:59:20.907" starttime="20210407 08:59:13.321"/>
</kw>
<msg timestamp="20210407 08:59:20.907" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 08:59:20.907" starttime="20210407 08:59:13.319"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 08:59:20.910" starttime="20210407 08:59:20.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:59:20.918" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/30272-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:59:27.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:59:27.842" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210407 08:59:27.842" starttime="20210407 08:59:20.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:59:27.843" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210407 08:59:27.843" starttime="20210407 08:59:27.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:59:27.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:59:27.845" starttime="20210407 08:59:27.844"/>
</kw>
<status status="PASS" endtime="20210407 08:59:27.845" starttime="20210407 08:59:20.913"/>
</kw>
<msg timestamp="20210407 08:59:27.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:59:27.846" starttime="20210407 08:59:20.912"/>
</kw>
<msg timestamp="20210407 08:59:27.846" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210407 08:59:27.846" starttime="20210407 08:59:20.910"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:59:27.852" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/30272-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:59:35.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:59:35.532" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 08:59:35.532" starttime="20210407 08:59:27.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:59:35.535" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210407 08:59:35.535" starttime="20210407 08:59:35.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:59:35.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:59:35.537" starttime="20210407 08:59:35.536"/>
</kw>
<status status="PASS" endtime="20210407 08:59:35.539" starttime="20210407 08:59:27.848"/>
</kw>
<msg timestamp="20210407 08:59:35.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:59:35.540" starttime="20210407 08:59:27.848"/>
</kw>
<msg timestamp="20210407 08:59:35.540" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 08:59:35.540" starttime="20210407 08:59:27.847"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 08:59:35.541" starttime="20210407 08:59:35.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:59:35.547" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/30272-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:59:42.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:59:42.749" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 08:59:42.749" starttime="20210407 08:59:35.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:59:42.750" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 08:59:42.750" starttime="20210407 08:59:42.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:59:42.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:59:42.751" starttime="20210407 08:59:42.750"/>
</kw>
<status status="PASS" endtime="20210407 08:59:42.752" starttime="20210407 08:59:35.543"/>
</kw>
<msg timestamp="20210407 08:59:42.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:59:42.752" starttime="20210407 08:59:35.542"/>
</kw>
<msg timestamp="20210407 08:59:42.753" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 08:59:42.753" starttime="20210407 08:59:35.542"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:59:42.760" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/30272-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:59:49.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:59:49.963" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" endtime="20210407 08:59:49.964" starttime="20210407 08:59:42.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:59:49.966" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210407 08:59:49.966" starttime="20210407 08:59:49.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:59:49.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:59:49.968" starttime="20210407 08:59:49.967"/>
</kw>
<status status="PASS" endtime="20210407 08:59:49.969" starttime="20210407 08:59:42.755"/>
</kw>
<msg timestamp="20210407 08:59:49.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:59:49.969" starttime="20210407 08:59:42.754"/>
</kw>
<msg timestamp="20210407 08:59:49.970" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" endtime="20210407 08:59:49.970" starttime="20210407 08:59:42.753"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 08:59:49.971" starttime="20210407 08:59:49.971"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 08:59:49.973" starttime="20210407 08:59:49.972"/>
</kw>
<status status="PASS" endtime="20210407 08:59:49.973" starttime="20210407 08:58:41.581"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210407 08:59:49.974" starttime="20210407 08:58:41.528"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:59:49.984" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:59:49.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:59:49.988" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:59:49.988" starttime="20210407 08:59:49.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:59:49.989" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:59:49.989" starttime="20210407 08:59:49.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:59:49.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:59:49.991" starttime="20210407 08:59:49.990"/>
</kw>
<status status="PASS" endtime="20210407 08:59:49.991" starttime="20210407 08:59:49.980"/>
</kw>
<msg timestamp="20210407 08:59:49.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:59:49.991" starttime="20210407 08:59:49.980"/>
</kw>
<msg timestamp="20210407 08:59:49.992" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:59:49.992" starttime="20210407 08:59:49.979"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:59:49.993" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:59:49.993" starttime="20210407 08:59:49.992"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:59:50.000" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:59:50.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:59:50.267" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:59:50.267" starttime="20210407 08:59:49.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:59:50.269" level="INFO"/>
<status status="PASS" endtime="20210407 08:59:50.269" starttime="20210407 08:59:50.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:59:50.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:59:50.270" starttime="20210407 08:59:50.269"/>
</kw>
<status status="PASS" endtime="20210407 08:59:50.270" starttime="20210407 08:59:49.996"/>
</kw>
<msg timestamp="20210407 08:59:50.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:59:50.270" starttime="20210407 08:59:49.996"/>
</kw>
<status status="PASS" endtime="20210407 08:59:50.271" starttime="20210407 08:59:49.994"/>
</kw>
<status status="PASS" endtime="20210407 08:59:50.271" starttime="20210407 08:59:49.993"/>
</kw>
<status status="PASS" endtime="20210407 08:59:50.271" starttime="20210407 08:59:49.978"/>
</kw>
<status status="PASS" endtime="20210407 08:59:50.271" starttime="20210407 08:59:49.976"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:59:50.277" level="INFO">Running command 'ozone sh bucket create o3://om:9862/30272-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:59:57.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:59:57.440" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:59:57.440" starttime="20210407 08:59:50.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:59:57.441" level="INFO"/>
<status status="PASS" endtime="20210407 08:59:57.442" starttime="20210407 08:59:57.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:59:57.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:59:57.443" starttime="20210407 08:59:57.442"/>
</kw>
<status status="PASS" endtime="20210407 08:59:57.443" starttime="20210407 08:59:50.274"/>
</kw>
<msg timestamp="20210407 08:59:57.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:59:57.443" starttime="20210407 08:59:50.273"/>
</kw>
<status status="PASS" endtime="20210407 08:59:57.444" starttime="20210407 08:59:50.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:59:57.448" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/30272-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:00:05.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:00:05.990" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:00:05.990" starttime="20210407 08:59:57.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:00:05.991" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:00:05.991" starttime="20210407 09:00:05.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:00:05.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:00:05.993" starttime="20210407 09:00:05.991"/>
</kw>
<status status="PASS" endtime="20210407 09:00:05.993" starttime="20210407 08:59:57.445"/>
</kw>
<msg timestamp="20210407 09:00:05.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:00:05.993" starttime="20210407 08:59:57.445"/>
</kw>
<msg timestamp="20210407 09:00:05.994" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:00:05.994" starttime="20210407 08:59:57.444"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:00:05.994" starttime="20210407 09:00:05.994"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:00:06.005" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/30272-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:00:14.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:00:14.013" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210407 09:00:14.013" starttime="20210407 09:00:06.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:00:14.015" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210407 09:00:14.015" starttime="20210407 09:00:14.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:00:14.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:00:14.017" starttime="20210407 09:00:14.016"/>
</kw>
<status status="PASS" endtime="20210407 09:00:14.017" starttime="20210407 09:00:06.000"/>
</kw>
<msg timestamp="20210407 09:00:14.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:00:14.018" starttime="20210407 09:00:05.999"/>
</kw>
<msg timestamp="20210407 09:00:14.018" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210407 09:00:14.018" starttime="20210407 09:00:05.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:00:14.023" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/30272-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:00:21.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:00:21.293" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:00:21.293" starttime="20210407 09:00:14.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:00:21.296" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:00:21.297" starttime="20210407 09:00:21.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:00:21.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:00:21.298" starttime="20210407 09:00:21.297"/>
</kw>
<status status="PASS" endtime="20210407 09:00:21.299" starttime="20210407 09:00:14.020"/>
</kw>
<msg timestamp="20210407 09:00:21.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:00:21.300" starttime="20210407 09:00:14.019"/>
</kw>
<msg timestamp="20210407 09:00:21.301" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:00:21.301" starttime="20210407 09:00:14.018"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:00:21.304" starttime="20210407 09:00:21.301"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:00:21.309" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/30272-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:00:28.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:00:28.462" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210407 09:00:28.463" starttime="20210407 09:00:21.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:00:28.464" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210407 09:00:28.464" starttime="20210407 09:00:28.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:00:28.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:00:28.465" starttime="20210407 09:00:28.464"/>
</kw>
<status status="PASS" endtime="20210407 09:00:28.465" starttime="20210407 09:00:21.306"/>
</kw>
<msg timestamp="20210407 09:00:28.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:00:28.465" starttime="20210407 09:00:21.305"/>
</kw>
<msg timestamp="20210407 09:00:28.466" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210407 09:00:28.466" starttime="20210407 09:00:21.304"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:00:28.472" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/30272-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:00:35.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:00:35.422" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:00:35.422" starttime="20210407 09:00:28.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:00:35.424" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:00:35.424" starttime="20210407 09:00:35.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:00:35.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:00:35.425" starttime="20210407 09:00:35.424"/>
</kw>
<status status="PASS" endtime="20210407 09:00:35.426" starttime="20210407 09:00:28.468"/>
</kw>
<msg timestamp="20210407 09:00:35.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:00:35.426" starttime="20210407 09:00:28.468"/>
</kw>
<msg timestamp="20210407 09:00:35.427" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:00:35.427" starttime="20210407 09:00:28.467"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:00:35.429" starttime="20210407 09:00:35.427"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:00:35.437" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/30272-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:00:42.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:00:42.504" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 09:00:42.504" starttime="20210407 09:00:35.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:00:42.507" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 09:00:42.507" starttime="20210407 09:00:42.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:00:42.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:00:42.508" starttime="20210407 09:00:42.507"/>
</kw>
<status status="PASS" endtime="20210407 09:00:42.508" starttime="20210407 09:00:35.432"/>
</kw>
<msg timestamp="20210407 09:00:42.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:00:42.509" starttime="20210407 09:00:35.431"/>
</kw>
<msg timestamp="20210407 09:00:42.509" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 09:00:42.509" starttime="20210407 09:00:35.429"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:00:42.514" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/30272-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:00:50.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:00:50.079" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210407 09:00:50.080" starttime="20210407 09:00:42.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:00:50.081" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:00:50.081" starttime="20210407 09:00:50.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:00:50.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:00:50.082" starttime="20210407 09:00:50.082"/>
</kw>
<status status="PASS" endtime="20210407 09:00:50.083" starttime="20210407 09:00:42.511"/>
</kw>
<msg timestamp="20210407 09:00:50.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:00:50.083" starttime="20210407 09:00:42.510"/>
</kw>
<msg timestamp="20210407 09:00:50.083" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210407 09:00:50.083" starttime="20210407 09:00:42.509"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:00:50.085" starttime="20210407 09:00:50.084"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:00:50.086" starttime="20210407 09:00:50.085"/>
</kw>
<status status="PASS" endtime="20210407 09:00:50.086" starttime="20210407 08:59:50.271"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210407 09:00:50.086" starttime="20210407 08:59:49.974"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:00:50.097" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:00:50.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:00:50.101" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 09:00:50.101" starttime="20210407 09:00:50.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:00:50.104" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 09:00:50.104" starttime="20210407 09:00:50.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:00:50.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:00:50.106" starttime="20210407 09:00:50.105"/>
</kw>
<status status="PASS" endtime="20210407 09:00:50.107" starttime="20210407 09:00:50.092"/>
</kw>
<msg timestamp="20210407 09:00:50.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:00:50.107" starttime="20210407 09:00:50.092"/>
</kw>
<msg timestamp="20210407 09:00:50.108" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 09:00:50.108" starttime="20210407 09:00:50.091"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 09:00:50.110" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 09:00:50.110" starttime="20210407 09:00:50.108"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:00:50.118" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:00:50.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:00:50.131" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:00:50.131" starttime="20210407 09:00:50.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:00:50.133" level="INFO"/>
<status status="PASS" endtime="20210407 09:00:50.133" starttime="20210407 09:00:50.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:00:50.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:00:50.136" starttime="20210407 09:00:50.133"/>
</kw>
<status status="PASS" endtime="20210407 09:00:50.137" starttime="20210407 09:00:50.114"/>
</kw>
<msg timestamp="20210407 09:00:50.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:00:50.138" starttime="20210407 09:00:50.113"/>
</kw>
<status status="PASS" endtime="20210407 09:00:50.138" starttime="20210407 09:00:50.112"/>
</kw>
<status status="PASS" endtime="20210407 09:00:50.138" starttime="20210407 09:00:50.111"/>
</kw>
<status status="PASS" endtime="20210407 09:00:50.139" starttime="20210407 09:00:50.090"/>
</kw>
<status status="PASS" endtime="20210407 09:00:50.139" starttime="20210407 09:00:50.089"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:00:50.145" level="INFO">Running command 'ozone sh key put o3://om:9862/30272-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:04:02.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:04:02.754" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:04:02.754" starttime="20210407 09:00:50.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:04:02.758" level="INFO"/>
<status status="PASS" endtime="20210407 09:04:02.758" starttime="20210407 09:04:02.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:04:02.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:04:02.759" starttime="20210407 09:04:02.758"/>
</kw>
<status status="PASS" endtime="20210407 09:04:02.760" starttime="20210407 09:00:50.141"/>
</kw>
<msg timestamp="20210407 09:04:02.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:04:02.760" starttime="20210407 09:00:50.141"/>
</kw>
<status status="PASS" endtime="20210407 09:04:02.760" starttime="20210407 09:00:50.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:04:02.765" level="INFO">Running command 'ozone sh key getacl o3://om:9862/30272-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:04:08.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:04:08.798" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:04:08.798" starttime="20210407 09:04:02.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:04:08.800" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:04:08.800" starttime="20210407 09:04:08.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:04:08.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:04:08.801" starttime="20210407 09:04:08.800"/>
</kw>
<status status="PASS" endtime="20210407 09:04:08.801" starttime="20210407 09:04:02.762"/>
</kw>
<msg timestamp="20210407 09:04:08.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:04:08.801" starttime="20210407 09:04:02.761"/>
</kw>
<msg timestamp="20210407 09:04:08.802" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:04:08.802" starttime="20210407 09:04:02.760"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:04:08.802" starttime="20210407 09:04:08.802"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:04:08.809" level="INFO">Running command 'ozone sh key addacl o3://om:9862/30272-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:04:15.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:04:15.772" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 09:04:15.773" starttime="20210407 09:04:08.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:04:15.775" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 09:04:15.775" starttime="20210407 09:04:15.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:04:15.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:04:15.777" starttime="20210407 09:04:15.775"/>
</kw>
<status status="PASS" endtime="20210407 09:04:15.777" starttime="20210407 09:04:08.804"/>
</kw>
<msg timestamp="20210407 09:04:15.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:04:15.778" starttime="20210407 09:04:08.803"/>
</kw>
<msg timestamp="20210407 09:04:15.778" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210407 09:04:15.778" starttime="20210407 09:04:08.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:04:15.785" level="INFO">Running command 'ozone sh key getacl o3://om:9862/30272-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:04:22.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:04:22.983" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:04:22.983" starttime="20210407 09:04:15.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:04:22.985" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:04:22.985" starttime="20210407 09:04:22.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:04:22.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:04:22.988" starttime="20210407 09:04:22.986"/>
</kw>
<status status="PASS" endtime="20210407 09:04:22.988" starttime="20210407 09:04:15.781"/>
</kw>
<msg timestamp="20210407 09:04:22.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:04:22.989" starttime="20210407 09:04:15.780"/>
</kw>
<msg timestamp="20210407 09:04:22.990" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:04:22.990" starttime="20210407 09:04:15.779"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:04:22.992" starttime="20210407 09:04:22.990"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:04:22.998" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/30272-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:04:30.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:04:30.784" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210407 09:04:30.784" starttime="20210407 09:04:22.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:04:30.785" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210407 09:04:30.786" starttime="20210407 09:04:30.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:04:30.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:04:30.786" starttime="20210407 09:04:30.786"/>
</kw>
<status status="PASS" endtime="20210407 09:04:30.787" starttime="20210407 09:04:22.994"/>
</kw>
<msg timestamp="20210407 09:04:30.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:04:30.787" starttime="20210407 09:04:22.994"/>
</kw>
<msg timestamp="20210407 09:04:30.788" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210407 09:04:30.788" starttime="20210407 09:04:22.992"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:04:30.793" level="INFO">Running command 'ozone sh key getacl o3://om:9862/30272-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:04:38.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:04:38.232" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:04:38.232" starttime="20210407 09:04:30.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:04:38.235" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:04:38.236" starttime="20210407 09:04:38.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:04:38.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:04:38.238" starttime="20210407 09:04:38.236"/>
</kw>
<status status="PASS" endtime="20210407 09:04:38.238" starttime="20210407 09:04:30.789"/>
</kw>
<msg timestamp="20210407 09:04:38.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:04:38.239" starttime="20210407 09:04:30.789"/>
</kw>
<msg timestamp="20210407 09:04:38.239" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:04:38.239" starttime="20210407 09:04:30.788"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:04:38.240" starttime="20210407 09:04:38.239"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:04:38.245" level="INFO">Running command 'ozone sh key setacl o3://om:9862/30272-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:04:45.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:04:45.749" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 09:04:45.749" starttime="20210407 09:04:38.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:04:45.751" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 09:04:45.751" starttime="20210407 09:04:45.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:04:45.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:04:45.752" starttime="20210407 09:04:45.751"/>
</kw>
<status status="PASS" endtime="20210407 09:04:45.753" starttime="20210407 09:04:38.242"/>
</kw>
<msg timestamp="20210407 09:04:45.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:04:45.753" starttime="20210407 09:04:38.241"/>
</kw>
<msg timestamp="20210407 09:04:45.754" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 09:04:45.754" starttime="20210407 09:04:38.240"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:04:45.759" level="INFO">Running command 'ozone sh key getacl o3://om:9862/30272-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:04:53.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:04:53.339" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210407 09:04:53.339" starttime="20210407 09:04:45.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:04:53.342" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:04:53.342" starttime="20210407 09:04:53.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:04:53.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:04:53.345" starttime="20210407 09:04:53.343"/>
</kw>
<status status="PASS" endtime="20210407 09:04:53.346" starttime="20210407 09:04:45.756"/>
</kw>
<msg timestamp="20210407 09:04:53.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:04:53.346" starttime="20210407 09:04:45.755"/>
</kw>
<msg timestamp="20210407 09:04:53.347" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210407 09:04:53.348" starttime="20210407 09:04:45.754"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:04:53.350" starttime="20210407 09:04:53.348"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:04:53.352" starttime="20210407 09:04:53.350"/>
</kw>
<status status="PASS" endtime="20210407 09:04:53.353" starttime="20210407 09:00:50.139"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210407 09:04:53.353" starttime="20210407 09:00:50.087"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:04:53.365" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:04:53.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:04:53.369" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 09:04:53.369" starttime="20210407 09:04:53.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:04:53.371" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 09:04:53.371" starttime="20210407 09:04:53.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:04:53.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:04:53.373" starttime="20210407 09:04:53.372"/>
</kw>
<status status="PASS" endtime="20210407 09:04:53.373" starttime="20210407 09:04:53.360"/>
</kw>
<msg timestamp="20210407 09:04:53.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:04:53.374" starttime="20210407 09:04:53.360"/>
</kw>
<msg timestamp="20210407 09:04:53.374" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 09:04:53.374" starttime="20210407 09:04:53.359"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 09:04:53.376" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 09:04:53.377" starttime="20210407 09:04:53.375"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:04:53.385" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:04:53.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:04:53.580" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:04:53.580" starttime="20210407 09:04:53.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:04:53.582" level="INFO"/>
<status status="PASS" endtime="20210407 09:04:53.582" starttime="20210407 09:04:53.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:04:53.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:04:53.583" starttime="20210407 09:04:53.582"/>
</kw>
<status status="PASS" endtime="20210407 09:04:53.583" starttime="20210407 09:04:53.381"/>
</kw>
<msg timestamp="20210407 09:04:53.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:04:53.584" starttime="20210407 09:04:53.381"/>
</kw>
<status status="PASS" endtime="20210407 09:04:53.584" starttime="20210407 09:04:53.380"/>
</kw>
<status status="PASS" endtime="20210407 09:04:53.584" starttime="20210407 09:04:53.379"/>
</kw>
<status status="PASS" endtime="20210407 09:04:53.584" starttime="20210407 09:04:53.357"/>
</kw>
<status status="PASS" endtime="20210407 09:04:53.584" starttime="20210407 09:04:53.357"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:04:53.590" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/30272-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:05:00.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:05:00.697" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210407 09:05:00.697" starttime="20210407 09:04:53.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:05:00.700" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210407 09:05:00.700" starttime="20210407 09:05:00.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:05:00.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:05:00.702" starttime="20210407 09:05:00.701"/>
</kw>
<status status="PASS" endtime="20210407 09:05:00.703" starttime="20210407 09:04:53.586"/>
</kw>
<msg timestamp="20210407 09:05:00.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:05:00.703" starttime="20210407 09:04:53.586"/>
</kw>
<status status="PASS" endtime="20210407 09:05:00.704" starttime="20210407 09:04:53.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:05:00.712" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/30272-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:05:08.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:05:08.109" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" endtime="20210407 09:05:08.109" starttime="20210407 09:05:00.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:05:08.110" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:05:08.110" starttime="20210407 09:05:08.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:05:08.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:05:08.112" starttime="20210407 09:05:08.111"/>
</kw>
<status status="PASS" endtime="20210407 09:05:08.113" starttime="20210407 09:05:00.706"/>
</kw>
<msg timestamp="20210407 09:05:08.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:05:08.114" starttime="20210407 09:05:00.706"/>
</kw>
<msg timestamp="20210407 09:05:08.115" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" endtime="20210407 09:05:08.115" starttime="20210407 09:05:00.704"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:05:08.117" starttime="20210407 09:05:08.115"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:05:08.126" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/30272-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:05:15.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:05:15.081" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210407 09:05:15.081" starttime="20210407 09:05:08.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:05:15.083" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210407 09:05:15.084" starttime="20210407 09:05:15.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:05:15.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:05:15.086" starttime="20210407 09:05:15.084"/>
</kw>
<status status="PASS" endtime="20210407 09:05:15.086" starttime="20210407 09:05:08.120"/>
</kw>
<msg timestamp="20210407 09:05:15.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:05:15.087" starttime="20210407 09:05:08.120"/>
</kw>
<msg timestamp="20210407 09:05:15.087" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210407 09:05:15.087" starttime="20210407 09:05:08.118"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:05:15.094" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/30272-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:05:22.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:05:22.856" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" endtime="20210407 09:05:22.856" starttime="20210407 09:05:15.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:05:22.857" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:05:22.857" starttime="20210407 09:05:22.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:05:22.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:05:22.858" starttime="20210407 09:05:22.858"/>
</kw>
<status status="PASS" endtime="20210407 09:05:22.859" starttime="20210407 09:05:15.089"/>
</kw>
<msg timestamp="20210407 09:05:22.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:05:22.859" starttime="20210407 09:05:15.089"/>
</kw>
<msg timestamp="20210407 09:05:22.860" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" endtime="20210407 09:05:22.860" starttime="20210407 09:05:15.087"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:05:22.861" starttime="20210407 09:05:22.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:05:22.867" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/30272-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:05:29.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:05:29.832" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 09:05:29.832" starttime="20210407 09:05:22.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:05:29.834" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 09:05:29.834" starttime="20210407 09:05:29.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:05:29.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:05:29.835" starttime="20210407 09:05:29.834"/>
</kw>
<status status="PASS" endtime="20210407 09:05:29.835" starttime="20210407 09:05:22.863"/>
</kw>
<msg timestamp="20210407 09:05:29.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:05:29.836" starttime="20210407 09:05:22.863"/>
</kw>
<msg timestamp="20210407 09:05:29.836" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210407 09:05:29.836" starttime="20210407 09:05:22.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:05:29.842" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/30272-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:05:35.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:05:35.129" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" endtime="20210407 09:05:35.129" starttime="20210407 09:05:29.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:05:35.130" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:05:35.130" starttime="20210407 09:05:35.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:05:35.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:05:35.131" starttime="20210407 09:05:35.130"/>
</kw>
<status status="PASS" endtime="20210407 09:05:35.132" starttime="20210407 09:05:29.838"/>
</kw>
<msg timestamp="20210407 09:05:35.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:05:35.132" starttime="20210407 09:05:29.838"/>
</kw>
<msg timestamp="20210407 09:05:35.132" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" endtime="20210407 09:05:35.132" starttime="20210407 09:05:29.837"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:05:35.133" starttime="20210407 09:05:35.132"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:05:35.134" starttime="20210407 09:05:35.133"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:05:35.141" level="INFO">Running command 'ozone sh key put o3://om:9862/30272-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:08:47.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:08:47.536" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:08:47.536" starttime="20210407 09:05:35.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:08:47.540" level="INFO"/>
<status status="PASS" endtime="20210407 09:08:47.540" starttime="20210407 09:08:47.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:08:47.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:08:47.542" starttime="20210407 09:08:47.540"/>
</kw>
<status status="PASS" endtime="20210407 09:08:47.543" starttime="20210407 09:05:35.135"/>
</kw>
<msg timestamp="20210407 09:08:47.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:08:47.543" starttime="20210407 09:05:35.135"/>
</kw>
<status status="PASS" endtime="20210407 09:08:47.544" starttime="20210407 09:05:35.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:08:47.554" level="INFO">Running command 'ozone sh key getacl o3://om:9862/30272-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:08:55.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:08:55.647" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:08:55.648" starttime="20210407 09:08:47.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:08:55.650" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210407 09:08:55.651" starttime="20210407 09:08:55.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:08:55.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:08:55.652" starttime="20210407 09:08:55.651"/>
</kw>
<status status="PASS" endtime="20210407 09:08:55.653" starttime="20210407 09:08:47.547"/>
</kw>
<msg timestamp="20210407 09:08:55.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:08:55.653" starttime="20210407 09:08:47.546"/>
</kw>
<msg timestamp="20210407 09:08:55.654" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210407 09:08:55.654" starttime="20210407 09:08:47.544"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:08:55.656" starttime="20210407 09:08:55.654"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" endtime="20210407 09:08:55.657" starttime="20210407 09:08:55.656"/>
</kw>
<status status="PASS" endtime="20210407 09:08:55.658" starttime="20210407 09:04:53.584"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210407 09:08:55.658" starttime="20210407 09:04:53.355"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:08:55.672" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:08:55.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:08:55.679" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 09:08:55.679" starttime="20210407 09:08:55.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:08:55.681" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 09:08:55.681" starttime="20210407 09:08:55.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:08:55.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:08:55.682" starttime="20210407 09:08:55.681"/>
</kw>
<status status="PASS" endtime="20210407 09:08:55.682" starttime="20210407 09:08:55.668"/>
</kw>
<msg timestamp="20210407 09:08:55.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:08:55.682" starttime="20210407 09:08:55.666"/>
</kw>
<msg timestamp="20210407 09:08:55.683" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 09:08:55.683" starttime="20210407 09:08:55.665"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 09:08:55.684" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 09:08:55.684" starttime="20210407 09:08:55.683"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:08:55.689" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:08:55.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:08:55.699" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:08:55.699" starttime="20210407 09:08:55.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:08:55.701" level="INFO"/>
<status status="PASS" endtime="20210407 09:08:55.701" starttime="20210407 09:08:55.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:08:55.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:08:55.703" starttime="20210407 09:08:55.702"/>
</kw>
<status status="PASS" endtime="20210407 09:08:55.703" starttime="20210407 09:08:55.686"/>
</kw>
<msg timestamp="20210407 09:08:55.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:08:55.704" starttime="20210407 09:08:55.685"/>
</kw>
<status status="PASS" endtime="20210407 09:08:55.704" starttime="20210407 09:08:55.684"/>
</kw>
<status status="PASS" endtime="20210407 09:08:55.704" starttime="20210407 09:08:55.684"/>
</kw>
<status status="PASS" endtime="20210407 09:08:55.704" starttime="20210407 09:08:55.663"/>
</kw>
<status status="PASS" endtime="20210407 09:08:55.704" starttime="20210407 09:08:55.663"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:08:55.720" level="INFO">Running command 'ozone sh volume info o3:///30272-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:09:02.818" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 09:09:02.819" level="INFO">${output} = VOLUME_NOT_FOUND Volume 30272-rpcwport is not found</msg>
<status status="PASS" endtime="20210407 09:09:02.819" starttime="20210407 09:08:55.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:09:02.821" level="INFO">VOLUME_NOT_FOUND Volume 30272-rpcwport is not found</msg>
<status status="PASS" endtime="20210407 09:09:02.821" starttime="20210407 09:09:02.819"/>
</kw>
<msg timestamp="20210407 09:09:02.822" level="INFO">${result} = VOLUME_NOT_FOUND Volume 30272-rpcwport is not found</msg>
<status status="PASS" endtime="20210407 09:09:02.822" starttime="20210407 09:08:55.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 09:09:02.823" starttime="20210407 09:09:02.822"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:09:02.831" level="INFO">Running command 'ozone sh volume create o3:///30272-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:09:10.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:09:10.128" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:09:10.128" starttime="20210407 09:09:02.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:09:10.130" level="INFO"/>
<status status="PASS" endtime="20210407 09:09:10.130" starttime="20210407 09:09:10.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:09:10.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:09:10.131" starttime="20210407 09:09:10.130"/>
</kw>
<status status="PASS" endtime="20210407 09:09:10.131" starttime="20210407 09:09:02.826"/>
</kw>
<msg timestamp="20210407 09:09:10.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:09:10.132" starttime="20210407 09:09:02.825"/>
</kw>
<msg timestamp="20210407 09:09:10.132" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210407 09:09:10.132" starttime="20210407 09:09:02.824"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 09:09:10.133" starttime="20210407 09:09:10.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:09:10.143" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="30272-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:09:16.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:09:16.431" level="INFO">${output} = {
  "metadata": {},
  "name": "30272-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210407 09:09:16.431" starttime="20210407 09:09:10.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:09:16.433" level="INFO">{
  "metadata": {},
  "name": "30272-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-07T09:09:09.967Z",
  "modificationTime": "2021-04-07T09:09:09.967Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210407 09:09:16.433" starttime="20210407 09:09:16.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:09:16.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:09:16.434" starttime="20210407 09:09:16.434"/>
</kw>
<status status="PASS" endtime="20210407 09:09:16.435" starttime="20210407 09:09:10.135"/>
</kw>
<msg timestamp="20210407 09:09:16.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:09:16.435" starttime="20210407 09:09:10.134"/>
</kw>
<msg timestamp="20210407 09:09:16.435" level="INFO">${result} = {
  "metadata": {},
  "name": "30272-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210407 09:09:16.435" starttime="20210407 09:09:10.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 09:09:16.436" starttime="20210407 09:09:16.436"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:09:16.440" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="30272-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:09:23.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:09:23.654" level="INFO">${output} = {
  "metadata": {},
  "name": "30272-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210407 09:09:23.654" starttime="20210407 09:09:16.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:09:23.655" level="INFO">{
  "metadata": {},
  "name": "30272-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-07T09:09:09.967Z",
  "modificationTime": "2021-04-07T09:09:09.967Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210407 09:09:23.655" starttime="20210407 09:09:23.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:09:23.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:09:23.656" starttime="20210407 09:09:23.655"/>
</kw>
<status status="PASS" endtime="20210407 09:09:23.657" starttime="20210407 09:09:16.437"/>
</kw>
<msg timestamp="20210407 09:09:23.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:09:23.657" starttime="20210407 09:09:16.437"/>
</kw>
<msg timestamp="20210407 09:09:23.657" level="INFO">${result} = {
  "metadata": {},
  "name": "30272-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210407 09:09:23.657" starttime="20210407 09:09:16.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 09:09:23.658" starttime="20210407 09:09:23.657"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:09:23.663" level="INFO">Running command 'ozone sh volume setquota o3:///30272-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:09:30.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:09:30.243" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:09:30.243" starttime="20210407 09:09:23.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:09:30.246" level="INFO"/>
<status status="PASS" endtime="20210407 09:09:30.246" starttime="20210407 09:09:30.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:09:30.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:09:30.247" starttime="20210407 09:09:30.246"/>
</kw>
<status status="PASS" endtime="20210407 09:09:30.247" starttime="20210407 09:09:23.659"/>
</kw>
<msg timestamp="20210407 09:09:30.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:09:30.248" starttime="20210407 09:09:23.659"/>
</kw>
<status status="PASS" endtime="20210407 09:09:30.248" starttime="20210407 09:09:23.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:09:30.258" level="INFO">Running command 'ozone sh volume info o3:///30272-rpcwport | jq -r '. | select(.name=="30272-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:09:37.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:09:37.604" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210407 09:09:37.604" starttime="20210407 09:09:30.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:09:37.606" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210407 09:09:37.607" starttime="20210407 09:09:37.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:09:37.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:09:37.608" starttime="20210407 09:09:37.607"/>
</kw>
<status status="PASS" endtime="20210407 09:09:37.609" starttime="20210407 09:09:30.252"/>
</kw>
<msg timestamp="20210407 09:09:37.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:09:37.610" starttime="20210407 09:09:30.251"/>
</kw>
<msg timestamp="20210407 09:09:37.610" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210407 09:09:37.610" starttime="20210407 09:09:30.248"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:09:37.612" starttime="20210407 09:09:37.611"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:09:37.621" level="INFO">Running command 'ozone sh bucket create o3:///30272-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:09:42.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:09:42.989" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:09:42.989" starttime="20210407 09:09:37.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:09:42.991" level="INFO"/>
<status status="PASS" endtime="20210407 09:09:42.991" starttime="20210407 09:09:42.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:09:42.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:09:42.993" starttime="20210407 09:09:42.991"/>
</kw>
<status status="PASS" endtime="20210407 09:09:42.993" starttime="20210407 09:09:37.615"/>
</kw>
<msg timestamp="20210407 09:09:42.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:09:42.993" starttime="20210407 09:09:37.614"/>
</kw>
<status status="PASS" endtime="20210407 09:09:42.994" starttime="20210407 09:09:37.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:09:43.001" level="INFO">Running command 'ozone sh bucket info o3:///30272-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:09:50.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:09:50.154" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210407 09:09:50.154" starttime="20210407 09:09:42.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:09:50.157" level="INFO">DISK</msg>
<status status="PASS" endtime="20210407 09:09:50.157" starttime="20210407 09:09:50.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:09:50.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:09:50.159" starttime="20210407 09:09:50.158"/>
</kw>
<status status="PASS" endtime="20210407 09:09:50.160" starttime="20210407 09:09:42.997"/>
</kw>
<msg timestamp="20210407 09:09:50.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:09:50.160" starttime="20210407 09:09:42.996"/>
</kw>
<msg timestamp="20210407 09:09:50.161" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210407 09:09:50.161" starttime="20210407 09:09:42.994"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:09:50.162" starttime="20210407 09:09:50.161"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:09:50.170" level="INFO">Running command 'ozone sh bucket info o3:///30272-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:09:57.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:09:57.780" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210407 09:09:57.780" starttime="20210407 09:09:50.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:09:57.783" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210407 09:09:57.783" starttime="20210407 09:09:57.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:09:57.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:09:57.785" starttime="20210407 09:09:57.783"/>
</kw>
<status status="PASS" endtime="20210407 09:09:57.785" starttime="20210407 09:09:50.166"/>
</kw>
<msg timestamp="20210407 09:09:57.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:09:57.786" starttime="20210407 09:09:50.165"/>
</kw>
<msg timestamp="20210407 09:09:57.786" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210407 09:09:57.786" starttime="20210407 09:09:50.163"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:09:57.787" starttime="20210407 09:09:57.786"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:09:57.793" level="INFO">Running command 'ozone sh bucket info o3:///30272-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:10:05.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:10:05.500" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210407 09:10:05.500" starttime="20210407 09:09:57.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:10:05.503" level="INFO">100</msg>
<status status="PASS" endtime="20210407 09:10:05.503" starttime="20210407 09:10:05.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:10:05.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:10:05.505" starttime="20210407 09:10:05.504"/>
</kw>
<status status="PASS" endtime="20210407 09:10:05.506" starttime="20210407 09:09:57.789"/>
</kw>
<msg timestamp="20210407 09:10:05.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:10:05.507" starttime="20210407 09:09:57.789"/>
</kw>
<msg timestamp="20210407 09:10:05.507" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210407 09:10:05.507" starttime="20210407 09:09:57.787"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:10:05.509" starttime="20210407 09:10:05.508"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:10:05.516" level="INFO">Running command 'ozone sh bucket setquota o3:///30272-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:10:12.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:10:12.683" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:10:12.683" starttime="20210407 09:10:05.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:10:12.686" level="INFO"/>
<status status="PASS" endtime="20210407 09:10:12.686" starttime="20210407 09:10:12.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:10:12.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:10:12.688" starttime="20210407 09:10:12.686"/>
</kw>
<status status="PASS" endtime="20210407 09:10:12.689" starttime="20210407 09:10:05.511"/>
</kw>
<msg timestamp="20210407 09:10:12.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:10:12.689" starttime="20210407 09:10:05.511"/>
</kw>
<status status="PASS" endtime="20210407 09:10:12.690" starttime="20210407 09:10:05.510"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:10:12.698" level="INFO">Running command 'ozone sh bucket info o3:///30272-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:10:20.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:10:20.419" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210407 09:10:20.419" starttime="20210407 09:10:12.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:10:20.421" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210407 09:10:20.421" starttime="20210407 09:10:20.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:10:20.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:10:20.422" starttime="20210407 09:10:20.421"/>
</kw>
<status status="PASS" endtime="20210407 09:10:20.423" starttime="20210407 09:10:12.693"/>
</kw>
<msg timestamp="20210407 09:10:20.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:10:20.423" starttime="20210407 09:10:12.692"/>
</kw>
<msg timestamp="20210407 09:10:20.424" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210407 09:10:20.424" starttime="20210407 09:10:12.690"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:10:20.426" starttime="20210407 09:10:20.425"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:10:20.433" level="INFO">Running command 'ozone sh bucket info o3:///30272-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:10:26.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:10:26.800" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210407 09:10:26.800" starttime="20210407 09:10:20.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:10:26.802" level="INFO">1000</msg>
<status status="PASS" endtime="20210407 09:10:26.802" starttime="20210407 09:10:26.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:10:26.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:10:26.803" starttime="20210407 09:10:26.802"/>
</kw>
<status status="PASS" endtime="20210407 09:10:26.804" starttime="20210407 09:10:20.429"/>
</kw>
<msg timestamp="20210407 09:10:26.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:10:26.804" starttime="20210407 09:10:20.428"/>
</kw>
<msg timestamp="20210407 09:10:26.804" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210407 09:10:26.804" starttime="20210407 09:10:20.426"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:10:26.805" starttime="20210407 09:10:26.805"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:10:26.810" level="INFO">Running command 'ozone sh bucket list o3:///30272-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:10:34.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:10:34.232" level="INFO">${output} = 30272-rpcwport</msg>
<status status="PASS" endtime="20210407 09:10:34.232" starttime="20210407 09:10:26.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:10:34.234" level="INFO">30272-rpcwport</msg>
<status status="PASS" endtime="20210407 09:10:34.234" starttime="20210407 09:10:34.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:10:34.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:10:34.235" starttime="20210407 09:10:34.234"/>
</kw>
<status status="PASS" endtime="20210407 09:10:34.235" starttime="20210407 09:10:26.807"/>
</kw>
<msg timestamp="20210407 09:10:34.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:10:34.235" starttime="20210407 09:10:26.806"/>
</kw>
<msg timestamp="20210407 09:10:34.236" level="INFO">${result} = 30272-rpcwport</msg>
<status status="PASS" endtime="20210407 09:10:34.236" starttime="20210407 09:10:26.805"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:10:34.237" starttime="20210407 09:10:34.236"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:10:34.244" level="INFO">Running command 'ozone sh key put o3:///30272-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:13:45.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:13:45.833" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:13:45.833" starttime="20210407 09:10:34.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:13:45.836" level="INFO"/>
<status status="PASS" endtime="20210407 09:13:45.837" starttime="20210407 09:13:45.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:13:45.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:13:45.838" starttime="20210407 09:13:45.837"/>
</kw>
<status status="PASS" endtime="20210407 09:13:45.839" starttime="20210407 09:10:34.240"/>
</kw>
<msg timestamp="20210407 09:13:45.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:13:45.840" starttime="20210407 09:10:34.239"/>
</kw>
<status status="PASS" endtime="20210407 09:13:45.840" starttime="20210407 09:10:34.238"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:13:45.847" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:13:45.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:13:45.852" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:13:45.852" starttime="20210407 09:13:45.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:13:45.853" level="INFO"/>
<status status="PASS" endtime="20210407 09:13:45.854" starttime="20210407 09:13:45.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:13:45.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:13:45.855" starttime="20210407 09:13:45.854"/>
</kw>
<status status="PASS" endtime="20210407 09:13:45.856" starttime="20210407 09:13:45.842"/>
</kw>
<msg timestamp="20210407 09:13:45.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:13:45.856" starttime="20210407 09:13:45.842"/>
</kw>
<status status="PASS" endtime="20210407 09:13:45.857" starttime="20210407 09:13:45.840"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:13:45.866" level="INFO">Running command 'ozone sh key get o3:///30272-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:13:55.662" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210407 09:13:55.662" starttime="20210407 09:13:45.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.663" starttime="20210407 09:13:55.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.663" starttime="20210407 09:13:55.663"/>
</kw>
<status status="FAIL" endtime="20210407 09:13:55.664" starttime="20210407 09:13:45.859"/>
</kw>
<msg timestamp="20210407 09:13:55.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210407 09:13:55.664" starttime="20210407 09:13:45.859"/>
</kw>
<status status="FAIL" endtime="20210407 09:13:55.665" starttime="20210407 09:13:45.857"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.665" starttime="20210407 09:13:55.665"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.665" starttime="20210407 09:13:55.665"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.666" starttime="20210407 09:13:55.666"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.666" starttime="20210407 09:13:55.666"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.666" starttime="20210407 09:13:55.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.667" starttime="20210407 09:13:55.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.667" starttime="20210407 09:13:55.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.667" starttime="20210407 09:13:55.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.667" starttime="20210407 09:13:55.667"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.668" starttime="20210407 09:13:55.668"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.669" starttime="20210407 09:13:55.668"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.669" starttime="20210407 09:13:55.669"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.671" starttime="20210407 09:13:55.670"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.671" starttime="20210407 09:13:55.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.671" starttime="20210407 09:13:55.671"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.675" starttime="20210407 09:13:55.671"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.677" starttime="20210407 09:13:55.675"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.678" starttime="20210407 09:13:55.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.678" starttime="20210407 09:13:55.678"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.680" starttime="20210407 09:13:55.680"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.680" starttime="20210407 09:13:55.680"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.684" starttime="20210407 09:13:55.680"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.685" starttime="20210407 09:13:55.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.686" starttime="20210407 09:13:55.685"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.687" starttime="20210407 09:13:55.687"/>
</kw>
<status status="FAIL" endtime="20210407 09:13:55.687" starttime="20210407 09:10:34.237"/>
</kw>
<status status="FAIL" endtime="20210407 09:13:55.689" starttime="20210407 09:10:34.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.692" starttime="20210407 09:13:55.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.694" starttime="20210407 09:13:55.693"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.695" starttime="20210407 09:13:55.695"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.697" starttime="20210407 09:13:55.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.698" starttime="20210407 09:13:55.698"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.698" starttime="20210407 09:13:55.698"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.700" starttime="20210407 09:13:55.700"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.701" starttime="20210407 09:13:55.701"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.701" starttime="20210407 09:13:55.701"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.705" starttime="20210407 09:13:55.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.706" starttime="20210407 09:13:55.705"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.706" starttime="20210407 09:13:55.706"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.709" starttime="20210407 09:13:55.709"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.709" starttime="20210407 09:13:55.709"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.711" starttime="20210407 09:13:55.710"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.711" starttime="20210407 09:13:55.711"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.715" starttime="20210407 09:13:55.713"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.716" starttime="20210407 09:13:55.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.718" starttime="20210407 09:13:55.717"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.718" starttime="20210407 09:13:55.718"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.721" starttime="20210407 09:13:55.721"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.722" starttime="20210407 09:13:55.722"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.727" starttime="20210407 09:13:55.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:13:55.729" starttime="20210407 09:13:55.728"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.730" starttime="20210407 09:13:55.730"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 09:13:55.731" starttime="20210407 09:13:55.730"/>
</kw>
<status status="FAIL" endtime="20210407 09:13:55.734" starttime="20210407 09:08:55.708"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210407 09:13:55.735" starttime="20210407 09:08:55.661">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:13:55.789" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:13:55.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:13:55.806" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 09:13:55.806" starttime="20210407 09:13:55.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:13:55.810" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 09:13:55.810" starttime="20210407 09:13:55.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:13:55.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:13:55.811" starttime="20210407 09:13:55.810"/>
</kw>
<status status="PASS" endtime="20210407 09:13:55.812" starttime="20210407 09:13:55.769"/>
</kw>
<msg timestamp="20210407 09:13:55.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:13:55.812" starttime="20210407 09:13:55.768"/>
</kw>
<msg timestamp="20210407 09:13:55.812" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 09:13:55.812" starttime="20210407 09:13:55.755"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 09:13:55.813" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 09:13:55.814" starttime="20210407 09:13:55.813"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:13:55.835" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:13:56.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:13:56.062" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:13:56.062" starttime="20210407 09:13:55.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:13:56.063" level="INFO"/>
<status status="PASS" endtime="20210407 09:13:56.066" starttime="20210407 09:13:56.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:13:56.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:13:56.067" starttime="20210407 09:13:56.066"/>
</kw>
<status status="PASS" endtime="20210407 09:13:56.068" starttime="20210407 09:13:55.824"/>
</kw>
<msg timestamp="20210407 09:13:56.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:13:56.070" starttime="20210407 09:13:55.823"/>
</kw>
<status status="PASS" endtime="20210407 09:13:56.070" starttime="20210407 09:13:55.818"/>
</kw>
<status status="PASS" endtime="20210407 09:13:56.070" starttime="20210407 09:13:55.815"/>
</kw>
<status status="PASS" endtime="20210407 09:13:56.071" starttime="20210407 09:13:55.755"/>
</kw>
<status status="PASS" endtime="20210407 09:13:56.071" starttime="20210407 09:13:55.748"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:13:56.103" level="INFO">Running command 'ozone sh volume info /30272-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:14:03.633" level="INFO">${rc} = 255</msg>
<msg timestamp="20210407 09:14:03.633" level="INFO">${output} = VOLUME_NOT_FOUND Volume 30272-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210407 09:14:03.633" starttime="20210407 09:13:56.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:14:03.636" level="INFO">VOLUME_NOT_FOUND Volume 30272-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210407 09:14:03.636" starttime="20210407 09:14:03.635"/>
</kw>
<msg timestamp="20210407 09:14:03.638" level="INFO">${result} = VOLUME_NOT_FOUND Volume 30272-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210407 09:14:03.638" starttime="20210407 09:13:56.073"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 09:14:03.639" starttime="20210407 09:14:03.638"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:14:03.649" level="INFO">Running command 'ozone sh volume create /30272-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:14:10.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:14:10.987" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:14:10.987" starttime="20210407 09:14:03.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:14:10.988" level="INFO"/>
<status status="PASS" endtime="20210407 09:14:10.988" starttime="20210407 09:14:10.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:14:10.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:14:10.989" starttime="20210407 09:14:10.989"/>
</kw>
<status status="PASS" endtime="20210407 09:14:10.990" starttime="20210407 09:14:03.643"/>
</kw>
<msg timestamp="20210407 09:14:10.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:14:10.990" starttime="20210407 09:14:03.641"/>
</kw>
<msg timestamp="20210407 09:14:10.990" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210407 09:14:10.990" starttime="20210407 09:14:03.640"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 09:14:10.991" starttime="20210407 09:14:10.990"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:14:10.997" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="30272-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:14:18.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:14:18.882" level="INFO">${output} = {
  "metadata": {},
  "name": "30272-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210407 09:14:18.883" starttime="20210407 09:14:10.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:14:18.885" level="INFO">{
  "metadata": {},
  "name": "30272-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-07T09:14:10.858Z",
  "modificationTime": "2021-04-07T09:14:10.858Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210407 09:14:18.886" starttime="20210407 09:14:18.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:14:18.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:14:18.887" starttime="20210407 09:14:18.886"/>
</kw>
<status status="PASS" endtime="20210407 09:14:18.888" starttime="20210407 09:14:10.993"/>
</kw>
<msg timestamp="20210407 09:14:18.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:14:18.889" starttime="20210407 09:14:10.992"/>
</kw>
<msg timestamp="20210407 09:14:18.890" level="INFO">${result} = {
  "metadata": {},
  "name": "30272-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210407 09:14:18.890" starttime="20210407 09:14:10.991"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 09:14:18.892" starttime="20210407 09:14:18.890"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:14:18.899" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="30272-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:14:26.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:14:26.932" level="INFO">${output} = {
  "metadata": {},
  "name": "30272-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210407 09:14:26.932" starttime="20210407 09:14:18.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:14:26.934" level="INFO">{
  "metadata": {},
  "name": "30272-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-07T09:14:10.858Z",
  "modificationTime": "2021-04-07T09:14:10.858Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210407 09:14:26.934" starttime="20210407 09:14:26.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:14:26.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:14:26.936" starttime="20210407 09:14:26.935"/>
</kw>
<status status="PASS" endtime="20210407 09:14:26.936" starttime="20210407 09:14:18.894"/>
</kw>
<msg timestamp="20210407 09:14:26.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:14:26.937" starttime="20210407 09:14:18.894"/>
</kw>
<msg timestamp="20210407 09:14:26.937" level="INFO">${result} = {
  "metadata": {},
  "name": "30272-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210407 09:14:26.937" starttime="20210407 09:14:18.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210407 09:14:26.938" starttime="20210407 09:14:26.938"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:14:26.944" level="INFO">Running command 'ozone sh volume setquota /30272-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:14:34.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:14:34.137" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:14:34.137" starttime="20210407 09:14:26.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:14:34.139" level="INFO"/>
<status status="PASS" endtime="20210407 09:14:34.139" starttime="20210407 09:14:34.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:14:34.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:14:34.141" starttime="20210407 09:14:34.140"/>
</kw>
<status status="PASS" endtime="20210407 09:14:34.141" starttime="20210407 09:14:26.940"/>
</kw>
<msg timestamp="20210407 09:14:34.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:14:34.142" starttime="20210407 09:14:26.940"/>
</kw>
<status status="PASS" endtime="20210407 09:14:34.142" starttime="20210407 09:14:26.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:14:34.149" level="INFO">Running command 'ozone sh volume info /30272-rpcwoscheme | jq -r '. | select(.name=="30272-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:14:41.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:14:41.580" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210407 09:14:41.580" starttime="20210407 09:14:34.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:14:41.583" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210407 09:14:41.583" starttime="20210407 09:14:41.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:14:41.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:14:41.585" starttime="20210407 09:14:41.584"/>
</kw>
<status status="PASS" endtime="20210407 09:14:41.586" starttime="20210407 09:14:34.145"/>
</kw>
<msg timestamp="20210407 09:14:41.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:14:41.586" starttime="20210407 09:14:34.145"/>
</kw>
<msg timestamp="20210407 09:14:41.587" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210407 09:14:41.587" starttime="20210407 09:14:34.143"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:14:41.588" starttime="20210407 09:14:41.587"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:14:41.596" level="INFO">Running command 'ozone sh bucket create /30272-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:14:48.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:14:48.736" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:14:48.737" starttime="20210407 09:14:41.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:14:48.739" level="INFO"/>
<status status="PASS" endtime="20210407 09:14:48.739" starttime="20210407 09:14:48.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:14:48.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:14:48.740" starttime="20210407 09:14:48.739"/>
</kw>
<status status="PASS" endtime="20210407 09:14:48.741" starttime="20210407 09:14:41.591"/>
</kw>
<msg timestamp="20210407 09:14:48.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:14:48.741" starttime="20210407 09:14:41.590"/>
</kw>
<status status="PASS" endtime="20210407 09:14:48.741" starttime="20210407 09:14:41.589"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:14:48.751" level="INFO">Running command 'ozone sh bucket info /30272-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:14:56.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:14:56.734" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210407 09:14:56.734" starttime="20210407 09:14:48.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:14:56.736" level="INFO">DISK</msg>
<status status="PASS" endtime="20210407 09:14:56.736" starttime="20210407 09:14:56.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:14:56.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:14:56.737" starttime="20210407 09:14:56.736"/>
</kw>
<status status="PASS" endtime="20210407 09:14:56.737" starttime="20210407 09:14:48.744"/>
</kw>
<msg timestamp="20210407 09:14:56.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:14:56.738" starttime="20210407 09:14:48.743"/>
</kw>
<msg timestamp="20210407 09:14:56.738" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210407 09:14:56.738" starttime="20210407 09:14:48.742"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:14:56.739" starttime="20210407 09:14:56.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:14:56.746" level="INFO">Running command 'ozone sh bucket info /30272-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:15:04.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:15:04.373" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210407 09:15:04.373" starttime="20210407 09:14:56.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:15:04.375" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210407 09:15:04.375" starttime="20210407 09:15:04.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:15:04.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:15:04.376" starttime="20210407 09:15:04.375"/>
</kw>
<status status="PASS" endtime="20210407 09:15:04.377" starttime="20210407 09:14:56.742"/>
</kw>
<msg timestamp="20210407 09:15:04.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:15:04.377" starttime="20210407 09:14:56.741"/>
</kw>
<msg timestamp="20210407 09:15:04.377" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210407 09:15:04.377" starttime="20210407 09:14:56.739"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:15:04.379" starttime="20210407 09:15:04.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:15:04.385" level="INFO">Running command 'ozone sh bucket info /30272-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:15:11.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:15:11.868" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210407 09:15:11.868" starttime="20210407 09:15:04.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:15:11.872" level="INFO">100</msg>
<status status="PASS" endtime="20210407 09:15:11.872" starttime="20210407 09:15:11.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:15:11.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:15:11.873" starttime="20210407 09:15:11.872"/>
</kw>
<status status="PASS" endtime="20210407 09:15:11.874" starttime="20210407 09:15:04.381"/>
</kw>
<msg timestamp="20210407 09:15:11.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:15:11.874" starttime="20210407 09:15:04.381"/>
</kw>
<msg timestamp="20210407 09:15:11.874" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210407 09:15:11.874" starttime="20210407 09:15:04.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:15:11.875" starttime="20210407 09:15:11.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:15:11.880" level="INFO">Running command 'ozone sh bucket setquota /30272-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:15:19.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:15:19.043" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:15:19.043" starttime="20210407 09:15:11.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:15:19.046" level="INFO"/>
<status status="PASS" endtime="20210407 09:15:19.046" starttime="20210407 09:15:19.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:15:19.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:15:19.051" starttime="20210407 09:15:19.047"/>
</kw>
<status status="PASS" endtime="20210407 09:15:19.051" starttime="20210407 09:15:11.876"/>
</kw>
<msg timestamp="20210407 09:15:19.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:15:19.052" starttime="20210407 09:15:11.876"/>
</kw>
<status status="PASS" endtime="20210407 09:15:19.052" starttime="20210407 09:15:11.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:15:19.057" level="INFO">Running command 'ozone sh bucket info /30272-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:15:27.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:15:27.227" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210407 09:15:27.227" starttime="20210407 09:15:19.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:15:27.231" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210407 09:15:27.231" starttime="20210407 09:15:27.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:15:27.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:15:27.232" starttime="20210407 09:15:27.231"/>
</kw>
<status status="PASS" endtime="20210407 09:15:27.233" starttime="20210407 09:15:19.054"/>
</kw>
<msg timestamp="20210407 09:15:27.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:15:27.233" starttime="20210407 09:15:19.053"/>
</kw>
<msg timestamp="20210407 09:15:27.234" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210407 09:15:27.234" starttime="20210407 09:15:19.052"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:15:27.236" starttime="20210407 09:15:27.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:15:27.244" level="INFO">Running command 'ozone sh bucket info /30272-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:15:34.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:15:34.974" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210407 09:15:34.974" starttime="20210407 09:15:27.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:15:34.977" level="INFO">1000</msg>
<status status="PASS" endtime="20210407 09:15:34.977" starttime="20210407 09:15:34.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:15:34.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:15:34.979" starttime="20210407 09:15:34.977"/>
</kw>
<status status="PASS" endtime="20210407 09:15:34.980" starttime="20210407 09:15:27.239"/>
</kw>
<msg timestamp="20210407 09:15:34.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:15:34.980" starttime="20210407 09:15:27.238"/>
</kw>
<msg timestamp="20210407 09:15:34.981" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210407 09:15:34.981" starttime="20210407 09:15:27.236"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:15:34.982" starttime="20210407 09:15:34.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:15:34.991" level="INFO">Running command 'ozone sh bucket list /30272-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:15:42.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:15:42.192" level="INFO">${output} = 30272-rpcwoscheme</msg>
<status status="PASS" endtime="20210407 09:15:42.192" starttime="20210407 09:15:34.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:15:42.194" level="INFO">30272-rpcwoscheme</msg>
<status status="PASS" endtime="20210407 09:15:42.194" starttime="20210407 09:15:42.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:15:42.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:15:42.196" starttime="20210407 09:15:42.195"/>
</kw>
<status status="PASS" endtime="20210407 09:15:42.197" starttime="20210407 09:15:34.985"/>
</kw>
<msg timestamp="20210407 09:15:42.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:15:42.198" starttime="20210407 09:15:34.985"/>
</kw>
<msg timestamp="20210407 09:15:42.198" level="INFO">${result} = 30272-rpcwoscheme</msg>
<status status="PASS" endtime="20210407 09:15:42.199" starttime="20210407 09:15:34.983"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" endtime="20210407 09:15:42.200" starttime="20210407 09:15:42.199"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:15:42.210" level="INFO">Running command 'ozone sh key put /30272-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:18:52.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:18:52.568" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:18:52.568" starttime="20210407 09:15:42.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:18:52.570" level="INFO"/>
<status status="PASS" endtime="20210407 09:18:52.570" starttime="20210407 09:18:52.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:18:52.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:18:52.571" starttime="20210407 09:18:52.570"/>
</kw>
<status status="PASS" endtime="20210407 09:18:52.572" starttime="20210407 09:15:42.205"/>
</kw>
<msg timestamp="20210407 09:18:52.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:18:52.572" starttime="20210407 09:15:42.204"/>
</kw>
<status status="PASS" endtime="20210407 09:18:52.572" starttime="20210407 09:15:42.202"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:18:52.577" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:18:52.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 09:18:52.581" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 09:18:52.581" starttime="20210407 09:18:52.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 09:18:52.582" level="INFO"/>
<status status="PASS" endtime="20210407 09:18:52.583" starttime="20210407 09:18:52.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 09:18:52.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 09:18:52.584" starttime="20210407 09:18:52.583"/>
</kw>
<status status="PASS" endtime="20210407 09:18:52.584" starttime="20210407 09:18:52.574"/>
</kw>
<msg timestamp="20210407 09:18:52.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 09:18:52.584" starttime="20210407 09:18:52.573"/>
</kw>
<status status="PASS" endtime="20210407 09:18:52.585" starttime="20210407 09:18:52.572"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 09:18:52.589" level="INFO">Running command 'ozone sh key get /30272-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 09:18:55.745" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210407 09:18:55.745" starttime="20210407 09:18:52.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.747" starttime="20210407 09:18:55.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.747" starttime="20210407 09:18:55.747"/>
</kw>
<status status="FAIL" endtime="20210407 09:18:55.748" starttime="20210407 09:18:52.586"/>
</kw>
<msg timestamp="20210407 09:18:55.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210407 09:18:55.749" starttime="20210407 09:18:52.586"/>
</kw>
<status status="FAIL" endtime="20210407 09:18:55.749" starttime="20210407 09:18:52.585"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.750" starttime="20210407 09:18:55.750"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.751" starttime="20210407 09:18:55.751"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.752" starttime="20210407 09:18:55.752"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.754" starttime="20210407 09:18:55.753"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.754" starttime="20210407 09:18:55.754"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.757" starttime="20210407 09:18:55.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.758" starttime="20210407 09:18:55.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.758" starttime="20210407 09:18:55.758"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.758" starttime="20210407 09:18:55.758"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.759" starttime="20210407 09:18:55.759"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.759" starttime="20210407 09:18:55.759"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.759" starttime="20210407 09:18:55.759"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.764" starttime="20210407 09:18:55.764"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.767" starttime="20210407 09:18:55.766"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.768" starttime="20210407 09:18:55.768"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.772" starttime="20210407 09:18:55.769"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.773" starttime="20210407 09:18:55.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.774" starttime="20210407 09:18:55.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.775" starttime="20210407 09:18:55.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.776" starttime="20210407 09:18:55.776"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.776" starttime="20210407 09:18:55.776"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.778" starttime="20210407 09:18:55.777"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.778" starttime="20210407 09:18:55.778"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.779" starttime="20210407 09:18:55.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.779" starttime="20210407 09:18:55.779"/>
</kw>
<status status="FAIL" endtime="20210407 09:18:55.784" starttime="20210407 09:15:42.201"/>
</kw>
<status status="FAIL" endtime="20210407 09:18:55.784" starttime="20210407 09:15:42.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.786" starttime="20210407 09:18:55.785"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.786" starttime="20210407 09:18:55.786"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.788" starttime="20210407 09:18:55.787"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.788" starttime="20210407 09:18:55.788"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.789" starttime="20210407 09:18:55.789"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.790" starttime="20210407 09:18:55.789"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.790" starttime="20210407 09:18:55.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.791" starttime="20210407 09:18:55.791"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.794" starttime="20210407 09:18:55.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.794" starttime="20210407 09:18:55.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.798" starttime="20210407 09:18:55.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.799" starttime="20210407 09:18:55.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.801" starttime="20210407 09:18:55.800"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.801" starttime="20210407 09:18:55.801"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.802" starttime="20210407 09:18:55.802"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.802" starttime="20210407 09:18:55.802"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.804" starttime="20210407 09:18:55.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.806" starttime="20210407 09:18:55.805"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.806" starttime="20210407 09:18:55.806"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.810" starttime="20210407 09:18:55.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.810" starttime="20210407 09:18:55.810"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.810" starttime="20210407 09:18:55.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.811" starttime="20210407 09:18:55.811"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210407 09:18:55.811" starttime="20210407 09:18:55.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.811" starttime="20210407 09:18:55.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210407 09:18:55.811" starttime="20210407 09:18:55.811"/>
</kw>
<status status="FAIL" endtime="20210407 09:18:55.812" starttime="20210407 09:13:56.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210407 09:18:55.812" starttime="20210407 09:13:55.742">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210407 09:18:55.823" starttime="20210407 08:53:41.480"/>
</suite>
<status status="FAIL" endtime="20210407 09:18:55.855" starttime="20210407 08:29:13.145"/>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:29:07.987" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:29:07.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:29:07.990" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210407 08:29:07.991" starttime="20210407 08:29:07.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:29:07.992" level="INFO">scm</msg>
<status status="PASS" endtime="20210407 08:29:07.992" starttime="20210407 08:29:07.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:29:07.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:29:07.993" starttime="20210407 08:29:07.992"/>
</kw>
<status status="PASS" endtime="20210407 08:29:07.994" starttime="20210407 08:29:07.983"/>
</kw>
<msg timestamp="20210407 08:29:07.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:29:07.994" starttime="20210407 08:29:07.982"/>
</kw>
<msg timestamp="20210407 08:29:07.994" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210407 08:29:07.994" starttime="20210407 08:29:07.982"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210407 08:29:07.995" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210407 08:29:07.995" starttime="20210407 08:29:07.994"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210407 08:29:07.999" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210407 08:29:08.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210407 08:29:08.006" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210407 08:29:08.007" starttime="20210407 08:29:07.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210407 08:29:08.008" level="INFO"/>
<status status="PASS" endtime="20210407 08:29:08.008" starttime="20210407 08:29:08.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210407 08:29:08.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210407 08:29:08.009" starttime="20210407 08:29:08.008"/>
</kw>
<status status="PASS" endtime="20210407 08:29:08.009" starttime="20210407 08:29:07.997"/>
</kw>
<msg timestamp="20210407 08:29:08.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210407 08:29:08.009" starttime="20210407 08:29:07.997"/>
</kw>
<status status="PASS" endtime="20210407 08:29:08.009" starttime="20210407 08:29:07.996"/>
</kw>
<status status="PASS" endtime="20210407 08:29:08.009" starttime="20210407 08:29:07.995"/>
</kw>
<status status="PASS" endtime="20210407 08:29:08.010" starttime="20210407 08:29:07.981"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210407 08:29:08.010" starttime="20210407 08:29:07.980"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210407 08:29:08.012" starttime="20210407 08:29:07.914"/>
</suite>
<status status="FAIL" elapsedtime="2982808" endtime="N/A" starttime="N/A"/>
</suite>
<statistics>
<total>
<stat fail="10" skip="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="10" skip="0" id="s1" name="ozonesecure" pass="20">ozonesecure</stat>
<stat fail="10" skip="0" id="s1-s1" name="Basic" pass="19">ozonesecure.Basic</stat>
<stat fail="1" skip="0" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="0" skip="0" id="s1-s1-s2" name="Getconf" pass="4">ozonesecure.Basic.Getconf</stat>
<stat fail="5" skip="0" id="s1-s1-s3" name="Links" pass="10">ozonesecure.Basic.Links</stat>
<stat fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell" pass="4">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" skip="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
