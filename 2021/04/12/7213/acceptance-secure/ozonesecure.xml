<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.1 (Python 3.6.9 on linux)" generated="20210412 02:52:29.460" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:03:20.452" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:03:20.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:03:20.454" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:03:20.447" endtime="20210412 02:03:20.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:03:20.455" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:03:20.455" endtime="20210412 02:03:20.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:03:20.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:03:20.456" endtime="20210412 02:03:20.456"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.447" endtime="20210412 02:03:20.457"/>
</kw>
<msg timestamp="20210412 02:03:20.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:03:20.446" endtime="20210412 02:03:20.457"/>
</kw>
<msg timestamp="20210412 02:03:20.457" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:03:20.446" endtime="20210412 02:03:20.457"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:03:20.461" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:03:20.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:03:20.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:03:20.459" endtime="20210412 02:03:20.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:03:20.469" level="INFO"/>
<status status="PASS" starttime="20210412 02:03:20.469" endtime="20210412 02:03:20.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:03:20.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:03:20.470" endtime="20210412 02:03:20.470"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.459" endtime="20210412 02:03:20.471"/>
</kw>
<msg timestamp="20210412 02:03:20.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:03:20.458" endtime="20210412 02:03:20.471"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.458" endtime="20210412 02:03:20.471"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.457" endtime="20210412 02:03:20.471"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.445" endtime="20210412 02:03:20.471"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.445" endtime="20210412 02:03:20.471"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:03:20.475" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:03:20.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:03:20.616" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210412 02:03:20.473" endtime="20210412 02:03:20.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:03:20.617" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 12 Apr 2021 02:03:20 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCR3TFC8Q0ohFrMk3QMCwWHRXAlwsQKBJMAPV20snIwkAUoMnbzCag8GfLPPau3T23WzG5o4wOokZJ2bAeRWEgLjiz
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1618229000606&amp;s=3uPCKq3kabOzpc0jd0Z9wgMr7/mU1lpKQ16d9uylkJY="; Path=/; HttpOnly
Last-Modified: Mon, 12 Apr 2021 00:50:56 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210412 02:03:20.617" endtime="20210412 02:03:20.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:03:20.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:03:20.618" endtime="20210412 02:03:20.619"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.472" endtime="20210412 02:03:20.619"/>
</kw>
<msg timestamp="20210412 02:03:20.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:03:20.472" endtime="20210412 02:03:20.620"/>
</kw>
<msg timestamp="20210412 02:03:20.620" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210412 02:03:20.472" endtime="20210412 02:03:20.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:03:20.620" endtime="20210412 02:03:20.621"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210412 02:03:20.444" endtime="20210412 02:03:20.621"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:03:20.629" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:03:20.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:03:20.632" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:03:20.627" endtime="20210412 02:03:20.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:03:20.633" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:03:20.633" endtime="20210412 02:03:20.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:03:20.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:03:20.634" endtime="20210412 02:03:20.634"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.626" endtime="20210412 02:03:20.635"/>
</kw>
<msg timestamp="20210412 02:03:20.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:03:20.626" endtime="20210412 02:03:20.635"/>
</kw>
<msg timestamp="20210412 02:03:20.635" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:03:20.625" endtime="20210412 02:03:20.635"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:03:20.637" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:03:20.635" endtime="20210412 02:03:20.637"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:03:20.641" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:03:20.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:03:20.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:03:20.639" endtime="20210412 02:03:20.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:03:20.650" level="INFO"/>
<status status="PASS" starttime="20210412 02:03:20.649" endtime="20210412 02:03:20.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:03:20.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:03:20.650" endtime="20210412 02:03:20.651"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.639" endtime="20210412 02:03:20.651"/>
</kw>
<msg timestamp="20210412 02:03:20.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:03:20.638" endtime="20210412 02:03:20.651"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.638" endtime="20210412 02:03:20.652"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.637" endtime="20210412 02:03:20.652"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.624" endtime="20210412 02:03:20.652"/>
</kw>
<status status="PASS" starttime="20210412 02:03:20.624" endtime="20210412 02:03:20.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:03:20.655" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:20.624" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210412 02:03:20.654" endtime="20210412 02:08:20.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210412 02:08:20.625" endtime="20210412 02:08:20.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210412 02:08:20.625" endtime="20210412 02:08:20.625"/>
</kw>
<status status="FAIL" starttime="20210412 02:03:20.653" endtime="20210412 02:08:20.626"/>
</kw>
<msg timestamp="20210412 02:08:20.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210412 02:03:20.653" endtime="20210412 02:08:20.626"/>
</kw>
<status status="FAIL" starttime="20210412 02:03:20.652" endtime="20210412 02:08:20.626"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210412 02:08:20.627" endtime="20210412 02:08:20.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:08:20.627" endtime="20210412 02:08:20.627"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210412 02:03:20.622" endtime="20210412 02:08:20.627">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210412 02:03:20.414" endtime="20210412 02:08:20.630"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:20.647" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:23.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:08:23.882" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210412 02:08:20.644" endtime="20210412 02:08:23.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:08:23.883" level="INFO">om</msg>
<status status="PASS" starttime="20210412 02:08:23.883" endtime="20210412 02:08:23.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:08:23.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:08:23.884" endtime="20210412 02:08:23.886"/>
</kw>
<status status="PASS" starttime="20210412 02:08:20.643" endtime="20210412 02:08:23.887"/>
</kw>
<msg timestamp="20210412 02:08:23.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:08:20.643" endtime="20210412 02:08:23.888"/>
</kw>
<msg timestamp="20210412 02:08:23.888" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210412 02:08:20.642" endtime="20210412 02:08:23.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:08:23.888" endtime="20210412 02:08:23.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:23.899" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:26.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:08:26.657" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210412 02:08:23.895" endtime="20210412 02:08:26.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:08:26.659" level="INFO">om</msg>
<status status="PASS" starttime="20210412 02:08:26.658" endtime="20210412 02:08:26.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:08:26.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:08:26.659" endtime="20210412 02:08:26.660"/>
</kw>
<status status="PASS" starttime="20210412 02:08:23.894" endtime="20210412 02:08:26.661"/>
</kw>
<msg timestamp="20210412 02:08:26.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:08:23.894" endtime="20210412 02:08:26.661"/>
</kw>
<msg timestamp="20210412 02:08:26.661" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210412 02:08:23.893" endtime="20210412 02:08:26.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:08:26.662" endtime="20210412 02:08:26.662"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210412 02:08:20.640" endtime="20210412 02:08:26.663"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:26.673" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:29.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:08:29.556" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:08:26.667" endtime="20210412 02:08:29.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:08:29.558" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:08:29.557" endtime="20210412 02:08:29.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:08:29.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:08:29.559" endtime="20210412 02:08:29.560"/>
</kw>
<status status="PASS" starttime="20210412 02:08:26.666" endtime="20210412 02:08:29.560"/>
</kw>
<msg timestamp="20210412 02:08:29.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:08:26.666" endtime="20210412 02:08:29.561"/>
</kw>
<msg timestamp="20210412 02:08:29.561" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210412 02:08:26.665" endtime="20210412 02:08:29.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:08:29.561" endtime="20210412 02:08:29.562"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:29.566" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:32.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:08:32.388" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:08:29.563" endtime="20210412 02:08:32.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:08:32.389" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:08:32.388" endtime="20210412 02:08:32.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:08:32.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:08:32.390" endtime="20210412 02:08:32.390"/>
</kw>
<status status="PASS" starttime="20210412 02:08:29.563" endtime="20210412 02:08:32.390"/>
</kw>
<msg timestamp="20210412 02:08:32.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:08:29.562" endtime="20210412 02:08:32.391"/>
</kw>
<msg timestamp="20210412 02:08:32.391" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210412 02:08:29.562" endtime="20210412 02:08:32.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:08:32.391" endtime="20210412 02:08:32.392"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210412 02:08:26.664" endtime="20210412 02:08:32.392"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:32.400" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:34.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:08:34.983" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210412 02:08:32.397" endtime="20210412 02:08:34.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:08:34.984" level="INFO">om</msg>
<status status="PASS" starttime="20210412 02:08:34.984" endtime="20210412 02:08:34.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:08:34.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:08:34.985" endtime="20210412 02:08:34.985"/>
</kw>
<status status="PASS" starttime="20210412 02:08:32.396" endtime="20210412 02:08:34.986"/>
</kw>
<msg timestamp="20210412 02:08:34.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:08:32.396" endtime="20210412 02:08:34.986"/>
</kw>
<msg timestamp="20210412 02:08:34.986" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210412 02:08:32.394" endtime="20210412 02:08:34.986"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:08:34.986" endtime="20210412 02:08:34.987"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:08:34.987" endtime="20210412 02:08:34.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:34.992" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:37.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:08:37.573" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210412 02:08:34.990" endtime="20210412 02:08:37.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:08:37.575" level="INFO">om</msg>
<status status="PASS" starttime="20210412 02:08:37.573" endtime="20210412 02:08:37.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:08:37.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:08:37.575" endtime="20210412 02:08:37.576"/>
</kw>
<status status="PASS" starttime="20210412 02:08:34.989" endtime="20210412 02:08:37.576"/>
</kw>
<msg timestamp="20210412 02:08:37.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:08:34.989" endtime="20210412 02:08:37.576"/>
</kw>
<msg timestamp="20210412 02:08:37.577" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210412 02:08:34.988" endtime="20210412 02:08:37.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:08:37.577" endtime="20210412 02:08:37.578"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:08:37.578" endtime="20210412 02:08:37.579"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210412 02:08:32.393" endtime="20210412 02:08:37.579"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:37.587" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:40.060" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:08:40.060" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210412 02:08:37.584" endtime="20210412 02:08:40.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:08:40.061" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210412 02:08:40.060" endtime="20210412 02:08:40.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:08:40.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:08:40.061" endtime="20210412 02:08:40.062"/>
</kw>
<msg timestamp="20210412 02:08:40.063" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210412 02:08:37.583" endtime="20210412 02:08:40.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:08:40.063" endtime="20210412 02:08:40.063"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:40.069" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:42.541" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:08:42.542" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210412 02:08:40.064" endtime="20210412 02:08:42.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:08:42.544" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210412 02:08:42.543" endtime="20210412 02:08:42.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:08:42.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:08:42.545" endtime="20210412 02:08:42.546"/>
</kw>
<msg timestamp="20210412 02:08:42.547" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210412 02:08:40.063" endtime="20210412 02:08:42.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:08:42.548" endtime="20210412 02:08:42.549"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210412 02:08:37.580" endtime="20210412 02:08:42.549"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210412 02:08:20.633" endtime="20210412 02:08:42.554"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210412 02:08:42.576" level="INFO">${random} = 73528</msg>
<status status="PASS" starttime="20210412 02:08:42.576" endtime="20210412 02:08:42.576"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:08:42.579" level="INFO">${source} = 73528-source</msg>
<status status="PASS" starttime="20210412 02:08:42.576" endtime="20210412 02:08:42.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:08:42.581" level="INFO">${target} = 73528-target</msg>
<status status="PASS" starttime="20210412 02:08:42.579" endtime="20210412 02:08:42.581"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:42.585" level="INFO">Running command 'ozone sh volume create 73528-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:48.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:08:48.662" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:08:42.583" endtime="20210412 02:08:48.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:08:48.663" level="INFO"/>
<status status="PASS" starttime="20210412 02:08:48.663" endtime="20210412 02:08:48.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:08:48.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:08:48.664" endtime="20210412 02:08:48.664"/>
</kw>
<status status="PASS" starttime="20210412 02:08:42.582" endtime="20210412 02:08:48.665"/>
</kw>
<msg timestamp="20210412 02:08:48.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:08:42.582" endtime="20210412 02:08:48.665"/>
</kw>
<status status="PASS" starttime="20210412 02:08:42.581" endtime="20210412 02:08:48.665"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:48.669" level="INFO">Running command 'ozone sh volume create 73528-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:08:54.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:08:54.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:08:48.667" endtime="20210412 02:08:54.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:08:54.054" level="INFO"/>
<status status="PASS" starttime="20210412 02:08:54.052" endtime="20210412 02:08:54.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:08:54.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:08:54.054" endtime="20210412 02:08:54.054"/>
</kw>
<status status="PASS" starttime="20210412 02:08:48.666" endtime="20210412 02:08:54.055"/>
</kw>
<msg timestamp="20210412 02:08:54.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:08:48.666" endtime="20210412 02:08:54.055"/>
</kw>
<status status="PASS" starttime="20210412 02:08:48.665" endtime="20210412 02:08:54.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:08:54.061" level="INFO">Running command 'ozone sh bucket create 73528-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:09:01.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:09:01.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:08:54.059" endtime="20210412 02:09:01.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:09:01.233" level="INFO"/>
<status status="PASS" starttime="20210412 02:09:01.232" endtime="20210412 02:09:01.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:09:01.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:09:01.233" endtime="20210412 02:09:01.234"/>
</kw>
<status status="PASS" starttime="20210412 02:08:54.058" endtime="20210412 02:09:01.234"/>
</kw>
<msg timestamp="20210412 02:09:01.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:08:54.057" endtime="20210412 02:09:01.235"/>
</kw>
<status status="PASS" starttime="20210412 02:08:54.056" endtime="20210412 02:09:01.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:09:01.241" level="INFO">Running command 'ozone sh key put 73528-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:12:11.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:12:11.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:09:01.237" endtime="20210412 02:12:11.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:12:11.836" level="INFO"/>
<status status="PASS" starttime="20210412 02:12:11.835" endtime="20210412 02:12:11.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:12:11.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:12:11.836" endtime="20210412 02:12:11.836"/>
</kw>
<status status="PASS" starttime="20210412 02:09:01.236" endtime="20210412 02:12:11.837"/>
</kw>
<msg timestamp="20210412 02:12:11.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:09:01.236" endtime="20210412 02:12:11.838"/>
</kw>
<status status="PASS" starttime="20210412 02:09:01.235" endtime="20210412 02:12:11.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:12:11.847" level="INFO">Running command 'ozone sh bucket create 73528-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:12:18.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:12:18.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:12:11.842" endtime="20210412 02:12:18.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:12:18.932" level="INFO"/>
<status status="PASS" starttime="20210412 02:12:18.931" endtime="20210412 02:12:18.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:12:18.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:12:18.933" endtime="20210412 02:12:18.934"/>
</kw>
<status status="PASS" starttime="20210412 02:12:11.841" endtime="20210412 02:12:18.934"/>
</kw>
<msg timestamp="20210412 02:12:18.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:12:11.840" endtime="20210412 02:12:18.935"/>
</kw>
<status status="PASS" starttime="20210412 02:12:11.839" endtime="20210412 02:12:18.935"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:12:18.941" level="INFO">Running command 'ozone sh bucket link 73528-source/readable-bucket 73528-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:12:26.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:12:26.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:12:18.938" endtime="20210412 02:12:26.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:12:26.693" level="INFO"/>
<status status="PASS" starttime="20210412 02:12:26.690" endtime="20210412 02:12:26.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:12:26.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:12:26.694" endtime="20210412 02:12:26.696"/>
</kw>
<status status="PASS" starttime="20210412 02:12:18.937" endtime="20210412 02:12:26.697"/>
</kw>
<msg timestamp="20210412 02:12:26.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:12:18.937" endtime="20210412 02:12:26.697"/>
</kw>
<status status="PASS" starttime="20210412 02:12:18.935" endtime="20210412 02:12:26.698"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:12:26.705" level="INFO">Running command 'ozone sh bucket link 73528-source/readable-bucket 73528-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:12:32.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:12:32.624" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:12:26.701" endtime="20210412 02:12:32.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:12:32.628" level="INFO"/>
<status status="PASS" starttime="20210412 02:12:32.626" endtime="20210412 02:12:32.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:12:32.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:12:32.628" endtime="20210412 02:12:32.629"/>
</kw>
<status status="PASS" starttime="20210412 02:12:26.700" endtime="20210412 02:12:32.630"/>
</kw>
<msg timestamp="20210412 02:12:32.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:12:26.699" endtime="20210412 02:12:32.630"/>
</kw>
<status status="PASS" starttime="20210412 02:12:26.698" endtime="20210412 02:12:32.630"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:12:32.636" level="INFO">Running command 'ozone sh bucket link 73528-source/unreadable-bucket 73528-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:12:39.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:12:39.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:12:32.632" endtime="20210412 02:12:39.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:12:39.764" level="INFO"/>
<status status="PASS" starttime="20210412 02:12:39.764" endtime="20210412 02:12:39.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:12:39.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:12:39.766" endtime="20210412 02:12:39.767"/>
</kw>
<status status="PASS" starttime="20210412 02:12:32.632" endtime="20210412 02:12:39.767"/>
</kw>
<msg timestamp="20210412 02:12:39.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:12:32.631" endtime="20210412 02:12:39.767"/>
</kw>
<status status="PASS" starttime="20210412 02:12:32.631" endtime="20210412 02:12:39.767"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:12:39.774" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 73528-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:12:46.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:12:46.592" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:12:39.770" endtime="20210412 02:12:46.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:12:46.594" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:12:46.593" endtime="20210412 02:12:46.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:12:46.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:12:46.594" endtime="20210412 02:12:46.594"/>
</kw>
<status status="PASS" starttime="20210412 02:12:39.770" endtime="20210412 02:12:46.595"/>
</kw>
<msg timestamp="20210412 02:12:46.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:12:39.769" endtime="20210412 02:12:46.595"/>
</kw>
<status status="PASS" starttime="20210412 02:12:39.768" endtime="20210412 02:12:46.596"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:12:46.600" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 73528-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:12:53.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:12:53.005" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:12:46.598" endtime="20210412 02:12:53.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:12:53.007" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:12:53.006" endtime="20210412 02:12:53.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:12:53.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:12:53.007" endtime="20210412 02:12:53.008"/>
</kw>
<status status="PASS" starttime="20210412 02:12:46.597" endtime="20210412 02:12:53.008"/>
</kw>
<msg timestamp="20210412 02:12:53.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:12:46.597" endtime="20210412 02:12:53.009"/>
</kw>
<status status="PASS" starttime="20210412 02:12:46.596" endtime="20210412 02:12:53.009"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:12:53.014" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 73528-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:12:59.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:12:59.261" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:12:53.011" endtime="20210412 02:12:59.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:12:59.262" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:12:59.262" endtime="20210412 02:12:59.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:12:59.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:12:59.263" endtime="20210412 02:12:59.263"/>
</kw>
<status status="PASS" starttime="20210412 02:12:53.010" endtime="20210412 02:12:59.265"/>
</kw>
<msg timestamp="20210412 02:12:59.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:12:53.010" endtime="20210412 02:12:59.265"/>
</kw>
<status status="PASS" starttime="20210412 02:12:53.009" endtime="20210412 02:12:59.266"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:12:59.274" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 73528-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:13:05.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:13:05.116" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:12:59.268" endtime="20210412 02:13:05.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:13:05.117" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:13:05.116" endtime="20210412 02:13:05.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:13:05.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:13:05.118" endtime="20210412 02:13:05.118"/>
</kw>
<status status="PASS" starttime="20210412 02:12:59.267" endtime="20210412 02:13:05.119"/>
</kw>
<msg timestamp="20210412 02:13:05.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:12:59.266" endtime="20210412 02:13:05.119"/>
</kw>
<status status="PASS" starttime="20210412 02:12:59.266" endtime="20210412 02:13:05.119"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:13:05.127" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 73528-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:13:10.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:13:10.698" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:13:05.122" endtime="20210412 02:13:10.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:13:10.700" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:13:10.699" endtime="20210412 02:13:10.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:13:10.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:13:10.700" endtime="20210412 02:13:10.701"/>
</kw>
<status status="PASS" starttime="20210412 02:13:05.120" endtime="20210412 02:13:10.701"/>
</kw>
<msg timestamp="20210412 02:13:10.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:13:05.120" endtime="20210412 02:13:10.701"/>
</kw>
<status status="PASS" starttime="20210412 02:13:05.119" endtime="20210412 02:13:10.701"/>
</kw>
<status status="PASS" starttime="20210412 02:08:54.056" endtime="20210412 02:13:10.702"/>
</kw>
<status status="PASS" starttime="20210412 02:08:54.056" endtime="20210412 02:13:10.702"/>
</kw>
<status status="PASS" starttime="20210412 02:08:42.575" endtime="20210412 02:13:10.703"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:13:10.709" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:13:10.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:13:10.712" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:13:10.706" endtime="20210412 02:13:10.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:13:10.713" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:13:10.712" endtime="20210412 02:13:10.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:13:10.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:13:10.713" endtime="20210412 02:13:10.714"/>
</kw>
<status status="PASS" starttime="20210412 02:13:10.706" endtime="20210412 02:13:10.715"/>
</kw>
<msg timestamp="20210412 02:13:10.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:13:10.706" endtime="20210412 02:13:10.715"/>
</kw>
<msg timestamp="20210412 02:13:10.715" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:13:10.705" endtime="20210412 02:13:10.715"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:13:10.717" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:13:10.715" endtime="20210412 02:13:10.717"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:13:10.725" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:13:10.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:13:10.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:13:10.723" endtime="20210412 02:13:10.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:13:10.946" level="INFO"/>
<status status="PASS" starttime="20210412 02:13:10.945" endtime="20210412 02:13:10.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:13:10.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:13:10.946" endtime="20210412 02:13:10.947"/>
</kw>
<status status="PASS" starttime="20210412 02:13:10.723" endtime="20210412 02:13:10.947"/>
</kw>
<msg timestamp="20210412 02:13:10.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:13:10.722" endtime="20210412 02:13:10.948"/>
</kw>
<status status="PASS" starttime="20210412 02:13:10.721" endtime="20210412 02:13:10.948"/>
</kw>
<status status="PASS" starttime="20210412 02:13:10.721" endtime="20210412 02:13:10.948"/>
</kw>
<status status="PASS" starttime="20210412 02:13:10.705" endtime="20210412 02:13:10.948"/>
</kw>
<status status="PASS" starttime="20210412 02:13:10.704" endtime="20210412 02:13:10.949"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:13:10.953" level="INFO">Running command 'ozone sh bucket link 73528-source/no-such-bucket 73528-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:13:17.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:13:17.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:13:10.950" endtime="20210412 02:13:17.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:13:17.439" level="INFO"/>
<status status="PASS" starttime="20210412 02:13:17.438" endtime="20210412 02:13:17.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:13:17.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:13:17.440" endtime="20210412 02:13:17.440"/>
</kw>
<status status="PASS" starttime="20210412 02:13:10.950" endtime="20210412 02:13:17.441"/>
</kw>
<msg timestamp="20210412 02:13:17.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:13:10.949" endtime="20210412 02:13:17.441"/>
</kw>
<status status="PASS" starttime="20210412 02:13:10.949" endtime="20210412 02:13:17.442"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:13:17.448" level="INFO">Running command 'ozone sh key list 73528-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:13:24.122" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:13:24.123" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210412 02:13:17.444" endtime="20210412 02:13:24.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:13:24.125" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210412 02:13:24.124" endtime="20210412 02:13:24.126"/>
</kw>
<msg timestamp="20210412 02:13:24.126" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210412 02:13:17.442" endtime="20210412 02:13:24.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:13:24.127" endtime="20210412 02:13:24.128"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:13:10.703" endtime="20210412 02:13:24.128"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:13:24.139" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:13:24.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:13:24.143" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:13:24.135" endtime="20210412 02:13:24.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:13:24.145" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:13:24.144" endtime="20210412 02:13:24.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:13:24.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:13:24.145" endtime="20210412 02:13:24.146"/>
</kw>
<status status="PASS" starttime="20210412 02:13:24.134" endtime="20210412 02:13:24.146"/>
</kw>
<msg timestamp="20210412 02:13:24.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:13:24.134" endtime="20210412 02:13:24.146"/>
</kw>
<msg timestamp="20210412 02:13:24.147" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:13:24.133" endtime="20210412 02:13:24.147"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:13:24.148" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:13:24.147" endtime="20210412 02:13:24.148"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:13:24.153" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:13:24.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:13:24.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:13:24.151" endtime="20210412 02:13:24.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:13:24.165" level="INFO"/>
<status status="PASS" starttime="20210412 02:13:24.164" endtime="20210412 02:13:24.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:13:24.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:13:24.165" endtime="20210412 02:13:24.166"/>
</kw>
<status status="PASS" starttime="20210412 02:13:24.150" endtime="20210412 02:13:24.167"/>
</kw>
<msg timestamp="20210412 02:13:24.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:13:24.150" endtime="20210412 02:13:24.167"/>
</kw>
<status status="PASS" starttime="20210412 02:13:24.149" endtime="20210412 02:13:24.167"/>
</kw>
<status status="PASS" starttime="20210412 02:13:24.148" endtime="20210412 02:13:24.168"/>
</kw>
<status status="PASS" starttime="20210412 02:13:24.132" endtime="20210412 02:13:24.168"/>
</kw>
<status status="PASS" starttime="20210412 02:13:24.132" endtime="20210412 02:13:24.168"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:13:24.175" level="INFO">Running command 'ozone sh bucket link 73528-source/bucket1 73528-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:13:31.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:13:31.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:13:24.172" endtime="20210412 02:13:31.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:13:31.180" level="INFO"/>
<status status="PASS" starttime="20210412 02:13:31.177" endtime="20210412 02:13:31.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:13:31.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:13:31.180" endtime="20210412 02:13:31.181"/>
</kw>
<status status="PASS" starttime="20210412 02:13:24.170" endtime="20210412 02:13:31.182"/>
</kw>
<msg timestamp="20210412 02:13:31.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:13:24.169" endtime="20210412 02:13:31.183"/>
</kw>
<status status="PASS" starttime="20210412 02:13:24.168" endtime="20210412 02:13:31.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:13:31.191" level="INFO">Running command 'ozone sh bucket create 73528-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:13:37.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:13:37.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:13:31.187" endtime="20210412 02:13:37.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:13:37.840" level="INFO"/>
<status status="PASS" starttime="20210412 02:13:37.839" endtime="20210412 02:13:37.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:13:37.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:13:37.841" endtime="20210412 02:13:37.842"/>
</kw>
<status status="PASS" starttime="20210412 02:13:31.186" endtime="20210412 02:13:37.844"/>
</kw>
<msg timestamp="20210412 02:13:37.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:13:31.185" endtime="20210412 02:13:37.844"/>
</kw>
<status status="PASS" starttime="20210412 02:13:31.184" endtime="20210412 02:13:37.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:13:37.851" level="INFO">Running command 'ozone sh key put 73528-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:15:24.131" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210412 02:13:37.849" endtime="20210412 02:15:24.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210412 02:15:24.133" endtime="20210412 02:15:24.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210412 02:15:24.133" endtime="20210412 02:15:24.133"/>
</kw>
<status status="FAIL" starttime="20210412 02:13:37.846" endtime="20210412 02:15:24.133"/>
</kw>
<msg timestamp="20210412 02:15:24.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210412 02:13:37.846" endtime="20210412 02:15:24.134"/>
</kw>
<status status="FAIL" starttime="20210412 02:13:37.844" endtime="20210412 02:15:24.134"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210412 02:15:24.134" endtime="20210412 02:15:24.134"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210412 02:13:24.130" endtime="20210412 02:15:24.135">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:15:24.142" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:15:24.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:15:24.146" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:15:24.140" endtime="20210412 02:15:24.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:15:24.148" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:15:24.147" endtime="20210412 02:15:24.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:15:24.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:15:24.149" endtime="20210412 02:15:24.150"/>
</kw>
<status status="PASS" starttime="20210412 02:15:24.139" endtime="20210412 02:15:24.151"/>
</kw>
<msg timestamp="20210412 02:15:24.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:15:24.139" endtime="20210412 02:15:24.151"/>
</kw>
<msg timestamp="20210412 02:15:24.152" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:15:24.138" endtime="20210412 02:15:24.152"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:15:24.154" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:15:24.153" endtime="20210412 02:15:24.154"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:15:24.163" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:15:24.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:15:24.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:15:24.160" endtime="20210412 02:15:24.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:15:24.175" level="INFO"/>
<status status="PASS" starttime="20210412 02:15:24.174" endtime="20210412 02:15:24.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:15:24.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:15:24.175" endtime="20210412 02:15:24.176"/>
</kw>
<status status="PASS" starttime="20210412 02:15:24.158" endtime="20210412 02:15:24.176"/>
</kw>
<msg timestamp="20210412 02:15:24.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:15:24.157" endtime="20210412 02:15:24.176"/>
</kw>
<status status="PASS" starttime="20210412 02:15:24.156" endtime="20210412 02:15:24.177"/>
</kw>
<status status="PASS" starttime="20210412 02:15:24.155" endtime="20210412 02:15:24.177"/>
</kw>
<status status="PASS" starttime="20210412 02:15:24.137" endtime="20210412 02:15:24.177"/>
</kw>
<status status="PASS" starttime="20210412 02:15:24.137" endtime="20210412 02:15:24.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:15:24.183" level="INFO">Running command 'ozone sh key put 73528-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:24.136" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210412 02:15:24.180" endtime="20210412 02:17:24.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210412 02:17:24.138" endtime="20210412 02:17:24.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210412 02:17:24.138" endtime="20210412 02:17:24.138"/>
</kw>
<status status="FAIL" starttime="20210412 02:15:24.179" endtime="20210412 02:17:24.138"/>
</kw>
<msg timestamp="20210412 02:17:24.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210412 02:15:24.179" endtime="20210412 02:17:24.139"/>
</kw>
<status status="FAIL" starttime="20210412 02:15:24.177" endtime="20210412 02:17:24.139"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210412 02:17:24.139" endtime="20210412 02:17:24.139"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210412 02:15:24.135" endtime="20210412 02:17:24.140">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:24.147" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:24.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:24.151" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:17:24.145" endtime="20210412 02:17:24.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:24.155" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:17:24.154" endtime="20210412 02:17:24.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:24.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:24.155" endtime="20210412 02:17:24.156"/>
</kw>
<status status="PASS" starttime="20210412 02:17:24.144" endtime="20210412 02:17:24.156"/>
</kw>
<msg timestamp="20210412 02:17:24.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:24.144" endtime="20210412 02:17:24.157"/>
</kw>
<msg timestamp="20210412 02:17:24.157" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:17:24.143" endtime="20210412 02:17:24.157"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:17:24.158" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:17:24.158" endtime="20210412 02:17:24.158"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:24.165" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:24.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:24.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:17:24.162" endtime="20210412 02:17:24.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:24.178" level="INFO"/>
<status status="PASS" starttime="20210412 02:17:24.176" endtime="20210412 02:17:24.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:24.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:24.178" endtime="20210412 02:17:24.179"/>
</kw>
<status status="PASS" starttime="20210412 02:17:24.161" endtime="20210412 02:17:24.180"/>
</kw>
<msg timestamp="20210412 02:17:24.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:24.161" endtime="20210412 02:17:24.180"/>
</kw>
<status status="PASS" starttime="20210412 02:17:24.160" endtime="20210412 02:17:24.180"/>
</kw>
<status status="PASS" starttime="20210412 02:17:24.159" endtime="20210412 02:17:24.180"/>
</kw>
<status status="PASS" starttime="20210412 02:17:24.142" endtime="20210412 02:17:24.181"/>
</kw>
<status status="PASS" starttime="20210412 02:17:24.141" endtime="20210412 02:17:24.181"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:24.187" level="INFO">Running command 'ozone sh key list 73528-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:31.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:31.404" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210412 02:17:24.185" endtime="20210412 02:17:31.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:31.406" level="INFO">key1</msg>
<status status="PASS" starttime="20210412 02:17:31.405" endtime="20210412 02:17:31.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:31.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:31.406" endtime="20210412 02:17:31.407"/>
</kw>
<status status="PASS" starttime="20210412 02:17:24.183" endtime="20210412 02:17:31.408"/>
</kw>
<msg timestamp="20210412 02:17:31.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:24.183" endtime="20210412 02:17:31.408"/>
</kw>
<msg timestamp="20210412 02:17:31.408" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210412 02:17:24.181" endtime="20210412 02:17:31.408"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:31.413" level="INFO">Running command 'ozone sh key list 73528-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:38.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:38.605" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210412 02:17:31.410" endtime="20210412 02:17:38.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:38.607" level="INFO">key1</msg>
<status status="PASS" starttime="20210412 02:17:38.606" endtime="20210412 02:17:38.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:38.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:38.608" endtime="20210412 02:17:38.609"/>
</kw>
<status status="PASS" starttime="20210412 02:17:31.409" endtime="20210412 02:17:38.610"/>
</kw>
<msg timestamp="20210412 02:17:38.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:31.409" endtime="20210412 02:17:38.610"/>
</kw>
<msg timestamp="20210412 02:17:38.611" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210412 02:17:31.408" endtime="20210412 02:17:38.611"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:17:38.612" endtime="20210412 02:17:38.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:17:38.613" endtime="20210412 02:17:38.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210412 02:17:38.616" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210412 02:17:38.615" endtime="20210412 02:17:38.616"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210412 02:17:24.141" endtime="20210412 02:17:38.617">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:38.629" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:38.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:38.632" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:17:38.625" endtime="20210412 02:17:38.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:38.635" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:17:38.633" endtime="20210412 02:17:38.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:38.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:38.635" endtime="20210412 02:17:38.637"/>
</kw>
<status status="PASS" starttime="20210412 02:17:38.624" endtime="20210412 02:17:38.638"/>
</kw>
<msg timestamp="20210412 02:17:38.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:38.624" endtime="20210412 02:17:38.638"/>
</kw>
<msg timestamp="20210412 02:17:38.639" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:17:38.623" endtime="20210412 02:17:38.639"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:17:38.640" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:17:38.639" endtime="20210412 02:17:38.640"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:38.647" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:38.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:38.657" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:17:38.645" endtime="20210412 02:17:38.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:38.659" level="INFO"/>
<status status="PASS" starttime="20210412 02:17:38.658" endtime="20210412 02:17:38.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:38.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:38.659" endtime="20210412 02:17:38.660"/>
</kw>
<status status="PASS" starttime="20210412 02:17:38.644" endtime="20210412 02:17:38.661"/>
</kw>
<msg timestamp="20210412 02:17:38.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:38.643" endtime="20210412 02:17:38.661"/>
</kw>
<status status="PASS" starttime="20210412 02:17:38.642" endtime="20210412 02:17:38.661"/>
</kw>
<status status="PASS" starttime="20210412 02:17:38.641" endtime="20210412 02:17:38.661"/>
</kw>
<status status="PASS" starttime="20210412 02:17:38.622" endtime="20210412 02:17:38.662"/>
</kw>
<status status="PASS" starttime="20210412 02:17:38.620" endtime="20210412 02:17:38.662"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:38.666" level="INFO">Running command 'ozone sh key delete 73528-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:44.906" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:17:44.907" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210412 02:17:38.664" endtime="20210412 02:17:44.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:44.909" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210412 02:17:44.907" endtime="20210412 02:17:44.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:44.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210412 02:17:44.911" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210412 02:17:44.910" endtime="20210412 02:17:44.911"/>
</kw>
<status status="FAIL" starttime="20210412 02:17:38.663" endtime="20210412 02:17:44.911"/>
</kw>
<msg timestamp="20210412 02:17:44.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210412 02:17:38.663" endtime="20210412 02:17:44.911"/>
</kw>
<status status="FAIL" starttime="20210412 02:17:38.662" endtime="20210412 02:17:44.912"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210412 02:17:44.912" endtime="20210412 02:17:44.912"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:17:44.912" endtime="20210412 02:17:44.913"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210412 02:17:38.618" endtime="20210412 02:17:44.913">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:44.925" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:44.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:44.928" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:17:44.921" endtime="20210412 02:17:44.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:44.930" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:17:44.929" endtime="20210412 02:17:44.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:44.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:44.931" endtime="20210412 02:17:44.932"/>
</kw>
<status status="PASS" starttime="20210412 02:17:44.919" endtime="20210412 02:17:44.933"/>
</kw>
<msg timestamp="20210412 02:17:44.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:44.918" endtime="20210412 02:17:44.933"/>
</kw>
<msg timestamp="20210412 02:17:44.933" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:17:44.917" endtime="20210412 02:17:44.933"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:17:44.934" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:17:44.934" endtime="20210412 02:17:44.934"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:44.940" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:44.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:44.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:17:44.937" endtime="20210412 02:17:44.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:44.950" level="INFO"/>
<status status="PASS" starttime="20210412 02:17:44.949" endtime="20210412 02:17:44.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:44.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:44.950" endtime="20210412 02:17:44.951"/>
</kw>
<status status="PASS" starttime="20210412 02:17:44.936" endtime="20210412 02:17:44.952"/>
</kw>
<msg timestamp="20210412 02:17:44.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:44.936" endtime="20210412 02:17:44.952"/>
</kw>
<status status="PASS" starttime="20210412 02:17:44.935" endtime="20210412 02:17:44.952"/>
</kw>
<status status="PASS" starttime="20210412 02:17:44.935" endtime="20210412 02:17:44.952"/>
</kw>
<status status="PASS" starttime="20210412 02:17:44.916" endtime="20210412 02:17:44.953"/>
</kw>
<status status="PASS" starttime="20210412 02:17:44.915" endtime="20210412 02:17:44.953"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:44.958" level="INFO">Running command 'ozone sh bucket list 73528-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:52.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:52.047" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210412 02:17:44.955" endtime="20210412 02:17:52.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:52.048" level="INFO">{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:13:17.298Z",
  "modificationTime" : "2021-04-12T02:13:17.298Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:12:39.484Z",
  "modificationTime" : "2021-04-12T02:13:10.475Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:13:31.083Z",
  "modificationTime" : "2021-04-12T02:13:31.083Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:12:26.272Z",
  "modificationTime" : "2021-04-12T02:13:04.967Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:12:32.526Z",
  "modificationTime" : "2021-04-12T02:12:32.526Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210412 02:17:52.047" endtime="20210412 02:17:52.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:52.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:52.048" endtime="20210412 02:17:52.049"/>
</kw>
<status status="PASS" starttime="20210412 02:17:44.954" endtime="20210412 02:17:52.049"/>
</kw>
<msg timestamp="20210412 02:17:52.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:44.954" endtime="20210412 02:17:52.049"/>
</kw>
<msg timestamp="20210412 02:17:52.050" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210412 02:17:44.953" endtime="20210412 02:17:52.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:17:52.050" endtime="20210412 02:17:52.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:17:52.051" endtime="20210412 02:17:52.051"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:17:44.914" endtime="20210412 02:17:52.051"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:52.065" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:52.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:52.068" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:17:52.061" endtime="20210412 02:17:52.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:52.070" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:17:52.069" endtime="20210412 02:17:52.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:52.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:52.071" endtime="20210412 02:17:52.072"/>
</kw>
<status status="PASS" starttime="20210412 02:17:52.060" endtime="20210412 02:17:52.073"/>
</kw>
<msg timestamp="20210412 02:17:52.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:52.059" endtime="20210412 02:17:52.073"/>
</kw>
<msg timestamp="20210412 02:17:52.074" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:17:52.058" endtime="20210412 02:17:52.074"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:17:52.075" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:17:52.074" endtime="20210412 02:17:52.075"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:52.081" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:52.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:52.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:17:52.078" endtime="20210412 02:17:52.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:52.098" level="INFO"/>
<status status="PASS" starttime="20210412 02:17:52.097" endtime="20210412 02:17:52.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:52.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:52.098" endtime="20210412 02:17:52.098"/>
</kw>
<status status="PASS" starttime="20210412 02:17:52.077" endtime="20210412 02:17:52.099"/>
</kw>
<msg timestamp="20210412 02:17:52.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:52.077" endtime="20210412 02:17:52.099"/>
</kw>
<status status="PASS" starttime="20210412 02:17:52.075" endtime="20210412 02:17:52.099"/>
</kw>
<status status="PASS" starttime="20210412 02:17:52.075" endtime="20210412 02:17:52.099"/>
</kw>
<status status="PASS" starttime="20210412 02:17:52.056" endtime="20210412 02:17:52.099"/>
</kw>
<status status="PASS" starttime="20210412 02:17:52.055" endtime="20210412 02:17:52.100"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:52.106" level="INFO">Running command 'ozone sh bucket info 73528-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:59.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:59.774" level="INFO">${output} = 73528-source bucket1</msg>
<status status="PASS" starttime="20210412 02:17:52.103" endtime="20210412 02:17:59.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:59.776" level="INFO">73528-source bucket1</msg>
<status status="PASS" starttime="20210412 02:17:59.775" endtime="20210412 02:17:59.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:59.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:59.776" endtime="20210412 02:17:59.778"/>
</kw>
<status status="PASS" starttime="20210412 02:17:52.102" endtime="20210412 02:17:59.779"/>
</kw>
<msg timestamp="20210412 02:17:59.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:52.101" endtime="20210412 02:17:59.779"/>
</kw>
<msg timestamp="20210412 02:17:59.780" level="INFO">${result} = 73528-source bucket1</msg>
<status status="PASS" starttime="20210412 02:17:52.100" endtime="20210412 02:17:59.780"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:17:59.781" endtime="20210412 02:17:59.781"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:17:52.053" endtime="20210412 02:17:59.782"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:59.794" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:59.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:59.798" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:17:59.790" endtime="20210412 02:17:59.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:59.800" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:17:59.798" endtime="20210412 02:17:59.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:59.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:59.801" endtime="20210412 02:17:59.801"/>
</kw>
<status status="PASS" starttime="20210412 02:17:59.788" endtime="20210412 02:17:59.802"/>
</kw>
<msg timestamp="20210412 02:17:59.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:59.788" endtime="20210412 02:17:59.802"/>
</kw>
<msg timestamp="20210412 02:17:59.802" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:17:59.787" endtime="20210412 02:17:59.802"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:17:59.803" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:17:59.803" endtime="20210412 02:17:59.803"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:59.810" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:17:59.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:17:59.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:17:59.807" endtime="20210412 02:17:59.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:17:59.821" level="INFO"/>
<status status="PASS" starttime="20210412 02:17:59.820" endtime="20210412 02:17:59.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:17:59.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:17:59.822" endtime="20210412 02:17:59.822"/>
</kw>
<status status="PASS" starttime="20210412 02:17:59.806" endtime="20210412 02:17:59.823"/>
</kw>
<msg timestamp="20210412 02:17:59.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:59.806" endtime="20210412 02:17:59.823"/>
</kw>
<status status="PASS" starttime="20210412 02:17:59.804" endtime="20210412 02:17:59.823"/>
</kw>
<status status="PASS" starttime="20210412 02:17:59.804" endtime="20210412 02:17:59.823"/>
</kw>
<status status="PASS" starttime="20210412 02:17:59.786" endtime="20210412 02:17:59.824"/>
</kw>
<status status="PASS" starttime="20210412 02:17:59.785" endtime="20210412 02:17:59.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:17:59.829" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 73528-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:06.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:18:06.873" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:17:59.827" endtime="20210412 02:18:06.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:06.874" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:18:06.873" endtime="20210412 02:18:06.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:18:06.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:18:06.874" endtime="20210412 02:18:06.875"/>
</kw>
<status status="PASS" starttime="20210412 02:17:59.826" endtime="20210412 02:18:06.875"/>
</kw>
<msg timestamp="20210412 02:18:06.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:17:59.826" endtime="20210412 02:18:06.876"/>
</kw>
<status status="PASS" starttime="20210412 02:17:59.824" endtime="20210412 02:18:06.876"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:06.882" level="INFO">Running command 'ozone sh bucket getacl 73528-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:14.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:18:14.214" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210412 02:18:06.879" endtime="20210412 02:18:14.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:14.218" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210412 02:18:14.215" endtime="20210412 02:18:14.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:18:14.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:18:14.219" endtime="20210412 02:18:14.219"/>
</kw>
<status status="PASS" starttime="20210412 02:18:06.878" endtime="20210412 02:18:14.220"/>
</kw>
<msg timestamp="20210412 02:18:14.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:18:06.878" endtime="20210412 02:18:14.220"/>
</kw>
<msg timestamp="20210412 02:18:14.220" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210412 02:18:06.877" endtime="20210412 02:18:14.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:18:14.221" endtime="20210412 02:18:14.221"/>
</kw>
<status status="PASS" starttime="20210412 02:18:06.876" endtime="20210412 02:18:14.221"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:14.231" level="INFO">Running command 'ozone sh bucket getacl 73528-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:18.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:18:18.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:18:14.226" endtime="20210412 02:18:18.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:18.720" level="INFO"/>
<status status="PASS" starttime="20210412 02:18:18.720" endtime="20210412 02:18:18.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:18:18.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:18:18.721" endtime="20210412 02:18:18.721"/>
</kw>
<status status="PASS" starttime="20210412 02:18:14.225" endtime="20210412 02:18:18.722"/>
</kw>
<msg timestamp="20210412 02:18:18.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:18:14.225" endtime="20210412 02:18:18.722"/>
</kw>
<msg timestamp="20210412 02:18:18.722" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210412 02:18:14.223" endtime="20210412 02:18:18.722"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:18:18.722" endtime="20210412 02:18:18.723"/>
</kw>
<status status="PASS" starttime="20210412 02:18:14.222" endtime="20210412 02:18:18.723"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:18.729" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 73528-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:24.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:18:24.102" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:18:18.727" endtime="20210412 02:18:24.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:24.104" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:18:24.103" endtime="20210412 02:18:24.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:18:24.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:18:24.105" endtime="20210412 02:18:24.108"/>
</kw>
<status status="PASS" starttime="20210412 02:18:18.724" endtime="20210412 02:18:24.109"/>
</kw>
<msg timestamp="20210412 02:18:24.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:18:18.724" endtime="20210412 02:18:24.110"/>
</kw>
<status status="PASS" starttime="20210412 02:18:18.723" endtime="20210412 02:18:24.110"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:24.122" level="INFO">Running command 'ozone sh bucket getacl 73528-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:31.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:18:31.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:18:24.117" endtime="20210412 02:18:31.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:31.163" level="INFO"/>
<status status="PASS" starttime="20210412 02:18:31.162" endtime="20210412 02:18:31.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:18:31.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:18:31.164" endtime="20210412 02:18:31.166"/>
</kw>
<status status="PASS" starttime="20210412 02:18:24.116" endtime="20210412 02:18:31.166"/>
</kw>
<msg timestamp="20210412 02:18:31.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:18:24.116" endtime="20210412 02:18:31.167"/>
</kw>
<msg timestamp="20210412 02:18:31.168" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210412 02:18:24.113" endtime="20210412 02:18:31.168"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:18:31.168" endtime="20210412 02:18:31.169"/>
</kw>
<status status="PASS" starttime="20210412 02:18:24.111" endtime="20210412 02:18:31.170"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:31.177" level="INFO">Running command 'ozone sh bucket getacl 73528-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:38.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:18:38.836" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210412 02:18:31.174" endtime="20210412 02:18:38.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:38.838" level="INFO">READ</msg>
<status status="PASS" starttime="20210412 02:18:38.837" endtime="20210412 02:18:38.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:18:38.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:18:38.838" endtime="20210412 02:18:38.839"/>
</kw>
<status status="PASS" starttime="20210412 02:18:31.173" endtime="20210412 02:18:38.839"/>
</kw>
<msg timestamp="20210412 02:18:38.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:18:31.172" endtime="20210412 02:18:38.839"/>
</kw>
<msg timestamp="20210412 02:18:38.840" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210412 02:18:31.171" endtime="20210412 02:18:38.840"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:18:38.840" endtime="20210412 02:18:38.840"/>
</kw>
<status status="PASS" starttime="20210412 02:18:31.170" endtime="20210412 02:18:38.841"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:17:59.783" endtime="20210412 02:18:38.841"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:38.849" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:38.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:18:38.855" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:18:38.846" endtime="20210412 02:18:38.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:38.856" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:18:38.855" endtime="20210412 02:18:38.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:18:38.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:18:38.856" endtime="20210412 02:18:38.857"/>
</kw>
<status status="PASS" starttime="20210412 02:18:38.846" endtime="20210412 02:18:38.857"/>
</kw>
<msg timestamp="20210412 02:18:38.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:18:38.846" endtime="20210412 02:18:38.857"/>
</kw>
<msg timestamp="20210412 02:18:38.857" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:18:38.845" endtime="20210412 02:18:38.857"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:18:38.858" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:18:38.857" endtime="20210412 02:18:38.858"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:38.864" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:39.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:18:39.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:18:38.861" endtime="20210412 02:18:39.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:39.045" level="INFO"/>
<status status="PASS" starttime="20210412 02:18:39.045" endtime="20210412 02:18:39.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:18:39.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:18:39.046" endtime="20210412 02:18:39.046"/>
</kw>
<status status="PASS" starttime="20210412 02:18:38.861" endtime="20210412 02:18:39.047"/>
</kw>
<msg timestamp="20210412 02:18:39.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:18:38.860" endtime="20210412 02:18:39.047"/>
</kw>
<status status="PASS" starttime="20210412 02:18:38.859" endtime="20210412 02:18:39.047"/>
</kw>
<status status="PASS" starttime="20210412 02:18:38.858" endtime="20210412 02:18:39.047"/>
</kw>
<status status="PASS" starttime="20210412 02:18:38.845" endtime="20210412 02:18:39.047"/>
</kw>
<status status="PASS" starttime="20210412 02:18:38.843" endtime="20210412 02:18:39.047"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:39.052" level="INFO">Running command 'ozone sh bucket link 73528-source/bucket2 73528-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:45.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:18:45.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:18:39.050" endtime="20210412 02:18:45.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:45.903" level="INFO"/>
<status status="PASS" starttime="20210412 02:18:45.902" endtime="20210412 02:18:45.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:18:45.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:18:45.904" endtime="20210412 02:18:45.904"/>
</kw>
<status status="PASS" starttime="20210412 02:18:39.049" endtime="20210412 02:18:45.905"/>
</kw>
<msg timestamp="20210412 02:18:45.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:18:39.049" endtime="20210412 02:18:45.905"/>
</kw>
<status status="PASS" starttime="20210412 02:18:39.048" endtime="20210412 02:18:45.905"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:45.910" level="INFO">Running command 'ozone sh bucket create 73528-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:52.592" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:18:52.592" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210412 02:18:45.906" endtime="20210412 02:18:52.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:52.593" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210412 02:18:52.592" endtime="20210412 02:18:52.594"/>
</kw>
<msg timestamp="20210412 02:18:52.594" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210412 02:18:45.905" endtime="20210412 02:18:52.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:18:52.594" endtime="20210412 02:18:52.595"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:52.603" level="INFO">Running command 'ozone sh bucket create 73528-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:18:58.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:18:58.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:18:52.597" endtime="20210412 02:18:58.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:18:58.250" level="INFO"/>
<status status="PASS" starttime="20210412 02:18:58.249" endtime="20210412 02:18:58.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:18:58.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:18:58.250" endtime="20210412 02:18:58.251"/>
</kw>
<status status="PASS" starttime="20210412 02:18:52.596" endtime="20210412 02:18:58.251"/>
</kw>
<msg timestamp="20210412 02:18:58.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:18:52.596" endtime="20210412 02:18:58.252"/>
</kw>
<status status="PASS" starttime="20210412 02:18:52.595" endtime="20210412 02:18:58.252"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:18:58.255" level="INFO">Running command 'ozone sh bucket link 73528-source/bucket1 73528-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:04.280" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:19:04.280" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210412 02:18:58.253" endtime="20210412 02:19:04.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:04.282" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210412 02:19:04.281" endtime="20210412 02:19:04.282"/>
</kw>
<msg timestamp="20210412 02:19:04.282" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210412 02:18:58.252" endtime="20210412 02:19:04.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:19:04.283" endtime="20210412 02:19:04.283"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:18:38.842" endtime="20210412 02:19:04.283"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:04.297" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:04.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:04.301" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:19:04.293" endtime="20210412 02:19:04.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:04.303" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:19:04.302" endtime="20210412 02:19:04.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:04.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:04.304" endtime="20210412 02:19:04.307"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.292" endtime="20210412 02:19:04.307"/>
</kw>
<msg timestamp="20210412 02:19:04.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:04.290" endtime="20210412 02:19:04.308"/>
</kw>
<msg timestamp="20210412 02:19:04.308" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:19:04.289" endtime="20210412 02:19:04.308"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:19:04.312" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:19:04.309" endtime="20210412 02:19:04.312"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:04.321" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:04.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:04.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:04.316" endtime="20210412 02:19:04.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:04.339" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:04.337" endtime="20210412 02:19:04.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:04.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:04.339" endtime="20210412 02:19:04.341"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.315" endtime="20210412 02:19:04.341"/>
</kw>
<msg timestamp="20210412 02:19:04.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:04.315" endtime="20210412 02:19:04.342"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.314" endtime="20210412 02:19:04.342"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.313" endtime="20210412 02:19:04.342"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.288" endtime="20210412 02:19:04.343"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.286" endtime="20210412 02:19:04.343"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:04.352" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:04.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:04.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:04.349" endtime="20210412 02:19:04.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:04.360" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:04.359" endtime="20210412 02:19:04.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:04.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:04.361" endtime="20210412 02:19:04.362"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.348" endtime="20210412 02:19:04.363"/>
</kw>
<msg timestamp="20210412 02:19:04.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:04.347" endtime="20210412 02:19:04.363"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.345" endtime="20210412 02:19:04.363"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:04.370" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:04.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:04.374" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:19:04.368" endtime="20210412 02:19:04.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:04.376" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:19:04.375" endtime="20210412 02:19:04.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:04.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:04.376" endtime="20210412 02:19:04.378"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.367" endtime="20210412 02:19:04.379"/>
</kw>
<msg timestamp="20210412 02:19:04.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:04.367" endtime="20210412 02:19:04.379"/>
</kw>
<msg timestamp="20210412 02:19:04.380" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:19:04.365" endtime="20210412 02:19:04.380"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:19:04.382" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:19:04.380" endtime="20210412 02:19:04.382"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:04.388" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:04.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:04.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:04.385" endtime="20210412 02:19:04.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:04.410" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:04.409" endtime="20210412 02:19:04.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:04.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:04.410" endtime="20210412 02:19:04.411"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.384" endtime="20210412 02:19:04.412"/>
</kw>
<msg timestamp="20210412 02:19:04.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:04.384" endtime="20210412 02:19:04.412"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.383" endtime="20210412 02:19:04.412"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.382" endtime="20210412 02:19:04.413"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.365" endtime="20210412 02:19:04.413"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.364" endtime="20210412 02:19:04.413"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:04.417" level="INFO">Running command 'ozone sh key list 73528-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:12.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:12.028" level="INFO">${output} = {
  "volumeName" : "73528-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-12T02:09:06.865Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210412 02:19:04.414" endtime="20210412 02:19:12.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:12.031" level="INFO">{
  "volumeName" : "73528-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-12T02:09:06.865Z",
  "modificationTime" : "2021-04-12T02:12:10.844Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210412 02:19:12.029" endtime="20210412 02:19:12.031"/>
</kw>
<msg timestamp="20210412 02:19:12.032" level="INFO">${result} = {
  "volumeName" : "73528-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-12T02:09:06.865Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210412 02:19:04.414" endtime="20210412 02:19:12.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:19:12.033" endtime="20210412 02:19:12.034"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.344" endtime="20210412 02:19:12.034"/>
</kw>
<status status="PASS" starttime="20210412 02:19:04.343" endtime="20210412 02:19:12.034"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:19:04.284" endtime="20210412 02:19:12.035"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:12.050" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:12.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:12.054" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:19:12.046" endtime="20210412 02:19:12.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:12.059" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:19:12.057" endtime="20210412 02:19:12.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:12.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:12.059" endtime="20210412 02:19:12.061"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.044" endtime="20210412 02:19:12.061"/>
</kw>
<msg timestamp="20210412 02:19:12.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:12.043" endtime="20210412 02:19:12.062"/>
</kw>
<msg timestamp="20210412 02:19:12.063" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:19:12.042" endtime="20210412 02:19:12.063"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:19:12.065" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:19:12.063" endtime="20210412 02:19:12.065"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:12.074" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:12.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:12.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:12.070" endtime="20210412 02:19:12.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:12.087" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:12.086" endtime="20210412 02:19:12.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:12.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:12.087" endtime="20210412 02:19:12.088"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.068" endtime="20210412 02:19:12.088"/>
</kw>
<msg timestamp="20210412 02:19:12.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:12.068" endtime="20210412 02:19:12.089"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.066" endtime="20210412 02:19:12.089"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.065" endtime="20210412 02:19:12.090"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.041" endtime="20210412 02:19:12.090"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.039" endtime="20210412 02:19:12.090"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:12.097" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:12.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:12.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:12.094" endtime="20210412 02:19:12.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:12.104" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:12.103" endtime="20210412 02:19:12.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:12.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:12.104" endtime="20210412 02:19:12.105"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.092" endtime="20210412 02:19:12.105"/>
</kw>
<msg timestamp="20210412 02:19:12.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:12.092" endtime="20210412 02:19:12.106"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.091" endtime="20210412 02:19:12.106"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:12.113" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:12.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:12.117" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:19:12.110" endtime="20210412 02:19:12.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:12.119" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:19:12.117" endtime="20210412 02:19:12.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:12.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:12.119" endtime="20210412 02:19:12.120"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.109" endtime="20210412 02:19:12.121"/>
</kw>
<msg timestamp="20210412 02:19:12.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:12.108" endtime="20210412 02:19:12.122"/>
</kw>
<msg timestamp="20210412 02:19:12.122" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:19:12.107" endtime="20210412 02:19:12.122"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:19:12.123" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:19:12.123" endtime="20210412 02:19:12.124"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:12.131" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:12.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:12.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:12.127" endtime="20210412 02:19:12.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:12.141" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:12.140" endtime="20210412 02:19:12.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:12.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:12.141" endtime="20210412 02:19:12.142"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.126" endtime="20210412 02:19:12.142"/>
</kw>
<msg timestamp="20210412 02:19:12.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:12.126" endtime="20210412 02:19:12.142"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.125" endtime="20210412 02:19:12.143"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.124" endtime="20210412 02:19:12.143"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.107" endtime="20210412 02:19:12.143"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.106" endtime="20210412 02:19:12.143"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:12.146" level="INFO">Running command 'ozone sh key list 73528-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:19.641" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:19:19.641" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 73528-target unreadable-link null</msg>
<status status="PASS" starttime="20210412 02:19:12.144" endtime="20210412 02:19:19.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:19.643" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 73528-target unreadable-link null</msg>
<status status="PASS" starttime="20210412 02:19:19.642" endtime="20210412 02:19:19.643"/>
</kw>
<msg timestamp="20210412 02:19:19.643" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 73528-target unreadable-link null</msg>
<status status="PASS" starttime="20210412 02:19:12.143" endtime="20210412 02:19:19.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:19:19.643" endtime="20210412 02:19:19.644"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.091" endtime="20210412 02:19:19.644"/>
</kw>
<status status="PASS" starttime="20210412 02:19:12.090" endtime="20210412 02:19:19.644"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:19:12.038" endtime="20210412 02:19:19.644"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:19.654" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:19.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:19.659" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:19:19.651" endtime="20210412 02:19:19.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:19.661" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:19:19.660" endtime="20210412 02:19:19.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:19.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:19.662" endtime="20210412 02:19:19.663"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.650" endtime="20210412 02:19:19.663"/>
</kw>
<msg timestamp="20210412 02:19:19.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:19.650" endtime="20210412 02:19:19.664"/>
</kw>
<msg timestamp="20210412 02:19:19.664" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:19:19.649" endtime="20210412 02:19:19.664"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:19:19.665" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:19:19.664" endtime="20210412 02:19:19.665"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:19.671" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:19.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:19.681" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:19.669" endtime="20210412 02:19:19.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:19.683" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:19.682" endtime="20210412 02:19:19.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:19.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:19.683" endtime="20210412 02:19:19.684"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.668" endtime="20210412 02:19:19.684"/>
</kw>
<msg timestamp="20210412 02:19:19.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:19.667" endtime="20210412 02:19:19.685"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.666" endtime="20210412 02:19:19.685"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.665" endtime="20210412 02:19:19.685"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.648" endtime="20210412 02:19:19.685"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.647" endtime="20210412 02:19:19.685"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:19.693" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:19.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:19.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:19.688" endtime="20210412 02:19:19.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:19.697" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:19.696" endtime="20210412 02:19:19.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:19.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:19.697" endtime="20210412 02:19:19.698"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.688" endtime="20210412 02:19:19.698"/>
</kw>
<msg timestamp="20210412 02:19:19.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:19.687" endtime="20210412 02:19:19.699"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.687" endtime="20210412 02:19:19.699"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:19.706" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:19.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:19.707" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:19:19.702" endtime="20210412 02:19:19.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:19.709" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:19:19.708" endtime="20210412 02:19:19.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:19.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:19.709" endtime="20210412 02:19:19.710"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.701" endtime="20210412 02:19:19.711"/>
</kw>
<msg timestamp="20210412 02:19:19.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:19.701" endtime="20210412 02:19:19.711"/>
</kw>
<msg timestamp="20210412 02:19:19.711" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:19:19.700" endtime="20210412 02:19:19.711"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:19:19.713" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:19:19.711" endtime="20210412 02:19:19.713"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:19.720" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:19.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:19.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:19.716" endtime="20210412 02:19:19.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:19.731" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:19.730" endtime="20210412 02:19:19.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:19.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:19.731" endtime="20210412 02:19:19.732"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.715" endtime="20210412 02:19:19.732"/>
</kw>
<msg timestamp="20210412 02:19:19.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:19.715" endtime="20210412 02:19:19.733"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.714" endtime="20210412 02:19:19.733"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.713" endtime="20210412 02:19:19.733"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.699" endtime="20210412 02:19:19.733"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.699" endtime="20210412 02:19:19.733"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:19.738" level="INFO">Running command 'ozone sh bucket info 73528-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:27.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:27.269" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210412 02:19:19.735" endtime="20210412 02:19:27.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:27.270" level="INFO">{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:12:39.484Z",
  "modificationTime" : "2021-04-12T02:13:10.475Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210412 02:19:27.269" endtime="20210412 02:19:27.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:27.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:27.271" endtime="20210412 02:19:27.272"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.735" endtime="20210412 02:19:27.273"/>
</kw>
<msg timestamp="20210412 02:19:27.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:19.734" endtime="20210412 02:19:27.273"/>
</kw>
<msg timestamp="20210412 02:19:27.273" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210412 02:19:19.734" endtime="20210412 02:19:27.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:19:27.274" endtime="20210412 02:19:27.275"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:19:27.275" endtime="20210412 02:19:27.276"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:27.283" level="INFO">Running command 'ozone sh key list 73528-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:34.488" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:19:34.488" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 73528-source unreadable-bucket </msg>
<status status="PASS" starttime="20210412 02:19:27.277" endtime="20210412 02:19:34.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:34.490" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 73528-source unreadable-bucket </msg>
<status status="PASS" starttime="20210412 02:19:34.489" endtime="20210412 02:19:34.490"/>
</kw>
<msg timestamp="20210412 02:19:34.491" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 73528-source unreadable-bucket </msg>
<status status="PASS" starttime="20210412 02:19:27.276" endtime="20210412 02:19:34.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:19:34.491" endtime="20210412 02:19:34.491"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.686" endtime="20210412 02:19:34.492"/>
</kw>
<status status="PASS" starttime="20210412 02:19:19.686" endtime="20210412 02:19:34.492"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:19:19.646" endtime="20210412 02:19:34.492"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:34.505" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:34.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:34.508" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:19:34.501" endtime="20210412 02:19:34.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:34.510" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:19:34.509" endtime="20210412 02:19:34.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:34.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:34.511" endtime="20210412 02:19:34.512"/>
</kw>
<status status="PASS" starttime="20210412 02:19:34.500" endtime="20210412 02:19:34.513"/>
</kw>
<msg timestamp="20210412 02:19:34.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:34.499" endtime="20210412 02:19:34.513"/>
</kw>
<msg timestamp="20210412 02:19:34.513" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:19:34.498" endtime="20210412 02:19:34.513"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:19:34.515" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:19:34.514" endtime="20210412 02:19:34.515"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:34.520" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:34.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:34.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:34.518" endtime="20210412 02:19:34.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:34.533" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:34.532" endtime="20210412 02:19:34.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:34.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:34.534" endtime="20210412 02:19:34.536"/>
</kw>
<status status="PASS" starttime="20210412 02:19:34.518" endtime="20210412 02:19:34.536"/>
</kw>
<msg timestamp="20210412 02:19:34.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:34.517" endtime="20210412 02:19:34.537"/>
</kw>
<status status="PASS" starttime="20210412 02:19:34.516" endtime="20210412 02:19:34.537"/>
</kw>
<status status="PASS" starttime="20210412 02:19:34.515" endtime="20210412 02:19:34.537"/>
</kw>
<status status="PASS" starttime="20210412 02:19:34.497" endtime="20210412 02:19:34.538"/>
</kw>
<status status="PASS" starttime="20210412 02:19:34.496" endtime="20210412 02:19:34.538"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:34.544" level="INFO">Running command 'ozone sh bucket link 73528-target/loop1 73528-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:40.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:40.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:34.541" endtime="20210412 02:19:40.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:40.253" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:40.252" endtime="20210412 02:19:40.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:40.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:40.253" endtime="20210412 02:19:40.254"/>
</kw>
<status status="PASS" starttime="20210412 02:19:34.541" endtime="20210412 02:19:40.255"/>
</kw>
<msg timestamp="20210412 02:19:40.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:34.539" endtime="20210412 02:19:40.255"/>
</kw>
<status status="PASS" starttime="20210412 02:19:34.538" endtime="20210412 02:19:40.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:40.259" level="INFO">Running command 'ozone sh bucket link 73528-target/loop2 73528-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:45.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:45.973" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:40.257" endtime="20210412 02:19:45.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:45.975" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:45.974" endtime="20210412 02:19:45.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:45.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:45.976" endtime="20210412 02:19:45.977"/>
</kw>
<status status="PASS" starttime="20210412 02:19:40.256" endtime="20210412 02:19:45.978"/>
</kw>
<msg timestamp="20210412 02:19:45.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:40.256" endtime="20210412 02:19:45.978"/>
</kw>
<status status="PASS" starttime="20210412 02:19:40.255" endtime="20210412 02:19:45.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:45.987" level="INFO">Running command 'ozone sh bucket link 73528-target/loop3 73528-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:19:53.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:19:53.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:19:45.983" endtime="20210412 02:19:53.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:19:53.034" level="INFO"/>
<status status="PASS" starttime="20210412 02:19:53.032" endtime="20210412 02:19:53.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:19:53.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:19:53.035" endtime="20210412 02:19:53.037"/>
</kw>
<status status="PASS" starttime="20210412 02:19:45.982" endtime="20210412 02:19:53.038"/>
</kw>
<msg timestamp="20210412 02:19:53.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:19:45.981" endtime="20210412 02:19:53.038"/>
</kw>
<status status="PASS" starttime="20210412 02:19:45.979" endtime="20210412 02:19:53.039"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:19:53.044" level="INFO">Running command 'ozone sh key list 73528-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:20:00.301" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:20:00.301" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210412 02:19:53.041" endtime="20210412 02:20:00.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:20:00.302" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210412 02:20:00.302" endtime="20210412 02:20:00.303"/>
</kw>
<msg timestamp="20210412 02:20:00.303" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210412 02:19:53.039" endtime="20210412 02:20:00.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:20:00.303" endtime="20210412 02:20:00.304"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:19:34.494" endtime="20210412 02:20:00.304"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:20:00.313" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:20:00.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:20:00.317" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:20:00.311" endtime="20210412 02:20:00.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:20:00.319" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:20:00.318" endtime="20210412 02:20:00.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:20:00.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:20:00.319" endtime="20210412 02:20:00.320"/>
</kw>
<status status="PASS" starttime="20210412 02:20:00.310" endtime="20210412 02:20:00.321"/>
</kw>
<msg timestamp="20210412 02:20:00.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:20:00.309" endtime="20210412 02:20:00.322"/>
</kw>
<msg timestamp="20210412 02:20:00.322" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:20:00.309" endtime="20210412 02:20:00.322"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:20:00.324" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:20:00.323" endtime="20210412 02:20:00.324"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:20:00.329" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:20:00.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:20:00.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:20:00.327" endtime="20210412 02:20:00.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:20:00.344" level="INFO"/>
<status status="PASS" starttime="20210412 02:20:00.342" endtime="20210412 02:20:00.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:20:00.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:20:00.344" endtime="20210412 02:20:00.346"/>
</kw>
<status status="PASS" starttime="20210412 02:20:00.326" endtime="20210412 02:20:00.346"/>
</kw>
<msg timestamp="20210412 02:20:00.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:20:00.326" endtime="20210412 02:20:00.347"/>
</kw>
<status status="PASS" starttime="20210412 02:20:00.325" endtime="20210412 02:20:00.347"/>
</kw>
<status status="PASS" starttime="20210412 02:20:00.324" endtime="20210412 02:20:00.347"/>
</kw>
<status status="PASS" starttime="20210412 02:20:00.308" endtime="20210412 02:20:00.348"/>
</kw>
<status status="PASS" starttime="20210412 02:20:00.307" endtime="20210412 02:20:00.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:20:00.354" level="INFO">Running command 'ozone sh bucket link 73528-source/bucket1 73528-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:20:07.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:20:07.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:20:00.351" endtime="20210412 02:20:07.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:20:07.462" level="INFO"/>
<status status="PASS" starttime="20210412 02:20:07.460" endtime="20210412 02:20:07.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:20:07.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:20:07.463" endtime="20210412 02:20:07.464"/>
</kw>
<status status="PASS" starttime="20210412 02:20:00.350" endtime="20210412 02:20:07.465"/>
</kw>
<msg timestamp="20210412 02:20:07.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:20:00.349" endtime="20210412 02:20:07.466"/>
</kw>
<status status="PASS" starttime="20210412 02:20:00.348" endtime="20210412 02:20:07.467"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:20:07.477" level="INFO">Running command 'ozone sh key put 73528-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:00.307" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210412 02:20:07.472" endtime="20210412 02:22:00.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210412 02:22:00.307" endtime="20210412 02:22:00.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210412 02:22:00.308" endtime="20210412 02:22:00.308"/>
</kw>
<status status="FAIL" starttime="20210412 02:20:07.470" endtime="20210412 02:22:00.308"/>
</kw>
<msg timestamp="20210412 02:22:00.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210412 02:20:07.469" endtime="20210412 02:22:00.309"/>
</kw>
<status status="FAIL" starttime="20210412 02:20:07.467" endtime="20210412 02:22:00.309"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210412 02:22:00.310" endtime="20210412 02:22:00.310"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210412 02:20:00.306" endtime="20210412 02:22:00.310">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:00.319" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:00.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:22:00.321" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:22:00.315" endtime="20210412 02:22:00.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:22:00.323" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:22:00.322" endtime="20210412 02:22:00.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:22:00.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:22:00.323" endtime="20210412 02:22:00.324"/>
</kw>
<status status="PASS" starttime="20210412 02:22:00.315" endtime="20210412 02:22:00.324"/>
</kw>
<msg timestamp="20210412 02:22:00.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:22:00.314" endtime="20210412 02:22:00.324"/>
</kw>
<msg timestamp="20210412 02:22:00.325" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:22:00.314" endtime="20210412 02:22:00.325"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:22:00.326" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:22:00.325" endtime="20210412 02:22:00.326"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:00.331" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:00.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:22:00.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:22:00.328" endtime="20210412 02:22:00.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:22:00.343" level="INFO"/>
<status status="PASS" starttime="20210412 02:22:00.342" endtime="20210412 02:22:00.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:22:00.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:22:00.343" endtime="20210412 02:22:00.344"/>
</kw>
<status status="PASS" starttime="20210412 02:22:00.328" endtime="20210412 02:22:00.345"/>
</kw>
<msg timestamp="20210412 02:22:00.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:22:00.327" endtime="20210412 02:22:00.345"/>
</kw>
<status status="PASS" starttime="20210412 02:22:00.326" endtime="20210412 02:22:00.346"/>
</kw>
<status status="PASS" starttime="20210412 02:22:00.326" endtime="20210412 02:22:00.346"/>
</kw>
<status status="PASS" starttime="20210412 02:22:00.313" endtime="20210412 02:22:00.346"/>
</kw>
<status status="PASS" starttime="20210412 02:22:00.312" endtime="20210412 02:22:00.346"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:00.352" level="INFO">Running command 'ozone sh bucket delete 73528-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:07.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:22:07.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:22:00.349" endtime="20210412 02:22:07.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:22:07.118" level="INFO"/>
<status status="PASS" starttime="20210412 02:22:07.116" endtime="20210412 02:22:07.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:22:07.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:22:07.118" endtime="20210412 02:22:07.119"/>
</kw>
<status status="PASS" starttime="20210412 02:22:00.348" endtime="20210412 02:22:07.119"/>
</kw>
<msg timestamp="20210412 02:22:07.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:22:00.348" endtime="20210412 02:22:07.120"/>
</kw>
<status status="PASS" starttime="20210412 02:22:00.347" endtime="20210412 02:22:07.120"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:07.127" level="INFO">Running command 'ozone sh bucket list 73528-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:15.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:22:15.074" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T...</msg>
<status status="PASS" starttime="20210412 02:22:07.122" endtime="20210412 02:22:15.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:22:15.075" level="INFO">{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:18:58.188Z",
  "modificationTime" : "2021-04-12T02:18:58.188Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:13:17.298Z",
  "modificationTime" : "2021-04-12T02:13:17.298Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:12:39.484Z",
  "modificationTime" : "2021-04-12T02:13:10.475Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:18:45.803Z",
  "modificationTime" : "2021-04-12T02:18:45.803Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:20:07.069Z",
  "modificationTime" : "2021-04-12T02:20:07.069Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:19:52.889Z",
  "modificationTime" : "2021-04-12T02:19:52.889Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:19:40.185Z",
  "modificationTime" : "2021-04-12T02:19:40.185Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:19:45.892Z",
  "modificationTime" : "2021-04-12T02:19:45.892Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:12:26.272Z",
  "modificationTime" : "2021-04-12T02:13:04.967Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T02:12:32.526Z",
  "modificationTime" : "2021-04-12T02:12:32.526Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "73528-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210412 02:22:15.074" endtime="20210412 02:22:15.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:22:15.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:22:15.076" endtime="20210412 02:22:15.076"/>
</kw>
<status status="PASS" starttime="20210412 02:22:07.121" endtime="20210412 02:22:15.077"/>
</kw>
<msg timestamp="20210412 02:22:15.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:22:07.121" endtime="20210412 02:22:15.077"/>
</kw>
<msg timestamp="20210412 02:22:15.078" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "73528-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-12T...</msg>
<status status="PASS" starttime="20210412 02:22:07.120" endtime="20210412 02:22:15.078"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:22:15.078" endtime="20210412 02:22:15.078"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:15.082" level="INFO">Running command 'ozone sh key list 73528-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:22.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:22:22.439" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210412 02:22:15.080" endtime="20210412 02:22:22.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:22:22.441" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210412 02:22:22.440" endtime="20210412 02:22:22.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:22:22.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:22:22.442" endtime="20210412 02:22:22.443"/>
</kw>
<status status="PASS" starttime="20210412 02:22:15.079" endtime="20210412 02:22:22.445"/>
</kw>
<msg timestamp="20210412 02:22:22.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:22:15.079" endtime="20210412 02:22:22.446"/>
</kw>
<msg timestamp="20210412 02:22:22.446" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210412 02:22:15.078" endtime="20210412 02:22:22.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:22:22.447" endtime="20210412 02:22:22.448"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:22:00.311" endtime="20210412 02:22:22.449"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210412 02:08:42.557" endtime="20210412 02:22:22.452"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210412 02:22:22.493" level="INFO">${random} = 14395</msg>
<status status="PASS" starttime="20210412 02:22:22.493" endtime="20210412 02:22:22.493"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:22:22.494" level="INFO">${prefix} = 14395</msg>
<status status="PASS" starttime="20210412 02:22:22.493" endtime="20210412 02:22:22.494"/>
</kw>
<status status="PASS" starttime="20210412 02:22:22.492" endtime="20210412 02:22:22.495"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:22.502" level="INFO">Running command 'ozone sh volume info /14395-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:29.214" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:22:29.214" level="INFO">${output} = VOLUME_NOT_FOUND Volume 14395-rpcbasic is not found</msg>
<status status="PASS" starttime="20210412 02:22:22.499" endtime="20210412 02:22:29.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:22:29.216" level="INFO">VOLUME_NOT_FOUND Volume 14395-rpcbasic is not found</msg>
<status status="PASS" starttime="20210412 02:22:29.214" endtime="20210412 02:22:29.216"/>
</kw>
<msg timestamp="20210412 02:22:29.217" level="INFO">${result} = VOLUME_NOT_FOUND Volume 14395-rpcbasic is not found</msg>
<status status="PASS" starttime="20210412 02:22:22.498" endtime="20210412 02:22:29.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:22:29.217" endtime="20210412 02:22:29.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:29.230" level="INFO">Running command 'ozone sh volume create /14395-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:36.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:22:36.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:22:29.223" endtime="20210412 02:22:36.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:22:36.338" level="INFO"/>
<status status="PASS" starttime="20210412 02:22:36.336" endtime="20210412 02:22:36.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:22:36.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:22:36.339" endtime="20210412 02:22:36.340"/>
</kw>
<status status="PASS" starttime="20210412 02:22:29.221" endtime="20210412 02:22:36.341"/>
</kw>
<msg timestamp="20210412 02:22:36.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:22:29.221" endtime="20210412 02:22:36.342"/>
</kw>
<msg timestamp="20210412 02:22:36.342" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210412 02:22:29.219" endtime="20210412 02:22:36.342"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:22:36.343" endtime="20210412 02:22:36.344"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:36.351" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="14395-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:43.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:22:43.977" level="INFO">${output} = {
  "metadata": {},
  "name": "14395-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210412 02:22:36.348" endtime="20210412 02:22:43.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:22:43.979" level="INFO">{
  "metadata": {},
  "name": "14395-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-12T02:22:36.213Z",
  "modificationTime": "2021-04-12T02:22:36.213Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210412 02:22:43.977" endtime="20210412 02:22:43.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:22:43.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:22:43.980" endtime="20210412 02:22:43.982"/>
</kw>
<status status="PASS" starttime="20210412 02:22:36.346" endtime="20210412 02:22:43.982"/>
</kw>
<msg timestamp="20210412 02:22:43.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:22:36.346" endtime="20210412 02:22:43.983"/>
</kw>
<msg timestamp="20210412 02:22:43.985" level="INFO">${result} = {
  "metadata": {},
  "name": "14395-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210412 02:22:36.344" endtime="20210412 02:22:43.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:22:43.985" endtime="20210412 02:22:43.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:43.995" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="14395-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:51.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:22:51.184" level="INFO">${output} = {
  "metadata": {},
  "name": "14395-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210412 02:22:43.991" endtime="20210412 02:22:51.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:22:51.185" level="INFO">{
  "metadata": {},
  "name": "14395-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-12T02:22:36.213Z",
  "modificationTime": "2021-04-12T02:22:36.213Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210412 02:22:51.184" endtime="20210412 02:22:51.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:22:51.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:22:51.186" endtime="20210412 02:22:51.186"/>
</kw>
<status status="PASS" starttime="20210412 02:22:43.989" endtime="20210412 02:22:51.187"/>
</kw>
<msg timestamp="20210412 02:22:51.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:22:43.988" endtime="20210412 02:22:51.187"/>
</kw>
<msg timestamp="20210412 02:22:51.187" level="INFO">${result} = {
  "metadata": {},
  "name": "14395-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210412 02:22:43.987" endtime="20210412 02:22:51.187"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:22:51.188" endtime="20210412 02:22:51.188"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:51.193" level="INFO">Running command 'ozone sh volume setquota /14395-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:22:56.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:22:56.783" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:22:51.190" endtime="20210412 02:22:56.784"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:22:56.785" level="INFO"/>
<status status="PASS" starttime="20210412 02:22:56.784" endtime="20210412 02:22:56.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:22:56.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:22:56.786" endtime="20210412 02:22:56.788"/>
</kw>
<status status="PASS" starttime="20210412 02:22:51.190" endtime="20210412 02:22:56.789"/>
</kw>
<msg timestamp="20210412 02:22:56.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:22:51.189" endtime="20210412 02:22:56.790"/>
</kw>
<status status="PASS" starttime="20210412 02:22:51.188" endtime="20210412 02:22:56.791"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:22:56.800" level="INFO">Running command 'ozone sh volume info /14395-rpcbasic | jq -r '. | select(.name=="14395-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:23:05.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:23:05.148" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:22:56.796" endtime="20210412 02:23:05.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:23:05.150" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210412 02:23:05.149" endtime="20210412 02:23:05.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:23:05.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:23:05.150" endtime="20210412 02:23:05.151"/>
</kw>
<status status="PASS" starttime="20210412 02:22:56.794" endtime="20210412 02:23:05.151"/>
</kw>
<msg timestamp="20210412 02:23:05.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:22:56.794" endtime="20210412 02:23:05.152"/>
</kw>
<msg timestamp="20210412 02:23:05.152" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:22:56.791" endtime="20210412 02:23:05.152"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:23:05.153" endtime="20210412 02:23:05.154"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:23:05.160" level="INFO">Running command 'ozone sh bucket create /14395-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:23:10.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:23:10.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:23:05.156" endtime="20210412 02:23:10.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:23:10.849" level="INFO"/>
<status status="PASS" starttime="20210412 02:23:10.849" endtime="20210412 02:23:10.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:23:10.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:23:10.850" endtime="20210412 02:23:10.851"/>
</kw>
<status status="PASS" starttime="20210412 02:23:05.156" endtime="20210412 02:23:10.851"/>
</kw>
<msg timestamp="20210412 02:23:10.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:23:05.155" endtime="20210412 02:23:10.851"/>
</kw>
<status status="PASS" starttime="20210412 02:23:05.154" endtime="20210412 02:23:10.852"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:23:10.856" level="INFO">Running command 'ozone sh bucket info /14395-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:23:16.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:23:16.134" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210412 02:23:10.854" endtime="20210412 02:23:16.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:23:16.135" level="INFO">DISK</msg>
<status status="PASS" starttime="20210412 02:23:16.134" endtime="20210412 02:23:16.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:23:16.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:23:16.135" endtime="20210412 02:23:16.136"/>
</kw>
<status status="PASS" starttime="20210412 02:23:10.853" endtime="20210412 02:23:16.137"/>
</kw>
<msg timestamp="20210412 02:23:16.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:23:10.853" endtime="20210412 02:23:16.137"/>
</kw>
<msg timestamp="20210412 02:23:16.138" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210412 02:23:10.852" endtime="20210412 02:23:16.138"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:23:16.138" endtime="20210412 02:23:16.138"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:23:16.143" level="INFO">Running command 'ozone sh bucket info /14395-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:23:23.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:23:23.976" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:23:16.141" endtime="20210412 02:23:23.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:23:23.977" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210412 02:23:23.976" endtime="20210412 02:23:23.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:23:23.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:23:23.977" endtime="20210412 02:23:23.978"/>
</kw>
<status status="PASS" starttime="20210412 02:23:16.140" endtime="20210412 02:23:23.978"/>
</kw>
<msg timestamp="20210412 02:23:23.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:23:16.140" endtime="20210412 02:23:23.978"/>
</kw>
<msg timestamp="20210412 02:23:23.979" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:23:16.138" endtime="20210412 02:23:23.979"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:23:23.979" endtime="20210412 02:23:23.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:23:23.988" level="INFO">Running command 'ozone sh bucket info /14395-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:23:32.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:23:32.292" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210412 02:23:23.984" endtime="20210412 02:23:32.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:23:32.294" level="INFO">100</msg>
<status status="PASS" starttime="20210412 02:23:32.293" endtime="20210412 02:23:32.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:23:32.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:23:32.294" endtime="20210412 02:23:32.295"/>
</kw>
<status status="PASS" starttime="20210412 02:23:23.983" endtime="20210412 02:23:32.295"/>
</kw>
<msg timestamp="20210412 02:23:32.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:23:23.982" endtime="20210412 02:23:32.296"/>
</kw>
<msg timestamp="20210412 02:23:32.296" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210412 02:23:23.980" endtime="20210412 02:23:32.296"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:23:32.296" endtime="20210412 02:23:32.297"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:23:32.303" level="INFO">Running command 'ozone sh bucket setquota /14395-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:23:39.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:23:39.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:23:32.299" endtime="20210412 02:23:39.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:23:39.552" level="INFO"/>
<status status="PASS" starttime="20210412 02:23:39.551" endtime="20210412 02:23:39.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:23:39.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:23:39.552" endtime="20210412 02:23:39.553"/>
</kw>
<status status="PASS" starttime="20210412 02:23:32.298" endtime="20210412 02:23:39.553"/>
</kw>
<msg timestamp="20210412 02:23:39.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:23:32.298" endtime="20210412 02:23:39.554"/>
</kw>
<status status="PASS" starttime="20210412 02:23:32.297" endtime="20210412 02:23:39.554"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:23:39.561" level="INFO">Running command 'ozone sh bucket info /14395-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:23:47.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:23:47.249" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210412 02:23:39.556" endtime="20210412 02:23:47.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:23:47.250" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210412 02:23:47.249" endtime="20210412 02:23:47.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:23:47.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:23:47.251" endtime="20210412 02:23:47.251"/>
</kw>
<status status="PASS" starttime="20210412 02:23:39.556" endtime="20210412 02:23:47.252"/>
</kw>
<msg timestamp="20210412 02:23:47.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:23:39.555" endtime="20210412 02:23:47.252"/>
</kw>
<msg timestamp="20210412 02:23:47.252" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210412 02:23:39.554" endtime="20210412 02:23:47.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:23:47.253" endtime="20210412 02:23:47.253"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:23:47.260" level="INFO">Running command 'ozone sh bucket info /14395-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:23:55.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:23:55.163" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210412 02:23:47.256" endtime="20210412 02:23:55.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:23:55.164" level="INFO">1000</msg>
<status status="PASS" starttime="20210412 02:23:55.163" endtime="20210412 02:23:55.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:23:55.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:23:55.164" endtime="20210412 02:23:55.166"/>
</kw>
<status status="PASS" starttime="20210412 02:23:47.255" endtime="20210412 02:23:55.168"/>
</kw>
<msg timestamp="20210412 02:23:55.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:23:47.255" endtime="20210412 02:23:55.168"/>
</kw>
<msg timestamp="20210412 02:23:55.169" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210412 02:23:47.254" endtime="20210412 02:23:55.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:23:55.169" endtime="20210412 02:23:55.169"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:23:55.175" level="INFO">Running command 'ozone sh bucket list /14395-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:24:02.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:24:02.483" level="INFO">${output} = 14395-rpcbasic</msg>
<status status="PASS" starttime="20210412 02:23:55.172" endtime="20210412 02:24:02.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:24:02.484" level="INFO">14395-rpcbasic</msg>
<status status="PASS" starttime="20210412 02:24:02.484" endtime="20210412 02:24:02.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:24:02.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:24:02.485" endtime="20210412 02:24:02.486"/>
</kw>
<status status="PASS" starttime="20210412 02:23:55.171" endtime="20210412 02:24:02.486"/>
</kw>
<msg timestamp="20210412 02:24:02.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:23:55.171" endtime="20210412 02:24:02.487"/>
</kw>
<msg timestamp="20210412 02:24:02.487" level="INFO">${result} = 14395-rpcbasic</msg>
<status status="PASS" starttime="20210412 02:23:55.170" endtime="20210412 02:24:02.487"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:24:02.487" endtime="20210412 02:24:02.488"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:24:02.496" level="INFO">Running command 'ozone sh key put /14395-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:27:13.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:27:13.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:24:02.494" endtime="20210412 02:27:13.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:27:13.839" level="INFO"/>
<status status="PASS" starttime="20210412 02:27:13.838" endtime="20210412 02:27:13.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:27:13.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:27:13.840" endtime="20210412 02:27:13.841"/>
</kw>
<status status="PASS" starttime="20210412 02:24:02.492" endtime="20210412 02:27:13.842"/>
</kw>
<msg timestamp="20210412 02:27:13.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:24:02.492" endtime="20210412 02:27:13.842"/>
</kw>
<status status="PASS" starttime="20210412 02:24:02.491" endtime="20210412 02:27:13.843"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:27:13.849" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:27:13.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:27:13.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:27:13.846" endtime="20210412 02:27:13.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:27:13.853" level="INFO"/>
<status status="PASS" starttime="20210412 02:27:13.852" endtime="20210412 02:27:13.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:27:13.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:27:13.854" endtime="20210412 02:27:13.855"/>
</kw>
<status status="PASS" starttime="20210412 02:27:13.845" endtime="20210412 02:27:13.855"/>
</kw>
<msg timestamp="20210412 02:27:13.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:27:13.844" endtime="20210412 02:27:13.856"/>
</kw>
<status status="PASS" starttime="20210412 02:27:13.843" endtime="20210412 02:27:13.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:27:13.861" level="INFO">Running command 'ozone sh key get /14395-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:27:22.497" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210412 02:27:13.859" endtime="20210412 02:27:22.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.498" endtime="20210412 02:27:22.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.498" endtime="20210412 02:27:22.498"/>
</kw>
<status status="FAIL" starttime="20210412 02:27:13.858" endtime="20210412 02:27:22.501"/>
</kw>
<msg timestamp="20210412 02:27:22.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210412 02:27:13.858" endtime="20210412 02:27:22.502"/>
</kw>
<status status="FAIL" starttime="20210412 02:27:13.856" endtime="20210412 02:27:22.502"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.504" endtime="20210412 02:27:22.504"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.504" endtime="20210412 02:27:22.504"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.504" endtime="20210412 02:27:22.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.505" endtime="20210412 02:27:22.505"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.505" endtime="20210412 02:27:22.505"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.505" endtime="20210412 02:27:22.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.505" endtime="20210412 02:27:22.506"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.506" endtime="20210412 02:27:22.506"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.506" endtime="20210412 02:27:22.507"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.507" endtime="20210412 02:27:22.507"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.507" endtime="20210412 02:27:22.508"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.508" endtime="20210412 02:27:22.508"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.508" endtime="20210412 02:27:22.509"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.509" endtime="20210412 02:27:22.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.510" endtime="20210412 02:27:22.510"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.510" endtime="20210412 02:27:22.511"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.511" endtime="20210412 02:27:22.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.512" endtime="20210412 02:27:22.512"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.512" endtime="20210412 02:27:22.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.513" endtime="20210412 02:27:22.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.515" endtime="20210412 02:27:22.515"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.515" endtime="20210412 02:27:22.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.516" endtime="20210412 02:27:22.516"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.517" endtime="20210412 02:27:22.517"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.517" endtime="20210412 02:27:22.518"/>
</kw>
<status status="FAIL" starttime="20210412 02:24:02.489" endtime="20210412 02:27:22.518"/>
</kw>
<status status="FAIL" starttime="20210412 02:24:02.488" endtime="20210412 02:27:22.518"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.522" endtime="20210412 02:27:22.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.522" endtime="20210412 02:27:22.522"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.523" endtime="20210412 02:27:22.523"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.524" endtime="20210412 02:27:22.524"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.524" endtime="20210412 02:27:22.524"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.525" endtime="20210412 02:27:22.525"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.525" endtime="20210412 02:27:22.527"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.527" endtime="20210412 02:27:22.527"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.528" endtime="20210412 02:27:22.528"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.528" endtime="20210412 02:27:22.528"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.528" endtime="20210412 02:27:22.528"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.529" endtime="20210412 02:27:22.529"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.531" endtime="20210412 02:27:22.531"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.532" endtime="20210412 02:27:22.532"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.532" endtime="20210412 02:27:22.532"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.534" endtime="20210412 02:27:22.534"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.536" endtime="20210412 02:27:22.537"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.538" endtime="20210412 02:27:22.538"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.539" endtime="20210412 02:27:22.540"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.540" endtime="20210412 02:27:22.540"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.541" endtime="20210412 02:27:22.541"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.541" endtime="20210412 02:27:22.542"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.542" endtime="20210412 02:27:22.543"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:27:22.543" endtime="20210412 02:27:22.543"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.544" endtime="20210412 02:27:22.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:27:22.545" endtime="20210412 02:27:22.545"/>
</kw>
<status status="FAIL" starttime="20210412 02:22:22.496" endtime="20210412 02:27:22.546"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210412 02:22:22.495" endtime="20210412 02:27:22.547">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210412 02:22:22.461" endtime="20210412 02:27:22.554"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210412 02:27:22.595" level="INFO">${random} = 21145</msg>
<status status="PASS" starttime="20210412 02:27:22.594" endtime="20210412 02:27:22.596"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:27:22.599" level="INFO">${prefix} = 21145</msg>
<status status="PASS" starttime="20210412 02:27:22.596" endtime="20210412 02:27:22.599"/>
</kw>
<status status="PASS" starttime="20210412 02:27:22.593" endtime="20210412 02:27:22.600"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:27:22.623" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:27:22.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:27:22.645" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:27:22.612" endtime="20210412 02:27:22.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:27:22.647" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:27:22.647" endtime="20210412 02:27:22.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:27:22.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:27:22.648" endtime="20210412 02:27:22.649"/>
</kw>
<status status="PASS" starttime="20210412 02:27:22.609" endtime="20210412 02:27:22.650"/>
</kw>
<msg timestamp="20210412 02:27:22.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:27:22.608" endtime="20210412 02:27:22.651"/>
</kw>
<msg timestamp="20210412 02:27:22.651" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:27:22.606" endtime="20210412 02:27:22.651"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:27:22.658" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:27:22.652" endtime="20210412 02:27:22.659"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:27:22.677" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:27:22.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:27:22.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:27:22.667" endtime="20210412 02:27:22.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:27:22.871" level="INFO"/>
<status status="PASS" starttime="20210412 02:27:22.870" endtime="20210412 02:27:22.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:27:22.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:27:22.871" endtime="20210412 02:27:22.872"/>
</kw>
<status status="PASS" starttime="20210412 02:27:22.665" endtime="20210412 02:27:22.872"/>
</kw>
<msg timestamp="20210412 02:27:22.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:27:22.663" endtime="20210412 02:27:22.872"/>
</kw>
<status status="PASS" starttime="20210412 02:27:22.661" endtime="20210412 02:27:22.874"/>
</kw>
<status status="PASS" starttime="20210412 02:27:22.659" endtime="20210412 02:27:22.874"/>
</kw>
<status status="PASS" starttime="20210412 02:27:22.605" endtime="20210412 02:27:22.874"/>
</kw>
<status status="PASS" starttime="20210412 02:27:22.603" endtime="20210412 02:27:22.874"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:27:22.890" level="INFO">Running command 'ozone sh volume info o3://om:9862/21145-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:27:31.024" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:27:31.024" level="INFO">${output} = VOLUME_NOT_FOUND Volume 21145-rpcwoport is not found</msg>
<status status="PASS" starttime="20210412 02:27:22.881" endtime="20210412 02:27:31.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:27:31.025" level="INFO">VOLUME_NOT_FOUND Volume 21145-rpcwoport is not found</msg>
<status status="PASS" starttime="20210412 02:27:31.024" endtime="20210412 02:27:31.025"/>
</kw>
<msg timestamp="20210412 02:27:31.026" level="INFO">${result} = VOLUME_NOT_FOUND Volume 21145-rpcwoport is not found</msg>
<status status="PASS" starttime="20210412 02:27:22.879" endtime="20210412 02:27:31.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:27:31.026" endtime="20210412 02:27:31.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:27:31.034" level="INFO">Running command 'ozone sh volume create o3://om:9862/21145-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:27:37.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:27:37.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:27:31.030" endtime="20210412 02:27:37.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:27:37.892" level="INFO"/>
<status status="PASS" starttime="20210412 02:27:37.891" endtime="20210412 02:27:37.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:27:37.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:27:37.893" endtime="20210412 02:27:37.894"/>
</kw>
<status status="PASS" starttime="20210412 02:27:31.029" endtime="20210412 02:27:37.895"/>
</kw>
<msg timestamp="20210412 02:27:37.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:27:31.028" endtime="20210412 02:27:37.895"/>
</kw>
<msg timestamp="20210412 02:27:37.896" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210412 02:27:31.027" endtime="20210412 02:27:37.896"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:27:37.896" endtime="20210412 02:27:37.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:27:37.904" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="21145-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:27:43.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:27:43.991" level="INFO">${output} = {
  "metadata": {},
  "name": "21145-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210412 02:27:37.901" endtime="20210412 02:27:43.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:27:43.993" level="INFO">{
  "metadata": {},
  "name": "21145-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-12T02:27:37.743Z",
  "modificationTime": "2021-04-12T02:27:37.743Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210412 02:27:43.992" endtime="20210412 02:27:43.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:27:43.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:27:43.994" endtime="20210412 02:27:43.995"/>
</kw>
<status status="PASS" starttime="20210412 02:27:37.900" endtime="20210412 02:27:43.996"/>
</kw>
<msg timestamp="20210412 02:27:43.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:27:37.899" endtime="20210412 02:27:43.996"/>
</kw>
<msg timestamp="20210412 02:27:43.997" level="INFO">${result} = {
  "metadata": {},
  "name": "21145-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210412 02:27:37.897" endtime="20210412 02:27:43.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:27:43.997" endtime="20210412 02:27:43.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:27:44.007" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="21145-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:27:51.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:27:51.002" level="INFO">${output} = {
  "metadata": {},
  "name": "21145-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210412 02:27:44.003" endtime="20210412 02:27:51.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:27:51.005" level="INFO">{
  "metadata": {},
  "name": "21145-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-12T02:27:37.743Z",
  "modificationTime": "2021-04-12T02:27:37.743Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210412 02:27:51.003" endtime="20210412 02:27:51.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:27:51.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:27:51.006" endtime="20210412 02:27:51.007"/>
</kw>
<status status="PASS" starttime="20210412 02:27:44.002" endtime="20210412 02:27:51.007"/>
</kw>
<msg timestamp="20210412 02:27:51.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:27:44.001" endtime="20210412 02:27:51.008"/>
</kw>
<msg timestamp="20210412 02:27:51.009" level="INFO">${result} = {
  "metadata": {},
  "name": "21145-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210412 02:27:43.999" endtime="20210412 02:27:51.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:27:51.009" endtime="20210412 02:27:51.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:27:51.016" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/21145-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:27:58.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:27:58.118" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:27:51.013" endtime="20210412 02:27:58.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:27:58.120" level="INFO"/>
<status status="PASS" starttime="20210412 02:27:58.119" endtime="20210412 02:27:58.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:27:58.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:27:58.121" endtime="20210412 02:27:58.122"/>
</kw>
<status status="PASS" starttime="20210412 02:27:51.011" endtime="20210412 02:27:58.123"/>
</kw>
<msg timestamp="20210412 02:27:58.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:27:51.011" endtime="20210412 02:27:58.123"/>
</kw>
<status status="PASS" starttime="20210412 02:27:51.010" endtime="20210412 02:27:58.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:27:58.132" level="INFO">Running command 'ozone sh volume info o3://om:9862/21145-rpcwoport | jq -r '. | select(.name=="21145-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:28:05.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:28:05.976" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:27:58.129" endtime="20210412 02:28:05.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:28:05.978" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210412 02:28:05.976" endtime="20210412 02:28:05.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:28:05.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:28:05.978" endtime="20210412 02:28:05.978"/>
</kw>
<status status="PASS" starttime="20210412 02:27:58.127" endtime="20210412 02:28:05.979"/>
</kw>
<msg timestamp="20210412 02:28:05.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:27:58.126" endtime="20210412 02:28:05.979"/>
</kw>
<msg timestamp="20210412 02:28:05.980" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:27:58.124" endtime="20210412 02:28:05.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:28:05.980" endtime="20210412 02:28:05.980"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:28:05.986" level="INFO">Running command 'ozone sh bucket create o3://om:9862/21145-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:28:13.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:28:13.200" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:28:05.983" endtime="20210412 02:28:13.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:28:13.203" level="INFO"/>
<status status="PASS" starttime="20210412 02:28:13.201" endtime="20210412 02:28:13.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:28:13.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:28:13.203" endtime="20210412 02:28:13.204"/>
</kw>
<status status="PASS" starttime="20210412 02:28:05.982" endtime="20210412 02:28:13.205"/>
</kw>
<msg timestamp="20210412 02:28:13.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:28:05.982" endtime="20210412 02:28:13.206"/>
</kw>
<status status="PASS" starttime="20210412 02:28:05.980" endtime="20210412 02:28:13.206"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:28:13.214" level="INFO">Running command 'ozone sh bucket info o3://om:9862/21145-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:28:18.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:28:18.500" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210412 02:28:13.210" endtime="20210412 02:28:18.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:28:18.501" level="INFO">DISK</msg>
<status status="PASS" starttime="20210412 02:28:18.501" endtime="20210412 02:28:18.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:28:18.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:28:18.502" endtime="20210412 02:28:18.502"/>
</kw>
<status status="PASS" starttime="20210412 02:28:13.209" endtime="20210412 02:28:18.503"/>
</kw>
<msg timestamp="20210412 02:28:18.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:28:13.208" endtime="20210412 02:28:18.503"/>
</kw>
<msg timestamp="20210412 02:28:18.503" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210412 02:28:13.206" endtime="20210412 02:28:18.503"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:28:18.504" endtime="20210412 02:28:18.505"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:28:18.510" level="INFO">Running command 'ozone sh bucket info o3://om:9862/21145-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:28:25.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:28:25.767" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:28:18.507" endtime="20210412 02:28:25.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:28:25.771" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210412 02:28:25.770" endtime="20210412 02:28:25.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:28:25.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:28:25.771" endtime="20210412 02:28:25.772"/>
</kw>
<status status="PASS" starttime="20210412 02:28:18.506" endtime="20210412 02:28:25.772"/>
</kw>
<msg timestamp="20210412 02:28:25.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:28:18.506" endtime="20210412 02:28:25.773"/>
</kw>
<msg timestamp="20210412 02:28:25.773" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:28:18.505" endtime="20210412 02:28:25.773"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:28:25.774" endtime="20210412 02:28:25.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:28:25.781" level="INFO">Running command 'ozone sh bucket info o3://om:9862/21145-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:28:33.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:28:33.173" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210412 02:28:25.778" endtime="20210412 02:28:33.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:28:33.177" level="INFO">100</msg>
<status status="PASS" starttime="20210412 02:28:33.176" endtime="20210412 02:28:33.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:28:33.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:28:33.178" endtime="20210412 02:28:33.180"/>
</kw>
<status status="PASS" starttime="20210412 02:28:25.777" endtime="20210412 02:28:33.181"/>
</kw>
<msg timestamp="20210412 02:28:33.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:28:25.776" endtime="20210412 02:28:33.181"/>
</kw>
<msg timestamp="20210412 02:28:33.183" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210412 02:28:25.774" endtime="20210412 02:28:33.183"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:28:33.183" endtime="20210412 02:28:33.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:28:33.195" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/21145-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:28:40.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:28:40.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:28:33.191" endtime="20210412 02:28:40.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:28:40.476" level="INFO"/>
<status status="PASS" starttime="20210412 02:28:40.475" endtime="20210412 02:28:40.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:28:40.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:28:40.476" endtime="20210412 02:28:40.477"/>
</kw>
<status status="PASS" starttime="20210412 02:28:33.188" endtime="20210412 02:28:40.477"/>
</kw>
<msg timestamp="20210412 02:28:40.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:28:33.187" endtime="20210412 02:28:40.477"/>
</kw>
<status status="PASS" starttime="20210412 02:28:33.185" endtime="20210412 02:28:40.478"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:28:40.484" level="INFO">Running command 'ozone sh bucket info o3://om:9862/21145-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:28:47.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:28:47.252" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210412 02:28:40.480" endtime="20210412 02:28:47.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:28:47.254" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210412 02:28:47.253" endtime="20210412 02:28:47.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:28:47.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:28:47.254" endtime="20210412 02:28:47.255"/>
</kw>
<status status="PASS" starttime="20210412 02:28:40.479" endtime="20210412 02:28:47.255"/>
</kw>
<msg timestamp="20210412 02:28:47.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:28:40.479" endtime="20210412 02:28:47.256"/>
</kw>
<msg timestamp="20210412 02:28:47.256" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210412 02:28:40.478" endtime="20210412 02:28:47.256"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:28:47.256" endtime="20210412 02:28:47.257"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:28:47.262" level="INFO">Running command 'ozone sh bucket info o3://om:9862/21145-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:28:54.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:28:54.756" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210412 02:28:47.259" endtime="20210412 02:28:54.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:28:54.757" level="INFO">1000</msg>
<status status="PASS" starttime="20210412 02:28:54.757" endtime="20210412 02:28:54.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:28:54.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:28:54.758" endtime="20210412 02:28:54.758"/>
</kw>
<status status="PASS" starttime="20210412 02:28:47.259" endtime="20210412 02:28:54.759"/>
</kw>
<msg timestamp="20210412 02:28:54.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:28:47.258" endtime="20210412 02:28:54.759"/>
</kw>
<msg timestamp="20210412 02:28:54.759" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210412 02:28:47.257" endtime="20210412 02:28:54.759"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:28:54.759" endtime="20210412 02:28:54.761"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:28:54.771" level="INFO">Running command 'ozone sh bucket list o3://om:9862/21145-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:29:02.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:29:02.826" level="INFO">${output} = 21145-rpcwoport</msg>
<status status="PASS" starttime="20210412 02:28:54.767" endtime="20210412 02:29:02.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:29:02.828" level="INFO">21145-rpcwoport</msg>
<status status="PASS" starttime="20210412 02:29:02.827" endtime="20210412 02:29:02.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:29:02.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:29:02.828" endtime="20210412 02:29:02.829"/>
</kw>
<status status="PASS" starttime="20210412 02:28:54.765" endtime="20210412 02:29:02.829"/>
</kw>
<msg timestamp="20210412 02:29:02.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:28:54.765" endtime="20210412 02:29:02.829"/>
</kw>
<msg timestamp="20210412 02:29:02.831" level="INFO">${result} = 21145-rpcwoport</msg>
<status status="PASS" starttime="20210412 02:28:54.762" endtime="20210412 02:29:02.831"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:29:02.831" endtime="20210412 02:29:02.832"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:29:02.846" level="INFO">Running command 'ozone sh key put o3://om:9862/21145-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:32:14.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:32:14.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:29:02.840" endtime="20210412 02:32:14.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:32:14.070" level="INFO"/>
<status status="PASS" starttime="20210412 02:32:14.069" endtime="20210412 02:32:14.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:32:14.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:32:14.071" endtime="20210412 02:32:14.073"/>
</kw>
<status status="PASS" starttime="20210412 02:29:02.837" endtime="20210412 02:32:14.074"/>
</kw>
<msg timestamp="20210412 02:32:14.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:29:02.836" endtime="20210412 02:32:14.074"/>
</kw>
<status status="PASS" starttime="20210412 02:29:02.835" endtime="20210412 02:32:14.075"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:32:14.083" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:32:14.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:32:14.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:32:14.079" endtime="20210412 02:32:14.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:32:14.090" level="INFO"/>
<status status="PASS" starttime="20210412 02:32:14.088" endtime="20210412 02:32:14.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:32:14.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:32:14.091" endtime="20210412 02:32:14.093"/>
</kw>
<status status="PASS" starttime="20210412 02:32:14.078" endtime="20210412 02:32:14.093"/>
</kw>
<msg timestamp="20210412 02:32:14.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:32:14.077" endtime="20210412 02:32:14.094"/>
</kw>
<status status="PASS" starttime="20210412 02:32:14.075" endtime="20210412 02:32:14.096"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:32:14.103" level="INFO">Running command 'ozone sh key get o3://om:9862/21145-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:32:22.604" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210412 02:32:14.099" endtime="20210412 02:32:22.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.604" endtime="20210412 02:32:22.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.605" endtime="20210412 02:32:22.605"/>
</kw>
<status status="FAIL" starttime="20210412 02:32:14.098" endtime="20210412 02:32:22.605"/>
</kw>
<msg timestamp="20210412 02:32:22.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210412 02:32:14.098" endtime="20210412 02:32:22.607"/>
</kw>
<status status="FAIL" starttime="20210412 02:32:14.096" endtime="20210412 02:32:22.608"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.609" endtime="20210412 02:32:22.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.609" endtime="20210412 02:32:22.609"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.609" endtime="20210412 02:32:22.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.610" endtime="20210412 02:32:22.610"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.610" endtime="20210412 02:32:22.610"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.610" endtime="20210412 02:32:22.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.610" endtime="20210412 02:32:22.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.611" endtime="20210412 02:32:22.611"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.611" endtime="20210412 02:32:22.611"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.611" endtime="20210412 02:32:22.611"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.611" endtime="20210412 02:32:22.611"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.611" endtime="20210412 02:32:22.611"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.612" endtime="20210412 02:32:22.612"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.612" endtime="20210412 02:32:22.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.612" endtime="20210412 02:32:22.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.618" endtime="20210412 02:32:22.618"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.618" endtime="20210412 02:32:22.618"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.618" endtime="20210412 02:32:22.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.619" endtime="20210412 02:32:22.619"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.619" endtime="20210412 02:32:22.619"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.619" endtime="20210412 02:32:22.619"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.619" endtime="20210412 02:32:22.619"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.619" endtime="20210412 02:32:22.620"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.620" endtime="20210412 02:32:22.620"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.620" endtime="20210412 02:32:22.620"/>
</kw>
<status status="FAIL" starttime="20210412 02:29:02.833" endtime="20210412 02:32:22.620"/>
</kw>
<status status="FAIL" starttime="20210412 02:29:02.833" endtime="20210412 02:32:22.626"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.627" endtime="20210412 02:32:22.628"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.629" endtime="20210412 02:32:22.629"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.629" endtime="20210412 02:32:22.629"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.629" endtime="20210412 02:32:22.629"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.630" endtime="20210412 02:32:22.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.630" endtime="20210412 02:32:22.630"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.630" endtime="20210412 02:32:22.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.630" endtime="20210412 02:32:22.630"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.630" endtime="20210412 02:32:22.631"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.631" endtime="20210412 02:32:22.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.631" endtime="20210412 02:32:22.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.631" endtime="20210412 02:32:22.637"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.640" endtime="20210412 02:32:22.640"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.641" endtime="20210412 02:32:22.641"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.641" endtime="20210412 02:32:22.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.641" endtime="20210412 02:32:22.641"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.641" endtime="20210412 02:32:22.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.642" endtime="20210412 02:32:22.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.642" endtime="20210412 02:32:22.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.642" endtime="20210412 02:32:22.642"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.642" endtime="20210412 02:32:22.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.642" endtime="20210412 02:32:22.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.643" endtime="20210412 02:32:22.643"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:32:22.643" endtime="20210412 02:32:22.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.643" endtime="20210412 02:32:22.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:32:22.643" endtime="20210412 02:32:22.643"/>
</kw>
<status status="FAIL" starttime="20210412 02:27:22.876" endtime="20210412 02:32:22.644"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210412 02:27:22.600" endtime="20210412 02:32:22.654">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:32:22.744" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:32:22.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:32:22.757" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:32:22.730" endtime="20210412 02:32:22.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:32:22.759" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:32:22.758" endtime="20210412 02:32:22.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:32:22.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:32:22.759" endtime="20210412 02:32:22.760"/>
</kw>
<status status="PASS" starttime="20210412 02:32:22.730" endtime="20210412 02:32:22.765"/>
</kw>
<msg timestamp="20210412 02:32:22.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:32:22.729" endtime="20210412 02:32:22.765"/>
</kw>
<msg timestamp="20210412 02:32:22.766" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:32:22.729" endtime="20210412 02:32:22.766"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:32:22.767" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:32:22.767" endtime="20210412 02:32:22.767"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:32:22.795" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:32:22.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:32:22.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:32:22.775" endtime="20210412 02:32:22.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:32:22.981" level="INFO"/>
<status status="PASS" starttime="20210412 02:32:22.977" endtime="20210412 02:32:22.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:32:22.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:32:22.981" endtime="20210412 02:32:22.982"/>
</kw>
<status status="PASS" starttime="20210412 02:32:22.774" endtime="20210412 02:32:22.990"/>
</kw>
<msg timestamp="20210412 02:32:22.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:32:22.774" endtime="20210412 02:32:22.992"/>
</kw>
<status status="PASS" starttime="20210412 02:32:22.773" endtime="20210412 02:32:22.992"/>
</kw>
<status status="PASS" starttime="20210412 02:32:22.772" endtime="20210412 02:32:22.992"/>
</kw>
<status status="PASS" starttime="20210412 02:32:22.725" endtime="20210412 02:32:22.992"/>
</kw>
<status status="PASS" starttime="20210412 02:32:22.721" endtime="20210412 02:32:22.993"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:32:23.023" level="INFO">Running command 'ozone sh volume create o3://om:9862/21145-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:32:31.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:32:31.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:32:23.002" endtime="20210412 02:32:31.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:32:31.783" level="INFO"/>
<status status="PASS" starttime="20210412 02:32:31.782" endtime="20210412 02:32:31.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:32:31.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:32:31.784" endtime="20210412 02:32:31.785"/>
</kw>
<status status="PASS" starttime="20210412 02:32:23.001" endtime="20210412 02:32:31.785"/>
</kw>
<msg timestamp="20210412 02:32:31.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:32:23.000" endtime="20210412 02:32:31.785"/>
</kw>
<status status="PASS" starttime="20210412 02:32:22.999" endtime="20210412 02:32:31.786"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:32:31.792" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/21145-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:32:37.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:32:37.133" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:32:31.789" endtime="20210412 02:32:37.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:32:37.134" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:32:37.133" endtime="20210412 02:32:37.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:32:37.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:32:37.134" endtime="20210412 02:32:37.135"/>
</kw>
<status status="PASS" starttime="20210412 02:32:31.788" endtime="20210412 02:32:37.135"/>
</kw>
<msg timestamp="20210412 02:32:37.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:32:31.787" endtime="20210412 02:32:37.136"/>
</kw>
<msg timestamp="20210412 02:32:37.136" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:32:31.786" endtime="20210412 02:32:37.136"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:32:37.136" endtime="20210412 02:32:37.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:32:37.141" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/21145-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:32:43.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:32:43.864" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210412 02:32:37.139" endtime="20210412 02:32:43.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:32:43.867" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210412 02:32:43.865" endtime="20210412 02:32:43.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:32:43.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:32:43.868" endtime="20210412 02:32:43.869"/>
</kw>
<status status="PASS" starttime="20210412 02:32:37.138" endtime="20210412 02:32:43.869"/>
</kw>
<msg timestamp="20210412 02:32:43.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:32:37.138" endtime="20210412 02:32:43.870"/>
</kw>
<msg timestamp="20210412 02:32:43.870" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210412 02:32:37.137" endtime="20210412 02:32:43.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:32:43.876" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/21145-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:32:50.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:32:50.949" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:32:43.873" endtime="20210412 02:32:50.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:32:50.951" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:32:50.950" endtime="20210412 02:32:50.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:32:50.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:32:50.951" endtime="20210412 02:32:50.952"/>
</kw>
<status status="PASS" starttime="20210412 02:32:43.872" endtime="20210412 02:32:50.952"/>
</kw>
<msg timestamp="20210412 02:32:50.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:32:43.872" endtime="20210412 02:32:50.952"/>
</kw>
<msg timestamp="20210412 02:32:50.953" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:32:43.871" endtime="20210412 02:32:50.953"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:32:50.954" endtime="20210412 02:32:50.955"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:32:50.962" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/21145-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:32:57.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:32:57.861" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210412 02:32:50.959" endtime="20210412 02:32:57.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:32:57.863" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210412 02:32:57.862" endtime="20210412 02:32:57.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:32:57.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:32:57.864" endtime="20210412 02:32:57.865"/>
</kw>
<status status="PASS" starttime="20210412 02:32:50.958" endtime="20210412 02:32:57.865"/>
</kw>
<msg timestamp="20210412 02:32:57.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:32:50.957" endtime="20210412 02:32:57.865"/>
</kw>
<msg timestamp="20210412 02:32:57.866" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210412 02:32:50.956" endtime="20210412 02:32:57.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:32:57.872" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/21145-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:04.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:04.342" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:32:57.869" endtime="20210412 02:33:04.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:04.344" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:33:04.343" endtime="20210412 02:33:04.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:04.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:04.344" endtime="20210412 02:33:04.345"/>
</kw>
<status status="PASS" starttime="20210412 02:32:57.868" endtime="20210412 02:33:04.346"/>
</kw>
<msg timestamp="20210412 02:33:04.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:32:57.867" endtime="20210412 02:33:04.346"/>
</kw>
<msg timestamp="20210412 02:33:04.346" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:32:57.866" endtime="20210412 02:33:04.346"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:33:04.347" endtime="20210412 02:33:04.347"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:04.352" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/21145-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:09.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:09.705" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:33:04.350" endtime="20210412 02:33:09.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:09.709" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:33:09.706" endtime="20210412 02:33:09.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:09.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:09.709" endtime="20210412 02:33:09.711"/>
</kw>
<status status="PASS" starttime="20210412 02:33:04.349" endtime="20210412 02:33:09.712"/>
</kw>
<msg timestamp="20210412 02:33:09.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:04.349" endtime="20210412 02:33:09.713"/>
</kw>
<msg timestamp="20210412 02:33:09.714" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:33:04.348" endtime="20210412 02:33:09.714"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:09.723" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/21145-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:16.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:16.757" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210412 02:33:09.721" endtime="20210412 02:33:16.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:16.759" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:33:16.758" endtime="20210412 02:33:16.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:16.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:16.759" endtime="20210412 02:33:16.760"/>
</kw>
<status status="PASS" starttime="20210412 02:33:09.718" endtime="20210412 02:33:16.761"/>
</kw>
<msg timestamp="20210412 02:33:16.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:09.717" endtime="20210412 02:33:16.761"/>
</kw>
<msg timestamp="20210412 02:33:16.761" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210412 02:33:09.714" endtime="20210412 02:33:16.762"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:33:16.762" endtime="20210412 02:33:16.763"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:33:16.763" endtime="20210412 02:33:16.764"/>
</kw>
<status status="PASS" starttime="20210412 02:32:22.993" endtime="20210412 02:33:16.764"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210412 02:32:22.656" endtime="20210412 02:33:16.764"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:16.773" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:16.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:16.777" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:33:16.769" endtime="20210412 02:33:16.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:16.779" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:33:16.778" endtime="20210412 02:33:16.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:16.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:16.779" endtime="20210412 02:33:16.780"/>
</kw>
<status status="PASS" starttime="20210412 02:33:16.768" endtime="20210412 02:33:16.781"/>
</kw>
<msg timestamp="20210412 02:33:16.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:16.768" endtime="20210412 02:33:16.781"/>
</kw>
<msg timestamp="20210412 02:33:16.782" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:33:16.767" endtime="20210412 02:33:16.782"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:33:16.783" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:33:16.782" endtime="20210412 02:33:16.783"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:16.788" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:16.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:16.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:33:16.786" endtime="20210412 02:33:16.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:16.799" level="INFO"/>
<status status="PASS" starttime="20210412 02:33:16.797" endtime="20210412 02:33:16.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:16.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:16.799" endtime="20210412 02:33:16.800"/>
</kw>
<status status="PASS" starttime="20210412 02:33:16.785" endtime="20210412 02:33:16.800"/>
</kw>
<msg timestamp="20210412 02:33:16.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:16.785" endtime="20210412 02:33:16.801"/>
</kw>
<status status="PASS" starttime="20210412 02:33:16.784" endtime="20210412 02:33:16.801"/>
</kw>
<status status="PASS" starttime="20210412 02:33:16.783" endtime="20210412 02:33:16.801"/>
</kw>
<status status="PASS" starttime="20210412 02:33:16.767" endtime="20210412 02:33:16.801"/>
</kw>
<status status="PASS" starttime="20210412 02:33:16.766" endtime="20210412 02:33:16.801"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:16.807" level="INFO">Running command 'ozone sh bucket create o3://om:9862/21145-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:23.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:23.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:33:16.804" endtime="20210412 02:33:23.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:23.531" level="INFO"/>
<status status="PASS" starttime="20210412 02:33:23.531" endtime="20210412 02:33:23.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:23.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:23.532" endtime="20210412 02:33:23.532"/>
</kw>
<status status="PASS" starttime="20210412 02:33:16.803" endtime="20210412 02:33:23.533"/>
</kw>
<msg timestamp="20210412 02:33:23.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:16.803" endtime="20210412 02:33:23.533"/>
</kw>
<status status="PASS" starttime="20210412 02:33:16.802" endtime="20210412 02:33:23.533"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:23.539" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/21145-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:28.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:28.672" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:33:23.535" endtime="20210412 02:33:28.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:28.674" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:33:28.673" endtime="20210412 02:33:28.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:28.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:28.675" endtime="20210412 02:33:28.677"/>
</kw>
<status status="PASS" starttime="20210412 02:33:23.534" endtime="20210412 02:33:28.678"/>
</kw>
<msg timestamp="20210412 02:33:28.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:23.534" endtime="20210412 02:33:28.679"/>
</kw>
<msg timestamp="20210412 02:33:28.679" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:33:23.533" endtime="20210412 02:33:28.680"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:33:28.681" endtime="20210412 02:33:28.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:28.691" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/21145-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:35.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:35.496" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210412 02:33:28.686" endtime="20210412 02:33:35.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:35.498" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210412 02:33:35.497" endtime="20210412 02:33:35.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:35.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:35.499" endtime="20210412 02:33:35.501"/>
</kw>
<status status="PASS" starttime="20210412 02:33:28.685" endtime="20210412 02:33:35.502"/>
</kw>
<msg timestamp="20210412 02:33:35.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:28.684" endtime="20210412 02:33:35.503"/>
</kw>
<msg timestamp="20210412 02:33:35.503" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210412 02:33:28.682" endtime="20210412 02:33:35.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:35.512" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/21145-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:41.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:41.569" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:33:35.508" endtime="20210412 02:33:41.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:41.571" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:33:41.570" endtime="20210412 02:33:41.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:41.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:41.571" endtime="20210412 02:33:41.572"/>
</kw>
<status status="PASS" starttime="20210412 02:33:35.506" endtime="20210412 02:33:41.572"/>
</kw>
<msg timestamp="20210412 02:33:41.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:35.506" endtime="20210412 02:33:41.573"/>
</kw>
<msg timestamp="20210412 02:33:41.573" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:33:35.504" endtime="20210412 02:33:41.573"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:33:41.573" endtime="20210412 02:33:41.574"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:41.579" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/21145-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:48.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:48.522" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210412 02:33:41.576" endtime="20210412 02:33:48.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:48.524" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210412 02:33:48.523" endtime="20210412 02:33:48.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:48.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:48.524" endtime="20210412 02:33:48.524"/>
</kw>
<status status="PASS" starttime="20210412 02:33:41.575" endtime="20210412 02:33:48.525"/>
</kw>
<msg timestamp="20210412 02:33:48.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:41.575" endtime="20210412 02:33:48.525"/>
</kw>
<msg timestamp="20210412 02:33:48.525" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210412 02:33:41.574" endtime="20210412 02:33:48.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:48.532" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/21145-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:33:55.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:33:55.251" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:33:48.528" endtime="20210412 02:33:55.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:33:55.254" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:33:55.252" endtime="20210412 02:33:55.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:33:55.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:33:55.255" endtime="20210412 02:33:55.256"/>
</kw>
<status status="PASS" starttime="20210412 02:33:48.527" endtime="20210412 02:33:55.257"/>
</kw>
<msg timestamp="20210412 02:33:55.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:48.526" endtime="20210412 02:33:55.258"/>
</kw>
<msg timestamp="20210412 02:33:55.259" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:33:48.526" endtime="20210412 02:33:55.259"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:33:55.259" endtime="20210412 02:33:55.261"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:33:55.268" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/21145-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:34:02.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:34:02.468" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:33:55.264" endtime="20210412 02:34:02.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:34:02.470" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:34:02.469" endtime="20210412 02:34:02.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:34:02.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:34:02.470" endtime="20210412 02:34:02.470"/>
</kw>
<status status="PASS" starttime="20210412 02:33:55.263" endtime="20210412 02:34:02.473"/>
</kw>
<msg timestamp="20210412 02:34:02.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:33:55.262" endtime="20210412 02:34:02.473"/>
</kw>
<msg timestamp="20210412 02:34:02.474" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:33:55.261" endtime="20210412 02:34:02.474"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:34:02.480" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/21145-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:34:08.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:34:08.248" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210412 02:34:02.476" endtime="20210412 02:34:08.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:34:08.250" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:34:08.248" endtime="20210412 02:34:08.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:34:08.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:34:08.250" endtime="20210412 02:34:08.251"/>
</kw>
<status status="PASS" starttime="20210412 02:34:02.476" endtime="20210412 02:34:08.251"/>
</kw>
<msg timestamp="20210412 02:34:08.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:34:02.476" endtime="20210412 02:34:08.252"/>
</kw>
<msg timestamp="20210412 02:34:08.252" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210412 02:34:02.474" endtime="20210412 02:34:08.252"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:34:08.252" endtime="20210412 02:34:08.253"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:34:08.253" endtime="20210412 02:34:08.254"/>
</kw>
<status status="PASS" starttime="20210412 02:33:16.801" endtime="20210412 02:34:08.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210412 02:33:16.765" endtime="20210412 02:34:08.254"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:34:08.261" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:34:08.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:34:08.264" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:34:08.259" endtime="20210412 02:34:08.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:34:08.265" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:34:08.265" endtime="20210412 02:34:08.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:34:08.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:34:08.265" endtime="20210412 02:34:08.266"/>
</kw>
<status status="PASS" starttime="20210412 02:34:08.258" endtime="20210412 02:34:08.266"/>
</kw>
<msg timestamp="20210412 02:34:08.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:34:08.258" endtime="20210412 02:34:08.267"/>
</kw>
<msg timestamp="20210412 02:34:08.267" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:34:08.257" endtime="20210412 02:34:08.267"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:34:08.268" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:34:08.267" endtime="20210412 02:34:08.268"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:34:08.272" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:34:08.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:34:08.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:34:08.270" endtime="20210412 02:34:08.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:34:08.281" level="INFO"/>
<status status="PASS" starttime="20210412 02:34:08.281" endtime="20210412 02:34:08.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:34:08.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:34:08.282" endtime="20210412 02:34:08.282"/>
</kw>
<status status="PASS" starttime="20210412 02:34:08.270" endtime="20210412 02:34:08.283"/>
</kw>
<msg timestamp="20210412 02:34:08.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:34:08.269" endtime="20210412 02:34:08.283"/>
</kw>
<status status="PASS" starttime="20210412 02:34:08.269" endtime="20210412 02:34:08.283"/>
</kw>
<status status="PASS" starttime="20210412 02:34:08.268" endtime="20210412 02:34:08.283"/>
</kw>
<status status="PASS" starttime="20210412 02:34:08.257" endtime="20210412 02:34:08.283"/>
</kw>
<status status="PASS" starttime="20210412 02:34:08.256" endtime="20210412 02:34:08.284"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:34:08.288" level="INFO">Running command 'ozone sh key put o3://om:9862/21145-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:37:19.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:37:19.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:34:08.286" endtime="20210412 02:37:19.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:37:19.942" level="INFO"/>
<status status="PASS" starttime="20210412 02:37:19.941" endtime="20210412 02:37:19.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:37:19.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:37:19.943" endtime="20210412 02:37:19.945"/>
</kw>
<status status="PASS" starttime="20210412 02:34:08.286" endtime="20210412 02:37:19.946"/>
</kw>
<msg timestamp="20210412 02:37:19.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:34:08.285" endtime="20210412 02:37:19.947"/>
</kw>
<status status="PASS" starttime="20210412 02:34:08.285" endtime="20210412 02:37:19.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:37:19.959" level="INFO">Running command 'ozone sh key getacl o3://om:9862/21145-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:37:26.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:37:26.783" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:37:19.952" endtime="20210412 02:37:26.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:37:26.784" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:37:26.784" endtime="20210412 02:37:26.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:37:26.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:37:26.785" endtime="20210412 02:37:26.786"/>
</kw>
<status status="PASS" starttime="20210412 02:37:19.950" endtime="20210412 02:37:26.787"/>
</kw>
<msg timestamp="20210412 02:37:26.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:37:19.949" endtime="20210412 02:37:26.788"/>
</kw>
<msg timestamp="20210412 02:37:26.789" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:37:19.948" endtime="20210412 02:37:26.789"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:37:26.789" endtime="20210412 02:37:26.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:37:26.799" level="INFO">Running command 'ozone sh key addacl o3://om:9862/21145-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:37:33.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:37:33.500" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:37:26.796" endtime="20210412 02:37:33.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:37:33.502" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:37:33.501" endtime="20210412 02:37:33.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:37:33.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:37:33.502" endtime="20210412 02:37:33.503"/>
</kw>
<status status="PASS" starttime="20210412 02:37:26.794" endtime="20210412 02:37:33.503"/>
</kw>
<msg timestamp="20210412 02:37:33.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:37:26.793" endtime="20210412 02:37:33.504"/>
</kw>
<msg timestamp="20210412 02:37:33.504" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210412 02:37:26.790" endtime="20210412 02:37:33.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:37:33.509" level="INFO">Running command 'ozone sh key getacl o3://om:9862/21145-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:37:40.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:37:40.517" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:37:33.506" endtime="20210412 02:37:40.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:37:40.519" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:37:40.518" endtime="20210412 02:37:40.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:37:40.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:37:40.519" endtime="20210412 02:37:40.520"/>
</kw>
<status status="PASS" starttime="20210412 02:37:33.506" endtime="20210412 02:37:40.521"/>
</kw>
<msg timestamp="20210412 02:37:40.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:37:33.505" endtime="20210412 02:37:40.521"/>
</kw>
<msg timestamp="20210412 02:37:40.522" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:37:33.504" endtime="20210412 02:37:40.522"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:37:40.523" endtime="20210412 02:37:40.524"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:37:40.530" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/21145-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:37:46.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:37:46.953" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210412 02:37:40.527" endtime="20210412 02:37:46.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:37:46.955" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210412 02:37:46.953" endtime="20210412 02:37:46.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:37:46.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:37:46.955" endtime="20210412 02:37:46.956"/>
</kw>
<status status="PASS" starttime="20210412 02:37:40.526" endtime="20210412 02:37:46.956"/>
</kw>
<msg timestamp="20210412 02:37:46.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:37:40.526" endtime="20210412 02:37:46.956"/>
</kw>
<msg timestamp="20210412 02:37:46.957" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210412 02:37:40.525" endtime="20210412 02:37:46.957"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:37:46.962" level="INFO">Running command 'ozone sh key getacl o3://om:9862/21145-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:37:53.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:37:53.954" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:37:46.959" endtime="20210412 02:37:53.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:37:53.956" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:37:53.955" endtime="20210412 02:37:53.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:37:53.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:37:53.957" endtime="20210412 02:37:53.958"/>
</kw>
<status status="PASS" starttime="20210412 02:37:46.958" endtime="20210412 02:37:53.959"/>
</kw>
<msg timestamp="20210412 02:37:53.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:37:46.958" endtime="20210412 02:37:53.959"/>
</kw>
<msg timestamp="20210412 02:37:53.959" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:37:46.957" endtime="20210412 02:37:53.959"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:37:53.960" endtime="20210412 02:37:53.961"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:37:53.967" level="INFO">Running command 'ozone sh key setacl o3://om:9862/21145-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:38:01.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:38:01.056" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:37:53.964" endtime="20210412 02:38:01.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:38:01.058" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:38:01.057" endtime="20210412 02:38:01.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:38:01.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:38:01.060" endtime="20210412 02:38:01.061"/>
</kw>
<status status="PASS" starttime="20210412 02:37:53.963" endtime="20210412 02:38:01.062"/>
</kw>
<msg timestamp="20210412 02:38:01.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:37:53.962" endtime="20210412 02:38:01.063"/>
</kw>
<msg timestamp="20210412 02:38:01.063" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:37:53.961" endtime="20210412 02:38:01.063"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:38:01.071" level="INFO">Running command 'ozone sh key getacl o3://om:9862/21145-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:38:08.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:38:08.592" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210412 02:38:01.067" endtime="20210412 02:38:08.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:38:08.595" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:38:08.593" endtime="20210412 02:38:08.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:38:08.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:38:08.595" endtime="20210412 02:38:08.597"/>
</kw>
<status status="PASS" starttime="20210412 02:38:01.066" endtime="20210412 02:38:08.597"/>
</kw>
<msg timestamp="20210412 02:38:08.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:38:01.065" endtime="20210412 02:38:08.598"/>
</kw>
<msg timestamp="20210412 02:38:08.598" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210412 02:38:01.064" endtime="20210412 02:38:08.599"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:38:08.599" endtime="20210412 02:38:08.601"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:38:08.601" endtime="20210412 02:38:08.603"/>
</kw>
<status status="PASS" starttime="20210412 02:34:08.284" endtime="20210412 02:38:08.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210412 02:34:08.255" endtime="20210412 02:38:08.604"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:38:08.616" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:38:08.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:38:08.620" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:38:08.613" endtime="20210412 02:38:08.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:38:08.622" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:38:08.620" endtime="20210412 02:38:08.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:38:08.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:38:08.622" endtime="20210412 02:38:08.624"/>
</kw>
<status status="PASS" starttime="20210412 02:38:08.612" endtime="20210412 02:38:08.624"/>
</kw>
<msg timestamp="20210412 02:38:08.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:38:08.611" endtime="20210412 02:38:08.624"/>
</kw>
<msg timestamp="20210412 02:38:08.625" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:38:08.610" endtime="20210412 02:38:08.625"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:38:08.626" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:38:08.625" endtime="20210412 02:38:08.626"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:38:08.631" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:38:08.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:38:08.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:38:08.628" endtime="20210412 02:38:08.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:38:08.816" level="INFO"/>
<status status="PASS" starttime="20210412 02:38:08.815" endtime="20210412 02:38:08.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:38:08.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:38:08.816" endtime="20210412 02:38:08.816"/>
</kw>
<status status="PASS" starttime="20210412 02:38:08.628" endtime="20210412 02:38:08.817"/>
</kw>
<msg timestamp="20210412 02:38:08.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:38:08.628" endtime="20210412 02:38:08.817"/>
</kw>
<status status="PASS" starttime="20210412 02:38:08.627" endtime="20210412 02:38:08.817"/>
</kw>
<status status="PASS" starttime="20210412 02:38:08.626" endtime="20210412 02:38:08.817"/>
</kw>
<status status="PASS" starttime="20210412 02:38:08.609" endtime="20210412 02:38:08.818"/>
</kw>
<status status="PASS" starttime="20210412 02:38:08.608" endtime="20210412 02:38:08.818"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:38:08.823" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/21145-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:38:15.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:38:15.500" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210412 02:38:08.821" endtime="20210412 02:38:15.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:38:15.506" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210412 02:38:15.504" endtime="20210412 02:38:15.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:38:15.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:38:15.507" endtime="20210412 02:38:15.509"/>
</kw>
<status status="PASS" starttime="20210412 02:38:08.820" endtime="20210412 02:38:15.510"/>
</kw>
<msg timestamp="20210412 02:38:15.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:38:08.820" endtime="20210412 02:38:15.511"/>
</kw>
<status status="PASS" starttime="20210412 02:38:08.819" endtime="20210412 02:38:15.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:38:15.521" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/21145-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:38:22.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:38:22.951" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210412 02:38:15.517" endtime="20210412 02:38:22.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:38:22.954" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:38:22.953" endtime="20210412 02:38:22.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:38:22.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:38:22.954" endtime="20210412 02:38:22.955"/>
</kw>
<status status="PASS" starttime="20210412 02:38:15.516" endtime="20210412 02:38:22.955"/>
</kw>
<msg timestamp="20210412 02:38:22.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:38:15.515" endtime="20210412 02:38:22.956"/>
</kw>
<msg timestamp="20210412 02:38:22.957" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210412 02:38:15.512" endtime="20210412 02:38:22.957"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:38:22.957" endtime="20210412 02:38:22.959"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:38:22.968" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/21145-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:38:29.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:38:29.563" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210412 02:38:22.964" endtime="20210412 02:38:29.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:38:29.565" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210412 02:38:29.564" endtime="20210412 02:38:29.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:38:29.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:38:29.565" endtime="20210412 02:38:29.566"/>
</kw>
<status status="PASS" starttime="20210412 02:38:22.963" endtime="20210412 02:38:29.566"/>
</kw>
<msg timestamp="20210412 02:38:29.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:38:22.961" endtime="20210412 02:38:29.566"/>
</kw>
<msg timestamp="20210412 02:38:29.566" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210412 02:38:22.960" endtime="20210412 02:38:29.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:38:29.571" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/21145-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:38:36.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:38:36.614" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210412 02:38:29.568" endtime="20210412 02:38:36.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:38:36.615" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:38:36.614" endtime="20210412 02:38:36.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:38:36.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:38:36.616" endtime="20210412 02:38:36.616"/>
</kw>
<status status="PASS" starttime="20210412 02:38:29.568" endtime="20210412 02:38:36.617"/>
</kw>
<msg timestamp="20210412 02:38:36.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:38:29.568" endtime="20210412 02:38:36.617"/>
</kw>
<msg timestamp="20210412 02:38:36.618" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210412 02:38:29.567" endtime="20210412 02:38:36.618"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:38:36.619" endtime="20210412 02:38:36.620"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:38:36.626" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/21145-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:38:43.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:38:43.907" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:38:36.623" endtime="20210412 02:38:43.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:38:43.908" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:38:43.907" endtime="20210412 02:38:43.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:38:43.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:38:43.909" endtime="20210412 02:38:43.909"/>
</kw>
<status status="PASS" starttime="20210412 02:38:36.622" endtime="20210412 02:38:43.910"/>
</kw>
<msg timestamp="20210412 02:38:43.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:38:36.622" endtime="20210412 02:38:43.910"/>
</kw>
<msg timestamp="20210412 02:38:43.910" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210412 02:38:36.621" endtime="20210412 02:38:43.910"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:38:43.918" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/21145-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:38:50.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:38:50.939" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210412 02:38:43.914" endtime="20210412 02:38:50.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:38:50.942" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:38:50.940" endtime="20210412 02:38:50.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:38:50.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:38:50.943" endtime="20210412 02:38:50.944"/>
</kw>
<status status="PASS" starttime="20210412 02:38:43.912" endtime="20210412 02:38:50.945"/>
</kw>
<msg timestamp="20210412 02:38:50.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:38:43.911" endtime="20210412 02:38:50.946"/>
</kw>
<msg timestamp="20210412 02:38:50.946" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210412 02:38:43.911" endtime="20210412 02:38:50.946"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:38:50.947" endtime="20210412 02:38:50.948"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:38:50.948" endtime="20210412 02:38:50.950"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:38:50.958" level="INFO">Running command 'ozone sh key put o3://om:9862/21145-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:02.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:42:02.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:38:50.954" endtime="20210412 02:42:02.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:02.046" level="INFO"/>
<status status="PASS" starttime="20210412 02:42:02.045" endtime="20210412 02:42:02.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:42:02.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:42:02.046" endtime="20210412 02:42:02.047"/>
</kw>
<status status="PASS" starttime="20210412 02:38:50.952" endtime="20210412 02:42:02.048"/>
</kw>
<msg timestamp="20210412 02:42:02.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:38:50.952" endtime="20210412 02:42:02.048"/>
</kw>
<status status="PASS" starttime="20210412 02:38:50.950" endtime="20210412 02:42:02.048"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:02.053" level="INFO">Running command 'ozone sh key getacl o3://om:9862/21145-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:09.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:42:09.416" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:42:02.050" endtime="20210412 02:42:09.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:09.418" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210412 02:42:09.417" endtime="20210412 02:42:09.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:42:09.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:42:09.419" endtime="20210412 02:42:09.420"/>
</kw>
<status status="PASS" starttime="20210412 02:42:02.049" endtime="20210412 02:42:09.421"/>
</kw>
<msg timestamp="20210412 02:42:09.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:42:02.049" endtime="20210412 02:42:09.421"/>
</kw>
<msg timestamp="20210412 02:42:09.422" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210412 02:42:02.048" endtime="20210412 02:42:09.422"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:42:09.422" endtime="20210412 02:42:09.423"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210412 02:42:09.424" endtime="20210412 02:42:09.425"/>
</kw>
<status status="PASS" starttime="20210412 02:38:08.818" endtime="20210412 02:42:09.425"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210412 02:38:08.605" endtime="20210412 02:42:09.426"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:09.442" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:09.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:42:09.445" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:42:09.439" endtime="20210412 02:42:09.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:09.447" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:42:09.446" endtime="20210412 02:42:09.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:42:09.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:42:09.447" endtime="20210412 02:42:09.449"/>
</kw>
<status status="PASS" starttime="20210412 02:42:09.438" endtime="20210412 02:42:09.449"/>
</kw>
<msg timestamp="20210412 02:42:09.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:42:09.437" endtime="20210412 02:42:09.450"/>
</kw>
<msg timestamp="20210412 02:42:09.450" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:42:09.430" endtime="20210412 02:42:09.450"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:42:09.451" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:42:09.450" endtime="20210412 02:42:09.451"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:09.458" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:09.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:42:09.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:42:09.454" endtime="20210412 02:42:09.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:09.471" level="INFO"/>
<status status="PASS" starttime="20210412 02:42:09.470" endtime="20210412 02:42:09.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:42:09.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:42:09.471" endtime="20210412 02:42:09.472"/>
</kw>
<status status="PASS" starttime="20210412 02:42:09.454" endtime="20210412 02:42:09.473"/>
</kw>
<msg timestamp="20210412 02:42:09.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:42:09.453" endtime="20210412 02:42:09.473"/>
</kw>
<status status="PASS" starttime="20210412 02:42:09.452" endtime="20210412 02:42:09.473"/>
</kw>
<status status="PASS" starttime="20210412 02:42:09.452" endtime="20210412 02:42:09.474"/>
</kw>
<status status="PASS" starttime="20210412 02:42:09.429" endtime="20210412 02:42:09.474"/>
</kw>
<status status="PASS" starttime="20210412 02:42:09.429" endtime="20210412 02:42:09.474"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:09.480" level="INFO">Running command 'ozone sh volume info o3:///21145-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:16.562" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:42:16.563" level="INFO">${output} = VOLUME_NOT_FOUND Volume 21145-rpcwport is not found</msg>
<status status="PASS" starttime="20210412 02:42:09.477" endtime="20210412 02:42:16.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:16.565" level="INFO">VOLUME_NOT_FOUND Volume 21145-rpcwport is not found</msg>
<status status="PASS" starttime="20210412 02:42:16.564" endtime="20210412 02:42:16.565"/>
</kw>
<msg timestamp="20210412 02:42:16.566" level="INFO">${result} = VOLUME_NOT_FOUND Volume 21145-rpcwport is not found</msg>
<status status="PASS" starttime="20210412 02:42:09.476" endtime="20210412 02:42:16.566"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:42:16.566" endtime="20210412 02:42:16.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:16.574" level="INFO">Running command 'ozone sh volume create o3:///21145-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:23.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:42:23.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:42:16.571" endtime="20210412 02:42:23.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:23.687" level="INFO"/>
<status status="PASS" starttime="20210412 02:42:23.686" endtime="20210412 02:42:23.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:42:23.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:42:23.688" endtime="20210412 02:42:23.688"/>
</kw>
<status status="PASS" starttime="20210412 02:42:16.570" endtime="20210412 02:42:23.689"/>
</kw>
<msg timestamp="20210412 02:42:23.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:42:16.569" endtime="20210412 02:42:23.689"/>
</kw>
<msg timestamp="20210412 02:42:23.690" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210412 02:42:16.568" endtime="20210412 02:42:23.690"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:42:23.690" endtime="20210412 02:42:23.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:23.697" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="21145-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:30.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:42:30.969" level="INFO">${output} = {
  "metadata": {},
  "name": "21145-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210412 02:42:23.693" endtime="20210412 02:42:30.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:30.971" level="INFO">{
  "metadata": {},
  "name": "21145-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-12T02:42:23.371Z",
  "modificationTime": "2021-04-12T02:42:23.371Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210412 02:42:30.970" endtime="20210412 02:42:30.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:42:30.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:42:30.971" endtime="20210412 02:42:30.972"/>
</kw>
<status status="PASS" starttime="20210412 02:42:23.692" endtime="20210412 02:42:30.972"/>
</kw>
<msg timestamp="20210412 02:42:30.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:42:23.692" endtime="20210412 02:42:30.973"/>
</kw>
<msg timestamp="20210412 02:42:30.973" level="INFO">${result} = {
  "metadata": {},
  "name": "21145-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210412 02:42:23.691" endtime="20210412 02:42:30.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:42:30.974" endtime="20210412 02:42:30.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:30.982" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="21145-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:38.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:42:38.576" level="INFO">${output} = {
  "metadata": {},
  "name": "21145-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210412 02:42:30.976" endtime="20210412 02:42:38.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:38.577" level="INFO">{
  "metadata": {},
  "name": "21145-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-12T02:42:23.371Z",
  "modificationTime": "2021-04-12T02:42:23.371Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210412 02:42:38.577" endtime="20210412 02:42:38.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:42:38.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:42:38.578" endtime="20210412 02:42:38.578"/>
</kw>
<status status="PASS" starttime="20210412 02:42:30.976" endtime="20210412 02:42:38.579"/>
</kw>
<msg timestamp="20210412 02:42:38.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:42:30.975" endtime="20210412 02:42:38.579"/>
</kw>
<msg timestamp="20210412 02:42:38.579" level="INFO">${result} = {
  "metadata": {},
  "name": "21145-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210412 02:42:30.974" endtime="20210412 02:42:38.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:42:38.579" endtime="20210412 02:42:38.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:38.586" level="INFO">Running command 'ozone sh volume setquota o3:///21145-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:46.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:42:46.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:42:38.583" endtime="20210412 02:42:46.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:46.218" level="INFO"/>
<status status="PASS" starttime="20210412 02:42:46.217" endtime="20210412 02:42:46.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:42:46.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:42:46.218" endtime="20210412 02:42:46.219"/>
</kw>
<status status="PASS" starttime="20210412 02:42:38.582" endtime="20210412 02:42:46.220"/>
</kw>
<msg timestamp="20210412 02:42:46.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:42:38.581" endtime="20210412 02:42:46.220"/>
</kw>
<status status="PASS" starttime="20210412 02:42:38.580" endtime="20210412 02:42:46.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:46.229" level="INFO">Running command 'ozone sh volume info o3:///21145-rpcwport | jq -r '. | select(.name=="21145-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:53.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:42:53.260" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:42:46.225" endtime="20210412 02:42:53.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:53.262" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210412 02:42:53.261" endtime="20210412 02:42:53.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:42:53.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:42:53.262" endtime="20210412 02:42:53.263"/>
</kw>
<status status="PASS" starttime="20210412 02:42:46.224" endtime="20210412 02:42:53.264"/>
</kw>
<msg timestamp="20210412 02:42:53.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:42:46.223" endtime="20210412 02:42:53.264"/>
</kw>
<msg timestamp="20210412 02:42:53.264" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:42:46.221" endtime="20210412 02:42:53.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:42:53.264" endtime="20210412 02:42:53.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:53.269" level="INFO">Running command 'ozone sh bucket create o3:///21145-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:42:58.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:42:58.788" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:42:53.267" endtime="20210412 02:42:58.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:42:58.790" level="INFO"/>
<status status="PASS" starttime="20210412 02:42:58.789" endtime="20210412 02:42:58.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:42:58.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:42:58.790" endtime="20210412 02:42:58.791"/>
</kw>
<status status="PASS" starttime="20210412 02:42:53.266" endtime="20210412 02:42:58.791"/>
</kw>
<msg timestamp="20210412 02:42:58.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:42:53.266" endtime="20210412 02:42:58.792"/>
</kw>
<status status="PASS" starttime="20210412 02:42:53.265" endtime="20210412 02:42:58.792"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:42:58.801" level="INFO">Running command 'ozone sh bucket info o3:///21145-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:43:06.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:43:06.136" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210412 02:42:58.797" endtime="20210412 02:43:06.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:43:06.138" level="INFO">DISK</msg>
<status status="PASS" starttime="20210412 02:43:06.136" endtime="20210412 02:43:06.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:43:06.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:43:06.138" endtime="20210412 02:43:06.139"/>
</kw>
<status status="PASS" starttime="20210412 02:42:58.795" endtime="20210412 02:43:06.140"/>
</kw>
<msg timestamp="20210412 02:43:06.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:42:58.795" endtime="20210412 02:43:06.140"/>
</kw>
<msg timestamp="20210412 02:43:06.141" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210412 02:42:58.793" endtime="20210412 02:43:06.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:43:06.141" endtime="20210412 02:43:06.143"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:43:06.149" level="INFO">Running command 'ozone sh bucket info o3:///21145-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:43:13.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:43:13.335" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:43:06.145" endtime="20210412 02:43:13.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:43:13.337" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210412 02:43:13.336" endtime="20210412 02:43:13.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:43:13.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:43:13.338" endtime="20210412 02:43:13.339"/>
</kw>
<status status="PASS" starttime="20210412 02:43:06.145" endtime="20210412 02:43:13.340"/>
</kw>
<msg timestamp="20210412 02:43:13.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:43:06.144" endtime="20210412 02:43:13.340"/>
</kw>
<msg timestamp="20210412 02:43:13.341" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:43:06.143" endtime="20210412 02:43:13.341"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:43:13.341" endtime="20210412 02:43:13.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:43:13.351" level="INFO">Running command 'ozone sh bucket info o3:///21145-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:43:20.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:43:20.814" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210412 02:43:13.345" endtime="20210412 02:43:20.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:43:20.816" level="INFO">100</msg>
<status status="PASS" starttime="20210412 02:43:20.815" endtime="20210412 02:43:20.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:43:20.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:43:20.816" endtime="20210412 02:43:20.817"/>
</kw>
<status status="PASS" starttime="20210412 02:43:13.345" endtime="20210412 02:43:20.817"/>
</kw>
<msg timestamp="20210412 02:43:20.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:43:13.344" endtime="20210412 02:43:20.817"/>
</kw>
<msg timestamp="20210412 02:43:20.818" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210412 02:43:13.343" endtime="20210412 02:43:20.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:43:20.818" endtime="20210412 02:43:20.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:43:20.825" level="INFO">Running command 'ozone sh bucket setquota o3:///21145-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:43:27.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:43:27.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:43:20.820" endtime="20210412 02:43:27.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:43:27.943" level="INFO"/>
<status status="PASS" starttime="20210412 02:43:27.942" endtime="20210412 02:43:27.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:43:27.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:43:27.943" endtime="20210412 02:43:27.945"/>
</kw>
<status status="PASS" starttime="20210412 02:43:20.820" endtime="20210412 02:43:27.946"/>
</kw>
<msg timestamp="20210412 02:43:27.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:43:20.819" endtime="20210412 02:43:27.946"/>
</kw>
<status status="PASS" starttime="20210412 02:43:20.819" endtime="20210412 02:43:27.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:43:27.953" level="INFO">Running command 'ozone sh bucket info o3:///21145-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:43:35.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:43:35.597" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210412 02:43:27.950" endtime="20210412 02:43:35.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:43:35.598" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210412 02:43:35.597" endtime="20210412 02:43:35.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:43:35.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:43:35.599" endtime="20210412 02:43:35.600"/>
</kw>
<status status="PASS" starttime="20210412 02:43:27.949" endtime="20210412 02:43:35.600"/>
</kw>
<msg timestamp="20210412 02:43:35.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:43:27.949" endtime="20210412 02:43:35.600"/>
</kw>
<msg timestamp="20210412 02:43:35.601" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210412 02:43:27.947" endtime="20210412 02:43:35.601"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:43:35.602" endtime="20210412 02:43:35.603"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:43:35.608" level="INFO">Running command 'ozone sh bucket info o3:///21145-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:43:43.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:43:43.209" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210412 02:43:35.605" endtime="20210412 02:43:43.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:43:43.210" level="INFO">1000</msg>
<status status="PASS" starttime="20210412 02:43:43.210" endtime="20210412 02:43:43.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:43:43.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:43:43.211" endtime="20210412 02:43:43.212"/>
</kw>
<status status="PASS" starttime="20210412 02:43:35.604" endtime="20210412 02:43:43.213"/>
</kw>
<msg timestamp="20210412 02:43:43.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:43:35.604" endtime="20210412 02:43:43.213"/>
</kw>
<msg timestamp="20210412 02:43:43.213" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210412 02:43:35.603" endtime="20210412 02:43:43.213"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:43:43.213" endtime="20210412 02:43:43.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:43:43.224" level="INFO">Running command 'ozone sh bucket list o3:///21145-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:43:50.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:43:50.385" level="INFO">${output} = 21145-rpcwport</msg>
<status status="PASS" starttime="20210412 02:43:43.218" endtime="20210412 02:43:50.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:43:50.386" level="INFO">21145-rpcwport</msg>
<status status="PASS" starttime="20210412 02:43:50.385" endtime="20210412 02:43:50.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:43:50.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:43:50.387" endtime="20210412 02:43:50.387"/>
</kw>
<status status="PASS" starttime="20210412 02:43:43.218" endtime="20210412 02:43:50.388"/>
</kw>
<msg timestamp="20210412 02:43:50.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:43:43.216" endtime="20210412 02:43:50.388"/>
</kw>
<msg timestamp="20210412 02:43:50.388" level="INFO">${result} = 21145-rpcwport</msg>
<status status="PASS" starttime="20210412 02:43:43.214" endtime="20210412 02:43:50.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:43:50.388" endtime="20210412 02:43:50.389"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:43:50.397" level="INFO">Running command 'ozone sh key put o3:///21145-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:02.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:47:02.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:43:50.393" endtime="20210412 02:47:02.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:47:02.839" level="INFO"/>
<status status="PASS" starttime="20210412 02:47:02.838" endtime="20210412 02:47:02.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:47:02.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:47:02.839" endtime="20210412 02:47:02.841"/>
</kw>
<status status="PASS" starttime="20210412 02:43:50.392" endtime="20210412 02:47:02.841"/>
</kw>
<msg timestamp="20210412 02:47:02.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:43:50.392" endtime="20210412 02:47:02.842"/>
</kw>
<status status="PASS" starttime="20210412 02:43:50.390" endtime="20210412 02:47:02.842"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:02.851" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:02.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:47:02.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:47:02.846" endtime="20210412 02:47:02.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:47:02.857" level="INFO"/>
<status status="PASS" starttime="20210412 02:47:02.856" endtime="20210412 02:47:02.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:47:02.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:47:02.858" endtime="20210412 02:47:02.860"/>
</kw>
<status status="PASS" starttime="20210412 02:47:02.845" endtime="20210412 02:47:02.860"/>
</kw>
<msg timestamp="20210412 02:47:02.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:47:02.844" endtime="20210412 02:47:02.861"/>
</kw>
<status status="PASS" starttime="20210412 02:47:02.843" endtime="20210412 02:47:02.861"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:02.867" level="INFO">Running command 'ozone sh key get o3:///21145-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:09.429" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210412 02:47:02.864" endtime="20210412 02:47:09.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.430" endtime="20210412 02:47:09.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.430" endtime="20210412 02:47:09.430"/>
</kw>
<status status="FAIL" starttime="20210412 02:47:02.863" endtime="20210412 02:47:09.431"/>
</kw>
<msg timestamp="20210412 02:47:09.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210412 02:47:02.863" endtime="20210412 02:47:09.431"/>
</kw>
<status status="FAIL" starttime="20210412 02:47:02.862" endtime="20210412 02:47:09.432"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.433" endtime="20210412 02:47:09.433"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.433" endtime="20210412 02:47:09.433"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.433" endtime="20210412 02:47:09.433"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.433" endtime="20210412 02:47:09.434"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.434" endtime="20210412 02:47:09.434"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.434" endtime="20210412 02:47:09.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.434" endtime="20210412 02:47:09.434"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.434" endtime="20210412 02:47:09.435"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.435" endtime="20210412 02:47:09.435"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.435" endtime="20210412 02:47:09.435"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.436" endtime="20210412 02:47:09.436"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.436" endtime="20210412 02:47:09.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.436" endtime="20210412 02:47:09.437"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.437" endtime="20210412 02:47:09.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.437" endtime="20210412 02:47:09.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.439" endtime="20210412 02:47:09.439"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.439" endtime="20210412 02:47:09.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.440" endtime="20210412 02:47:09.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.441" endtime="20210412 02:47:09.441"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.441" endtime="20210412 02:47:09.441"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.442" endtime="20210412 02:47:09.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.443" endtime="20210412 02:47:09.443"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.445" endtime="20210412 02:47:09.445"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.445" endtime="20210412 02:47:09.445"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.446" endtime="20210412 02:47:09.446"/>
</kw>
<status status="FAIL" starttime="20210412 02:43:50.390" endtime="20210412 02:47:09.447"/>
</kw>
<status status="FAIL" starttime="20210412 02:43:50.389" endtime="20210412 02:47:09.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.448" endtime="20210412 02:47:09.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.449" endtime="20210412 02:47:09.450"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.450" endtime="20210412 02:47:09.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.451" endtime="20210412 02:47:09.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.451" endtime="20210412 02:47:09.452"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.453" endtime="20210412 02:47:09.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.454" endtime="20210412 02:47:09.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.455" endtime="20210412 02:47:09.455"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.455" endtime="20210412 02:47:09.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.456" endtime="20210412 02:47:09.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.457" endtime="20210412 02:47:09.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.458" endtime="20210412 02:47:09.458"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.459" endtime="20210412 02:47:09.459"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.460" endtime="20210412 02:47:09.460"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.461" endtime="20210412 02:47:09.461"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.461" endtime="20210412 02:47:09.461"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.461" endtime="20210412 02:47:09.461"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.461" endtime="20210412 02:47:09.461"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.462" endtime="20210412 02:47:09.462"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.462" endtime="20210412 02:47:09.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.462" endtime="20210412 02:47:09.462"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.465" endtime="20210412 02:47:09.465"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.465" endtime="20210412 02:47:09.466"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:47:09.466" endtime="20210412 02:47:09.466"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.467" endtime="20210412 02:47:09.467"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:47:09.467" endtime="20210412 02:47:09.467"/>
</kw>
<status status="FAIL" starttime="20210412 02:42:09.474" endtime="20210412 02:47:09.468"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210412 02:42:09.427" endtime="20210412 02:47:09.470">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:09.501" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:09.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:47:09.529" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:47:09.484" endtime="20210412 02:47:09.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:47:09.530" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:47:09.530" endtime="20210412 02:47:09.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:47:09.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:47:09.531" endtime="20210412 02:47:09.531"/>
</kw>
<status status="PASS" starttime="20210412 02:47:09.482" endtime="20210412 02:47:09.532"/>
</kw>
<msg timestamp="20210412 02:47:09.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:47:09.481" endtime="20210412 02:47:09.532"/>
</kw>
<msg timestamp="20210412 02:47:09.537" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:47:09.480" endtime="20210412 02:47:09.537"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:47:09.540" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:47:09.537" endtime="20210412 02:47:09.540"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:09.580" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:09.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:47:09.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:47:09.554" endtime="20210412 02:47:09.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:47:09.784" level="INFO"/>
<status status="PASS" starttime="20210412 02:47:09.783" endtime="20210412 02:47:09.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:47:09.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:47:09.784" endtime="20210412 02:47:09.785"/>
</kw>
<status status="PASS" starttime="20210412 02:47:09.552" endtime="20210412 02:47:09.786"/>
</kw>
<msg timestamp="20210412 02:47:09.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:47:09.548" endtime="20210412 02:47:09.786"/>
</kw>
<status status="PASS" starttime="20210412 02:47:09.544" endtime="20210412 02:47:09.787"/>
</kw>
<status status="PASS" starttime="20210412 02:47:09.541" endtime="20210412 02:47:09.787"/>
</kw>
<status status="PASS" starttime="20210412 02:47:09.478" endtime="20210412 02:47:09.787"/>
</kw>
<status status="PASS" starttime="20210412 02:47:09.475" endtime="20210412 02:47:09.788"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:09.834" level="INFO">Running command 'ozone sh volume info /21145-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:21.318" level="INFO">${rc} = 255</msg>
<msg timestamp="20210412 02:47:21.318" level="INFO">${output} = VOLUME_NOT_FOUND Volume 21145-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210412 02:47:09.797" endtime="20210412 02:47:21.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:47:21.322" level="INFO">VOLUME_NOT_FOUND Volume 21145-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210412 02:47:21.321" endtime="20210412 02:47:21.324"/>
</kw>
<msg timestamp="20210412 02:47:21.329" level="INFO">${result} = VOLUME_NOT_FOUND Volume 21145-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210412 02:47:09.795" endtime="20210412 02:47:21.329"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:47:21.329" endtime="20210412 02:47:21.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:21.347" level="INFO">Running command 'ozone sh volume create /21145-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:28.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:47:28.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:47:21.335" endtime="20210412 02:47:28.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:47:28.944" level="INFO"/>
<status status="PASS" starttime="20210412 02:47:28.941" endtime="20210412 02:47:28.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:47:28.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:47:28.945" endtime="20210412 02:47:28.947"/>
</kw>
<status status="PASS" starttime="20210412 02:47:21.334" endtime="20210412 02:47:28.948"/>
</kw>
<msg timestamp="20210412 02:47:28.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:47:21.333" endtime="20210412 02:47:28.949"/>
</kw>
<msg timestamp="20210412 02:47:28.950" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210412 02:47:21.329" endtime="20210412 02:47:28.950"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:47:28.951" endtime="20210412 02:47:28.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:28.963" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="21145-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:35.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:47:35.961" level="INFO">${output} = {
  "metadata": {},
  "name": "21145-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210412 02:47:28.958" endtime="20210412 02:47:35.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:47:35.964" level="INFO">{
  "metadata": {},
  "name": "21145-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-12T02:47:28.502Z",
  "modificationTime": "2021-04-12T02:47:28.502Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210412 02:47:35.962" endtime="20210412 02:47:35.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:47:35.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:47:35.965" endtime="20210412 02:47:35.966"/>
</kw>
<status status="PASS" starttime="20210412 02:47:28.956" endtime="20210412 02:47:35.967"/>
</kw>
<msg timestamp="20210412 02:47:35.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:47:28.955" endtime="20210412 02:47:35.968"/>
</kw>
<msg timestamp="20210412 02:47:35.969" level="INFO">${result} = {
  "metadata": {},
  "name": "21145-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210412 02:47:28.952" endtime="20210412 02:47:35.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:47:35.970" endtime="20210412 02:47:35.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:35.978" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="21145-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:43.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:47:43.558" level="INFO">${output} = {
  "metadata": {},
  "name": "21145-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210412 02:47:35.974" endtime="20210412 02:47:43.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:47:43.560" level="INFO">{
  "metadata": {},
  "name": "21145-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-12T02:47:28.502Z",
  "modificationTime": "2021-04-12T02:47:28.502Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210412 02:47:43.559" endtime="20210412 02:47:43.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:47:43.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:47:43.561" endtime="20210412 02:47:43.562"/>
</kw>
<status status="PASS" starttime="20210412 02:47:35.973" endtime="20210412 02:47:43.562"/>
</kw>
<msg timestamp="20210412 02:47:43.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:47:35.972" endtime="20210412 02:47:43.562"/>
</kw>
<msg timestamp="20210412 02:47:43.563" level="INFO">${result} = {
  "metadata": {},
  "name": "21145-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210412 02:47:35.971" endtime="20210412 02:47:43.563"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210412 02:47:43.563" endtime="20210412 02:47:43.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:43.569" level="INFO">Running command 'ozone sh volume setquota /21145-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:49.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:47:49.964" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:47:43.565" endtime="20210412 02:47:49.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:47:49.966" level="INFO"/>
<status status="PASS" starttime="20210412 02:47:49.964" endtime="20210412 02:47:49.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:47:49.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:47:49.966" endtime="20210412 02:47:49.968"/>
</kw>
<status status="PASS" starttime="20210412 02:47:43.565" endtime="20210412 02:47:49.968"/>
</kw>
<msg timestamp="20210412 02:47:49.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:47:43.565" endtime="20210412 02:47:49.969"/>
</kw>
<status status="PASS" starttime="20210412 02:47:43.564" endtime="20210412 02:47:49.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:49.978" level="INFO">Running command 'ozone sh volume info /21145-rpcwoscheme | jq -r '. | select(.name=="21145-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:47:57.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:47:57.282" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:47:49.975" endtime="20210412 02:47:57.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:47:57.284" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210412 02:47:57.283" endtime="20210412 02:47:57.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:47:57.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:47:57.284" endtime="20210412 02:47:57.285"/>
</kw>
<status status="PASS" starttime="20210412 02:47:49.973" endtime="20210412 02:47:57.285"/>
</kw>
<msg timestamp="20210412 02:47:57.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:47:49.972" endtime="20210412 02:47:57.285"/>
</kw>
<msg timestamp="20210412 02:47:57.286" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:47:49.970" endtime="20210412 02:47:57.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:47:57.286" endtime="20210412 02:47:57.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:47:57.297" level="INFO">Running command 'ozone sh bucket create /21145-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:48:04.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:48:04.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:47:57.293" endtime="20210412 02:48:04.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:48:04.465" level="INFO"/>
<status status="PASS" starttime="20210412 02:48:04.463" endtime="20210412 02:48:04.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:48:04.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:48:04.465" endtime="20210412 02:48:04.466"/>
</kw>
<status status="PASS" starttime="20210412 02:47:57.290" endtime="20210412 02:48:04.467"/>
</kw>
<msg timestamp="20210412 02:48:04.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:47:57.289" endtime="20210412 02:48:04.467"/>
</kw>
<status status="PASS" starttime="20210412 02:47:57.288" endtime="20210412 02:48:04.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:48:04.476" level="INFO">Running command 'ozone sh bucket info /21145-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:48:11.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:48:11.481" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210412 02:48:04.473" endtime="20210412 02:48:11.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:48:11.483" level="INFO">DISK</msg>
<status status="PASS" starttime="20210412 02:48:11.482" endtime="20210412 02:48:11.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:48:11.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:48:11.484" endtime="20210412 02:48:11.486"/>
</kw>
<status status="PASS" starttime="20210412 02:48:04.472" endtime="20210412 02:48:11.487"/>
</kw>
<msg timestamp="20210412 02:48:11.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:48:04.472" endtime="20210412 02:48:11.487"/>
</kw>
<msg timestamp="20210412 02:48:11.488" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210412 02:48:04.469" endtime="20210412 02:48:11.488"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:48:11.489" endtime="20210412 02:48:11.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:48:11.498" level="INFO">Running command 'ozone sh bucket info /21145-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:48:19.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:48:19.025" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:48:11.495" endtime="20210412 02:48:19.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:48:19.026" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210412 02:48:19.026" endtime="20210412 02:48:19.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:48:19.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:48:19.027" endtime="20210412 02:48:19.028"/>
</kw>
<status status="PASS" starttime="20210412 02:48:11.494" endtime="20210412 02:48:19.028"/>
</kw>
<msg timestamp="20210412 02:48:19.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:48:11.492" endtime="20210412 02:48:19.028"/>
</kw>
<msg timestamp="20210412 02:48:19.029" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210412 02:48:11.490" endtime="20210412 02:48:19.029"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:48:19.029" endtime="20210412 02:48:19.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:48:19.036" level="INFO">Running command 'ozone sh bucket info /21145-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:48:24.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:48:24.916" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210412 02:48:19.032" endtime="20210412 02:48:24.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:48:24.918" level="INFO">100</msg>
<status status="PASS" starttime="20210412 02:48:24.917" endtime="20210412 02:48:24.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:48:24.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:48:24.918" endtime="20210412 02:48:24.919"/>
</kw>
<status status="PASS" starttime="20210412 02:48:19.032" endtime="20210412 02:48:24.920"/>
</kw>
<msg timestamp="20210412 02:48:24.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:48:19.031" endtime="20210412 02:48:24.920"/>
</kw>
<msg timestamp="20210412 02:48:24.920" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210412 02:48:19.030" endtime="20210412 02:48:24.921"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:48:24.921" endtime="20210412 02:48:24.921"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:48:24.926" level="INFO">Running command 'ozone sh bucket setquota /21145-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:48:31.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:48:31.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:48:24.923" endtime="20210412 02:48:31.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:48:31.493" level="INFO"/>
<status status="PASS" starttime="20210412 02:48:31.492" endtime="20210412 02:48:31.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:48:31.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:48:31.494" endtime="20210412 02:48:31.495"/>
</kw>
<status status="PASS" starttime="20210412 02:48:24.923" endtime="20210412 02:48:31.495"/>
</kw>
<msg timestamp="20210412 02:48:31.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:48:24.922" endtime="20210412 02:48:31.495"/>
</kw>
<status status="PASS" starttime="20210412 02:48:24.921" endtime="20210412 02:48:31.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:48:31.504" level="INFO">Running command 'ozone sh bucket info /21145-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:48:38.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:48:38.870" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210412 02:48:31.500" endtime="20210412 02:48:38.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:48:38.872" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210412 02:48:38.871" endtime="20210412 02:48:38.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:48:38.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:48:38.872" endtime="20210412 02:48:38.874"/>
</kw>
<status status="PASS" starttime="20210412 02:48:31.499" endtime="20210412 02:48:38.875"/>
</kw>
<msg timestamp="20210412 02:48:38.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:48:31.498" endtime="20210412 02:48:38.875"/>
</kw>
<msg timestamp="20210412 02:48:38.875" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210412 02:48:31.497" endtime="20210412 02:48:38.875"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:48:38.875" endtime="20210412 02:48:38.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:48:38.880" level="INFO">Running command 'ozone sh bucket info /21145-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:48:44.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:48:44.586" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210412 02:48:38.878" endtime="20210412 02:48:44.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:48:44.587" level="INFO">1000</msg>
<status status="PASS" starttime="20210412 02:48:44.587" endtime="20210412 02:48:44.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:48:44.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:48:44.588" endtime="20210412 02:48:44.588"/>
</kw>
<status status="PASS" starttime="20210412 02:48:38.877" endtime="20210412 02:48:44.589"/>
</kw>
<msg timestamp="20210412 02:48:44.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:48:38.877" endtime="20210412 02:48:44.589"/>
</kw>
<msg timestamp="20210412 02:48:44.589" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210412 02:48:38.876" endtime="20210412 02:48:44.589"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:48:44.589" endtime="20210412 02:48:44.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:48:44.594" level="INFO">Running command 'ozone sh bucket list /21145-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:48:52.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:48:52.055" level="INFO">${output} = 21145-rpcwoscheme</msg>
<status status="PASS" starttime="20210412 02:48:44.592" endtime="20210412 02:48:52.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:48:52.058" level="INFO">21145-rpcwoscheme</msg>
<status status="PASS" starttime="20210412 02:48:52.056" endtime="20210412 02:48:52.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:48:52.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:48:52.059" endtime="20210412 02:48:52.061"/>
</kw>
<status status="PASS" starttime="20210412 02:48:44.591" endtime="20210412 02:48:52.062"/>
</kw>
<msg timestamp="20210412 02:48:52.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:48:44.591" endtime="20210412 02:48:52.063"/>
</kw>
<msg timestamp="20210412 02:48:52.063" level="INFO">${result} = 21145-rpcwoscheme</msg>
<status status="PASS" starttime="20210412 02:48:44.590" endtime="20210412 02:48:52.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210412 02:48:52.064" endtime="20210412 02:48:52.065"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:48:52.077" level="INFO">Running command 'ozone sh key put /21145-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:52:03.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:52:03.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:48:52.073" endtime="20210412 02:52:03.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:52:03.886" level="INFO"/>
<status status="PASS" starttime="20210412 02:52:03.885" endtime="20210412 02:52:03.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:52:03.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:52:03.886" endtime="20210412 02:52:03.887"/>
</kw>
<status status="PASS" starttime="20210412 02:48:52.071" endtime="20210412 02:52:03.888"/>
</kw>
<msg timestamp="20210412 02:52:03.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:48:52.070" endtime="20210412 02:52:03.888"/>
</kw>
<status status="PASS" starttime="20210412 02:48:52.069" endtime="20210412 02:52:03.888"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:52:03.907" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:52:03.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:52:03.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:52:03.900" endtime="20210412 02:52:03.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:52:03.916" level="INFO"/>
<status status="PASS" starttime="20210412 02:52:03.915" endtime="20210412 02:52:03.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:52:03.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:52:03.917" endtime="20210412 02:52:03.918"/>
</kw>
<status status="PASS" starttime="20210412 02:52:03.892" endtime="20210412 02:52:03.919"/>
</kw>
<msg timestamp="20210412 02:52:03.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:52:03.892" endtime="20210412 02:52:03.919"/>
</kw>
<status status="PASS" starttime="20210412 02:52:03.891" endtime="20210412 02:52:03.919"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:52:03.937" level="INFO">Running command 'ozone sh key get /21145-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:52:09.476" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210412 02:52:03.925" endtime="20210412 02:52:09.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.478" endtime="20210412 02:52:09.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.478" endtime="20210412 02:52:09.479"/>
</kw>
<status status="FAIL" starttime="20210412 02:52:03.923" endtime="20210412 02:52:09.479"/>
</kw>
<msg timestamp="20210412 02:52:09.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210412 02:52:03.922" endtime="20210412 02:52:09.480"/>
</kw>
<status status="FAIL" starttime="20210412 02:52:03.920" endtime="20210412 02:52:09.480"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.481" endtime="20210412 02:52:09.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.481" endtime="20210412 02:52:09.481"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.482" endtime="20210412 02:52:09.482"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.482" endtime="20210412 02:52:09.482"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.482" endtime="20210412 02:52:09.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.483" endtime="20210412 02:52:09.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.483" endtime="20210412 02:52:09.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.484" endtime="20210412 02:52:09.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.486" endtime="20210412 02:52:09.486"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.487" endtime="20210412 02:52:09.487"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.487" endtime="20210412 02:52:09.488"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.488" endtime="20210412 02:52:09.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.488" endtime="20210412 02:52:09.488"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.490" endtime="20210412 02:52:09.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.490" endtime="20210412 02:52:09.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.491" endtime="20210412 02:52:09.492"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.492" endtime="20210412 02:52:09.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.493" endtime="20210412 02:52:09.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.493" endtime="20210412 02:52:09.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.494" endtime="20210412 02:52:09.495"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.495" endtime="20210412 02:52:09.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.495" endtime="20210412 02:52:09.495"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.496" endtime="20210412 02:52:09.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.497" endtime="20210412 02:52:09.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.498" endtime="20210412 02:52:09.498"/>
</kw>
<status status="FAIL" starttime="20210412 02:48:52.066" endtime="20210412 02:52:09.498"/>
</kw>
<status status="FAIL" starttime="20210412 02:48:52.066" endtime="20210412 02:52:09.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.499" endtime="20210412 02:52:09.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.500" endtime="20210412 02:52:09.500"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.501" endtime="20210412 02:52:09.501"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.502" endtime="20210412 02:52:09.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.502" endtime="20210412 02:52:09.502"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.503" endtime="20210412 02:52:09.503"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.504" endtime="20210412 02:52:09.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.504" endtime="20210412 02:52:09.504"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.505" endtime="20210412 02:52:09.505"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.506" endtime="20210412 02:52:09.506"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.507" endtime="20210412 02:52:09.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.507" endtime="20210412 02:52:09.507"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.508" endtime="20210412 02:52:09.509"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.509" endtime="20210412 02:52:09.509"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.509" endtime="20210412 02:52:09.509"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.509" endtime="20210412 02:52:09.509"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.511" endtime="20210412 02:52:09.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.512" endtime="20210412 02:52:09.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.513" endtime="20210412 02:52:09.513"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.513" endtime="20210412 02:52:09.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.514" endtime="20210412 02:52:09.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.514" endtime="20210412 02:52:09.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.515" endtime="20210412 02:52:09.515"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210412 02:52:09.516" endtime="20210412 02:52:09.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.516" endtime="20210412 02:52:09.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210412 02:52:09.518" endtime="20210412 02:52:09.518"/>
</kw>
<status status="FAIL" starttime="20210412 02:47:09.788" endtime="20210412 02:52:09.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210412 02:47:09.472" endtime="20210412 02:52:09.520">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210412 02:27:22.562" endtime="20210412 02:52:09.525"/>
</suite>
<status status="FAIL" starttime="20210412 02:03:20.382" endtime="20210412 02:52:09.544"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:03:15.571" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:03:15.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:03:15.574" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210412 02:03:15.567" endtime="20210412 02:03:15.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:03:15.575" level="INFO">scm</msg>
<status status="PASS" starttime="20210412 02:03:15.574" endtime="20210412 02:03:15.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:03:15.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:03:15.575" endtime="20210412 02:03:15.576"/>
</kw>
<status status="PASS" starttime="20210412 02:03:15.566" endtime="20210412 02:03:15.576"/>
</kw>
<msg timestamp="20210412 02:03:15.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:03:15.566" endtime="20210412 02:03:15.576"/>
</kw>
<msg timestamp="20210412 02:03:15.577" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210412 02:03:15.565" endtime="20210412 02:03:15.577"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210412 02:03:15.577" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210412 02:03:15.577" endtime="20210412 02:03:15.577"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210412 02:03:15.581" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210412 02:03:15.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210412 02:03:15.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210412 02:03:15.580" endtime="20210412 02:03:15.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210412 02:03:15.593" level="INFO"/>
<status status="PASS" starttime="20210412 02:03:15.592" endtime="20210412 02:03:15.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210412 02:03:15.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210412 02:03:15.593" endtime="20210412 02:03:15.594"/>
</kw>
<status status="PASS" starttime="20210412 02:03:15.579" endtime="20210412 02:03:15.595"/>
</kw>
<msg timestamp="20210412 02:03:15.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210412 02:03:15.579" endtime="20210412 02:03:15.595"/>
</kw>
<status status="PASS" starttime="20210412 02:03:15.578" endtime="20210412 02:03:15.595"/>
</kw>
<status status="PASS" starttime="20210412 02:03:15.578" endtime="20210412 02:03:15.595"/>
</kw>
<status status="PASS" starttime="20210412 02:03:15.564" endtime="20210412 02:03:15.595"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210412 02:03:15.564" endtime="20210412 02:03:15.596"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210412 02:03:15.503" endtime="20210412 02:03:15.597"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2929256"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
