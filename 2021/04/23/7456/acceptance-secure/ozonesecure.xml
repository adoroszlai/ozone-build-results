<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.1 (Python 3.6.9 on linux)" generated="20210423 05:32:34.714" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:44:15.565" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:44:15.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:44:15.567" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:44:15.561" endtime="20210423 04:44:15.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:44:15.568" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:44:15.568" endtime="20210423 04:44:15.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:44:15.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:44:15.568" endtime="20210423 04:44:15.569"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.561" endtime="20210423 04:44:15.569"/>
</kw>
<msg timestamp="20210423 04:44:15.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:44:15.561" endtime="20210423 04:44:15.570"/>
</kw>
<msg timestamp="20210423 04:44:15.570" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:44:15.560" endtime="20210423 04:44:15.570"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:44:15.574" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:44:15.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:44:15.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:44:15.572" endtime="20210423 04:44:15.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:44:15.582" level="INFO"/>
<status status="PASS" starttime="20210423 04:44:15.581" endtime="20210423 04:44:15.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:44:15.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:44:15.582" endtime="20210423 04:44:15.583"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.571" endtime="20210423 04:44:15.583"/>
</kw>
<msg timestamp="20210423 04:44:15.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:44:15.571" endtime="20210423 04:44:15.583"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.571" endtime="20210423 04:44:15.583"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.570" endtime="20210423 04:44:15.583"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.560" endtime="20210423 04:44:15.584"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.559" endtime="20210423 04:44:15.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:44:15.587" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:44:15.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:44:15.701" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210423 04:44:15.585" endtime="20210423 04:44:15.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:44:15.703" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Fri, 23 Apr 2021 04:44:15 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCxQOFS2S0ZgRu4d2pcTEL86pcDIEWTaxtWqKW/MjdXcCJq62+d84w/0pOZNPgWyTvxWwNJt0vOuGakP+WVyAH4dmK
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1619189055691&amp;s=qC7+a7zIHkTFByNMafwmY+YnHlVuxL/Pw6YJwo2830I="; Path=/; HttpOnly
Last-Modified: Fri, 23 Apr 2021 04:28:16 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210423 04:44:15.702" endtime="20210423 04:44:15.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:44:15.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:44:15.704" endtime="20210423 04:44:15.704"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.585" endtime="20210423 04:44:15.705"/>
</kw>
<msg timestamp="20210423 04:44:15.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:44:15.584" endtime="20210423 04:44:15.705"/>
</kw>
<msg timestamp="20210423 04:44:15.705" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210423 04:44:15.584" endtime="20210423 04:44:15.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:44:15.706" endtime="20210423 04:44:15.706"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210423 04:44:15.558" endtime="20210423 04:44:15.706"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:44:15.714" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:44:15.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:44:15.717" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:44:15.712" endtime="20210423 04:44:15.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:44:15.718" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:44:15.718" endtime="20210423 04:44:15.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:44:15.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:44:15.718" endtime="20210423 04:44:15.719"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.711" endtime="20210423 04:44:15.720"/>
</kw>
<msg timestamp="20210423 04:44:15.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:44:15.710" endtime="20210423 04:44:15.720"/>
</kw>
<msg timestamp="20210423 04:44:15.720" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:44:15.710" endtime="20210423 04:44:15.720"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:44:15.722" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:44:15.720" endtime="20210423 04:44:15.722"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:44:15.727" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:44:15.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:44:15.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:44:15.725" endtime="20210423 04:44:15.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:44:15.735" level="INFO"/>
<status status="PASS" starttime="20210423 04:44:15.735" endtime="20210423 04:44:15.735"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:44:15.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:44:15.736" endtime="20210423 04:44:15.736"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.725" endtime="20210423 04:44:15.736"/>
</kw>
<msg timestamp="20210423 04:44:15.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:44:15.724" endtime="20210423 04:44:15.737"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.723" endtime="20210423 04:44:15.737"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.722" endtime="20210423 04:44:15.737"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.709" endtime="20210423 04:44:15.737"/>
</kw>
<status status="PASS" starttime="20210423 04:44:15.709" endtime="20210423 04:44:15.737"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:44:15.741" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:15.709" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210423 04:44:15.739" endtime="20210423 04:49:15.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210423 04:49:15.710" endtime="20210423 04:49:15.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210423 04:49:15.710" endtime="20210423 04:49:15.710"/>
</kw>
<status status="FAIL" starttime="20210423 04:44:15.738" endtime="20210423 04:49:15.710"/>
</kw>
<msg timestamp="20210423 04:49:15.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210423 04:44:15.738" endtime="20210423 04:49:15.711"/>
</kw>
<status status="FAIL" starttime="20210423 04:44:15.737" endtime="20210423 04:49:15.711"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210423 04:49:15.711" endtime="20210423 04:49:15.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 04:49:15.712" endtime="20210423 04:49:15.712"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210423 04:44:15.708" endtime="20210423 04:49:15.712">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210423 04:44:15.531" endtime="20210423 04:49:15.714"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:15.728" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:18.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:49:18.673" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210423 04:49:15.726" endtime="20210423 04:49:18.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:18.674" level="INFO">om</msg>
<status status="PASS" starttime="20210423 04:49:18.673" endtime="20210423 04:49:18.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:18.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:18.675" endtime="20210423 04:49:18.675"/>
</kw>
<status status="PASS" starttime="20210423 04:49:15.725" endtime="20210423 04:49:18.676"/>
</kw>
<msg timestamp="20210423 04:49:18.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:49:15.724" endtime="20210423 04:49:18.676"/>
</kw>
<msg timestamp="20210423 04:49:18.676" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210423 04:49:15.724" endtime="20210423 04:49:18.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:49:18.677" endtime="20210423 04:49:18.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:18.681" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:21.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:49:21.406" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210423 04:49:18.679" endtime="20210423 04:49:21.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:21.407" level="INFO">om</msg>
<status status="PASS" starttime="20210423 04:49:21.406" endtime="20210423 04:49:21.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:21.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:21.407" endtime="20210423 04:49:21.408"/>
</kw>
<status status="PASS" starttime="20210423 04:49:18.678" endtime="20210423 04:49:21.408"/>
</kw>
<msg timestamp="20210423 04:49:21.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:49:18.678" endtime="20210423 04:49:21.408"/>
</kw>
<msg timestamp="20210423 04:49:21.409" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210423 04:49:18.677" endtime="20210423 04:49:21.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:49:21.409" endtime="20210423 04:49:21.411"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210423 04:49:15.723" endtime="20210423 04:49:21.411"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:21.421" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:23.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:49:23.932" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:49:21.419" endtime="20210423 04:49:23.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:23.933" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:49:23.932" endtime="20210423 04:49:23.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:23.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:23.934" endtime="20210423 04:49:23.934"/>
</kw>
<status status="PASS" starttime="20210423 04:49:21.417" endtime="20210423 04:49:23.935"/>
</kw>
<msg timestamp="20210423 04:49:23.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:49:21.416" endtime="20210423 04:49:23.935"/>
</kw>
<msg timestamp="20210423 04:49:23.936" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210423 04:49:21.415" endtime="20210423 04:49:23.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:49:23.936" endtime="20210423 04:49:23.936"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:23.941" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:26.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:49:26.466" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:49:23.939" endtime="20210423 04:49:26.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:26.467" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:49:26.466" endtime="20210423 04:49:26.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:26.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:26.467" endtime="20210423 04:49:26.468"/>
</kw>
<status status="PASS" starttime="20210423 04:49:23.938" endtime="20210423 04:49:26.468"/>
</kw>
<msg timestamp="20210423 04:49:26.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:49:23.937" endtime="20210423 04:49:26.469"/>
</kw>
<msg timestamp="20210423 04:49:26.469" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210423 04:49:23.937" endtime="20210423 04:49:26.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:49:26.469" endtime="20210423 04:49:26.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210423 04:49:21.413" endtime="20210423 04:49:26.471"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:26.477" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:27.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:49:27.792" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210423 04:49:26.475" endtime="20210423 04:49:27.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:27.793" level="INFO">om</msg>
<status status="PASS" starttime="20210423 04:49:27.792" endtime="20210423 04:49:27.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:27.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:27.793" endtime="20210423 04:49:27.794"/>
</kw>
<status status="PASS" starttime="20210423 04:49:26.474" endtime="20210423 04:49:27.794"/>
</kw>
<msg timestamp="20210423 04:49:27.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:49:26.474" endtime="20210423 04:49:27.795"/>
</kw>
<msg timestamp="20210423 04:49:27.795" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210423 04:49:26.473" endtime="20210423 04:49:27.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:49:27.795" endtime="20210423 04:49:27.796"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:49:27.796" endtime="20210423 04:49:27.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:27.800" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:29.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:49:29.330" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210423 04:49:27.798" endtime="20210423 04:49:29.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:29.331" level="INFO">om</msg>
<status status="PASS" starttime="20210423 04:49:29.330" endtime="20210423 04:49:29.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:29.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:29.332" endtime="20210423 04:49:29.333"/>
</kw>
<status status="PASS" starttime="20210423 04:49:27.797" endtime="20210423 04:49:29.334"/>
</kw>
<msg timestamp="20210423 04:49:29.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:49:27.797" endtime="20210423 04:49:29.334"/>
</kw>
<msg timestamp="20210423 04:49:29.334" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210423 04:49:27.796" endtime="20210423 04:49:29.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:49:29.334" endtime="20210423 04:49:29.335"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:49:29.335" endtime="20210423 04:49:29.335"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210423 04:49:26.472" endtime="20210423 04:49:29.335"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:29.340" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:31.657" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 04:49:31.658" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210423 04:49:29.338" endtime="20210423 04:49:31.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:31.660" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210423 04:49:31.658" endtime="20210423 04:49:31.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:31.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:31.660" endtime="20210423 04:49:31.661"/>
</kw>
<msg timestamp="20210423 04:49:31.662" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210423 04:49:29.338" endtime="20210423 04:49:31.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:49:31.662" endtime="20210423 04:49:31.664"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:31.669" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:34.173" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 04:49:34.173" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210423 04:49:31.666" endtime="20210423 04:49:34.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:34.174" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210423 04:49:34.174" endtime="20210423 04:49:34.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:34.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:34.175" endtime="20210423 04:49:34.176"/>
</kw>
<msg timestamp="20210423 04:49:34.176" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210423 04:49:31.664" endtime="20210423 04:49:34.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:49:34.177" endtime="20210423 04:49:34.179"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210423 04:49:29.337" endtime="20210423 04:49:34.179"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210423 04:49:15.718" endtime="20210423 04:49:34.183"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210423 04:49:34.211" level="INFO">${random} = 70551</msg>
<status status="PASS" starttime="20210423 04:49:34.210" endtime="20210423 04:49:34.211"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:49:34.214" level="INFO">${source} = 70551-source</msg>
<status status="PASS" starttime="20210423 04:49:34.211" endtime="20210423 04:49:34.214"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:49:34.217" level="INFO">${target} = 70551-target</msg>
<status status="PASS" starttime="20210423 04:49:34.215" endtime="20210423 04:49:34.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:34.222" level="INFO">Running command 'ozone sh volume create 70551-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:40.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:49:40.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:49:34.220" endtime="20210423 04:49:40.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:40.437" level="INFO"/>
<status status="PASS" starttime="20210423 04:49:40.436" endtime="20210423 04:49:40.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:40.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:40.438" endtime="20210423 04:49:40.438"/>
</kw>
<status status="PASS" starttime="20210423 04:49:34.219" endtime="20210423 04:49:40.439"/>
</kw>
<msg timestamp="20210423 04:49:40.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:49:34.218" endtime="20210423 04:49:40.439"/>
</kw>
<status status="PASS" starttime="20210423 04:49:34.218" endtime="20210423 04:49:40.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:40.445" level="INFO">Running command 'ozone sh volume create 70551-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:47.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:49:47.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:49:40.442" endtime="20210423 04:49:47.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:47.629" level="INFO"/>
<status status="PASS" starttime="20210423 04:49:47.628" endtime="20210423 04:49:47.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:47.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:47.629" endtime="20210423 04:49:47.629"/>
</kw>
<status status="PASS" starttime="20210423 04:49:40.441" endtime="20210423 04:49:47.630"/>
</kw>
<msg timestamp="20210423 04:49:47.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:49:40.441" endtime="20210423 04:49:47.630"/>
</kw>
<status status="PASS" starttime="20210423 04:49:40.440" endtime="20210423 04:49:47.630"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:47.635" level="INFO">Running command 'ozone sh bucket create 70551-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:49:54.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:49:54.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:49:47.634" endtime="20210423 04:49:54.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:49:54.204" level="INFO"/>
<status status="PASS" starttime="20210423 04:49:54.202" endtime="20210423 04:49:54.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:49:54.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:49:54.204" endtime="20210423 04:49:54.205"/>
</kw>
<status status="PASS" starttime="20210423 04:49:47.633" endtime="20210423 04:49:54.206"/>
</kw>
<msg timestamp="20210423 04:49:54.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:49:47.632" endtime="20210423 04:49:54.206"/>
</kw>
<status status="PASS" starttime="20210423 04:49:47.631" endtime="20210423 04:49:54.206"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:49:54.213" level="INFO">Running command 'ozone sh key put 70551-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:03.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:03.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:49:54.210" endtime="20210423 04:53:03.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:03.752" level="INFO"/>
<status status="PASS" starttime="20210423 04:53:03.751" endtime="20210423 04:53:03.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:03.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:03.752" endtime="20210423 04:53:03.753"/>
</kw>
<status status="PASS" starttime="20210423 04:49:54.209" endtime="20210423 04:53:03.754"/>
</kw>
<msg timestamp="20210423 04:53:03.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:49:54.208" endtime="20210423 04:53:03.754"/>
</kw>
<status status="PASS" starttime="20210423 04:49:54.207" endtime="20210423 04:53:03.755"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:03.761" level="INFO">Running command 'ozone sh bucket create 70551-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:10.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:10.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:53:03.758" endtime="20210423 04:53:10.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:10.678" level="INFO"/>
<status status="PASS" starttime="20210423 04:53:10.677" endtime="20210423 04:53:10.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:10.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:10.679" endtime="20210423 04:53:10.680"/>
</kw>
<status status="PASS" starttime="20210423 04:53:03.757" endtime="20210423 04:53:10.681"/>
</kw>
<msg timestamp="20210423 04:53:10.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:03.756" endtime="20210423 04:53:10.681"/>
</kw>
<status status="PASS" starttime="20210423 04:53:03.755" endtime="20210423 04:53:10.681"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:10.686" level="INFO">Running command 'ozone sh bucket link 70551-source/readable-bucket 70551-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:15.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:15.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:53:10.684" endtime="20210423 04:53:15.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:15.879" level="INFO"/>
<status status="PASS" starttime="20210423 04:53:15.878" endtime="20210423 04:53:15.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:15.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:15.879" endtime="20210423 04:53:15.880"/>
</kw>
<status status="PASS" starttime="20210423 04:53:10.683" endtime="20210423 04:53:15.880"/>
</kw>
<msg timestamp="20210423 04:53:15.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:10.682" endtime="20210423 04:53:15.880"/>
</kw>
<status status="PASS" starttime="20210423 04:53:10.682" endtime="20210423 04:53:15.881"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:15.885" level="INFO">Running command 'ozone sh bucket link 70551-source/readable-bucket 70551-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:20.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:20.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:53:15.882" endtime="20210423 04:53:20.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:20.297" level="INFO"/>
<status status="PASS" starttime="20210423 04:53:20.297" endtime="20210423 04:53:20.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:20.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:20.298" endtime="20210423 04:53:20.298"/>
</kw>
<status status="PASS" starttime="20210423 04:53:15.882" endtime="20210423 04:53:20.298"/>
</kw>
<msg timestamp="20210423 04:53:20.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:15.881" endtime="20210423 04:53:20.299"/>
</kw>
<status status="PASS" starttime="20210423 04:53:15.881" endtime="20210423 04:53:20.299"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:20.302" level="INFO">Running command 'ozone sh bucket link 70551-source/unreadable-bucket 70551-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:26.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:26.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:53:20.301" endtime="20210423 04:53:26.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:26.686" level="INFO"/>
<status status="PASS" starttime="20210423 04:53:26.685" endtime="20210423 04:53:26.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:26.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:26.686" endtime="20210423 04:53:26.686"/>
</kw>
<status status="PASS" starttime="20210423 04:53:20.300" endtime="20210423 04:53:26.687"/>
</kw>
<msg timestamp="20210423 04:53:26.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:20.300" endtime="20210423 04:53:26.687"/>
</kw>
<status status="PASS" starttime="20210423 04:53:20.299" endtime="20210423 04:53:26.687"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:26.691" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 70551-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:33.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:33.318" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:53:26.689" endtime="20210423 04:53:33.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:33.321" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:53:33.319" endtime="20210423 04:53:33.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:33.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:33.322" endtime="20210423 04:53:33.323"/>
</kw>
<status status="PASS" starttime="20210423 04:53:26.688" endtime="20210423 04:53:33.324"/>
</kw>
<msg timestamp="20210423 04:53:33.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:26.688" endtime="20210423 04:53:33.325"/>
</kw>
<status status="PASS" starttime="20210423 04:53:26.687" endtime="20210423 04:53:33.325"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:33.334" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 70551-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:37.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:37.695" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:53:33.330" endtime="20210423 04:53:37.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:37.696" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:53:37.695" endtime="20210423 04:53:37.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:37.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:37.696" endtime="20210423 04:53:37.697"/>
</kw>
<status status="PASS" starttime="20210423 04:53:33.329" endtime="20210423 04:53:37.697"/>
</kw>
<msg timestamp="20210423 04:53:37.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:33.328" endtime="20210423 04:53:37.697"/>
</kw>
<status status="PASS" starttime="20210423 04:53:33.326" endtime="20210423 04:53:37.698"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:37.702" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 70551-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:43.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:43.864" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:53:37.699" endtime="20210423 04:53:43.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:43.865" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:53:43.865" endtime="20210423 04:53:43.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:43.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:43.865" endtime="20210423 04:53:43.867"/>
</kw>
<status status="PASS" starttime="20210423 04:53:37.699" endtime="20210423 04:53:43.867"/>
</kw>
<msg timestamp="20210423 04:53:43.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:37.699" endtime="20210423 04:53:43.868"/>
</kw>
<status status="PASS" starttime="20210423 04:53:37.698" endtime="20210423 04:53:43.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:43.874" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 70551-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:50.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:50.388" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:53:43.872" endtime="20210423 04:53:50.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:50.390" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:53:50.389" endtime="20210423 04:53:50.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:50.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:50.391" endtime="20210423 04:53:50.392"/>
</kw>
<status status="PASS" starttime="20210423 04:53:43.871" endtime="20210423 04:53:50.393"/>
</kw>
<msg timestamp="20210423 04:53:50.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:43.870" endtime="20210423 04:53:50.393"/>
</kw>
<status status="PASS" starttime="20210423 04:53:43.869" endtime="20210423 04:53:50.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:50.401" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 70551-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:56.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:56.653" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:53:50.396" endtime="20210423 04:53:56.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:56.654" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:53:56.654" endtime="20210423 04:53:56.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:56.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:56.655" endtime="20210423 04:53:56.656"/>
</kw>
<status status="PASS" starttime="20210423 04:53:50.395" endtime="20210423 04:53:56.657"/>
</kw>
<msg timestamp="20210423 04:53:56.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:50.395" endtime="20210423 04:53:56.657"/>
</kw>
<status status="PASS" starttime="20210423 04:53:50.393" endtime="20210423 04:53:56.660"/>
</kw>
<status status="PASS" starttime="20210423 04:49:47.631" endtime="20210423 04:53:56.660"/>
</kw>
<status status="PASS" starttime="20210423 04:49:47.630" endtime="20210423 04:53:56.660"/>
</kw>
<status status="PASS" starttime="20210423 04:49:34.209" endtime="20210423 04:53:56.661"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:56.670" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:56.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:56.673" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:53:56.667" endtime="20210423 04:53:56.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:56.674" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:53:56.674" endtime="20210423 04:53:56.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:56.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:56.675" endtime="20210423 04:53:56.676"/>
</kw>
<status status="PASS" starttime="20210423 04:53:56.665" endtime="20210423 04:53:56.676"/>
</kw>
<msg timestamp="20210423 04:53:56.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:56.665" endtime="20210423 04:53:56.676"/>
</kw>
<msg timestamp="20210423 04:53:56.676" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:53:56.664" endtime="20210423 04:53:56.677"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:53:56.679" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:53:56.677" endtime="20210423 04:53:56.679"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:56.684" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:53:56.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:53:56.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:53:56.682" endtime="20210423 04:53:56.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:53:56.719" level="INFO"/>
<status status="PASS" starttime="20210423 04:53:56.719" endtime="20210423 04:53:56.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:53:56.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:53:56.720" endtime="20210423 04:53:56.720"/>
</kw>
<status status="PASS" starttime="20210423 04:53:56.681" endtime="20210423 04:53:56.721"/>
</kw>
<msg timestamp="20210423 04:53:56.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:56.681" endtime="20210423 04:53:56.721"/>
</kw>
<status status="PASS" starttime="20210423 04:53:56.680" endtime="20210423 04:53:56.721"/>
</kw>
<status status="PASS" starttime="20210423 04:53:56.680" endtime="20210423 04:53:56.721"/>
</kw>
<status status="PASS" starttime="20210423 04:53:56.663" endtime="20210423 04:53:56.722"/>
</kw>
<status status="PASS" starttime="20210423 04:53:56.662" endtime="20210423 04:53:56.722"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:53:56.725" level="INFO">Running command 'ozone sh bucket link 70551-source/no-such-bucket 70551-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:54:03.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:54:03.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:53:56.723" endtime="20210423 04:54:03.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:54:03.018" level="INFO"/>
<status status="PASS" starttime="20210423 04:54:03.018" endtime="20210423 04:54:03.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:54:03.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:54:03.019" endtime="20210423 04:54:03.020"/>
</kw>
<status status="PASS" starttime="20210423 04:53:56.723" endtime="20210423 04:54:03.020"/>
</kw>
<msg timestamp="20210423 04:54:03.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:53:56.722" endtime="20210423 04:54:03.021"/>
</kw>
<status status="PASS" starttime="20210423 04:53:56.722" endtime="20210423 04:54:03.021"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:54:03.023" level="INFO">Running command 'ozone sh key list 70551-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:54:08.572" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 04:54:08.573" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210423 04:54:03.022" endtime="20210423 04:54:08.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:54:08.574" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210423 04:54:08.573" endtime="20210423 04:54:08.574"/>
</kw>
<msg timestamp="20210423 04:54:08.574" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210423 04:54:03.021" endtime="20210423 04:54:08.574"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:54:08.575" endtime="20210423 04:54:08.575"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 04:53:56.661" endtime="20210423 04:54:08.575"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:54:08.581" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:54:08.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:54:08.584" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:54:08.579" endtime="20210423 04:54:08.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:54:08.585" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:54:08.584" endtime="20210423 04:54:08.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:54:08.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:54:08.585" endtime="20210423 04:54:08.586"/>
</kw>
<status status="PASS" starttime="20210423 04:54:08.578" endtime="20210423 04:54:08.586"/>
</kw>
<msg timestamp="20210423 04:54:08.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:54:08.578" endtime="20210423 04:54:08.586"/>
</kw>
<msg timestamp="20210423 04:54:08.587" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:54:08.578" endtime="20210423 04:54:08.587"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:54:08.587" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:54:08.587" endtime="20210423 04:54:08.587"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:54:08.591" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:54:08.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:54:08.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:54:08.590" endtime="20210423 04:54:08.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:54:08.599" level="INFO"/>
<status status="PASS" starttime="20210423 04:54:08.599" endtime="20210423 04:54:08.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:54:08.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:54:08.600" endtime="20210423 04:54:08.600"/>
</kw>
<status status="PASS" starttime="20210423 04:54:08.589" endtime="20210423 04:54:08.601"/>
</kw>
<msg timestamp="20210423 04:54:08.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:54:08.589" endtime="20210423 04:54:08.601"/>
</kw>
<status status="PASS" starttime="20210423 04:54:08.588" endtime="20210423 04:54:08.601"/>
</kw>
<status status="PASS" starttime="20210423 04:54:08.588" endtime="20210423 04:54:08.601"/>
</kw>
<status status="PASS" starttime="20210423 04:54:08.577" endtime="20210423 04:54:08.601"/>
</kw>
<status status="PASS" starttime="20210423 04:54:08.577" endtime="20210423 04:54:08.601"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:54:08.604" level="INFO">Running command 'ozone sh bucket link 70551-source/bucket1 70551-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:54:14.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:54:14.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:54:08.603" endtime="20210423 04:54:14.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:54:14.360" level="INFO"/>
<status status="PASS" starttime="20210423 04:54:14.359" endtime="20210423 04:54:14.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:54:14.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:54:14.360" endtime="20210423 04:54:14.361"/>
</kw>
<status status="PASS" starttime="20210423 04:54:08.602" endtime="20210423 04:54:14.361"/>
</kw>
<msg timestamp="20210423 04:54:14.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:54:08.602" endtime="20210423 04:54:14.362"/>
</kw>
<status status="PASS" starttime="20210423 04:54:08.602" endtime="20210423 04:54:14.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:54:14.366" level="INFO">Running command 'ozone sh bucket create 70551-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:54:19.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:54:19.291" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:54:14.363" endtime="20210423 04:54:19.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:54:19.292" level="INFO"/>
<status status="PASS" starttime="20210423 04:54:19.291" endtime="20210423 04:54:19.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:54:19.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:54:19.293" endtime="20210423 04:54:19.293"/>
</kw>
<status status="PASS" starttime="20210423 04:54:14.363" endtime="20210423 04:54:19.294"/>
</kw>
<msg timestamp="20210423 04:54:19.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:54:14.363" endtime="20210423 04:54:19.294"/>
</kw>
<status status="PASS" starttime="20210423 04:54:14.362" endtime="20210423 04:54:19.295"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:54:19.298" level="INFO">Running command 'ozone sh key put 70551-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:56:08.577" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210423 04:54:19.296" endtime="20210423 04:56:08.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210423 04:56:08.579" endtime="20210423 04:56:08.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210423 04:56:08.579" endtime="20210423 04:56:08.579"/>
</kw>
<status status="FAIL" starttime="20210423 04:54:19.296" endtime="20210423 04:56:08.579"/>
</kw>
<msg timestamp="20210423 04:56:08.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210423 04:54:19.295" endtime="20210423 04:56:08.580"/>
</kw>
<status status="FAIL" starttime="20210423 04:54:19.295" endtime="20210423 04:56:08.580"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210423 04:56:08.580" endtime="20210423 04:56:08.580"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210423 04:54:08.576" endtime="20210423 04:56:08.580">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:56:08.594" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:56:08.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:56:08.595" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:56:08.587" endtime="20210423 04:56:08.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:56:08.596" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:56:08.595" endtime="20210423 04:56:08.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:56:08.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:56:08.596" endtime="20210423 04:56:08.597"/>
</kw>
<status status="PASS" starttime="20210423 04:56:08.586" endtime="20210423 04:56:08.597"/>
</kw>
<msg timestamp="20210423 04:56:08.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:56:08.586" endtime="20210423 04:56:08.597"/>
</kw>
<msg timestamp="20210423 04:56:08.598" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:56:08.585" endtime="20210423 04:56:08.598"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:56:08.598" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:56:08.598" endtime="20210423 04:56:08.599"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:56:08.606" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:56:08.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:56:08.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:56:08.604" endtime="20210423 04:56:08.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:56:08.621" level="INFO"/>
<status status="PASS" starttime="20210423 04:56:08.616" endtime="20210423 04:56:08.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:56:08.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:56:08.621" endtime="20210423 04:56:08.622"/>
</kw>
<status status="PASS" starttime="20210423 04:56:08.604" endtime="20210423 04:56:08.622"/>
</kw>
<msg timestamp="20210423 04:56:08.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:56:08.603" endtime="20210423 04:56:08.622"/>
</kw>
<status status="PASS" starttime="20210423 04:56:08.603" endtime="20210423 04:56:08.622"/>
</kw>
<status status="PASS" starttime="20210423 04:56:08.599" endtime="20210423 04:56:08.623"/>
</kw>
<status status="PASS" starttime="20210423 04:56:08.584" endtime="20210423 04:56:08.623"/>
</kw>
<status status="PASS" starttime="20210423 04:56:08.584" endtime="20210423 04:56:08.623"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:56:08.627" level="INFO">Running command 'ozone sh key put 70551-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:08.584" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210423 04:56:08.625" endtime="20210423 04:58:08.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210423 04:58:08.585" endtime="20210423 04:58:08.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210423 04:58:08.585" endtime="20210423 04:58:08.585"/>
</kw>
<status status="FAIL" starttime="20210423 04:56:08.624" endtime="20210423 04:58:08.585"/>
</kw>
<msg timestamp="20210423 04:58:08.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210423 04:56:08.624" endtime="20210423 04:58:08.586"/>
</kw>
<status status="FAIL" starttime="20210423 04:56:08.623" endtime="20210423 04:58:08.586"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210423 04:58:08.586" endtime="20210423 04:58:08.586"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210423 04:56:08.583" endtime="20210423 04:58:08.587">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:08.595" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:08.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:08.596" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:58:08.591" endtime="20210423 04:58:08.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:08.598" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:58:08.597" endtime="20210423 04:58:08.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:08.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:08.598" endtime="20210423 04:58:08.599"/>
</kw>
<status status="PASS" starttime="20210423 04:58:08.591" endtime="20210423 04:58:08.600"/>
</kw>
<msg timestamp="20210423 04:58:08.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:08.590" endtime="20210423 04:58:08.600"/>
</kw>
<msg timestamp="20210423 04:58:08.600" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:58:08.590" endtime="20210423 04:58:08.600"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:58:08.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:58:08.601" endtime="20210423 04:58:08.601"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:08.607" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:08.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:08.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:58:08.605" endtime="20210423 04:58:08.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:08.617" level="INFO"/>
<status status="PASS" starttime="20210423 04:58:08.616" endtime="20210423 04:58:08.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:08.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:08.618" endtime="20210423 04:58:08.619"/>
</kw>
<status status="PASS" starttime="20210423 04:58:08.604" endtime="20210423 04:58:08.619"/>
</kw>
<msg timestamp="20210423 04:58:08.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:08.603" endtime="20210423 04:58:08.620"/>
</kw>
<status status="PASS" starttime="20210423 04:58:08.602" endtime="20210423 04:58:08.622"/>
</kw>
<status status="PASS" starttime="20210423 04:58:08.602" endtime="20210423 04:58:08.622"/>
</kw>
<status status="PASS" starttime="20210423 04:58:08.589" endtime="20210423 04:58:08.623"/>
</kw>
<status status="PASS" starttime="20210423 04:58:08.589" endtime="20210423 04:58:08.623"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:08.626" level="INFO">Running command 'ozone sh key list 70551-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:13.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:13.621" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210423 04:58:08.624" endtime="20210423 04:58:13.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:13.622" level="INFO">key1</msg>
<status status="PASS" starttime="20210423 04:58:13.622" endtime="20210423 04:58:13.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:13.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:13.623" endtime="20210423 04:58:13.624"/>
</kw>
<status status="PASS" starttime="20210423 04:58:08.624" endtime="20210423 04:58:13.624"/>
</kw>
<msg timestamp="20210423 04:58:13.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:08.623" endtime="20210423 04:58:13.624"/>
</kw>
<msg timestamp="20210423 04:58:13.625" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210423 04:58:08.623" endtime="20210423 04:58:13.625"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:13.630" level="INFO">Running command 'ozone sh key list 70551-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:18.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:18.901" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210423 04:58:13.627" endtime="20210423 04:58:18.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:18.903" level="INFO">key1</msg>
<status status="PASS" starttime="20210423 04:58:18.901" endtime="20210423 04:58:18.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:18.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:18.903" endtime="20210423 04:58:18.905"/>
</kw>
<status status="PASS" starttime="20210423 04:58:13.626" endtime="20210423 04:58:18.905"/>
</kw>
<msg timestamp="20210423 04:58:18.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:13.626" endtime="20210423 04:58:18.906"/>
</kw>
<msg timestamp="20210423 04:58:18.906" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210423 04:58:13.625" endtime="20210423 04:58:18.906"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 04:58:18.906" endtime="20210423 04:58:18.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:58:18.907" endtime="20210423 04:58:18.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210423 04:58:18.908" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210423 04:58:18.907" endtime="20210423 04:58:18.908"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210423 04:58:08.588" endtime="20210423 04:58:18.908">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:18.919" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:18.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:18.925" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:58:18.917" endtime="20210423 04:58:18.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:18.926" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:58:18.925" endtime="20210423 04:58:18.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:18.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:18.926" endtime="20210423 04:58:18.927"/>
</kw>
<status status="PASS" starttime="20210423 04:58:18.916" endtime="20210423 04:58:18.927"/>
</kw>
<msg timestamp="20210423 04:58:18.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:18.916" endtime="20210423 04:58:18.927"/>
</kw>
<msg timestamp="20210423 04:58:18.927" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:58:18.915" endtime="20210423 04:58:18.927"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:58:18.928" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:58:18.928" endtime="20210423 04:58:18.928"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:18.933" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:18.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:18.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:58:18.931" endtime="20210423 04:58:18.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:18.943" level="INFO"/>
<status status="PASS" starttime="20210423 04:58:18.943" endtime="20210423 04:58:18.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:18.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:18.944" endtime="20210423 04:58:18.945"/>
</kw>
<status status="PASS" starttime="20210423 04:58:18.930" endtime="20210423 04:58:18.945"/>
</kw>
<msg timestamp="20210423 04:58:18.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:18.930" endtime="20210423 04:58:18.945"/>
</kw>
<status status="PASS" starttime="20210423 04:58:18.929" endtime="20210423 04:58:18.946"/>
</kw>
<status status="PASS" starttime="20210423 04:58:18.928" endtime="20210423 04:58:18.946"/>
</kw>
<status status="PASS" starttime="20210423 04:58:18.915" endtime="20210423 04:58:18.946"/>
</kw>
<status status="PASS" starttime="20210423 04:58:18.914" endtime="20210423 04:58:18.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:18.951" level="INFO">Running command 'ozone sh key delete 70551-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:25.893" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 04:58:25.893" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210423 04:58:18.948" endtime="20210423 04:58:25.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:25.895" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210423 04:58:25.894" endtime="20210423 04:58:25.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:25.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210423 04:58:25.897" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210423 04:58:25.895" endtime="20210423 04:58:25.897"/>
</kw>
<status status="FAIL" starttime="20210423 04:58:18.947" endtime="20210423 04:58:25.898"/>
</kw>
<msg timestamp="20210423 04:58:25.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210423 04:58:18.947" endtime="20210423 04:58:25.898"/>
</kw>
<status status="FAIL" starttime="20210423 04:58:18.946" endtime="20210423 04:58:25.898"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210423 04:58:25.899" endtime="20210423 04:58:25.899"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 04:58:25.899" endtime="20210423 04:58:25.899"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210423 04:58:18.914" endtime="20210423 04:58:25.899">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:25.908" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:25.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:25.912" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:58:25.905" endtime="20210423 04:58:25.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:25.915" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:58:25.913" endtime="20210423 04:58:25.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:25.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:25.915" endtime="20210423 04:58:25.916"/>
</kw>
<status status="PASS" starttime="20210423 04:58:25.905" endtime="20210423 04:58:25.917"/>
</kw>
<msg timestamp="20210423 04:58:25.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:25.904" endtime="20210423 04:58:25.917"/>
</kw>
<msg timestamp="20210423 04:58:25.917" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:58:25.903" endtime="20210423 04:58:25.917"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:58:25.918" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:58:25.917" endtime="20210423 04:58:25.918"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:25.923" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:25.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:25.933" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:58:25.920" endtime="20210423 04:58:25.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:25.935" level="INFO"/>
<status status="PASS" starttime="20210423 04:58:25.934" endtime="20210423 04:58:25.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:25.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:25.935" endtime="20210423 04:58:25.936"/>
</kw>
<status status="PASS" starttime="20210423 04:58:25.920" endtime="20210423 04:58:25.936"/>
</kw>
<msg timestamp="20210423 04:58:25.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:25.919" endtime="20210423 04:58:25.937"/>
</kw>
<status status="PASS" starttime="20210423 04:58:25.919" endtime="20210423 04:58:25.937"/>
</kw>
<status status="PASS" starttime="20210423 04:58:25.918" endtime="20210423 04:58:25.937"/>
</kw>
<status status="PASS" starttime="20210423 04:58:25.902" endtime="20210423 04:58:25.937"/>
</kw>
<status status="PASS" starttime="20210423 04:58:25.901" endtime="20210423 04:58:25.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:25.942" level="INFO">Running command 'ozone sh bucket list 70551-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:33.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:33.545" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210423 04:58:25.939" endtime="20210423 04:58:33.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:33.547" level="INFO">{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:54:02.923Z",
  "modificationTime" : "2021-04-23T04:54:02.923Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:53:26.567Z",
  "modificationTime" : "2021-04-23T04:53:56.568Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:54:14.247Z",
  "modificationTime" : "2021-04-23T04:54:14.247Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:53:15.714Z",
  "modificationTime" : "2021-04-23T04:53:50.292Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:53:20.180Z",
  "modificationTime" : "2021-04-23T04:53:20.180Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210423 04:58:33.545" endtime="20210423 04:58:33.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:33.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:33.547" endtime="20210423 04:58:33.548"/>
</kw>
<status status="PASS" starttime="20210423 04:58:25.938" endtime="20210423 04:58:33.549"/>
</kw>
<msg timestamp="20210423 04:58:33.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:25.938" endtime="20210423 04:58:33.549"/>
</kw>
<msg timestamp="20210423 04:58:33.551" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210423 04:58:25.938" endtime="20210423 04:58:33.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:58:33.551" endtime="20210423 04:58:33.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:58:33.553" endtime="20210423 04:58:33.554"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 04:58:25.900" endtime="20210423 04:58:33.554"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:33.563" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:33.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:33.571" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:58:33.560" endtime="20210423 04:58:33.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:33.572" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:58:33.572" endtime="20210423 04:58:33.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:33.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:33.573" endtime="20210423 04:58:33.574"/>
</kw>
<status status="PASS" starttime="20210423 04:58:33.559" endtime="20210423 04:58:33.574"/>
</kw>
<msg timestamp="20210423 04:58:33.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:33.559" endtime="20210423 04:58:33.574"/>
</kw>
<msg timestamp="20210423 04:58:33.575" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:58:33.558" endtime="20210423 04:58:33.575"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:58:33.576" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:58:33.575" endtime="20210423 04:58:33.576"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:33.581" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:33.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:33.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:58:33.578" endtime="20210423 04:58:33.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:33.600" level="INFO"/>
<status status="PASS" starttime="20210423 04:58:33.600" endtime="20210423 04:58:33.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:33.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:33.601" endtime="20210423 04:58:33.602"/>
</kw>
<status status="PASS" starttime="20210423 04:58:33.577" endtime="20210423 04:58:33.602"/>
</kw>
<msg timestamp="20210423 04:58:33.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:33.577" endtime="20210423 04:58:33.603"/>
</kw>
<status status="PASS" starttime="20210423 04:58:33.576" endtime="20210423 04:58:33.603"/>
</kw>
<status status="PASS" starttime="20210423 04:58:33.576" endtime="20210423 04:58:33.603"/>
</kw>
<status status="PASS" starttime="20210423 04:58:33.557" endtime="20210423 04:58:33.604"/>
</kw>
<status status="PASS" starttime="20210423 04:58:33.556" endtime="20210423 04:58:33.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:33.610" level="INFO">Running command 'ozone sh bucket info 70551-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:40.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:40.546" level="INFO">${output} = 70551-source bucket1</msg>
<status status="PASS" starttime="20210423 04:58:33.607" endtime="20210423 04:58:40.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:40.547" level="INFO">70551-source bucket1</msg>
<status status="PASS" starttime="20210423 04:58:40.546" endtime="20210423 04:58:40.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:40.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:40.547" endtime="20210423 04:58:40.548"/>
</kw>
<status status="PASS" starttime="20210423 04:58:33.606" endtime="20210423 04:58:40.548"/>
</kw>
<msg timestamp="20210423 04:58:40.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:33.605" endtime="20210423 04:58:40.549"/>
</kw>
<msg timestamp="20210423 04:58:40.549" level="INFO">${result} = 70551-source bucket1</msg>
<status status="PASS" starttime="20210423 04:58:33.604" endtime="20210423 04:58:40.550"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 04:58:40.550" endtime="20210423 04:58:40.551"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 04:58:33.555" endtime="20210423 04:58:40.551"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:40.561" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:40.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:40.567" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:58:40.558" endtime="20210423 04:58:40.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:40.569" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:58:40.568" endtime="20210423 04:58:40.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:40.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:40.569" endtime="20210423 04:58:40.570"/>
</kw>
<status status="PASS" starttime="20210423 04:58:40.557" endtime="20210423 04:58:40.571"/>
</kw>
<msg timestamp="20210423 04:58:40.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:40.556" endtime="20210423 04:58:40.572"/>
</kw>
<msg timestamp="20210423 04:58:40.572" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:58:40.555" endtime="20210423 04:58:40.572"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:58:40.574" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:58:40.573" endtime="20210423 04:58:40.574"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:40.581" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:40.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:40.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:58:40.577" endtime="20210423 04:58:40.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:40.590" level="INFO"/>
<status status="PASS" starttime="20210423 04:58:40.590" endtime="20210423 04:58:40.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:40.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:40.591" endtime="20210423 04:58:40.591"/>
</kw>
<status status="PASS" starttime="20210423 04:58:40.576" endtime="20210423 04:58:40.592"/>
</kw>
<msg timestamp="20210423 04:58:40.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:40.576" endtime="20210423 04:58:40.592"/>
</kw>
<status status="PASS" starttime="20210423 04:58:40.575" endtime="20210423 04:58:40.592"/>
</kw>
<status status="PASS" starttime="20210423 04:58:40.574" endtime="20210423 04:58:40.592"/>
</kw>
<status status="PASS" starttime="20210423 04:58:40.554" endtime="20210423 04:58:40.593"/>
</kw>
<status status="PASS" starttime="20210423 04:58:40.553" endtime="20210423 04:58:40.593"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:40.598" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 70551-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:47.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:47.640" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:58:40.595" endtime="20210423 04:58:47.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:47.642" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:58:47.641" endtime="20210423 04:58:47.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:47.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:47.642" endtime="20210423 04:58:47.643"/>
</kw>
<status status="PASS" starttime="20210423 04:58:40.594" endtime="20210423 04:58:47.643"/>
</kw>
<msg timestamp="20210423 04:58:47.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:40.594" endtime="20210423 04:58:47.643"/>
</kw>
<status status="PASS" starttime="20210423 04:58:40.593" endtime="20210423 04:58:47.644"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:47.649" level="INFO">Running command 'ozone sh bucket getacl 70551-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:58:54.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:58:54.959" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210423 04:58:47.647" endtime="20210423 04:58:54.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:58:54.962" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210423 04:58:54.960" endtime="20210423 04:58:54.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:58:54.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:58:54.962" endtime="20210423 04:58:54.963"/>
</kw>
<status status="PASS" starttime="20210423 04:58:47.646" endtime="20210423 04:58:54.964"/>
</kw>
<msg timestamp="20210423 04:58:54.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:47.646" endtime="20210423 04:58:54.964"/>
</kw>
<msg timestamp="20210423 04:58:54.965" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210423 04:58:47.645" endtime="20210423 04:58:54.965"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 04:58:54.966" endtime="20210423 04:58:54.966"/>
</kw>
<status status="PASS" starttime="20210423 04:58:47.644" endtime="20210423 04:58:54.967"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:58:54.976" level="INFO">Running command 'ozone sh bucket getacl 70551-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:02.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:02.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:58:54.973" endtime="20210423 04:59:02.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:02.534" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:02.533" endtime="20210423 04:59:02.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:02.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:02.534" endtime="20210423 04:59:02.535"/>
</kw>
<status status="PASS" starttime="20210423 04:58:54.972" endtime="20210423 04:59:02.535"/>
</kw>
<msg timestamp="20210423 04:59:02.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:58:54.971" endtime="20210423 04:59:02.536"/>
</kw>
<msg timestamp="20210423 04:59:02.536" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210423 04:58:54.969" endtime="20210423 04:59:02.536"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 04:59:02.537" endtime="20210423 04:59:02.538"/>
</kw>
<status status="PASS" starttime="20210423 04:58:54.967" endtime="20210423 04:59:02.538"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:02.547" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 70551-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:08.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:08.917" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:59:02.544" endtime="20210423 04:59:08.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:08.918" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 04:59:08.917" endtime="20210423 04:59:08.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:08.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:08.919" endtime="20210423 04:59:08.920"/>
</kw>
<status status="PASS" starttime="20210423 04:59:02.541" endtime="20210423 04:59:08.920"/>
</kw>
<msg timestamp="20210423 04:59:08.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:02.540" endtime="20210423 04:59:08.920"/>
</kw>
<status status="PASS" starttime="20210423 04:59:02.539" endtime="20210423 04:59:08.920"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:08.930" level="INFO">Running command 'ozone sh bucket getacl 70551-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:13.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:13.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:08.927" endtime="20210423 04:59:13.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:13.776" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:13.775" endtime="20210423 04:59:13.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:13.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:13.776" endtime="20210423 04:59:13.777"/>
</kw>
<status status="PASS" starttime="20210423 04:59:08.925" endtime="20210423 04:59:13.777"/>
</kw>
<msg timestamp="20210423 04:59:13.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:08.925" endtime="20210423 04:59:13.777"/>
</kw>
<msg timestamp="20210423 04:59:13.778" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210423 04:59:08.922" endtime="20210423 04:59:13.778"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 04:59:13.778" endtime="20210423 04:59:13.778"/>
</kw>
<status status="PASS" starttime="20210423 04:59:08.921" endtime="20210423 04:59:13.779"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:13.784" level="INFO">Running command 'ozone sh bucket getacl 70551-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:21.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:21.128" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210423 04:59:13.782" endtime="20210423 04:59:21.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:21.129" level="INFO">READ</msg>
<status status="PASS" starttime="20210423 04:59:21.128" endtime="20210423 04:59:21.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:21.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:21.129" endtime="20210423 04:59:21.130"/>
</kw>
<status status="PASS" starttime="20210423 04:59:13.781" endtime="20210423 04:59:21.130"/>
</kw>
<msg timestamp="20210423 04:59:21.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:13.781" endtime="20210423 04:59:21.130"/>
</kw>
<msg timestamp="20210423 04:59:21.131" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210423 04:59:13.780" endtime="20210423 04:59:21.131"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 04:59:21.131" endtime="20210423 04:59:21.131"/>
</kw>
<status status="PASS" starttime="20210423 04:59:13.779" endtime="20210423 04:59:21.132"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 04:58:40.552" endtime="20210423 04:59:21.132"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:21.145" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:21.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:21.151" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:59:21.142" endtime="20210423 04:59:21.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:21.155" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:59:21.153" endtime="20210423 04:59:21.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:21.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:21.157" endtime="20210423 04:59:21.158"/>
</kw>
<status status="PASS" starttime="20210423 04:59:21.139" endtime="20210423 04:59:21.160"/>
</kw>
<msg timestamp="20210423 04:59:21.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:21.138" endtime="20210423 04:59:21.160"/>
</kw>
<msg timestamp="20210423 04:59:21.161" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:59:21.138" endtime="20210423 04:59:21.161"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:59:21.162" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:59:21.162" endtime="20210423 04:59:21.163"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:21.173" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:21.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:21.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:21.168" endtime="20210423 04:59:21.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:21.204" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:21.204" endtime="20210423 04:59:21.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:21.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:21.205" endtime="20210423 04:59:21.205"/>
</kw>
<status status="PASS" starttime="20210423 04:59:21.167" endtime="20210423 04:59:21.206"/>
</kw>
<msg timestamp="20210423 04:59:21.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:21.166" endtime="20210423 04:59:21.206"/>
</kw>
<status status="PASS" starttime="20210423 04:59:21.164" endtime="20210423 04:59:21.206"/>
</kw>
<status status="PASS" starttime="20210423 04:59:21.163" endtime="20210423 04:59:21.206"/>
</kw>
<status status="PASS" starttime="20210423 04:59:21.137" endtime="20210423 04:59:21.207"/>
</kw>
<status status="PASS" starttime="20210423 04:59:21.136" endtime="20210423 04:59:21.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:21.210" level="INFO">Running command 'ozone sh bucket link 70551-source/bucket2 70551-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:26.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:26.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:21.208" endtime="20210423 04:59:26.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:26.205" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:26.204" endtime="20210423 04:59:26.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:26.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:26.205" endtime="20210423 04:59:26.206"/>
</kw>
<status status="PASS" starttime="20210423 04:59:21.208" endtime="20210423 04:59:26.206"/>
</kw>
<msg timestamp="20210423 04:59:26.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:21.208" endtime="20210423 04:59:26.206"/>
</kw>
<status status="PASS" starttime="20210423 04:59:21.207" endtime="20210423 04:59:26.207"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:26.210" level="INFO">Running command 'ozone sh bucket create 70551-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:32.108" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 04:59:32.108" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210423 04:59:26.208" endtime="20210423 04:59:32.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:32.109" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210423 04:59:32.109" endtime="20210423 04:59:32.110"/>
</kw>
<msg timestamp="20210423 04:59:32.110" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210423 04:59:26.207" endtime="20210423 04:59:32.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:59:32.110" endtime="20210423 04:59:32.111"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:32.116" level="INFO">Running command 'ozone sh bucket create 70551-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:38.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:38.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:32.113" endtime="20210423 04:59:38.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:38.485" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:38.485" endtime="20210423 04:59:38.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:38.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:38.486" endtime="20210423 04:59:38.486"/>
</kw>
<status status="PASS" starttime="20210423 04:59:32.112" endtime="20210423 04:59:38.487"/>
</kw>
<msg timestamp="20210423 04:59:38.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:32.112" endtime="20210423 04:59:38.487"/>
</kw>
<status status="PASS" starttime="20210423 04:59:32.111" endtime="20210423 04:59:38.487"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:38.491" level="INFO">Running command 'ozone sh bucket link 70551-source/bucket1 70551-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:45.260" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 04:59:45.260" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210423 04:59:38.488" endtime="20210423 04:59:45.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:45.262" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210423 04:59:45.261" endtime="20210423 04:59:45.262"/>
</kw>
<msg timestamp="20210423 04:59:45.263" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210423 04:59:38.487" endtime="20210423 04:59:45.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:59:45.263" endtime="20210423 04:59:45.264"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 04:59:21.134" endtime="20210423 04:59:45.264"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:45.281" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:45.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:45.284" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:59:45.276" endtime="20210423 04:59:45.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:45.287" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:59:45.284" endtime="20210423 04:59:45.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:45.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:45.288" endtime="20210423 04:59:45.290"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.274" endtime="20210423 04:59:45.290"/>
</kw>
<msg timestamp="20210423 04:59:45.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:45.274" endtime="20210423 04:59:45.291"/>
</kw>
<msg timestamp="20210423 04:59:45.291" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:59:45.274" endtime="20210423 04:59:45.292"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:59:45.293" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:59:45.292" endtime="20210423 04:59:45.294"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:45.302" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:45.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:45.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:45.298" endtime="20210423 04:59:45.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:45.317" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:45.316" endtime="20210423 04:59:45.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:45.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:45.317" endtime="20210423 04:59:45.319"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.297" endtime="20210423 04:59:45.320"/>
</kw>
<msg timestamp="20210423 04:59:45.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:45.296" endtime="20210423 04:59:45.320"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.294" endtime="20210423 04:59:45.320"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.294" endtime="20210423 04:59:45.320"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.272" endtime="20210423 04:59:45.321"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.271" endtime="20210423 04:59:45.321"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:45.330" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:45.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:45.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:45.327" endtime="20210423 04:59:45.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:45.338" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:45.337" endtime="20210423 04:59:45.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:45.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:45.338" endtime="20210423 04:59:45.339"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.325" endtime="20210423 04:59:45.340"/>
</kw>
<msg timestamp="20210423 04:59:45.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:45.325" endtime="20210423 04:59:45.340"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.324" endtime="20210423 04:59:45.340"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:45.346" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:45.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:45.350" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:59:45.344" endtime="20210423 04:59:45.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:45.351" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:59:45.350" endtime="20210423 04:59:45.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:45.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:45.351" endtime="20210423 04:59:45.352"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.343" endtime="20210423 04:59:45.353"/>
</kw>
<msg timestamp="20210423 04:59:45.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:45.342" endtime="20210423 04:59:45.353"/>
</kw>
<msg timestamp="20210423 04:59:45.354" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:59:45.342" endtime="20210423 04:59:45.354"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:59:45.355" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:59:45.354" endtime="20210423 04:59:45.355"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:45.361" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:45.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:45.371" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:45.358" endtime="20210423 04:59:45.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:45.372" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:45.372" endtime="20210423 04:59:45.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:45.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:45.373" endtime="20210423 04:59:45.374"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.357" endtime="20210423 04:59:45.374"/>
</kw>
<msg timestamp="20210423 04:59:45.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:45.357" endtime="20210423 04:59:45.374"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.356" endtime="20210423 04:59:45.375"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.355" endtime="20210423 04:59:45.375"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.341" endtime="20210423 04:59:45.375"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.340" endtime="20210423 04:59:45.375"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:45.378" level="INFO">Running command 'ozone sh key list 70551-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:52.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:52.131" level="INFO">${output} = {
  "volumeName" : "70551-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-23T04:50:00.039Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210423 04:59:45.376" endtime="20210423 04:59:52.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:52.133" level="INFO">{
  "volumeName" : "70551-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-23T04:50:00.039Z",
  "modificationTime" : "2021-04-23T04:53:02.760Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210423 04:59:52.132" endtime="20210423 04:59:52.133"/>
</kw>
<msg timestamp="20210423 04:59:52.134" level="INFO">${result} = {
  "volumeName" : "70551-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-23T04:50:00.039Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210423 04:59:45.375" endtime="20210423 04:59:52.134"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:59:52.134" endtime="20210423 04:59:52.135"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.323" endtime="20210423 04:59:52.135"/>
</kw>
<status status="PASS" starttime="20210423 04:59:45.322" endtime="20210423 04:59:52.135"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 04:59:45.265" endtime="20210423 04:59:52.135"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:52.144" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:52.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:52.147" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:59:52.142" endtime="20210423 04:59:52.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:52.148" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:59:52.147" endtime="20210423 04:59:52.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:52.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:52.149" endtime="20210423 04:59:52.150"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.141" endtime="20210423 04:59:52.150"/>
</kw>
<msg timestamp="20210423 04:59:52.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:52.140" endtime="20210423 04:59:52.150"/>
</kw>
<msg timestamp="20210423 04:59:52.150" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:59:52.139" endtime="20210423 04:59:52.151"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:59:52.151" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:59:52.151" endtime="20210423 04:59:52.151"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:52.157" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:52.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:52.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:52.154" endtime="20210423 04:59:52.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:52.167" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:52.166" endtime="20210423 04:59:52.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:52.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:52.167" endtime="20210423 04:59:52.168"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.153" endtime="20210423 04:59:52.168"/>
</kw>
<msg timestamp="20210423 04:59:52.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:52.153" endtime="20210423 04:59:52.169"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.152" endtime="20210423 04:59:52.169"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.152" endtime="20210423 04:59:52.169"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.138" endtime="20210423 04:59:52.169"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.138" endtime="20210423 04:59:52.169"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:52.174" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:52.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:52.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:52.172" endtime="20210423 04:59:52.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:52.182" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:52.181" endtime="20210423 04:59:52.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:52.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:52.183" endtime="20210423 04:59:52.184"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.172" endtime="20210423 04:59:52.184"/>
</kw>
<msg timestamp="20210423 04:59:52.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:52.171" endtime="20210423 04:59:52.184"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.171" endtime="20210423 04:59:52.187"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:52.192" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:52.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:52.199" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:59:52.190" endtime="20210423 04:59:52.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:52.200" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:59:52.200" endtime="20210423 04:59:52.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:52.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:52.201" endtime="20210423 04:59:52.202"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.189" endtime="20210423 04:59:52.202"/>
</kw>
<msg timestamp="20210423 04:59:52.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:52.189" endtime="20210423 04:59:52.202"/>
</kw>
<msg timestamp="20210423 04:59:52.202" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:59:52.188" endtime="20210423 04:59:52.203"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:59:52.203" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:59:52.203" endtime="20210423 04:59:52.204"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:52.208" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:52.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:52.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:52.207" endtime="20210423 04:59:52.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:52.219" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:52.218" endtime="20210423 04:59:52.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:52.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:52.220" endtime="20210423 04:59:52.220"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.206" endtime="20210423 04:59:52.221"/>
</kw>
<msg timestamp="20210423 04:59:52.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:52.205" endtime="20210423 04:59:52.221"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.204" endtime="20210423 04:59:52.221"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.204" endtime="20210423 04:59:52.222"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.187" endtime="20210423 04:59:52.222"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.187" endtime="20210423 04:59:52.222"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:52.226" level="INFO">Running command 'ozone sh key list 70551-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:59.111" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 04:59:59.111" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 70551-target unreadable-link null</msg>
<status status="PASS" starttime="20210423 04:59:52.223" endtime="20210423 04:59:59.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:59.112" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 70551-target unreadable-link null</msg>
<status status="PASS" starttime="20210423 04:59:59.111" endtime="20210423 04:59:59.112"/>
</kw>
<msg timestamp="20210423 04:59:59.113" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 70551-target unreadable-link null</msg>
<status status="PASS" starttime="20210423 04:59:52.222" endtime="20210423 04:59:59.113"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 04:59:59.113" endtime="20210423 04:59:59.113"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.170" endtime="20210423 04:59:59.114"/>
</kw>
<status status="PASS" starttime="20210423 04:59:52.170" endtime="20210423 04:59:59.114"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 04:59:52.136" endtime="20210423 04:59:59.114"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:59.123" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:59.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:59.126" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:59:59.119" endtime="20210423 04:59:59.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:59.131" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:59:59.127" endtime="20210423 04:59:59.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:59.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:59.132" endtime="20210423 04:59:59.133"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.119" endtime="20210423 04:59:59.134"/>
</kw>
<msg timestamp="20210423 04:59:59.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:59.118" endtime="20210423 04:59:59.134"/>
</kw>
<msg timestamp="20210423 04:59:59.135" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:59:59.118" endtime="20210423 04:59:59.135"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:59:59.137" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:59:59.135" endtime="20210423 04:59:59.137"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:59.145" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:59.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:59.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:59.142" endtime="20210423 04:59:59.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:59.161" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:59.160" endtime="20210423 04:59:59.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:59.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:59.162" endtime="20210423 04:59:59.163"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.141" endtime="20210423 04:59:59.164"/>
</kw>
<msg timestamp="20210423 04:59:59.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:59.140" endtime="20210423 04:59:59.165"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.138" endtime="20210423 04:59:59.165"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.137" endtime="20210423 04:59:59.165"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.117" endtime="20210423 04:59:59.165"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.116" endtime="20210423 04:59:59.166"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:59.173" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:59.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:59.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:59.170" endtime="20210423 04:59:59.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:59.178" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:59.177" endtime="20210423 04:59:59.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:59.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:59.178" endtime="20210423 04:59:59.179"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.170" endtime="20210423 04:59:59.180"/>
</kw>
<msg timestamp="20210423 04:59:59.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:59.169" endtime="20210423 04:59:59.180"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.168" endtime="20210423 04:59:59.181"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:59.186" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:59.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:59.190" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:59:59.184" endtime="20210423 04:59:59.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:59.192" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:59:59.191" endtime="20210423 04:59:59.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:59.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:59.193" endtime="20210423 04:59:59.194"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.183" endtime="20210423 04:59:59.195"/>
</kw>
<msg timestamp="20210423 04:59:59.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:59.183" endtime="20210423 04:59:59.196"/>
</kw>
<msg timestamp="20210423 04:59:59.197" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:59:59.183" endtime="20210423 04:59:59.197"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:59:59.199" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:59:59.197" endtime="20210423 04:59:59.199"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:59.207" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:59:59.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:59:59.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:59:59.204" endtime="20210423 04:59:59.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:59:59.217" level="INFO"/>
<status status="PASS" starttime="20210423 04:59:59.217" endtime="20210423 04:59:59.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:59:59.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:59:59.218" endtime="20210423 04:59:59.218"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.204" endtime="20210423 04:59:59.219"/>
</kw>
<msg timestamp="20210423 04:59:59.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:59.202" endtime="20210423 04:59:59.219"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.201" endtime="20210423 04:59:59.219"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.200" endtime="20210423 04:59:59.219"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.182" endtime="20210423 04:59:59.219"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.181" endtime="20210423 04:59:59.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:59:59.223" level="INFO">Running command 'ozone sh bucket info 70551-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:06.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:00:06.295" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210423 04:59:59.221" endtime="20210423 05:00:06.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:06.300" level="INFO">{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:53:26.567Z",
  "modificationTime" : "2021-04-23T04:53:56.568Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210423 05:00:06.297" endtime="20210423 05:00:06.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:00:06.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:00:06.301" endtime="20210423 05:00:06.302"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.221" endtime="20210423 05:00:06.303"/>
</kw>
<msg timestamp="20210423 05:00:06.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:59:59.220" endtime="20210423 05:00:06.303"/>
</kw>
<msg timestamp="20210423 05:00:06.304" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210423 04:59:59.220" endtime="20210423 05:00:06.304"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:00:06.304" endtime="20210423 05:00:06.305"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:00:06.306" endtime="20210423 05:00:06.306"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:06.311" level="INFO">Running command 'ozone sh key list 70551-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:12.208" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 05:00:12.208" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 70551-source unreadable-bucket </msg>
<status status="PASS" starttime="20210423 05:00:06.308" endtime="20210423 05:00:12.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:12.209" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 70551-source unreadable-bucket </msg>
<status status="PASS" starttime="20210423 05:00:12.208" endtime="20210423 05:00:12.209"/>
</kw>
<msg timestamp="20210423 05:00:12.210" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 70551-source unreadable-bucket </msg>
<status status="PASS" starttime="20210423 05:00:06.307" endtime="20210423 05:00:12.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:00:12.210" endtime="20210423 05:00:12.210"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.167" endtime="20210423 05:00:12.210"/>
</kw>
<status status="PASS" starttime="20210423 04:59:59.166" endtime="20210423 05:00:12.210"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 04:59:59.115" endtime="20210423 05:00:12.211"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:12.217" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:12.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:00:12.220" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 05:00:12.215" endtime="20210423 05:00:12.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:12.220" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 05:00:12.220" endtime="20210423 05:00:12.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:00:12.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:00:12.221" endtime="20210423 05:00:12.221"/>
</kw>
<status status="PASS" starttime="20210423 05:00:12.214" endtime="20210423 05:00:12.222"/>
</kw>
<msg timestamp="20210423 05:00:12.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:00:12.214" endtime="20210423 05:00:12.222"/>
</kw>
<msg timestamp="20210423 05:00:12.222" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 05:00:12.213" endtime="20210423 05:00:12.222"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:00:12.223" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 05:00:12.223" endtime="20210423 05:00:12.223"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:12.228" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:12.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:00:12.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:00:12.226" endtime="20210423 05:00:12.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:12.237" level="INFO"/>
<status status="PASS" starttime="20210423 05:00:12.236" endtime="20210423 05:00:12.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:00:12.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:00:12.237" endtime="20210423 05:00:12.237"/>
</kw>
<status status="PASS" starttime="20210423 05:00:12.225" endtime="20210423 05:00:12.238"/>
</kw>
<msg timestamp="20210423 05:00:12.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:00:12.225" endtime="20210423 05:00:12.238"/>
</kw>
<status status="PASS" starttime="20210423 05:00:12.224" endtime="20210423 05:00:12.238"/>
</kw>
<status status="PASS" starttime="20210423 05:00:12.224" endtime="20210423 05:00:12.238"/>
</kw>
<status status="PASS" starttime="20210423 05:00:12.213" endtime="20210423 05:00:12.238"/>
</kw>
<status status="PASS" starttime="20210423 05:00:12.212" endtime="20210423 05:00:12.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:12.242" level="INFO">Running command 'ozone sh bucket link 70551-target/loop1 70551-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:16.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:00:16.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:00:12.240" endtime="20210423 05:00:16.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:16.716" level="INFO"/>
<status status="PASS" starttime="20210423 05:00:16.715" endtime="20210423 05:00:16.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:00:16.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:00:16.716" endtime="20210423 05:00:16.717"/>
</kw>
<status status="PASS" starttime="20210423 05:00:12.240" endtime="20210423 05:00:16.717"/>
</kw>
<msg timestamp="20210423 05:00:16.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:00:12.239" endtime="20210423 05:00:16.717"/>
</kw>
<status status="PASS" starttime="20210423 05:00:12.239" endtime="20210423 05:00:16.718"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:16.722" level="INFO">Running command 'ozone sh bucket link 70551-target/loop2 70551-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:22.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:00:22.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:00:16.720" endtime="20210423 05:00:22.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:22.908" level="INFO"/>
<status status="PASS" starttime="20210423 05:00:22.907" endtime="20210423 05:00:22.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:00:22.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:00:22.908" endtime="20210423 05:00:22.912"/>
</kw>
<status status="PASS" starttime="20210423 05:00:16.719" endtime="20210423 05:00:22.914"/>
</kw>
<msg timestamp="20210423 05:00:22.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:00:16.719" endtime="20210423 05:00:22.915"/>
</kw>
<status status="PASS" starttime="20210423 05:00:16.718" endtime="20210423 05:00:22.915"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:22.924" level="INFO">Running command 'ozone sh bucket link 70551-target/loop3 70551-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:29.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:00:29.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:00:22.921" endtime="20210423 05:00:29.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:29.200" level="INFO"/>
<status status="PASS" starttime="20210423 05:00:29.198" endtime="20210423 05:00:29.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:00:29.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:00:29.200" endtime="20210423 05:00:29.202"/>
</kw>
<status status="PASS" starttime="20210423 05:00:22.919" endtime="20210423 05:00:29.203"/>
</kw>
<msg timestamp="20210423 05:00:29.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:00:22.918" endtime="20210423 05:00:29.203"/>
</kw>
<status status="PASS" starttime="20210423 05:00:22.916" endtime="20210423 05:00:29.205"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:29.209" level="INFO">Running command 'ozone sh key list 70551-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:35.386" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 05:00:35.386" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210423 05:00:29.206" endtime="20210423 05:00:35.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:35.387" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210423 05:00:35.386" endtime="20210423 05:00:35.387"/>
</kw>
<msg timestamp="20210423 05:00:35.388" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210423 05:00:29.205" endtime="20210423 05:00:35.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:00:35.388" endtime="20210423 05:00:35.388"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 05:00:12.212" endtime="20210423 05:00:35.388"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:35.397" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:35.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:00:35.401" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 05:00:35.394" endtime="20210423 05:00:35.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:35.404" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 05:00:35.402" endtime="20210423 05:00:35.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:00:35.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:00:35.404" endtime="20210423 05:00:35.405"/>
</kw>
<status status="PASS" starttime="20210423 05:00:35.393" endtime="20210423 05:00:35.406"/>
</kw>
<msg timestamp="20210423 05:00:35.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:00:35.393" endtime="20210423 05:00:35.406"/>
</kw>
<msg timestamp="20210423 05:00:35.406" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 05:00:35.392" endtime="20210423 05:00:35.406"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:00:35.407" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 05:00:35.407" endtime="20210423 05:00:35.407"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:35.413" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:35.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:00:35.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:00:35.410" endtime="20210423 05:00:35.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:35.421" level="INFO"/>
<status status="PASS" starttime="20210423 05:00:35.420" endtime="20210423 05:00:35.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:00:35.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:00:35.421" endtime="20210423 05:00:35.422"/>
</kw>
<status status="PASS" starttime="20210423 05:00:35.409" endtime="20210423 05:00:35.423"/>
</kw>
<msg timestamp="20210423 05:00:35.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:00:35.409" endtime="20210423 05:00:35.424"/>
</kw>
<status status="PASS" starttime="20210423 05:00:35.408" endtime="20210423 05:00:35.424"/>
</kw>
<status status="PASS" starttime="20210423 05:00:35.408" endtime="20210423 05:00:35.424"/>
</kw>
<status status="PASS" starttime="20210423 05:00:35.391" endtime="20210423 05:00:35.425"/>
</kw>
<status status="PASS" starttime="20210423 05:00:35.391" endtime="20210423 05:00:35.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:35.431" level="INFO">Running command 'ozone sh bucket link 70551-source/bucket1 70551-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:00:42.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:00:42.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:00:35.429" endtime="20210423 05:00:42.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:00:42.987" level="INFO"/>
<status status="PASS" starttime="20210423 05:00:42.986" endtime="20210423 05:00:42.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:00:42.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:00:42.988" endtime="20210423 05:00:42.989"/>
</kw>
<status status="PASS" starttime="20210423 05:00:35.427" endtime="20210423 05:00:42.989"/>
</kw>
<msg timestamp="20210423 05:00:42.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:00:35.427" endtime="20210423 05:00:42.990"/>
</kw>
<status status="PASS" starttime="20210423 05:00:35.425" endtime="20210423 05:00:42.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:00:42.994" level="INFO">Running command 'ozone sh key put 70551-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:02:35.390" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210423 05:00:42.992" endtime="20210423 05:02:35.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210423 05:02:35.391" endtime="20210423 05:02:35.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210423 05:02:35.391" endtime="20210423 05:02:35.391"/>
</kw>
<status status="FAIL" starttime="20210423 05:00:42.991" endtime="20210423 05:02:35.391"/>
</kw>
<msg timestamp="20210423 05:02:35.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210423 05:00:42.991" endtime="20210423 05:02:35.392"/>
</kw>
<status status="FAIL" starttime="20210423 05:00:42.990" endtime="20210423 05:02:35.392"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210423 05:02:35.392" endtime="20210423 05:02:35.392"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210423 05:00:35.389" endtime="20210423 05:02:35.393">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:02:35.400" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:02:35.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:02:35.402" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 05:02:35.397" endtime="20210423 05:02:35.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:02:35.403" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 05:02:35.403" endtime="20210423 05:02:35.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:02:35.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:02:35.403" endtime="20210423 05:02:35.404"/>
</kw>
<status status="PASS" starttime="20210423 05:02:35.397" endtime="20210423 05:02:35.404"/>
</kw>
<msg timestamp="20210423 05:02:35.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:02:35.396" endtime="20210423 05:02:35.404"/>
</kw>
<msg timestamp="20210423 05:02:35.405" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 05:02:35.396" endtime="20210423 05:02:35.405"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:02:35.406" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 05:02:35.405" endtime="20210423 05:02:35.406"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:02:35.411" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:02:35.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:02:35.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:02:35.410" endtime="20210423 05:02:35.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:02:35.419" level="INFO"/>
<status status="PASS" starttime="20210423 05:02:35.419" endtime="20210423 05:02:35.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:02:35.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:02:35.420" endtime="20210423 05:02:35.420"/>
</kw>
<status status="PASS" starttime="20210423 05:02:35.408" endtime="20210423 05:02:35.420"/>
</kw>
<msg timestamp="20210423 05:02:35.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:02:35.407" endtime="20210423 05:02:35.421"/>
</kw>
<status status="PASS" starttime="20210423 05:02:35.406" endtime="20210423 05:02:35.421"/>
</kw>
<status status="PASS" starttime="20210423 05:02:35.406" endtime="20210423 05:02:35.421"/>
</kw>
<status status="PASS" starttime="20210423 05:02:35.395" endtime="20210423 05:02:35.421"/>
</kw>
<status status="PASS" starttime="20210423 05:02:35.395" endtime="20210423 05:02:35.421"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:02:35.425" level="INFO">Running command 'ozone sh bucket delete 70551-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:02:41.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:02:41.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:02:35.423" endtime="20210423 05:02:41.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:02:41.128" level="INFO"/>
<status status="PASS" starttime="20210423 05:02:41.123" endtime="20210423 05:02:41.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:02:41.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:02:41.129" endtime="20210423 05:02:41.129"/>
</kw>
<status status="PASS" starttime="20210423 05:02:35.422" endtime="20210423 05:02:41.130"/>
</kw>
<msg timestamp="20210423 05:02:41.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:02:35.422" endtime="20210423 05:02:41.133"/>
</kw>
<status status="PASS" starttime="20210423 05:02:35.422" endtime="20210423 05:02:41.133"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:02:41.142" level="INFO">Running command 'ozone sh bucket list 70551-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:02:48.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:02:48.524" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T...</msg>
<status status="PASS" starttime="20210423 05:02:41.137" endtime="20210423 05:02:48.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:02:48.526" level="INFO">{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:59:38.367Z",
  "modificationTime" : "2021-04-23T04:59:38.367Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:54:02.923Z",
  "modificationTime" : "2021-04-23T04:54:02.923Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:53:26.567Z",
  "modificationTime" : "2021-04-23T04:53:56.568Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:59:26.057Z",
  "modificationTime" : "2021-04-23T04:59:26.057Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T05:00:42.674Z",
  "modificationTime" : "2021-04-23T05:00:42.674Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T05:00:29.057Z",
  "modificationTime" : "2021-04-23T05:00:29.057Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T05:00:16.646Z",
  "modificationTime" : "2021-04-23T05:00:16.646Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T05:00:22.813Z",
  "modificationTime" : "2021-04-23T05:00:22.813Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:53:15.714Z",
  "modificationTime" : "2021-04-23T04:53:50.292Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T04:53:20.180Z",
  "modificationTime" : "2021-04-23T04:53:20.180Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "70551-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210423 05:02:48.525" endtime="20210423 05:02:48.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:02:48.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:02:48.528" endtime="20210423 05:02:48.528"/>
</kw>
<status status="PASS" starttime="20210423 05:02:41.136" endtime="20210423 05:02:48.528"/>
</kw>
<msg timestamp="20210423 05:02:48.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:02:41.136" endtime="20210423 05:02:48.529"/>
</kw>
<msg timestamp="20210423 05:02:48.529" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "70551-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T...</msg>
<status status="PASS" starttime="20210423 05:02:41.134" endtime="20210423 05:02:48.529"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:02:48.529" endtime="20210423 05:02:48.530"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:02:48.536" level="INFO">Running command 'ozone sh key list 70551-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:02:55.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:02:55.906" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210423 05:02:48.532" endtime="20210423 05:02:55.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:02:55.907" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210423 05:02:55.907" endtime="20210423 05:02:55.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:02:55.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:02:55.908" endtime="20210423 05:02:55.908"/>
</kw>
<status status="PASS" starttime="20210423 05:02:48.531" endtime="20210423 05:02:55.909"/>
</kw>
<msg timestamp="20210423 05:02:55.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:02:48.531" endtime="20210423 05:02:55.909"/>
</kw>
<msg timestamp="20210423 05:02:55.910" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210423 05:02:48.530" endtime="20210423 05:02:55.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:02:55.910" endtime="20210423 05:02:55.911"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 05:02:35.394" endtime="20210423 05:02:55.912"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210423 04:49:34.189" endtime="20210423 05:02:55.918"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210423 05:02:55.955" level="INFO">${random} = 05940</msg>
<status status="PASS" starttime="20210423 05:02:55.954" endtime="20210423 05:02:55.955"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:02:55.956" level="INFO">${prefix} = 05940</msg>
<status status="PASS" starttime="20210423 05:02:55.955" endtime="20210423 05:02:55.956"/>
</kw>
<status status="PASS" starttime="20210423 05:02:55.954" endtime="20210423 05:02:55.957"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:02:55.964" level="INFO">Running command 'ozone sh volume info /05940-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:03:03.673" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 05:03:03.673" level="INFO">${output} = VOLUME_NOT_FOUND Volume 05940-rpcbasic is not found</msg>
<status status="PASS" starttime="20210423 05:02:55.961" endtime="20210423 05:03:03.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:03:03.676" level="INFO">VOLUME_NOT_FOUND Volume 05940-rpcbasic is not found</msg>
<status status="PASS" starttime="20210423 05:03:03.674" endtime="20210423 05:03:03.676"/>
</kw>
<msg timestamp="20210423 05:03:03.677" level="INFO">${result} = VOLUME_NOT_FOUND Volume 05940-rpcbasic is not found</msg>
<status status="PASS" starttime="20210423 05:02:55.960" endtime="20210423 05:03:03.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:03:03.678" endtime="20210423 05:03:03.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:03:03.687" level="INFO">Running command 'ozone sh volume create /05940-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:03:10.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:03:10.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:03:03.684" endtime="20210423 05:03:10.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:03:10.415" level="INFO"/>
<status status="PASS" starttime="20210423 05:03:10.414" endtime="20210423 05:03:10.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:03:10.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:03:10.415" endtime="20210423 05:03:10.416"/>
</kw>
<status status="PASS" starttime="20210423 05:03:03.682" endtime="20210423 05:03:10.416"/>
</kw>
<msg timestamp="20210423 05:03:10.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:03:03.682" endtime="20210423 05:03:10.417"/>
</kw>
<msg timestamp="20210423 05:03:10.417" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210423 05:03:03.679" endtime="20210423 05:03:10.417"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:03:10.418" endtime="20210423 05:03:10.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:03:10.426" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="05940-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:03:17.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:03:17.296" level="INFO">${output} = {
  "metadata": {},
  "name": "05940-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210423 05:03:10.423" endtime="20210423 05:03:17.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:03:17.298" level="INFO">{
  "metadata": {},
  "name": "05940-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-23T05:03:10.078Z",
  "modificationTime": "2021-04-23T05:03:10.078Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210423 05:03:17.297" endtime="20210423 05:03:17.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:03:17.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:03:17.299" endtime="20210423 05:03:17.300"/>
</kw>
<status status="PASS" starttime="20210423 05:03:10.421" endtime="20210423 05:03:17.301"/>
</kw>
<msg timestamp="20210423 05:03:17.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:03:10.421" endtime="20210423 05:03:17.301"/>
</kw>
<msg timestamp="20210423 05:03:17.302" level="INFO">${result} = {
  "metadata": {},
  "name": "05940-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210423 05:03:10.419" endtime="20210423 05:03:17.302"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:03:17.302" endtime="20210423 05:03:17.303"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:03:17.312" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="05940-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:03:22.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:03:22.080" level="INFO">${output} = {
  "metadata": {},
  "name": "05940-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210423 05:03:17.308" endtime="20210423 05:03:22.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:03:22.083" level="INFO">{
  "metadata": {},
  "name": "05940-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-23T05:03:10.078Z",
  "modificationTime": "2021-04-23T05:03:10.078Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210423 05:03:22.081" endtime="20210423 05:03:22.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:03:22.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:03:22.083" endtime="20210423 05:03:22.083"/>
</kw>
<status status="PASS" starttime="20210423 05:03:17.306" endtime="20210423 05:03:22.084"/>
</kw>
<msg timestamp="20210423 05:03:22.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:03:17.305" endtime="20210423 05:03:22.084"/>
</kw>
<msg timestamp="20210423 05:03:22.084" level="INFO">${result} = {
  "metadata": {},
  "name": "05940-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210423 05:03:17.304" endtime="20210423 05:03:22.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:03:22.085" endtime="20210423 05:03:22.085"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:03:22.089" level="INFO">Running command 'ozone sh volume setquota /05940-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:03:28.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:03:28.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:03:22.087" endtime="20210423 05:03:28.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:03:28.467" level="INFO"/>
<status status="PASS" starttime="20210423 05:03:28.466" endtime="20210423 05:03:28.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:03:28.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:03:28.467" endtime="20210423 05:03:28.468"/>
</kw>
<status status="PASS" starttime="20210423 05:03:22.086" endtime="20210423 05:03:28.468"/>
</kw>
<msg timestamp="20210423 05:03:28.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:03:22.086" endtime="20210423 05:03:28.468"/>
</kw>
<status status="PASS" starttime="20210423 05:03:22.085" endtime="20210423 05:03:28.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:03:28.473" level="INFO">Running command 'ozone sh volume info /05940-rpcbasic | jq -r '. | select(.name=="05940-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:03:35.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:03:35.043" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:03:28.471" endtime="20210423 05:03:35.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:03:35.044" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210423 05:03:35.043" endtime="20210423 05:03:35.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:03:35.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:03:35.044" endtime="20210423 05:03:35.045"/>
</kw>
<status status="PASS" starttime="20210423 05:03:28.470" endtime="20210423 05:03:35.045"/>
</kw>
<msg timestamp="20210423 05:03:35.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:03:28.470" endtime="20210423 05:03:35.046"/>
</kw>
<msg timestamp="20210423 05:03:35.046" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:03:28.469" endtime="20210423 05:03:35.046"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:03:35.046" endtime="20210423 05:03:35.047"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:03:35.053" level="INFO">Running command 'ozone sh bucket create /05940-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:03:42.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:03:42.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:03:35.049" endtime="20210423 05:03:42.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:03:42.152" level="INFO"/>
<status status="PASS" starttime="20210423 05:03:42.151" endtime="20210423 05:03:42.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:03:42.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:03:42.153" endtime="20210423 05:03:42.153"/>
</kw>
<status status="PASS" starttime="20210423 05:03:35.049" endtime="20210423 05:03:42.154"/>
</kw>
<msg timestamp="20210423 05:03:42.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:03:35.048" endtime="20210423 05:03:42.154"/>
</kw>
<status status="PASS" starttime="20210423 05:03:35.047" endtime="20210423 05:03:42.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:03:42.160" level="INFO">Running command 'ozone sh bucket info /05940-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:03:49.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:03:49.445" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210423 05:03:42.157" endtime="20210423 05:03:49.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:03:49.447" level="INFO">DISK</msg>
<status status="PASS" starttime="20210423 05:03:49.446" endtime="20210423 05:03:49.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:03:49.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:03:49.448" endtime="20210423 05:03:49.449"/>
</kw>
<status status="PASS" starttime="20210423 05:03:42.157" endtime="20210423 05:03:49.450"/>
</kw>
<msg timestamp="20210423 05:03:49.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:03:42.156" endtime="20210423 05:03:49.450"/>
</kw>
<msg timestamp="20210423 05:03:49.451" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210423 05:03:42.155" endtime="20210423 05:03:49.451"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:03:49.451" endtime="20210423 05:03:49.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:03:49.457" level="INFO">Running command 'ozone sh bucket info /05940-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:03:55.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:03:55.332" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:03:49.454" endtime="20210423 05:03:55.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:03:55.333" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210423 05:03:55.332" endtime="20210423 05:03:55.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:03:55.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:03:55.334" endtime="20210423 05:03:55.334"/>
</kw>
<status status="PASS" starttime="20210423 05:03:49.454" endtime="20210423 05:03:55.335"/>
</kw>
<msg timestamp="20210423 05:03:55.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:03:49.453" endtime="20210423 05:03:55.335"/>
</kw>
<msg timestamp="20210423 05:03:55.335" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:03:49.452" endtime="20210423 05:03:55.335"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:03:55.335" endtime="20210423 05:03:55.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:03:55.343" level="INFO">Running command 'ozone sh bucket info /05940-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:04:00.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:04:00.494" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210423 05:03:55.339" endtime="20210423 05:04:00.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:04:00.495" level="INFO">100</msg>
<status status="PASS" starttime="20210423 05:04:00.494" endtime="20210423 05:04:00.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:04:00.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:04:00.495" endtime="20210423 05:04:00.495"/>
</kw>
<status status="PASS" starttime="20210423 05:03:55.338" endtime="20210423 05:04:00.496"/>
</kw>
<msg timestamp="20210423 05:04:00.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:03:55.337" endtime="20210423 05:04:00.496"/>
</kw>
<msg timestamp="20210423 05:04:00.496" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210423 05:03:55.336" endtime="20210423 05:04:00.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:04:00.496" endtime="20210423 05:04:00.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:04:00.501" level="INFO">Running command 'ozone sh bucket setquota /05940-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:04:08.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:04:08.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:04:00.499" endtime="20210423 05:04:08.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:04:08.027" level="INFO"/>
<status status="PASS" starttime="20210423 05:04:08.026" endtime="20210423 05:04:08.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:04:08.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:04:08.028" endtime="20210423 05:04:08.028"/>
</kw>
<status status="PASS" starttime="20210423 05:04:00.498" endtime="20210423 05:04:08.029"/>
</kw>
<msg timestamp="20210423 05:04:08.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:04:00.498" endtime="20210423 05:04:08.029"/>
</kw>
<status status="PASS" starttime="20210423 05:04:00.497" endtime="20210423 05:04:08.029"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:04:08.034" level="INFO">Running command 'ozone sh bucket info /05940-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:04:14.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:04:14.553" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210423 05:04:08.031" endtime="20210423 05:04:14.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:04:14.555" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210423 05:04:14.554" endtime="20210423 05:04:14.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:04:14.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:04:14.556" endtime="20210423 05:04:14.558"/>
</kw>
<status status="PASS" starttime="20210423 05:04:08.031" endtime="20210423 05:04:14.559"/>
</kw>
<msg timestamp="20210423 05:04:14.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:04:08.031" endtime="20210423 05:04:14.559"/>
</kw>
<msg timestamp="20210423 05:04:14.560" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210423 05:04:08.029" endtime="20210423 05:04:14.560"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:04:14.560" endtime="20210423 05:04:14.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:04:14.569" level="INFO">Running command 'ozone sh bucket info /05940-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:04:21.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:04:21.450" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210423 05:04:14.566" endtime="20210423 05:04:21.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:04:21.451" level="INFO">1000</msg>
<status status="PASS" starttime="20210423 05:04:21.450" endtime="20210423 05:04:21.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:04:21.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:04:21.451" endtime="20210423 05:04:21.452"/>
</kw>
<status status="PASS" starttime="20210423 05:04:14.565" endtime="20210423 05:04:21.452"/>
</kw>
<msg timestamp="20210423 05:04:21.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:04:14.564" endtime="20210423 05:04:21.453"/>
</kw>
<msg timestamp="20210423 05:04:21.453" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210423 05:04:14.562" endtime="20210423 05:04:21.453"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:04:21.453" endtime="20210423 05:04:21.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:04:21.459" level="INFO">Running command 'ozone sh bucket list /05940-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:04:28.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:04:28.567" level="INFO">${output} = 05940-rpcbasic</msg>
<status status="PASS" starttime="20210423 05:04:21.456" endtime="20210423 05:04:28.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:04:28.568" level="INFO">05940-rpcbasic</msg>
<status status="PASS" starttime="20210423 05:04:28.568" endtime="20210423 05:04:28.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:04:28.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:04:28.569" endtime="20210423 05:04:28.569"/>
</kw>
<status status="PASS" starttime="20210423 05:04:21.455" endtime="20210423 05:04:28.570"/>
</kw>
<msg timestamp="20210423 05:04:28.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:04:21.455" endtime="20210423 05:04:28.570"/>
</kw>
<msg timestamp="20210423 05:04:28.570" level="INFO">${result} = 05940-rpcbasic</msg>
<status status="PASS" starttime="20210423 05:04:21.454" endtime="20210423 05:04:28.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:04:28.570" endtime="20210423 05:04:28.571"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:04:28.576" level="INFO">Running command 'ozone sh key put /05940-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:07:37.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:07:37.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:04:28.574" endtime="20210423 05:07:37.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:07:37.842" level="INFO"/>
<status status="PASS" starttime="20210423 05:07:37.841" endtime="20210423 05:07:37.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:07:37.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:07:37.842" endtime="20210423 05:07:37.843"/>
</kw>
<status status="PASS" starttime="20210423 05:04:28.574" endtime="20210423 05:07:37.843"/>
</kw>
<msg timestamp="20210423 05:07:37.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:04:28.573" endtime="20210423 05:07:37.843"/>
</kw>
<status status="PASS" starttime="20210423 05:04:28.573" endtime="20210423 05:07:37.843"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:07:37.847" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:07:37.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:07:37.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:07:37.845" endtime="20210423 05:07:37.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:07:37.851" level="INFO"/>
<status status="PASS" starttime="20210423 05:07:37.851" endtime="20210423 05:07:37.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:07:37.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:07:37.851" endtime="20210423 05:07:37.853"/>
</kw>
<status status="PASS" starttime="20210423 05:07:37.844" endtime="20210423 05:07:37.853"/>
</kw>
<msg timestamp="20210423 05:07:37.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:07:37.844" endtime="20210423 05:07:37.854"/>
</kw>
<status status="PASS" starttime="20210423 05:07:37.843" endtime="20210423 05:07:37.854"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:07:37.859" level="INFO">Running command 'ozone sh key get /05940-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:07:49.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:07:49.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:07:37.857" endtime="20210423 05:07:49.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:07:49.189" level="INFO"/>
<status status="PASS" starttime="20210423 05:07:49.188" endtime="20210423 05:07:49.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:07:49.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:07:49.189" endtime="20210423 05:07:49.190"/>
</kw>
<status status="PASS" starttime="20210423 05:07:37.856" endtime="20210423 05:07:49.190"/>
</kw>
<msg timestamp="20210423 05:07:49.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:07:37.855" endtime="20210423 05:07:49.191"/>
</kw>
<status status="PASS" starttime="20210423 05:07:37.854" endtime="20210423 05:07:49.191"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:07:49.198" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:07:49.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:07:49.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:07:49.194" endtime="20210423 05:07:49.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:07:49.203" level="INFO"/>
<status status="PASS" starttime="20210423 05:07:49.202" endtime="20210423 05:07:49.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:07:49.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:07:49.204" endtime="20210423 05:07:49.205"/>
</kw>
<status status="PASS" starttime="20210423 05:07:49.193" endtime="20210423 05:07:49.205"/>
</kw>
<msg timestamp="20210423 05:07:49.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:07:49.192" endtime="20210423 05:07:49.206"/>
</kw>
<status status="PASS" starttime="20210423 05:07:49.191" endtime="20210423 05:07:49.206"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:07:49.211" level="INFO">Running command 'ozone sh key put -t RATIS /05940-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:07:55.958" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210423 05:07:49.209" endtime="20210423 05:07:55.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.960" endtime="20210423 05:07:55.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.960" endtime="20210423 05:07:55.961"/>
</kw>
<status status="FAIL" starttime="20210423 05:07:49.208" endtime="20210423 05:07:55.961"/>
</kw>
<msg timestamp="20210423 05:07:55.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210423 05:07:49.208" endtime="20210423 05:07:55.962"/>
</kw>
<status status="FAIL" starttime="20210423 05:07:49.206" endtime="20210423 05:07:55.962"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.962" endtime="20210423 05:07:55.962"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.963" endtime="20210423 05:07:55.963"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.963" endtime="20210423 05:07:55.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.963" endtime="20210423 05:07:55.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.964" endtime="20210423 05:07:55.964"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.964" endtime="20210423 05:07:55.964"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.965" endtime="20210423 05:07:55.965"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.966" endtime="20210423 05:07:55.966"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.966" endtime="20210423 05:07:55.966"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.967" endtime="20210423 05:07:55.968"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.968" endtime="20210423 05:07:55.968"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.969" endtime="20210423 05:07:55.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.970" endtime="20210423 05:07:55.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.972" endtime="20210423 05:07:55.972"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.973" endtime="20210423 05:07:55.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.975" endtime="20210423 05:07:55.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.975" endtime="20210423 05:07:55.975"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.977" endtime="20210423 05:07:55.977"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.979" endtime="20210423 05:07:55.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.979" endtime="20210423 05:07:55.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.981" endtime="20210423 05:07:55.981"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.982" endtime="20210423 05:07:55.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.983" endtime="20210423 05:07:55.984"/>
</kw>
<status status="FAIL" starttime="20210423 05:04:28.572" endtime="20210423 05:07:55.984"/>
</kw>
<status status="FAIL" starttime="20210423 05:04:28.571" endtime="20210423 05:07:55.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.985" endtime="20210423 05:07:55.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.987" endtime="20210423 05:07:55.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.988" endtime="20210423 05:07:55.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.989" endtime="20210423 05:07:55.990"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.990" endtime="20210423 05:07:55.991"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.992" endtime="20210423 05:07:55.992"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.992" endtime="20210423 05:07:55.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.994" endtime="20210423 05:07:55.994"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:07:55.999" endtime="20210423 05:07:55.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:07:55.999" endtime="20210423 05:07:56.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.000" endtime="20210423 05:07:56.002"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:07:56.002" endtime="20210423 05:07:56.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.004" endtime="20210423 05:07:56.004"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.004" endtime="20210423 05:07:56.004"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.005" endtime="20210423 05:07:56.005"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.007" endtime="20210423 05:07:56.007"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:07:56.007" endtime="20210423 05:07:56.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.008" endtime="20210423 05:07:56.008"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:07:56.010" endtime="20210423 05:07:56.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.011" endtime="20210423 05:07:56.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.011" endtime="20210423 05:07:56.012"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:07:56.012" endtime="20210423 05:07:56.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.012" endtime="20210423 05:07:56.012"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:07:56.012" endtime="20210423 05:07:56.015"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.016" endtime="20210423 05:07:56.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:07:56.017" endtime="20210423 05:07:56.017"/>
</kw>
<status status="FAIL" starttime="20210423 05:02:55.958" endtime="20210423 05:07:56.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210423 05:02:55.957" endtime="20210423 05:07:56.019">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210423 05:02:55.925" endtime="20210423 05:07:56.025"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210423 05:07:56.111" level="INFO">${random} = 56877</msg>
<status status="PASS" starttime="20210423 05:07:56.109" endtime="20210423 05:07:56.111"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:07:56.113" level="INFO">${prefix} = 56877</msg>
<status status="PASS" starttime="20210423 05:07:56.112" endtime="20210423 05:07:56.113"/>
</kw>
<status status="PASS" starttime="20210423 05:07:56.109" endtime="20210423 05:07:56.114"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:07:56.147" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:07:56.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:07:56.152" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 05:07:56.133" endtime="20210423 05:07:56.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:07:56.153" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 05:07:56.153" endtime="20210423 05:07:56.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:07:56.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:07:56.154" endtime="20210423 05:07:56.154"/>
</kw>
<status status="PASS" starttime="20210423 05:07:56.129" endtime="20210423 05:07:56.155"/>
</kw>
<msg timestamp="20210423 05:07:56.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:07:56.128" endtime="20210423 05:07:56.155"/>
</kw>
<msg timestamp="20210423 05:07:56.155" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 05:07:56.125" endtime="20210423 05:07:56.155"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:07:56.164" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 05:07:56.156" endtime="20210423 05:07:56.165"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:07:56.192" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:07:56.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:07:56.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:07:56.176" endtime="20210423 05:07:56.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:07:56.231" level="INFO"/>
<status status="PASS" starttime="20210423 05:07:56.228" endtime="20210423 05:07:56.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:07:56.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:07:56.231" endtime="20210423 05:07:56.235"/>
</kw>
<status status="PASS" starttime="20210423 05:07:56.171" endtime="20210423 05:07:56.236"/>
</kw>
<msg timestamp="20210423 05:07:56.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:07:56.170" endtime="20210423 05:07:56.236"/>
</kw>
<status status="PASS" starttime="20210423 05:07:56.165" endtime="20210423 05:07:56.236"/>
</kw>
<status status="PASS" starttime="20210423 05:07:56.165" endtime="20210423 05:07:56.236"/>
</kw>
<status status="PASS" starttime="20210423 05:07:56.122" endtime="20210423 05:07:56.237"/>
</kw>
<status status="PASS" starttime="20210423 05:07:56.120" endtime="20210423 05:07:56.237"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:07:56.262" level="INFO">Running command 'ozone sh volume info o3://om:9862/56877-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:08:03.496" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 05:08:03.496" level="INFO">${output} = VOLUME_NOT_FOUND Volume 56877-rpcwoport is not found</msg>
<status status="PASS" starttime="20210423 05:07:56.243" endtime="20210423 05:08:03.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:08:03.498" level="INFO">VOLUME_NOT_FOUND Volume 56877-rpcwoport is not found</msg>
<status status="PASS" starttime="20210423 05:08:03.497" endtime="20210423 05:08:03.498"/>
</kw>
<msg timestamp="20210423 05:08:03.498" level="INFO">${result} = VOLUME_NOT_FOUND Volume 56877-rpcwoport is not found</msg>
<status status="PASS" starttime="20210423 05:07:56.242" endtime="20210423 05:08:03.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:08:03.498" endtime="20210423 05:08:03.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:08:03.503" level="INFO">Running command 'ozone sh volume create o3://om:9862/56877-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:08:09.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:08:09.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:08:03.500" endtime="20210423 05:08:09.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:08:09.577" level="INFO"/>
<status status="PASS" starttime="20210423 05:08:09.575" endtime="20210423 05:08:09.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:08:09.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:08:09.577" endtime="20210423 05:08:09.578"/>
</kw>
<status status="PASS" starttime="20210423 05:08:03.500" endtime="20210423 05:08:09.579"/>
</kw>
<msg timestamp="20210423 05:08:09.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:08:03.500" endtime="20210423 05:08:09.579"/>
</kw>
<msg timestamp="20210423 05:08:09.580" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210423 05:08:03.499" endtime="20210423 05:08:09.580"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:08:09.580" endtime="20210423 05:08:09.581"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:08:09.588" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="56877-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:08:16.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:08:16.608" level="INFO">${output} = {
  "metadata": {},
  "name": "56877-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210423 05:08:09.585" endtime="20210423 05:08:16.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:08:16.609" level="INFO">{
  "metadata": {},
  "name": "56877-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-23T05:08:09.426Z",
  "modificationTime": "2021-04-23T05:08:09.426Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210423 05:08:16.609" endtime="20210423 05:08:16.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:08:16.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:08:16.610" endtime="20210423 05:08:16.610"/>
</kw>
<status status="PASS" starttime="20210423 05:08:09.584" endtime="20210423 05:08:16.611"/>
</kw>
<msg timestamp="20210423 05:08:16.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:08:09.584" endtime="20210423 05:08:16.611"/>
</kw>
<msg timestamp="20210423 05:08:16.612" level="INFO">${result} = {
  "metadata": {},
  "name": "56877-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210423 05:08:09.582" endtime="20210423 05:08:16.612"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:08:16.612" endtime="20210423 05:08:16.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:08:16.617" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="56877-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:08:23.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:08:23.703" level="INFO">${output} = {
  "metadata": {},
  "name": "56877-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210423 05:08:16.614" endtime="20210423 05:08:23.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:08:23.706" level="INFO">{
  "metadata": {},
  "name": "56877-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-23T05:08:09.426Z",
  "modificationTime": "2021-04-23T05:08:09.426Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210423 05:08:23.705" endtime="20210423 05:08:23.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:08:23.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:08:23.707" endtime="20210423 05:08:23.709"/>
</kw>
<status status="PASS" starttime="20210423 05:08:16.613" endtime="20210423 05:08:23.710"/>
</kw>
<msg timestamp="20210423 05:08:23.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:08:16.613" endtime="20210423 05:08:23.710"/>
</kw>
<msg timestamp="20210423 05:08:23.711" level="INFO">${result} = {
  "metadata": {},
  "name": "56877-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210423 05:08:16.612" endtime="20210423 05:08:23.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:08:23.711" endtime="20210423 05:08:23.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:08:23.723" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/56877-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:08:29.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:08:29.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:08:23.719" endtime="20210423 05:08:29.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:08:29.702" level="INFO"/>
<status status="PASS" starttime="20210423 05:08:29.702" endtime="20210423 05:08:29.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:08:29.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:08:29.703" endtime="20210423 05:08:29.703"/>
</kw>
<status status="PASS" starttime="20210423 05:08:23.718" endtime="20210423 05:08:29.703"/>
</kw>
<msg timestamp="20210423 05:08:29.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:08:23.717" endtime="20210423 05:08:29.704"/>
</kw>
<status status="PASS" starttime="20210423 05:08:23.714" endtime="20210423 05:08:29.704"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:08:29.710" level="INFO">Running command 'ozone sh volume info o3://om:9862/56877-rpcwoport | jq -r '. | select(.name=="56877-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:08:36.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:08:36.598" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:08:29.707" endtime="20210423 05:08:36.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:08:36.599" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210423 05:08:36.598" endtime="20210423 05:08:36.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:08:36.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:08:36.599" endtime="20210423 05:08:36.600"/>
</kw>
<status status="PASS" starttime="20210423 05:08:29.706" endtime="20210423 05:08:36.601"/>
</kw>
<msg timestamp="20210423 05:08:36.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:08:29.706" endtime="20210423 05:08:36.601"/>
</kw>
<msg timestamp="20210423 05:08:36.602" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:08:29.704" endtime="20210423 05:08:36.602"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:08:36.602" endtime="20210423 05:08:36.603"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:08:36.609" level="INFO">Running command 'ozone sh bucket create o3://om:9862/56877-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:08:42.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:08:42.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:08:36.606" endtime="20210423 05:08:42.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:08:42.739" level="INFO"/>
<status status="PASS" starttime="20210423 05:08:42.738" endtime="20210423 05:08:42.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:08:42.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:08:42.739" endtime="20210423 05:08:42.740"/>
</kw>
<status status="PASS" starttime="20210423 05:08:36.605" endtime="20210423 05:08:42.740"/>
</kw>
<msg timestamp="20210423 05:08:42.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:08:36.605" endtime="20210423 05:08:42.741"/>
</kw>
<status status="PASS" starttime="20210423 05:08:36.603" endtime="20210423 05:08:42.741"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:08:42.750" level="INFO">Running command 'ozone sh bucket info o3://om:9862/56877-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:08:47.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:08:47.780" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210423 05:08:42.747" endtime="20210423 05:08:47.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:08:47.782" level="INFO">DISK</msg>
<status status="PASS" starttime="20210423 05:08:47.781" endtime="20210423 05:08:47.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:08:47.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:08:47.783" endtime="20210423 05:08:47.783"/>
</kw>
<status status="PASS" starttime="20210423 05:08:42.746" endtime="20210423 05:08:47.784"/>
</kw>
<msg timestamp="20210423 05:08:47.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:08:42.745" endtime="20210423 05:08:47.785"/>
</kw>
<msg timestamp="20210423 05:08:47.786" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210423 05:08:42.742" endtime="20210423 05:08:47.786"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:08:47.786" endtime="20210423 05:08:47.787"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:08:47.792" level="INFO">Running command 'ozone sh bucket info o3://om:9862/56877-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:08:53.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:08:53.663" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:08:47.789" endtime="20210423 05:08:53.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:08:53.664" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210423 05:08:53.663" endtime="20210423 05:08:53.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:08:53.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:08:53.665" endtime="20210423 05:08:53.665"/>
</kw>
<status status="PASS" starttime="20210423 05:08:47.788" endtime="20210423 05:08:53.665"/>
</kw>
<msg timestamp="20210423 05:08:53.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:08:47.788" endtime="20210423 05:08:53.666"/>
</kw>
<msg timestamp="20210423 05:08:53.666" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:08:47.787" endtime="20210423 05:08:53.666"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:08:53.666" endtime="20210423 05:08:53.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:08:53.672" level="INFO">Running command 'ozone sh bucket info o3://om:9862/56877-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:08:59.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:08:59.517" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210423 05:08:53.669" endtime="20210423 05:08:59.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:08:59.521" level="INFO">100</msg>
<status status="PASS" starttime="20210423 05:08:59.519" endtime="20210423 05:08:59.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:08:59.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:08:59.521" endtime="20210423 05:08:59.523"/>
</kw>
<status status="PASS" starttime="20210423 05:08:53.668" endtime="20210423 05:08:59.523"/>
</kw>
<msg timestamp="20210423 05:08:59.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:08:53.668" endtime="20210423 05:08:59.524"/>
</kw>
<msg timestamp="20210423 05:08:59.525" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210423 05:08:53.667" endtime="20210423 05:08:59.525"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:08:59.526" endtime="20210423 05:08:59.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:08:59.535" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/56877-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:09:06.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:09:06.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:08:59.531" endtime="20210423 05:09:06.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:09:06.408" level="INFO"/>
<status status="PASS" starttime="20210423 05:09:06.406" endtime="20210423 05:09:06.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:09:06.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:09:06.409" endtime="20210423 05:09:06.410"/>
</kw>
<status status="PASS" starttime="20210423 05:08:59.530" endtime="20210423 05:09:06.410"/>
</kw>
<msg timestamp="20210423 05:09:06.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:08:59.529" endtime="20210423 05:09:06.410"/>
</kw>
<status status="PASS" starttime="20210423 05:08:59.527" endtime="20210423 05:09:06.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:09:06.419" level="INFO">Running command 'ozone sh bucket info o3://om:9862/56877-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:09:13.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:09:13.664" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210423 05:09:06.416" endtime="20210423 05:09:13.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:09:13.669" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210423 05:09:13.665" endtime="20210423 05:09:13.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:09:13.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:09:13.670" endtime="20210423 05:09:13.671"/>
</kw>
<status status="PASS" starttime="20210423 05:09:06.415" endtime="20210423 05:09:13.672"/>
</kw>
<msg timestamp="20210423 05:09:13.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:09:06.414" endtime="20210423 05:09:13.672"/>
</kw>
<msg timestamp="20210423 05:09:13.673" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210423 05:09:06.411" endtime="20210423 05:09:13.673"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:09:13.674" endtime="20210423 05:09:13.675"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:09:13.683" level="INFO">Running command 'ozone sh bucket info o3://om:9862/56877-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:09:20.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:09:20.304" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210423 05:09:13.680" endtime="20210423 05:09:20.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:09:20.306" level="INFO">1000</msg>
<status status="PASS" starttime="20210423 05:09:20.305" endtime="20210423 05:09:20.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:09:20.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:09:20.306" endtime="20210423 05:09:20.307"/>
</kw>
<status status="PASS" starttime="20210423 05:09:13.679" endtime="20210423 05:09:20.308"/>
</kw>
<msg timestamp="20210423 05:09:20.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:09:13.678" endtime="20210423 05:09:20.309"/>
</kw>
<msg timestamp="20210423 05:09:20.309" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210423 05:09:13.675" endtime="20210423 05:09:20.310"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:09:20.310" endtime="20210423 05:09:20.310"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:09:20.317" level="INFO">Running command 'ozone sh bucket list o3://om:9862/56877-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:09:27.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:09:27.247" level="INFO">${output} = 56877-rpcwoport</msg>
<status status="PASS" starttime="20210423 05:09:20.313" endtime="20210423 05:09:27.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:09:27.249" level="INFO">56877-rpcwoport</msg>
<status status="PASS" starttime="20210423 05:09:27.247" endtime="20210423 05:09:27.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:09:27.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:09:27.249" endtime="20210423 05:09:27.249"/>
</kw>
<status status="PASS" starttime="20210423 05:09:20.312" endtime="20210423 05:09:27.250"/>
</kw>
<msg timestamp="20210423 05:09:27.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:09:20.312" endtime="20210423 05:09:27.250"/>
</kw>
<msg timestamp="20210423 05:09:27.252" level="INFO">${result} = 56877-rpcwoport</msg>
<status status="PASS" starttime="20210423 05:09:20.310" endtime="20210423 05:09:27.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:09:27.252" endtime="20210423 05:09:27.254"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:09:27.280" level="INFO">Running command 'ozone sh key put o3://om:9862/56877-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:12:36.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:12:36.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:09:27.276" endtime="20210423 05:12:36.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:12:36.866" level="INFO"/>
<status status="PASS" starttime="20210423 05:12:36.865" endtime="20210423 05:12:36.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:12:36.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:12:36.866" endtime="20210423 05:12:36.868"/>
</kw>
<status status="PASS" starttime="20210423 05:09:27.256" endtime="20210423 05:12:36.868"/>
</kw>
<msg timestamp="20210423 05:12:36.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:09:27.256" endtime="20210423 05:12:36.868"/>
</kw>
<status status="PASS" starttime="20210423 05:09:27.255" endtime="20210423 05:12:36.869"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:12:36.876" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:12:36.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:12:36.879" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:12:36.872" endtime="20210423 05:12:36.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:12:36.880" level="INFO"/>
<status status="PASS" starttime="20210423 05:12:36.879" endtime="20210423 05:12:36.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:12:36.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:12:36.880" endtime="20210423 05:12:36.881"/>
</kw>
<status status="PASS" starttime="20210423 05:12:36.870" endtime="20210423 05:12:36.882"/>
</kw>
<msg timestamp="20210423 05:12:36.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:12:36.870" endtime="20210423 05:12:36.882"/>
</kw>
<status status="PASS" starttime="20210423 05:12:36.869" endtime="20210423 05:12:36.882"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:12:36.887" level="INFO">Running command 'ozone sh key get o3://om:9862/56877-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:12:45.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:12:45.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:12:36.885" endtime="20210423 05:12:45.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:12:45.113" level="INFO"/>
<status status="PASS" starttime="20210423 05:12:45.112" endtime="20210423 05:12:45.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:12:45.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:12:45.113" endtime="20210423 05:12:45.113"/>
</kw>
<status status="PASS" starttime="20210423 05:12:36.884" endtime="20210423 05:12:45.114"/>
</kw>
<msg timestamp="20210423 05:12:45.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:12:36.883" endtime="20210423 05:12:45.114"/>
</kw>
<status status="PASS" starttime="20210423 05:12:36.882" endtime="20210423 05:12:45.114"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:12:45.119" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:12:45.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:12:45.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:12:45.116" endtime="20210423 05:12:45.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:12:45.126" level="INFO"/>
<status status="PASS" starttime="20210423 05:12:45.124" endtime="20210423 05:12:45.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:12:45.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:12:45.127" endtime="20210423 05:12:45.128"/>
</kw>
<status status="PASS" starttime="20210423 05:12:45.115" endtime="20210423 05:12:45.128"/>
</kw>
<msg timestamp="20210423 05:12:45.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:12:45.115" endtime="20210423 05:12:45.129"/>
</kw>
<status status="PASS" starttime="20210423 05:12:45.114" endtime="20210423 05:12:45.130"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:12:45.136" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/56877-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:12:56.116" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210423 05:12:45.134" endtime="20210423 05:12:56.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.117" endtime="20210423 05:12:56.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.117" endtime="20210423 05:12:56.117"/>
</kw>
<status status="FAIL" starttime="20210423 05:12:45.132" endtime="20210423 05:12:56.118"/>
</kw>
<msg timestamp="20210423 05:12:56.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210423 05:12:45.131" endtime="20210423 05:12:56.118"/>
</kw>
<status status="FAIL" starttime="20210423 05:12:45.130" endtime="20210423 05:12:56.118"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.119" endtime="20210423 05:12:56.119"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.119" endtime="20210423 05:12:56.119"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.119" endtime="20210423 05:12:56.120"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.120" endtime="20210423 05:12:56.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.120" endtime="20210423 05:12:56.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.120" endtime="20210423 05:12:56.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.120" endtime="20210423 05:12:56.120"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.121" endtime="20210423 05:12:56.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.121" endtime="20210423 05:12:56.121"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.121" endtime="20210423 05:12:56.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.121" endtime="20210423 05:12:56.121"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.122" endtime="20210423 05:12:56.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.122" endtime="20210423 05:12:56.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.122" endtime="20210423 05:12:56.122"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.123" endtime="20210423 05:12:56.123"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.123" endtime="20210423 05:12:56.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.123" endtime="20210423 05:12:56.123"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.123" endtime="20210423 05:12:56.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.124" endtime="20210423 05:12:56.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.124" endtime="20210423 05:12:56.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.124" endtime="20210423 05:12:56.124"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.124" endtime="20210423 05:12:56.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.124" endtime="20210423 05:12:56.125"/>
</kw>
<status status="FAIL" starttime="20210423 05:09:27.254" endtime="20210423 05:12:56.125"/>
</kw>
<status status="FAIL" starttime="20210423 05:09:27.254" endtime="20210423 05:12:56.125"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.125" endtime="20210423 05:12:56.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.125" endtime="20210423 05:12:56.125"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.126" endtime="20210423 05:12:56.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.126" endtime="20210423 05:12:56.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.126" endtime="20210423 05:12:56.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.126" endtime="20210423 05:12:56.126"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.127" endtime="20210423 05:12:56.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.127" endtime="20210423 05:12:56.127"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.127" endtime="20210423 05:12:56.127"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.133" endtime="20210423 05:12:56.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.133" endtime="20210423 05:12:56.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.133" endtime="20210423 05:12:56.134"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.134" endtime="20210423 05:12:56.134"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.134" endtime="20210423 05:12:56.134"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.134" endtime="20210423 05:12:56.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.134" endtime="20210423 05:12:56.134"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.134" endtime="20210423 05:12:56.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.135" endtime="20210423 05:12:56.135"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.135" endtime="20210423 05:12:56.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.135" endtime="20210423 05:12:56.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.135" endtime="20210423 05:12:56.136"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.136" endtime="20210423 05:12:56.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.136" endtime="20210423 05:12:56.136"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:12:56.136" endtime="20210423 05:12:56.136"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.136" endtime="20210423 05:12:56.136"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:12:56.137" endtime="20210423 05:12:56.137"/>
</kw>
<status status="FAIL" starttime="20210423 05:07:56.239" endtime="20210423 05:12:56.137"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210423 05:07:56.114" endtime="20210423 05:12:56.137">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:12:56.146" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:12:56.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:12:56.149" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 05:12:56.144" endtime="20210423 05:12:56.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:12:56.151" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 05:12:56.150" endtime="20210423 05:12:56.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:12:56.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:12:56.151" endtime="20210423 05:12:56.152"/>
</kw>
<status status="PASS" starttime="20210423 05:12:56.143" endtime="20210423 05:12:56.152"/>
</kw>
<msg timestamp="20210423 05:12:56.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:12:56.142" endtime="20210423 05:12:56.152"/>
</kw>
<msg timestamp="20210423 05:12:56.153" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 05:12:56.142" endtime="20210423 05:12:56.153"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:12:56.154" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 05:12:56.154" endtime="20210423 05:12:56.154"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:12:56.159" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:12:56.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:12:56.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:12:56.157" endtime="20210423 05:12:56.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:12:56.174" level="INFO"/>
<status status="PASS" starttime="20210423 05:12:56.174" endtime="20210423 05:12:56.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:12:56.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:12:56.175" endtime="20210423 05:12:56.175"/>
</kw>
<status status="PASS" starttime="20210423 05:12:56.156" endtime="20210423 05:12:56.176"/>
</kw>
<msg timestamp="20210423 05:12:56.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:12:56.156" endtime="20210423 05:12:56.176"/>
</kw>
<status status="PASS" starttime="20210423 05:12:56.155" endtime="20210423 05:12:56.176"/>
</kw>
<status status="PASS" starttime="20210423 05:12:56.155" endtime="20210423 05:12:56.176"/>
</kw>
<status status="PASS" starttime="20210423 05:12:56.141" endtime="20210423 05:12:56.177"/>
</kw>
<status status="PASS" starttime="20210423 05:12:56.141" endtime="20210423 05:12:56.177"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:12:56.181" level="INFO">Running command 'ozone sh volume create o3://om:9862/56877-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:02.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:02.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:12:56.179" endtime="20210423 05:13:02.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:02.959" level="INFO"/>
<status status="PASS" starttime="20210423 05:13:02.958" endtime="20210423 05:13:02.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:02.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:02.959" endtime="20210423 05:13:02.960"/>
</kw>
<status status="PASS" starttime="20210423 05:12:56.178" endtime="20210423 05:13:02.961"/>
</kw>
<msg timestamp="20210423 05:13:02.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:12:56.178" endtime="20210423 05:13:02.961"/>
</kw>
<status status="PASS" starttime="20210423 05:12:56.178" endtime="20210423 05:13:02.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:02.969" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/56877-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:09.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:09.780" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:13:02.966" endtime="20210423 05:13:09.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:09.783" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:13:09.781" endtime="20210423 05:13:09.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:09.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:09.783" endtime="20210423 05:13:09.783"/>
</kw>
<status status="PASS" starttime="20210423 05:13:02.966" endtime="20210423 05:13:09.784"/>
</kw>
<msg timestamp="20210423 05:13:09.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:02.965" endtime="20210423 05:13:09.784"/>
</kw>
<msg timestamp="20210423 05:13:09.784" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:13:02.964" endtime="20210423 05:13:09.785"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:13:09.785" endtime="20210423 05:13:09.786"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:09.791" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/56877-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:14.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:14.372" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210423 05:13:09.789" endtime="20210423 05:13:14.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:14.374" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210423 05:13:14.373" endtime="20210423 05:13:14.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:14.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:14.374" endtime="20210423 05:13:14.375"/>
</kw>
<status status="PASS" starttime="20210423 05:13:09.788" endtime="20210423 05:13:14.375"/>
</kw>
<msg timestamp="20210423 05:13:14.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:09.787" endtime="20210423 05:13:14.375"/>
</kw>
<msg timestamp="20210423 05:13:14.375" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210423 05:13:09.786" endtime="20210423 05:13:14.375"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:14.379" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/56877-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:21.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:21.222" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:13:14.377" endtime="20210423 05:13:21.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:21.224" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:13:21.223" endtime="20210423 05:13:21.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:21.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:21.224" endtime="20210423 05:13:21.225"/>
</kw>
<status status="PASS" starttime="20210423 05:13:14.376" endtime="20210423 05:13:21.226"/>
</kw>
<msg timestamp="20210423 05:13:21.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:14.376" endtime="20210423 05:13:21.226"/>
</kw>
<msg timestamp="20210423 05:13:21.227" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:13:14.376" endtime="20210423 05:13:21.227"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:13:21.227" endtime="20210423 05:13:21.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:21.233" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/56877-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:27.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:27.401" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210423 05:13:21.231" endtime="20210423 05:13:27.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:27.402" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210423 05:13:27.402" endtime="20210423 05:13:27.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:27.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:27.403" endtime="20210423 05:13:27.403"/>
</kw>
<status status="PASS" starttime="20210423 05:13:21.230" endtime="20210423 05:13:27.404"/>
</kw>
<msg timestamp="20210423 05:13:27.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:21.230" endtime="20210423 05:13:27.404"/>
</kw>
<msg timestamp="20210423 05:13:27.404" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210423 05:13:21.229" endtime="20210423 05:13:27.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:27.422" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/56877-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:34.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:34.121" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:13:27.417" endtime="20210423 05:13:34.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:34.122" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:13:34.122" endtime="20210423 05:13:34.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:34.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:34.123" endtime="20210423 05:13:34.123"/>
</kw>
<status status="PASS" starttime="20210423 05:13:27.415" endtime="20210423 05:13:34.124"/>
</kw>
<msg timestamp="20210423 05:13:34.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:27.413" endtime="20210423 05:13:34.124"/>
</kw>
<msg timestamp="20210423 05:13:34.124" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:13:27.404" endtime="20210423 05:13:34.124"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:13:34.124" endtime="20210423 05:13:34.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:34.134" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/56877-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:40.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:40.367" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:13:34.130" endtime="20210423 05:13:40.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:40.368" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:13:40.367" endtime="20210423 05:13:40.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:40.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:40.369" endtime="20210423 05:13:40.370"/>
</kw>
<status status="PASS" starttime="20210423 05:13:34.129" endtime="20210423 05:13:40.371"/>
</kw>
<msg timestamp="20210423 05:13:40.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:34.128" endtime="20210423 05:13:40.372"/>
</kw>
<msg timestamp="20210423 05:13:40.373" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:13:34.126" endtime="20210423 05:13:40.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:40.380" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/56877-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:46.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:46.878" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210423 05:13:40.376" endtime="20210423 05:13:46.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:46.879" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:13:46.879" endtime="20210423 05:13:46.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:46.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:46.880" endtime="20210423 05:13:46.881"/>
</kw>
<status status="PASS" starttime="20210423 05:13:40.374" endtime="20210423 05:13:46.881"/>
</kw>
<msg timestamp="20210423 05:13:46.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:40.374" endtime="20210423 05:13:46.881"/>
</kw>
<msg timestamp="20210423 05:13:46.882" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210423 05:13:40.373" endtime="20210423 05:13:46.882"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:13:46.882" endtime="20210423 05:13:46.883"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:13:46.884" endtime="20210423 05:13:46.885"/>
</kw>
<status status="PASS" starttime="20210423 05:12:56.177" endtime="20210423 05:13:46.885"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210423 05:12:56.139" endtime="20210423 05:13:46.886"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:46.895" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:46.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:46.899" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 05:13:46.892" endtime="20210423 05:13:46.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:46.901" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 05:13:46.900" endtime="20210423 05:13:46.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:46.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:46.902" endtime="20210423 05:13:46.902"/>
</kw>
<status status="PASS" starttime="20210423 05:13:46.892" endtime="20210423 05:13:46.903"/>
</kw>
<msg timestamp="20210423 05:13:46.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:46.891" endtime="20210423 05:13:46.903"/>
</kw>
<msg timestamp="20210423 05:13:46.903" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 05:13:46.891" endtime="20210423 05:13:46.903"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:13:46.907" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 05:13:46.904" endtime="20210423 05:13:46.907"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:46.913" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:46.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:46.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:13:46.910" endtime="20210423 05:13:46.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:46.941" level="INFO"/>
<status status="PASS" starttime="20210423 05:13:46.940" endtime="20210423 05:13:46.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:46.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:46.941" endtime="20210423 05:13:46.942"/>
</kw>
<status status="PASS" starttime="20210423 05:13:46.909" endtime="20210423 05:13:46.942"/>
</kw>
<msg timestamp="20210423 05:13:46.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:46.909" endtime="20210423 05:13:46.942"/>
</kw>
<status status="PASS" starttime="20210423 05:13:46.908" endtime="20210423 05:13:46.942"/>
</kw>
<status status="PASS" starttime="20210423 05:13:46.908" endtime="20210423 05:13:46.942"/>
</kw>
<status status="PASS" starttime="20210423 05:13:46.890" endtime="20210423 05:13:46.943"/>
</kw>
<status status="PASS" starttime="20210423 05:13:46.889" endtime="20210423 05:13:46.943"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:46.948" level="INFO">Running command 'ozone sh bucket create o3://om:9862/56877-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:13:54.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:13:54.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:13:46.946" endtime="20210423 05:13:54.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:13:54.017" level="INFO"/>
<status status="PASS" starttime="20210423 05:13:54.016" endtime="20210423 05:13:54.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:13:54.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:13:54.017" endtime="20210423 05:13:54.018"/>
</kw>
<status status="PASS" starttime="20210423 05:13:46.945" endtime="20210423 05:13:54.018"/>
</kw>
<msg timestamp="20210423 05:13:54.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:46.944" endtime="20210423 05:13:54.018"/>
</kw>
<status status="PASS" starttime="20210423 05:13:46.944" endtime="20210423 05:13:54.018"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:13:54.024" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/56877-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:14:00.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:14:00.599" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:13:54.020" endtime="20210423 05:14:00.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:14:00.601" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:14:00.599" endtime="20210423 05:14:00.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:14:00.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:14:00.601" endtime="20210423 05:14:00.602"/>
</kw>
<status status="PASS" starttime="20210423 05:13:54.020" endtime="20210423 05:14:00.602"/>
</kw>
<msg timestamp="20210423 05:14:00.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:13:54.019" endtime="20210423 05:14:00.603"/>
</kw>
<msg timestamp="20210423 05:14:00.603" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:13:54.019" endtime="20210423 05:14:00.603"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:14:00.603" endtime="20210423 05:14:00.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:14:00.608" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/56877-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:14:05.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:14:05.539" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210423 05:14:00.606" endtime="20210423 05:14:05.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:14:05.540" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210423 05:14:05.540" endtime="20210423 05:14:05.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:14:05.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:14:05.541" endtime="20210423 05:14:05.542"/>
</kw>
<status status="PASS" starttime="20210423 05:14:00.605" endtime="20210423 05:14:05.542"/>
</kw>
<msg timestamp="20210423 05:14:05.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:14:00.605" endtime="20210423 05:14:05.542"/>
</kw>
<msg timestamp="20210423 05:14:05.543" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210423 05:14:00.604" endtime="20210423 05:14:05.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:14:05.549" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/56877-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:14:12.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:14:12.223" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:14:05.546" endtime="20210423 05:14:12.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:14:12.224" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:14:12.223" endtime="20210423 05:14:12.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:14:12.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:14:12.224" endtime="20210423 05:14:12.225"/>
</kw>
<status status="PASS" starttime="20210423 05:14:05.544" endtime="20210423 05:14:12.225"/>
</kw>
<msg timestamp="20210423 05:14:12.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:14:05.544" endtime="20210423 05:14:12.225"/>
</kw>
<msg timestamp="20210423 05:14:12.226" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:14:05.543" endtime="20210423 05:14:12.226"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:14:12.226" endtime="20210423 05:14:12.227"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:14:12.233" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/56877-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:14:18.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:14:18.861" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210423 05:14:12.230" endtime="20210423 05:14:18.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:14:18.862" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210423 05:14:18.861" endtime="20210423 05:14:18.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:14:18.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:14:18.863" endtime="20210423 05:14:18.863"/>
</kw>
<status status="PASS" starttime="20210423 05:14:12.228" endtime="20210423 05:14:18.863"/>
</kw>
<msg timestamp="20210423 05:14:18.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:14:12.228" endtime="20210423 05:14:18.864"/>
</kw>
<msg timestamp="20210423 05:14:18.864" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210423 05:14:12.227" endtime="20210423 05:14:18.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:14:18.868" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/56877-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:14:25.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:14:25.774" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:14:18.867" endtime="20210423 05:14:25.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:14:25.776" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:14:25.774" endtime="20210423 05:14:25.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:14:25.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:14:25.776" endtime="20210423 05:14:25.781"/>
</kw>
<status status="PASS" starttime="20210423 05:14:18.866" endtime="20210423 05:14:25.782"/>
</kw>
<msg timestamp="20210423 05:14:25.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:14:18.865" endtime="20210423 05:14:25.782"/>
</kw>
<msg timestamp="20210423 05:14:25.783" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:14:18.864" endtime="20210423 05:14:25.783"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:14:25.783" endtime="20210423 05:14:25.784"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:14:25.791" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/56877-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:14:32.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:14:32.036" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:14:25.789" endtime="20210423 05:14:32.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:14:32.037" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:14:32.036" endtime="20210423 05:14:32.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:14:32.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:14:32.037" endtime="20210423 05:14:32.038"/>
</kw>
<status status="PASS" starttime="20210423 05:14:25.785" endtime="20210423 05:14:32.038"/>
</kw>
<msg timestamp="20210423 05:14:32.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:14:25.785" endtime="20210423 05:14:32.039"/>
</kw>
<msg timestamp="20210423 05:14:32.039" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:14:25.784" endtime="20210423 05:14:32.039"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:14:32.043" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/56877-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:14:37.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:14:37.204" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210423 05:14:32.041" endtime="20210423 05:14:37.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:14:37.206" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:14:37.205" endtime="20210423 05:14:37.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:14:37.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:14:37.206" endtime="20210423 05:14:37.207"/>
</kw>
<status status="PASS" starttime="20210423 05:14:32.040" endtime="20210423 05:14:37.207"/>
</kw>
<msg timestamp="20210423 05:14:37.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:14:32.040" endtime="20210423 05:14:37.207"/>
</kw>
<msg timestamp="20210423 05:14:37.207" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210423 05:14:32.039" endtime="20210423 05:14:37.208"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:14:37.208" endtime="20210423 05:14:37.209"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:14:37.210" endtime="20210423 05:14:37.210"/>
</kw>
<status status="PASS" starttime="20210423 05:13:46.943" endtime="20210423 05:14:37.211"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210423 05:13:46.888" endtime="20210423 05:14:37.211"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:14:37.221" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:14:37.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:14:37.225" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 05:14:37.218" endtime="20210423 05:14:37.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:14:37.227" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 05:14:37.226" endtime="20210423 05:14:37.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:14:37.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:14:37.227" endtime="20210423 05:14:37.228"/>
</kw>
<status status="PASS" starttime="20210423 05:14:37.217" endtime="20210423 05:14:37.231"/>
</kw>
<msg timestamp="20210423 05:14:37.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:14:37.217" endtime="20210423 05:14:37.231"/>
</kw>
<msg timestamp="20210423 05:14:37.237" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 05:14:37.216" endtime="20210423 05:14:37.237"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:14:37.238" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 05:14:37.237" endtime="20210423 05:14:37.238"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:14:37.244" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:14:37.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:14:37.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:14:37.242" endtime="20210423 05:14:37.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:14:37.257" level="INFO"/>
<status status="PASS" starttime="20210423 05:14:37.255" endtime="20210423 05:14:37.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:14:37.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:14:37.257" endtime="20210423 05:14:37.259"/>
</kw>
<status status="PASS" starttime="20210423 05:14:37.241" endtime="20210423 05:14:37.259"/>
</kw>
<msg timestamp="20210423 05:14:37.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:14:37.240" endtime="20210423 05:14:37.259"/>
</kw>
<status status="PASS" starttime="20210423 05:14:37.238" endtime="20210423 05:14:37.260"/>
</kw>
<status status="PASS" starttime="20210423 05:14:37.238" endtime="20210423 05:14:37.260"/>
</kw>
<status status="PASS" starttime="20210423 05:14:37.215" endtime="20210423 05:14:37.260"/>
</kw>
<status status="PASS" starttime="20210423 05:14:37.213" endtime="20210423 05:14:37.260"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:14:37.266" level="INFO">Running command 'ozone sh key put o3://om:9862/56877-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:17:47.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:17:47.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:14:37.263" endtime="20210423 05:17:47.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:17:47.726" level="INFO"/>
<status status="PASS" starttime="20210423 05:17:47.725" endtime="20210423 05:17:47.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:17:47.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:17:47.726" endtime="20210423 05:17:47.727"/>
</kw>
<status status="PASS" starttime="20210423 05:14:37.263" endtime="20210423 05:17:47.727"/>
</kw>
<msg timestamp="20210423 05:17:47.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:14:37.262" endtime="20210423 05:17:47.727"/>
</kw>
<status status="PASS" starttime="20210423 05:14:37.261" endtime="20210423 05:17:47.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:17:47.733" level="INFO">Running command 'ozone sh key getacl o3://om:9862/56877-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:17:54.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:17:54.616" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:17:47.730" endtime="20210423 05:17:54.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:17:54.618" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:17:54.616" endtime="20210423 05:17:54.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:17:54.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:17:54.618" endtime="20210423 05:17:54.619"/>
</kw>
<status status="PASS" starttime="20210423 05:17:47.729" endtime="20210423 05:17:54.619"/>
</kw>
<msg timestamp="20210423 05:17:54.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:17:47.729" endtime="20210423 05:17:54.619"/>
</kw>
<msg timestamp="20210423 05:17:54.620" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:17:47.728" endtime="20210423 05:17:54.620"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:17:54.620" endtime="20210423 05:17:54.620"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:17:54.629" level="INFO">Running command 'ozone sh key addacl o3://om:9862/56877-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:00.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:00.588" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 05:17:54.623" endtime="20210423 05:18:00.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:00.590" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 05:18:00.588" endtime="20210423 05:18:00.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:00.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:00.590" endtime="20210423 05:18:00.591"/>
</kw>
<status status="PASS" starttime="20210423 05:17:54.622" endtime="20210423 05:18:00.592"/>
</kw>
<msg timestamp="20210423 05:18:00.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:17:54.622" endtime="20210423 05:18:00.592"/>
</kw>
<msg timestamp="20210423 05:18:00.593" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210423 05:17:54.621" endtime="20210423 05:18:00.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:00.598" level="INFO">Running command 'ozone sh key getacl o3://om:9862/56877-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:05.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:05.256" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:18:00.595" endtime="20210423 05:18:05.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:05.259" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:18:05.258" endtime="20210423 05:18:05.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:05.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:05.260" endtime="20210423 05:18:05.262"/>
</kw>
<status status="PASS" starttime="20210423 05:18:00.595" endtime="20210423 05:18:05.263"/>
</kw>
<msg timestamp="20210423 05:18:05.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:00.594" endtime="20210423 05:18:05.263"/>
</kw>
<msg timestamp="20210423 05:18:05.264" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:18:00.593" endtime="20210423 05:18:05.264"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:18:05.264" endtime="20210423 05:18:05.266"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:05.273" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/56877-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:11.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:11.405" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210423 05:18:05.269" endtime="20210423 05:18:11.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:11.407" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210423 05:18:11.406" endtime="20210423 05:18:11.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:11.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:11.407" endtime="20210423 05:18:11.407"/>
</kw>
<status status="PASS" starttime="20210423 05:18:05.268" endtime="20210423 05:18:11.408"/>
</kw>
<msg timestamp="20210423 05:18:11.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:05.268" endtime="20210423 05:18:11.408"/>
</kw>
<msg timestamp="20210423 05:18:11.408" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210423 05:18:05.266" endtime="20210423 05:18:11.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:11.415" level="INFO">Running command 'ozone sh key getacl o3://om:9862/56877-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:16.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:16.414" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:18:11.411" endtime="20210423 05:18:16.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:16.417" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:18:16.415" endtime="20210423 05:18:16.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:16.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:16.417" endtime="20210423 05:18:16.419"/>
</kw>
<status status="PASS" starttime="20210423 05:18:11.410" endtime="20210423 05:18:16.420"/>
</kw>
<msg timestamp="20210423 05:18:16.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:11.410" endtime="20210423 05:18:16.420"/>
</kw>
<msg timestamp="20210423 05:18:16.421" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:18:11.409" endtime="20210423 05:18:16.421"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:18:16.421" endtime="20210423 05:18:16.422"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:16.429" level="INFO">Running command 'ozone sh key setacl o3://om:9862/56877-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:20.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:20.689" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:18:16.426" endtime="20210423 05:18:20.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:20.691" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:18:20.690" endtime="20210423 05:18:20.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:20.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:20.691" endtime="20210423 05:18:20.693"/>
</kw>
<status status="PASS" starttime="20210423 05:18:16.425" endtime="20210423 05:18:20.693"/>
</kw>
<msg timestamp="20210423 05:18:20.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:16.424" endtime="20210423 05:18:20.694"/>
</kw>
<msg timestamp="20210423 05:18:20.694" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:18:16.422" endtime="20210423 05:18:20.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:20.701" level="INFO">Running command 'ozone sh key getacl o3://om:9862/56877-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:27.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:27.620" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210423 05:18:20.698" endtime="20210423 05:18:27.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:27.622" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:18:27.621" endtime="20210423 05:18:27.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:27.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:27.622" endtime="20210423 05:18:27.623"/>
</kw>
<status status="PASS" starttime="20210423 05:18:20.697" endtime="20210423 05:18:27.623"/>
</kw>
<msg timestamp="20210423 05:18:27.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:20.696" endtime="20210423 05:18:27.623"/>
</kw>
<msg timestamp="20210423 05:18:27.624" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210423 05:18:20.695" endtime="20210423 05:18:27.624"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:18:27.624" endtime="20210423 05:18:27.624"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:18:27.624" endtime="20210423 05:18:27.626"/>
</kw>
<status status="PASS" starttime="20210423 05:14:37.260" endtime="20210423 05:18:27.626"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210423 05:14:37.212" endtime="20210423 05:18:27.627"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:27.635" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:27.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:27.639" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 05:18:27.632" endtime="20210423 05:18:27.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:27.641" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 05:18:27.640" endtime="20210423 05:18:27.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:27.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:27.642" endtime="20210423 05:18:27.643"/>
</kw>
<status status="PASS" starttime="20210423 05:18:27.631" endtime="20210423 05:18:27.644"/>
</kw>
<msg timestamp="20210423 05:18:27.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:27.631" endtime="20210423 05:18:27.645"/>
</kw>
<msg timestamp="20210423 05:18:27.645" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 05:18:27.630" endtime="20210423 05:18:27.645"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:18:27.647" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 05:18:27.646" endtime="20210423 05:18:27.647"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:27.654" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:27.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:27.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:18:27.651" endtime="20210423 05:18:27.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:27.671" level="INFO"/>
<status status="PASS" starttime="20210423 05:18:27.670" endtime="20210423 05:18:27.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:27.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:27.671" endtime="20210423 05:18:27.673"/>
</kw>
<status status="PASS" starttime="20210423 05:18:27.650" endtime="20210423 05:18:27.673"/>
</kw>
<msg timestamp="20210423 05:18:27.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:27.650" endtime="20210423 05:18:27.673"/>
</kw>
<status status="PASS" starttime="20210423 05:18:27.649" endtime="20210423 05:18:27.674"/>
</kw>
<status status="PASS" starttime="20210423 05:18:27.648" endtime="20210423 05:18:27.674"/>
</kw>
<status status="PASS" starttime="20210423 05:18:27.629" endtime="20210423 05:18:27.674"/>
</kw>
<status status="PASS" starttime="20210423 05:18:27.628" endtime="20210423 05:18:27.674"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:27.679" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/56877-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:34.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:34.253" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210423 05:18:27.676" endtime="20210423 05:18:34.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:34.255" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210423 05:18:34.254" endtime="20210423 05:18:34.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:34.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:34.255" endtime="20210423 05:18:34.256"/>
</kw>
<status status="PASS" starttime="20210423 05:18:27.676" endtime="20210423 05:18:34.257"/>
</kw>
<msg timestamp="20210423 05:18:34.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:27.676" endtime="20210423 05:18:34.258"/>
</kw>
<status status="PASS" starttime="20210423 05:18:27.675" endtime="20210423 05:18:34.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:34.263" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/56877-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:41.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:41.063" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210423 05:18:34.261" endtime="20210423 05:18:41.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:41.065" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:18:41.064" endtime="20210423 05:18:41.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:41.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:41.065" endtime="20210423 05:18:41.067"/>
</kw>
<status status="PASS" starttime="20210423 05:18:34.260" endtime="20210423 05:18:41.067"/>
</kw>
<msg timestamp="20210423 05:18:41.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:34.259" endtime="20210423 05:18:41.068"/>
</kw>
<msg timestamp="20210423 05:18:41.068" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210423 05:18:34.258" endtime="20210423 05:18:41.068"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:18:41.069" endtime="20210423 05:18:41.070"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:41.076" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/56877-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:45.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:45.678" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210423 05:18:41.074" endtime="20210423 05:18:45.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:45.681" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210423 05:18:45.679" endtime="20210423 05:18:45.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:45.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:45.682" endtime="20210423 05:18:45.683"/>
</kw>
<status status="PASS" starttime="20210423 05:18:41.072" endtime="20210423 05:18:45.684"/>
</kw>
<msg timestamp="20210423 05:18:45.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:41.072" endtime="20210423 05:18:45.685"/>
</kw>
<msg timestamp="20210423 05:18:45.685" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210423 05:18:41.071" endtime="20210423 05:18:45.686"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:45.702" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/56877-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:52.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:52.695" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210423 05:18:45.690" endtime="20210423 05:18:52.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:52.696" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:18:52.695" endtime="20210423 05:18:52.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:52.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:52.696" endtime="20210423 05:18:52.697"/>
</kw>
<status status="PASS" starttime="20210423 05:18:45.689" endtime="20210423 05:18:52.698"/>
</kw>
<msg timestamp="20210423 05:18:52.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:45.688" endtime="20210423 05:18:52.699"/>
</kw>
<msg timestamp="20210423 05:18:52.699" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210423 05:18:45.686" endtime="20210423 05:18:52.699"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:18:52.700" endtime="20210423 05:18:52.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:52.705" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/56877-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:18:57.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:18:57.254" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:18:52.703" endtime="20210423 05:18:57.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:18:57.257" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:18:57.255" endtime="20210423 05:18:57.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:18:57.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:18:57.257" endtime="20210423 05:18:57.258"/>
</kw>
<status status="PASS" starttime="20210423 05:18:52.702" endtime="20210423 05:18:57.258"/>
</kw>
<msg timestamp="20210423 05:18:57.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:52.702" endtime="20210423 05:18:57.258"/>
</kw>
<msg timestamp="20210423 05:18:57.259" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210423 05:18:52.701" endtime="20210423 05:18:57.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:18:57.265" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/56877-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:19:04.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:19:04.558" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210423 05:18:57.261" endtime="20210423 05:19:04.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:19:04.561" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:19:04.559" endtime="20210423 05:19:04.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:19:04.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:19:04.562" endtime="20210423 05:19:04.563"/>
</kw>
<status status="PASS" starttime="20210423 05:18:57.261" endtime="20210423 05:19:04.563"/>
</kw>
<msg timestamp="20210423 05:19:04.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:18:57.260" endtime="20210423 05:19:04.564"/>
</kw>
<msg timestamp="20210423 05:19:04.565" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210423 05:18:57.259" endtime="20210423 05:19:04.565"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:19:04.565" endtime="20210423 05:19:04.566"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:19:04.566" endtime="20210423 05:19:04.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:19:04.573" level="INFO">Running command 'ozone sh key put o3://om:9862/56877-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:22:15.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:22:15.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:19:04.571" endtime="20210423 05:22:15.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:22:15.731" level="INFO"/>
<status status="PASS" starttime="20210423 05:22:15.730" endtime="20210423 05:22:15.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:22:15.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:22:15.731" endtime="20210423 05:22:15.732"/>
</kw>
<status status="PASS" starttime="20210423 05:19:04.570" endtime="20210423 05:22:15.732"/>
</kw>
<msg timestamp="20210423 05:22:15.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:19:04.569" endtime="20210423 05:22:15.732"/>
</kw>
<status status="PASS" starttime="20210423 05:19:04.568" endtime="20210423 05:22:15.733"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:22:15.739" level="INFO">Running command 'ozone sh key getacl o3://om:9862/56877-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:22:22.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:22:22.692" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:22:15.734" endtime="20210423 05:22:22.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:22:22.693" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210423 05:22:22.692" endtime="20210423 05:22:22.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:22:22.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:22:22.693" endtime="20210423 05:22:22.694"/>
</kw>
<status status="PASS" starttime="20210423 05:22:15.734" endtime="20210423 05:22:22.694"/>
</kw>
<msg timestamp="20210423 05:22:22.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:22:15.734" endtime="20210423 05:22:22.695"/>
</kw>
<msg timestamp="20210423 05:22:22.695" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210423 05:22:15.733" endtime="20210423 05:22:22.695"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:22:22.695" endtime="20210423 05:22:22.696"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210423 05:22:22.696" endtime="20210423 05:22:22.697"/>
</kw>
<status status="PASS" starttime="20210423 05:18:27.674" endtime="20210423 05:22:22.697"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210423 05:18:27.627" endtime="20210423 05:22:22.698"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:22:22.706" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:22:22.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:22:22.709" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 05:22:22.703" endtime="20210423 05:22:22.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:22:22.710" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 05:22:22.710" endtime="20210423 05:22:22.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:22:22.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:22:22.711" endtime="20210423 05:22:22.711"/>
</kw>
<status status="PASS" starttime="20210423 05:22:22.702" endtime="20210423 05:22:22.712"/>
</kw>
<msg timestamp="20210423 05:22:22.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:22:22.702" endtime="20210423 05:22:22.712"/>
</kw>
<msg timestamp="20210423 05:22:22.712" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 05:22:22.701" endtime="20210423 05:22:22.712"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:22:22.713" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 05:22:22.713" endtime="20210423 05:22:22.713"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:22:22.728" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:22:22.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:22:22.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:22:22.715" endtime="20210423 05:22:22.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:22:22.758" level="INFO"/>
<status status="PASS" starttime="20210423 05:22:22.756" endtime="20210423 05:22:22.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:22:22.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:22:22.758" endtime="20210423 05:22:22.759"/>
</kw>
<status status="PASS" starttime="20210423 05:22:22.715" endtime="20210423 05:22:22.759"/>
</kw>
<msg timestamp="20210423 05:22:22.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:22:22.715" endtime="20210423 05:22:22.759"/>
</kw>
<status status="PASS" starttime="20210423 05:22:22.714" endtime="20210423 05:22:22.760"/>
</kw>
<status status="PASS" starttime="20210423 05:22:22.713" endtime="20210423 05:22:22.760"/>
</kw>
<status status="PASS" starttime="20210423 05:22:22.701" endtime="20210423 05:22:22.760"/>
</kw>
<status status="PASS" starttime="20210423 05:22:22.700" endtime="20210423 05:22:22.760"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:22:22.766" level="INFO">Running command 'ozone sh volume info o3:///56877-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:22:29.483" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 05:22:29.483" level="INFO">${output} = VOLUME_NOT_FOUND Volume 56877-rpcwport is not found</msg>
<status status="PASS" starttime="20210423 05:22:22.763" endtime="20210423 05:22:29.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:22:29.486" level="INFO">VOLUME_NOT_FOUND Volume 56877-rpcwport is not found</msg>
<status status="PASS" starttime="20210423 05:22:29.484" endtime="20210423 05:22:29.486"/>
</kw>
<msg timestamp="20210423 05:22:29.487" level="INFO">${result} = VOLUME_NOT_FOUND Volume 56877-rpcwport is not found</msg>
<status status="PASS" starttime="20210423 05:22:22.763" endtime="20210423 05:22:29.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:22:29.487" endtime="20210423 05:22:29.488"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:22:29.495" level="INFO">Running command 'ozone sh volume create o3:///56877-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:22:36.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:22:36.297" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:22:29.492" endtime="20210423 05:22:36.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:22:36.298" level="INFO"/>
<status status="PASS" starttime="20210423 05:22:36.298" endtime="20210423 05:22:36.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:22:36.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:22:36.299" endtime="20210423 05:22:36.299"/>
</kw>
<status status="PASS" starttime="20210423 05:22:29.490" endtime="20210423 05:22:36.300"/>
</kw>
<msg timestamp="20210423 05:22:36.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:22:29.490" endtime="20210423 05:22:36.300"/>
</kw>
<msg timestamp="20210423 05:22:36.300" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210423 05:22:29.488" endtime="20210423 05:22:36.300"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:22:36.300" endtime="20210423 05:22:36.301"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:22:36.309" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="56877-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:22:43.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:22:43.316" level="INFO">${output} = {
  "metadata": {},
  "name": "56877-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210423 05:22:36.306" endtime="20210423 05:22:43.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:22:43.318" level="INFO">{
  "metadata": {},
  "name": "56877-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-23T05:22:35.965Z",
  "modificationTime": "2021-04-23T05:22:35.965Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210423 05:22:43.316" endtime="20210423 05:22:43.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:22:43.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:22:43.318" endtime="20210423 05:22:43.320"/>
</kw>
<status status="PASS" starttime="20210423 05:22:36.305" endtime="20210423 05:22:43.320"/>
</kw>
<msg timestamp="20210423 05:22:43.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:22:36.305" endtime="20210423 05:22:43.321"/>
</kw>
<msg timestamp="20210423 05:22:43.321" level="INFO">${result} = {
  "metadata": {},
  "name": "56877-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210423 05:22:36.301" endtime="20210423 05:22:43.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:22:43.321" endtime="20210423 05:22:43.322"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:22:43.328" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="56877-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:22:50.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:22:50.430" level="INFO">${output} = {
  "metadata": {},
  "name": "56877-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210423 05:22:43.325" endtime="20210423 05:22:50.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:22:50.432" level="INFO">{
  "metadata": {},
  "name": "56877-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-23T05:22:35.965Z",
  "modificationTime": "2021-04-23T05:22:35.965Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210423 05:22:50.431" endtime="20210423 05:22:50.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:22:50.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:22:50.432" endtime="20210423 05:22:50.433"/>
</kw>
<status status="PASS" starttime="20210423 05:22:43.324" endtime="20210423 05:22:50.433"/>
</kw>
<msg timestamp="20210423 05:22:50.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:22:43.324" endtime="20210423 05:22:50.434"/>
</kw>
<msg timestamp="20210423 05:22:50.434" level="INFO">${result} = {
  "metadata": {},
  "name": "56877-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210423 05:22:43.322" endtime="20210423 05:22:50.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:22:50.435" endtime="20210423 05:22:50.435"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:22:50.441" level="INFO">Running command 'ozone sh volume setquota o3:///56877-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:22:54.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:22:54.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:22:50.438" endtime="20210423 05:22:54.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:22:54.564" level="INFO"/>
<status status="PASS" starttime="20210423 05:22:54.563" endtime="20210423 05:22:54.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:22:54.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:22:54.564" endtime="20210423 05:22:54.565"/>
</kw>
<status status="PASS" starttime="20210423 05:22:50.437" endtime="20210423 05:22:54.567"/>
</kw>
<msg timestamp="20210423 05:22:54.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:22:50.437" endtime="20210423 05:22:54.567"/>
</kw>
<status status="PASS" starttime="20210423 05:22:50.435" endtime="20210423 05:22:54.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:22:54.572" level="INFO">Running command 'ozone sh volume info o3:///56877-rpcwport | jq -r '. | select(.name=="56877-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:22:59.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:22:59.902" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:22:54.570" endtime="20210423 05:22:59.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:22:59.904" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210423 05:22:59.903" endtime="20210423 05:22:59.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:22:59.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:22:59.904" endtime="20210423 05:22:59.905"/>
</kw>
<status status="PASS" starttime="20210423 05:22:54.570" endtime="20210423 05:22:59.905"/>
</kw>
<msg timestamp="20210423 05:22:59.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:22:54.569" endtime="20210423 05:22:59.906"/>
</kw>
<msg timestamp="20210423 05:22:59.907" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:22:54.567" endtime="20210423 05:22:59.907"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:22:59.908" endtime="20210423 05:22:59.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:22:59.913" level="INFO">Running command 'ozone sh bucket create o3:///56877-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:23:06.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:23:06.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:22:59.911" endtime="20210423 05:23:06.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:23:06.233" level="INFO"/>
<status status="PASS" starttime="20210423 05:23:06.231" endtime="20210423 05:23:06.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:23:06.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:23:06.233" endtime="20210423 05:23:06.235"/>
</kw>
<status status="PASS" starttime="20210423 05:22:59.910" endtime="20210423 05:23:06.236"/>
</kw>
<msg timestamp="20210423 05:23:06.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:22:59.909" endtime="20210423 05:23:06.236"/>
</kw>
<status status="PASS" starttime="20210423 05:22:59.908" endtime="20210423 05:23:06.237"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:23:06.244" level="INFO">Running command 'ozone sh bucket info o3:///56877-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:23:13.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:23:13.259" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210423 05:23:06.242" endtime="20210423 05:23:13.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:23:13.261" level="INFO">DISK</msg>
<status status="PASS" starttime="20210423 05:23:13.260" endtime="20210423 05:23:13.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:23:13.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:23:13.261" endtime="20210423 05:23:13.262"/>
</kw>
<status status="PASS" starttime="20210423 05:23:06.242" endtime="20210423 05:23:13.263"/>
</kw>
<msg timestamp="20210423 05:23:13.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:23:06.240" endtime="20210423 05:23:13.263"/>
</kw>
<msg timestamp="20210423 05:23:13.264" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210423 05:23:06.237" endtime="20210423 05:23:13.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:23:13.264" endtime="20210423 05:23:13.266"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:23:13.270" level="INFO">Running command 'ozone sh bucket info o3:///56877-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:23:18.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:23:18.487" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:23:13.268" endtime="20210423 05:23:18.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:23:18.489" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210423 05:23:18.488" endtime="20210423 05:23:18.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:23:18.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:23:18.490" endtime="20210423 05:23:18.491"/>
</kw>
<status status="PASS" starttime="20210423 05:23:13.267" endtime="20210423 05:23:18.491"/>
</kw>
<msg timestamp="20210423 05:23:18.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:23:13.267" endtime="20210423 05:23:18.492"/>
</kw>
<msg timestamp="20210423 05:23:18.492" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:23:13.266" endtime="20210423 05:23:18.492"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:23:18.493" endtime="20210423 05:23:18.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:23:18.500" level="INFO">Running command 'ozone sh bucket info o3:///56877-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:23:25.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:23:25.189" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210423 05:23:18.498" endtime="20210423 05:23:25.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:23:25.191" level="INFO">100</msg>
<status status="PASS" starttime="20210423 05:23:25.190" endtime="20210423 05:23:25.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:23:25.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:23:25.191" endtime="20210423 05:23:25.191"/>
</kw>
<status status="PASS" starttime="20210423 05:23:18.497" endtime="20210423 05:23:25.192"/>
</kw>
<msg timestamp="20210423 05:23:25.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:23:18.495" endtime="20210423 05:23:25.192"/>
</kw>
<msg timestamp="20210423 05:23:25.192" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210423 05:23:18.494" endtime="20210423 05:23:25.192"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:23:25.192" endtime="20210423 05:23:25.193"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:23:25.199" level="INFO">Running command 'ozone sh bucket setquota o3:///56877-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:23:31.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:23:31.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:23:25.196" endtime="20210423 05:23:31.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:23:31.854" level="INFO"/>
<status status="PASS" starttime="20210423 05:23:31.853" endtime="20210423 05:23:31.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:23:31.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:23:31.854" endtime="20210423 05:23:31.855"/>
</kw>
<status status="PASS" starttime="20210423 05:23:25.195" endtime="20210423 05:23:31.855"/>
</kw>
<msg timestamp="20210423 05:23:31.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:23:25.195" endtime="20210423 05:23:31.855"/>
</kw>
<status status="PASS" starttime="20210423 05:23:25.193" endtime="20210423 05:23:31.856"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:23:31.861" level="INFO">Running command 'ozone sh bucket info o3:///56877-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:23:39.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:23:39.006" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210423 05:23:31.858" endtime="20210423 05:23:39.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:23:39.007" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210423 05:23:39.007" endtime="20210423 05:23:39.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:23:39.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:23:39.007" endtime="20210423 05:23:39.008"/>
</kw>
<status status="PASS" starttime="20210423 05:23:31.857" endtime="20210423 05:23:39.008"/>
</kw>
<msg timestamp="20210423 05:23:39.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:23:31.857" endtime="20210423 05:23:39.013"/>
</kw>
<msg timestamp="20210423 05:23:39.013" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210423 05:23:31.856" endtime="20210423 05:23:39.013"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:23:39.013" endtime="20210423 05:23:39.014"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:23:39.023" level="INFO">Running command 'ozone sh bucket info o3:///56877-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:23:46.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:23:46.034" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210423 05:23:39.016" endtime="20210423 05:23:46.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:23:46.036" level="INFO">1000</msg>
<status status="PASS" starttime="20210423 05:23:46.035" endtime="20210423 05:23:46.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:23:46.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:23:46.037" endtime="20210423 05:23:46.038"/>
</kw>
<status status="PASS" starttime="20210423 05:23:39.016" endtime="20210423 05:23:46.039"/>
</kw>
<msg timestamp="20210423 05:23:46.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:23:39.015" endtime="20210423 05:23:46.039"/>
</kw>
<msg timestamp="20210423 05:23:46.039" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210423 05:23:39.014" endtime="20210423 05:23:46.039"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:23:46.040" endtime="20210423 05:23:46.040"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:23:46.046" level="INFO">Running command 'ozone sh bucket list o3:///56877-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:23:52.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:23:52.424" level="INFO">${output} = 56877-rpcwport</msg>
<status status="PASS" starttime="20210423 05:23:46.043" endtime="20210423 05:23:52.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:23:52.425" level="INFO">56877-rpcwport</msg>
<status status="PASS" starttime="20210423 05:23:52.425" endtime="20210423 05:23:52.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:23:52.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:23:52.426" endtime="20210423 05:23:52.426"/>
</kw>
<status status="PASS" starttime="20210423 05:23:46.042" endtime="20210423 05:23:52.427"/>
</kw>
<msg timestamp="20210423 05:23:52.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:23:46.042" endtime="20210423 05:23:52.427"/>
</kw>
<msg timestamp="20210423 05:23:52.427" level="INFO">${result} = 56877-rpcwport</msg>
<status status="PASS" starttime="20210423 05:23:46.040" endtime="20210423 05:23:52.427"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:23:52.427" endtime="20210423 05:23:52.428"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:23:52.435" level="INFO">Running command 'ozone sh key put o3:///56877-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:00.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:27:00.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:23:52.431" endtime="20210423 05:27:00.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:00.035" level="INFO"/>
<status status="PASS" starttime="20210423 05:27:00.034" endtime="20210423 05:27:00.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:27:00.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:27:00.036" endtime="20210423 05:27:00.036"/>
</kw>
<status status="PASS" starttime="20210423 05:23:52.430" endtime="20210423 05:27:00.037"/>
</kw>
<msg timestamp="20210423 05:27:00.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:23:52.430" endtime="20210423 05:27:00.037"/>
</kw>
<status status="PASS" starttime="20210423 05:23:52.429" endtime="20210423 05:27:00.038"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:00.044" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:00.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:27:00.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:27:00.041" endtime="20210423 05:27:00.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:00.050" level="INFO"/>
<status status="PASS" starttime="20210423 05:27:00.049" endtime="20210423 05:27:00.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:27:00.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:27:00.050" endtime="20210423 05:27:00.051"/>
</kw>
<status status="PASS" starttime="20210423 05:27:00.039" endtime="20210423 05:27:00.052"/>
</kw>
<msg timestamp="20210423 05:27:00.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:27:00.039" endtime="20210423 05:27:00.052"/>
</kw>
<status status="PASS" starttime="20210423 05:27:00.038" endtime="20210423 05:27:00.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:00.056" level="INFO">Running command 'ozone sh key get o3:///56877-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:10.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:27:10.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:27:00.054" endtime="20210423 05:27:10.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:10.388" level="INFO"/>
<status status="PASS" starttime="20210423 05:27:10.387" endtime="20210423 05:27:10.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:27:10.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:27:10.389" endtime="20210423 05:27:10.390"/>
</kw>
<status status="PASS" starttime="20210423 05:27:00.054" endtime="20210423 05:27:10.391"/>
</kw>
<msg timestamp="20210423 05:27:10.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:27:00.053" endtime="20210423 05:27:10.391"/>
</kw>
<status status="PASS" starttime="20210423 05:27:00.052" endtime="20210423 05:27:10.392"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:10.397" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:10.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:27:10.401" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:27:10.395" endtime="20210423 05:27:10.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:10.403" level="INFO"/>
<status status="PASS" starttime="20210423 05:27:10.402" endtime="20210423 05:27:10.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:27:10.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:27:10.403" endtime="20210423 05:27:10.404"/>
</kw>
<status status="PASS" starttime="20210423 05:27:10.394" endtime="20210423 05:27:10.405"/>
</kw>
<msg timestamp="20210423 05:27:10.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:27:10.393" endtime="20210423 05:27:10.405"/>
</kw>
<status status="PASS" starttime="20210423 05:27:10.392" endtime="20210423 05:27:10.406"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:10.412" level="INFO">Running command 'ozone sh key put -t RATIS o3:///56877-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:22.700" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210423 05:27:10.410" endtime="20210423 05:27:22.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.701" endtime="20210423 05:27:22.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.701" endtime="20210423 05:27:22.701"/>
</kw>
<status status="FAIL" starttime="20210423 05:27:10.408" endtime="20210423 05:27:22.702"/>
</kw>
<msg timestamp="20210423 05:27:22.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210423 05:27:10.407" endtime="20210423 05:27:22.702"/>
</kw>
<status status="FAIL" starttime="20210423 05:27:10.406" endtime="20210423 05:27:22.702"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.703" endtime="20210423 05:27:22.703"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.703" endtime="20210423 05:27:22.703"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.703" endtime="20210423 05:27:22.703"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.703" endtime="20210423 05:27:22.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.704" endtime="20210423 05:27:22.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.704" endtime="20210423 05:27:22.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.704" endtime="20210423 05:27:22.704"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.704" endtime="20210423 05:27:22.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.704" endtime="20210423 05:27:22.704"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.705" endtime="20210423 05:27:22.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.705" endtime="20210423 05:27:22.705"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.705" endtime="20210423 05:27:22.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.705" endtime="20210423 05:27:22.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.706" endtime="20210423 05:27:22.706"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.706" endtime="20210423 05:27:22.706"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.706" endtime="20210423 05:27:22.706"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.706" endtime="20210423 05:27:22.706"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.706" endtime="20210423 05:27:22.707"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.707" endtime="20210423 05:27:22.707"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.707" endtime="20210423 05:27:22.707"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.707" endtime="20210423 05:27:22.707"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.707" endtime="20210423 05:27:22.707"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.708" endtime="20210423 05:27:22.708"/>
</kw>
<status status="FAIL" starttime="20210423 05:23:52.429" endtime="20210423 05:27:22.708"/>
</kw>
<status status="FAIL" starttime="20210423 05:23:52.428" endtime="20210423 05:27:22.708"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.708" endtime="20210423 05:27:22.708"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.708" endtime="20210423 05:27:22.708"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.709" endtime="20210423 05:27:22.709"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.709" endtime="20210423 05:27:22.709"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.709" endtime="20210423 05:27:22.709"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.709" endtime="20210423 05:27:22.709"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.710" endtime="20210423 05:27:22.710"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.710" endtime="20210423 05:27:22.710"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.710" endtime="20210423 05:27:22.710"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.713" endtime="20210423 05:27:22.713"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.713" endtime="20210423 05:27:22.713"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.713" endtime="20210423 05:27:22.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.714" endtime="20210423 05:27:22.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.714" endtime="20210423 05:27:22.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.714" endtime="20210423 05:27:22.714"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.714" endtime="20210423 05:27:22.714"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.715" endtime="20210423 05:27:22.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.715" endtime="20210423 05:27:22.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.715" endtime="20210423 05:27:22.715"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.715" endtime="20210423 05:27:22.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.716" endtime="20210423 05:27:22.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.716" endtime="20210423 05:27:22.716"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.716" endtime="20210423 05:27:22.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:27:22.716" endtime="20210423 05:27:22.717"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.717" endtime="20210423 05:27:22.717"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:27:22.717" endtime="20210423 05:27:22.717"/>
</kw>
<status status="FAIL" starttime="20210423 05:22:22.761" endtime="20210423 05:27:22.718"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210423 05:22:22.699" endtime="20210423 05:27:22.718">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:22.729" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:22.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:27:22.732" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 05:27:22.726" endtime="20210423 05:27:22.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:22.734" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 05:27:22.733" endtime="20210423 05:27:22.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:27:22.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:27:22.734" endtime="20210423 05:27:22.735"/>
</kw>
<status status="PASS" starttime="20210423 05:27:22.725" endtime="20210423 05:27:22.736"/>
</kw>
<msg timestamp="20210423 05:27:22.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:27:22.725" endtime="20210423 05:27:22.736"/>
</kw>
<msg timestamp="20210423 05:27:22.736" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 05:27:22.724" endtime="20210423 05:27:22.736"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 05:27:22.737" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 05:27:22.737" endtime="20210423 05:27:22.737"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:22.743" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:22.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:27:22.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:27:22.740" endtime="20210423 05:27:22.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:22.793" level="INFO"/>
<status status="PASS" starttime="20210423 05:27:22.792" endtime="20210423 05:27:22.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:27:22.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:27:22.793" endtime="20210423 05:27:22.794"/>
</kw>
<status status="PASS" starttime="20210423 05:27:22.739" endtime="20210423 05:27:22.794"/>
</kw>
<msg timestamp="20210423 05:27:22.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:27:22.739" endtime="20210423 05:27:22.795"/>
</kw>
<status status="PASS" starttime="20210423 05:27:22.738" endtime="20210423 05:27:22.795"/>
</kw>
<status status="PASS" starttime="20210423 05:27:22.738" endtime="20210423 05:27:22.795"/>
</kw>
<status status="PASS" starttime="20210423 05:27:22.723" endtime="20210423 05:27:22.795"/>
</kw>
<status status="PASS" starttime="20210423 05:27:22.722" endtime="20210423 05:27:22.795"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:22.802" level="INFO">Running command 'ozone sh volume info /56877-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:29.376" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 05:27:29.376" level="INFO">${output} = VOLUME_NOT_FOUND Volume 56877-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210423 05:27:22.798" endtime="20210423 05:27:29.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:29.378" level="INFO">VOLUME_NOT_FOUND Volume 56877-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210423 05:27:29.377" endtime="20210423 05:27:29.378"/>
</kw>
<msg timestamp="20210423 05:27:29.379" level="INFO">${result} = VOLUME_NOT_FOUND Volume 56877-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210423 05:27:22.797" endtime="20210423 05:27:29.379"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:27:29.379" endtime="20210423 05:27:29.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:29.385" level="INFO">Running command 'ozone sh volume create /56877-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:35.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:27:35.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:27:29.382" endtime="20210423 05:27:35.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:35.938" level="INFO"/>
<status status="PASS" starttime="20210423 05:27:35.936" endtime="20210423 05:27:35.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:27:35.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:27:35.939" endtime="20210423 05:27:35.940"/>
</kw>
<status status="PASS" starttime="20210423 05:27:29.382" endtime="20210423 05:27:35.941"/>
</kw>
<msg timestamp="20210423 05:27:35.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:27:29.381" endtime="20210423 05:27:35.941"/>
</kw>
<msg timestamp="20210423 05:27:35.943" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210423 05:27:29.380" endtime="20210423 05:27:35.943"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:27:35.943" endtime="20210423 05:27:35.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:35.950" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="56877-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:42.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:27:42.609" level="INFO">${output} = {
  "metadata": {},
  "name": "56877-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210423 05:27:35.947" endtime="20210423 05:27:42.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:42.611" level="INFO">{
  "metadata": {},
  "name": "56877-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-23T05:27:35.861Z",
  "modificationTime": "2021-04-23T05:27:35.861Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210423 05:27:42.610" endtime="20210423 05:27:42.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:27:42.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:27:42.611" endtime="20210423 05:27:42.612"/>
</kw>
<status status="PASS" starttime="20210423 05:27:35.946" endtime="20210423 05:27:42.613"/>
</kw>
<msg timestamp="20210423 05:27:42.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:27:35.946" endtime="20210423 05:27:42.614"/>
</kw>
<msg timestamp="20210423 05:27:42.614" level="INFO">${result} = {
  "metadata": {},
  "name": "56877-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210423 05:27:35.945" endtime="20210423 05:27:42.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:27:42.615" endtime="20210423 05:27:42.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:42.623" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="56877-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:48.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:27:48.912" level="INFO">${output} = {
  "metadata": {},
  "name": "56877-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210423 05:27:42.620" endtime="20210423 05:27:48.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:48.913" level="INFO">{
  "metadata": {},
  "name": "56877-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-23T05:27:35.861Z",
  "modificationTime": "2021-04-23T05:27:35.861Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210423 05:27:48.912" endtime="20210423 05:27:48.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:27:48.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:27:48.914" endtime="20210423 05:27:48.914"/>
</kw>
<status status="PASS" starttime="20210423 05:27:42.618" endtime="20210423 05:27:48.914"/>
</kw>
<msg timestamp="20210423 05:27:48.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:27:42.618" endtime="20210423 05:27:48.915"/>
</kw>
<msg timestamp="20210423 05:27:48.915" level="INFO">${result} = {
  "metadata": {},
  "name": "56877-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210423 05:27:42.616" endtime="20210423 05:27:48.915"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 05:27:48.915" endtime="20210423 05:27:48.916"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:48.921" level="INFO">Running command 'ozone sh volume setquota /56877-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:27:55.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:27:55.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:27:48.918" endtime="20210423 05:27:55.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:27:55.652" level="INFO"/>
<status status="PASS" starttime="20210423 05:27:55.651" endtime="20210423 05:27:55.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:27:55.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:27:55.652" endtime="20210423 05:27:55.653"/>
</kw>
<status status="PASS" starttime="20210423 05:27:48.917" endtime="20210423 05:27:55.654"/>
</kw>
<msg timestamp="20210423 05:27:55.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:27:48.917" endtime="20210423 05:27:55.654"/>
</kw>
<status status="PASS" starttime="20210423 05:27:48.916" endtime="20210423 05:27:55.654"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:27:55.660" level="INFO">Running command 'ozone sh volume info /56877-rpcwoscheme | jq -r '. | select(.name=="56877-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:28:02.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:28:02.919" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:27:55.658" endtime="20210423 05:28:02.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:28:02.921" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210423 05:28:02.920" endtime="20210423 05:28:02.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:28:02.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:28:02.921" endtime="20210423 05:28:02.922"/>
</kw>
<status status="PASS" starttime="20210423 05:27:55.656" endtime="20210423 05:28:02.922"/>
</kw>
<msg timestamp="20210423 05:28:02.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:27:55.656" endtime="20210423 05:28:02.922"/>
</kw>
<msg timestamp="20210423 05:28:02.923" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:27:55.654" endtime="20210423 05:28:02.923"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:28:02.923" endtime="20210423 05:28:02.924"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:28:02.928" level="INFO">Running command 'ozone sh bucket create /56877-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:28:09.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:28:09.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:28:02.925" endtime="20210423 05:28:09.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:28:09.569" level="INFO"/>
<status status="PASS" starttime="20210423 05:28:09.568" endtime="20210423 05:28:09.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:28:09.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:28:09.570" endtime="20210423 05:28:09.571"/>
</kw>
<status status="PASS" starttime="20210423 05:28:02.925" endtime="20210423 05:28:09.571"/>
</kw>
<msg timestamp="20210423 05:28:09.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:28:02.925" endtime="20210423 05:28:09.572"/>
</kw>
<status status="PASS" starttime="20210423 05:28:02.924" endtime="20210423 05:28:09.572"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:28:09.580" level="INFO">Running command 'ozone sh bucket info /56877-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:28:17.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:28:17.719" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210423 05:28:09.577" endtime="20210423 05:28:17.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:28:17.720" level="INFO">DISK</msg>
<status status="PASS" starttime="20210423 05:28:17.720" endtime="20210423 05:28:17.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:28:17.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:28:17.721" endtime="20210423 05:28:17.722"/>
</kw>
<status status="PASS" starttime="20210423 05:28:09.576" endtime="20210423 05:28:17.722"/>
</kw>
<msg timestamp="20210423 05:28:17.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:28:09.575" endtime="20210423 05:28:17.723"/>
</kw>
<msg timestamp="20210423 05:28:17.723" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210423 05:28:09.572" endtime="20210423 05:28:17.723"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:28:17.723" endtime="20210423 05:28:17.724"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:28:17.730" level="INFO">Running command 'ozone sh bucket info /56877-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:28:24.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:28:24.281" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:28:17.727" endtime="20210423 05:28:24.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:28:24.283" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210423 05:28:24.282" endtime="20210423 05:28:24.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:28:24.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:28:24.283" endtime="20210423 05:28:24.284"/>
</kw>
<status status="PASS" starttime="20210423 05:28:17.726" endtime="20210423 05:28:24.284"/>
</kw>
<msg timestamp="20210423 05:28:24.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:28:17.726" endtime="20210423 05:28:24.285"/>
</kw>
<msg timestamp="20210423 05:28:24.285" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210423 05:28:17.724" endtime="20210423 05:28:24.285"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:28:24.286" endtime="20210423 05:28:24.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:28:24.291" level="INFO">Running command 'ozone sh bucket info /56877-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:28:31.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:28:31.211" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210423 05:28:24.289" endtime="20210423 05:28:31.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:28:31.213" level="INFO">100</msg>
<status status="PASS" starttime="20210423 05:28:31.212" endtime="20210423 05:28:31.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:28:31.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:28:31.213" endtime="20210423 05:28:31.213"/>
</kw>
<status status="PASS" starttime="20210423 05:28:24.288" endtime="20210423 05:28:31.214"/>
</kw>
<msg timestamp="20210423 05:28:31.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:28:24.288" endtime="20210423 05:28:31.214"/>
</kw>
<msg timestamp="20210423 05:28:31.214" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210423 05:28:24.286" endtime="20210423 05:28:31.214"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:28:31.215" endtime="20210423 05:28:31.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:28:31.221" level="INFO">Running command 'ozone sh bucket setquota /56877-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:28:37.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:28:37.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:28:31.218" endtime="20210423 05:28:37.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:28:37.908" level="INFO"/>
<status status="PASS" starttime="20210423 05:28:37.907" endtime="20210423 05:28:37.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:28:37.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:28:37.908" endtime="20210423 05:28:37.909"/>
</kw>
<status status="PASS" starttime="20210423 05:28:31.217" endtime="20210423 05:28:37.909"/>
</kw>
<msg timestamp="20210423 05:28:37.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:28:31.217" endtime="20210423 05:28:37.909"/>
</kw>
<status status="PASS" starttime="20210423 05:28:31.215" endtime="20210423 05:28:37.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:28:37.914" level="INFO">Running command 'ozone sh bucket info /56877-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:28:43.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:28:43.970" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210423 05:28:37.912" endtime="20210423 05:28:43.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:28:43.971" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210423 05:28:43.970" endtime="20210423 05:28:43.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:28:43.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:28:43.972" endtime="20210423 05:28:43.972"/>
</kw>
<status status="PASS" starttime="20210423 05:28:37.911" endtime="20210423 05:28:43.973"/>
</kw>
<msg timestamp="20210423 05:28:43.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:28:37.911" endtime="20210423 05:28:43.973"/>
</kw>
<msg timestamp="20210423 05:28:43.973" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210423 05:28:37.910" endtime="20210423 05:28:43.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:28:43.973" endtime="20210423 05:28:43.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:28:43.979" level="INFO">Running command 'ozone sh bucket info /56877-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:28:49.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:28:49.366" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210423 05:28:43.976" endtime="20210423 05:28:49.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:28:49.367" level="INFO">1000</msg>
<status status="PASS" starttime="20210423 05:28:49.366" endtime="20210423 05:28:49.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:28:49.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:28:49.367" endtime="20210423 05:28:49.368"/>
</kw>
<status status="PASS" starttime="20210423 05:28:43.975" endtime="20210423 05:28:49.368"/>
</kw>
<msg timestamp="20210423 05:28:49.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:28:43.975" endtime="20210423 05:28:49.369"/>
</kw>
<msg timestamp="20210423 05:28:49.370" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210423 05:28:43.974" endtime="20210423 05:28:49.370"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:28:49.370" endtime="20210423 05:28:49.371"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:28:49.378" level="INFO">Running command 'ozone sh bucket list /56877-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:28:56.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:28:56.352" level="INFO">${output} = 56877-rpcwoscheme</msg>
<status status="PASS" starttime="20210423 05:28:49.376" endtime="20210423 05:28:56.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:28:56.353" level="INFO">56877-rpcwoscheme</msg>
<status status="PASS" starttime="20210423 05:28:56.353" endtime="20210423 05:28:56.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:28:56.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:28:56.354" endtime="20210423 05:28:56.354"/>
</kw>
<status status="PASS" starttime="20210423 05:28:49.374" endtime="20210423 05:28:56.355"/>
</kw>
<msg timestamp="20210423 05:28:56.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:28:49.373" endtime="20210423 05:28:56.355"/>
</kw>
<msg timestamp="20210423 05:28:56.355" level="INFO">${result} = 56877-rpcwoscheme</msg>
<status status="PASS" starttime="20210423 05:28:49.371" endtime="20210423 05:28:56.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210423 05:28:56.355" endtime="20210423 05:28:56.356"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:28:56.361" level="INFO">Running command 'ozone sh key put /56877-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:32:06.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:32:06.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:28:56.358" endtime="20210423 05:32:06.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:32:06.769" level="INFO"/>
<status status="PASS" starttime="20210423 05:32:06.767" endtime="20210423 05:32:06.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:32:06.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:32:06.769" endtime="20210423 05:32:06.771"/>
</kw>
<status status="PASS" starttime="20210423 05:28:56.358" endtime="20210423 05:32:06.771"/>
</kw>
<msg timestamp="20210423 05:32:06.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:28:56.357" endtime="20210423 05:32:06.772"/>
</kw>
<status status="PASS" starttime="20210423 05:28:56.357" endtime="20210423 05:32:06.772"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:32:06.779" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:32:06.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:32:06.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:32:06.775" endtime="20210423 05:32:06.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:32:06.781" level="INFO"/>
<status status="PASS" starttime="20210423 05:32:06.780" endtime="20210423 05:32:06.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:32:06.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:32:06.782" endtime="20210423 05:32:06.782"/>
</kw>
<status status="PASS" starttime="20210423 05:32:06.774" endtime="20210423 05:32:06.782"/>
</kw>
<msg timestamp="20210423 05:32:06.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:32:06.774" endtime="20210423 05:32:06.784"/>
</kw>
<status status="PASS" starttime="20210423 05:32:06.773" endtime="20210423 05:32:06.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:32:06.789" level="INFO">Running command 'ozone sh key get /56877-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:32:17.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:32:17.628" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:32:06.787" endtime="20210423 05:32:17.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:32:17.629" level="INFO"/>
<status status="PASS" starttime="20210423 05:32:17.628" endtime="20210423 05:32:17.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:32:17.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:32:17.630" endtime="20210423 05:32:17.630"/>
</kw>
<status status="PASS" starttime="20210423 05:32:06.786" endtime="20210423 05:32:17.631"/>
</kw>
<msg timestamp="20210423 05:32:17.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:32:06.786" endtime="20210423 05:32:17.631"/>
</kw>
<status status="PASS" starttime="20210423 05:32:06.785" endtime="20210423 05:32:17.631"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:32:17.637" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:32:17.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 05:32:17.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 05:32:17.634" endtime="20210423 05:32:17.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 05:32:17.643" level="INFO"/>
<status status="PASS" starttime="20210423 05:32:17.642" endtime="20210423 05:32:17.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 05:32:17.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 05:32:17.644" endtime="20210423 05:32:17.645"/>
</kw>
<status status="PASS" starttime="20210423 05:32:17.633" endtime="20210423 05:32:17.646"/>
</kw>
<msg timestamp="20210423 05:32:17.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 05:32:17.632" endtime="20210423 05:32:17.646"/>
</kw>
<status status="PASS" starttime="20210423 05:32:17.631" endtime="20210423 05:32:17.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 05:32:17.652" level="INFO">Running command 'ozone sh key put -t RATIS /56877-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 05:32:22.724" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210423 05:32:17.649" endtime="20210423 05:32:22.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.726" endtime="20210423 05:32:22.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.727" endtime="20210423 05:32:22.727"/>
</kw>
<status status="FAIL" starttime="20210423 05:32:17.648" endtime="20210423 05:32:22.728"/>
</kw>
<msg timestamp="20210423 05:32:22.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210423 05:32:17.647" endtime="20210423 05:32:22.728"/>
</kw>
<status status="FAIL" starttime="20210423 05:32:17.647" endtime="20210423 05:32:22.729"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.729" endtime="20210423 05:32:22.737"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.737" endtime="20210423 05:32:22.738"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.739" endtime="20210423 05:32:22.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.739" endtime="20210423 05:32:22.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.741" endtime="20210423 05:32:22.742"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.743" endtime="20210423 05:32:22.743"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.745" endtime="20210423 05:32:22.745"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.745" endtime="20210423 05:32:22.747"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.747" endtime="20210423 05:32:22.747"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.748" endtime="20210423 05:32:22.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.750" endtime="20210423 05:32:22.750"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.750" endtime="20210423 05:32:22.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.752" endtime="20210423 05:32:22.753"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.754" endtime="20210423 05:32:22.754"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.755" endtime="20210423 05:32:22.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.756" endtime="20210423 05:32:22.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.758" endtime="20210423 05:32:22.759"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.759" endtime="20210423 05:32:22.759"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.759" endtime="20210423 05:32:22.759"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.761" endtime="20210423 05:32:22.761"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.761" endtime="20210423 05:32:22.762"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.763" endtime="20210423 05:32:22.789"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.791" endtime="20210423 05:32:22.791"/>
</kw>
<status status="FAIL" starttime="20210423 05:28:56.356" endtime="20210423 05:32:22.792"/>
</kw>
<status status="FAIL" starttime="20210423 05:28:56.356" endtime="20210423 05:32:22.793"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.793" endtime="20210423 05:32:22.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.794" endtime="20210423 05:32:22.794"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.795" endtime="20210423 05:32:22.795"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.795" endtime="20210423 05:32:22.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.796" endtime="20210423 05:32:22.796"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.797" endtime="20210423 05:32:22.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.797" endtime="20210423 05:32:22.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.798" endtime="20210423 05:32:22.798"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.798" endtime="20210423 05:32:22.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.798" endtime="20210423 05:32:22.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.798" endtime="20210423 05:32:22.798"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.798" endtime="20210423 05:32:22.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.799" endtime="20210423 05:32:22.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.799" endtime="20210423 05:32:22.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.799" endtime="20210423 05:32:22.799"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.799" endtime="20210423 05:32:22.799"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.799" endtime="20210423 05:32:22.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.800" endtime="20210423 05:32:22.800"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.800" endtime="20210423 05:32:22.800"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.800" endtime="20210423 05:32:22.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.800" endtime="20210423 05:32:22.801"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.801" endtime="20210423 05:32:22.801"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.801" endtime="20210423 05:32:22.802"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210423 05:32:22.802" endtime="20210423 05:32:22.802"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.802" endtime="20210423 05:32:22.803"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210423 05:32:22.803" endtime="20210423 05:32:22.803"/>
</kw>
<status status="FAIL" starttime="20210423 05:27:22.795" endtime="20210423 05:32:22.803"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210423 05:27:22.720" endtime="20210423 05:32:22.804">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210423 05:07:56.031" endtime="20210423 05:32:22.806"/>
</suite>
<status status="FAIL" starttime="20210423 04:44:15.500" endtime="20210423 05:32:22.817"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:44:10.484" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:44:10.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:44:10.487" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210423 04:44:10.480" endtime="20210423 04:44:10.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:44:10.488" level="INFO">scm</msg>
<status status="PASS" starttime="20210423 04:44:10.488" endtime="20210423 04:44:10.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:44:10.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:44:10.488" endtime="20210423 04:44:10.489"/>
</kw>
<status status="PASS" starttime="20210423 04:44:10.479" endtime="20210423 04:44:10.489"/>
</kw>
<msg timestamp="20210423 04:44:10.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:44:10.479" endtime="20210423 04:44:10.490"/>
</kw>
<msg timestamp="20210423 04:44:10.491" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210423 04:44:10.479" endtime="20210423 04:44:10.491"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 04:44:10.492" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 04:44:10.491" endtime="20210423 04:44:10.492"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 04:44:10.496" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 04:44:10.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 04:44:10.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 04:44:10.494" endtime="20210423 04:44:10.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 04:44:10.504" level="INFO"/>
<status status="PASS" starttime="20210423 04:44:10.504" endtime="20210423 04:44:10.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 04:44:10.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 04:44:10.504" endtime="20210423 04:44:10.505"/>
</kw>
<status status="PASS" starttime="20210423 04:44:10.493" endtime="20210423 04:44:10.505"/>
</kw>
<msg timestamp="20210423 04:44:10.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 04:44:10.493" endtime="20210423 04:44:10.506"/>
</kw>
<status status="PASS" starttime="20210423 04:44:10.492" endtime="20210423 04:44:10.506"/>
</kw>
<status status="PASS" starttime="20210423 04:44:10.492" endtime="20210423 04:44:10.506"/>
</kw>
<status status="PASS" starttime="20210423 04:44:10.478" endtime="20210423 04:44:10.506"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 04:44:10.477" endtime="20210423 04:44:10.506"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210423 04:44:10.421" endtime="20210423 04:44:10.507"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2887403"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
