<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.1 (Python 3.6.9 on linux)" generated="20210423 02:02:55.157" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 01:59:39.620" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 01:59:43.967" level="INFO">${rc} = 255</msg>
<msg timestamp="20210423 01:59:43.967" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210423 01:59:39.616" endtime="20210423 01:59:43.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 01:59:43.968" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210423 01:59:43.967" endtime="20210423 01:59:43.968"/>
</kw>
<msg timestamp="20210423 01:59:43.968" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210423 01:59:39.615" endtime="20210423 01:59:43.969"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 01:59:43.974" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 01:59:47.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 01:59:47.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 01:59:43.971" endtime="20210423 01:59:47.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 01:59:47.578" level="INFO"/>
<status status="PASS" starttime="20210423 01:59:47.577" endtime="20210423 01:59:47.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 01:59:47.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 01:59:47.578" endtime="20210423 01:59:47.579"/>
</kw>
<status status="PASS" starttime="20210423 01:59:43.971" endtime="20210423 01:59:47.579"/>
</kw>
<msg timestamp="20210423 01:59:47.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 01:59:43.971" endtime="20210423 01:59:47.579"/>
</kw>
<msg timestamp="20210423 01:59:47.580" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210423 01:59:43.970" endtime="20210423 01:59:47.580"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 01:59:47.580" endtime="20210423 01:59:47.580"/>
</kw>
<status status="PASS" starttime="20210423 01:59:43.969" endtime="20210423 01:59:47.580"/>
</kw>
<status status="PASS" starttime="20210423 01:59:43.969" endtime="20210423 01:59:47.580"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 01:59:47.585" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 01:59:51.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 01:59:51.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 01:59:47.583" endtime="20210423 01:59:51.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 01:59:51.060" level="INFO"/>
<status status="PASS" starttime="20210423 01:59:51.059" endtime="20210423 01:59:51.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 01:59:51.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 01:59:51.060" endtime="20210423 01:59:51.061"/>
</kw>
<status status="PASS" starttime="20210423 01:59:47.582" endtime="20210423 01:59:51.061"/>
</kw>
<msg timestamp="20210423 01:59:51.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 01:59:47.582" endtime="20210423 01:59:51.061"/>
</kw>
<status status="PASS" starttime="20210423 01:59:47.581" endtime="20210423 01:59:51.062"/>
</kw>
<status status="PASS" starttime="20210423 01:59:47.581" endtime="20210423 01:59:51.062"/>
</kw>
<status status="PASS" starttime="20210423 01:59:47.581" endtime="20210423 01:59:51.062"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210423 01:59:51.062" endtime="20210423 01:59:51.063"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 01:59:51.066" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 01:59:54.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 01:59:54.750" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T01:59...</msg>
<status status="PASS" starttime="20210423 01:59:51.064" endtime="20210423 01:59:54.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 01:59:54.751" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T01:59:50.909Z",
  "modificationTime" : "2021-04-23T01:59:50.909Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210423 01:59:54.751" endtime="20210423 01:59:54.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 01:59:54.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 01:59:54.752" endtime="20210423 01:59:54.753"/>
</kw>
<status status="PASS" starttime="20210423 01:59:51.064" endtime="20210423 01:59:54.753"/>
</kw>
<msg timestamp="20210423 01:59:54.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 01:59:51.063" endtime="20210423 01:59:54.753"/>
</kw>
<msg timestamp="20210423 01:59:54.753" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-23T01:59...</msg>
<status status="PASS" starttime="20210423 01:59:51.063" endtime="20210423 01:59:54.753"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210423 01:59:54.754" endtime="20210423 01:59:54.754"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210423 01:59:54.759" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210423 01:59:54.758" endtime="20210423 01:59:54.759"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210423 01:59:54.759" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210423 01:59:54.759" endtime="20210423 01:59:54.759"/>
</kw>
<status status="PASS" starttime="20210423 01:59:54.757" endtime="20210423 01:59:54.760"/>
</kw>
<msg timestamp="20210423 01:59:54.760" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210423 01:59:54.756" endtime="20210423 01:59:54.760"/>
</kw>
<status status="PASS" starttime="20210423 01:59:54.756" endtime="20210423 01:59:54.760"/>
</kw>
<msg timestamp="20210423 01:59:54.760" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210423 01:59:54.755" endtime="20210423 01:59:54.760"/>
</kw>
<msg timestamp="20210423 01:59:54.761" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210423 01:59:54.754" endtime="20210423 01:59:54.761"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 01:59:54.764" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 01:59:58.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 01:59:58.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 01:59:54.762" endtime="20210423 01:59:58.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 01:59:58.547" level="INFO"/>
<status status="PASS" starttime="20210423 01:59:58.546" endtime="20210423 01:59:58.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 01:59:58.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 01:59:58.547" endtime="20210423 01:59:58.548"/>
</kw>
<status status="PASS" starttime="20210423 01:59:54.761" endtime="20210423 01:59:58.548"/>
</kw>
<msg timestamp="20210423 01:59:58.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 01:59:54.761" endtime="20210423 01:59:58.548"/>
</kw>
<status status="PASS" starttime="20210423 01:59:54.761" endtime="20210423 01:59:58.548"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 01:59:58.552" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 02:00:06.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 02:00:06.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 01:59:58.550" endtime="20210423 02:00:06.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 02:00:06.943" level="INFO"/>
<status status="PASS" starttime="20210423 02:00:06.942" endtime="20210423 02:00:06.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 02:00:06.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 02:00:06.943" endtime="20210423 02:00:06.944"/>
</kw>
<status status="PASS" starttime="20210423 01:59:58.549" endtime="20210423 02:00:06.944"/>
</kw>
<msg timestamp="20210423 02:00:06.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 01:59:58.549" endtime="20210423 02:00:06.944"/>
</kw>
<status status="PASS" starttime="20210423 01:59:58.548" endtime="20210423 02:00:06.945"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 02:00:06.948" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 02:00:12.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 02:00:12.663" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 02:00:06.946" endtime="20210423 02:00:12.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 02:00:12.664" level="INFO"/>
<status status="PASS" starttime="20210423 02:00:12.663" endtime="20210423 02:00:12.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 02:00:12.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 02:00:12.664" endtime="20210423 02:00:12.665"/>
</kw>
<status status="PASS" starttime="20210423 02:00:06.946" endtime="20210423 02:00:12.665"/>
</kw>
<msg timestamp="20210423 02:00:12.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 02:00:06.945" endtime="20210423 02:00:12.666"/>
</kw>
<status status="PASS" starttime="20210423 02:00:06.945" endtime="20210423 02:00:12.666"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 02:00:12.669" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 02:00:18.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 02:00:18.324" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 02:00:12.667" endtime="20210423 02:00:18.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 02:00:18.325" level="INFO"/>
<status status="PASS" starttime="20210423 02:00:18.325" endtime="20210423 02:00:18.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 02:00:18.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 02:00:18.326" endtime="20210423 02:00:18.326"/>
</kw>
<status status="PASS" starttime="20210423 02:00:12.667" endtime="20210423 02:00:18.327"/>
</kw>
<msg timestamp="20210423 02:00:18.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 02:00:12.667" endtime="20210423 02:00:18.327"/>
</kw>
<status status="PASS" starttime="20210423 02:00:12.666" endtime="20210423 02:00:18.327"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 01:59:39.614" endtime="20210423 02:00:18.327"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210423 02:00:18.333" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210423 02:00:18.332" endtime="20210423 02:00:18.333"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210423 02:00:18.334" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210423 02:00:18.334" endtime="20210423 02:00:18.334"/>
</kw>
<status status="PASS" starttime="20210423 02:00:18.332" endtime="20210423 02:00:18.335"/>
</kw>
<msg timestamp="20210423 02:00:18.335" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210423 02:00:18.331" endtime="20210423 02:00:18.335"/>
</kw>
<status status="PASS" starttime="20210423 02:00:18.330" endtime="20210423 02:00:18.335"/>
</kw>
<msg timestamp="20210423 02:00:18.335" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210423 02:00:18.329" endtime="20210423 02:00:18.335"/>
</kw>
<msg timestamp="20210423 02:00:18.335" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210423 02:00:18.329" endtime="20210423 02:00:18.335"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 02:00:18.339" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 02:00:21.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 02:00:21.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 02:00:18.337" endtime="20210423 02:00:21.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 02:00:21.623" level="INFO"/>
<status status="PASS" starttime="20210423 02:00:21.623" endtime="20210423 02:00:21.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 02:00:21.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 02:00:21.624" endtime="20210423 02:00:21.624"/>
</kw>
<status status="PASS" starttime="20210423 02:00:18.336" endtime="20210423 02:00:21.624"/>
</kw>
<msg timestamp="20210423 02:00:21.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 02:00:18.336" endtime="20210423 02:00:21.625"/>
</kw>
<status status="PASS" starttime="20210423 02:00:18.336" endtime="20210423 02:00:21.625"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 02:00:21.628" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 02:00:25.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 02:00:25.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 02:00:21.626" endtime="20210423 02:00:25.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 02:00:25.104" level="INFO"/>
<status status="PASS" starttime="20210423 02:00:25.103" endtime="20210423 02:00:25.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 02:00:25.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 02:00:25.104" endtime="20210423 02:00:25.105"/>
</kw>
<status status="PASS" starttime="20210423 02:00:21.626" endtime="20210423 02:00:25.106"/>
</kw>
<msg timestamp="20210423 02:00:25.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 02:00:21.626" endtime="20210423 02:00:25.106"/>
</kw>
<status status="PASS" starttime="20210423 02:00:21.625" endtime="20210423 02:00:25.106"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 02:00:18.328" endtime="20210423 02:00:25.106"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210423 01:59:39.558" endtime="20210423 02:00:25.108"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 01:59:33.932" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 01:59:33.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 01:59:33.934" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210423 01:59:33.928" endtime="20210423 01:59:33.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 01:59:33.935" level="INFO">om</msg>
<status status="PASS" starttime="20210423 01:59:33.934" endtime="20210423 01:59:33.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 01:59:33.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 01:59:33.935" endtime="20210423 01:59:33.936"/>
</kw>
<status status="PASS" starttime="20210423 01:59:33.928" endtime="20210423 01:59:33.936"/>
</kw>
<msg timestamp="20210423 01:59:33.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 01:59:33.927" endtime="20210423 01:59:33.936"/>
</kw>
<msg timestamp="20210423 01:59:33.937" level="INFO">${hostname} = om</msg>
<status status="PASS" starttime="20210423 01:59:33.927" endtime="20210423 01:59:33.937"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210423 01:59:33.938" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210423 01:59:33.937" endtime="20210423 01:59:33.938"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210423 01:59:33.941" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210423 01:59:33.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210423 01:59:33.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210423 01:59:33.940" endtime="20210423 01:59:33.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210423 01:59:33.949" level="INFO"/>
<status status="PASS" starttime="20210423 01:59:33.948" endtime="20210423 01:59:33.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210423 01:59:33.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210423 01:59:33.949" endtime="20210423 01:59:33.950"/>
</kw>
<status status="PASS" starttime="20210423 01:59:33.939" endtime="20210423 01:59:33.950"/>
</kw>
<msg timestamp="20210423 01:59:33.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210423 01:59:33.939" endtime="20210423 01:59:33.950"/>
</kw>
<status status="PASS" starttime="20210423 01:59:33.938" endtime="20210423 01:59:33.950"/>
</kw>
<status status="PASS" starttime="20210423 01:59:33.938" endtime="20210423 01:59:33.951"/>
</kw>
<status status="PASS" starttime="20210423 01:59:33.926" endtime="20210423 01:59:33.951"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210423 01:59:33.926" endtime="20210423 01:59:33.951"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210423 01:59:33.877" endtime="20210423 01:59:33.952"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="45625"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-mr.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
