<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.1 (Python 3.6.9 on linux)" generated="20210422 11:26:26.612" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:37:22.791" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:37:22.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:37:22.793" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:37:22.787" endtime="20210422 10:37:22.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:37:22.794" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:37:22.794" endtime="20210422 10:37:22.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:37:22.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:37:22.795" endtime="20210422 10:37:22.795"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.787" endtime="20210422 10:37:22.796"/>
</kw>
<msg timestamp="20210422 10:37:22.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:37:22.787" endtime="20210422 10:37:22.796"/>
</kw>
<msg timestamp="20210422 10:37:22.796" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:37:22.786" endtime="20210422 10:37:22.796"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:37:22.800" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:37:22.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:37:22.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:37:22.798" endtime="20210422 10:37:22.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:37:22.808" level="INFO"/>
<status status="PASS" starttime="20210422 10:37:22.808" endtime="20210422 10:37:22.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:37:22.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:37:22.808" endtime="20210422 10:37:22.809"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.798" endtime="20210422 10:37:22.810"/>
</kw>
<msg timestamp="20210422 10:37:22.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:37:22.798" endtime="20210422 10:37:22.810"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.797" endtime="20210422 10:37:22.810"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.796" endtime="20210422 10:37:22.810"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.786" endtime="20210422 10:37:22.810"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.785" endtime="20210422 10:37:22.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:37:22.814" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:37:22.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:37:22.944" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210422 10:37:22.812" endtime="20210422 10:37:22.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:37:22.945" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 483

HTTP/1.1 200 OK
Date: Thu, 22 Apr 2021 10:37:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCrPO9a1tQQwVtzhKScMP7waumIiqfWzuUKBm59BnJCPFpdS/mxblnBhpA0AXOd8tHWlVzg/wlBoQSWAFHzLbf65OU
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1619123842933&amp;s=nphNMlob1kSgWeveWlR3z2/CpRQnQcD5jM+bbLsPBGg="; Path=/; HttpOnly
Last-Modified: Thu, 22 Apr 2021 10:08:50 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210422 10:37:22.944" endtime="20210422 10:37:22.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:37:22.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:37:22.946" endtime="20210422 10:37:22.946"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.811" endtime="20210422 10:37:22.947"/>
</kw>
<msg timestamp="20210422 10:37:22.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:37:22.811" endtime="20210422 10:37:22.947"/>
</kw>
<msg timestamp="20210422 10:37:22.947" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210422 10:37:22.811" endtime="20210422 10:37:22.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:37:22.948" endtime="20210422 10:37:22.948"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210422 10:37:22.784" endtime="20210422 10:37:22.948"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:37:22.957" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:37:22.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:37:22.963" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:37:22.955" endtime="20210422 10:37:22.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:37:22.964" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:37:22.963" endtime="20210422 10:37:22.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:37:22.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:37:22.964" endtime="20210422 10:37:22.964"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.955" endtime="20210422 10:37:22.965"/>
</kw>
<msg timestamp="20210422 10:37:22.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:37:22.954" endtime="20210422 10:37:22.965"/>
</kw>
<msg timestamp="20210422 10:37:22.966" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:37:22.954" endtime="20210422 10:37:22.966"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:37:22.968" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:37:22.966" endtime="20210422 10:37:22.968"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:37:22.972" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:37:22.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:37:22.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:37:22.970" endtime="20210422 10:37:22.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:37:22.981" level="INFO"/>
<status status="PASS" starttime="20210422 10:37:22.981" endtime="20210422 10:37:22.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:37:22.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:37:22.982" endtime="20210422 10:37:22.982"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.969" endtime="20210422 10:37:22.983"/>
</kw>
<msg timestamp="20210422 10:37:22.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:37:22.969" endtime="20210422 10:37:22.983"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.968" endtime="20210422 10:37:22.983"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.968" endtime="20210422 10:37:22.983"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.953" endtime="20210422 10:37:22.983"/>
</kw>
<status status="PASS" starttime="20210422 10:37:22.952" endtime="20210422 10:37:22.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:37:22.988" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:22.951" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210422 10:37:22.985" endtime="20210422 10:42:22.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210422 10:42:22.951" endtime="20210422 10:42:22.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210422 10:42:22.952" endtime="20210422 10:42:22.952"/>
</kw>
<status status="FAIL" starttime="20210422 10:37:22.984" endtime="20210422 10:42:22.952"/>
</kw>
<msg timestamp="20210422 10:42:22.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210422 10:37:22.984" endtime="20210422 10:42:22.952"/>
</kw>
<status status="FAIL" starttime="20210422 10:37:22.984" endtime="20210422 10:42:22.953"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210422 10:42:22.953" endtime="20210422 10:42:22.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 10:42:22.953" endtime="20210422 10:42:22.954"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210422 10:37:22.949" endtime="20210422 10:42:22.954">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210422 10:37:22.754" endtime="20210422 10:42:22.956"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:22.971" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:25.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:42:25.848" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210422 10:42:22.968" endtime="20210422 10:42:25.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:42:25.849" level="INFO">om</msg>
<status status="PASS" starttime="20210422 10:42:25.849" endtime="20210422 10:42:25.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:42:25.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:42:25.850" endtime="20210422 10:42:25.851"/>
</kw>
<status status="PASS" starttime="20210422 10:42:22.967" endtime="20210422 10:42:25.852"/>
</kw>
<msg timestamp="20210422 10:42:25.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:42:22.967" endtime="20210422 10:42:25.852"/>
</kw>
<msg timestamp="20210422 10:42:25.852" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210422 10:42:22.966" endtime="20210422 10:42:25.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:42:25.852" endtime="20210422 10:42:25.853"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:25.858" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:28.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:42:28.771" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210422 10:42:25.855" endtime="20210422 10:42:28.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:42:28.773" level="INFO">om</msg>
<status status="PASS" starttime="20210422 10:42:28.771" endtime="20210422 10:42:28.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:42:28.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:42:28.773" endtime="20210422 10:42:28.775"/>
</kw>
<status status="PASS" starttime="20210422 10:42:25.854" endtime="20210422 10:42:28.776"/>
</kw>
<msg timestamp="20210422 10:42:28.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:42:25.854" endtime="20210422 10:42:28.776"/>
</kw>
<msg timestamp="20210422 10:42:28.777" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210422 10:42:25.853" endtime="20210422 10:42:28.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:42:28.777" endtime="20210422 10:42:28.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210422 10:42:22.964" endtime="20210422 10:42:28.778"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:28.787" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:31.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:42:31.796" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:42:28.784" endtime="20210422 10:42:31.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:42:31.797" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:42:31.796" endtime="20210422 10:42:31.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:42:31.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:42:31.798" endtime="20210422 10:42:31.798"/>
</kw>
<status status="PASS" starttime="20210422 10:42:28.783" endtime="20210422 10:42:31.799"/>
</kw>
<msg timestamp="20210422 10:42:31.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:42:28.782" endtime="20210422 10:42:31.799"/>
</kw>
<msg timestamp="20210422 10:42:31.799" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210422 10:42:28.781" endtime="20210422 10:42:31.799"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:42:31.799" endtime="20210422 10:42:31.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:31.805" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:34.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:42:34.850" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:42:31.802" endtime="20210422 10:42:34.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:42:34.852" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:42:34.851" endtime="20210422 10:42:34.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:42:34.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:42:34.852" endtime="20210422 10:42:34.853"/>
</kw>
<status status="PASS" starttime="20210422 10:42:31.801" endtime="20210422 10:42:34.853"/>
</kw>
<msg timestamp="20210422 10:42:34.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:42:31.801" endtime="20210422 10:42:34.854"/>
</kw>
<msg timestamp="20210422 10:42:34.854" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210422 10:42:31.800" endtime="20210422 10:42:34.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:42:34.854" endtime="20210422 10:42:34.855"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210422 10:42:28.779" endtime="20210422 10:42:34.855"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:34.863" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:37.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:42:37.388" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210422 10:42:34.860" endtime="20210422 10:42:37.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:42:37.389" level="INFO">om</msg>
<status status="PASS" starttime="20210422 10:42:37.388" endtime="20210422 10:42:37.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:42:37.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:42:37.390" endtime="20210422 10:42:37.391"/>
</kw>
<status status="PASS" starttime="20210422 10:42:34.858" endtime="20210422 10:42:37.391"/>
</kw>
<msg timestamp="20210422 10:42:37.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:42:34.858" endtime="20210422 10:42:37.392"/>
</kw>
<msg timestamp="20210422 10:42:37.392" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210422 10:42:34.857" endtime="20210422 10:42:37.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:42:37.393" endtime="20210422 10:42:37.393"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:42:37.394" endtime="20210422 10:42:37.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:37.401" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:39.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:42:39.886" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210422 10:42:37.397" endtime="20210422 10:42:39.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:42:39.888" level="INFO">om</msg>
<status status="PASS" starttime="20210422 10:42:39.887" endtime="20210422 10:42:39.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:42:39.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:42:39.888" endtime="20210422 10:42:39.889"/>
</kw>
<status status="PASS" starttime="20210422 10:42:37.396" endtime="20210422 10:42:39.889"/>
</kw>
<msg timestamp="20210422 10:42:39.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:42:37.395" endtime="20210422 10:42:39.890"/>
</kw>
<msg timestamp="20210422 10:42:39.890" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210422 10:42:37.395" endtime="20210422 10:42:39.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:42:39.890" endtime="20210422 10:42:39.891"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:42:39.891" endtime="20210422 10:42:39.891"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210422 10:42:34.856" endtime="20210422 10:42:39.891"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:39.897" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:42.521" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 10:42:42.521" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210422 10:42:39.895" endtime="20210422 10:42:42.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:42:42.523" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210422 10:42:42.522" endtime="20210422 10:42:42.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:42:42.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:42:42.523" endtime="20210422 10:42:42.524"/>
</kw>
<msg timestamp="20210422 10:42:42.524" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210422 10:42:39.894" endtime="20210422 10:42:42.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:42:42.524" endtime="20210422 10:42:42.525"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:42.530" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:45.270" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 10:42:45.270" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210422 10:42:42.525" endtime="20210422 10:42:45.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:42:45.271" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210422 10:42:45.270" endtime="20210422 10:42:45.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:42:45.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:42:45.272" endtime="20210422 10:42:45.272"/>
</kw>
<msg timestamp="20210422 10:42:45.273" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210422 10:42:42.525" endtime="20210422 10:42:45.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:42:45.273" endtime="20210422 10:42:45.273"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210422 10:42:39.893" endtime="20210422 10:42:45.274"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210422 10:42:22.959" endtime="20210422 10:42:45.275"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210422 10:42:45.295" level="INFO">${random} = 95581</msg>
<status status="PASS" starttime="20210422 10:42:45.295" endtime="20210422 10:42:45.295"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:42:45.299" level="INFO">${source} = 95581-source</msg>
<status status="PASS" starttime="20210422 10:42:45.296" endtime="20210422 10:42:45.299"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:42:45.302" level="INFO">${target} = 95581-target</msg>
<status status="PASS" starttime="20210422 10:42:45.299" endtime="20210422 10:42:45.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:45.306" level="INFO">Running command 'ozone sh volume create 95581-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:52.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:42:52.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:42:45.304" endtime="20210422 10:42:52.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:42:52.365" level="INFO"/>
<status status="PASS" starttime="20210422 10:42:52.361" endtime="20210422 10:42:52.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:42:52.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:42:52.367" endtime="20210422 10:42:52.370"/>
</kw>
<status status="PASS" starttime="20210422 10:42:45.304" endtime="20210422 10:42:52.371"/>
</kw>
<msg timestamp="20210422 10:42:52.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:42:45.303" endtime="20210422 10:42:52.372"/>
</kw>
<status status="PASS" starttime="20210422 10:42:45.302" endtime="20210422 10:42:52.373"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:52.388" level="INFO">Running command 'ozone sh volume create 95581-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:42:59.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:42:59.805" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:42:52.381" endtime="20210422 10:42:59.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:42:59.806" level="INFO"/>
<status status="PASS" starttime="20210422 10:42:59.806" endtime="20210422 10:42:59.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:42:59.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:42:59.807" endtime="20210422 10:42:59.807"/>
</kw>
<status status="PASS" starttime="20210422 10:42:52.378" endtime="20210422 10:42:59.807"/>
</kw>
<msg timestamp="20210422 10:42:59.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:42:52.377" endtime="20210422 10:42:59.808"/>
</kw>
<status status="PASS" starttime="20210422 10:42:52.374" endtime="20210422 10:42:59.808"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:42:59.816" level="INFO">Running command 'ozone sh bucket create 95581-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:43:07.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:43:07.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:42:59.814" endtime="20210422 10:43:07.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:43:07.345" level="INFO"/>
<status status="PASS" starttime="20210422 10:43:07.344" endtime="20210422 10:43:07.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:43:07.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:43:07.345" endtime="20210422 10:43:07.346"/>
</kw>
<status status="PASS" starttime="20210422 10:42:59.813" endtime="20210422 10:43:07.346"/>
</kw>
<msg timestamp="20210422 10:43:07.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:42:59.810" endtime="20210422 10:43:07.346"/>
</kw>
<status status="PASS" starttime="20210422 10:42:59.809" endtime="20210422 10:43:07.347"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:43:07.352" level="INFO">Running command 'ozone sh key put 95581-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:46:16.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:46:16.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:43:07.349" endtime="20210422 10:46:16.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:46:16.129" level="INFO"/>
<status status="PASS" starttime="20210422 10:46:16.128" endtime="20210422 10:46:16.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:46:16.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:46:16.129" endtime="20210422 10:46:16.130"/>
</kw>
<status status="PASS" starttime="20210422 10:43:07.348" endtime="20210422 10:46:16.131"/>
</kw>
<msg timestamp="20210422 10:46:16.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:43:07.348" endtime="20210422 10:46:16.131"/>
</kw>
<status status="PASS" starttime="20210422 10:43:07.347" endtime="20210422 10:46:16.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:46:16.136" level="INFO">Running command 'ozone sh bucket create 95581-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:46:21.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:46:21.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:46:16.134" endtime="20210422 10:46:21.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:46:21.617" level="INFO"/>
<status status="PASS" starttime="20210422 10:46:21.616" endtime="20210422 10:46:21.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:46:21.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:46:21.617" endtime="20210422 10:46:21.618"/>
</kw>
<status status="PASS" starttime="20210422 10:46:16.133" endtime="20210422 10:46:21.618"/>
</kw>
<msg timestamp="20210422 10:46:21.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:46:16.133" endtime="20210422 10:46:21.618"/>
</kw>
<status status="PASS" starttime="20210422 10:46:16.132" endtime="20210422 10:46:21.619"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:46:21.622" level="INFO">Running command 'ozone sh bucket link 95581-source/readable-bucket 95581-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:46:27.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:46:27.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:46:21.620" endtime="20210422 10:46:27.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:46:27.474" level="INFO"/>
<status status="PASS" starttime="20210422 10:46:27.473" endtime="20210422 10:46:27.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:46:27.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:46:27.475" endtime="20210422 10:46:27.476"/>
</kw>
<status status="PASS" starttime="20210422 10:46:21.620" endtime="20210422 10:46:27.476"/>
</kw>
<msg timestamp="20210422 10:46:27.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:46:21.619" endtime="20210422 10:46:27.477"/>
</kw>
<status status="PASS" starttime="20210422 10:46:21.619" endtime="20210422 10:46:27.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:46:27.484" level="INFO">Running command 'ozone sh bucket link 95581-source/readable-bucket 95581-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:46:33.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:46:33.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:46:27.481" endtime="20210422 10:46:33.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:46:33.496" level="INFO"/>
<status status="PASS" starttime="20210422 10:46:33.495" endtime="20210422 10:46:33.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:46:33.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:46:33.496" endtime="20210422 10:46:33.497"/>
</kw>
<status status="PASS" starttime="20210422 10:46:27.480" endtime="20210422 10:46:33.498"/>
</kw>
<msg timestamp="20210422 10:46:33.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:46:27.479" endtime="20210422 10:46:33.498"/>
</kw>
<status status="PASS" starttime="20210422 10:46:27.478" endtime="20210422 10:46:33.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:46:33.502" level="INFO">Running command 'ozone sh bucket link 95581-source/unreadable-bucket 95581-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:46:39.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:46:39.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:46:33.500" endtime="20210422 10:46:39.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:46:39.816" level="INFO"/>
<status status="PASS" starttime="20210422 10:46:39.815" endtime="20210422 10:46:39.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:46:39.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:46:39.817" endtime="20210422 10:46:39.818"/>
</kw>
<status status="PASS" starttime="20210422 10:46:33.499" endtime="20210422 10:46:39.818"/>
</kw>
<msg timestamp="20210422 10:46:39.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:46:33.499" endtime="20210422 10:46:39.819"/>
</kw>
<status status="PASS" starttime="20210422 10:46:33.498" endtime="20210422 10:46:39.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:46:39.824" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 95581-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:46:46.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:46:46.986" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:46:39.821" endtime="20210422 10:46:46.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:46:46.987" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:46:46.986" endtime="20210422 10:46:46.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:46:46.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:46:46.987" endtime="20210422 10:46:46.988"/>
</kw>
<status status="PASS" starttime="20210422 10:46:39.821" endtime="20210422 10:46:46.988"/>
</kw>
<msg timestamp="20210422 10:46:46.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:46:39.820" endtime="20210422 10:46:46.988"/>
</kw>
<status status="PASS" starttime="20210422 10:46:39.820" endtime="20210422 10:46:46.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:46:46.993" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 95581-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:46:53.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:46:53.642" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:46:46.991" endtime="20210422 10:46:53.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:46:53.643" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:46:53.642" endtime="20210422 10:46:53.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:46:53.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:46:53.643" endtime="20210422 10:46:53.644"/>
</kw>
<status status="PASS" starttime="20210422 10:46:46.990" endtime="20210422 10:46:53.644"/>
</kw>
<msg timestamp="20210422 10:46:53.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:46:46.990" endtime="20210422 10:46:53.644"/>
</kw>
<status status="PASS" starttime="20210422 10:46:46.989" endtime="20210422 10:46:53.645"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:46:53.654" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 95581-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:00.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:47:00.379" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:46:53.652" endtime="20210422 10:47:00.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:00.381" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:47:00.380" endtime="20210422 10:47:00.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:47:00.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:47:00.382" endtime="20210422 10:47:00.383"/>
</kw>
<status status="PASS" starttime="20210422 10:46:53.646" endtime="20210422 10:47:00.384"/>
</kw>
<msg timestamp="20210422 10:47:00.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:46:53.646" endtime="20210422 10:47:00.385"/>
</kw>
<status status="PASS" starttime="20210422 10:46:53.645" endtime="20210422 10:47:00.385"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:00.394" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 95581-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:07.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:47:07.285" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:47:00.389" endtime="20210422 10:47:07.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:07.287" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:47:07.286" endtime="20210422 10:47:07.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:47:07.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:47:07.287" endtime="20210422 10:47:07.288"/>
</kw>
<status status="PASS" starttime="20210422 10:47:00.388" endtime="20210422 10:47:07.288"/>
</kw>
<msg timestamp="20210422 10:47:07.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:47:00.387" endtime="20210422 10:47:07.288"/>
</kw>
<status status="PASS" starttime="20210422 10:47:00.386" endtime="20210422 10:47:07.288"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:07.292" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 95581-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:12.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:47:12.382" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:47:07.290" endtime="20210422 10:47:12.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:12.385" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:47:12.383" endtime="20210422 10:47:12.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:47:12.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:47:12.386" endtime="20210422 10:47:12.386"/>
</kw>
<status status="PASS" starttime="20210422 10:47:07.290" endtime="20210422 10:47:12.387"/>
</kw>
<msg timestamp="20210422 10:47:12.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:47:07.289" endtime="20210422 10:47:12.387"/>
</kw>
<status status="PASS" starttime="20210422 10:47:07.289" endtime="20210422 10:47:12.387"/>
</kw>
<status status="PASS" starttime="20210422 10:42:59.809" endtime="20210422 10:47:12.387"/>
</kw>
<status status="PASS" starttime="20210422 10:42:59.808" endtime="20210422 10:47:12.388"/>
</kw>
<status status="PASS" starttime="20210422 10:42:45.294" endtime="20210422 10:47:12.388"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:12.394" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:12.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:47:12.397" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:47:12.392" endtime="20210422 10:47:12.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:12.399" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:47:12.398" endtime="20210422 10:47:12.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:47:12.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:47:12.399" endtime="20210422 10:47:12.400"/>
</kw>
<status status="PASS" starttime="20210422 10:47:12.392" endtime="20210422 10:47:12.401"/>
</kw>
<msg timestamp="20210422 10:47:12.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:47:12.392" endtime="20210422 10:47:12.401"/>
</kw>
<msg timestamp="20210422 10:47:12.401" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:47:12.391" endtime="20210422 10:47:12.401"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:47:12.404" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:47:12.402" endtime="20210422 10:47:12.404"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:12.408" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:12.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:47:12.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:47:12.406" endtime="20210422 10:47:12.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:12.441" level="INFO"/>
<status status="PASS" starttime="20210422 10:47:12.440" endtime="20210422 10:47:12.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:47:12.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:47:12.441" endtime="20210422 10:47:12.442"/>
</kw>
<status status="PASS" starttime="20210422 10:47:12.405" endtime="20210422 10:47:12.442"/>
</kw>
<msg timestamp="20210422 10:47:12.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:47:12.405" endtime="20210422 10:47:12.442"/>
</kw>
<status status="PASS" starttime="20210422 10:47:12.404" endtime="20210422 10:47:12.443"/>
</kw>
<status status="PASS" starttime="20210422 10:47:12.404" endtime="20210422 10:47:12.443"/>
</kw>
<status status="PASS" starttime="20210422 10:47:12.390" endtime="20210422 10:47:12.443"/>
</kw>
<status status="PASS" starttime="20210422 10:47:12.389" endtime="20210422 10:47:12.443"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:12.447" level="INFO">Running command 'ozone sh bucket link 95581-source/no-such-bucket 95581-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:19.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:47:19.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:47:12.445" endtime="20210422 10:47:19.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:19.167" level="INFO"/>
<status status="PASS" starttime="20210422 10:47:19.166" endtime="20210422 10:47:19.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:47:19.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:47:19.167" endtime="20210422 10:47:19.168"/>
</kw>
<status status="PASS" starttime="20210422 10:47:12.444" endtime="20210422 10:47:19.168"/>
</kw>
<msg timestamp="20210422 10:47:19.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:47:12.444" endtime="20210422 10:47:19.169"/>
</kw>
<status status="PASS" starttime="20210422 10:47:12.443" endtime="20210422 10:47:19.169"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:19.173" level="INFO">Running command 'ozone sh key list 95581-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:25.682" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 10:47:25.683" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210422 10:47:19.170" endtime="20210422 10:47:25.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:25.686" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210422 10:47:25.684" endtime="20210422 10:47:25.686"/>
</kw>
<msg timestamp="20210422 10:47:25.687" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210422 10:47:19.169" endtime="20210422 10:47:25.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:47:25.687" endtime="20210422 10:47:25.688"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:47:12.388" endtime="20210422 10:47:25.688"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:25.699" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:25.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:47:25.704" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:47:25.695" endtime="20210422 10:47:25.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:25.706" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:47:25.705" endtime="20210422 10:47:25.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:47:25.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:47:25.706" endtime="20210422 10:47:25.707"/>
</kw>
<status status="PASS" starttime="20210422 10:47:25.695" endtime="20210422 10:47:25.708"/>
</kw>
<msg timestamp="20210422 10:47:25.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:47:25.694" endtime="20210422 10:47:25.708"/>
</kw>
<msg timestamp="20210422 10:47:25.708" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:47:25.693" endtime="20210422 10:47:25.708"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:47:25.709" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:47:25.708" endtime="20210422 10:47:25.709"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:25.715" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:25.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:47:25.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:47:25.712" endtime="20210422 10:47:25.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:25.737" level="INFO"/>
<status status="PASS" starttime="20210422 10:47:25.736" endtime="20210422 10:47:25.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:47:25.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:47:25.737" endtime="20210422 10:47:25.738"/>
</kw>
<status status="PASS" starttime="20210422 10:47:25.711" endtime="20210422 10:47:25.738"/>
</kw>
<msg timestamp="20210422 10:47:25.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:47:25.711" endtime="20210422 10:47:25.739"/>
</kw>
<status status="PASS" starttime="20210422 10:47:25.710" endtime="20210422 10:47:25.739"/>
</kw>
<status status="PASS" starttime="20210422 10:47:25.710" endtime="20210422 10:47:25.739"/>
</kw>
<status status="PASS" starttime="20210422 10:47:25.692" endtime="20210422 10:47:25.739"/>
</kw>
<status status="PASS" starttime="20210422 10:47:25.691" endtime="20210422 10:47:25.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:25.745" level="INFO">Running command 'ozone sh bucket link 95581-source/bucket1 95581-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:32.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:47:32.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:47:25.742" endtime="20210422 10:47:32.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:32.414" level="INFO"/>
<status status="PASS" starttime="20210422 10:47:32.413" endtime="20210422 10:47:32.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:47:32.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:47:32.415" endtime="20210422 10:47:32.416"/>
</kw>
<status status="PASS" starttime="20210422 10:47:25.741" endtime="20210422 10:47:32.416"/>
</kw>
<msg timestamp="20210422 10:47:32.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:47:25.741" endtime="20210422 10:47:32.417"/>
</kw>
<status status="PASS" starttime="20210422 10:47:25.740" endtime="20210422 10:47:32.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:32.423" level="INFO">Running command 'ozone sh bucket create 95581-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:47:39.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:47:39.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:47:32.420" endtime="20210422 10:47:39.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:47:39.446" level="INFO"/>
<status status="PASS" starttime="20210422 10:47:39.445" endtime="20210422 10:47:39.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:47:39.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:47:39.447" endtime="20210422 10:47:39.448"/>
</kw>
<status status="PASS" starttime="20210422 10:47:32.419" endtime="20210422 10:47:39.450"/>
</kw>
<msg timestamp="20210422 10:47:39.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:47:32.419" endtime="20210422 10:47:39.451"/>
</kw>
<status status="PASS" starttime="20210422 10:47:32.418" endtime="20210422 10:47:39.452"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:47:39.464" level="INFO">Running command 'ozone sh key put 95581-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:49:25.690" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210422 10:47:39.460" endtime="20210422 10:49:25.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210422 10:49:25.692" endtime="20210422 10:49:25.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210422 10:49:25.692" endtime="20210422 10:49:25.692"/>
</kw>
<status status="FAIL" starttime="20210422 10:47:39.458" endtime="20210422 10:49:25.692"/>
</kw>
<msg timestamp="20210422 10:49:25.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210422 10:47:39.457" endtime="20210422 10:49:25.693"/>
</kw>
<status status="FAIL" starttime="20210422 10:47:39.454" endtime="20210422 10:49:25.693"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210422 10:49:25.693" endtime="20210422 10:49:25.694"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210422 10:47:25.689" endtime="20210422 10:49:25.694">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:49:25.701" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:49:25.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:49:25.704" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:49:25.699" endtime="20210422 10:49:25.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:49:25.705" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:49:25.704" endtime="20210422 10:49:25.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:49:25.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:49:25.705" endtime="20210422 10:49:25.706"/>
</kw>
<status status="PASS" starttime="20210422 10:49:25.698" endtime="20210422 10:49:25.706"/>
</kw>
<msg timestamp="20210422 10:49:25.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:49:25.698" endtime="20210422 10:49:25.706"/>
</kw>
<msg timestamp="20210422 10:49:25.707" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:49:25.697" endtime="20210422 10:49:25.707"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:49:25.708" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:49:25.707" endtime="20210422 10:49:25.708"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:49:25.714" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:49:25.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:49:25.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:49:25.711" endtime="20210422 10:49:25.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:49:25.727" level="INFO"/>
<status status="PASS" starttime="20210422 10:49:25.726" endtime="20210422 10:49:25.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:49:25.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:49:25.728" endtime="20210422 10:49:25.729"/>
</kw>
<status status="PASS" starttime="20210422 10:49:25.710" endtime="20210422 10:49:25.735"/>
</kw>
<msg timestamp="20210422 10:49:25.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:49:25.710" endtime="20210422 10:49:25.736"/>
</kw>
<status status="PASS" starttime="20210422 10:49:25.709" endtime="20210422 10:49:25.736"/>
</kw>
<status status="PASS" starttime="20210422 10:49:25.708" endtime="20210422 10:49:25.736"/>
</kw>
<status status="PASS" starttime="20210422 10:49:25.697" endtime="20210422 10:49:25.736"/>
</kw>
<status status="PASS" starttime="20210422 10:49:25.696" endtime="20210422 10:49:25.736"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:49:25.742" level="INFO">Running command 'ozone sh key put 95581-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:25.696" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210422 10:49:25.738" endtime="20210422 10:51:25.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210422 10:51:25.697" endtime="20210422 10:51:25.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210422 10:51:25.697" endtime="20210422 10:51:25.697"/>
</kw>
<status status="FAIL" starttime="20210422 10:49:25.738" endtime="20210422 10:51:25.698"/>
</kw>
<msg timestamp="20210422 10:51:25.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210422 10:49:25.737" endtime="20210422 10:51:25.698"/>
</kw>
<status status="FAIL" starttime="20210422 10:49:25.737" endtime="20210422 10:51:25.698"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210422 10:51:25.698" endtime="20210422 10:51:25.699"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210422 10:49:25.695" endtime="20210422 10:51:25.699">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:25.707" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:25.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:25.715" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:51:25.703" endtime="20210422 10:51:25.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:25.716" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:51:25.715" endtime="20210422 10:51:25.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:25.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:25.717" endtime="20210422 10:51:25.718"/>
</kw>
<status status="PASS" starttime="20210422 10:51:25.703" endtime="20210422 10:51:25.718"/>
</kw>
<msg timestamp="20210422 10:51:25.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:25.702" endtime="20210422 10:51:25.719"/>
</kw>
<msg timestamp="20210422 10:51:25.719" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:51:25.702" endtime="20210422 10:51:25.719"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:51:25.720" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:51:25.719" endtime="20210422 10:51:25.720"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:25.728" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:25.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:25.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:51:25.722" endtime="20210422 10:51:25.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:25.736" level="INFO"/>
<status status="PASS" starttime="20210422 10:51:25.735" endtime="20210422 10:51:25.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:25.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:25.737" endtime="20210422 10:51:25.737"/>
</kw>
<status status="PASS" starttime="20210422 10:51:25.722" endtime="20210422 10:51:25.738"/>
</kw>
<msg timestamp="20210422 10:51:25.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:25.721" endtime="20210422 10:51:25.738"/>
</kw>
<status status="PASS" starttime="20210422 10:51:25.720" endtime="20210422 10:51:25.738"/>
</kw>
<status status="PASS" starttime="20210422 10:51:25.720" endtime="20210422 10:51:25.738"/>
</kw>
<status status="PASS" starttime="20210422 10:51:25.701" endtime="20210422 10:51:25.739"/>
</kw>
<status status="PASS" starttime="20210422 10:51:25.701" endtime="20210422 10:51:25.739"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:25.744" level="INFO">Running command 'ozone sh key list 95581-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:33.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:33.183" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210422 10:51:25.742" endtime="20210422 10:51:33.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:33.186" level="INFO">key1</msg>
<status status="PASS" starttime="20210422 10:51:33.184" endtime="20210422 10:51:33.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:33.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:33.187" endtime="20210422 10:51:33.193"/>
</kw>
<status status="PASS" starttime="20210422 10:51:25.741" endtime="20210422 10:51:33.194"/>
</kw>
<msg timestamp="20210422 10:51:33.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:25.741" endtime="20210422 10:51:33.195"/>
</kw>
<msg timestamp="20210422 10:51:33.195" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210422 10:51:25.739" endtime="20210422 10:51:33.195"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:33.201" level="INFO">Running command 'ozone sh key list 95581-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:42.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:42.072" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210422 10:51:33.198" endtime="20210422 10:51:42.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:42.073" level="INFO">key1</msg>
<status status="PASS" starttime="20210422 10:51:42.072" endtime="20210422 10:51:42.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:42.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:42.074" endtime="20210422 10:51:42.074"/>
</kw>
<status status="PASS" starttime="20210422 10:51:33.198" endtime="20210422 10:51:42.074"/>
</kw>
<msg timestamp="20210422 10:51:42.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:33.197" endtime="20210422 10:51:42.075"/>
</kw>
<msg timestamp="20210422 10:51:42.075" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210422 10:51:33.196" endtime="20210422 10:51:42.075"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:51:42.075" endtime="20210422 10:51:42.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:51:42.076" endtime="20210422 10:51:42.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210422 10:51:42.077" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210422 10:51:42.077" endtime="20210422 10:51:42.078"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210422 10:51:25.700" endtime="20210422 10:51:42.078">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:42.085" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:42.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:42.089" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:51:42.083" endtime="20210422 10:51:42.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:42.090" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:51:42.090" endtime="20210422 10:51:42.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:42.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:42.090" endtime="20210422 10:51:42.091"/>
</kw>
<status status="PASS" starttime="20210422 10:51:42.082" endtime="20210422 10:51:42.092"/>
</kw>
<msg timestamp="20210422 10:51:42.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:42.082" endtime="20210422 10:51:42.092"/>
</kw>
<msg timestamp="20210422 10:51:42.092" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:51:42.082" endtime="20210422 10:51:42.092"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:51:42.093" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:51:42.093" endtime="20210422 10:51:42.093"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:42.100" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:42.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:42.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:51:42.097" endtime="20210422 10:51:42.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:42.110" level="INFO"/>
<status status="PASS" starttime="20210422 10:51:42.110" endtime="20210422 10:51:42.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:42.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:42.111" endtime="20210422 10:51:42.112"/>
</kw>
<status status="PASS" starttime="20210422 10:51:42.096" endtime="20210422 10:51:42.113"/>
</kw>
<msg timestamp="20210422 10:51:42.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:42.096" endtime="20210422 10:51:42.113"/>
</kw>
<status status="PASS" starttime="20210422 10:51:42.094" endtime="20210422 10:51:42.113"/>
</kw>
<status status="PASS" starttime="20210422 10:51:42.094" endtime="20210422 10:51:42.114"/>
</kw>
<status status="PASS" starttime="20210422 10:51:42.081" endtime="20210422 10:51:42.114"/>
</kw>
<status status="PASS" starttime="20210422 10:51:42.080" endtime="20210422 10:51:42.114"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:42.119" level="INFO">Running command 'ozone sh key delete 95581-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:49.031" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 10:51:49.031" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210422 10:51:42.117" endtime="20210422 10:51:49.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:49.033" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210422 10:51:49.032" endtime="20210422 10:51:49.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:49.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210422 10:51:49.034" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210422 10:51:49.033" endtime="20210422 10:51:49.034"/>
</kw>
<status status="FAIL" starttime="20210422 10:51:42.116" endtime="20210422 10:51:49.034"/>
</kw>
<msg timestamp="20210422 10:51:49.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210422 10:51:42.115" endtime="20210422 10:51:49.034"/>
</kw>
<status status="FAIL" starttime="20210422 10:51:42.115" endtime="20210422 10:51:49.035"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210422 10:51:49.035" endtime="20210422 10:51:49.035"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 10:51:49.035" endtime="20210422 10:51:49.035"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210422 10:51:42.079" endtime="20210422 10:51:49.036">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:49.044" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:49.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:49.047" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:51:49.041" endtime="20210422 10:51:49.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:49.049" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:51:49.048" endtime="20210422 10:51:49.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:49.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:49.050" endtime="20210422 10:51:49.051"/>
</kw>
<status status="PASS" starttime="20210422 10:51:49.040" endtime="20210422 10:51:49.052"/>
</kw>
<msg timestamp="20210422 10:51:49.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:49.040" endtime="20210422 10:51:49.052"/>
</kw>
<msg timestamp="20210422 10:51:49.053" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:51:49.039" endtime="20210422 10:51:49.053"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:51:49.054" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:51:49.053" endtime="20210422 10:51:49.054"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:49.062" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:49.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:49.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:51:49.059" endtime="20210422 10:51:49.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:49.071" level="INFO"/>
<status status="PASS" starttime="20210422 10:51:49.070" endtime="20210422 10:51:49.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:49.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:49.072" endtime="20210422 10:51:49.074"/>
</kw>
<status status="PASS" starttime="20210422 10:51:49.058" endtime="20210422 10:51:49.074"/>
</kw>
<msg timestamp="20210422 10:51:49.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:49.057" endtime="20210422 10:51:49.075"/>
</kw>
<status status="PASS" starttime="20210422 10:51:49.055" endtime="20210422 10:51:49.075"/>
</kw>
<status status="PASS" starttime="20210422 10:51:49.055" endtime="20210422 10:51:49.075"/>
</kw>
<status status="PASS" starttime="20210422 10:51:49.039" endtime="20210422 10:51:49.075"/>
</kw>
<status status="PASS" starttime="20210422 10:51:49.038" endtime="20210422 10:51:49.075"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:49.079" level="INFO">Running command 'ozone sh bucket list 95581-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:56.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:56.653" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210422 10:51:49.077" endtime="20210422 10:51:56.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:56.655" level="INFO">{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:47:18.910Z",
  "modificationTime" : "2021-04-22T10:47:18.910Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:46:39.638Z",
  "modificationTime" : "2021-04-22T10:47:12.135Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:47:32.359Z",
  "modificationTime" : "2021-04-22T10:47:32.359Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:46:27.128Z",
  "modificationTime" : "2021-04-22T10:47:07.202Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:46:33.302Z",
  "modificationTime" : "2021-04-22T10:46:33.302Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210422 10:51:56.654" endtime="20210422 10:51:56.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:56.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:56.655" endtime="20210422 10:51:56.656"/>
</kw>
<status status="PASS" starttime="20210422 10:51:49.076" endtime="20210422 10:51:56.657"/>
</kw>
<msg timestamp="20210422 10:51:56.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:49.076" endtime="20210422 10:51:56.657"/>
</kw>
<msg timestamp="20210422 10:51:56.657" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210422 10:51:49.075" endtime="20210422 10:51:56.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:51:56.658" endtime="20210422 10:51:56.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:51:56.658" endtime="20210422 10:51:56.659"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:51:49.037" endtime="20210422 10:51:56.659"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:56.669" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:56.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:56.672" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:51:56.667" endtime="20210422 10:51:56.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:56.675" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:51:56.673" endtime="20210422 10:51:56.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:56.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:56.675" endtime="20210422 10:51:56.678"/>
</kw>
<status status="PASS" starttime="20210422 10:51:56.666" endtime="20210422 10:51:56.679"/>
</kw>
<msg timestamp="20210422 10:51:56.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:56.666" endtime="20210422 10:51:56.679"/>
</kw>
<msg timestamp="20210422 10:51:56.679" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:51:56.665" endtime="20210422 10:51:56.679"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:51:56.680" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:51:56.679" endtime="20210422 10:51:56.680"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:56.687" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:51:56.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:51:56.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:51:56.685" endtime="20210422 10:51:56.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:51:56.698" level="INFO"/>
<status status="PASS" starttime="20210422 10:51:56.697" endtime="20210422 10:51:56.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:51:56.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:51:56.699" endtime="20210422 10:51:56.700"/>
</kw>
<status status="PASS" starttime="20210422 10:51:56.684" endtime="20210422 10:51:56.700"/>
</kw>
<msg timestamp="20210422 10:51:56.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:56.683" endtime="20210422 10:51:56.700"/>
</kw>
<status status="PASS" starttime="20210422 10:51:56.682" endtime="20210422 10:51:56.701"/>
</kw>
<status status="PASS" starttime="20210422 10:51:56.680" endtime="20210422 10:51:56.701"/>
</kw>
<status status="PASS" starttime="20210422 10:51:56.664" endtime="20210422 10:51:56.701"/>
</kw>
<status status="PASS" starttime="20210422 10:51:56.664" endtime="20210422 10:51:56.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:51:56.706" level="INFO">Running command 'ozone sh bucket info 95581-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:04.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:04.346" level="INFO">${output} = 95581-source bucket1</msg>
<status status="PASS" starttime="20210422 10:51:56.704" endtime="20210422 10:52:04.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:04.349" level="INFO">95581-source bucket1</msg>
<status status="PASS" starttime="20210422 10:52:04.348" endtime="20210422 10:52:04.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:04.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:04.349" endtime="20210422 10:52:04.351"/>
</kw>
<status status="PASS" starttime="20210422 10:51:56.703" endtime="20210422 10:52:04.351"/>
</kw>
<msg timestamp="20210422 10:52:04.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:51:56.703" endtime="20210422 10:52:04.352"/>
</kw>
<msg timestamp="20210422 10:52:04.353" level="INFO">${result} = 95581-source bucket1</msg>
<status status="PASS" starttime="20210422 10:51:56.702" endtime="20210422 10:52:04.353"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:52:04.353" endtime="20210422 10:52:04.355"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:51:56.662" endtime="20210422 10:52:04.355"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:04.366" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:04.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:04.372" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:52:04.363" endtime="20210422 10:52:04.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:04.373" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:52:04.372" endtime="20210422 10:52:04.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:04.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:04.373" endtime="20210422 10:52:04.374"/>
</kw>
<status status="PASS" starttime="20210422 10:52:04.362" endtime="20210422 10:52:04.375"/>
</kw>
<msg timestamp="20210422 10:52:04.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:04.362" endtime="20210422 10:52:04.375"/>
</kw>
<msg timestamp="20210422 10:52:04.376" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:52:04.360" endtime="20210422 10:52:04.376"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:52:04.377" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:52:04.376" endtime="20210422 10:52:04.377"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:04.384" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:04.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:04.395" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:52:04.382" endtime="20210422 10:52:04.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:04.398" level="INFO"/>
<status status="PASS" starttime="20210422 10:52:04.396" endtime="20210422 10:52:04.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:04.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:04.398" endtime="20210422 10:52:04.399"/>
</kw>
<status status="PASS" starttime="20210422 10:52:04.380" endtime="20210422 10:52:04.400"/>
</kw>
<msg timestamp="20210422 10:52:04.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:04.380" endtime="20210422 10:52:04.401"/>
</kw>
<status status="PASS" starttime="20210422 10:52:04.379" endtime="20210422 10:52:04.401"/>
</kw>
<status status="PASS" starttime="20210422 10:52:04.377" endtime="20210422 10:52:04.401"/>
</kw>
<status status="PASS" starttime="20210422 10:52:04.360" endtime="20210422 10:52:04.402"/>
</kw>
<status status="PASS" starttime="20210422 10:52:04.358" endtime="20210422 10:52:04.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:04.407" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 95581-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:11.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:11.377" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:52:04.404" endtime="20210422 10:52:11.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:11.380" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:52:11.379" endtime="20210422 10:52:11.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:11.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:11.380" endtime="20210422 10:52:11.381"/>
</kw>
<status status="PASS" starttime="20210422 10:52:04.404" endtime="20210422 10:52:11.382"/>
</kw>
<msg timestamp="20210422 10:52:11.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:04.403" endtime="20210422 10:52:11.382"/>
</kw>
<status status="PASS" starttime="20210422 10:52:04.402" endtime="20210422 10:52:11.382"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:11.389" level="INFO">Running command 'ozone sh bucket getacl 95581-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:19.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:19.221" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210422 10:52:11.387" endtime="20210422 10:52:19.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:19.224" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210422 10:52:19.222" endtime="20210422 10:52:19.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:19.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:19.224" endtime="20210422 10:52:19.226"/>
</kw>
<status status="PASS" starttime="20210422 10:52:11.385" endtime="20210422 10:52:19.227"/>
</kw>
<msg timestamp="20210422 10:52:19.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:11.384" endtime="20210422 10:52:19.228"/>
</kw>
<msg timestamp="20210422 10:52:19.228" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210422 10:52:11.383" endtime="20210422 10:52:19.228"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:52:19.229" endtime="20210422 10:52:19.231"/>
</kw>
<status status="PASS" starttime="20210422 10:52:11.382" endtime="20210422 10:52:19.231"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:19.242" level="INFO">Running command 'ozone sh bucket getacl 95581-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:28.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:28.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:52:19.239" endtime="20210422 10:52:28.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:28.094" level="INFO"/>
<status status="PASS" starttime="20210422 10:52:28.094" endtime="20210422 10:52:28.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:28.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:28.095" endtime="20210422 10:52:28.096"/>
</kw>
<status status="PASS" starttime="20210422 10:52:19.238" endtime="20210422 10:52:28.096"/>
</kw>
<msg timestamp="20210422 10:52:28.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:19.237" endtime="20210422 10:52:28.097"/>
</kw>
<msg timestamp="20210422 10:52:28.098" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210422 10:52:19.235" endtime="20210422 10:52:28.098"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:52:28.098" endtime="20210422 10:52:28.099"/>
</kw>
<status status="PASS" starttime="20210422 10:52:19.232" endtime="20210422 10:52:28.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:28.108" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 95581-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:35.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:35.246" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:52:28.105" endtime="20210422 10:52:35.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:35.247" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 10:52:35.247" endtime="20210422 10:52:35.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:35.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:35.248" endtime="20210422 10:52:35.248"/>
</kw>
<status status="PASS" starttime="20210422 10:52:28.102" endtime="20210422 10:52:35.249"/>
</kw>
<msg timestamp="20210422 10:52:35.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:28.101" endtime="20210422 10:52:35.249"/>
</kw>
<status status="PASS" starttime="20210422 10:52:28.100" endtime="20210422 10:52:35.249"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:35.261" level="INFO">Running command 'ozone sh bucket getacl 95581-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:43.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:43.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:52:35.258" endtime="20210422 10:52:43.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:43.082" level="INFO"/>
<status status="PASS" starttime="20210422 10:52:43.081" endtime="20210422 10:52:43.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:43.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:43.083" endtime="20210422 10:52:43.084"/>
</kw>
<status status="PASS" starttime="20210422 10:52:35.256" endtime="20210422 10:52:43.085"/>
</kw>
<msg timestamp="20210422 10:52:43.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:35.255" endtime="20210422 10:52:43.085"/>
</kw>
<msg timestamp="20210422 10:52:43.086" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210422 10:52:35.254" endtime="20210422 10:52:43.086"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:52:43.086" endtime="20210422 10:52:43.087"/>
</kw>
<status status="PASS" starttime="20210422 10:52:35.250" endtime="20210422 10:52:43.087"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:43.093" level="INFO">Running command 'ozone sh bucket getacl 95581-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:50.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:50.175" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210422 10:52:43.090" endtime="20210422 10:52:50.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:50.177" level="INFO">READ</msg>
<status status="PASS" starttime="20210422 10:52:50.176" endtime="20210422 10:52:50.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:50.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:50.178" endtime="20210422 10:52:50.179"/>
</kw>
<status status="PASS" starttime="20210422 10:52:43.089" endtime="20210422 10:52:50.179"/>
</kw>
<msg timestamp="20210422 10:52:50.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:43.089" endtime="20210422 10:52:50.180"/>
</kw>
<msg timestamp="20210422 10:52:50.180" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210422 10:52:43.088" endtime="20210422 10:52:50.181"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:52:50.181" endtime="20210422 10:52:50.182"/>
</kw>
<status status="PASS" starttime="20210422 10:52:43.087" endtime="20210422 10:52:50.182"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:52:04.356" endtime="20210422 10:52:50.183"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:50.191" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:50.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:50.194" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:52:50.188" endtime="20210422 10:52:50.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:50.195" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:52:50.195" endtime="20210422 10:52:50.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:50.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:50.196" endtime="20210422 10:52:50.197"/>
</kw>
<status status="PASS" starttime="20210422 10:52:50.188" endtime="20210422 10:52:50.197"/>
</kw>
<msg timestamp="20210422 10:52:50.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:50.187" endtime="20210422 10:52:50.197"/>
</kw>
<msg timestamp="20210422 10:52:50.198" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:52:50.187" endtime="20210422 10:52:50.198"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:52:50.199" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:52:50.198" endtime="20210422 10:52:50.199"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:50.206" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:50.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:50.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:52:50.203" endtime="20210422 10:52:50.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:50.235" level="INFO"/>
<status status="PASS" starttime="20210422 10:52:50.234" endtime="20210422 10:52:50.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:50.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:50.235" endtime="20210422 10:52:50.236"/>
</kw>
<status status="PASS" starttime="20210422 10:52:50.202" endtime="20210422 10:52:50.236"/>
</kw>
<msg timestamp="20210422 10:52:50.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:50.202" endtime="20210422 10:52:50.236"/>
</kw>
<status status="PASS" starttime="20210422 10:52:50.200" endtime="20210422 10:52:50.237"/>
</kw>
<status status="PASS" starttime="20210422 10:52:50.199" endtime="20210422 10:52:50.237"/>
</kw>
<status status="PASS" starttime="20210422 10:52:50.186" endtime="20210422 10:52:50.237"/>
</kw>
<status status="PASS" starttime="20210422 10:52:50.185" endtime="20210422 10:52:50.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:50.241" level="INFO">Running command 'ozone sh bucket link 95581-source/bucket2 95581-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:52:57.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:52:57.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:52:50.239" endtime="20210422 10:52:57.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:52:57.112" level="INFO"/>
<status status="PASS" starttime="20210422 10:52:57.111" endtime="20210422 10:52:57.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:52:57.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:52:57.113" endtime="20210422 10:52:57.114"/>
</kw>
<status status="PASS" starttime="20210422 10:52:50.238" endtime="20210422 10:52:57.115"/>
</kw>
<msg timestamp="20210422 10:52:57.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:52:50.238" endtime="20210422 10:52:57.115"/>
</kw>
<status status="PASS" starttime="20210422 10:52:50.237" endtime="20210422 10:52:57.115"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:52:57.119" level="INFO">Running command 'ozone sh bucket create 95581-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:03.831" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 10:53:03.831" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210422 10:52:57.116" endtime="20210422 10:53:03.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:03.833" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210422 10:53:03.832" endtime="20210422 10:53:03.833"/>
</kw>
<msg timestamp="20210422 10:53:03.833" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210422 10:52:57.115" endtime="20210422 10:53:03.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:53:03.834" endtime="20210422 10:53:03.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:03.839" level="INFO">Running command 'ozone sh bucket create 95581-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:10.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:10.921" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:03.837" endtime="20210422 10:53:10.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:10.923" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:10.922" endtime="20210422 10:53:10.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:10.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:10.923" endtime="20210422 10:53:10.924"/>
</kw>
<status status="PASS" starttime="20210422 10:53:03.836" endtime="20210422 10:53:10.925"/>
</kw>
<msg timestamp="20210422 10:53:10.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:03.835" endtime="20210422 10:53:10.925"/>
</kw>
<status status="PASS" starttime="20210422 10:53:03.834" endtime="20210422 10:53:10.925"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:10.929" level="INFO">Running command 'ozone sh bucket link 95581-source/bucket1 95581-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:17.646" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 10:53:17.647" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210422 10:53:10.927" endtime="20210422 10:53:17.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:17.649" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210422 10:53:17.648" endtime="20210422 10:53:17.649"/>
</kw>
<msg timestamp="20210422 10:53:17.650" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210422 10:53:10.926" endtime="20210422 10:53:17.650"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:53:17.651" endtime="20210422 10:53:17.651"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:52:50.184" endtime="20210422 10:53:17.652"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:17.662" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:17.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:17.665" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:53:17.659" endtime="20210422 10:53:17.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:17.667" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:53:17.666" endtime="20210422 10:53:17.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:17.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:17.668" endtime="20210422 10:53:17.668"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.658" endtime="20210422 10:53:17.669"/>
</kw>
<msg timestamp="20210422 10:53:17.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:17.658" endtime="20210422 10:53:17.669"/>
</kw>
<msg timestamp="20210422 10:53:17.669" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:53:17.657" endtime="20210422 10:53:17.669"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:53:17.670" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:53:17.669" endtime="20210422 10:53:17.670"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:17.675" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:17.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:17.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:17.673" endtime="20210422 10:53:17.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:17.686" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:17.684" endtime="20210422 10:53:17.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:17.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:17.686" endtime="20210422 10:53:17.687"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.672" endtime="20210422 10:53:17.687"/>
</kw>
<msg timestamp="20210422 10:53:17.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:17.672" endtime="20210422 10:53:17.688"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.671" endtime="20210422 10:53:17.688"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.670" endtime="20210422 10:53:17.688"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.656" endtime="20210422 10:53:17.689"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.655" endtime="20210422 10:53:17.689"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:17.694" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:17.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:17.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:17.691" endtime="20210422 10:53:17.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:17.700" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:17.699" endtime="20210422 10:53:17.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:17.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:17.700" endtime="20210422 10:53:17.701"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.691" endtime="20210422 10:53:17.702"/>
</kw>
<msg timestamp="20210422 10:53:17.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:17.691" endtime="20210422 10:53:17.702"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.690" endtime="20210422 10:53:17.702"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:17.707" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:17.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:17.712" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:53:17.705" endtime="20210422 10:53:17.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:17.715" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:53:17.714" endtime="20210422 10:53:17.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:17.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:17.715" endtime="20210422 10:53:17.716"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.705" endtime="20210422 10:53:17.716"/>
</kw>
<msg timestamp="20210422 10:53:17.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:17.704" endtime="20210422 10:53:17.716"/>
</kw>
<msg timestamp="20210422 10:53:17.717" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:53:17.703" endtime="20210422 10:53:17.717"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:53:17.718" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:53:17.717" endtime="20210422 10:53:17.718"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:17.723" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:17.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:17.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:17.720" endtime="20210422 10:53:17.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:17.731" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:17.730" endtime="20210422 10:53:17.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:17.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:17.731" endtime="20210422 10:53:17.732"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.719" endtime="20210422 10:53:17.732"/>
</kw>
<msg timestamp="20210422 10:53:17.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:17.719" endtime="20210422 10:53:17.732"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.718" endtime="20210422 10:53:17.733"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.718" endtime="20210422 10:53:17.733"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.703" endtime="20210422 10:53:17.733"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.702" endtime="20210422 10:53:17.733"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:17.736" level="INFO">Running command 'ozone sh key list 95581-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:25.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:25.750" level="INFO">${output} = {
  "volumeName" : "95581-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-22T10:43:12.893Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210422 10:53:17.734" endtime="20210422 10:53:25.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:25.755" level="INFO">{
  "volumeName" : "95581-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-22T10:43:12.893Z",
  "modificationTime" : "2021-04-22T10:46:15.276Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210422 10:53:25.751" endtime="20210422 10:53:25.755"/>
</kw>
<msg timestamp="20210422 10:53:25.755" level="INFO">${result} = {
  "volumeName" : "95581-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-22T10:43:12.893Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210422 10:53:17.733" endtime="20210422 10:53:25.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:53:25.756" endtime="20210422 10:53:25.756"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.689" endtime="20210422 10:53:25.756"/>
</kw>
<status status="PASS" starttime="20210422 10:53:17.689" endtime="20210422 10:53:25.757"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:53:17.654" endtime="20210422 10:53:25.757"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:25.778" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:25.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:25.782" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:53:25.772" endtime="20210422 10:53:25.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:25.784" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:53:25.783" endtime="20210422 10:53:25.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:25.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:25.784" endtime="20210422 10:53:25.785"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.770" endtime="20210422 10:53:25.785"/>
</kw>
<msg timestamp="20210422 10:53:25.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:25.769" endtime="20210422 10:53:25.785"/>
</kw>
<msg timestamp="20210422 10:53:25.786" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:53:25.767" endtime="20210422 10:53:25.786"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:53:25.791" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:53:25.787" endtime="20210422 10:53:25.791"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:25.810" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:25.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:25.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:25.805" endtime="20210422 10:53:25.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:25.825" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:25.824" endtime="20210422 10:53:25.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:25.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:25.826" endtime="20210422 10:53:25.827"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.802" endtime="20210422 10:53:25.828"/>
</kw>
<msg timestamp="20210422 10:53:25.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:25.801" endtime="20210422 10:53:25.829"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.793" endtime="20210422 10:53:25.829"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.792" endtime="20210422 10:53:25.829"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.766" endtime="20210422 10:53:25.830"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.766" endtime="20210422 10:53:25.830"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:25.835" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:25.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:25.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:25.833" endtime="20210422 10:53:25.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:25.841" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:25.840" endtime="20210422 10:53:25.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:25.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:25.841" endtime="20210422 10:53:25.842"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.832" endtime="20210422 10:53:25.842"/>
</kw>
<msg timestamp="20210422 10:53:25.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:25.832" endtime="20210422 10:53:25.843"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.831" endtime="20210422 10:53:25.843"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:25.850" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:25.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:25.854" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:53:25.848" endtime="20210422 10:53:25.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:25.856" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:53:25.854" endtime="20210422 10:53:25.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:25.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:25.856" endtime="20210422 10:53:25.857"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.847" endtime="20210422 10:53:25.858"/>
</kw>
<msg timestamp="20210422 10:53:25.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:25.846" endtime="20210422 10:53:25.858"/>
</kw>
<msg timestamp="20210422 10:53:25.859" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:53:25.845" endtime="20210422 10:53:25.859"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:53:25.860" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:53:25.859" endtime="20210422 10:53:25.860"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:25.867" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:25.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:25.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:25.864" endtime="20210422 10:53:25.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:25.885" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:25.884" endtime="20210422 10:53:25.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:25.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:25.886" endtime="20210422 10:53:25.887"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.863" endtime="20210422 10:53:25.887"/>
</kw>
<msg timestamp="20210422 10:53:25.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:25.862" endtime="20210422 10:53:25.888"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.861" endtime="20210422 10:53:25.888"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.860" endtime="20210422 10:53:25.888"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.844" endtime="20210422 10:53:25.889"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.843" endtime="20210422 10:53:25.889"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:25.895" level="INFO">Running command 'ozone sh key list 95581-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:32.462" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 10:53:32.462" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 95581-target unreadable-link null</msg>
<status status="PASS" starttime="20210422 10:53:25.891" endtime="20210422 10:53:32.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:32.464" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 95581-target unreadable-link null</msg>
<status status="PASS" starttime="20210422 10:53:32.463" endtime="20210422 10:53:32.464"/>
</kw>
<msg timestamp="20210422 10:53:32.465" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 95581-target unreadable-link null</msg>
<status status="PASS" starttime="20210422 10:53:25.889" endtime="20210422 10:53:32.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:53:32.466" endtime="20210422 10:53:32.466"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.831" endtime="20210422 10:53:32.467"/>
</kw>
<status status="PASS" starttime="20210422 10:53:25.830" endtime="20210422 10:53:32.467"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:53:25.762" endtime="20210422 10:53:32.467"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:32.478" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:32.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:32.482" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:53:32.475" endtime="20210422 10:53:32.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:32.484" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:53:32.484" endtime="20210422 10:53:32.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:32.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:32.485" endtime="20210422 10:53:32.486"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.474" endtime="20210422 10:53:32.486"/>
</kw>
<msg timestamp="20210422 10:53:32.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:32.474" endtime="20210422 10:53:32.486"/>
</kw>
<msg timestamp="20210422 10:53:32.487" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:53:32.473" endtime="20210422 10:53:32.487"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:53:32.488" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:53:32.487" endtime="20210422 10:53:32.488"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:32.493" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:32.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:32.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:32.491" endtime="20210422 10:53:32.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:32.506" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:32.505" endtime="20210422 10:53:32.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:32.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:32.506" endtime="20210422 10:53:32.507"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.491" endtime="20210422 10:53:32.507"/>
</kw>
<msg timestamp="20210422 10:53:32.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:32.490" endtime="20210422 10:53:32.508"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.489" endtime="20210422 10:53:32.508"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.488" endtime="20210422 10:53:32.508"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.471" endtime="20210422 10:53:32.508"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.470" endtime="20210422 10:53:32.508"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:32.514" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:32.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:32.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:32.512" endtime="20210422 10:53:32.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:32.521" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:32.520" endtime="20210422 10:53:32.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:32.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:32.521" endtime="20210422 10:53:32.522"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.511" endtime="20210422 10:53:32.522"/>
</kw>
<msg timestamp="20210422 10:53:32.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:32.511" endtime="20210422 10:53:32.522"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.510" endtime="20210422 10:53:32.523"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:32.527" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:32.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:32.530" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:53:32.525" endtime="20210422 10:53:32.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:32.531" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:53:32.530" endtime="20210422 10:53:32.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:32.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:32.531" endtime="20210422 10:53:32.532"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.525" endtime="20210422 10:53:32.533"/>
</kw>
<msg timestamp="20210422 10:53:32.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:32.524" endtime="20210422 10:53:32.533"/>
</kw>
<msg timestamp="20210422 10:53:32.533" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:53:32.524" endtime="20210422 10:53:32.533"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:53:32.534" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:53:32.533" endtime="20210422 10:53:32.534"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:32.538" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:32.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:32.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:32.536" endtime="20210422 10:53:32.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:32.548" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:32.547" endtime="20210422 10:53:32.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:32.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:32.548" endtime="20210422 10:53:32.549"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.536" endtime="20210422 10:53:32.550"/>
</kw>
<msg timestamp="20210422 10:53:32.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:32.535" endtime="20210422 10:53:32.550"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.535" endtime="20210422 10:53:32.550"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.534" endtime="20210422 10:53:32.550"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.523" endtime="20210422 10:53:32.551"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.523" endtime="20210422 10:53:32.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:32.555" level="INFO">Running command 'ozone sh bucket info 95581-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:39.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:39.570" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210422 10:53:32.553" endtime="20210422 10:53:39.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:39.572" level="INFO">{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:46:39.638Z",
  "modificationTime" : "2021-04-22T10:47:12.135Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210422 10:53:39.571" endtime="20210422 10:53:39.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:39.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:39.572" endtime="20210422 10:53:39.573"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.552" endtime="20210422 10:53:39.574"/>
</kw>
<msg timestamp="20210422 10:53:39.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:32.552" endtime="20210422 10:53:39.574"/>
</kw>
<msg timestamp="20210422 10:53:39.575" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210422 10:53:32.551" endtime="20210422 10:53:39.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:53:39.576" endtime="20210422 10:53:39.576"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:53:39.577" endtime="20210422 10:53:39.577"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:39.581" level="INFO">Running command 'ozone sh key list 95581-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:46.574" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 10:53:46.574" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 95581-source unreadable-bucket </msg>
<status status="PASS" starttime="20210422 10:53:39.578" endtime="20210422 10:53:46.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:46.575" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 95581-source unreadable-bucket </msg>
<status status="PASS" starttime="20210422 10:53:46.574" endtime="20210422 10:53:46.575"/>
</kw>
<msg timestamp="20210422 10:53:46.576" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 95581-source unreadable-bucket </msg>
<status status="PASS" starttime="20210422 10:53:39.577" endtime="20210422 10:53:46.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:53:46.576" endtime="20210422 10:53:46.576"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.509" endtime="20210422 10:53:46.577"/>
</kw>
<status status="PASS" starttime="20210422 10:53:32.509" endtime="20210422 10:53:46.577"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:53:32.469" endtime="20210422 10:53:46.577"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:46.590" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:46.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:46.594" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:53:46.587" endtime="20210422 10:53:46.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:46.596" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:53:46.595" endtime="20210422 10:53:46.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:46.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:46.597" endtime="20210422 10:53:46.598"/>
</kw>
<status status="PASS" starttime="20210422 10:53:46.585" endtime="20210422 10:53:46.599"/>
</kw>
<msg timestamp="20210422 10:53:46.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:46.585" endtime="20210422 10:53:46.599"/>
</kw>
<msg timestamp="20210422 10:53:46.600" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:53:46.584" endtime="20210422 10:53:46.600"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:53:46.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:53:46.600" endtime="20210422 10:53:46.601"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:46.609" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:46.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:46.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:46.605" endtime="20210422 10:53:46.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:46.620" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:46.619" endtime="20210422 10:53:46.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:46.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:46.621" endtime="20210422 10:53:46.622"/>
</kw>
<status status="PASS" starttime="20210422 10:53:46.604" endtime="20210422 10:53:46.622"/>
</kw>
<msg timestamp="20210422 10:53:46.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:46.603" endtime="20210422 10:53:46.623"/>
</kw>
<status status="PASS" starttime="20210422 10:53:46.601" endtime="20210422 10:53:46.623"/>
</kw>
<status status="PASS" starttime="20210422 10:53:46.601" endtime="20210422 10:53:46.623"/>
</kw>
<status status="PASS" starttime="20210422 10:53:46.582" endtime="20210422 10:53:46.624"/>
</kw>
<status status="PASS" starttime="20210422 10:53:46.581" endtime="20210422 10:53:46.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:46.629" level="INFO">Running command 'ozone sh bucket link 95581-target/loop1 95581-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:53.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:53.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:46.627" endtime="20210422 10:53:53.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:53.347" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:53.345" endtime="20210422 10:53:53.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:53.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:53.347" endtime="20210422 10:53:53.348"/>
</kw>
<status status="PASS" starttime="20210422 10:53:46.626" endtime="20210422 10:53:53.348"/>
</kw>
<msg timestamp="20210422 10:53:53.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:46.626" endtime="20210422 10:53:53.348"/>
</kw>
<status status="PASS" starttime="20210422 10:53:46.624" endtime="20210422 10:53:53.349"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:53.356" level="INFO">Running command 'ozone sh bucket link 95581-target/loop2 95581-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:53:58.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:53:58.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:53.352" endtime="20210422 10:53:58.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:53:58.672" level="INFO"/>
<status status="PASS" starttime="20210422 10:53:58.670" endtime="20210422 10:53:58.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:53:58.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:53:58.672" endtime="20210422 10:53:58.674"/>
</kw>
<status status="PASS" starttime="20210422 10:53:53.351" endtime="20210422 10:53:58.675"/>
</kw>
<msg timestamp="20210422 10:53:58.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:53.350" endtime="20210422 10:53:58.675"/>
</kw>
<status status="PASS" starttime="20210422 10:53:53.349" endtime="20210422 10:53:58.676"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:53:58.682" level="INFO">Running command 'ozone sh bucket link 95581-target/loop3 95581-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:54:06.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:54:06.356" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:53:58.679" endtime="20210422 10:54:06.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:54:06.358" level="INFO"/>
<status status="PASS" starttime="20210422 10:54:06.356" endtime="20210422 10:54:06.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:54:06.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:54:06.359" endtime="20210422 10:54:06.360"/>
</kw>
<status status="PASS" starttime="20210422 10:53:58.678" endtime="20210422 10:54:06.360"/>
</kw>
<msg timestamp="20210422 10:54:06.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:53:58.678" endtime="20210422 10:54:06.361"/>
</kw>
<status status="PASS" starttime="20210422 10:53:58.676" endtime="20210422 10:54:06.361"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:54:06.366" level="INFO">Running command 'ozone sh key list 95581-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:54:13.208" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 10:54:13.208" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210422 10:54:06.363" endtime="20210422 10:54:13.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:54:13.209" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210422 10:54:13.208" endtime="20210422 10:54:13.209"/>
</kw>
<msg timestamp="20210422 10:54:13.210" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210422 10:54:06.362" endtime="20210422 10:54:13.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:54:13.210" endtime="20210422 10:54:13.211"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:53:46.579" endtime="20210422 10:54:13.211"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:54:13.222" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:54:13.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:54:13.226" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:54:13.219" endtime="20210422 10:54:13.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:54:13.228" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:54:13.227" endtime="20210422 10:54:13.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:54:13.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:54:13.228" endtime="20210422 10:54:13.229"/>
</kw>
<status status="PASS" starttime="20210422 10:54:13.218" endtime="20210422 10:54:13.230"/>
</kw>
<msg timestamp="20210422 10:54:13.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:54:13.218" endtime="20210422 10:54:13.230"/>
</kw>
<msg timestamp="20210422 10:54:13.231" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:54:13.217" endtime="20210422 10:54:13.231"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:54:13.232" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:54:13.231" endtime="20210422 10:54:13.232"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:54:13.238" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:54:13.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:54:13.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:54:13.236" endtime="20210422 10:54:13.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:54:13.250" level="INFO"/>
<status status="PASS" starttime="20210422 10:54:13.249" endtime="20210422 10:54:13.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:54:13.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:54:13.251" endtime="20210422 10:54:13.252"/>
</kw>
<status status="PASS" starttime="20210422 10:54:13.235" endtime="20210422 10:54:13.252"/>
</kw>
<msg timestamp="20210422 10:54:13.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:54:13.234" endtime="20210422 10:54:13.252"/>
</kw>
<status status="PASS" starttime="20210422 10:54:13.233" endtime="20210422 10:54:13.253"/>
</kw>
<status status="PASS" starttime="20210422 10:54:13.232" endtime="20210422 10:54:13.253"/>
</kw>
<status status="PASS" starttime="20210422 10:54:13.215" endtime="20210422 10:54:13.253"/>
</kw>
<status status="PASS" starttime="20210422 10:54:13.214" endtime="20210422 10:54:13.253"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:54:13.260" level="INFO">Running command 'ozone sh bucket link 95581-source/bucket1 95581-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:54:17.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:54:17.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:54:13.257" endtime="20210422 10:54:17.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:54:17.973" level="INFO"/>
<status status="PASS" starttime="20210422 10:54:17.973" endtime="20210422 10:54:17.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:54:17.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:54:17.974" endtime="20210422 10:54:17.974"/>
</kw>
<status status="PASS" starttime="20210422 10:54:13.256" endtime="20210422 10:54:17.975"/>
</kw>
<msg timestamp="20210422 10:54:17.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:54:13.255" endtime="20210422 10:54:17.975"/>
</kw>
<status status="PASS" starttime="20210422 10:54:13.254" endtime="20210422 10:54:17.975"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:54:17.980" level="INFO">Running command 'ozone sh key put 95581-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:56:13.214" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210422 10:54:17.977" endtime="20210422 10:56:13.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210422 10:56:13.215" endtime="20210422 10:56:13.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210422 10:56:13.215" endtime="20210422 10:56:13.215"/>
</kw>
<status status="FAIL" starttime="20210422 10:54:17.976" endtime="20210422 10:56:13.215"/>
</kw>
<msg timestamp="20210422 10:56:13.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210422 10:54:17.976" endtime="20210422 10:56:13.220"/>
</kw>
<status status="FAIL" starttime="20210422 10:54:17.975" endtime="20210422 10:56:13.220"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210422 10:56:13.221" endtime="20210422 10:56:13.221"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210422 10:54:13.213" endtime="20210422 10:56:13.221">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:56:13.230" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:56:13.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:56:13.234" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:56:13.228" endtime="20210422 10:56:13.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:56:13.236" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:56:13.235" endtime="20210422 10:56:13.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:56:13.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:56:13.236" endtime="20210422 10:56:13.238"/>
</kw>
<status status="PASS" starttime="20210422 10:56:13.227" endtime="20210422 10:56:13.238"/>
</kw>
<msg timestamp="20210422 10:56:13.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:56:13.227" endtime="20210422 10:56:13.239"/>
</kw>
<msg timestamp="20210422 10:56:13.239" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:56:13.226" endtime="20210422 10:56:13.239"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:56:13.241" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:56:13.240" endtime="20210422 10:56:13.241"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:56:13.247" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:56:13.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:56:13.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:56:13.244" endtime="20210422 10:56:13.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:56:13.260" level="INFO"/>
<status status="PASS" starttime="20210422 10:56:13.256" endtime="20210422 10:56:13.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:56:13.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:56:13.260" endtime="20210422 10:56:13.261"/>
</kw>
<status status="PASS" starttime="20210422 10:56:13.243" endtime="20210422 10:56:13.262"/>
</kw>
<msg timestamp="20210422 10:56:13.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:56:13.243" endtime="20210422 10:56:13.262"/>
</kw>
<status status="PASS" starttime="20210422 10:56:13.242" endtime="20210422 10:56:13.262"/>
</kw>
<status status="PASS" starttime="20210422 10:56:13.241" endtime="20210422 10:56:13.262"/>
</kw>
<status status="PASS" starttime="20210422 10:56:13.225" endtime="20210422 10:56:13.263"/>
</kw>
<status status="PASS" starttime="20210422 10:56:13.224" endtime="20210422 10:56:13.263"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:56:13.267" level="INFO">Running command 'ozone sh bucket delete 95581-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:56:20.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:56:20.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:56:13.265" endtime="20210422 10:56:20.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:56:20.005" level="INFO"/>
<status status="PASS" starttime="20210422 10:56:20.004" endtime="20210422 10:56:20.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:56:20.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:56:20.005" endtime="20210422 10:56:20.007"/>
</kw>
<status status="PASS" starttime="20210422 10:56:13.264" endtime="20210422 10:56:20.007"/>
</kw>
<msg timestamp="20210422 10:56:20.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:56:13.264" endtime="20210422 10:56:20.007"/>
</kw>
<status status="PASS" starttime="20210422 10:56:13.263" endtime="20210422 10:56:20.008"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:56:20.014" level="INFO">Running command 'ozone sh bucket list 95581-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:56:26.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:56:26.607" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T...</msg>
<status status="PASS" starttime="20210422 10:56:20.011" endtime="20210422 10:56:26.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:56:26.608" level="INFO">{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:53:10.732Z",
  "modificationTime" : "2021-04-22T10:53:10.732Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:47:18.910Z",
  "modificationTime" : "2021-04-22T10:47:18.910Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:46:39.638Z",
  "modificationTime" : "2021-04-22T10:47:12.135Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:52:57.025Z",
  "modificationTime" : "2021-04-22T10:52:57.025Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:54:17.725Z",
  "modificationTime" : "2021-04-22T10:54:17.725Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:54:06.136Z",
  "modificationTime" : "2021-04-22T10:54:06.136Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:53:53.092Z",
  "modificationTime" : "2021-04-22T10:53:53.092Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:53:58.446Z",
  "modificationTime" : "2021-04-22T10:53:58.446Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:46:27.128Z",
  "modificationTime" : "2021-04-22T10:47:07.202Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T10:46:33.302Z",
  "modificationTime" : "2021-04-22T10:46:33.302Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "95581-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210422 10:56:26.607" endtime="20210422 10:56:26.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:56:26.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:56:26.608" endtime="20210422 10:56:26.609"/>
</kw>
<status status="PASS" starttime="20210422 10:56:20.010" endtime="20210422 10:56:26.610"/>
</kw>
<msg timestamp="20210422 10:56:26.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:56:20.009" endtime="20210422 10:56:26.610"/>
</kw>
<msg timestamp="20210422 10:56:26.610" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "95581-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-22T...</msg>
<status status="PASS" starttime="20210422 10:56:20.008" endtime="20210422 10:56:26.610"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:56:26.611" endtime="20210422 10:56:26.611"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:56:26.615" level="INFO">Running command 'ozone sh key list 95581-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:56:31.540" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:56:31.540" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210422 10:56:26.613" endtime="20210422 10:56:31.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:56:31.542" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210422 10:56:31.541" endtime="20210422 10:56:31.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:56:31.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:56:31.542" endtime="20210422 10:56:31.543"/>
</kw>
<status status="PASS" starttime="20210422 10:56:26.612" endtime="20210422 10:56:31.543"/>
</kw>
<msg timestamp="20210422 10:56:31.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:56:26.612" endtime="20210422 10:56:31.543"/>
</kw>
<msg timestamp="20210422 10:56:31.544" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210422 10:56:26.611" endtime="20210422 10:56:31.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:56:31.544" endtime="20210422 10:56:31.544"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:56:13.222" endtime="20210422 10:56:31.545"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210422 10:42:45.278" endtime="20210422 10:56:31.547"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210422 10:56:31.586" level="INFO">${random} = 59746</msg>
<status status="PASS" starttime="20210422 10:56:31.586" endtime="20210422 10:56:31.586"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:56:31.587" level="INFO">${prefix} = 59746</msg>
<status status="PASS" starttime="20210422 10:56:31.586" endtime="20210422 10:56:31.587"/>
</kw>
<status status="PASS" starttime="20210422 10:56:31.585" endtime="20210422 10:56:31.587"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:56:31.596" level="INFO">Running command 'ozone sh volume info /59746-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:56:37.867" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 10:56:37.867" level="INFO">${output} = VOLUME_NOT_FOUND Volume 59746-rpcbasic is not found</msg>
<status status="PASS" starttime="20210422 10:56:31.593" endtime="20210422 10:56:37.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:56:37.868" level="INFO">VOLUME_NOT_FOUND Volume 59746-rpcbasic is not found</msg>
<status status="PASS" starttime="20210422 10:56:37.868" endtime="20210422 10:56:37.868"/>
</kw>
<msg timestamp="20210422 10:56:37.869" level="INFO">${result} = VOLUME_NOT_FOUND Volume 59746-rpcbasic is not found</msg>
<status status="PASS" starttime="20210422 10:56:31.591" endtime="20210422 10:56:37.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:56:37.869" endtime="20210422 10:56:37.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:56:37.874" level="INFO">Running command 'ozone sh volume create /59746-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:56:44.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:56:44.878" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:56:37.871" endtime="20210422 10:56:44.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:56:44.880" level="INFO"/>
<status status="PASS" starttime="20210422 10:56:44.879" endtime="20210422 10:56:44.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:56:44.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:56:44.880" endtime="20210422 10:56:44.881"/>
</kw>
<status status="PASS" starttime="20210422 10:56:37.871" endtime="20210422 10:56:44.881"/>
</kw>
<msg timestamp="20210422 10:56:44.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:56:37.871" endtime="20210422 10:56:44.882"/>
</kw>
<msg timestamp="20210422 10:56:44.882" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210422 10:56:37.870" endtime="20210422 10:56:44.882"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:56:44.883" endtime="20210422 10:56:44.883"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:56:44.890" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="59746-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:56:52.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:56:52.687" level="INFO">${output} = {
  "metadata": {},
  "name": "59746-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210422 10:56:44.887" endtime="20210422 10:56:52.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:56:52.688" level="INFO">{
  "metadata": {},
  "name": "59746-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-22T10:56:44.600Z",
  "modificationTime": "2021-04-22T10:56:44.600Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210422 10:56:52.687" endtime="20210422 10:56:52.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:56:52.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:56:52.688" endtime="20210422 10:56:52.689"/>
</kw>
<status status="PASS" starttime="20210422 10:56:44.886" endtime="20210422 10:56:52.689"/>
</kw>
<msg timestamp="20210422 10:56:52.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:56:44.886" endtime="20210422 10:56:52.690"/>
</kw>
<msg timestamp="20210422 10:56:52.690" level="INFO">${result} = {
  "metadata": {},
  "name": "59746-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210422 10:56:44.884" endtime="20210422 10:56:52.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:56:52.690" endtime="20210422 10:56:52.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:56:52.695" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="59746-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:57:00.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:57:00.293" level="INFO">${output} = {
  "metadata": {},
  "name": "59746-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210422 10:56:52.693" endtime="20210422 10:57:00.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:57:00.294" level="INFO">{
  "metadata": {},
  "name": "59746-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-22T10:56:44.600Z",
  "modificationTime": "2021-04-22T10:56:44.600Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210422 10:57:00.293" endtime="20210422 10:57:00.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:57:00.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:57:00.295" endtime="20210422 10:57:00.296"/>
</kw>
<status status="PASS" starttime="20210422 10:56:52.692" endtime="20210422 10:57:00.296"/>
</kw>
<msg timestamp="20210422 10:57:00.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:56:52.692" endtime="20210422 10:57:00.297"/>
</kw>
<msg timestamp="20210422 10:57:00.297" level="INFO">${result} = {
  "metadata": {},
  "name": "59746-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210422 10:56:52.691" endtime="20210422 10:57:00.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 10:57:00.298" endtime="20210422 10:57:00.299"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:57:00.304" level="INFO">Running command 'ozone sh volume setquota /59746-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:57:07.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:57:07.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:57:00.302" endtime="20210422 10:57:07.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:57:07.157" level="INFO"/>
<status status="PASS" starttime="20210422 10:57:07.156" endtime="20210422 10:57:07.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:57:07.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:57:07.158" endtime="20210422 10:57:07.158"/>
</kw>
<status status="PASS" starttime="20210422 10:57:00.301" endtime="20210422 10:57:07.159"/>
</kw>
<msg timestamp="20210422 10:57:07.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:57:00.300" endtime="20210422 10:57:07.159"/>
</kw>
<status status="PASS" starttime="20210422 10:57:00.299" endtime="20210422 10:57:07.159"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:57:07.173" level="INFO">Running command 'ozone sh volume info /59746-rpcbasic | jq -r '. | select(.name=="59746-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:57:14.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:57:14.479" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210422 10:57:07.167" endtime="20210422 10:57:14.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:57:14.480" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210422 10:57:14.479" endtime="20210422 10:57:14.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:57:14.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:57:14.482" endtime="20210422 10:57:14.482"/>
</kw>
<status status="PASS" starttime="20210422 10:57:07.167" endtime="20210422 10:57:14.483"/>
</kw>
<msg timestamp="20210422 10:57:14.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:57:07.166" endtime="20210422 10:57:14.483"/>
</kw>
<msg timestamp="20210422 10:57:14.483" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210422 10:57:07.159" endtime="20210422 10:57:14.483"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:57:14.484" endtime="20210422 10:57:14.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:57:14.491" level="INFO">Running command 'ozone sh bucket create /59746-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:57:20.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:57:20.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:57:14.487" endtime="20210422 10:57:20.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:57:20.652" level="INFO"/>
<status status="PASS" starttime="20210422 10:57:20.651" endtime="20210422 10:57:20.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:57:20.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:57:20.652" endtime="20210422 10:57:20.653"/>
</kw>
<status status="PASS" starttime="20210422 10:57:14.487" endtime="20210422 10:57:20.653"/>
</kw>
<msg timestamp="20210422 10:57:20.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:57:14.486" endtime="20210422 10:57:20.654"/>
</kw>
<status status="PASS" starttime="20210422 10:57:14.485" endtime="20210422 10:57:20.654"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:57:20.658" level="INFO">Running command 'ozone sh bucket info /59746-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:57:26.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:57:26.734" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210422 10:57:20.656" endtime="20210422 10:57:26.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:57:26.736" level="INFO">DISK</msg>
<status status="PASS" starttime="20210422 10:57:26.735" endtime="20210422 10:57:26.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:57:26.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:57:26.736" endtime="20210422 10:57:26.737"/>
</kw>
<status status="PASS" starttime="20210422 10:57:20.655" endtime="20210422 10:57:26.737"/>
</kw>
<msg timestamp="20210422 10:57:26.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:57:20.655" endtime="20210422 10:57:26.737"/>
</kw>
<msg timestamp="20210422 10:57:26.738" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210422 10:57:20.654" endtime="20210422 10:57:26.738"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:57:26.738" endtime="20210422 10:57:26.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:57:26.744" level="INFO">Running command 'ozone sh bucket info /59746-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:57:32.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:57:32.478" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210422 10:57:26.741" endtime="20210422 10:57:32.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:57:32.479" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210422 10:57:32.479" endtime="20210422 10:57:32.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:57:32.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:57:32.480" endtime="20210422 10:57:32.480"/>
</kw>
<status status="PASS" starttime="20210422 10:57:26.740" endtime="20210422 10:57:32.481"/>
</kw>
<msg timestamp="20210422 10:57:32.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:57:26.740" endtime="20210422 10:57:32.481"/>
</kw>
<msg timestamp="20210422 10:57:32.481" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210422 10:57:26.738" endtime="20210422 10:57:32.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:57:32.482" endtime="20210422 10:57:32.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:57:32.488" level="INFO">Running command 'ozone sh bucket info /59746-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:57:37.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:57:37.633" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210422 10:57:32.485" endtime="20210422 10:57:37.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:57:37.636" level="INFO">100</msg>
<status status="PASS" starttime="20210422 10:57:37.635" endtime="20210422 10:57:37.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:57:37.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:57:37.637" endtime="20210422 10:57:37.638"/>
</kw>
<status status="PASS" starttime="20210422 10:57:32.484" endtime="20210422 10:57:37.639"/>
</kw>
<msg timestamp="20210422 10:57:37.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:57:32.483" endtime="20210422 10:57:37.640"/>
</kw>
<msg timestamp="20210422 10:57:37.640" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210422 10:57:32.482" endtime="20210422 10:57:37.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:57:37.641" endtime="20210422 10:57:37.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:57:37.648" level="INFO">Running command 'ozone sh bucket setquota /59746-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:57:44.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:57:44.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:57:37.646" endtime="20210422 10:57:44.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:57:44.368" level="INFO"/>
<status status="PASS" starttime="20210422 10:57:44.367" endtime="20210422 10:57:44.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:57:44.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:57:44.368" endtime="20210422 10:57:44.369"/>
</kw>
<status status="PASS" starttime="20210422 10:57:37.644" endtime="20210422 10:57:44.369"/>
</kw>
<msg timestamp="20210422 10:57:44.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:57:37.644" endtime="20210422 10:57:44.369"/>
</kw>
<status status="PASS" starttime="20210422 10:57:37.642" endtime="20210422 10:57:44.370"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:57:44.374" level="INFO">Running command 'ozone sh bucket info /59746-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:57:51.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:57:51.275" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210422 10:57:44.372" endtime="20210422 10:57:51.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:57:51.276" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210422 10:57:51.275" endtime="20210422 10:57:51.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:57:51.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:57:51.276" endtime="20210422 10:57:51.277"/>
</kw>
<status status="PASS" starttime="20210422 10:57:44.371" endtime="20210422 10:57:51.278"/>
</kw>
<msg timestamp="20210422 10:57:51.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:57:44.371" endtime="20210422 10:57:51.278"/>
</kw>
<msg timestamp="20210422 10:57:51.279" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210422 10:57:44.370" endtime="20210422 10:57:51.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:57:51.280" endtime="20210422 10:57:51.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:57:51.286" level="INFO">Running command 'ozone sh bucket info /59746-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:57:58.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:57:58.664" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210422 10:57:51.283" endtime="20210422 10:57:58.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:57:58.667" level="INFO">1000</msg>
<status status="PASS" starttime="20210422 10:57:58.665" endtime="20210422 10:57:58.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:57:58.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:57:58.668" endtime="20210422 10:57:58.669"/>
</kw>
<status status="PASS" starttime="20210422 10:57:51.282" endtime="20210422 10:57:58.670"/>
</kw>
<msg timestamp="20210422 10:57:58.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:57:51.281" endtime="20210422 10:57:58.670"/>
</kw>
<msg timestamp="20210422 10:57:58.671" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210422 10:57:51.280" endtime="20210422 10:57:58.671"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:57:58.671" endtime="20210422 10:57:58.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:57:58.683" level="INFO">Running command 'ozone sh bucket list /59746-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:58:06.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:58:06.114" level="INFO">${output} = 59746-rpcbasic</msg>
<status status="PASS" starttime="20210422 10:57:58.680" endtime="20210422 10:58:06.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:58:06.116" level="INFO">59746-rpcbasic</msg>
<status status="PASS" starttime="20210422 10:58:06.115" endtime="20210422 10:58:06.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:58:06.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:58:06.116" endtime="20210422 10:58:06.117"/>
</kw>
<status status="PASS" starttime="20210422 10:57:58.679" endtime="20210422 10:58:06.118"/>
</kw>
<msg timestamp="20210422 10:58:06.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:57:58.678" endtime="20210422 10:58:06.118"/>
</kw>
<msg timestamp="20210422 10:58:06.119" level="INFO">${result} = 59746-rpcbasic</msg>
<status status="PASS" starttime="20210422 10:57:58.672" endtime="20210422 10:58:06.119"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 10:58:06.119" endtime="20210422 10:58:06.120"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:58:06.130" level="INFO">Running command 'ozone sh key put /59746-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:01:17.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:01:17.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:58:06.127" endtime="20210422 11:01:17.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:01:17.019" level="INFO"/>
<status status="PASS" starttime="20210422 11:01:17.018" endtime="20210422 11:01:17.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:01:17.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:01:17.020" endtime="20210422 11:01:17.021"/>
</kw>
<status status="PASS" starttime="20210422 10:58:06.126" endtime="20210422 11:01:17.022"/>
</kw>
<msg timestamp="20210422 11:01:17.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:58:06.125" endtime="20210422 11:01:17.023"/>
</kw>
<status status="PASS" starttime="20210422 10:58:06.123" endtime="20210422 11:01:17.023"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:01:17.030" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:01:17.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:01:17.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:01:17.026" endtime="20210422 11:01:17.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:01:17.036" level="INFO"/>
<status status="PASS" starttime="20210422 11:01:17.035" endtime="20210422 11:01:17.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:01:17.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:01:17.036" endtime="20210422 11:01:17.037"/>
</kw>
<status status="PASS" starttime="20210422 11:01:17.025" endtime="20210422 11:01:17.038"/>
</kw>
<msg timestamp="20210422 11:01:17.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:01:17.025" endtime="20210422 11:01:17.038"/>
</kw>
<status status="PASS" starttime="20210422 11:01:17.023" endtime="20210422 11:01:17.038"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:01:17.042" level="INFO">Running command 'ozone sh key get /59746-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:01:27.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:01:27.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:01:17.040" endtime="20210422 11:01:27.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:01:27.745" level="INFO"/>
<status status="PASS" starttime="20210422 11:01:27.744" endtime="20210422 11:01:27.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:01:27.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:01:27.745" endtime="20210422 11:01:27.746"/>
</kw>
<status status="PASS" starttime="20210422 11:01:17.039" endtime="20210422 11:01:27.747"/>
</kw>
<msg timestamp="20210422 11:01:27.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:01:17.039" endtime="20210422 11:01:27.747"/>
</kw>
<status status="PASS" starttime="20210422 11:01:17.038" endtime="20210422 11:01:27.748"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:01:27.755" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:01:27.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:01:27.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:01:27.751" endtime="20210422 11:01:27.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:01:27.761" level="INFO"/>
<status status="PASS" starttime="20210422 11:01:27.760" endtime="20210422 11:01:27.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:01:27.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:01:27.761" endtime="20210422 11:01:27.762"/>
</kw>
<status status="PASS" starttime="20210422 11:01:27.750" endtime="20210422 11:01:27.762"/>
</kw>
<msg timestamp="20210422 11:01:27.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:01:27.750" endtime="20210422 11:01:27.762"/>
</kw>
<status status="PASS" starttime="20210422 11:01:27.748" endtime="20210422 11:01:27.762"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:01:27.767" level="INFO">Running command 'ozone sh key put -t RATIS /59746-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:01:31.588" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210422 11:01:27.765" endtime="20210422 11:01:31.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.590" endtime="20210422 11:01:31.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.591" endtime="20210422 11:01:31.592"/>
</kw>
<status status="FAIL" starttime="20210422 11:01:27.764" endtime="20210422 11:01:31.593"/>
</kw>
<msg timestamp="20210422 11:01:31.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210422 11:01:27.764" endtime="20210422 11:01:31.593"/>
</kw>
<status status="FAIL" starttime="20210422 11:01:27.763" endtime="20210422 11:01:31.594"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.594" endtime="20210422 11:01:31.594"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.595" endtime="20210422 11:01:31.595"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.595" endtime="20210422 11:01:31.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.595" endtime="20210422 11:01:31.595"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.596" endtime="20210422 11:01:31.596"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.596" endtime="20210422 11:01:31.596"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.596" endtime="20210422 11:01:31.597"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.598" endtime="20210422 11:01:31.598"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.598" endtime="20210422 11:01:31.599"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.599" endtime="20210422 11:01:31.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.600" endtime="20210422 11:01:31.600"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.600" endtime="20210422 11:01:31.601"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.601" endtime="20210422 11:01:31.601"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.602" endtime="20210422 11:01:31.602"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.602" endtime="20210422 11:01:31.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.604" endtime="20210422 11:01:31.604"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.605" endtime="20210422 11:01:31.605"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.605" endtime="20210422 11:01:31.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.606" endtime="20210422 11:01:31.606"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.606" endtime="20210422 11:01:31.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.606" endtime="20210422 11:01:31.607"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.607" endtime="20210422 11:01:31.608"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.609" endtime="20210422 11:01:31.609"/>
</kw>
<status status="FAIL" starttime="20210422 10:58:06.121" endtime="20210422 11:01:31.610"/>
</kw>
<status status="FAIL" starttime="20210422 10:58:06.120" endtime="20210422 11:01:31.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.610" endtime="20210422 11:01:31.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.612" endtime="20210422 11:01:31.613"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.614" endtime="20210422 11:01:31.614"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.614" endtime="20210422 11:01:31.615"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.615" endtime="20210422 11:01:31.616"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.616" endtime="20210422 11:01:31.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.617" endtime="20210422 11:01:31.618"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.618" endtime="20210422 11:01:31.619"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.620" endtime="20210422 11:01:31.620"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.621" endtime="20210422 11:01:31.621"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.622" endtime="20210422 11:01:31.623"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.623" endtime="20210422 11:01:31.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.625" endtime="20210422 11:01:31.625"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.626" endtime="20210422 11:01:31.626"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.627" endtime="20210422 11:01:31.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.628" endtime="20210422 11:01:31.629"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.629" endtime="20210422 11:01:31.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.631" endtime="20210422 11:01:31.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.632" endtime="20210422 11:01:31.632"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.632" endtime="20210422 11:01:31.633"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.635" endtime="20210422 11:01:31.635"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.636" endtime="20210422 11:01:31.636"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.637" endtime="20210422 11:01:31.637"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:01:31.637" endtime="20210422 11:01:31.637"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.638" endtime="20210422 11:01:31.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:01:31.639" endtime="20210422 11:01:31.639"/>
</kw>
<status status="FAIL" starttime="20210422 10:56:31.588" endtime="20210422 11:01:31.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210422 10:56:31.588" endtime="20210422 11:01:31.643">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210422 10:56:31.553" endtime="20210422 11:01:31.648"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210422 11:01:31.692" level="INFO">${random} = 98394</msg>
<status status="PASS" starttime="20210422 11:01:31.689" endtime="20210422 11:01:31.693"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 11:01:31.696" level="INFO">${prefix} = 98394</msg>
<status status="PASS" starttime="20210422 11:01:31.693" endtime="20210422 11:01:31.696"/>
</kw>
<status status="PASS" starttime="20210422 11:01:31.689" endtime="20210422 11:01:31.696"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:01:31.723" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:01:31.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:01:31.742" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 11:01:31.707" endtime="20210422 11:01:31.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:01:31.743" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 11:01:31.743" endtime="20210422 11:01:31.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:01:31.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:01:31.744" endtime="20210422 11:01:31.745"/>
</kw>
<status status="PASS" starttime="20210422 11:01:31.706" endtime="20210422 11:01:31.745"/>
</kw>
<msg timestamp="20210422 11:01:31.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:01:31.706" endtime="20210422 11:01:31.746"/>
</kw>
<msg timestamp="20210422 11:01:31.746" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 11:01:31.702" endtime="20210422 11:01:31.746"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 11:01:31.750" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 11:01:31.747" endtime="20210422 11:01:31.751"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:01:31.773" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:01:31.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:01:31.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:01:31.759" endtime="20210422 11:01:31.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:01:31.844" level="INFO"/>
<status status="PASS" starttime="20210422 11:01:31.843" endtime="20210422 11:01:31.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:01:31.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:01:31.845" endtime="20210422 11:01:31.846"/>
</kw>
<status status="PASS" starttime="20210422 11:01:31.757" endtime="20210422 11:01:31.847"/>
</kw>
<msg timestamp="20210422 11:01:31.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:01:31.756" endtime="20210422 11:01:31.847"/>
</kw>
<status status="PASS" starttime="20210422 11:01:31.753" endtime="20210422 11:01:31.847"/>
</kw>
<status status="PASS" starttime="20210422 11:01:31.751" endtime="20210422 11:01:31.848"/>
</kw>
<status status="PASS" starttime="20210422 11:01:31.701" endtime="20210422 11:01:31.848"/>
</kw>
<status status="PASS" starttime="20210422 11:01:31.700" endtime="20210422 11:01:31.848"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:01:31.865" level="INFO">Running command 'ozone sh volume info o3://om:9862/98394-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:01:46.229" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 11:01:46.229" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98394-rpcwoport is not found</msg>
<status status="PASS" starttime="20210422 11:01:31.855" endtime="20210422 11:01:46.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:01:46.231" level="INFO">VOLUME_NOT_FOUND Volume 98394-rpcwoport is not found</msg>
<status status="PASS" starttime="20210422 11:01:46.230" endtime="20210422 11:01:46.231"/>
</kw>
<msg timestamp="20210422 11:01:46.231" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98394-rpcwoport is not found</msg>
<status status="PASS" starttime="20210422 11:01:31.850" endtime="20210422 11:01:46.231"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:01:46.232" endtime="20210422 11:01:46.232"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:01:46.236" level="INFO">Running command 'ozone sh volume create o3://om:9862/98394-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:01:52.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:01:52.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:01:46.234" endtime="20210422 11:01:52.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:01:52.723" level="INFO"/>
<status status="PASS" starttime="20210422 11:01:52.722" endtime="20210422 11:01:52.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:01:52.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:01:52.724" endtime="20210422 11:01:52.724"/>
</kw>
<status status="PASS" starttime="20210422 11:01:46.233" endtime="20210422 11:01:52.724"/>
</kw>
<msg timestamp="20210422 11:01:52.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:01:46.233" endtime="20210422 11:01:52.725"/>
</kw>
<msg timestamp="20210422 11:01:52.725" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210422 11:01:46.232" endtime="20210422 11:01:52.725"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:01:52.725" endtime="20210422 11:01:52.726"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:01:52.731" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="98394-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:02:00.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:02:00.132" level="INFO">${output} = {
  "metadata": {},
  "name": "98394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210422 11:01:52.728" endtime="20210422 11:02:00.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:02:00.134" level="INFO">{
  "metadata": {},
  "name": "98394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-22T11:01:52.455Z",
  "modificationTime": "2021-04-22T11:01:52.455Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210422 11:02:00.133" endtime="20210422 11:02:00.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:02:00.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:02:00.135" endtime="20210422 11:02:00.135"/>
</kw>
<status status="PASS" starttime="20210422 11:01:52.727" endtime="20210422 11:02:00.137"/>
</kw>
<msg timestamp="20210422 11:02:00.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:01:52.727" endtime="20210422 11:02:00.137"/>
</kw>
<msg timestamp="20210422 11:02:00.138" level="INFO">${result} = {
  "metadata": {},
  "name": "98394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210422 11:01:52.726" endtime="20210422 11:02:00.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:02:00.138" endtime="20210422 11:02:00.138"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:02:00.144" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="98394-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:02:06.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:02:06.071" level="INFO">${output} = {
  "metadata": {},
  "name": "98394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210422 11:02:00.141" endtime="20210422 11:02:06.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:02:06.073" level="INFO">{
  "metadata": {},
  "name": "98394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-22T11:01:52.455Z",
  "modificationTime": "2021-04-22T11:01:52.455Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210422 11:02:06.072" endtime="20210422 11:02:06.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:02:06.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:02:06.073" endtime="20210422 11:02:06.074"/>
</kw>
<status status="PASS" starttime="20210422 11:02:00.140" endtime="20210422 11:02:06.075"/>
</kw>
<msg timestamp="20210422 11:02:06.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:02:00.139" endtime="20210422 11:02:06.075"/>
</kw>
<msg timestamp="20210422 11:02:06.075" level="INFO">${result} = {
  "metadata": {},
  "name": "98394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210422 11:02:00.139" endtime="20210422 11:02:06.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:02:06.075" endtime="20210422 11:02:06.076"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:02:06.080" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/98394-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:02:12.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:02:12.068" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:02:06.078" endtime="20210422 11:02:12.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:02:12.070" level="INFO"/>
<status status="PASS" starttime="20210422 11:02:12.069" endtime="20210422 11:02:12.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:02:12.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:02:12.070" endtime="20210422 11:02:12.071"/>
</kw>
<status status="PASS" starttime="20210422 11:02:06.077" endtime="20210422 11:02:12.071"/>
</kw>
<msg timestamp="20210422 11:02:12.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:02:06.077" endtime="20210422 11:02:12.071"/>
</kw>
<status status="PASS" starttime="20210422 11:02:06.076" endtime="20210422 11:02:12.072"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:02:12.077" level="INFO">Running command 'ozone sh volume info o3://om:9862/98394-rpcwoport | jq -r '. | select(.name=="98394-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:02:19.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:02:19.270" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:02:12.075" endtime="20210422 11:02:19.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:02:19.272" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210422 11:02:19.271" endtime="20210422 11:02:19.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:02:19.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:02:19.272" endtime="20210422 11:02:19.273"/>
</kw>
<status status="PASS" starttime="20210422 11:02:12.073" endtime="20210422 11:02:19.273"/>
</kw>
<msg timestamp="20210422 11:02:19.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:02:12.073" endtime="20210422 11:02:19.274"/>
</kw>
<msg timestamp="20210422 11:02:19.274" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:02:12.072" endtime="20210422 11:02:19.274"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:02:19.274" endtime="20210422 11:02:19.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:02:19.279" level="INFO">Running command 'ozone sh bucket create o3://om:9862/98394-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:02:26.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:02:26.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:02:19.276" endtime="20210422 11:02:26.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:02:26.282" level="INFO"/>
<status status="PASS" starttime="20210422 11:02:26.282" endtime="20210422 11:02:26.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:02:26.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:02:26.283" endtime="20210422 11:02:26.284"/>
</kw>
<status status="PASS" starttime="20210422 11:02:19.276" endtime="20210422 11:02:26.284"/>
</kw>
<msg timestamp="20210422 11:02:26.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:02:19.276" endtime="20210422 11:02:26.285"/>
</kw>
<status status="PASS" starttime="20210422 11:02:19.275" endtime="20210422 11:02:26.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:02:26.290" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98394-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:02:33.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:02:33.771" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210422 11:02:26.287" endtime="20210422 11:02:33.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:02:33.774" level="INFO">DISK</msg>
<status status="PASS" starttime="20210422 11:02:33.772" endtime="20210422 11:02:33.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:02:33.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:02:33.775" endtime="20210422 11:02:33.776"/>
</kw>
<status status="PASS" starttime="20210422 11:02:26.286" endtime="20210422 11:02:33.776"/>
</kw>
<msg timestamp="20210422 11:02:33.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:02:26.286" endtime="20210422 11:02:33.777"/>
</kw>
<msg timestamp="20210422 11:02:33.777" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210422 11:02:26.285" endtime="20210422 11:02:33.778"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:02:33.778" endtime="20210422 11:02:33.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:02:33.785" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98394-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:02:41.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:02:41.133" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:02:33.782" endtime="20210422 11:02:41.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:02:41.134" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210422 11:02:41.133" endtime="20210422 11:02:41.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:02:41.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:02:41.135" endtime="20210422 11:02:41.135"/>
</kw>
<status status="PASS" starttime="20210422 11:02:33.781" endtime="20210422 11:02:41.135"/>
</kw>
<msg timestamp="20210422 11:02:41.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:02:33.781" endtime="20210422 11:02:41.136"/>
</kw>
<msg timestamp="20210422 11:02:41.136" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:02:33.779" endtime="20210422 11:02:41.136"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:02:41.136" endtime="20210422 11:02:41.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:02:41.141" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98394-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:02:48.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:02:48.557" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210422 11:02:41.139" endtime="20210422 11:02:48.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:02:48.559" level="INFO">100</msg>
<status status="PASS" starttime="20210422 11:02:48.558" endtime="20210422 11:02:48.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:02:48.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:02:48.559" endtime="20210422 11:02:48.560"/>
</kw>
<status status="PASS" starttime="20210422 11:02:41.139" endtime="20210422 11:02:48.560"/>
</kw>
<msg timestamp="20210422 11:02:48.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:02:41.138" endtime="20210422 11:02:48.560"/>
</kw>
<msg timestamp="20210422 11:02:48.560" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210422 11:02:41.137" endtime="20210422 11:02:48.560"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:02:48.561" endtime="20210422 11:02:48.561"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:02:48.565" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/98394-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:02:53.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:02:53.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:02:48.563" endtime="20210422 11:02:53.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:02:53.426" level="INFO"/>
<status status="PASS" starttime="20210422 11:02:53.425" endtime="20210422 11:02:53.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:02:53.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:02:53.426" endtime="20210422 11:02:53.427"/>
</kw>
<status status="PASS" starttime="20210422 11:02:48.562" endtime="20210422 11:02:53.427"/>
</kw>
<msg timestamp="20210422 11:02:53.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:02:48.562" endtime="20210422 11:02:53.428"/>
</kw>
<status status="PASS" starttime="20210422 11:02:48.561" endtime="20210422 11:02:53.428"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:02:53.434" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98394-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:03:00.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:03:00.830" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210422 11:02:53.431" endtime="20210422 11:03:00.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:03:00.835" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210422 11:03:00.831" endtime="20210422 11:03:00.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:03:00.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:03:00.835" endtime="20210422 11:03:00.836"/>
</kw>
<status status="PASS" starttime="20210422 11:02:53.430" endtime="20210422 11:03:00.837"/>
</kw>
<msg timestamp="20210422 11:03:00.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:02:53.430" endtime="20210422 11:03:00.837"/>
</kw>
<msg timestamp="20210422 11:03:00.837" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210422 11:02:53.428" endtime="20210422 11:03:00.837"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:03:00.838" endtime="20210422 11:03:00.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:03:00.843" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98394-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:03:08.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:03:08.758" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210422 11:03:00.841" endtime="20210422 11:03:08.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:03:08.761" level="INFO">1000</msg>
<status status="PASS" starttime="20210422 11:03:08.760" endtime="20210422 11:03:08.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:03:08.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:03:08.762" endtime="20210422 11:03:08.763"/>
</kw>
<status status="PASS" starttime="20210422 11:03:00.840" endtime="20210422 11:03:08.767"/>
</kw>
<msg timestamp="20210422 11:03:08.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:03:00.840" endtime="20210422 11:03:08.767"/>
</kw>
<msg timestamp="20210422 11:03:08.768" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210422 11:03:00.838" endtime="20210422 11:03:08.768"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:03:08.769" endtime="20210422 11:03:08.770"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:03:08.779" level="INFO">Running command 'ozone sh bucket list o3://om:9862/98394-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:03:14.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:03:14.296" level="INFO">${output} = 98394-rpcwoport</msg>
<status status="PASS" starttime="20210422 11:03:08.772" endtime="20210422 11:03:14.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:03:14.297" level="INFO">98394-rpcwoport</msg>
<status status="PASS" starttime="20210422 11:03:14.296" endtime="20210422 11:03:14.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:03:14.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:03:14.297" endtime="20210422 11:03:14.298"/>
</kw>
<status status="PASS" starttime="20210422 11:03:08.771" endtime="20210422 11:03:14.298"/>
</kw>
<msg timestamp="20210422 11:03:14.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:03:08.771" endtime="20210422 11:03:14.299"/>
</kw>
<msg timestamp="20210422 11:03:14.299" level="INFO">${result} = 98394-rpcwoport</msg>
<status status="PASS" starttime="20210422 11:03:08.770" endtime="20210422 11:03:14.299"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:03:14.299" endtime="20210422 11:03:14.300"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:03:14.318" level="INFO">Running command 'ozone sh key put o3://om:9862/98394-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:06:25.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:06:25.968" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:03:14.315" endtime="20210422 11:06:25.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:06:25.969" level="INFO"/>
<status status="PASS" starttime="20210422 11:06:25.968" endtime="20210422 11:06:25.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:06:25.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:06:25.969" endtime="20210422 11:06:25.970"/>
</kw>
<status status="PASS" starttime="20210422 11:03:14.302" endtime="20210422 11:06:25.971"/>
</kw>
<msg timestamp="20210422 11:06:25.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:03:14.302" endtime="20210422 11:06:25.971"/>
</kw>
<status status="PASS" starttime="20210422 11:03:14.301" endtime="20210422 11:06:25.971"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:06:25.977" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:06:25.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:06:25.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:06:25.973" endtime="20210422 11:06:25.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:06:25.980" level="INFO"/>
<status status="PASS" starttime="20210422 11:06:25.979" endtime="20210422 11:06:25.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:06:25.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:06:25.980" endtime="20210422 11:06:25.981"/>
</kw>
<status status="PASS" starttime="20210422 11:06:25.972" endtime="20210422 11:06:25.982"/>
</kw>
<msg timestamp="20210422 11:06:25.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:06:25.972" endtime="20210422 11:06:25.982"/>
</kw>
<status status="PASS" starttime="20210422 11:06:25.971" endtime="20210422 11:06:25.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:06:25.987" level="INFO">Running command 'ozone sh key get o3://om:9862/98394-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:06:31.700" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210422 11:06:25.985" endtime="20210422 11:06:31.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.700" endtime="20210422 11:06:31.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.701" endtime="20210422 11:06:31.701"/>
</kw>
<status status="FAIL" starttime="20210422 11:06:25.984" endtime="20210422 11:06:31.702"/>
</kw>
<msg timestamp="20210422 11:06:31.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210422 11:06:25.984" endtime="20210422 11:06:31.702"/>
</kw>
<status status="FAIL" starttime="20210422 11:06:25.983" endtime="20210422 11:06:31.703"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.703" endtime="20210422 11:06:31.703"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.704" endtime="20210422 11:06:31.704"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.704" endtime="20210422 11:06:31.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.704" endtime="20210422 11:06:31.704"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.705" endtime="20210422 11:06:31.705"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.705" endtime="20210422 11:06:31.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.705" endtime="20210422 11:06:31.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.706" endtime="20210422 11:06:31.706"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.706" endtime="20210422 11:06:31.708"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.708" endtime="20210422 11:06:31.709"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.709" endtime="20210422 11:06:31.709"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.710" endtime="20210422 11:06:31.710"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.711" endtime="20210422 11:06:31.711"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.712" endtime="20210422 11:06:31.712"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.713" endtime="20210422 11:06:31.713"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.713" endtime="20210422 11:06:31.714"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.714" endtime="20210422 11:06:31.714"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.715" endtime="20210422 11:06:31.715"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.715" endtime="20210422 11:06:31.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.715" endtime="20210422 11:06:31.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.717" endtime="20210422 11:06:31.717"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.718" endtime="20210422 11:06:31.718"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.718" endtime="20210422 11:06:31.718"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.719" endtime="20210422 11:06:31.719"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.720" endtime="20210422 11:06:31.722"/>
</kw>
<status status="FAIL" starttime="20210422 11:03:14.300" endtime="20210422 11:06:31.723"/>
</kw>
<status status="FAIL" starttime="20210422 11:03:14.300" endtime="20210422 11:06:31.723"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.724" endtime="20210422 11:06:31.724"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.724" endtime="20210422 11:06:31.724"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.725" endtime="20210422 11:06:31.726"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.726" endtime="20210422 11:06:31.727"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.727" endtime="20210422 11:06:31.727"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.728" endtime="20210422 11:06:31.728"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.728" endtime="20210422 11:06:31.729"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.729" endtime="20210422 11:06:31.730"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.730" endtime="20210422 11:06:31.730"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.730" endtime="20210422 11:06:31.731"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.731" endtime="20210422 11:06:31.731"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.732" endtime="20210422 11:06:31.733"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.733" endtime="20210422 11:06:31.734"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.734" endtime="20210422 11:06:31.734"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.734" endtime="20210422 11:06:31.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.735" endtime="20210422 11:06:31.735"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.735" endtime="20210422 11:06:31.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.736" endtime="20210422 11:06:31.736"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.737" endtime="20210422 11:06:31.737"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.738" endtime="20210422 11:06:31.738"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.739" endtime="20210422 11:06:31.739"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.739" endtime="20210422 11:06:31.740"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.740" endtime="20210422 11:06:31.742"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:06:31.743" endtime="20210422 11:06:31.743"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.743" endtime="20210422 11:06:31.743"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:06:31.743" endtime="20210422 11:06:31.743"/>
</kw>
<status status="FAIL" starttime="20210422 11:01:31.848" endtime="20210422 11:06:31.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210422 11:01:31.698" endtime="20210422 11:06:31.744">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:06:31.769" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:06:31.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:06:31.788" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 11:06:31.759" endtime="20210422 11:06:31.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:06:31.790" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 11:06:31.789" endtime="20210422 11:06:31.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:06:31.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:06:31.790" endtime="20210422 11:06:31.791"/>
</kw>
<status status="PASS" starttime="20210422 11:06:31.756" endtime="20210422 11:06:31.791"/>
</kw>
<msg timestamp="20210422 11:06:31.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:06:31.756" endtime="20210422 11:06:31.791"/>
</kw>
<msg timestamp="20210422 11:06:31.792" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 11:06:31.754" endtime="20210422 11:06:31.792"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 11:06:31.795" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 11:06:31.792" endtime="20210422 11:06:31.795"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:06:31.829" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:06:31.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:06:31.872" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:06:31.814" endtime="20210422 11:06:31.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:06:31.879" level="INFO"/>
<status status="PASS" starttime="20210422 11:06:31.875" endtime="20210422 11:06:31.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:06:31.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:06:31.880" endtime="20210422 11:06:31.881"/>
</kw>
<status status="PASS" starttime="20210422 11:06:31.810" endtime="20210422 11:06:31.882"/>
</kw>
<msg timestamp="20210422 11:06:31.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:06:31.808" endtime="20210422 11:06:31.882"/>
</kw>
<status status="PASS" starttime="20210422 11:06:31.806" endtime="20210422 11:06:31.882"/>
</kw>
<status status="PASS" starttime="20210422 11:06:31.796" endtime="20210422 11:06:31.883"/>
</kw>
<status status="PASS" starttime="20210422 11:06:31.752" endtime="20210422 11:06:31.883"/>
</kw>
<status status="PASS" starttime="20210422 11:06:31.751" endtime="20210422 11:06:31.884"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:06:31.906" level="INFO">Running command 'ozone sh volume create o3://om:9862/98394-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:06:41.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:06:41.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:06:31.892" endtime="20210422 11:06:41.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:06:41.757" level="INFO"/>
<status status="PASS" starttime="20210422 11:06:41.756" endtime="20210422 11:06:41.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:06:41.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:06:41.757" endtime="20210422 11:06:41.758"/>
</kw>
<status status="PASS" starttime="20210422 11:06:31.891" endtime="20210422 11:06:41.758"/>
</kw>
<msg timestamp="20210422 11:06:41.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:06:31.889" endtime="20210422 11:06:41.758"/>
</kw>
<status status="PASS" starttime="20210422 11:06:31.886" endtime="20210422 11:06:41.759"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:06:41.763" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98394-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:06:48.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:06:48.479" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:06:41.761" endtime="20210422 11:06:48.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:06:48.480" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:06:48.480" endtime="20210422 11:06:48.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:06:48.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:06:48.481" endtime="20210422 11:06:48.482"/>
</kw>
<status status="PASS" starttime="20210422 11:06:41.760" endtime="20210422 11:06:48.483"/>
</kw>
<msg timestamp="20210422 11:06:48.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:06:41.760" endtime="20210422 11:06:48.484"/>
</kw>
<msg timestamp="20210422 11:06:48.484" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:06:41.759" endtime="20210422 11:06:48.484"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:06:48.485" endtime="20210422 11:06:48.487"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:06:48.494" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/98394-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:06:55.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:06:55.053" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210422 11:06:48.491" endtime="20210422 11:06:55.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:06:55.054" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210422 11:06:55.053" endtime="20210422 11:06:55.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:06:55.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:06:55.054" endtime="20210422 11:06:55.055"/>
</kw>
<status status="PASS" starttime="20210422 11:06:48.490" endtime="20210422 11:06:55.056"/>
</kw>
<msg timestamp="20210422 11:06:55.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:06:48.489" endtime="20210422 11:06:55.056"/>
</kw>
<msg timestamp="20210422 11:06:55.056" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210422 11:06:48.487" endtime="20210422 11:06:55.056"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:06:55.061" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98394-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:02.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:02.394" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:06:55.058" endtime="20210422 11:07:02.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:02.397" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:07:02.395" endtime="20210422 11:07:02.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:02.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:02.398" endtime="20210422 11:07:02.399"/>
</kw>
<status status="PASS" starttime="20210422 11:06:55.058" endtime="20210422 11:07:02.400"/>
</kw>
<msg timestamp="20210422 11:07:02.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:06:55.057" endtime="20210422 11:07:02.401"/>
</kw>
<msg timestamp="20210422 11:07:02.402" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:06:55.057" endtime="20210422 11:07:02.402"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:07:02.402" endtime="20210422 11:07:02.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:02.412" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/98394-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:09.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:09.700" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210422 11:07:02.408" endtime="20210422 11:07:09.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:09.701" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210422 11:07:09.700" endtime="20210422 11:07:09.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:09.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:09.702" endtime="20210422 11:07:09.703"/>
</kw>
<status status="PASS" starttime="20210422 11:07:02.407" endtime="20210422 11:07:09.703"/>
</kw>
<msg timestamp="20210422 11:07:09.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:02.406" endtime="20210422 11:07:09.704"/>
</kw>
<msg timestamp="20210422 11:07:09.704" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210422 11:07:02.404" endtime="20210422 11:07:09.704"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:09.710" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98394-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:14.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:14.601" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:07:09.707" endtime="20210422 11:07:14.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:14.603" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:07:14.602" endtime="20210422 11:07:14.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:14.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:14.603" endtime="20210422 11:07:14.604"/>
</kw>
<status status="PASS" starttime="20210422 11:07:09.706" endtime="20210422 11:07:14.604"/>
</kw>
<msg timestamp="20210422 11:07:14.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:09.705" endtime="20210422 11:07:14.604"/>
</kw>
<msg timestamp="20210422 11:07:14.605" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:07:09.704" endtime="20210422 11:07:14.605"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:07:14.605" endtime="20210422 11:07:14.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:14.611" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/98394-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:19.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:19.859" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:07:14.608" endtime="20210422 11:07:19.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:19.861" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:07:19.860" endtime="20210422 11:07:19.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:19.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:19.861" endtime="20210422 11:07:19.862"/>
</kw>
<status status="PASS" starttime="20210422 11:07:14.608" endtime="20210422 11:07:19.862"/>
</kw>
<msg timestamp="20210422 11:07:19.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:14.607" endtime="20210422 11:07:19.862"/>
</kw>
<msg timestamp="20210422 11:07:19.863" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:07:14.606" endtime="20210422 11:07:19.863"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:19.868" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98394-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:25.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:25.416" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210422 11:07:19.865" endtime="20210422 11:07:25.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:25.417" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:07:25.417" endtime="20210422 11:07:25.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:25.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:25.418" endtime="20210422 11:07:25.418"/>
</kw>
<status status="PASS" starttime="20210422 11:07:19.864" endtime="20210422 11:07:25.419"/>
</kw>
<msg timestamp="20210422 11:07:25.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:19.864" endtime="20210422 11:07:25.419"/>
</kw>
<msg timestamp="20210422 11:07:25.419" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210422 11:07:19.863" endtime="20210422 11:07:25.419"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:07:25.420" endtime="20210422 11:07:25.421"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:07:25.421" endtime="20210422 11:07:25.423"/>
</kw>
<status status="PASS" starttime="20210422 11:06:31.885" endtime="20210422 11:07:25.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210422 11:06:31.747" endtime="20210422 11:07:25.423"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:25.436" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:25.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:25.440" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 11:07:25.432" endtime="20210422 11:07:25.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:25.443" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 11:07:25.442" endtime="20210422 11:07:25.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:25.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:25.444" endtime="20210422 11:07:25.445"/>
</kw>
<status status="PASS" starttime="20210422 11:07:25.431" endtime="20210422 11:07:25.446"/>
</kw>
<msg timestamp="20210422 11:07:25.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:25.430" endtime="20210422 11:07:25.446"/>
</kw>
<msg timestamp="20210422 11:07:25.447" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 11:07:25.430" endtime="20210422 11:07:25.447"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 11:07:25.448" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 11:07:25.448" endtime="20210422 11:07:25.448"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:25.454" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:25.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:25.465" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:07:25.451" endtime="20210422 11:07:25.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:25.468" level="INFO"/>
<status status="PASS" starttime="20210422 11:07:25.466" endtime="20210422 11:07:25.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:25.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:25.469" endtime="20210422 11:07:25.471"/>
</kw>
<status status="PASS" starttime="20210422 11:07:25.450" endtime="20210422 11:07:25.472"/>
</kw>
<msg timestamp="20210422 11:07:25.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:25.450" endtime="20210422 11:07:25.472"/>
</kw>
<status status="PASS" starttime="20210422 11:07:25.449" endtime="20210422 11:07:25.472"/>
</kw>
<status status="PASS" starttime="20210422 11:07:25.449" endtime="20210422 11:07:25.473"/>
</kw>
<status status="PASS" starttime="20210422 11:07:25.429" endtime="20210422 11:07:25.473"/>
</kw>
<status status="PASS" starttime="20210422 11:07:25.427" endtime="20210422 11:07:25.473"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:25.482" level="INFO">Running command 'ozone sh bucket create o3://om:9862/98394-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:31.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:31.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:07:25.479" endtime="20210422 11:07:31.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:31.704" level="INFO"/>
<status status="PASS" starttime="20210422 11:07:31.703" endtime="20210422 11:07:31.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:31.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:31.704" endtime="20210422 11:07:31.705"/>
</kw>
<status status="PASS" starttime="20210422 11:07:25.478" endtime="20210422 11:07:31.706"/>
</kw>
<msg timestamp="20210422 11:07:31.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:25.478" endtime="20210422 11:07:31.706"/>
</kw>
<status status="PASS" starttime="20210422 11:07:25.475" endtime="20210422 11:07:31.706"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:31.711" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98394-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:38.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:38.264" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:07:31.708" endtime="20210422 11:07:38.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:38.266" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:07:38.265" endtime="20210422 11:07:38.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:38.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:38.266" endtime="20210422 11:07:38.267"/>
</kw>
<status status="PASS" starttime="20210422 11:07:31.708" endtime="20210422 11:07:38.267"/>
</kw>
<msg timestamp="20210422 11:07:38.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:31.707" endtime="20210422 11:07:38.267"/>
</kw>
<msg timestamp="20210422 11:07:38.268" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:07:31.706" endtime="20210422 11:07:38.268"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:07:38.268" endtime="20210422 11:07:38.268"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:38.273" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/98394-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:44.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:44.564" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210422 11:07:38.270" endtime="20210422 11:07:44.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:44.566" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210422 11:07:44.565" endtime="20210422 11:07:44.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:44.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:44.566" endtime="20210422 11:07:44.567"/>
</kw>
<status status="PASS" starttime="20210422 11:07:38.270" endtime="20210422 11:07:44.568"/>
</kw>
<msg timestamp="20210422 11:07:44.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:38.269" endtime="20210422 11:07:44.568"/>
</kw>
<msg timestamp="20210422 11:07:44.568" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210422 11:07:38.269" endtime="20210422 11:07:44.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:44.573" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98394-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:51.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:51.754" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:07:44.570" endtime="20210422 11:07:51.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:51.756" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:07:51.755" endtime="20210422 11:07:51.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:51.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:51.756" endtime="20210422 11:07:51.757"/>
</kw>
<status status="PASS" starttime="20210422 11:07:44.570" endtime="20210422 11:07:51.758"/>
</kw>
<msg timestamp="20210422 11:07:51.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:44.569" endtime="20210422 11:07:51.758"/>
</kw>
<msg timestamp="20210422 11:07:51.759" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:07:44.568" endtime="20210422 11:07:51.759"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:07:51.759" endtime="20210422 11:07:51.762"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:51.768" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/98394-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:07:58.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:07:58.605" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210422 11:07:51.765" endtime="20210422 11:07:58.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:07:58.607" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210422 11:07:58.606" endtime="20210422 11:07:58.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:07:58.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:07:58.607" endtime="20210422 11:07:58.607"/>
</kw>
<status status="PASS" starttime="20210422 11:07:51.764" endtime="20210422 11:07:58.608"/>
</kw>
<msg timestamp="20210422 11:07:58.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:51.763" endtime="20210422 11:07:58.608"/>
</kw>
<msg timestamp="20210422 11:07:58.608" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210422 11:07:51.762" endtime="20210422 11:07:58.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:07:58.613" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98394-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:08:05.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:08:05.839" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:07:58.610" endtime="20210422 11:08:05.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:08:05.840" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:08:05.839" endtime="20210422 11:08:05.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:08:05.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:08:05.840" endtime="20210422 11:08:05.841"/>
</kw>
<status status="PASS" starttime="20210422 11:07:58.610" endtime="20210422 11:08:05.841"/>
</kw>
<msg timestamp="20210422 11:08:05.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:07:58.609" endtime="20210422 11:08:05.841"/>
</kw>
<msg timestamp="20210422 11:08:05.842" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:07:58.609" endtime="20210422 11:08:05.842"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:08:05.842" endtime="20210422 11:08:05.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:08:05.848" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/98394-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:08:10.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:08:10.298" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:08:05.846" endtime="20210422 11:08:10.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:08:10.301" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:08:10.299" endtime="20210422 11:08:10.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:08:10.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:08:10.301" endtime="20210422 11:08:10.303"/>
</kw>
<status status="PASS" starttime="20210422 11:08:05.845" endtime="20210422 11:08:10.303"/>
</kw>
<msg timestamp="20210422 11:08:10.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:08:05.845" endtime="20210422 11:08:10.304"/>
</kw>
<msg timestamp="20210422 11:08:10.305" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:08:05.843" endtime="20210422 11:08:10.305"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:08:10.313" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98394-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:08:16.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:08:16.803" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210422 11:08:10.310" endtime="20210422 11:08:16.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:08:16.806" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:08:16.804" endtime="20210422 11:08:16.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:08:16.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:08:16.807" endtime="20210422 11:08:16.808"/>
</kw>
<status status="PASS" starttime="20210422 11:08:10.309" endtime="20210422 11:08:16.808"/>
</kw>
<msg timestamp="20210422 11:08:16.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:08:10.308" endtime="20210422 11:08:16.809"/>
</kw>
<msg timestamp="20210422 11:08:16.809" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210422 11:08:10.305" endtime="20210422 11:08:16.810"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:08:16.810" endtime="20210422 11:08:16.811"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:08:16.811" endtime="20210422 11:08:16.812"/>
</kw>
<status status="PASS" starttime="20210422 11:07:25.474" endtime="20210422 11:08:16.813"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210422 11:07:25.425" endtime="20210422 11:08:16.813"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:08:16.824" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:08:16.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:08:16.828" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 11:08:16.821" endtime="20210422 11:08:16.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:08:16.831" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 11:08:16.829" endtime="20210422 11:08:16.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:08:16.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:08:16.831" endtime="20210422 11:08:16.837"/>
</kw>
<status status="PASS" starttime="20210422 11:08:16.820" endtime="20210422 11:08:16.838"/>
</kw>
<msg timestamp="20210422 11:08:16.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:08:16.819" endtime="20210422 11:08:16.838"/>
</kw>
<msg timestamp="20210422 11:08:16.838" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 11:08:16.818" endtime="20210422 11:08:16.839"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 11:08:16.839" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 11:08:16.839" endtime="20210422 11:08:16.839"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:08:16.844" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:08:16.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:08:16.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:08:16.842" endtime="20210422 11:08:16.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:08:16.852" level="INFO"/>
<status status="PASS" starttime="20210422 11:08:16.852" endtime="20210422 11:08:16.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:08:16.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:08:16.853" endtime="20210422 11:08:16.854"/>
</kw>
<status status="PASS" starttime="20210422 11:08:16.842" endtime="20210422 11:08:16.854"/>
</kw>
<msg timestamp="20210422 11:08:16.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:08:16.841" endtime="20210422 11:08:16.854"/>
</kw>
<status status="PASS" starttime="20210422 11:08:16.840" endtime="20210422 11:08:16.854"/>
</kw>
<status status="PASS" starttime="20210422 11:08:16.840" endtime="20210422 11:08:16.854"/>
</kw>
<status status="PASS" starttime="20210422 11:08:16.817" endtime="20210422 11:08:16.855"/>
</kw>
<status status="PASS" starttime="20210422 11:08:16.816" endtime="20210422 11:08:16.855"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:08:16.860" level="INFO">Running command 'ozone sh key put o3://om:9862/98394-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:11:25.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:11:25.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:08:16.857" endtime="20210422 11:11:25.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:11:25.208" level="INFO"/>
<status status="PASS" starttime="20210422 11:11:25.206" endtime="20210422 11:11:25.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:11:25.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:11:25.209" endtime="20210422 11:11:25.210"/>
</kw>
<status status="PASS" starttime="20210422 11:08:16.857" endtime="20210422 11:11:25.210"/>
</kw>
<msg timestamp="20210422 11:11:25.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:08:16.856" endtime="20210422 11:11:25.210"/>
</kw>
<status status="PASS" starttime="20210422 11:08:16.856" endtime="20210422 11:11:25.211"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:11:25.217" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98394-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:11:32.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:11:32.884" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:11:25.214" endtime="20210422 11:11:32.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:11:32.885" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:11:32.884" endtime="20210422 11:11:32.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:11:32.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:11:32.886" endtime="20210422 11:11:32.886"/>
</kw>
<status status="PASS" starttime="20210422 11:11:25.213" endtime="20210422 11:11:32.887"/>
</kw>
<msg timestamp="20210422 11:11:32.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:11:25.212" endtime="20210422 11:11:32.887"/>
</kw>
<msg timestamp="20210422 11:11:32.887" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:11:25.211" endtime="20210422 11:11:32.887"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:11:32.887" endtime="20210422 11:11:32.888"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:11:32.899" level="INFO">Running command 'ozone sh key addacl o3://om:9862/98394-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:11:40.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:11:40.563" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 11:11:32.894" endtime="20210422 11:11:40.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:11:40.565" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 11:11:40.564" endtime="20210422 11:11:40.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:11:40.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:11:40.565" endtime="20210422 11:11:40.566"/>
</kw>
<status status="PASS" starttime="20210422 11:11:32.890" endtime="20210422 11:11:40.566"/>
</kw>
<msg timestamp="20210422 11:11:40.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:11:32.889" endtime="20210422 11:11:40.566"/>
</kw>
<msg timestamp="20210422 11:11:40.567" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210422 11:11:32.888" endtime="20210422 11:11:40.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:11:40.571" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98394-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:11:45.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:11:45.735" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:11:40.569" endtime="20210422 11:11:45.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:11:45.736" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:11:45.735" endtime="20210422 11:11:45.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:11:45.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:11:45.736" endtime="20210422 11:11:45.737"/>
</kw>
<status status="PASS" starttime="20210422 11:11:40.568" endtime="20210422 11:11:45.737"/>
</kw>
<msg timestamp="20210422 11:11:45.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:11:40.568" endtime="20210422 11:11:45.737"/>
</kw>
<msg timestamp="20210422 11:11:45.738" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:11:40.567" endtime="20210422 11:11:45.738"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:11:45.738" endtime="20210422 11:11:45.739"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:11:45.743" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/98394-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:11:50.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:11:50.847" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210422 11:11:45.741" endtime="20210422 11:11:50.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:11:50.850" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210422 11:11:50.847" endtime="20210422 11:11:50.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:11:50.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:11:50.850" endtime="20210422 11:11:50.851"/>
</kw>
<status status="PASS" starttime="20210422 11:11:45.740" endtime="20210422 11:11:50.851"/>
</kw>
<msg timestamp="20210422 11:11:50.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:11:45.740" endtime="20210422 11:11:50.852"/>
</kw>
<msg timestamp="20210422 11:11:50.852" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210422 11:11:45.739" endtime="20210422 11:11:50.852"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:11:50.857" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98394-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:11:58.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:11:58.129" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:11:50.854" endtime="20210422 11:11:58.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:11:58.130" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:11:58.129" endtime="20210422 11:11:58.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:11:58.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:11:58.130" endtime="20210422 11:11:58.131"/>
</kw>
<status status="PASS" starttime="20210422 11:11:50.853" endtime="20210422 11:11:58.131"/>
</kw>
<msg timestamp="20210422 11:11:58.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:11:50.853" endtime="20210422 11:11:58.132"/>
</kw>
<msg timestamp="20210422 11:11:58.132" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:11:50.852" endtime="20210422 11:11:58.132"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:11:58.132" endtime="20210422 11:11:58.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:11:58.140" level="INFO">Running command 'ozone sh key setacl o3://om:9862/98394-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:12:04.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:12:04.822" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:11:58.137" endtime="20210422 11:12:04.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:12:04.824" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:12:04.823" endtime="20210422 11:12:04.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:12:04.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:12:04.824" endtime="20210422 11:12:04.826"/>
</kw>
<status status="PASS" starttime="20210422 11:11:58.136" endtime="20210422 11:12:04.826"/>
</kw>
<msg timestamp="20210422 11:12:04.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:11:58.135" endtime="20210422 11:12:04.827"/>
</kw>
<msg timestamp="20210422 11:12:04.828" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:11:58.133" endtime="20210422 11:12:04.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:12:04.835" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98394-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:12:11.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:12:11.623" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210422 11:12:04.831" endtime="20210422 11:12:11.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:12:11.625" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:12:11.624" endtime="20210422 11:12:11.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:12:11.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:12:11.626" endtime="20210422 11:12:11.627"/>
</kw>
<status status="PASS" starttime="20210422 11:12:04.830" endtime="20210422 11:12:11.628"/>
</kw>
<msg timestamp="20210422 11:12:11.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:12:04.830" endtime="20210422 11:12:11.628"/>
</kw>
<msg timestamp="20210422 11:12:11.628" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210422 11:12:04.828" endtime="20210422 11:12:11.628"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:12:11.629" endtime="20210422 11:12:11.630"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:12:11.630" endtime="20210422 11:12:11.631"/>
</kw>
<status status="PASS" starttime="20210422 11:08:16.855" endtime="20210422 11:12:11.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210422 11:08:16.814" endtime="20210422 11:12:11.632"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:12:11.641" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:12:11.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:12:11.644" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 11:12:11.638" endtime="20210422 11:12:11.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:12:11.647" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 11:12:11.644" endtime="20210422 11:12:11.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:12:11.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:12:11.647" endtime="20210422 11:12:11.648"/>
</kw>
<status status="PASS" starttime="20210422 11:12:11.637" endtime="20210422 11:12:11.648"/>
</kw>
<msg timestamp="20210422 11:12:11.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:12:11.636" endtime="20210422 11:12:11.649"/>
</kw>
<msg timestamp="20210422 11:12:11.649" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 11:12:11.636" endtime="20210422 11:12:11.649"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 11:12:11.650" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 11:12:11.649" endtime="20210422 11:12:11.650"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:12:11.657" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:12:11.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:12:11.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:12:11.654" endtime="20210422 11:12:11.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:12:11.690" level="INFO"/>
<status status="PASS" starttime="20210422 11:12:11.689" endtime="20210422 11:12:11.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:12:11.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:12:11.691" endtime="20210422 11:12:11.691"/>
</kw>
<status status="PASS" starttime="20210422 11:12:11.653" endtime="20210422 11:12:11.692"/>
</kw>
<msg timestamp="20210422 11:12:11.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:12:11.653" endtime="20210422 11:12:11.692"/>
</kw>
<status status="PASS" starttime="20210422 11:12:11.651" endtime="20210422 11:12:11.692"/>
</kw>
<status status="PASS" starttime="20210422 11:12:11.650" endtime="20210422 11:12:11.692"/>
</kw>
<status status="PASS" starttime="20210422 11:12:11.635" endtime="20210422 11:12:11.693"/>
</kw>
<status status="PASS" starttime="20210422 11:12:11.634" endtime="20210422 11:12:11.693"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:12:11.698" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/98394-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:12:17.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:12:17.547" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210422 11:12:11.696" endtime="20210422 11:12:17.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:12:17.549" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210422 11:12:17.548" endtime="20210422 11:12:17.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:12:17.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:12:17.549" endtime="20210422 11:12:17.550"/>
</kw>
<status status="PASS" starttime="20210422 11:12:11.695" endtime="20210422 11:12:17.550"/>
</kw>
<msg timestamp="20210422 11:12:17.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:12:11.695" endtime="20210422 11:12:17.550"/>
</kw>
<status status="PASS" starttime="20210422 11:12:11.694" endtime="20210422 11:12:17.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:12:17.556" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/98394-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:12:24.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:12:24.128" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210422 11:12:17.553" endtime="20210422 11:12:24.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:12:24.130" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:12:24.129" endtime="20210422 11:12:24.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:12:24.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:12:24.130" endtime="20210422 11:12:24.131"/>
</kw>
<status status="PASS" starttime="20210422 11:12:17.552" endtime="20210422 11:12:24.131"/>
</kw>
<msg timestamp="20210422 11:12:24.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:12:17.552" endtime="20210422 11:12:24.132"/>
</kw>
<msg timestamp="20210422 11:12:24.132" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210422 11:12:17.551" endtime="20210422 11:12:24.132"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:12:24.132" endtime="20210422 11:12:24.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:12:24.139" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/98394-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:12:30.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:12:30.886" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210422 11:12:24.136" endtime="20210422 11:12:30.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:12:30.887" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210422 11:12:30.886" endtime="20210422 11:12:30.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:12:30.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:12:30.887" endtime="20210422 11:12:30.888"/>
</kw>
<status status="PASS" starttime="20210422 11:12:24.135" endtime="20210422 11:12:30.889"/>
</kw>
<msg timestamp="20210422 11:12:30.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:12:24.134" endtime="20210422 11:12:30.892"/>
</kw>
<msg timestamp="20210422 11:12:30.893" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210422 11:12:24.133" endtime="20210422 11:12:30.893"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:12:30.904" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/98394-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:12:36.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:12:36.568" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210422 11:12:30.898" endtime="20210422 11:12:36.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:12:36.569" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:12:36.568" endtime="20210422 11:12:36.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:12:36.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:12:36.569" endtime="20210422 11:12:36.570"/>
</kw>
<status status="PASS" starttime="20210422 11:12:30.894" endtime="20210422 11:12:36.570"/>
</kw>
<msg timestamp="20210422 11:12:36.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:12:30.894" endtime="20210422 11:12:36.571"/>
</kw>
<msg timestamp="20210422 11:12:36.571" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210422 11:12:30.893" endtime="20210422 11:12:36.571"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:12:36.571" endtime="20210422 11:12:36.572"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:12:36.577" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/98394-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:12:42.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:12:42.915" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:12:36.574" endtime="20210422 11:12:42.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:12:42.916" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:12:42.915" endtime="20210422 11:12:42.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:12:42.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:12:42.916" endtime="20210422 11:12:42.917"/>
</kw>
<status status="PASS" starttime="20210422 11:12:36.574" endtime="20210422 11:12:42.918"/>
</kw>
<msg timestamp="20210422 11:12:42.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:12:36.573" endtime="20210422 11:12:42.918"/>
</kw>
<msg timestamp="20210422 11:12:42.918" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210422 11:12:36.573" endtime="20210422 11:12:42.918"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:12:42.925" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/98394-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:12:50.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:12:50.334" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210422 11:12:42.920" endtime="20210422 11:12:50.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:12:50.337" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:12:50.335" endtime="20210422 11:12:50.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:12:50.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:12:50.337" endtime="20210422 11:12:50.339"/>
</kw>
<status status="PASS" starttime="20210422 11:12:42.920" endtime="20210422 11:12:50.339"/>
</kw>
<msg timestamp="20210422 11:12:50.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:12:42.919" endtime="20210422 11:12:50.339"/>
</kw>
<msg timestamp="20210422 11:12:50.340" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210422 11:12:42.919" endtime="20210422 11:12:50.340"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:12:50.340" endtime="20210422 11:12:50.340"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:12:50.341" endtime="20210422 11:12:50.341"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:12:50.347" level="INFO">Running command 'ozone sh key put o3://om:9862/98394-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:00.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:00.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:12:50.345" endtime="20210422 11:16:00.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:00.937" level="INFO"/>
<status status="PASS" starttime="20210422 11:16:00.936" endtime="20210422 11:16:00.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:00.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:00.937" endtime="20210422 11:16:00.938"/>
</kw>
<status status="PASS" starttime="20210422 11:12:50.342" endtime="20210422 11:16:00.938"/>
</kw>
<msg timestamp="20210422 11:16:00.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:12:50.342" endtime="20210422 11:16:00.938"/>
</kw>
<status status="PASS" starttime="20210422 11:12:50.341" endtime="20210422 11:16:00.938"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:00.942" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98394-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:05.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:05.961" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:16:00.940" endtime="20210422 11:16:05.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:05.962" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210422 11:16:05.961" endtime="20210422 11:16:05.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:05.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:05.962" endtime="20210422 11:16:05.963"/>
</kw>
<status status="PASS" starttime="20210422 11:16:00.940" endtime="20210422 11:16:05.963"/>
</kw>
<msg timestamp="20210422 11:16:05.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:00.939" endtime="20210422 11:16:05.963"/>
</kw>
<msg timestamp="20210422 11:16:05.964" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210422 11:16:00.939" endtime="20210422 11:16:05.964"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:16:05.964" endtime="20210422 11:16:05.965"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210422 11:16:05.965" endtime="20210422 11:16:05.965"/>
</kw>
<status status="PASS" starttime="20210422 11:12:11.693" endtime="20210422 11:16:05.965"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210422 11:12:11.633" endtime="20210422 11:16:05.966"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:05.972" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:05.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:05.975" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 11:16:05.970" endtime="20210422 11:16:05.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:05.976" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 11:16:05.975" endtime="20210422 11:16:05.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:05.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:05.976" endtime="20210422 11:16:05.977"/>
</kw>
<status status="PASS" starttime="20210422 11:16:05.969" endtime="20210422 11:16:05.977"/>
</kw>
<msg timestamp="20210422 11:16:05.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:05.969" endtime="20210422 11:16:05.977"/>
</kw>
<msg timestamp="20210422 11:16:05.978" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 11:16:05.969" endtime="20210422 11:16:05.978"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 11:16:05.979" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 11:16:05.978" endtime="20210422 11:16:05.979"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:05.983" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:05.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:05.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:16:05.981" endtime="20210422 11:16:05.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:05.991" level="INFO"/>
<status status="PASS" starttime="20210422 11:16:05.990" endtime="20210422 11:16:05.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:05.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:05.991" endtime="20210422 11:16:05.992"/>
</kw>
<status status="PASS" starttime="20210422 11:16:05.980" endtime="20210422 11:16:05.993"/>
</kw>
<msg timestamp="20210422 11:16:05.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:05.980" endtime="20210422 11:16:05.993"/>
</kw>
<status status="PASS" starttime="20210422 11:16:05.979" endtime="20210422 11:16:05.993"/>
</kw>
<status status="PASS" starttime="20210422 11:16:05.979" endtime="20210422 11:16:05.993"/>
</kw>
<status status="PASS" starttime="20210422 11:16:05.968" endtime="20210422 11:16:05.994"/>
</kw>
<status status="PASS" starttime="20210422 11:16:05.967" endtime="20210422 11:16:05.994"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:05.998" level="INFO">Running command 'ozone sh volume info o3:///98394-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:11.390" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 11:16:11.390" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98394-rpcwport is not found</msg>
<status status="PASS" starttime="20210422 11:16:05.996" endtime="20210422 11:16:11.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:11.391" level="INFO">VOLUME_NOT_FOUND Volume 98394-rpcwport is not found</msg>
<status status="PASS" starttime="20210422 11:16:11.391" endtime="20210422 11:16:11.391"/>
</kw>
<msg timestamp="20210422 11:16:11.392" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98394-rpcwport is not found</msg>
<status status="PASS" starttime="20210422 11:16:05.995" endtime="20210422 11:16:11.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:16:11.392" endtime="20210422 11:16:11.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:11.400" level="INFO">Running command 'ozone sh volume create o3:///98394-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:17.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:17.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:16:11.396" endtime="20210422 11:16:17.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:17.899" level="INFO"/>
<status status="PASS" starttime="20210422 11:16:17.898" endtime="20210422 11:16:17.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:17.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:17.899" endtime="20210422 11:16:17.900"/>
</kw>
<status status="PASS" starttime="20210422 11:16:11.395" endtime="20210422 11:16:17.900"/>
</kw>
<msg timestamp="20210422 11:16:17.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:11.394" endtime="20210422 11:16:17.900"/>
</kw>
<msg timestamp="20210422 11:16:17.900" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210422 11:16:11.393" endtime="20210422 11:16:17.901"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:16:17.901" endtime="20210422 11:16:17.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:17.907" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="98394-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:25.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:25.191" level="INFO">${output} = {
  "metadata": {},
  "name": "98394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210422 11:16:17.904" endtime="20210422 11:16:25.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:25.193" level="INFO">{
  "metadata": {},
  "name": "98394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-22T11:16:17.787Z",
  "modificationTime": "2021-04-22T11:16:17.787Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210422 11:16:25.192" endtime="20210422 11:16:25.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:25.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:25.194" endtime="20210422 11:16:25.195"/>
</kw>
<status status="PASS" starttime="20210422 11:16:17.904" endtime="20210422 11:16:25.196"/>
</kw>
<msg timestamp="20210422 11:16:25.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:17.903" endtime="20210422 11:16:25.196"/>
</kw>
<msg timestamp="20210422 11:16:25.197" level="INFO">${result} = {
  "metadata": {},
  "name": "98394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210422 11:16:17.901" endtime="20210422 11:16:25.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:16:25.197" endtime="20210422 11:16:25.198"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:25.204" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="98394-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:31.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:31.406" level="INFO">${output} = {
  "metadata": {},
  "name": "98394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210422 11:16:25.201" endtime="20210422 11:16:31.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:31.408" level="INFO">{
  "metadata": {},
  "name": "98394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-22T11:16:17.787Z",
  "modificationTime": "2021-04-22T11:16:17.787Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210422 11:16:31.407" endtime="20210422 11:16:31.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:31.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:31.408" endtime="20210422 11:16:31.409"/>
</kw>
<status status="PASS" starttime="20210422 11:16:25.200" endtime="20210422 11:16:31.409"/>
</kw>
<msg timestamp="20210422 11:16:31.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:25.199" endtime="20210422 11:16:31.409"/>
</kw>
<msg timestamp="20210422 11:16:31.410" level="INFO">${result} = {
  "metadata": {},
  "name": "98394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210422 11:16:25.198" endtime="20210422 11:16:31.410"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:16:31.410" endtime="20210422 11:16:31.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:31.415" level="INFO">Running command 'ozone sh volume setquota o3:///98394-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:37.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:37.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:16:31.413" endtime="20210422 11:16:37.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:37.796" level="INFO"/>
<status status="PASS" starttime="20210422 11:16:37.795" endtime="20210422 11:16:37.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:37.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:37.796" endtime="20210422 11:16:37.797"/>
</kw>
<status status="PASS" starttime="20210422 11:16:31.412" endtime="20210422 11:16:37.797"/>
</kw>
<msg timestamp="20210422 11:16:37.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:31.411" endtime="20210422 11:16:37.797"/>
</kw>
<status status="PASS" starttime="20210422 11:16:31.410" endtime="20210422 11:16:37.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:37.803" level="INFO">Running command 'ozone sh volume info o3:///98394-rpcwport | jq -r '. | select(.name=="98394-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:45.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:45.456" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:16:37.800" endtime="20210422 11:16:45.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:45.459" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210422 11:16:45.457" endtime="20210422 11:16:45.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:45.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:45.460" endtime="20210422 11:16:45.461"/>
</kw>
<status status="PASS" starttime="20210422 11:16:37.799" endtime="20210422 11:16:45.462"/>
</kw>
<msg timestamp="20210422 11:16:45.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:37.799" endtime="20210422 11:16:45.462"/>
</kw>
<msg timestamp="20210422 11:16:45.463" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:16:37.798" endtime="20210422 11:16:45.463"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:16:45.464" endtime="20210422 11:16:45.465"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:45.471" level="INFO">Running command 'ozone sh bucket create o3:///98394-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:52.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:52.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:16:45.468" endtime="20210422 11:16:52.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:52.212" level="INFO"/>
<status status="PASS" starttime="20210422 11:16:52.209" endtime="20210422 11:16:52.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:52.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:52.212" endtime="20210422 11:16:52.213"/>
</kw>
<status status="PASS" starttime="20210422 11:16:45.467" endtime="20210422 11:16:52.213"/>
</kw>
<msg timestamp="20210422 11:16:52.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:45.466" endtime="20210422 11:16:52.213"/>
</kw>
<status status="PASS" starttime="20210422 11:16:45.465" endtime="20210422 11:16:52.214"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:52.218" level="INFO">Running command 'ozone sh bucket info o3:///98394-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:16:57.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:16:57.772" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210422 11:16:52.216" endtime="20210422 11:16:57.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:16:57.773" level="INFO">DISK</msg>
<status status="PASS" starttime="20210422 11:16:57.772" endtime="20210422 11:16:57.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:16:57.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:16:57.773" endtime="20210422 11:16:57.774"/>
</kw>
<status status="PASS" starttime="20210422 11:16:52.215" endtime="20210422 11:16:57.775"/>
</kw>
<msg timestamp="20210422 11:16:57.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:52.215" endtime="20210422 11:16:57.775"/>
</kw>
<msg timestamp="20210422 11:16:57.775" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210422 11:16:52.214" endtime="20210422 11:16:57.775"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:16:57.776" endtime="20210422 11:16:57.776"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:16:57.793" level="INFO">Running command 'ozone sh bucket info o3:///98394-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:17:04.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:17:04.741" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:16:57.785" endtime="20210422 11:17:04.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:17:04.743" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210422 11:17:04.742" endtime="20210422 11:17:04.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:17:04.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:17:04.743" endtime="20210422 11:17:04.745"/>
</kw>
<status status="PASS" starttime="20210422 11:16:57.784" endtime="20210422 11:17:04.745"/>
</kw>
<msg timestamp="20210422 11:17:04.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:16:57.784" endtime="20210422 11:17:04.746"/>
</kw>
<msg timestamp="20210422 11:17:04.746" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:16:57.776" endtime="20210422 11:17:04.746"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:17:04.747" endtime="20210422 11:17:04.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:17:04.759" level="INFO">Running command 'ozone sh bucket info o3:///98394-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:17:12.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:17:12.155" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210422 11:17:04.757" endtime="20210422 11:17:12.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:17:12.157" level="INFO">100</msg>
<status status="PASS" starttime="20210422 11:17:12.156" endtime="20210422 11:17:12.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:17:12.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:17:12.157" endtime="20210422 11:17:12.159"/>
</kw>
<status status="PASS" starttime="20210422 11:17:04.755" endtime="20210422 11:17:12.159"/>
</kw>
<msg timestamp="20210422 11:17:12.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:17:04.750" endtime="20210422 11:17:12.160"/>
</kw>
<msg timestamp="20210422 11:17:12.160" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210422 11:17:04.748" endtime="20210422 11:17:12.160"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:17:12.160" endtime="20210422 11:17:12.161"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:17:12.167" level="INFO">Running command 'ozone sh bucket setquota o3:///98394-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:17:18.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:17:18.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:17:12.164" endtime="20210422 11:17:18.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:17:18.814" level="INFO"/>
<status status="PASS" starttime="20210422 11:17:18.813" endtime="20210422 11:17:18.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:17:18.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:17:18.815" endtime="20210422 11:17:18.816"/>
</kw>
<status status="PASS" starttime="20210422 11:17:12.163" endtime="20210422 11:17:18.817"/>
</kw>
<msg timestamp="20210422 11:17:18.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:17:12.163" endtime="20210422 11:17:18.817"/>
</kw>
<status status="PASS" starttime="20210422 11:17:12.162" endtime="20210422 11:17:18.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:17:18.824" level="INFO">Running command 'ozone sh bucket info o3:///98394-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:17:26.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:17:26.520" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210422 11:17:18.821" endtime="20210422 11:17:26.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:17:26.522" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210422 11:17:26.521" endtime="20210422 11:17:26.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:17:26.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:17:26.523" endtime="20210422 11:17:26.524"/>
</kw>
<status status="PASS" starttime="20210422 11:17:18.821" endtime="20210422 11:17:26.525"/>
</kw>
<msg timestamp="20210422 11:17:26.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:17:18.820" endtime="20210422 11:17:26.525"/>
</kw>
<msg timestamp="20210422 11:17:26.526" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210422 11:17:18.818" endtime="20210422 11:17:26.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:17:26.526" endtime="20210422 11:17:26.528"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:17:26.534" level="INFO">Running command 'ozone sh bucket info o3:///98394-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:17:31.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:17:31.689" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210422 11:17:26.532" endtime="20210422 11:17:31.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:17:31.691" level="INFO">1000</msg>
<status status="PASS" starttime="20210422 11:17:31.690" endtime="20210422 11:17:31.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:17:31.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:17:31.691" endtime="20210422 11:17:31.692"/>
</kw>
<status status="PASS" starttime="20210422 11:17:26.531" endtime="20210422 11:17:31.693"/>
</kw>
<msg timestamp="20210422 11:17:31.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:17:26.531" endtime="20210422 11:17:31.693"/>
</kw>
<msg timestamp="20210422 11:17:31.693" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210422 11:17:26.528" endtime="20210422 11:17:31.693"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:17:31.693" endtime="20210422 11:17:31.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:17:31.698" level="INFO">Running command 'ozone sh bucket list o3:///98394-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:17:37.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:17:37.345" level="INFO">${output} = 98394-rpcwport</msg>
<status status="PASS" starttime="20210422 11:17:31.696" endtime="20210422 11:17:37.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:17:37.346" level="INFO">98394-rpcwport</msg>
<status status="PASS" starttime="20210422 11:17:37.345" endtime="20210422 11:17:37.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:17:37.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:17:37.346" endtime="20210422 11:17:37.347"/>
</kw>
<status status="PASS" starttime="20210422 11:17:31.695" endtime="20210422 11:17:37.347"/>
</kw>
<msg timestamp="20210422 11:17:37.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:17:31.695" endtime="20210422 11:17:37.348"/>
</kw>
<msg timestamp="20210422 11:17:37.348" level="INFO">${result} = 98394-rpcwport</msg>
<status status="PASS" starttime="20210422 11:17:31.694" endtime="20210422 11:17:37.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:17:37.348" endtime="20210422 11:17:37.349"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:17:37.355" level="INFO">Running command 'ozone sh key put o3:///98394-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:20:49.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:20:49.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:17:37.352" endtime="20210422 11:20:49.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:20:49.051" level="INFO"/>
<status status="PASS" starttime="20210422 11:20:49.050" endtime="20210422 11:20:49.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:20:49.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:20:49.051" endtime="20210422 11:20:49.052"/>
</kw>
<status status="PASS" starttime="20210422 11:17:37.352" endtime="20210422 11:20:49.052"/>
</kw>
<msg timestamp="20210422 11:20:49.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:17:37.351" endtime="20210422 11:20:49.052"/>
</kw>
<status status="PASS" starttime="20210422 11:17:37.350" endtime="20210422 11:20:49.053"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:20:49.057" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:20:49.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:20:49.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:20:49.055" endtime="20210422 11:20:49.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:20:49.067" level="INFO"/>
<status status="PASS" starttime="20210422 11:20:49.062" endtime="20210422 11:20:49.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:20:49.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:20:49.068" endtime="20210422 11:20:49.069"/>
</kw>
<status status="PASS" starttime="20210422 11:20:49.054" endtime="20210422 11:20:49.070"/>
</kw>
<msg timestamp="20210422 11:20:49.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:20:49.054" endtime="20210422 11:20:49.070"/>
</kw>
<status status="PASS" starttime="20210422 11:20:49.053" endtime="20210422 11:20:49.070"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:20:49.076" level="INFO">Running command 'ozone sh key get o3:///98394-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:20:57.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:20:57.674" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:20:49.073" endtime="20210422 11:20:57.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:20:57.675" level="INFO"/>
<status status="PASS" starttime="20210422 11:20:57.674" endtime="20210422 11:20:57.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:20:57.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:20:57.675" endtime="20210422 11:20:57.676"/>
</kw>
<status status="PASS" starttime="20210422 11:20:49.072" endtime="20210422 11:20:57.676"/>
</kw>
<msg timestamp="20210422 11:20:57.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:20:49.072" endtime="20210422 11:20:57.676"/>
</kw>
<status status="PASS" starttime="20210422 11:20:49.070" endtime="20210422 11:20:57.677"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:20:57.682" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:20:57.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:20:57.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:20:57.680" endtime="20210422 11:20:57.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:20:57.689" level="INFO"/>
<status status="PASS" starttime="20210422 11:20:57.688" endtime="20210422 11:20:57.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:20:57.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:20:57.690" endtime="20210422 11:20:57.691"/>
</kw>
<status status="PASS" starttime="20210422 11:20:57.678" endtime="20210422 11:20:57.692"/>
</kw>
<msg timestamp="20210422 11:20:57.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:20:57.678" endtime="20210422 11:20:57.692"/>
</kw>
<status status="PASS" starttime="20210422 11:20:57.677" endtime="20210422 11:20:57.692"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:20:57.699" level="INFO">Running command 'ozone sh key put -t RATIS o3:///98394-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:05.968" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210422 11:20:57.696" endtime="20210422 11:21:05.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.970" endtime="20210422 11:21:05.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.972" endtime="20210422 11:21:05.972"/>
</kw>
<status status="FAIL" starttime="20210422 11:20:57.695" endtime="20210422 11:21:05.973"/>
</kw>
<msg timestamp="20210422 11:21:05.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210422 11:20:57.694" endtime="20210422 11:21:05.973"/>
</kw>
<status status="FAIL" starttime="20210422 11:20:57.693" endtime="20210422 11:21:05.973"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.974" endtime="20210422 11:21:05.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.974" endtime="20210422 11:21:05.974"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.974" endtime="20210422 11:21:05.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.974" endtime="20210422 11:21:05.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.975" endtime="20210422 11:21:05.975"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.975" endtime="20210422 11:21:05.975"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.975" endtime="20210422 11:21:05.975"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.975" endtime="20210422 11:21:05.975"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.975" endtime="20210422 11:21:05.975"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.976" endtime="20210422 11:21:05.976"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.976" endtime="20210422 11:21:05.976"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.976" endtime="20210422 11:21:05.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.976" endtime="20210422 11:21:05.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.976" endtime="20210422 11:21:05.977"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.977" endtime="20210422 11:21:05.977"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.977" endtime="20210422 11:21:05.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.980" endtime="20210422 11:21:05.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.981" endtime="20210422 11:21:05.981"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.981" endtime="20210422 11:21:05.981"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.981" endtime="20210422 11:21:05.981"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.981" endtime="20210422 11:21:05.981"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.981" endtime="20210422 11:21:05.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.982" endtime="20210422 11:21:05.982"/>
</kw>
<status status="FAIL" starttime="20210422 11:17:37.350" endtime="20210422 11:21:05.982"/>
</kw>
<status status="FAIL" starttime="20210422 11:17:37.349" endtime="20210422 11:21:05.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.982" endtime="20210422 11:21:05.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.983" endtime="20210422 11:21:05.983"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.983" endtime="20210422 11:21:05.983"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.983" endtime="20210422 11:21:05.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.983" endtime="20210422 11:21:05.983"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.983" endtime="20210422 11:21:05.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.984" endtime="20210422 11:21:05.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:21:05.984" endtime="20210422 11:21:05.984"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:21:05.984" endtime="20210422 11:21:06.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.006" endtime="20210422 11:21:06.006"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.006" endtime="20210422 11:21:06.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:21:06.006" endtime="20210422 11:21:06.006"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.007" endtime="20210422 11:21:06.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.007" endtime="20210422 11:21:06.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.007" endtime="20210422 11:21:06.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.007" endtime="20210422 11:21:06.007"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:21:06.007" endtime="20210422 11:21:06.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.008" endtime="20210422 11:21:06.008"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:21:06.008" endtime="20210422 11:21:06.008"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.008" endtime="20210422 11:21:06.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.008" endtime="20210422 11:21:06.008"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:21:06.008" endtime="20210422 11:21:06.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.025" endtime="20210422 11:21:06.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:21:06.025" endtime="20210422 11:21:06.026"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.026" endtime="20210422 11:21:06.026"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:21:06.027" endtime="20210422 11:21:06.027"/>
</kw>
<status status="FAIL" starttime="20210422 11:16:05.994" endtime="20210422 11:21:06.028"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210422 11:16:05.966" endtime="20210422 11:21:06.030">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:06.080" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:06.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:21:06.094" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 11:21:06.050" endtime="20210422 11:21:06.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:21:06.097" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 11:21:06.095" endtime="20210422 11:21:06.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:21:06.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:21:06.098" endtime="20210422 11:21:06.101"/>
</kw>
<status status="PASS" starttime="20210422 11:21:06.047" endtime="20210422 11:21:06.102"/>
</kw>
<msg timestamp="20210422 11:21:06.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:21:06.046" endtime="20210422 11:21:06.103"/>
</kw>
<msg timestamp="20210422 11:21:06.103" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 11:21:06.043" endtime="20210422 11:21:06.103"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 11:21:06.108" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 11:21:06.106" endtime="20210422 11:21:06.109"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:06.134" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:06.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:21:06.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:21:06.118" endtime="20210422 11:21:06.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:21:06.172" level="INFO"/>
<status status="PASS" starttime="20210422 11:21:06.171" endtime="20210422 11:21:06.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:21:06.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:21:06.172" endtime="20210422 11:21:06.173"/>
</kw>
<status status="PASS" starttime="20210422 11:21:06.116" endtime="20210422 11:21:06.173"/>
</kw>
<msg timestamp="20210422 11:21:06.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:21:06.116" endtime="20210422 11:21:06.173"/>
</kw>
<status status="PASS" starttime="20210422 11:21:06.113" endtime="20210422 11:21:06.173"/>
</kw>
<status status="PASS" starttime="20210422 11:21:06.112" endtime="20210422 11:21:06.174"/>
</kw>
<status status="PASS" starttime="20210422 11:21:06.040" endtime="20210422 11:21:06.174"/>
</kw>
<status status="PASS" starttime="20210422 11:21:06.036" endtime="20210422 11:21:06.174"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:06.201" level="INFO">Running command 'ozone sh volume info /98394-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:14.121" level="INFO">${rc} = 255</msg>
<msg timestamp="20210422 11:21:14.121" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98394-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210422 11:21:06.177" endtime="20210422 11:21:14.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:21:14.123" level="INFO">VOLUME_NOT_FOUND Volume 98394-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210422 11:21:14.122" endtime="20210422 11:21:14.123"/>
</kw>
<msg timestamp="20210422 11:21:14.123" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98394-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210422 11:21:06.176" endtime="20210422 11:21:14.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:21:14.123" endtime="20210422 11:21:14.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:14.129" level="INFO">Running command 'ozone sh volume create /98394-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:21.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:21:21.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:21:14.127" endtime="20210422 11:21:21.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:21:21.098" level="INFO"/>
<status status="PASS" starttime="20210422 11:21:21.096" endtime="20210422 11:21:21.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:21:21.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:21:21.098" endtime="20210422 11:21:21.099"/>
</kw>
<status status="PASS" starttime="20210422 11:21:14.126" endtime="20210422 11:21:21.100"/>
</kw>
<msg timestamp="20210422 11:21:21.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:21:14.126" endtime="20210422 11:21:21.100"/>
</kw>
<msg timestamp="20210422 11:21:21.101" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210422 11:21:14.125" endtime="20210422 11:21:21.101"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:21:21.102" endtime="20210422 11:21:21.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:21.113" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="98394-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:27.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:21:27.270" level="INFO">${output} = {
  "metadata": {},
  "name": "98394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210422 11:21:21.109" endtime="20210422 11:21:27.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:21:27.271" level="INFO">{
  "metadata": {},
  "name": "98394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-22T11:21:20.749Z",
  "modificationTime": "2021-04-22T11:21:20.749Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210422 11:21:27.270" endtime="20210422 11:21:27.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:21:27.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:21:27.271" endtime="20210422 11:21:27.272"/>
</kw>
<status status="PASS" starttime="20210422 11:21:21.106" endtime="20210422 11:21:27.272"/>
</kw>
<msg timestamp="20210422 11:21:27.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:21:21.105" endtime="20210422 11:21:27.273"/>
</kw>
<msg timestamp="20210422 11:21:27.273" level="INFO">${result} = {
  "metadata": {},
  "name": "98394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210422 11:21:21.103" endtime="20210422 11:21:27.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:21:27.273" endtime="20210422 11:21:27.274"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:27.278" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="98394-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:35.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:21:35.012" level="INFO">${output} = {
  "metadata": {},
  "name": "98394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210422 11:21:27.276" endtime="20210422 11:21:35.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:21:35.013" level="INFO">{
  "metadata": {},
  "name": "98394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-22T11:21:20.749Z",
  "modificationTime": "2021-04-22T11:21:20.749Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210422 11:21:35.012" endtime="20210422 11:21:35.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:21:35.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:21:35.014" endtime="20210422 11:21:35.015"/>
</kw>
<status status="PASS" starttime="20210422 11:21:27.275" endtime="20210422 11:21:35.015"/>
</kw>
<msg timestamp="20210422 11:21:35.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:21:27.275" endtime="20210422 11:21:35.016"/>
</kw>
<msg timestamp="20210422 11:21:35.016" level="INFO">${result} = {
  "metadata": {},
  "name": "98394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210422 11:21:27.274" endtime="20210422 11:21:35.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210422 11:21:35.016" endtime="20210422 11:21:35.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:35.025" level="INFO">Running command 'ozone sh volume setquota /98394-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:40.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:21:40.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:21:35.020" endtime="20210422 11:21:40.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:21:40.025" level="INFO"/>
<status status="PASS" starttime="20210422 11:21:40.024" endtime="20210422 11:21:40.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:21:40.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:21:40.026" endtime="20210422 11:21:40.027"/>
</kw>
<status status="PASS" starttime="20210422 11:21:35.018" endtime="20210422 11:21:40.027"/>
</kw>
<msg timestamp="20210422 11:21:40.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:21:35.018" endtime="20210422 11:21:40.028"/>
</kw>
<status status="PASS" starttime="20210422 11:21:35.017" endtime="20210422 11:21:40.028"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:40.035" level="INFO">Running command 'ozone sh volume info /98394-rpcwoscheme | jq -r '. | select(.name=="98394-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:47.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:21:47.986" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:21:40.032" endtime="20210422 11:21:47.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:21:47.989" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210422 11:21:47.987" endtime="20210422 11:21:47.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:21:47.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:21:47.990" endtime="20210422 11:21:47.992"/>
</kw>
<status status="PASS" starttime="20210422 11:21:40.031" endtime="20210422 11:21:47.992"/>
</kw>
<msg timestamp="20210422 11:21:47.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:21:40.031" endtime="20210422 11:21:47.993"/>
</kw>
<msg timestamp="20210422 11:21:47.994" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:21:40.029" endtime="20210422 11:21:47.994"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:21:47.994" endtime="20210422 11:21:47.995"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:48.001" level="INFO">Running command 'ozone sh bucket create /98394-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:52.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:21:52.848" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:21:47.998" endtime="20210422 11:21:52.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:21:52.851" level="INFO"/>
<status status="PASS" starttime="20210422 11:21:52.849" endtime="20210422 11:21:52.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:21:52.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:21:52.851" endtime="20210422 11:21:52.852"/>
</kw>
<status status="PASS" starttime="20210422 11:21:47.997" endtime="20210422 11:21:52.853"/>
</kw>
<msg timestamp="20210422 11:21:52.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:21:47.997" endtime="20210422 11:21:52.853"/>
</kw>
<status status="PASS" starttime="20210422 11:21:47.995" endtime="20210422 11:21:52.853"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:52.859" level="INFO">Running command 'ozone sh bucket info /98394-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:21:58.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:21:58.378" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210422 11:21:52.856" endtime="20210422 11:21:58.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:21:58.379" level="INFO">DISK</msg>
<status status="PASS" starttime="20210422 11:21:58.379" endtime="20210422 11:21:58.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:21:58.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:21:58.380" endtime="20210422 11:21:58.380"/>
</kw>
<status status="PASS" starttime="20210422 11:21:52.856" endtime="20210422 11:21:58.381"/>
</kw>
<msg timestamp="20210422 11:21:58.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:21:52.855" endtime="20210422 11:21:58.381"/>
</kw>
<msg timestamp="20210422 11:21:58.381" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210422 11:21:52.853" endtime="20210422 11:21:58.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:21:58.381" endtime="20210422 11:21:58.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:21:58.387" level="INFO">Running command 'ozone sh bucket info /98394-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:22:04.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:22:04.082" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:21:58.384" endtime="20210422 11:22:04.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:22:04.083" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210422 11:22:04.083" endtime="20210422 11:22:04.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:22:04.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:22:04.084" endtime="20210422 11:22:04.084"/>
</kw>
<status status="PASS" starttime="20210422 11:21:58.383" endtime="20210422 11:22:04.085"/>
</kw>
<msg timestamp="20210422 11:22:04.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:21:58.383" endtime="20210422 11:22:04.085"/>
</kw>
<msg timestamp="20210422 11:22:04.085" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210422 11:21:58.382" endtime="20210422 11:22:04.085"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:22:04.085" endtime="20210422 11:22:04.086"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:22:04.096" level="INFO">Running command 'ozone sh bucket info /98394-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:22:10.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:22:10.955" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210422 11:22:04.092" endtime="20210422 11:22:10.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:22:10.957" level="INFO">100</msg>
<status status="PASS" starttime="20210422 11:22:10.956" endtime="20210422 11:22:10.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:22:10.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:22:10.958" endtime="20210422 11:22:10.960"/>
</kw>
<status status="PASS" starttime="20210422 11:22:04.090" endtime="20210422 11:22:10.960"/>
</kw>
<msg timestamp="20210422 11:22:10.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:22:04.090" endtime="20210422 11:22:10.961"/>
</kw>
<msg timestamp="20210422 11:22:10.962" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210422 11:22:04.087" endtime="20210422 11:22:10.962"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:22:10.962" endtime="20210422 11:22:10.963"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:22:10.970" level="INFO">Running command 'ozone sh bucket setquota /98394-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:22:17.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:22:17.768" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:22:10.966" endtime="20210422 11:22:17.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:22:17.771" level="INFO"/>
<status status="PASS" starttime="20210422 11:22:17.769" endtime="20210422 11:22:17.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:22:17.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:22:17.772" endtime="20210422 11:22:17.773"/>
</kw>
<status status="PASS" starttime="20210422 11:22:10.965" endtime="20210422 11:22:17.774"/>
</kw>
<msg timestamp="20210422 11:22:17.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:22:10.964" endtime="20210422 11:22:17.775"/>
</kw>
<status status="PASS" starttime="20210422 11:22:10.963" endtime="20210422 11:22:17.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:22:17.783" level="INFO">Running command 'ozone sh bucket info /98394-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:22:25.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:22:25.090" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210422 11:22:17.780" endtime="20210422 11:22:25.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:22:25.092" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210422 11:22:25.091" endtime="20210422 11:22:25.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:22:25.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:22:25.092" endtime="20210422 11:22:25.094"/>
</kw>
<status status="PASS" starttime="20210422 11:22:17.778" endtime="20210422 11:22:25.094"/>
</kw>
<msg timestamp="20210422 11:22:25.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:22:17.778" endtime="20210422 11:22:25.095"/>
</kw>
<msg timestamp="20210422 11:22:25.095" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210422 11:22:17.775" endtime="20210422 11:22:25.095"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:22:25.096" endtime="20210422 11:22:25.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:22:25.104" level="INFO">Running command 'ozone sh bucket info /98394-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:22:32.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:22:32.460" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210422 11:22:25.101" endtime="20210422 11:22:32.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:22:32.461" level="INFO">1000</msg>
<status status="PASS" starttime="20210422 11:22:32.461" endtime="20210422 11:22:32.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:22:32.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:22:32.462" endtime="20210422 11:22:32.464"/>
</kw>
<status status="PASS" starttime="20210422 11:22:25.100" endtime="20210422 11:22:32.464"/>
</kw>
<msg timestamp="20210422 11:22:32.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:22:25.099" endtime="20210422 11:22:32.464"/>
</kw>
<msg timestamp="20210422 11:22:32.465" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210422 11:22:25.097" endtime="20210422 11:22:32.465"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:22:32.465" endtime="20210422 11:22:32.467"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:22:32.473" level="INFO">Running command 'ozone sh bucket list /98394-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:22:39.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:22:39.965" level="INFO">${output} = 98394-rpcwoscheme</msg>
<status status="PASS" starttime="20210422 11:22:32.471" endtime="20210422 11:22:39.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:22:39.967" level="INFO">98394-rpcwoscheme</msg>
<status status="PASS" starttime="20210422 11:22:39.966" endtime="20210422 11:22:39.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:22:39.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:22:39.968" endtime="20210422 11:22:39.970"/>
</kw>
<status status="PASS" starttime="20210422 11:22:32.468" endtime="20210422 11:22:39.970"/>
</kw>
<msg timestamp="20210422 11:22:39.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:22:32.468" endtime="20210422 11:22:39.971"/>
</kw>
<msg timestamp="20210422 11:22:39.971" level="INFO">${result} = 98394-rpcwoscheme</msg>
<status status="PASS" starttime="20210422 11:22:32.467" endtime="20210422 11:22:39.974"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210422 11:22:39.974" endtime="20210422 11:22:39.975"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:22:39.986" level="INFO">Running command 'ozone sh key put /98394-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:25:51.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:25:51.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:22:39.980" endtime="20210422 11:25:51.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:25:51.204" level="INFO"/>
<status status="PASS" starttime="20210422 11:25:51.203" endtime="20210422 11:25:51.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:25:51.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:25:51.205" endtime="20210422 11:25:51.205"/>
</kw>
<status status="PASS" starttime="20210422 11:22:39.980" endtime="20210422 11:25:51.206"/>
</kw>
<msg timestamp="20210422 11:25:51.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:22:39.979" endtime="20210422 11:25:51.206"/>
</kw>
<status status="PASS" starttime="20210422 11:22:39.977" endtime="20210422 11:25:51.206"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:25:51.211" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:25:51.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:25:51.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:25:51.209" endtime="20210422 11:25:51.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:25:51.216" level="INFO"/>
<status status="PASS" starttime="20210422 11:25:51.215" endtime="20210422 11:25:51.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:25:51.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:25:51.217" endtime="20210422 11:25:51.218"/>
</kw>
<status status="PASS" starttime="20210422 11:25:51.208" endtime="20210422 11:25:51.218"/>
</kw>
<msg timestamp="20210422 11:25:51.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:25:51.207" endtime="20210422 11:25:51.219"/>
</kw>
<status status="PASS" starttime="20210422 11:25:51.206" endtime="20210422 11:25:51.219"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:25:51.223" level="INFO">Running command 'ozone sh key get /98394-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:26:01.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:26:01.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:25:51.221" endtime="20210422 11:26:01.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:26:01.707" level="INFO"/>
<status status="PASS" starttime="20210422 11:26:01.707" endtime="20210422 11:26:01.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:26:01.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:26:01.708" endtime="20210422 11:26:01.708"/>
</kw>
<status status="PASS" starttime="20210422 11:25:51.220" endtime="20210422 11:26:01.709"/>
</kw>
<msg timestamp="20210422 11:26:01.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:25:51.220" endtime="20210422 11:26:01.710"/>
</kw>
<status status="PASS" starttime="20210422 11:25:51.219" endtime="20210422 11:26:01.710"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:26:01.722" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:26:01.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 11:26:01.726" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 11:26:01.712" endtime="20210422 11:26:01.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 11:26:01.728" level="INFO"/>
<status status="PASS" starttime="20210422 11:26:01.727" endtime="20210422 11:26:01.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 11:26:01.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 11:26:01.728" endtime="20210422 11:26:01.729"/>
</kw>
<status status="PASS" starttime="20210422 11:26:01.712" endtime="20210422 11:26:01.730"/>
</kw>
<msg timestamp="20210422 11:26:01.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 11:26:01.711" endtime="20210422 11:26:01.730"/>
</kw>
<status status="PASS" starttime="20210422 11:26:01.710" endtime="20210422 11:26:01.730"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 11:26:01.734" level="INFO">Running command 'ozone sh key put -t RATIS /98394-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 11:26:06.034" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210422 11:26:01.732" endtime="20210422 11:26:06.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.035" endtime="20210422 11:26:06.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.035" endtime="20210422 11:26:06.035"/>
</kw>
<status status="FAIL" starttime="20210422 11:26:01.732" endtime="20210422 11:26:06.036"/>
</kw>
<msg timestamp="20210422 11:26:06.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210422 11:26:01.731" endtime="20210422 11:26:06.036"/>
</kw>
<status status="FAIL" starttime="20210422 11:26:01.731" endtime="20210422 11:26:06.036"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.036" endtime="20210422 11:26:06.037"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.038" endtime="20210422 11:26:06.038"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.045" endtime="20210422 11:26:06.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.045" endtime="20210422 11:26:06.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.046" endtime="20210422 11:26:06.046"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.046" endtime="20210422 11:26:06.046"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.046" endtime="20210422 11:26:06.047"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.048" endtime="20210422 11:26:06.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.057" endtime="20210422 11:26:06.058"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.058" endtime="20210422 11:26:06.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.058" endtime="20210422 11:26:06.058"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.058" endtime="20210422 11:26:06.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.058" endtime="20210422 11:26:06.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.061" endtime="20210422 11:26:06.061"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.061" endtime="20210422 11:26:06.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.062" endtime="20210422 11:26:06.062"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.062" endtime="20210422 11:26:06.062"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.062" endtime="20210422 11:26:06.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.062" endtime="20210422 11:26:06.062"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.063" endtime="20210422 11:26:06.063"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.063" endtime="20210422 11:26:06.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.063" endtime="20210422 11:26:06.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.063" endtime="20210422 11:26:06.063"/>
</kw>
<status status="FAIL" starttime="20210422 11:22:39.976" endtime="20210422 11:26:06.064"/>
</kw>
<status status="FAIL" starttime="20210422 11:22:39.976" endtime="20210422 11:26:06.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.064" endtime="20210422 11:26:06.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.064" endtime="20210422 11:26:06.064"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.064" endtime="20210422 11:26:06.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.074" endtime="20210422 11:26:06.074"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.074" endtime="20210422 11:26:06.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.074" endtime="20210422 11:26:06.079"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.081" endtime="20210422 11:26:06.081"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.081" endtime="20210422 11:26:06.088"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.089" endtime="20210422 11:26:06.089"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.089" endtime="20210422 11:26:06.089"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.089" endtime="20210422 11:26:06.089"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.089" endtime="20210422 11:26:06.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.090" endtime="20210422 11:26:06.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.090" endtime="20210422 11:26:06.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.090" endtime="20210422 11:26:06.090"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.090" endtime="20210422 11:26:06.090"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.091" endtime="20210422 11:26:06.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.091" endtime="20210422 11:26:06.091"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.091" endtime="20210422 11:26:06.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.091" endtime="20210422 11:26:06.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.091" endtime="20210422 11:26:06.091"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.092" endtime="20210422 11:26:06.092"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.092" endtime="20210422 11:26:06.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210422 11:26:06.092" endtime="20210422 11:26:06.092"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.092" endtime="20210422 11:26:06.092"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210422 11:26:06.092" endtime="20210422 11:26:06.092"/>
</kw>
<status status="FAIL" starttime="20210422 11:21:06.174" endtime="20210422 11:26:06.093"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210422 11:21:06.032" endtime="20210422 11:26:06.093">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210422 11:01:31.658" endtime="20210422 11:26:06.106"/>
</suite>
<status status="FAIL" starttime="20210422 10:37:22.718" endtime="20210422 11:26:06.133"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:37:17.365" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:37:17.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:37:17.369" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210422 10:37:17.361" endtime="20210422 10:37:17.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:37:17.370" level="INFO">scm</msg>
<status status="PASS" starttime="20210422 10:37:17.369" endtime="20210422 10:37:17.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:37:17.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:37:17.370" endtime="20210422 10:37:17.371"/>
</kw>
<status status="PASS" starttime="20210422 10:37:17.361" endtime="20210422 10:37:17.371"/>
</kw>
<msg timestamp="20210422 10:37:17.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:37:17.360" endtime="20210422 10:37:17.371"/>
</kw>
<msg timestamp="20210422 10:37:17.371" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210422 10:37:17.360" endtime="20210422 10:37:17.371"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210422 10:37:17.372" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210422 10:37:17.372" endtime="20210422 10:37:17.372"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210422 10:37:17.376" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210422 10:37:17.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210422 10:37:17.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210422 10:37:17.375" endtime="20210422 10:37:17.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210422 10:37:17.385" level="INFO"/>
<status status="PASS" starttime="20210422 10:37:17.384" endtime="20210422 10:37:17.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210422 10:37:17.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210422 10:37:17.385" endtime="20210422 10:37:17.386"/>
</kw>
<status status="PASS" starttime="20210422 10:37:17.374" endtime="20210422 10:37:17.387"/>
</kw>
<msg timestamp="20210422 10:37:17.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210422 10:37:17.374" endtime="20210422 10:37:17.387"/>
</kw>
<status status="PASS" starttime="20210422 10:37:17.373" endtime="20210422 10:37:17.387"/>
</kw>
<status status="PASS" starttime="20210422 10:37:17.372" endtime="20210422 10:37:17.387"/>
</kw>
<status status="PASS" starttime="20210422 10:37:17.359" endtime="20210422 10:37:17.387"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210422 10:37:17.358" endtime="20210422 10:37:17.388"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210422 10:37:17.294" endtime="20210422 10:37:17.389"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2923510"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
