<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.1 (Python 3.6.9 on linux)" generated="20210419 01:53:28.599" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:04:13.617" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:04:13.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:04:13.622" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:04:13.612" endtime="20210419 01:04:13.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:04:13.623" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:04:13.623" endtime="20210419 01:04:13.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:04:13.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:04:13.624" endtime="20210419 01:04:13.625"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.612" endtime="20210419 01:04:13.625"/>
</kw>
<msg timestamp="20210419 01:04:13.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:04:13.611" endtime="20210419 01:04:13.625"/>
</kw>
<msg timestamp="20210419 01:04:13.625" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:04:13.611" endtime="20210419 01:04:13.625"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:04:13.630" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:04:13.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:04:13.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:04:13.628" endtime="20210419 01:04:13.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:04:13.643" level="INFO"/>
<status status="PASS" starttime="20210419 01:04:13.640" endtime="20210419 01:04:13.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:04:13.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:04:13.643" endtime="20210419 01:04:13.644"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.627" endtime="20210419 01:04:13.644"/>
</kw>
<msg timestamp="20210419 01:04:13.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:04:13.627" endtime="20210419 01:04:13.644"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.626" endtime="20210419 01:04:13.645"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.626" endtime="20210419 01:04:13.645"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.610" endtime="20210419 01:04:13.645"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.610" endtime="20210419 01:04:13.645"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:04:13.649" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:04:13.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:04:13.773" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210419 01:04:13.647" endtime="20210419 01:04:13.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:04:13.775" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 19 Apr 2021 01:04:13 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCa3ch6ACJmO0zE5qZ9E+IrY4oH1ED5Y9I4pDTRHCKiybWNSINaccWxAWRmuHFnDmu7VY3qdLTd6c789ogMCyQCjSf
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1618830253763&amp;s=x4uCg9G8yR8wEhNw7hNTPJ+gPX31UdK4/KTj+vuaYdo="; Path=/; HttpOnly
Last-Modified: Mon, 19 Apr 2021 00:50:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210419 01:04:13.774" endtime="20210419 01:04:13.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:04:13.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:04:13.775" endtime="20210419 01:04:13.776"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.646" endtime="20210419 01:04:13.776"/>
</kw>
<msg timestamp="20210419 01:04:13.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:04:13.646" endtime="20210419 01:04:13.776"/>
</kw>
<msg timestamp="20210419 01:04:13.777" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210419 01:04:13.645" endtime="20210419 01:04:13.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:04:13.777" endtime="20210419 01:04:13.777"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210419 01:04:13.609" endtime="20210419 01:04:13.778"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:04:13.793" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:04:13.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:04:13.796" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:04:13.787" endtime="20210419 01:04:13.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:04:13.798" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:04:13.797" endtime="20210419 01:04:13.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:04:13.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:04:13.798" endtime="20210419 01:04:13.799"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.786" endtime="20210419 01:04:13.799"/>
</kw>
<msg timestamp="20210419 01:04:13.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:04:13.783" endtime="20210419 01:04:13.799"/>
</kw>
<msg timestamp="20210419 01:04:13.800" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:04:13.783" endtime="20210419 01:04:13.800"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:04:13.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:04:13.800" endtime="20210419 01:04:13.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:04:13.808" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:04:13.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:04:13.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:04:13.805" endtime="20210419 01:04:13.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:04:13.817" level="INFO"/>
<status status="PASS" starttime="20210419 01:04:13.817" endtime="20210419 01:04:13.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:04:13.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:04:13.818" endtime="20210419 01:04:13.818"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.805" endtime="20210419 01:04:13.819"/>
</kw>
<msg timestamp="20210419 01:04:13.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:04:13.804" endtime="20210419 01:04:13.819"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.803" endtime="20210419 01:04:13.819"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.803" endtime="20210419 01:04:13.819"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.782" endtime="20210419 01:04:13.819"/>
</kw>
<status status="PASS" starttime="20210419 01:04:13.781" endtime="20210419 01:04:13.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:04:13.825" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:13.780" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210419 01:04:13.822" endtime="20210419 01:09:13.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210419 01:09:13.781" endtime="20210419 01:09:13.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210419 01:09:13.781" endtime="20210419 01:09:13.781"/>
</kw>
<status status="FAIL" starttime="20210419 01:04:13.821" endtime="20210419 01:09:13.781"/>
</kw>
<msg timestamp="20210419 01:09:13.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210419 01:04:13.820" endtime="20210419 01:09:13.782"/>
</kw>
<status status="FAIL" starttime="20210419 01:04:13.820" endtime="20210419 01:09:13.782"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210419 01:09:13.782" endtime="20210419 01:09:13.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:09:13.783" endtime="20210419 01:09:13.783"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210419 01:04:13.779" endtime="20210419 01:09:13.783">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210419 01:04:13.577" endtime="20210419 01:09:13.785"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:13.798" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:16.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:09:16.628" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210419 01:09:13.795" endtime="20210419 01:09:16.628"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:16.629" level="INFO">om</msg>
<status status="PASS" starttime="20210419 01:09:16.628" endtime="20210419 01:09:16.630"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:16.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:16.630" endtime="20210419 01:09:16.632"/>
</kw>
<status status="PASS" starttime="20210419 01:09:13.794" endtime="20210419 01:09:16.633"/>
</kw>
<msg timestamp="20210419 01:09:16.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:09:13.794" endtime="20210419 01:09:16.633"/>
</kw>
<msg timestamp="20210419 01:09:16.634" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210419 01:09:13.793" endtime="20210419 01:09:16.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:09:16.635" endtime="20210419 01:09:16.636"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:16.643" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:19.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:09:19.689" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210419 01:09:16.639" endtime="20210419 01:09:19.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:19.693" level="INFO">om</msg>
<status status="PASS" starttime="20210419 01:09:19.690" endtime="20210419 01:09:19.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:19.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:19.694" endtime="20210419 01:09:19.695"/>
</kw>
<status status="PASS" starttime="20210419 01:09:16.638" endtime="20210419 01:09:19.696"/>
</kw>
<msg timestamp="20210419 01:09:19.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:09:16.637" endtime="20210419 01:09:19.696"/>
</kw>
<msg timestamp="20210419 01:09:19.697" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210419 01:09:16.636" endtime="20210419 01:09:19.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:09:19.697" endtime="20210419 01:09:19.699"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210419 01:09:13.792" endtime="20210419 01:09:19.699"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:19.711" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:22.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:09:22.552" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:09:19.707" endtime="20210419 01:09:22.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:22.553" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:09:22.552" endtime="20210419 01:09:22.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:22.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:22.553" endtime="20210419 01:09:22.554"/>
</kw>
<status status="PASS" starttime="20210419 01:09:19.706" endtime="20210419 01:09:22.554"/>
</kw>
<msg timestamp="20210419 01:09:22.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:09:19.705" endtime="20210419 01:09:22.555"/>
</kw>
<msg timestamp="20210419 01:09:22.555" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210419 01:09:19.703" endtime="20210419 01:09:22.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:09:22.555" endtime="20210419 01:09:22.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:22.561" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:25.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:09:25.742" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:09:22.558" endtime="20210419 01:09:25.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:25.744" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:09:25.743" endtime="20210419 01:09:25.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:25.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:25.745" endtime="20210419 01:09:25.747"/>
</kw>
<status status="PASS" starttime="20210419 01:09:22.557" endtime="20210419 01:09:25.747"/>
</kw>
<msg timestamp="20210419 01:09:25.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:09:22.557" endtime="20210419 01:09:25.748"/>
</kw>
<msg timestamp="20210419 01:09:25.749" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210419 01:09:22.556" endtime="20210419 01:09:25.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:09:25.750" endtime="20210419 01:09:25.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210419 01:09:19.701" endtime="20210419 01:09:25.752"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:25.761" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:28.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:09:28.626" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210419 01:09:25.758" endtime="20210419 01:09:28.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:28.627" level="INFO">om</msg>
<status status="PASS" starttime="20210419 01:09:28.626" endtime="20210419 01:09:28.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:28.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:28.627" endtime="20210419 01:09:28.628"/>
</kw>
<status status="PASS" starttime="20210419 01:09:25.757" endtime="20210419 01:09:28.628"/>
</kw>
<msg timestamp="20210419 01:09:28.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:09:25.756" endtime="20210419 01:09:28.629"/>
</kw>
<msg timestamp="20210419 01:09:28.629" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210419 01:09:25.754" endtime="20210419 01:09:28.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:09:28.629" endtime="20210419 01:09:28.629"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:09:28.630" endtime="20210419 01:09:28.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:28.634" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:31.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:09:31.408" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210419 01:09:28.632" endtime="20210419 01:09:31.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:31.410" level="INFO">om</msg>
<status status="PASS" starttime="20210419 01:09:31.409" endtime="20210419 01:09:31.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:31.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:31.410" endtime="20210419 01:09:31.412"/>
</kw>
<status status="PASS" starttime="20210419 01:09:28.631" endtime="20210419 01:09:31.412"/>
</kw>
<msg timestamp="20210419 01:09:31.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:09:28.631" endtime="20210419 01:09:31.412"/>
</kw>
<msg timestamp="20210419 01:09:31.413" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210419 01:09:28.630" endtime="20210419 01:09:31.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:09:31.413" endtime="20210419 01:09:31.413"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:09:31.414" endtime="20210419 01:09:31.414"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210419 01:09:25.753" endtime="20210419 01:09:31.414"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:31.422" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:34.409" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:09:34.410" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210419 01:09:31.419" endtime="20210419 01:09:34.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:34.413" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210419 01:09:34.410" endtime="20210419 01:09:34.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:34.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:34.414" endtime="20210419 01:09:34.415"/>
</kw>
<msg timestamp="20210419 01:09:34.416" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210419 01:09:31.417" endtime="20210419 01:09:34.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:09:34.416" endtime="20210419 01:09:34.417"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:34.421" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:37.282" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:09:37.282" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210419 01:09:34.419" endtime="20210419 01:09:37.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:37.284" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210419 01:09:37.283" endtime="20210419 01:09:37.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:37.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:37.284" endtime="20210419 01:09:37.285"/>
</kw>
<msg timestamp="20210419 01:09:37.286" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210419 01:09:34.418" endtime="20210419 01:09:37.286"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:09:37.287" endtime="20210419 01:09:37.287"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210419 01:09:31.416" endtime="20210419 01:09:37.288"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210419 01:09:13.787" endtime="20210419 01:09:37.289"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210419 01:09:37.313" level="INFO">${random} = 06173</msg>
<status status="PASS" starttime="20210419 01:09:37.312" endtime="20210419 01:09:37.313"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:09:37.315" level="INFO">${source} = 06173-source</msg>
<status status="PASS" starttime="20210419 01:09:37.313" endtime="20210419 01:09:37.315"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:09:37.317" level="INFO">${target} = 06173-target</msg>
<status status="PASS" starttime="20210419 01:09:37.316" endtime="20210419 01:09:37.317"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:37.322" level="INFO">Running command 'ozone sh volume create 06173-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:45.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:09:45.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:09:37.319" endtime="20210419 01:09:45.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:45.709" level="INFO"/>
<status status="PASS" starttime="20210419 01:09:45.709" endtime="20210419 01:09:45.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:45.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:45.709" endtime="20210419 01:09:45.710"/>
</kw>
<status status="PASS" starttime="20210419 01:09:37.319" endtime="20210419 01:09:45.710"/>
</kw>
<msg timestamp="20210419 01:09:45.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:09:37.318" endtime="20210419 01:09:45.711"/>
</kw>
<status status="PASS" starttime="20210419 01:09:37.318" endtime="20210419 01:09:45.711"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:45.717" level="INFO">Running command 'ozone sh volume create 06173-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:52.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:09:52.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:09:45.714" endtime="20210419 01:09:52.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:52.791" level="INFO"/>
<status status="PASS" starttime="20210419 01:09:52.790" endtime="20210419 01:09:52.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:52.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:52.791" endtime="20210419 01:09:52.792"/>
</kw>
<status status="PASS" starttime="20210419 01:09:45.713" endtime="20210419 01:09:52.792"/>
</kw>
<msg timestamp="20210419 01:09:52.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:09:45.712" endtime="20210419 01:09:52.792"/>
</kw>
<status status="PASS" starttime="20210419 01:09:45.711" endtime="20210419 01:09:52.793"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:52.799" level="INFO">Running command 'ozone sh bucket create 06173-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:09:58.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:09:58.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:09:52.796" endtime="20210419 01:09:58.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:09:58.932" level="INFO"/>
<status status="PASS" starttime="20210419 01:09:58.931" endtime="20210419 01:09:58.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:09:58.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:09:58.932" endtime="20210419 01:09:58.932"/>
</kw>
<status status="PASS" starttime="20210419 01:09:52.796" endtime="20210419 01:09:58.933"/>
</kw>
<msg timestamp="20210419 01:09:58.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:09:52.794" endtime="20210419 01:09:58.933"/>
</kw>
<status status="PASS" starttime="20210419 01:09:52.794" endtime="20210419 01:09:58.933"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:09:58.938" level="INFO">Running command 'ozone sh key put 06173-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:13:09.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:13:09.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:09:58.935" endtime="20210419 01:13:09.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:13:09.810" level="INFO"/>
<status status="PASS" starttime="20210419 01:13:09.809" endtime="20210419 01:13:09.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:13:09.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:13:09.810" endtime="20210419 01:13:09.811"/>
</kw>
<status status="PASS" starttime="20210419 01:09:58.934" endtime="20210419 01:13:09.811"/>
</kw>
<msg timestamp="20210419 01:13:09.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:09:58.934" endtime="20210419 01:13:09.811"/>
</kw>
<status status="PASS" starttime="20210419 01:09:58.933" endtime="20210419 01:13:09.812"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:13:09.818" level="INFO">Running command 'ozone sh bucket create 06173-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:13:16.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:13:16.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:13:09.814" endtime="20210419 01:13:16.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:13:16.999" level="INFO"/>
<status status="PASS" starttime="20210419 01:13:16.998" endtime="20210419 01:13:16.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:13:17.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:13:16.999" endtime="20210419 01:13:17.001"/>
</kw>
<status status="PASS" starttime="20210419 01:13:09.813" endtime="20210419 01:13:17.001"/>
</kw>
<msg timestamp="20210419 01:13:17.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:13:09.813" endtime="20210419 01:13:17.002"/>
</kw>
<status status="PASS" starttime="20210419 01:13:09.812" endtime="20210419 01:13:17.002"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:13:17.010" level="INFO">Running command 'ozone sh bucket link 06173-source/readable-bucket 06173-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:13:25.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:13:25.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:13:17.006" endtime="20210419 01:13:25.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:13:25.114" level="INFO"/>
<status status="PASS" starttime="20210419 01:13:25.113" endtime="20210419 01:13:25.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:13:25.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:13:25.114" endtime="20210419 01:13:25.114"/>
</kw>
<status status="PASS" starttime="20210419 01:13:17.005" endtime="20210419 01:13:25.115"/>
</kw>
<msg timestamp="20210419 01:13:25.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:13:17.004" endtime="20210419 01:13:25.115"/>
</kw>
<status status="PASS" starttime="20210419 01:13:17.003" endtime="20210419 01:13:25.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:13:25.126" level="INFO">Running command 'ozone sh bucket link 06173-source/readable-bucket 06173-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:13:31.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:13:31.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:13:25.118" endtime="20210419 01:13:31.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:13:31.899" level="INFO"/>
<status status="PASS" starttime="20210419 01:13:31.898" endtime="20210419 01:13:31.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:13:31.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:13:31.899" endtime="20210419 01:13:31.900"/>
</kw>
<status status="PASS" starttime="20210419 01:13:25.117" endtime="20210419 01:13:31.900"/>
</kw>
<msg timestamp="20210419 01:13:31.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:13:25.117" endtime="20210419 01:13:31.900"/>
</kw>
<status status="PASS" starttime="20210419 01:13:25.115" endtime="20210419 01:13:31.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:13:31.904" level="INFO">Running command 'ozone sh bucket link 06173-source/unreadable-bucket 06173-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:13:37.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:13:37.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:13:31.902" endtime="20210419 01:13:37.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:13:37.680" level="INFO"/>
<status status="PASS" starttime="20210419 01:13:37.679" endtime="20210419 01:13:37.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:13:37.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:13:37.680" endtime="20210419 01:13:37.681"/>
</kw>
<status status="PASS" starttime="20210419 01:13:31.902" endtime="20210419 01:13:37.681"/>
</kw>
<msg timestamp="20210419 01:13:37.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:13:31.901" endtime="20210419 01:13:37.682"/>
</kw>
<status status="PASS" starttime="20210419 01:13:31.901" endtime="20210419 01:13:37.682"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:13:37.689" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 06173-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:13:45.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:13:45.309" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:13:37.685" endtime="20210419 01:13:45.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:13:45.310" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:13:45.309" endtime="20210419 01:13:45.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:13:45.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:13:45.310" endtime="20210419 01:13:45.311"/>
</kw>
<status status="PASS" starttime="20210419 01:13:37.684" endtime="20210419 01:13:45.311"/>
</kw>
<msg timestamp="20210419 01:13:45.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:13:37.683" endtime="20210419 01:13:45.311"/>
</kw>
<status status="PASS" starttime="20210419 01:13:37.683" endtime="20210419 01:13:45.312"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:13:45.317" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 06173-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:13:52.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:13:52.243" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:13:45.315" endtime="20210419 01:13:52.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:13:52.244" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:13:52.244" endtime="20210419 01:13:52.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:13:52.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:13:52.245" endtime="20210419 01:13:52.246"/>
</kw>
<status status="PASS" starttime="20210419 01:13:45.314" endtime="20210419 01:13:52.246"/>
</kw>
<msg timestamp="20210419 01:13:52.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:13:45.313" endtime="20210419 01:13:52.246"/>
</kw>
<status status="PASS" starttime="20210419 01:13:45.312" endtime="20210419 01:13:52.247"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:13:52.252" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 06173-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:13:58.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:13:58.205" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:13:52.249" endtime="20210419 01:13:58.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:13:58.207" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:13:58.206" endtime="20210419 01:13:58.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:13:58.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:13:58.207" endtime="20210419 01:13:58.210"/>
</kw>
<status status="PASS" starttime="20210419 01:13:52.249" endtime="20210419 01:13:58.211"/>
</kw>
<msg timestamp="20210419 01:13:58.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:13:52.248" endtime="20210419 01:13:58.211"/>
</kw>
<status status="PASS" starttime="20210419 01:13:52.247" endtime="20210419 01:13:58.212"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:13:58.216" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 06173-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:14:05.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:14:05.754" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:13:58.213" endtime="20210419 01:14:05.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:14:05.755" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:14:05.755" endtime="20210419 01:14:05.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:14:05.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:14:05.755" endtime="20210419 01:14:05.756"/>
</kw>
<status status="PASS" starttime="20210419 01:13:58.213" endtime="20210419 01:14:05.757"/>
</kw>
<msg timestamp="20210419 01:14:05.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:13:58.213" endtime="20210419 01:14:05.757"/>
</kw>
<status status="PASS" starttime="20210419 01:13:58.212" endtime="20210419 01:14:05.757"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:14:05.762" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 06173-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:14:11.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:14:11.213" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:14:05.760" endtime="20210419 01:14:11.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:14:11.214" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:14:11.214" endtime="20210419 01:14:11.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:14:11.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:14:11.215" endtime="20210419 01:14:11.215"/>
</kw>
<status status="PASS" starttime="20210419 01:14:05.759" endtime="20210419 01:14:11.215"/>
</kw>
<msg timestamp="20210419 01:14:11.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:14:05.758" endtime="20210419 01:14:11.216"/>
</kw>
<status status="PASS" starttime="20210419 01:14:05.757" endtime="20210419 01:14:11.216"/>
</kw>
<status status="PASS" starttime="20210419 01:09:52.793" endtime="20210419 01:14:11.217"/>
</kw>
<status status="PASS" starttime="20210419 01:09:52.793" endtime="20210419 01:14:11.217"/>
</kw>
<status status="PASS" starttime="20210419 01:09:37.311" endtime="20210419 01:14:11.217"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:14:11.226" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:14:11.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:14:11.230" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:14:11.223" endtime="20210419 01:14:11.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:14:11.232" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:14:11.231" endtime="20210419 01:14:11.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:14:11.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:14:11.233" endtime="20210419 01:14:11.234"/>
</kw>
<status status="PASS" starttime="20210419 01:14:11.223" endtime="20210419 01:14:11.236"/>
</kw>
<msg timestamp="20210419 01:14:11.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:14:11.222" endtime="20210419 01:14:11.236"/>
</kw>
<msg timestamp="20210419 01:14:11.236" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:14:11.222" endtime="20210419 01:14:11.236"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:14:11.239" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:14:11.237" endtime="20210419 01:14:11.239"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:14:11.250" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:14:11.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:14:11.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:14:11.248" endtime="20210419 01:14:11.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:14:11.295" level="INFO"/>
<status status="PASS" starttime="20210419 01:14:11.295" endtime="20210419 01:14:11.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:14:11.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:14:11.296" endtime="20210419 01:14:11.296"/>
</kw>
<status status="PASS" starttime="20210419 01:14:11.247" endtime="20210419 01:14:11.297"/>
</kw>
<msg timestamp="20210419 01:14:11.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:14:11.241" endtime="20210419 01:14:11.297"/>
</kw>
<status status="PASS" starttime="20210419 01:14:11.240" endtime="20210419 01:14:11.297"/>
</kw>
<status status="PASS" starttime="20210419 01:14:11.239" endtime="20210419 01:14:11.297"/>
</kw>
<status status="PASS" starttime="20210419 01:14:11.221" endtime="20210419 01:14:11.298"/>
</kw>
<status status="PASS" starttime="20210419 01:14:11.220" endtime="20210419 01:14:11.298"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:14:11.303" level="INFO">Running command 'ozone sh bucket link 06173-source/no-such-bucket 06173-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:14:18.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:14:18.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:14:11.300" endtime="20210419 01:14:18.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:14:18.313" level="INFO"/>
<status status="PASS" starttime="20210419 01:14:18.312" endtime="20210419 01:14:18.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:14:18.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:14:18.314" endtime="20210419 01:14:18.314"/>
</kw>
<status status="PASS" starttime="20210419 01:14:11.299" endtime="20210419 01:14:18.315"/>
</kw>
<msg timestamp="20210419 01:14:18.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:14:11.299" endtime="20210419 01:14:18.315"/>
</kw>
<status status="PASS" starttime="20210419 01:14:11.298" endtime="20210419 01:14:18.315"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:14:18.319" level="INFO">Running command 'ozone sh key list 06173-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:14:25.779" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:14:25.779" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210419 01:14:18.316" endtime="20210419 01:14:25.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:14:25.782" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210419 01:14:25.781" endtime="20210419 01:14:25.782"/>
</kw>
<msg timestamp="20210419 01:14:25.783" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210419 01:14:18.315" endtime="20210419 01:14:25.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:14:25.783" endtime="20210419 01:14:25.784"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:14:11.218" endtime="20210419 01:14:25.785"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:14:25.794" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:14:25.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:14:25.799" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:14:25.791" endtime="20210419 01:14:25.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:14:25.801" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:14:25.800" endtime="20210419 01:14:25.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:14:25.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:14:25.802" endtime="20210419 01:14:25.802"/>
</kw>
<status status="PASS" starttime="20210419 01:14:25.790" endtime="20210419 01:14:25.803"/>
</kw>
<msg timestamp="20210419 01:14:25.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:14:25.790" endtime="20210419 01:14:25.803"/>
</kw>
<msg timestamp="20210419 01:14:25.803" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:14:25.789" endtime="20210419 01:14:25.803"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:14:25.805" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:14:25.804" endtime="20210419 01:14:25.805"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:14:25.810" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:14:25.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:14:25.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:14:25.808" endtime="20210419 01:14:25.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:14:25.823" level="INFO"/>
<status status="PASS" starttime="20210419 01:14:25.822" endtime="20210419 01:14:25.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:14:25.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:14:25.823" endtime="20210419 01:14:25.824"/>
</kw>
<status status="PASS" starttime="20210419 01:14:25.807" endtime="20210419 01:14:25.825"/>
</kw>
<msg timestamp="20210419 01:14:25.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:14:25.807" endtime="20210419 01:14:25.825"/>
</kw>
<status status="PASS" starttime="20210419 01:14:25.806" endtime="20210419 01:14:25.825"/>
</kw>
<status status="PASS" starttime="20210419 01:14:25.805" endtime="20210419 01:14:25.825"/>
</kw>
<status status="PASS" starttime="20210419 01:14:25.788" endtime="20210419 01:14:25.825"/>
</kw>
<status status="PASS" starttime="20210419 01:14:25.787" endtime="20210419 01:14:25.826"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:14:25.830" level="INFO">Running command 'ozone sh bucket link 06173-source/bucket1 06173-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:14:32.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:14:32.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:14:25.828" endtime="20210419 01:14:32.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:14:32.816" level="INFO"/>
<status status="PASS" starttime="20210419 01:14:32.814" endtime="20210419 01:14:32.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:14:32.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:14:32.816" endtime="20210419 01:14:32.817"/>
</kw>
<status status="PASS" starttime="20210419 01:14:25.827" endtime="20210419 01:14:32.818"/>
</kw>
<msg timestamp="20210419 01:14:32.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:14:25.827" endtime="20210419 01:14:32.819"/>
</kw>
<status status="PASS" starttime="20210419 01:14:25.826" endtime="20210419 01:14:32.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:14:32.825" level="INFO">Running command 'ozone sh bucket create 06173-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:14:39.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:14:39.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:14:32.822" endtime="20210419 01:14:39.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:14:39.885" level="INFO"/>
<status status="PASS" starttime="20210419 01:14:39.884" endtime="20210419 01:14:39.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:14:39.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:14:39.886" endtime="20210419 01:14:39.888"/>
</kw>
<status status="PASS" starttime="20210419 01:14:32.821" endtime="20210419 01:14:39.889"/>
</kw>
<msg timestamp="20210419 01:14:39.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:14:32.821" endtime="20210419 01:14:39.889"/>
</kw>
<status status="PASS" starttime="20210419 01:14:32.819" endtime="20210419 01:14:39.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:14:39.898" level="INFO">Running command 'ozone sh key put 06173-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:16:25.788" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210419 01:14:39.895" endtime="20210419 01:16:25.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210419 01:16:25.789" endtime="20210419 01:16:25.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210419 01:16:25.790" endtime="20210419 01:16:25.790"/>
</kw>
<status status="FAIL" starttime="20210419 01:14:39.894" endtime="20210419 01:16:25.791"/>
</kw>
<msg timestamp="20210419 01:16:25.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210419 01:14:39.893" endtime="20210419 01:16:25.791"/>
</kw>
<status status="FAIL" starttime="20210419 01:14:39.890" endtime="20210419 01:16:25.791"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210419 01:16:25.791" endtime="20210419 01:16:25.792"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210419 01:14:25.786" endtime="20210419 01:16:25.792">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:16:25.802" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:16:25.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:16:25.805" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:16:25.799" endtime="20210419 01:16:25.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:16:25.807" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:16:25.806" endtime="20210419 01:16:25.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:16:25.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:16:25.808" endtime="20210419 01:16:25.809"/>
</kw>
<status status="PASS" starttime="20210419 01:16:25.798" endtime="20210419 01:16:25.810"/>
</kw>
<msg timestamp="20210419 01:16:25.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:16:25.797" endtime="20210419 01:16:25.810"/>
</kw>
<msg timestamp="20210419 01:16:25.811" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:16:25.796" endtime="20210419 01:16:25.811"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:16:25.813" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:16:25.811" endtime="20210419 01:16:25.813"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:16:25.820" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:16:25.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:16:25.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:16:25.817" endtime="20210419 01:16:25.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:16:25.834" level="INFO"/>
<status status="PASS" starttime="20210419 01:16:25.832" endtime="20210419 01:16:25.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:16:25.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:16:25.834" endtime="20210419 01:16:25.836"/>
</kw>
<status status="PASS" starttime="20210419 01:16:25.816" endtime="20210419 01:16:25.837"/>
</kw>
<msg timestamp="20210419 01:16:25.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:16:25.816" endtime="20210419 01:16:25.837"/>
</kw>
<status status="PASS" starttime="20210419 01:16:25.814" endtime="20210419 01:16:25.837"/>
</kw>
<status status="PASS" starttime="20210419 01:16:25.813" endtime="20210419 01:16:25.838"/>
</kw>
<status status="PASS" starttime="20210419 01:16:25.796" endtime="20210419 01:16:25.838"/>
</kw>
<status status="PASS" starttime="20210419 01:16:25.795" endtime="20210419 01:16:25.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:16:25.845" level="INFO">Running command 'ozone sh key put 06173-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:25.796" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210419 01:16:25.842" endtime="20210419 01:18:25.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210419 01:18:25.798" endtime="20210419 01:18:25.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210419 01:18:25.798" endtime="20210419 01:18:25.798"/>
</kw>
<status status="FAIL" starttime="20210419 01:16:25.840" endtime="20210419 01:18:25.798"/>
</kw>
<msg timestamp="20210419 01:18:25.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210419 01:16:25.840" endtime="20210419 01:18:25.799"/>
</kw>
<status status="FAIL" starttime="20210419 01:16:25.839" endtime="20210419 01:18:25.799"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210419 01:18:25.799" endtime="20210419 01:18:25.799"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210419 01:16:25.794" endtime="20210419 01:18:25.800">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:25.807" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:25.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:25.812" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:18:25.804" endtime="20210419 01:18:25.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:25.814" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:18:25.813" endtime="20210419 01:18:25.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:25.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:25.814" endtime="20210419 01:18:25.815"/>
</kw>
<status status="PASS" starttime="20210419 01:18:25.804" endtime="20210419 01:18:25.815"/>
</kw>
<msg timestamp="20210419 01:18:25.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:25.803" endtime="20210419 01:18:25.816"/>
</kw>
<msg timestamp="20210419 01:18:25.816" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:18:25.803" endtime="20210419 01:18:25.816"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:18:25.817" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:18:25.816" endtime="20210419 01:18:25.817"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:25.825" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:25.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:25.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:18:25.821" endtime="20210419 01:18:25.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:25.837" level="INFO"/>
<status status="PASS" starttime="20210419 01:18:25.836" endtime="20210419 01:18:25.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:25.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:25.838" endtime="20210419 01:18:25.839"/>
</kw>
<status status="PASS" starttime="20210419 01:18:25.820" endtime="20210419 01:18:25.839"/>
</kw>
<msg timestamp="20210419 01:18:25.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:25.819" endtime="20210419 01:18:25.839"/>
</kw>
<status status="PASS" starttime="20210419 01:18:25.818" endtime="20210419 01:18:25.840"/>
</kw>
<status status="PASS" starttime="20210419 01:18:25.817" endtime="20210419 01:18:25.840"/>
</kw>
<status status="PASS" starttime="20210419 01:18:25.802" endtime="20210419 01:18:25.841"/>
</kw>
<status status="PASS" starttime="20210419 01:18:25.802" endtime="20210419 01:18:25.841"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:25.848" level="INFO">Running command 'ozone sh key list 06173-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:33.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:33.401" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210419 01:18:25.844" endtime="20210419 01:18:33.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:33.402" level="INFO">key1</msg>
<status status="PASS" starttime="20210419 01:18:33.401" endtime="20210419 01:18:33.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:33.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:33.403" endtime="20210419 01:18:33.404"/>
</kw>
<status status="PASS" starttime="20210419 01:18:25.843" endtime="20210419 01:18:33.404"/>
</kw>
<msg timestamp="20210419 01:18:33.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:25.842" endtime="20210419 01:18:33.405"/>
</kw>
<msg timestamp="20210419 01:18:33.405" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210419 01:18:25.841" endtime="20210419 01:18:33.406"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:33.413" level="INFO">Running command 'ozone sh key list 06173-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:41.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:41.937" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210419 01:18:33.410" endtime="20210419 01:18:41.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:41.938" level="INFO">key1</msg>
<status status="PASS" starttime="20210419 01:18:41.937" endtime="20210419 01:18:41.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:41.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:41.938" endtime="20210419 01:18:41.939"/>
</kw>
<status status="PASS" starttime="20210419 01:18:33.408" endtime="20210419 01:18:41.939"/>
</kw>
<msg timestamp="20210419 01:18:41.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:33.408" endtime="20210419 01:18:41.940"/>
</kw>
<msg timestamp="20210419 01:18:41.941" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210419 01:18:33.406" endtime="20210419 01:18:41.941"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:18:41.941" endtime="20210419 01:18:41.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:18:41.942" endtime="20210419 01:18:41.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210419 01:18:41.943" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210419 01:18:41.942" endtime="20210419 01:18:41.943"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210419 01:18:25.800" endtime="20210419 01:18:41.943">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:41.951" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:41.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:41.953" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:18:41.948" endtime="20210419 01:18:41.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:41.954" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:18:41.954" endtime="20210419 01:18:41.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:41.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:41.955" endtime="20210419 01:18:41.955"/>
</kw>
<status status="PASS" starttime="20210419 01:18:41.947" endtime="20210419 01:18:41.956"/>
</kw>
<msg timestamp="20210419 01:18:41.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:41.947" endtime="20210419 01:18:41.956"/>
</kw>
<msg timestamp="20210419 01:18:41.956" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:18:41.947" endtime="20210419 01:18:41.956"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:18:41.957" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:18:41.957" endtime="20210419 01:18:41.957"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:41.963" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:41.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:41.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:18:41.960" endtime="20210419 01:18:41.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:41.974" level="INFO"/>
<status status="PASS" starttime="20210419 01:18:41.973" endtime="20210419 01:18:41.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:41.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:41.974" endtime="20210419 01:18:41.975"/>
</kw>
<status status="PASS" starttime="20210419 01:18:41.959" endtime="20210419 01:18:41.975"/>
</kw>
<msg timestamp="20210419 01:18:41.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:41.959" endtime="20210419 01:18:41.976"/>
</kw>
<status status="PASS" starttime="20210419 01:18:41.958" endtime="20210419 01:18:41.976"/>
</kw>
<status status="PASS" starttime="20210419 01:18:41.958" endtime="20210419 01:18:41.976"/>
</kw>
<status status="PASS" starttime="20210419 01:18:41.946" endtime="20210419 01:18:41.976"/>
</kw>
<status status="PASS" starttime="20210419 01:18:41.945" endtime="20210419 01:18:41.976"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:41.981" level="INFO">Running command 'ozone sh key delete 06173-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:48.559" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:18:48.559" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210419 01:18:41.978" endtime="20210419 01:18:48.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:48.561" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210419 01:18:48.560" endtime="20210419 01:18:48.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:48.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210419 01:18:48.562" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210419 01:18:48.561" endtime="20210419 01:18:48.563"/>
</kw>
<status status="FAIL" starttime="20210419 01:18:41.978" endtime="20210419 01:18:48.563"/>
</kw>
<msg timestamp="20210419 01:18:48.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210419 01:18:41.977" endtime="20210419 01:18:48.563"/>
</kw>
<status status="FAIL" starttime="20210419 01:18:41.977" endtime="20210419 01:18:48.563"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210419 01:18:48.564" endtime="20210419 01:18:48.564"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:18:48.564" endtime="20210419 01:18:48.564"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210419 01:18:41.944" endtime="20210419 01:18:48.564">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:48.574" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:48.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:48.578" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:18:48.571" endtime="20210419 01:18:48.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:48.580" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:18:48.579" endtime="20210419 01:18:48.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:48.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:48.580" endtime="20210419 01:18:48.581"/>
</kw>
<status status="PASS" starttime="20210419 01:18:48.570" endtime="20210419 01:18:48.581"/>
</kw>
<msg timestamp="20210419 01:18:48.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:48.569" endtime="20210419 01:18:48.582"/>
</kw>
<msg timestamp="20210419 01:18:48.582" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:18:48.568" endtime="20210419 01:18:48.582"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:18:48.583" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:18:48.582" endtime="20210419 01:18:48.583"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:48.590" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:48.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:48.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:18:48.586" endtime="20210419 01:18:48.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:48.603" level="INFO"/>
<status status="PASS" starttime="20210419 01:18:48.602" endtime="20210419 01:18:48.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:48.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:48.603" endtime="20210419 01:18:48.604"/>
</kw>
<status status="PASS" starttime="20210419 01:18:48.585" endtime="20210419 01:18:48.604"/>
</kw>
<msg timestamp="20210419 01:18:48.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:48.585" endtime="20210419 01:18:48.605"/>
</kw>
<status status="PASS" starttime="20210419 01:18:48.584" endtime="20210419 01:18:48.605"/>
</kw>
<status status="PASS" starttime="20210419 01:18:48.583" endtime="20210419 01:18:48.605"/>
</kw>
<status status="PASS" starttime="20210419 01:18:48.567" endtime="20210419 01:18:48.605"/>
</kw>
<status status="PASS" starttime="20210419 01:18:48.566" endtime="20210419 01:18:48.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:48.612" level="INFO">Running command 'ozone sh bucket list 06173-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:54.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:54.632" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210419 01:18:48.609" endtime="20210419 01:18:54.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:54.634" level="INFO">{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:14:18.128Z",
  "modificationTime" : "2021-04-19T01:14:18.128Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:13:37.490Z",
  "modificationTime" : "2021-04-19T01:14:11.047Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:14:32.661Z",
  "modificationTime" : "2021-04-19T01:14:32.661Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:13:25.010Z",
  "modificationTime" : "2021-04-19T01:14:05.693Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:13:31.820Z",
  "modificationTime" : "2021-04-19T01:13:31.820Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210419 01:18:54.633" endtime="20210419 01:18:54.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:54.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:54.634" endtime="20210419 01:18:54.635"/>
</kw>
<status status="PASS" starttime="20210419 01:18:48.608" endtime="20210419 01:18:54.635"/>
</kw>
<msg timestamp="20210419 01:18:54.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:48.607" endtime="20210419 01:18:54.635"/>
</kw>
<msg timestamp="20210419 01:18:54.636" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210419 01:18:48.606" endtime="20210419 01:18:54.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:18:54.636" endtime="20210419 01:18:54.636"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:18:54.637" endtime="20210419 01:18:54.637"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:18:48.565" endtime="20210419 01:18:54.637"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:54.644" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:54.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:54.647" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:18:54.642" endtime="20210419 01:18:54.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:54.649" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:18:54.648" endtime="20210419 01:18:54.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:54.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:54.649" endtime="20210419 01:18:54.650"/>
</kw>
<status status="PASS" starttime="20210419 01:18:54.641" endtime="20210419 01:18:54.650"/>
</kw>
<msg timestamp="20210419 01:18:54.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:54.641" endtime="20210419 01:18:54.650"/>
</kw>
<msg timestamp="20210419 01:18:54.651" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:18:54.640" endtime="20210419 01:18:54.651"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:18:54.653" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:18:54.652" endtime="20210419 01:18:54.653"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:54.659" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:18:54.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:18:54.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:18:54.656" endtime="20210419 01:18:54.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:18:54.668" level="INFO"/>
<status status="PASS" starttime="20210419 01:18:54.667" endtime="20210419 01:18:54.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:18:54.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:18:54.668" endtime="20210419 01:18:54.669"/>
</kw>
<status status="PASS" starttime="20210419 01:18:54.655" endtime="20210419 01:18:54.669"/>
</kw>
<msg timestamp="20210419 01:18:54.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:54.655" endtime="20210419 01:18:54.669"/>
</kw>
<status status="PASS" starttime="20210419 01:18:54.654" endtime="20210419 01:18:54.670"/>
</kw>
<status status="PASS" starttime="20210419 01:18:54.653" endtime="20210419 01:18:54.670"/>
</kw>
<status status="PASS" starttime="20210419 01:18:54.640" endtime="20210419 01:18:54.670"/>
</kw>
<status status="PASS" starttime="20210419 01:18:54.639" endtime="20210419 01:18:54.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:18:54.674" level="INFO">Running command 'ozone sh bucket info 06173-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:00.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:00.239" level="INFO">${output} = 06173-source bucket1</msg>
<status status="PASS" starttime="20210419 01:18:54.672" endtime="20210419 01:19:00.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:00.242" level="INFO">06173-source bucket1</msg>
<status status="PASS" starttime="20210419 01:19:00.240" endtime="20210419 01:19:00.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:00.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:00.242" endtime="20210419 01:19:00.243"/>
</kw>
<status status="PASS" starttime="20210419 01:18:54.672" endtime="20210419 01:19:00.244"/>
</kw>
<msg timestamp="20210419 01:19:00.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:18:54.671" endtime="20210419 01:19:00.245"/>
</kw>
<msg timestamp="20210419 01:19:00.245" level="INFO">${result} = 06173-source bucket1</msg>
<status status="PASS" starttime="20210419 01:18:54.670" endtime="20210419 01:19:00.246"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:19:00.246" endtime="20210419 01:19:00.247"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:18:54.638" endtime="20210419 01:19:00.247"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:00.259" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:00.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:00.265" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:19:00.257" endtime="20210419 01:19:00.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:00.267" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:19:00.266" endtime="20210419 01:19:00.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:00.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:00.267" endtime="20210419 01:19:00.269"/>
</kw>
<status status="PASS" starttime="20210419 01:19:00.256" endtime="20210419 01:19:00.269"/>
</kw>
<msg timestamp="20210419 01:19:00.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:00.253" endtime="20210419 01:19:00.270"/>
</kw>
<msg timestamp="20210419 01:19:00.270" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:19:00.252" endtime="20210419 01:19:00.270"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:19:00.273" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:19:00.271" endtime="20210419 01:19:00.273"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:00.283" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:00.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:00.293" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:19:00.279" endtime="20210419 01:19:00.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:00.296" level="INFO"/>
<status status="PASS" starttime="20210419 01:19:00.294" endtime="20210419 01:19:00.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:00.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:00.297" endtime="20210419 01:19:00.298"/>
</kw>
<status status="PASS" starttime="20210419 01:19:00.278" endtime="20210419 01:19:00.299"/>
</kw>
<msg timestamp="20210419 01:19:00.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:00.277" endtime="20210419 01:19:00.300"/>
</kw>
<status status="PASS" starttime="20210419 01:19:00.275" endtime="20210419 01:19:00.300"/>
</kw>
<status status="PASS" starttime="20210419 01:19:00.274" endtime="20210419 01:19:00.300"/>
</kw>
<status status="PASS" starttime="20210419 01:19:00.251" endtime="20210419 01:19:00.300"/>
</kw>
<status status="PASS" starttime="20210419 01:19:00.250" endtime="20210419 01:19:00.300"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:00.305" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 06173-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:07.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:07.820" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:19:00.303" endtime="20210419 01:19:07.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:07.822" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:19:07.821" endtime="20210419 01:19:07.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:07.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:07.822" endtime="20210419 01:19:07.823"/>
</kw>
<status status="PASS" starttime="20210419 01:19:00.302" endtime="20210419 01:19:07.824"/>
</kw>
<msg timestamp="20210419 01:19:07.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:00.301" endtime="20210419 01:19:07.824"/>
</kw>
<status status="PASS" starttime="20210419 01:19:00.301" endtime="20210419 01:19:07.824"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:07.832" level="INFO">Running command 'ozone sh bucket getacl 06173-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:15.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:15.991" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210419 01:19:07.829" endtime="20210419 01:19:15.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:15.994" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210419 01:19:15.992" endtime="20210419 01:19:15.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:15.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:15.994" endtime="20210419 01:19:15.995"/>
</kw>
<status status="PASS" starttime="20210419 01:19:07.828" endtime="20210419 01:19:15.995"/>
</kw>
<msg timestamp="20210419 01:19:15.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:07.827" endtime="20210419 01:19:15.996"/>
</kw>
<msg timestamp="20210419 01:19:15.996" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210419 01:19:07.826" endtime="20210419 01:19:15.996"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:19:15.996" endtime="20210419 01:19:15.997"/>
</kw>
<status status="PASS" starttime="20210419 01:19:07.825" endtime="20210419 01:19:15.997"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:16.014" level="INFO">Running command 'ozone sh bucket getacl 06173-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:22.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:22.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:19:16.011" endtime="20210419 01:19:22.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:22.612" level="INFO"/>
<status status="PASS" starttime="20210419 01:19:22.611" endtime="20210419 01:19:22.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:22.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:22.612" endtime="20210419 01:19:22.613"/>
</kw>
<status status="PASS" starttime="20210419 01:19:16.009" endtime="20210419 01:19:22.613"/>
</kw>
<msg timestamp="20210419 01:19:22.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:16.009" endtime="20210419 01:19:22.613"/>
</kw>
<msg timestamp="20210419 01:19:22.614" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210419 01:19:16.006" endtime="20210419 01:19:22.614"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:19:22.614" endtime="20210419 01:19:22.615"/>
</kw>
<status status="PASS" starttime="20210419 01:19:15.997" endtime="20210419 01:19:22.615"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:22.620" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 06173-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:29.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:29.473" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:19:22.618" endtime="20210419 01:19:29.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:29.475" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:19:29.474" endtime="20210419 01:19:29.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:29.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:29.476" endtime="20210419 01:19:29.477"/>
</kw>
<status status="PASS" starttime="20210419 01:19:22.616" endtime="20210419 01:19:29.478"/>
</kw>
<msg timestamp="20210419 01:19:29.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:22.616" endtime="20210419 01:19:29.478"/>
</kw>
<status status="PASS" starttime="20210419 01:19:22.615" endtime="20210419 01:19:29.479"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:29.491" level="INFO">Running command 'ozone sh bucket getacl 06173-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:37.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:37.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:19:29.488" endtime="20210419 01:19:37.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:37.232" level="INFO"/>
<status status="PASS" starttime="20210419 01:19:37.230" endtime="20210419 01:19:37.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:37.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:37.233" endtime="20210419 01:19:37.235"/>
</kw>
<status status="PASS" starttime="20210419 01:19:29.486" endtime="20210419 01:19:37.236"/>
</kw>
<msg timestamp="20210419 01:19:37.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:29.485" endtime="20210419 01:19:37.237"/>
</kw>
<msg timestamp="20210419 01:19:37.237" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210419 01:19:29.483" endtime="20210419 01:19:37.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:19:37.238" endtime="20210419 01:19:37.240"/>
</kw>
<status status="PASS" starttime="20210419 01:19:29.479" endtime="20210419 01:19:37.240"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:37.251" level="INFO">Running command 'ozone sh bucket getacl 06173-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:44.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:44.857" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210419 01:19:37.248" endtime="20210419 01:19:44.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:44.859" level="INFO">READ</msg>
<status status="PASS" starttime="20210419 01:19:44.858" endtime="20210419 01:19:44.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:44.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:44.860" endtime="20210419 01:19:44.861"/>
</kw>
<status status="PASS" starttime="20210419 01:19:37.247" endtime="20210419 01:19:44.862"/>
</kw>
<msg timestamp="20210419 01:19:44.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:37.246" endtime="20210419 01:19:44.862"/>
</kw>
<msg timestamp="20210419 01:19:44.863" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210419 01:19:37.243" endtime="20210419 01:19:44.863"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:19:44.863" endtime="20210419 01:19:44.864"/>
</kw>
<status status="PASS" starttime="20210419 01:19:37.241" endtime="20210419 01:19:44.864"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:19:00.248" endtime="20210419 01:19:44.866"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:44.878" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:44.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:44.881" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:19:44.875" endtime="20210419 01:19:44.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:44.882" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:19:44.882" endtime="20210419 01:19:44.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:44.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:44.882" endtime="20210419 01:19:44.883"/>
</kw>
<status status="PASS" starttime="20210419 01:19:44.874" endtime="20210419 01:19:44.884"/>
</kw>
<msg timestamp="20210419 01:19:44.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:44.873" endtime="20210419 01:19:44.884"/>
</kw>
<msg timestamp="20210419 01:19:44.884" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:19:44.873" endtime="20210419 01:19:44.884"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:19:44.885" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:19:44.885" endtime="20210419 01:19:44.885"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:44.890" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:44.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:44.925" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:19:44.888" endtime="20210419 01:19:44.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:44.927" level="INFO"/>
<status status="PASS" starttime="20210419 01:19:44.926" endtime="20210419 01:19:44.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:44.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:44.927" endtime="20210419 01:19:44.927"/>
</kw>
<status status="PASS" starttime="20210419 01:19:44.887" endtime="20210419 01:19:44.928"/>
</kw>
<msg timestamp="20210419 01:19:44.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:44.887" endtime="20210419 01:19:44.928"/>
</kw>
<status status="PASS" starttime="20210419 01:19:44.886" endtime="20210419 01:19:44.929"/>
</kw>
<status status="PASS" starttime="20210419 01:19:44.886" endtime="20210419 01:19:44.929"/>
</kw>
<status status="PASS" starttime="20210419 01:19:44.870" endtime="20210419 01:19:44.929"/>
</kw>
<status status="PASS" starttime="20210419 01:19:44.869" endtime="20210419 01:19:44.929"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:44.933" level="INFO">Running command 'ozone sh bucket link 06173-source/bucket2 06173-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:51.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:19:51.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:19:44.931" endtime="20210419 01:19:51.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:51.812" level="INFO"/>
<status status="PASS" starttime="20210419 01:19:51.810" endtime="20210419 01:19:51.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:19:51.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:19:51.813" endtime="20210419 01:19:51.814"/>
</kw>
<status status="PASS" starttime="20210419 01:19:44.930" endtime="20210419 01:19:51.815"/>
</kw>
<msg timestamp="20210419 01:19:51.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:44.930" endtime="20210419 01:19:51.815"/>
</kw>
<status status="PASS" starttime="20210419 01:19:44.929" endtime="20210419 01:19:51.815"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:51.822" level="INFO">Running command 'ozone sh bucket create 06173-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:19:58.767" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:19:58.767" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210419 01:19:51.819" endtime="20210419 01:19:58.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:19:58.769" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210419 01:19:58.768" endtime="20210419 01:19:58.769"/>
</kw>
<msg timestamp="20210419 01:19:58.770" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210419 01:19:51.817" endtime="20210419 01:19:58.770"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:19:58.770" endtime="20210419 01:19:58.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:19:58.776" level="INFO">Running command 'ozone sh bucket create 06173-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:05.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:05.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:19:58.773" endtime="20210419 01:20:05.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:05.640" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:05.638" endtime="20210419 01:20:05.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:05.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:05.641" endtime="20210419 01:20:05.642"/>
</kw>
<status status="PASS" starttime="20210419 01:19:58.773" endtime="20210419 01:20:05.642"/>
</kw>
<msg timestamp="20210419 01:20:05.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:19:58.772" endtime="20210419 01:20:05.643"/>
</kw>
<status status="PASS" starttime="20210419 01:19:58.771" endtime="20210419 01:20:05.643"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:05.649" level="INFO">Running command 'ozone sh bucket link 06173-source/bucket1 06173-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:13.189" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:20:13.189" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210419 01:20:05.646" endtime="20210419 01:20:13.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:13.191" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210419 01:20:13.190" endtime="20210419 01:20:13.191"/>
</kw>
<msg timestamp="20210419 01:20:13.191" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210419 01:20:05.644" endtime="20210419 01:20:13.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:20:13.191" endtime="20210419 01:20:13.192"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:19:44.867" endtime="20210419 01:20:13.192"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:13.201" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:13.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:13.205" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:20:13.198" endtime="20210419 01:20:13.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:13.207" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:20:13.206" endtime="20210419 01:20:13.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:13.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:13.207" endtime="20210419 01:20:13.209"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.197" endtime="20210419 01:20:13.209"/>
</kw>
<msg timestamp="20210419 01:20:13.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:13.196" endtime="20210419 01:20:13.210"/>
</kw>
<msg timestamp="20210419 01:20:13.210" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:20:13.196" endtime="20210419 01:20:13.210"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:20:13.212" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:20:13.211" endtime="20210419 01:20:13.212"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:13.219" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:13.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:13.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:13.216" endtime="20210419 01:20:13.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:13.231" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:13.230" endtime="20210419 01:20:13.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:13.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:13.231" endtime="20210419 01:20:13.232"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.215" endtime="20210419 01:20:13.232"/>
</kw>
<msg timestamp="20210419 01:20:13.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:13.214" endtime="20210419 01:20:13.232"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.213" endtime="20210419 01:20:13.233"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.212" endtime="20210419 01:20:13.233"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.195" endtime="20210419 01:20:13.233"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.194" endtime="20210419 01:20:13.233"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:13.240" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:13.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:13.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:13.237" endtime="20210419 01:20:13.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:13.245" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:13.244" endtime="20210419 01:20:13.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:13.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:13.245" endtime="20210419 01:20:13.246"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.236" endtime="20210419 01:20:13.246"/>
</kw>
<msg timestamp="20210419 01:20:13.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:13.236" endtime="20210419 01:20:13.247"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.235" endtime="20210419 01:20:13.247"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:13.255" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:13.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:13.258" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:20:13.251" endtime="20210419 01:20:13.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:13.259" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:20:13.258" endtime="20210419 01:20:13.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:13.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:13.260" endtime="20210419 01:20:13.261"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.250" endtime="20210419 01:20:13.261"/>
</kw>
<msg timestamp="20210419 01:20:13.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:13.249" endtime="20210419 01:20:13.261"/>
</kw>
<msg timestamp="20210419 01:20:13.262" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:20:13.249" endtime="20210419 01:20:13.262"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:20:13.262" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:20:13.262" endtime="20210419 01:20:13.263"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:13.268" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:13.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:13.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:13.265" endtime="20210419 01:20:13.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:13.281" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:13.280" endtime="20210419 01:20:13.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:13.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:13.281" endtime="20210419 01:20:13.283"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.265" endtime="20210419 01:20:13.283"/>
</kw>
<msg timestamp="20210419 01:20:13.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:13.264" endtime="20210419 01:20:13.284"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.263" endtime="20210419 01:20:13.284"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.263" endtime="20210419 01:20:13.284"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.248" endtime="20210419 01:20:13.284"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.247" endtime="20210419 01:20:13.284"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:13.288" level="INFO">Running command 'ozone sh key list 06173-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:18.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:18.929" level="INFO">${output} = {
  "volumeName" : "06173-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-19T01:10:04.570Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210419 01:20:13.285" endtime="20210419 01:20:18.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:18.933" level="INFO">{
  "volumeName" : "06173-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-19T01:10:04.570Z",
  "modificationTime" : "2021-04-19T01:13:08.794Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210419 01:20:18.930" endtime="20210419 01:20:18.933"/>
</kw>
<msg timestamp="20210419 01:20:18.934" level="INFO">${result} = {
  "volumeName" : "06173-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-04-19T01:10:04.570Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210419 01:20:13.285" endtime="20210419 01:20:18.934"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:20:18.935" endtime="20210419 01:20:18.936"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.234" endtime="20210419 01:20:18.936"/>
</kw>
<status status="PASS" starttime="20210419 01:20:13.234" endtime="20210419 01:20:18.937"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:20:13.193" endtime="20210419 01:20:18.938"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:18.952" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:18.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:18.956" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:20:18.949" endtime="20210419 01:20:18.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:18.958" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:20:18.956" endtime="20210419 01:20:18.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:18.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:18.958" endtime="20210419 01:20:18.959"/>
</kw>
<status status="PASS" starttime="20210419 01:20:18.949" endtime="20210419 01:20:18.959"/>
</kw>
<msg timestamp="20210419 01:20:18.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:18.948" endtime="20210419 01:20:18.959"/>
</kw>
<msg timestamp="20210419 01:20:18.960" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:20:18.944" endtime="20210419 01:20:18.960"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:20:18.961" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:20:18.960" endtime="20210419 01:20:18.961"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:18.965" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:18.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:18.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:18.963" endtime="20210419 01:20:18.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:18.977" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:18.976" endtime="20210419 01:20:18.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:18.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:18.978" endtime="20210419 01:20:18.979"/>
</kw>
<status status="PASS" starttime="20210419 01:20:18.962" endtime="20210419 01:20:18.980"/>
</kw>
<msg timestamp="20210419 01:20:18.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:18.962" endtime="20210419 01:20:18.980"/>
</kw>
<status status="PASS" starttime="20210419 01:20:18.961" endtime="20210419 01:20:18.981"/>
</kw>
<status status="PASS" starttime="20210419 01:20:18.961" endtime="20210419 01:20:18.981"/>
</kw>
<status status="PASS" starttime="20210419 01:20:18.942" endtime="20210419 01:20:18.981"/>
</kw>
<status status="PASS" starttime="20210419 01:20:18.940" endtime="20210419 01:20:18.982"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:18.991" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:18.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:18.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:18.988" endtime="20210419 01:20:18.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:18.999" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:18.998" endtime="20210419 01:20:18.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:19.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:18.999" endtime="20210419 01:20:19.000"/>
</kw>
<status status="PASS" starttime="20210419 01:20:18.986" endtime="20210419 01:20:19.000"/>
</kw>
<msg timestamp="20210419 01:20:19.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:18.985" endtime="20210419 01:20:19.001"/>
</kw>
<status status="PASS" starttime="20210419 01:20:18.984" endtime="20210419 01:20:19.001"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:19.008" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:19.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:19.011" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:20:19.005" endtime="20210419 01:20:19.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:19.013" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:20:19.012" endtime="20210419 01:20:19.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:19.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:19.013" endtime="20210419 01:20:19.014"/>
</kw>
<status status="PASS" starttime="20210419 01:20:19.004" endtime="20210419 01:20:19.015"/>
</kw>
<msg timestamp="20210419 01:20:19.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:19.004" endtime="20210419 01:20:19.015"/>
</kw>
<msg timestamp="20210419 01:20:19.015" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:20:19.002" endtime="20210419 01:20:19.016"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:20:19.017" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:20:19.016" endtime="20210419 01:20:19.017"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:19.022" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:19.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:19.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:19.019" endtime="20210419 01:20:19.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:19.033" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:19.033" endtime="20210419 01:20:19.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:19.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:19.034" endtime="20210419 01:20:19.034"/>
</kw>
<status status="PASS" starttime="20210419 01:20:19.019" endtime="20210419 01:20:19.035"/>
</kw>
<msg timestamp="20210419 01:20:19.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:19.018" endtime="20210419 01:20:19.035"/>
</kw>
<status status="PASS" starttime="20210419 01:20:19.018" endtime="20210419 01:20:19.035"/>
</kw>
<status status="PASS" starttime="20210419 01:20:19.017" endtime="20210419 01:20:19.035"/>
</kw>
<status status="PASS" starttime="20210419 01:20:19.002" endtime="20210419 01:20:19.036"/>
</kw>
<status status="PASS" starttime="20210419 01:20:19.001" endtime="20210419 01:20:19.036"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:19.039" level="INFO">Running command 'ozone sh key list 06173-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:26.530" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:20:26.530" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 06173-target unreadable-link null</msg>
<status status="PASS" starttime="20210419 01:20:19.037" endtime="20210419 01:20:26.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:26.532" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 06173-target unreadable-link null</msg>
<status status="PASS" starttime="20210419 01:20:26.531" endtime="20210419 01:20:26.532"/>
</kw>
<msg timestamp="20210419 01:20:26.533" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 06173-target unreadable-link null</msg>
<status status="PASS" starttime="20210419 01:20:19.036" endtime="20210419 01:20:26.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:20:26.533" endtime="20210419 01:20:26.534"/>
</kw>
<status status="PASS" starttime="20210419 01:20:18.983" endtime="20210419 01:20:26.535"/>
</kw>
<status status="PASS" starttime="20210419 01:20:18.982" endtime="20210419 01:20:26.535"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:20:18.938" endtime="20210419 01:20:26.536"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:26.545" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:26.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:26.549" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:20:26.543" endtime="20210419 01:20:26.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:26.551" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:20:26.550" endtime="20210419 01:20:26.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:26.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:26.552" endtime="20210419 01:20:26.553"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.541" endtime="20210419 01:20:26.554"/>
</kw>
<msg timestamp="20210419 01:20:26.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:26.541" endtime="20210419 01:20:26.554"/>
</kw>
<msg timestamp="20210419 01:20:26.555" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:20:26.540" endtime="20210419 01:20:26.555"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:20:26.556" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:20:26.555" endtime="20210419 01:20:26.557"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:26.562" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:26.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:26.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:26.560" endtime="20210419 01:20:26.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:26.573" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:26.572" endtime="20210419 01:20:26.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:26.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:26.573" endtime="20210419 01:20:26.574"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.559" endtime="20210419 01:20:26.574"/>
</kw>
<msg timestamp="20210419 01:20:26.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:26.559" endtime="20210419 01:20:26.575"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.558" endtime="20210419 01:20:26.575"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.557" endtime="20210419 01:20:26.575"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.539" endtime="20210419 01:20:26.575"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.538" endtime="20210419 01:20:26.576"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:26.582" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:26.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:26.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:26.580" endtime="20210419 01:20:26.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:26.588" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:26.588" endtime="20210419 01:20:26.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:26.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:26.589" endtime="20210419 01:20:26.590"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.579" endtime="20210419 01:20:26.590"/>
</kw>
<msg timestamp="20210419 01:20:26.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:26.579" endtime="20210419 01:20:26.590"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.577" endtime="20210419 01:20:26.591"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:26.595" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:26.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:26.598" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:20:26.593" endtime="20210419 01:20:26.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:26.600" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:20:26.599" endtime="20210419 01:20:26.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:26.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:26.600" endtime="20210419 01:20:26.601"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.593" endtime="20210419 01:20:26.602"/>
</kw>
<msg timestamp="20210419 01:20:26.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:26.592" endtime="20210419 01:20:26.602"/>
</kw>
<msg timestamp="20210419 01:20:26.603" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:20:26.592" endtime="20210419 01:20:26.603"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:20:26.605" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:20:26.603" endtime="20210419 01:20:26.606"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:26.611" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:26.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:26.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:26.609" endtime="20210419 01:20:26.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:26.622" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:26.621" endtime="20210419 01:20:26.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:26.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:26.622" endtime="20210419 01:20:26.623"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.608" endtime="20210419 01:20:26.624"/>
</kw>
<msg timestamp="20210419 01:20:26.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:26.607" endtime="20210419 01:20:26.624"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.606" endtime="20210419 01:20:26.625"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.606" endtime="20210419 01:20:26.625"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.591" endtime="20210419 01:20:26.626"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.591" endtime="20210419 01:20:26.626"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:26.631" level="INFO">Running command 'ozone sh bucket info 06173-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:33.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:33.637" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210419 01:20:26.629" endtime="20210419 01:20:33.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:33.639" level="INFO">{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:13:37.490Z",
  "modificationTime" : "2021-04-19T01:14:11.047Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210419 01:20:33.638" endtime="20210419 01:20:33.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:33.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:33.639" endtime="20210419 01:20:33.640"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.628" endtime="20210419 01:20:33.640"/>
</kw>
<msg timestamp="20210419 01:20:33.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:26.628" endtime="20210419 01:20:33.640"/>
</kw>
<msg timestamp="20210419 01:20:33.641" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210419 01:20:26.627" endtime="20210419 01:20:33.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:20:33.641" endtime="20210419 01:20:33.641"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:20:33.641" endtime="20210419 01:20:33.642"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:33.645" level="INFO">Running command 'ozone sh key list 06173-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:39.283" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:20:39.284" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 06173-source unreadable-bucket </msg>
<status status="PASS" starttime="20210419 01:20:33.643" endtime="20210419 01:20:39.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:39.288" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 06173-source unreadable-bucket </msg>
<status status="PASS" starttime="20210419 01:20:39.285" endtime="20210419 01:20:39.288"/>
</kw>
<msg timestamp="20210419 01:20:39.289" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 06173-source unreadable-bucket </msg>
<status status="PASS" starttime="20210419 01:20:33.642" endtime="20210419 01:20:39.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:20:39.290" endtime="20210419 01:20:39.290"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.577" endtime="20210419 01:20:39.291"/>
</kw>
<status status="PASS" starttime="20210419 01:20:26.576" endtime="20210419 01:20:39.291"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:20:26.536" endtime="20210419 01:20:39.293"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:39.316" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:39.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:39.325" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:20:39.311" endtime="20210419 01:20:39.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:39.327" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:20:39.326" endtime="20210419 01:20:39.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:39.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:39.327" endtime="20210419 01:20:39.334"/>
</kw>
<status status="PASS" starttime="20210419 01:20:39.309" endtime="20210419 01:20:39.335"/>
</kw>
<msg timestamp="20210419 01:20:39.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:39.308" endtime="20210419 01:20:39.336"/>
</kw>
<msg timestamp="20210419 01:20:39.337" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:20:39.305" endtime="20210419 01:20:39.338"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:20:39.339" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:20:39.338" endtime="20210419 01:20:39.340"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:39.346" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:39.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:39.357" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:39.344" endtime="20210419 01:20:39.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:39.360" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:39.358" endtime="20210419 01:20:39.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:39.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:39.362" endtime="20210419 01:20:39.365"/>
</kw>
<status status="PASS" starttime="20210419 01:20:39.343" endtime="20210419 01:20:39.367"/>
</kw>
<msg timestamp="20210419 01:20:39.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:39.342" endtime="20210419 01:20:39.368"/>
</kw>
<status status="PASS" starttime="20210419 01:20:39.341" endtime="20210419 01:20:39.369"/>
</kw>
<status status="PASS" starttime="20210419 01:20:39.340" endtime="20210419 01:20:39.370"/>
</kw>
<status status="PASS" starttime="20210419 01:20:39.303" endtime="20210419 01:20:39.370"/>
</kw>
<status status="PASS" starttime="20210419 01:20:39.299" endtime="20210419 01:20:39.371"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:39.380" level="INFO">Running command 'ozone sh bucket link 06173-target/loop1 06173-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:46.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:46.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:39.376" endtime="20210419 01:20:46.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:46.573" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:46.571" endtime="20210419 01:20:46.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:46.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:46.573" endtime="20210419 01:20:46.574"/>
</kw>
<status status="PASS" starttime="20210419 01:20:39.375" endtime="20210419 01:20:46.575"/>
</kw>
<msg timestamp="20210419 01:20:46.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:39.373" endtime="20210419 01:20:46.575"/>
</kw>
<status status="PASS" starttime="20210419 01:20:39.371" endtime="20210419 01:20:46.576"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:46.582" level="INFO">Running command 'ozone sh bucket link 06173-target/loop2 06173-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:20:53.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:20:53.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:46.580" endtime="20210419 01:20:53.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:20:53.816" level="INFO"/>
<status status="PASS" starttime="20210419 01:20:53.814" endtime="20210419 01:20:53.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:20:53.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:20:53.816" endtime="20210419 01:20:53.817"/>
</kw>
<status status="PASS" starttime="20210419 01:20:46.578" endtime="20210419 01:20:53.818"/>
</kw>
<msg timestamp="20210419 01:20:53.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:46.578" endtime="20210419 01:20:53.818"/>
</kw>
<status status="PASS" starttime="20210419 01:20:46.577" endtime="20210419 01:20:53.818"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:20:53.824" level="INFO">Running command 'ozone sh bucket link 06173-target/loop3 06173-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:21:00.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:21:00.914" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:20:53.820" endtime="20210419 01:21:00.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:21:00.918" level="INFO"/>
<status status="PASS" starttime="20210419 01:21:00.916" endtime="20210419 01:21:00.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:21:00.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:21:00.919" endtime="20210419 01:21:00.921"/>
</kw>
<status status="PASS" starttime="20210419 01:20:53.820" endtime="20210419 01:21:00.922"/>
</kw>
<msg timestamp="20210419 01:21:00.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:20:53.819" endtime="20210419 01:21:00.923"/>
</kw>
<status status="PASS" starttime="20210419 01:20:53.818" endtime="20210419 01:21:00.924"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:21:00.929" level="INFO">Running command 'ozone sh key list 06173-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:21:08.233" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:21:08.233" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210419 01:21:00.926" endtime="20210419 01:21:08.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:21:08.235" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210419 01:21:08.233" endtime="20210419 01:21:08.235"/>
</kw>
<msg timestamp="20210419 01:21:08.236" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210419 01:21:00.925" endtime="20210419 01:21:08.236"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:21:08.237" endtime="20210419 01:21:08.237"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:20:39.295" endtime="20210419 01:21:08.238"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:21:08.249" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:21:08.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:21:08.253" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:21:08.246" endtime="20210419 01:21:08.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:21:08.255" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:21:08.254" endtime="20210419 01:21:08.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:21:08.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:21:08.255" endtime="20210419 01:21:08.256"/>
</kw>
<status status="PASS" starttime="20210419 01:21:08.244" endtime="20210419 01:21:08.257"/>
</kw>
<msg timestamp="20210419 01:21:08.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:21:08.244" endtime="20210419 01:21:08.258"/>
</kw>
<msg timestamp="20210419 01:21:08.258" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:21:08.243" endtime="20210419 01:21:08.258"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:21:08.260" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:21:08.259" endtime="20210419 01:21:08.260"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:21:08.267" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:21:08.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:21:08.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:21:08.265" endtime="20210419 01:21:08.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:21:08.281" level="INFO"/>
<status status="PASS" starttime="20210419 01:21:08.279" endtime="20210419 01:21:08.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:21:08.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:21:08.281" endtime="20210419 01:21:08.282"/>
</kw>
<status status="PASS" starttime="20210419 01:21:08.264" endtime="20210419 01:21:08.283"/>
</kw>
<msg timestamp="20210419 01:21:08.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:21:08.263" endtime="20210419 01:21:08.283"/>
</kw>
<status status="PASS" starttime="20210419 01:21:08.261" endtime="20210419 01:21:08.284"/>
</kw>
<status status="PASS" starttime="20210419 01:21:08.260" endtime="20210419 01:21:08.284"/>
</kw>
<status status="PASS" starttime="20210419 01:21:08.241" endtime="20210419 01:21:08.284"/>
</kw>
<status status="PASS" starttime="20210419 01:21:08.240" endtime="20210419 01:21:08.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:21:08.290" level="INFO">Running command 'ozone sh bucket link 06173-source/bucket1 06173-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:21:15.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:21:15.118" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:21:08.287" endtime="20210419 01:21:15.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:21:15.121" level="INFO"/>
<status status="PASS" starttime="20210419 01:21:15.119" endtime="20210419 01:21:15.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:21:15.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:21:15.122" endtime="20210419 01:21:15.124"/>
</kw>
<status status="PASS" starttime="20210419 01:21:08.286" endtime="20210419 01:21:15.124"/>
</kw>
<msg timestamp="20210419 01:21:15.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:21:08.286" endtime="20210419 01:21:15.125"/>
</kw>
<status status="PASS" starttime="20210419 01:21:08.285" endtime="20210419 01:21:15.125"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:21:15.133" level="INFO">Running command 'ozone sh key put 06173-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:23:08.240" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210419 01:21:15.131" endtime="20210419 01:23:08.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210419 01:23:08.241" endtime="20210419 01:23:08.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210419 01:23:08.241" endtime="20210419 01:23:08.241"/>
</kw>
<status status="FAIL" starttime="20210419 01:21:15.128" endtime="20210419 01:23:08.241"/>
</kw>
<msg timestamp="20210419 01:23:08.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210419 01:21:15.127" endtime="20210419 01:23:08.242"/>
</kw>
<status status="FAIL" starttime="20210419 01:21:15.126" endtime="20210419 01:23:08.242"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210419 01:23:08.242" endtime="20210419 01:23:08.242"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210419 01:21:08.239" endtime="20210419 01:23:08.242">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:23:08.254" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:23:08.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:23:08.258" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:23:08.250" endtime="20210419 01:23:08.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:23:08.259" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:23:08.258" endtime="20210419 01:23:08.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:23:08.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:23:08.260" endtime="20210419 01:23:08.261"/>
</kw>
<status status="PASS" starttime="20210419 01:23:08.249" endtime="20210419 01:23:08.261"/>
</kw>
<msg timestamp="20210419 01:23:08.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:23:08.248" endtime="20210419 01:23:08.261"/>
</kw>
<msg timestamp="20210419 01:23:08.262" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:23:08.248" endtime="20210419 01:23:08.262"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:23:08.263" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:23:08.262" endtime="20210419 01:23:08.263"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:23:08.270" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:23:08.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:23:08.277" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:23:08.265" endtime="20210419 01:23:08.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:23:08.279" level="INFO"/>
<status status="PASS" starttime="20210419 01:23:08.278" endtime="20210419 01:23:08.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:23:08.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:23:08.279" endtime="20210419 01:23:08.280"/>
</kw>
<status status="PASS" starttime="20210419 01:23:08.264" endtime="20210419 01:23:08.280"/>
</kw>
<msg timestamp="20210419 01:23:08.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:23:08.264" endtime="20210419 01:23:08.280"/>
</kw>
<status status="PASS" starttime="20210419 01:23:08.263" endtime="20210419 01:23:08.281"/>
</kw>
<status status="PASS" starttime="20210419 01:23:08.263" endtime="20210419 01:23:08.281"/>
</kw>
<status status="PASS" starttime="20210419 01:23:08.246" endtime="20210419 01:23:08.281"/>
</kw>
<status status="PASS" starttime="20210419 01:23:08.245" endtime="20210419 01:23:08.281"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:23:08.289" level="INFO">Running command 'ozone sh bucket delete 06173-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:23:15.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:23:15.269" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:23:08.286" endtime="20210419 01:23:15.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:23:15.271" level="INFO"/>
<status status="PASS" starttime="20210419 01:23:15.269" endtime="20210419 01:23:15.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:23:15.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:23:15.271" endtime="20210419 01:23:15.272"/>
</kw>
<status status="PASS" starttime="20210419 01:23:08.285" endtime="20210419 01:23:15.272"/>
</kw>
<msg timestamp="20210419 01:23:15.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:23:08.282" endtime="20210419 01:23:15.272"/>
</kw>
<status status="PASS" starttime="20210419 01:23:08.281" endtime="20210419 01:23:15.273"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:23:15.279" level="INFO">Running command 'ozone sh bucket list 06173-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:23:21.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:23:21.815" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T...</msg>
<status status="PASS" starttime="20210419 01:23:15.276" endtime="20210419 01:23:21.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:23:21.816" level="INFO">{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:20:05.511Z",
  "modificationTime" : "2021-04-19T01:20:05.511Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:14:18.128Z",
  "modificationTime" : "2021-04-19T01:14:18.128Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:13:37.490Z",
  "modificationTime" : "2021-04-19T01:14:11.047Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:19:51.677Z",
  "modificationTime" : "2021-04-19T01:19:51.677Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:21:15.009Z",
  "modificationTime" : "2021-04-19T01:21:15.009Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:21:00.672Z",
  "modificationTime" : "2021-04-19T01:21:00.672Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:20:46.494Z",
  "modificationTime" : "2021-04-19T01:20:46.494Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:20:53.733Z",
  "modificationTime" : "2021-04-19T01:20:53.733Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:13:25.010Z",
  "modificationTime" : "2021-04-19T01:14:05.693Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T01:13:31.820Z",
  "modificationTime" : "2021-04-19T01:13:31.820Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "06173-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210419 01:23:21.816" endtime="20210419 01:23:21.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:23:21.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:23:21.817" endtime="20210419 01:23:21.817"/>
</kw>
<status status="PASS" starttime="20210419 01:23:15.275" endtime="20210419 01:23:21.818"/>
</kw>
<msg timestamp="20210419 01:23:21.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:23:15.274" endtime="20210419 01:23:21.818"/>
</kw>
<msg timestamp="20210419 01:23:21.818" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "06173-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-04-19T...</msg>
<status status="PASS" starttime="20210419 01:23:15.273" endtime="20210419 01:23:21.818"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:23:21.819" endtime="20210419 01:23:21.819"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:23:21.823" level="INFO">Running command 'ozone sh key list 06173-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:23:29.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:23:29.562" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210419 01:23:21.821" endtime="20210419 01:23:29.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:23:29.565" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210419 01:23:29.564" endtime="20210419 01:23:29.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:23:29.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:23:29.566" endtime="20210419 01:23:29.568"/>
</kw>
<status status="PASS" starttime="20210419 01:23:21.820" endtime="20210419 01:23:29.568"/>
</kw>
<msg timestamp="20210419 01:23:29.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:23:21.820" endtime="20210419 01:23:29.569"/>
</kw>
<msg timestamp="20210419 01:23:29.569" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210419 01:23:21.819" endtime="20210419 01:23:29.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:23:29.570" endtime="20210419 01:23:29.571"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:23:08.243" endtime="20210419 01:23:29.571"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210419 01:09:37.293" endtime="20210419 01:23:29.575"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210419 01:23:29.611" level="INFO">${random} = 95047</msg>
<status status="PASS" starttime="20210419 01:23:29.611" endtime="20210419 01:23:29.611"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:23:29.612" level="INFO">${prefix} = 95047</msg>
<status status="PASS" starttime="20210419 01:23:29.612" endtime="20210419 01:23:29.612"/>
</kw>
<status status="PASS" starttime="20210419 01:23:29.610" endtime="20210419 01:23:29.613"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:23:29.620" level="INFO">Running command 'ozone sh volume info /95047-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:23:36.736" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:23:36.736" level="INFO">${output} = VOLUME_NOT_FOUND Volume 95047-rpcbasic is not found</msg>
<status status="PASS" starttime="20210419 01:23:29.618" endtime="20210419 01:23:36.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:23:36.739" level="INFO">VOLUME_NOT_FOUND Volume 95047-rpcbasic is not found</msg>
<status status="PASS" starttime="20210419 01:23:36.737" endtime="20210419 01:23:36.739"/>
</kw>
<msg timestamp="20210419 01:23:36.740" level="INFO">${result} = VOLUME_NOT_FOUND Volume 95047-rpcbasic is not found</msg>
<status status="PASS" starttime="20210419 01:23:29.617" endtime="20210419 01:23:36.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:23:36.740" endtime="20210419 01:23:36.741"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:23:36.748" level="INFO">Running command 'ozone sh volume create /95047-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:23:44.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:23:44.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:23:36.745" endtime="20210419 01:23:44.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:23:44.008" level="INFO"/>
<status status="PASS" starttime="20210419 01:23:44.006" endtime="20210419 01:23:44.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:23:44.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:23:44.008" endtime="20210419 01:23:44.010"/>
</kw>
<status status="PASS" starttime="20210419 01:23:36.744" endtime="20210419 01:23:44.010"/>
</kw>
<msg timestamp="20210419 01:23:44.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:23:36.743" endtime="20210419 01:23:44.011"/>
</kw>
<msg timestamp="20210419 01:23:44.011" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210419 01:23:36.741" endtime="20210419 01:23:44.011"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:23:44.011" endtime="20210419 01:23:44.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:23:44.017" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="95047-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:23:52.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:23:52.110" level="INFO">${output} = {
  "metadata": {},
  "name": "95047-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210419 01:23:44.014" endtime="20210419 01:23:52.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:23:52.111" level="INFO">{
  "metadata": {},
  "name": "95047-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-19T01:23:43.912Z",
  "modificationTime": "2021-04-19T01:23:43.912Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210419 01:23:52.111" endtime="20210419 01:23:52.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:23:52.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:23:52.112" endtime="20210419 01:23:52.112"/>
</kw>
<status status="PASS" starttime="20210419 01:23:44.013" endtime="20210419 01:23:52.113"/>
</kw>
<msg timestamp="20210419 01:23:52.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:23:44.013" endtime="20210419 01:23:52.113"/>
</kw>
<msg timestamp="20210419 01:23:52.113" level="INFO">${result} = {
  "metadata": {},
  "name": "95047-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210419 01:23:44.012" endtime="20210419 01:23:52.113"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:23:52.114" endtime="20210419 01:23:52.114"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:23:52.118" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="95047-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:24:00.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:24:00.603" level="INFO">${output} = {
  "metadata": {},
  "name": "95047-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210419 01:23:52.116" endtime="20210419 01:24:00.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:24:00.605" level="INFO">{
  "metadata": {},
  "name": "95047-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-19T01:23:43.912Z",
  "modificationTime": "2021-04-19T01:23:43.912Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210419 01:24:00.604" endtime="20210419 01:24:00.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:24:00.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:24:00.605" endtime="20210419 01:24:00.606"/>
</kw>
<status status="PASS" starttime="20210419 01:23:52.115" endtime="20210419 01:24:00.606"/>
</kw>
<msg timestamp="20210419 01:24:00.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:23:52.115" endtime="20210419 01:24:00.606"/>
</kw>
<msg timestamp="20210419 01:24:00.606" level="INFO">${result} = {
  "metadata": {},
  "name": "95047-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210419 01:23:52.114" endtime="20210419 01:24:00.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:24:00.607" endtime="20210419 01:24:00.607"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:24:00.615" level="INFO">Running command 'ozone sh volume setquota /95047-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:24:08.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:24:08.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:24:00.612" endtime="20210419 01:24:08.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:24:08.048" level="INFO"/>
<status status="PASS" starttime="20210419 01:24:08.047" endtime="20210419 01:24:08.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:24:08.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:24:08.049" endtime="20210419 01:24:08.050"/>
</kw>
<status status="PASS" starttime="20210419 01:24:00.611" endtime="20210419 01:24:08.051"/>
</kw>
<msg timestamp="20210419 01:24:08.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:24:00.611" endtime="20210419 01:24:08.051"/>
</kw>
<status status="PASS" starttime="20210419 01:24:00.607" endtime="20210419 01:24:08.052"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:24:08.061" level="INFO">Running command 'ozone sh volume info /95047-rpcbasic | jq -r '. | select(.name=="95047-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:24:16.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:24:16.327" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:24:08.057" endtime="20210419 01:24:16.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:24:16.328" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210419 01:24:16.327" endtime="20210419 01:24:16.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:24:16.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:24:16.329" endtime="20210419 01:24:16.329"/>
</kw>
<status status="PASS" starttime="20210419 01:24:08.056" endtime="20210419 01:24:16.329"/>
</kw>
<msg timestamp="20210419 01:24:16.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:24:08.055" endtime="20210419 01:24:16.330"/>
</kw>
<msg timestamp="20210419 01:24:16.330" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:24:08.052" endtime="20210419 01:24:16.330"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:24:16.330" endtime="20210419 01:24:16.331"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:24:16.339" level="INFO">Running command 'ozone sh bucket create /95047-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:24:21.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:24:21.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:24:16.333" endtime="20210419 01:24:21.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:24:21.373" level="INFO"/>
<status status="PASS" starttime="20210419 01:24:21.371" endtime="20210419 01:24:21.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:24:21.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:24:21.373" endtime="20210419 01:24:21.375"/>
</kw>
<status status="PASS" starttime="20210419 01:24:16.332" endtime="20210419 01:24:21.375"/>
</kw>
<msg timestamp="20210419 01:24:21.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:24:16.332" endtime="20210419 01:24:21.376"/>
</kw>
<status status="PASS" starttime="20210419 01:24:16.331" endtime="20210419 01:24:21.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:24:21.383" level="INFO">Running command 'ozone sh bucket info /95047-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:24:29.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:24:29.537" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210419 01:24:21.380" endtime="20210419 01:24:29.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:24:29.539" level="INFO">DISK</msg>
<status status="PASS" starttime="20210419 01:24:29.538" endtime="20210419 01:24:29.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:24:29.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:24:29.539" endtime="20210419 01:24:29.540"/>
</kw>
<status status="PASS" starttime="20210419 01:24:21.379" endtime="20210419 01:24:29.541"/>
</kw>
<msg timestamp="20210419 01:24:29.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:24:21.379" endtime="20210419 01:24:29.541"/>
</kw>
<msg timestamp="20210419 01:24:29.542" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210419 01:24:21.376" endtime="20210419 01:24:29.542"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:24:29.542" endtime="20210419 01:24:29.542"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:24:29.553" level="INFO">Running command 'ozone sh bucket info /95047-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:24:37.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:24:37.223" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:24:29.546" endtime="20210419 01:24:37.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:24:37.225" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210419 01:24:37.224" endtime="20210419 01:24:37.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:24:37.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:24:37.225" endtime="20210419 01:24:37.226"/>
</kw>
<status status="PASS" starttime="20210419 01:24:29.545" endtime="20210419 01:24:37.226"/>
</kw>
<msg timestamp="20210419 01:24:37.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:24:29.544" endtime="20210419 01:24:37.226"/>
</kw>
<msg timestamp="20210419 01:24:37.227" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:24:29.543" endtime="20210419 01:24:37.227"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:24:37.227" endtime="20210419 01:24:37.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:24:37.233" level="INFO">Running command 'ozone sh bucket info /95047-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:24:45.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:24:45.054" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210419 01:24:37.230" endtime="20210419 01:24:45.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:24:45.056" level="INFO">100</msg>
<status status="PASS" starttime="20210419 01:24:45.054" endtime="20210419 01:24:45.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:24:45.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:24:45.057" endtime="20210419 01:24:45.058"/>
</kw>
<status status="PASS" starttime="20210419 01:24:37.230" endtime="20210419 01:24:45.059"/>
</kw>
<msg timestamp="20210419 01:24:45.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:24:37.229" endtime="20210419 01:24:45.059"/>
</kw>
<msg timestamp="20210419 01:24:45.060" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210419 01:24:37.228" endtime="20210419 01:24:45.060"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:24:45.060" endtime="20210419 01:24:45.061"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:24:45.068" level="INFO">Running command 'ozone sh bucket setquota /95047-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:24:51.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:24:51.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:24:45.065" endtime="20210419 01:24:51.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:24:51.847" level="INFO"/>
<status status="PASS" starttime="20210419 01:24:51.844" endtime="20210419 01:24:51.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:24:51.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:24:51.847" endtime="20210419 01:24:51.849"/>
</kw>
<status status="PASS" starttime="20210419 01:24:45.064" endtime="20210419 01:24:51.849"/>
</kw>
<msg timestamp="20210419 01:24:51.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:24:45.063" endtime="20210419 01:24:51.850"/>
</kw>
<status status="PASS" starttime="20210419 01:24:45.061" endtime="20210419 01:24:51.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:24:51.859" level="INFO">Running command 'ozone sh bucket info /95047-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:24:59.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:24:59.531" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210419 01:24:51.855" endtime="20210419 01:24:59.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:24:59.533" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210419 01:24:59.532" endtime="20210419 01:24:59.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:24:59.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:24:59.533" endtime="20210419 01:24:59.534"/>
</kw>
<status status="PASS" starttime="20210419 01:24:51.853" endtime="20210419 01:24:59.534"/>
</kw>
<msg timestamp="20210419 01:24:59.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:24:51.853" endtime="20210419 01:24:59.534"/>
</kw>
<msg timestamp="20210419 01:24:59.535" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210419 01:24:51.851" endtime="20210419 01:24:59.535"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:24:59.535" endtime="20210419 01:24:59.536"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:24:59.544" level="INFO">Running command 'ozone sh bucket info /95047-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:25:06.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:25:06.931" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210419 01:24:59.541" endtime="20210419 01:25:06.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:25:06.934" level="INFO">1000</msg>
<status status="PASS" starttime="20210419 01:25:06.933" endtime="20210419 01:25:06.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:25:06.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:25:06.935" endtime="20210419 01:25:06.937"/>
</kw>
<status status="PASS" starttime="20210419 01:24:59.539" endtime="20210419 01:25:06.937"/>
</kw>
<msg timestamp="20210419 01:25:06.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:24:59.538" endtime="20210419 01:25:06.938"/>
</kw>
<msg timestamp="20210419 01:25:06.938" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210419 01:24:59.536" endtime="20210419 01:25:06.938"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:25:06.938" endtime="20210419 01:25:06.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:25:06.944" level="INFO">Running command 'ozone sh bucket list /95047-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:25:14.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:25:14.712" level="INFO">${output} = 95047-rpcbasic</msg>
<status status="PASS" starttime="20210419 01:25:06.941" endtime="20210419 01:25:14.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:25:14.714" level="INFO">95047-rpcbasic</msg>
<status status="PASS" starttime="20210419 01:25:14.713" endtime="20210419 01:25:14.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:25:14.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:25:14.714" endtime="20210419 01:25:14.715"/>
</kw>
<status status="PASS" starttime="20210419 01:25:06.941" endtime="20210419 01:25:14.716"/>
</kw>
<msg timestamp="20210419 01:25:14.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:25:06.940" endtime="20210419 01:25:14.716"/>
</kw>
<msg timestamp="20210419 01:25:14.716" level="INFO">${result} = 95047-rpcbasic</msg>
<status status="PASS" starttime="20210419 01:25:06.939" endtime="20210419 01:25:14.716"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:25:14.717" endtime="20210419 01:25:14.717"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:25:14.725" level="INFO">Running command 'ozone sh key put /95047-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:28:24.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:28:24.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:25:14.723" endtime="20210419 01:28:24.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:28:24.760" level="INFO"/>
<status status="PASS" starttime="20210419 01:28:24.759" endtime="20210419 01:28:24.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:28:24.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:28:24.761" endtime="20210419 01:28:24.762"/>
</kw>
<status status="PASS" starttime="20210419 01:25:14.722" endtime="20210419 01:28:24.763"/>
</kw>
<msg timestamp="20210419 01:28:24.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:25:14.721" endtime="20210419 01:28:24.763"/>
</kw>
<status status="PASS" starttime="20210419 01:25:14.720" endtime="20210419 01:28:24.764"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:28:24.768" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:28:24.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:28:24.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:28:24.766" endtime="20210419 01:28:24.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:28:24.775" level="INFO"/>
<status status="PASS" starttime="20210419 01:28:24.773" endtime="20210419 01:28:24.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:28:24.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:28:24.775" endtime="20210419 01:28:24.777"/>
</kw>
<status status="PASS" starttime="20210419 01:28:24.765" endtime="20210419 01:28:24.777"/>
</kw>
<msg timestamp="20210419 01:28:24.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:28:24.765" endtime="20210419 01:28:24.778"/>
</kw>
<status status="PASS" starttime="20210419 01:28:24.764" endtime="20210419 01:28:24.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:28:24.785" level="INFO">Running command 'ozone sh key get /95047-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:28:29.615" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210419 01:28:24.782" endtime="20210419 01:28:29.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.616" endtime="20210419 01:28:29.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.617" endtime="20210419 01:28:29.617"/>
</kw>
<status status="FAIL" starttime="20210419 01:28:24.781" endtime="20210419 01:28:29.618"/>
</kw>
<msg timestamp="20210419 01:28:29.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210419 01:28:24.780" endtime="20210419 01:28:29.618"/>
</kw>
<status status="FAIL" starttime="20210419 01:28:24.779" endtime="20210419 01:28:29.619"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.619" endtime="20210419 01:28:29.619"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.620" endtime="20210419 01:28:29.620"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.620" endtime="20210419 01:28:29.620"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.620" endtime="20210419 01:28:29.620"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.620" endtime="20210419 01:28:29.620"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.621" endtime="20210419 01:28:29.621"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.621" endtime="20210419 01:28:29.621"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.621" endtime="20210419 01:28:29.623"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.624" endtime="20210419 01:28:29.624"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.624" endtime="20210419 01:28:29.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.625" endtime="20210419 01:28:29.625"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.625" endtime="20210419 01:28:29.625"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.626" endtime="20210419 01:28:29.626"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.626" endtime="20210419 01:28:29.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.627" endtime="20210419 01:28:29.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.628" endtime="20210419 01:28:29.629"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.629" endtime="20210419 01:28:29.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.630" endtime="20210419 01:28:29.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.631" endtime="20210419 01:28:29.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.631" endtime="20210419 01:28:29.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.632" endtime="20210419 01:28:29.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.633" endtime="20210419 01:28:29.633"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.633" endtime="20210419 01:28:29.633"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.635" endtime="20210419 01:28:29.635"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.635" endtime="20210419 01:28:29.636"/>
</kw>
<status status="FAIL" starttime="20210419 01:25:14.718" endtime="20210419 01:28:29.636"/>
</kw>
<status status="FAIL" starttime="20210419 01:25:14.717" endtime="20210419 01:28:29.637"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.637" endtime="20210419 01:28:29.637"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.638" endtime="20210419 01:28:29.638"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.639" endtime="20210419 01:28:29.639"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.639" endtime="20210419 01:28:29.639"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.640" endtime="20210419 01:28:29.640"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.640" endtime="20210419 01:28:29.641"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.641" endtime="20210419 01:28:29.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.642" endtime="20210419 01:28:29.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.643" endtime="20210419 01:28:29.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.643" endtime="20210419 01:28:29.643"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.643" endtime="20210419 01:28:29.643"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.645" endtime="20210419 01:28:29.645"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.646" endtime="20210419 01:28:29.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.646" endtime="20210419 01:28:29.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.646" endtime="20210419 01:28:29.647"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.647" endtime="20210419 01:28:29.647"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.648" endtime="20210419 01:28:29.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.649" endtime="20210419 01:28:29.650"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.651" endtime="20210419 01:28:29.651"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.651" endtime="20210419 01:28:29.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.653" endtime="20210419 01:28:29.653"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.653" endtime="20210419 01:28:29.653"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.654" endtime="20210419 01:28:29.654"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:28:29.654" endtime="20210419 01:28:29.654"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.655" endtime="20210419 01:28:29.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:28:29.656" endtime="20210419 01:28:29.656"/>
</kw>
<status status="FAIL" starttime="20210419 01:23:29.615" endtime="20210419 01:28:29.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210419 01:23:29.613" endtime="20210419 01:28:29.658">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210419 01:23:29.583" endtime="20210419 01:28:29.661"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210419 01:28:29.716" level="INFO">${random} = 98885</msg>
<status status="PASS" starttime="20210419 01:28:29.713" endtime="20210419 01:28:29.716"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:28:29.717" level="INFO">${prefix} = 98885</msg>
<status status="PASS" starttime="20210419 01:28:29.717" endtime="20210419 01:28:29.717"/>
</kw>
<status status="PASS" starttime="20210419 01:28:29.702" endtime="20210419 01:28:29.717"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:28:29.772" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:28:29.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:28:29.778" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:28:29.757" endtime="20210419 01:28:29.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:28:29.780" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:28:29.779" endtime="20210419 01:28:29.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:28:29.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:28:29.780" endtime="20210419 01:28:29.784"/>
</kw>
<status status="PASS" starttime="20210419 01:28:29.757" endtime="20210419 01:28:29.791"/>
</kw>
<msg timestamp="20210419 01:28:29.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:28:29.756" endtime="20210419 01:28:29.791"/>
</kw>
<msg timestamp="20210419 01:28:29.797" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:28:29.719" endtime="20210419 01:28:29.797"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:28:29.799" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:28:29.797" endtime="20210419 01:28:29.799"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:28:29.822" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:28:29.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:28:29.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:28:29.814" endtime="20210419 01:28:29.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:28:29.872" level="INFO"/>
<status status="PASS" starttime="20210419 01:28:29.870" endtime="20210419 01:28:29.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:28:29.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:28:29.872" endtime="20210419 01:28:29.873"/>
</kw>
<status status="PASS" starttime="20210419 01:28:29.813" endtime="20210419 01:28:29.873"/>
</kw>
<msg timestamp="20210419 01:28:29.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:28:29.813" endtime="20210419 01:28:29.874"/>
</kw>
<status status="PASS" starttime="20210419 01:28:29.800" endtime="20210419 01:28:29.874"/>
</kw>
<status status="PASS" starttime="20210419 01:28:29.799" endtime="20210419 01:28:29.874"/>
</kw>
<status status="PASS" starttime="20210419 01:28:29.719" endtime="20210419 01:28:29.874"/>
</kw>
<status status="PASS" starttime="20210419 01:28:29.718" endtime="20210419 01:28:29.875"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:28:29.908" level="INFO">Running command 'ozone sh volume info o3://om:9862/98885-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:28:40.208" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:28:40.208" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98885-rpcwoport is not found</msg>
<status status="PASS" starttime="20210419 01:28:29.896" endtime="20210419 01:28:40.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:28:40.210" level="INFO">VOLUME_NOT_FOUND Volume 98885-rpcwoport is not found</msg>
<status status="PASS" starttime="20210419 01:28:40.209" endtime="20210419 01:28:40.210"/>
</kw>
<msg timestamp="20210419 01:28:40.211" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98885-rpcwoport is not found</msg>
<status status="PASS" starttime="20210419 01:28:29.876" endtime="20210419 01:28:40.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:28:40.211" endtime="20210419 01:28:40.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:28:40.215" level="INFO">Running command 'ozone sh volume create o3://om:9862/98885-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:28:44.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:28:44.802" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:28:40.213" endtime="20210419 01:28:44.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:28:44.804" level="INFO"/>
<status status="PASS" starttime="20210419 01:28:44.803" endtime="20210419 01:28:44.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:28:44.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:28:44.804" endtime="20210419 01:28:44.805"/>
</kw>
<status status="PASS" starttime="20210419 01:28:40.213" endtime="20210419 01:28:44.805"/>
</kw>
<msg timestamp="20210419 01:28:44.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:28:40.213" endtime="20210419 01:28:44.805"/>
</kw>
<msg timestamp="20210419 01:28:44.805" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210419 01:28:40.212" endtime="20210419 01:28:44.805"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:28:44.806" endtime="20210419 01:28:44.806"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:28:44.812" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="98885-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:28:51.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:28:51.996" level="INFO">${output} = {
  "metadata": {},
  "name": "98885-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210419 01:28:44.809" endtime="20210419 01:28:51.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:28:52.005" level="INFO">{
  "metadata": {},
  "name": "98885-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-19T01:28:44.716Z",
  "modificationTime": "2021-04-19T01:28:44.716Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210419 01:28:52.004" endtime="20210419 01:28:52.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:28:52.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:28:52.006" endtime="20210419 01:28:52.007"/>
</kw>
<status status="PASS" starttime="20210419 01:28:44.808" endtime="20210419 01:28:52.008"/>
</kw>
<msg timestamp="20210419 01:28:52.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:28:44.807" endtime="20210419 01:28:52.008"/>
</kw>
<msg timestamp="20210419 01:28:52.009" level="INFO">${result} = {
  "metadata": {},
  "name": "98885-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210419 01:28:44.806" endtime="20210419 01:28:52.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:28:52.009" endtime="20210419 01:28:52.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:28:52.015" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="98885-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:28:58.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:28:58.096" level="INFO">${output} = {
  "metadata": {},
  "name": "98885-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210419 01:28:52.013" endtime="20210419 01:28:58.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:28:58.098" level="INFO">{
  "metadata": {},
  "name": "98885-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-19T01:28:44.716Z",
  "modificationTime": "2021-04-19T01:28:44.716Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210419 01:28:58.097" endtime="20210419 01:28:58.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:28:58.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:28:58.098" endtime="20210419 01:28:58.099"/>
</kw>
<status status="PASS" starttime="20210419 01:28:52.012" endtime="20210419 01:28:58.099"/>
</kw>
<msg timestamp="20210419 01:28:58.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:28:52.011" endtime="20210419 01:28:58.099"/>
</kw>
<msg timestamp="20210419 01:28:58.100" level="INFO">${result} = {
  "metadata": {},
  "name": "98885-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210419 01:28:52.010" endtime="20210419 01:28:58.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:28:58.100" endtime="20210419 01:28:58.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:28:58.104" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/98885-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:29:04.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:29:04.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:28:58.102" endtime="20210419 01:29:04.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:29:04.517" level="INFO"/>
<status status="PASS" starttime="20210419 01:29:04.515" endtime="20210419 01:29:04.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:29:04.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:29:04.517" endtime="20210419 01:29:04.519"/>
</kw>
<status status="PASS" starttime="20210419 01:28:58.102" endtime="20210419 01:29:04.519"/>
</kw>
<msg timestamp="20210419 01:29:04.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:28:58.101" endtime="20210419 01:29:04.520"/>
</kw>
<status status="PASS" starttime="20210419 01:28:58.100" endtime="20210419 01:29:04.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:29:04.528" level="INFO">Running command 'ozone sh volume info o3://om:9862/98885-rpcwoport | jq -r '. | select(.name=="98885-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:29:10.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:29:10.846" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:29:04.524" endtime="20210419 01:29:10.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:29:10.848" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210419 01:29:10.847" endtime="20210419 01:29:10.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:29:10.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:29:10.848" endtime="20210419 01:29:10.849"/>
</kw>
<status status="PASS" starttime="20210419 01:29:04.523" endtime="20210419 01:29:10.849"/>
</kw>
<msg timestamp="20210419 01:29:10.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:29:04.522" endtime="20210419 01:29:10.849"/>
</kw>
<msg timestamp="20210419 01:29:10.850" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:29:04.520" endtime="20210419 01:29:10.850"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:29:10.850" endtime="20210419 01:29:10.850"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:29:10.855" level="INFO">Running command 'ozone sh bucket create o3://om:9862/98885-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:29:17.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:29:17.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:29:10.853" endtime="20210419 01:29:17.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:29:17.694" level="INFO"/>
<status status="PASS" starttime="20210419 01:29:17.692" endtime="20210419 01:29:17.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:29:17.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:29:17.694" endtime="20210419 01:29:17.695"/>
</kw>
<status status="PASS" starttime="20210419 01:29:10.852" endtime="20210419 01:29:17.696"/>
</kw>
<msg timestamp="20210419 01:29:17.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:29:10.851" endtime="20210419 01:29:17.696"/>
</kw>
<status status="PASS" starttime="20210419 01:29:10.850" endtime="20210419 01:29:17.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:29:17.704" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98885-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:29:25.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:29:25.049" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210419 01:29:17.700" endtime="20210419 01:29:25.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:29:25.052" level="INFO">DISK</msg>
<status status="PASS" starttime="20210419 01:29:25.051" endtime="20210419 01:29:25.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:29:25.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:29:25.053" endtime="20210419 01:29:25.054"/>
</kw>
<status status="PASS" starttime="20210419 01:29:17.699" endtime="20210419 01:29:25.054"/>
</kw>
<msg timestamp="20210419 01:29:25.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:29:17.699" endtime="20210419 01:29:25.055"/>
</kw>
<msg timestamp="20210419 01:29:25.056" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210419 01:29:17.697" endtime="20210419 01:29:25.056"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:29:25.057" endtime="20210419 01:29:25.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:29:25.067" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98885-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:29:32.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:29:32.003" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:29:25.064" endtime="20210419 01:29:32.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:29:32.005" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210419 01:29:32.003" endtime="20210419 01:29:32.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:29:32.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:29:32.006" endtime="20210419 01:29:32.008"/>
</kw>
<status status="PASS" starttime="20210419 01:29:25.062" endtime="20210419 01:29:32.009"/>
</kw>
<msg timestamp="20210419 01:29:32.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:29:25.061" endtime="20210419 01:29:32.009"/>
</kw>
<msg timestamp="20210419 01:29:32.010" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:29:25.059" endtime="20210419 01:29:32.010"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:29:32.011" endtime="20210419 01:29:32.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:29:32.021" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98885-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:29:39.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:29:39.553" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210419 01:29:32.017" endtime="20210419 01:29:39.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:29:39.554" level="INFO">100</msg>
<status status="PASS" starttime="20210419 01:29:39.554" endtime="20210419 01:29:39.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:29:39.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:29:39.555" endtime="20210419 01:29:39.555"/>
</kw>
<status status="PASS" starttime="20210419 01:29:32.016" endtime="20210419 01:29:39.556"/>
</kw>
<msg timestamp="20210419 01:29:39.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:29:32.015" endtime="20210419 01:29:39.556"/>
</kw>
<msg timestamp="20210419 01:29:39.556" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210419 01:29:32.012" endtime="20210419 01:29:39.556"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:29:39.557" endtime="20210419 01:29:39.557"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:29:39.565" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/98885-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:29:46.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:29:46.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:29:39.561" endtime="20210419 01:29:46.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:29:46.106" level="INFO"/>
<status status="PASS" starttime="20210419 01:29:46.105" endtime="20210419 01:29:46.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:29:46.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:29:46.106" endtime="20210419 01:29:46.107"/>
</kw>
<status status="PASS" starttime="20210419 01:29:39.559" endtime="20210419 01:29:46.107"/>
</kw>
<msg timestamp="20210419 01:29:46.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:29:39.558" endtime="20210419 01:29:46.108"/>
</kw>
<status status="PASS" starttime="20210419 01:29:39.557" endtime="20210419 01:29:46.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:29:46.114" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98885-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:29:53.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:29:53.644" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210419 01:29:46.111" endtime="20210419 01:29:53.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:29:53.645" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210419 01:29:53.644" endtime="20210419 01:29:53.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:29:53.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:29:53.645" endtime="20210419 01:29:53.646"/>
</kw>
<status status="PASS" starttime="20210419 01:29:46.110" endtime="20210419 01:29:53.646"/>
</kw>
<msg timestamp="20210419 01:29:53.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:29:46.110" endtime="20210419 01:29:53.647"/>
</kw>
<msg timestamp="20210419 01:29:53.647" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210419 01:29:46.109" endtime="20210419 01:29:53.647"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:29:53.647" endtime="20210419 01:29:53.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:29:53.653" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98885-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:30:00.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:30:00.718" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210419 01:29:53.650" endtime="20210419 01:30:00.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:30:00.719" level="INFO">1000</msg>
<status status="PASS" starttime="20210419 01:30:00.718" endtime="20210419 01:30:00.719"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:30:00.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:30:00.719" endtime="20210419 01:30:00.720"/>
</kw>
<status status="PASS" starttime="20210419 01:29:53.649" endtime="20210419 01:30:00.720"/>
</kw>
<msg timestamp="20210419 01:30:00.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:29:53.649" endtime="20210419 01:30:00.721"/>
</kw>
<msg timestamp="20210419 01:30:00.721" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210419 01:29:53.648" endtime="20210419 01:30:00.721"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:30:00.721" endtime="20210419 01:30:00.722"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:30:00.726" level="INFO">Running command 'ozone sh bucket list o3://om:9862/98885-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:30:07.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:30:07.298" level="INFO">${output} = 98885-rpcwoport</msg>
<status status="PASS" starttime="20210419 01:30:00.724" endtime="20210419 01:30:07.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:30:07.300" level="INFO">98885-rpcwoport</msg>
<status status="PASS" starttime="20210419 01:30:07.299" endtime="20210419 01:30:07.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:30:07.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:30:07.300" endtime="20210419 01:30:07.301"/>
</kw>
<status status="PASS" starttime="20210419 01:30:00.724" endtime="20210419 01:30:07.301"/>
</kw>
<msg timestamp="20210419 01:30:07.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:30:00.723" endtime="20210419 01:30:07.301"/>
</kw>
<msg timestamp="20210419 01:30:07.302" level="INFO">${result} = 98885-rpcwoport</msg>
<status status="PASS" starttime="20210419 01:30:00.722" endtime="20210419 01:30:07.302"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:30:07.302" endtime="20210419 01:30:07.303"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:30:07.310" level="INFO">Running command 'ozone sh key put o3://om:9862/98885-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:33:16.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:33:16.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:30:07.307" endtime="20210419 01:33:16.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:33:16.850" level="INFO"/>
<status status="PASS" starttime="20210419 01:33:16.848" endtime="20210419 01:33:16.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:33:16.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:33:16.850" endtime="20210419 01:33:16.851"/>
</kw>
<status status="PASS" starttime="20210419 01:30:07.305" endtime="20210419 01:33:16.852"/>
</kw>
<msg timestamp="20210419 01:33:16.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:30:07.305" endtime="20210419 01:33:16.852"/>
</kw>
<status status="PASS" starttime="20210419 01:30:07.304" endtime="20210419 01:33:16.853"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:33:16.859" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:33:16.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:33:16.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:33:16.856" endtime="20210419 01:33:16.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:33:16.869" level="INFO"/>
<status status="PASS" starttime="20210419 01:33:16.868" endtime="20210419 01:33:16.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:33:16.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:33:16.869" endtime="20210419 01:33:16.870"/>
</kw>
<status status="PASS" starttime="20210419 01:33:16.855" endtime="20210419 01:33:16.870"/>
</kw>
<msg timestamp="20210419 01:33:16.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:33:16.854" endtime="20210419 01:33:16.870"/>
</kw>
<status status="PASS" starttime="20210419 01:33:16.853" endtime="20210419 01:33:16.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:33:16.875" level="INFO">Running command 'ozone sh key get o3://om:9862/98885-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:33:27.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:33:27.358" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:33:16.873" endtime="20210419 01:33:27.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:33:27.360" level="INFO"/>
<status status="PASS" starttime="20210419 01:33:27.359" endtime="20210419 01:33:27.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:33:27.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:33:27.360" endtime="20210419 01:33:27.361"/>
</kw>
<status status="PASS" starttime="20210419 01:33:16.872" endtime="20210419 01:33:27.361"/>
</kw>
<msg timestamp="20210419 01:33:27.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:33:16.872" endtime="20210419 01:33:27.362"/>
</kw>
<status status="PASS" starttime="20210419 01:33:16.871" endtime="20210419 01:33:27.362"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:33:27.367" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:33:27.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:33:27.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:33:27.364" endtime="20210419 01:33:27.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:33:27.374" level="INFO"/>
<status status="PASS" starttime="20210419 01:33:27.373" endtime="20210419 01:33:27.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:33:27.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:33:27.374" endtime="20210419 01:33:27.375"/>
</kw>
<status status="PASS" starttime="20210419 01:33:27.363" endtime="20210419 01:33:27.376"/>
</kw>
<msg timestamp="20210419 01:33:27.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:33:27.363" endtime="20210419 01:33:27.376"/>
</kw>
<status status="PASS" starttime="20210419 01:33:27.362" endtime="20210419 01:33:27.386"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:33:27.391" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/98885-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:33:29.720" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210419 01:33:27.389" endtime="20210419 01:33:29.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.721" endtime="20210419 01:33:29.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.721" endtime="20210419 01:33:29.811"/>
</kw>
<status status="FAIL" starttime="20210419 01:33:27.388" endtime="20210419 01:33:29.811"/>
</kw>
<msg timestamp="20210419 01:33:29.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210419 01:33:27.388" endtime="20210419 01:33:29.812"/>
</kw>
<status status="FAIL" starttime="20210419 01:33:27.387" endtime="20210419 01:33:29.816"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.816" endtime="20210419 01:33:29.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.817" endtime="20210419 01:33:29.817"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.823" endtime="20210419 01:33:29.823"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.823" endtime="20210419 01:33:29.823"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.823" endtime="20210419 01:33:29.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.823" endtime="20210419 01:33:29.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.824" endtime="20210419 01:33:29.824"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.824" endtime="20210419 01:33:29.824"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.824" endtime="20210419 01:33:29.824"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.827" endtime="20210419 01:33:29.830"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.830" endtime="20210419 01:33:29.830"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.831" endtime="20210419 01:33:29.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.831" endtime="20210419 01:33:29.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.831" endtime="20210419 01:33:29.831"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.831" endtime="20210419 01:33:29.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.832" endtime="20210419 01:33:29.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.836" endtime="20210419 01:33:29.836"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.836" endtime="20210419 01:33:29.836"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.836" endtime="20210419 01:33:29.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.843" endtime="20210419 01:33:29.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.843" endtime="20210419 01:33:29.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.843" endtime="20210419 01:33:29.843"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.844" endtime="20210419 01:33:29.844"/>
</kw>
<status status="FAIL" starttime="20210419 01:30:07.303" endtime="20210419 01:33:29.844"/>
</kw>
<status status="FAIL" starttime="20210419 01:30:07.303" endtime="20210419 01:33:29.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.844" endtime="20210419 01:33:29.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.845" endtime="20210419 01:33:29.845"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.845" endtime="20210419 01:33:29.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.845" endtime="20210419 01:33:29.853"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.853" endtime="20210419 01:33:29.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.855" endtime="20210419 01:33:29.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.856" endtime="20210419 01:33:29.856"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.856" endtime="20210419 01:33:29.856"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.856" endtime="20210419 01:33:29.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.856" endtime="20210419 01:33:29.856"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.859" endtime="20210419 01:33:29.864"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.864" endtime="20210419 01:33:29.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.865" endtime="20210419 01:33:29.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.865" endtime="20210419 01:33:29.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.865" endtime="20210419 01:33:29.865"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.866" endtime="20210419 01:33:29.866"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.866" endtime="20210419 01:33:29.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.866" endtime="20210419 01:33:29.866"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.866" endtime="20210419 01:33:29.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.870" endtime="20210419 01:33:29.874"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.874" endtime="20210419 01:33:29.874"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.875" endtime="20210419 01:33:29.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.875" endtime="20210419 01:33:29.875"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:33:29.875" endtime="20210419 01:33:29.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.876" endtime="20210419 01:33:29.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:33:29.876" endtime="20210419 01:33:29.877"/>
</kw>
<status status="FAIL" starttime="20210419 01:28:29.875" endtime="20210419 01:33:29.877"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210419 01:28:29.718" endtime="20210419 01:33:29.877">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:33:29.904" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:33:29.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:33:29.916" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:33:29.891" endtime="20210419 01:33:29.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:33:29.917" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:33:29.917" endtime="20210419 01:33:29.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:33:29.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:33:29.918" endtime="20210419 01:33:29.919"/>
</kw>
<status status="PASS" starttime="20210419 01:33:29.887" endtime="20210419 01:33:29.919"/>
</kw>
<msg timestamp="20210419 01:33:29.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:33:29.887" endtime="20210419 01:33:29.920"/>
</kw>
<msg timestamp="20210419 01:33:29.920" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:33:29.886" endtime="20210419 01:33:29.920"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:33:29.922" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:33:29.921" endtime="20210419 01:33:29.922"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:33:29.949" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:33:29.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:33:29.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:33:29.936" endtime="20210419 01:33:29.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:33:29.993" level="INFO"/>
<status status="PASS" starttime="20210419 01:33:29.991" endtime="20210419 01:33:29.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:33:29.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:33:29.993" endtime="20210419 01:33:29.994"/>
</kw>
<status status="PASS" starttime="20210419 01:33:29.934" endtime="20210419 01:33:29.994"/>
</kw>
<msg timestamp="20210419 01:33:29.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:33:29.932" endtime="20210419 01:33:29.995"/>
</kw>
<status status="PASS" starttime="20210419 01:33:29.925" endtime="20210419 01:33:29.995"/>
</kw>
<status status="PASS" starttime="20210419 01:33:29.923" endtime="20210419 01:33:29.995"/>
</kw>
<status status="PASS" starttime="20210419 01:33:29.886" endtime="20210419 01:33:29.995"/>
</kw>
<status status="PASS" starttime="20210419 01:33:29.879" endtime="20210419 01:33:29.996"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:33:30.025" level="INFO">Running command 'ozone sh volume create o3://om:9862/98885-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:33:44.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:33:44.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:33:30.013" endtime="20210419 01:33:44.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:33:44.627" level="INFO"/>
<status status="PASS" starttime="20210419 01:33:44.624" endtime="20210419 01:33:44.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:33:44.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:33:44.627" endtime="20210419 01:33:44.628"/>
</kw>
<status status="PASS" starttime="20210419 01:33:30.008" endtime="20210419 01:33:44.629"/>
</kw>
<msg timestamp="20210419 01:33:44.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:33:30.005" endtime="20210419 01:33:44.631"/>
</kw>
<status status="PASS" starttime="20210419 01:33:30.002" endtime="20210419 01:33:44.633"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:33:44.644" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98885-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:33:51.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:33:51.172" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:33:44.639" endtime="20210419 01:33:51.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:33:51.173" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:33:51.173" endtime="20210419 01:33:51.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:33:51.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:33:51.174" endtime="20210419 01:33:51.174"/>
</kw>
<status status="PASS" starttime="20210419 01:33:44.639" endtime="20210419 01:33:51.175"/>
</kw>
<msg timestamp="20210419 01:33:51.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:33:44.637" endtime="20210419 01:33:51.175"/>
</kw>
<msg timestamp="20210419 01:33:51.175" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:33:44.634" endtime="20210419 01:33:51.175"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:33:51.175" endtime="20210419 01:33:51.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:33:51.181" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/98885-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:33:57.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:33:57.862" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210419 01:33:51.179" endtime="20210419 01:33:57.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:33:57.863" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210419 01:33:57.862" endtime="20210419 01:33:57.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:33:57.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:33:57.863" endtime="20210419 01:33:57.864"/>
</kw>
<status status="PASS" starttime="20210419 01:33:51.178" endtime="20210419 01:33:57.865"/>
</kw>
<msg timestamp="20210419 01:33:57.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:33:51.178" endtime="20210419 01:33:57.865"/>
</kw>
<msg timestamp="20210419 01:33:57.865" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210419 01:33:51.177" endtime="20210419 01:33:57.865"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:33:57.869" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98885-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:03.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:03.123" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:33:57.867" endtime="20210419 01:34:03.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:03.127" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:34:03.125" endtime="20210419 01:34:03.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:03.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:03.128" endtime="20210419 01:34:03.130"/>
</kw>
<status status="PASS" starttime="20210419 01:33:57.866" endtime="20210419 01:34:03.132"/>
</kw>
<msg timestamp="20210419 01:34:03.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:33:57.866" endtime="20210419 01:34:03.133"/>
</kw>
<msg timestamp="20210419 01:34:03.135" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:33:57.865" endtime="20210419 01:34:03.135"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:34:03.135" endtime="20210419 01:34:03.138"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:03.149" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/98885-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:09.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:09.854" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210419 01:34:03.143" endtime="20210419 01:34:09.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:09.857" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210419 01:34:09.855" endtime="20210419 01:34:09.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:09.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:09.857" endtime="20210419 01:34:09.858"/>
</kw>
<status status="PASS" starttime="20210419 01:34:03.142" endtime="20210419 01:34:09.858"/>
</kw>
<msg timestamp="20210419 01:34:09.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:03.142" endtime="20210419 01:34:09.859"/>
</kw>
<msg timestamp="20210419 01:34:09.860" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210419 01:34:03.138" endtime="20210419 01:34:09.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:09.867" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98885-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:16.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:16.959" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:34:09.864" endtime="20210419 01:34:16.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:16.961" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:34:16.960" endtime="20210419 01:34:16.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:16.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:16.963" endtime="20210419 01:34:16.964"/>
</kw>
<status status="PASS" starttime="20210419 01:34:09.863" endtime="20210419 01:34:16.965"/>
</kw>
<msg timestamp="20210419 01:34:16.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:09.862" endtime="20210419 01:34:16.965"/>
</kw>
<msg timestamp="20210419 01:34:16.966" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:34:09.860" endtime="20210419 01:34:16.966"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:34:16.966" endtime="20210419 01:34:16.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:16.974" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/98885-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:21.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:21.369" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:34:16.971" endtime="20210419 01:34:21.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:21.370" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:34:21.369" endtime="20210419 01:34:21.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:21.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:21.371" endtime="20210419 01:34:21.371"/>
</kw>
<status status="PASS" starttime="20210419 01:34:16.970" endtime="20210419 01:34:21.372"/>
</kw>
<msg timestamp="20210419 01:34:21.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:16.969" endtime="20210419 01:34:21.372"/>
</kw>
<msg timestamp="20210419 01:34:21.373" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:34:16.968" endtime="20210419 01:34:21.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:21.378" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98885-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:28.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:28.929" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210419 01:34:21.375" endtime="20210419 01:34:28.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:28.931" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:34:28.930" endtime="20210419 01:34:28.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:28.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:28.932" endtime="20210419 01:34:28.933"/>
</kw>
<status status="PASS" starttime="20210419 01:34:21.375" endtime="20210419 01:34:28.933"/>
</kw>
<msg timestamp="20210419 01:34:28.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:21.374" endtime="20210419 01:34:28.934"/>
</kw>
<msg timestamp="20210419 01:34:28.934" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210419 01:34:21.373" endtime="20210419 01:34:28.934"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:34:28.935" endtime="20210419 01:34:28.935"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:34:28.935" endtime="20210419 01:34:28.937"/>
</kw>
<status status="PASS" starttime="20210419 01:33:29.996" endtime="20210419 01:34:28.937"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210419 01:33:29.878" endtime="20210419 01:34:28.939"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:28.949" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:28.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:28.953" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:34:28.946" endtime="20210419 01:34:28.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:28.954" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:34:28.953" endtime="20210419 01:34:28.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:28.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:28.954" endtime="20210419 01:34:28.955"/>
</kw>
<status status="PASS" starttime="20210419 01:34:28.945" endtime="20210419 01:34:28.956"/>
</kw>
<msg timestamp="20210419 01:34:28.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:28.945" endtime="20210419 01:34:28.956"/>
</kw>
<msg timestamp="20210419 01:34:28.956" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:34:28.944" endtime="20210419 01:34:28.956"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:34:28.959" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:34:28.957" endtime="20210419 01:34:28.959"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:28.965" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:28.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:28.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:34:28.963" endtime="20210419 01:34:28.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:28.976" level="INFO"/>
<status status="PASS" starttime="20210419 01:34:28.975" endtime="20210419 01:34:28.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:28.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:28.977" endtime="20210419 01:34:28.978"/>
</kw>
<status status="PASS" starttime="20210419 01:34:28.963" endtime="20210419 01:34:28.978"/>
</kw>
<msg timestamp="20210419 01:34:28.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:28.962" endtime="20210419 01:34:28.979"/>
</kw>
<status status="PASS" starttime="20210419 01:34:28.960" endtime="20210419 01:34:28.979"/>
</kw>
<status status="PASS" starttime="20210419 01:34:28.959" endtime="20210419 01:34:28.979"/>
</kw>
<status status="PASS" starttime="20210419 01:34:28.943" endtime="20210419 01:34:28.979"/>
</kw>
<status status="PASS" starttime="20210419 01:34:28.942" endtime="20210419 01:34:28.979"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:28.984" level="INFO">Running command 'ozone sh bucket create o3://om:9862/98885-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:35.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:35.604" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:34:28.982" endtime="20210419 01:34:35.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:35.606" level="INFO"/>
<status status="PASS" starttime="20210419 01:34:35.605" endtime="20210419 01:34:35.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:35.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:35.606" endtime="20210419 01:34:35.607"/>
</kw>
<status status="PASS" starttime="20210419 01:34:28.981" endtime="20210419 01:34:35.607"/>
</kw>
<msg timestamp="20210419 01:34:35.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:28.981" endtime="20210419 01:34:35.607"/>
</kw>
<status status="PASS" starttime="20210419 01:34:28.980" endtime="20210419 01:34:35.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:35.613" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98885-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:42.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:42.795" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:34:35.611" endtime="20210419 01:34:42.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:42.798" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:34:42.796" endtime="20210419 01:34:42.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:42.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:42.799" endtime="20210419 01:34:42.800"/>
</kw>
<status status="PASS" starttime="20210419 01:34:35.610" endtime="20210419 01:34:42.800"/>
</kw>
<msg timestamp="20210419 01:34:42.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:35.610" endtime="20210419 01:34:42.801"/>
</kw>
<msg timestamp="20210419 01:34:42.802" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:34:35.608" endtime="20210419 01:34:42.802"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:34:42.802" endtime="20210419 01:34:42.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:42.810" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/98885-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:49.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:49.433" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210419 01:34:42.807" endtime="20210419 01:34:49.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:49.437" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210419 01:34:49.435" endtime="20210419 01:34:49.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:49.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:49.437" endtime="20210419 01:34:49.438"/>
</kw>
<status status="PASS" starttime="20210419 01:34:42.806" endtime="20210419 01:34:49.439"/>
</kw>
<msg timestamp="20210419 01:34:49.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:42.805" endtime="20210419 01:34:49.440"/>
</kw>
<msg timestamp="20210419 01:34:49.440" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210419 01:34:42.804" endtime="20210419 01:34:49.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:49.447" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98885-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:34:56.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:34:56.427" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:34:49.444" endtime="20210419 01:34:56.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:34:56.429" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:34:56.427" endtime="20210419 01:34:56.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:34:56.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:34:56.430" endtime="20210419 01:34:56.431"/>
</kw>
<status status="PASS" starttime="20210419 01:34:49.443" endtime="20210419 01:34:56.432"/>
</kw>
<msg timestamp="20210419 01:34:56.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:49.442" endtime="20210419 01:34:56.432"/>
</kw>
<msg timestamp="20210419 01:34:56.433" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:34:49.440" endtime="20210419 01:34:56.433"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:34:56.433" endtime="20210419 01:34:56.435"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:34:56.441" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/98885-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:35:03.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:35:03.240" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210419 01:34:56.438" endtime="20210419 01:35:03.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:35:03.241" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210419 01:35:03.241" endtime="20210419 01:35:03.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:35:03.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:35:03.242" endtime="20210419 01:35:03.242"/>
</kw>
<status status="PASS" starttime="20210419 01:34:56.437" endtime="20210419 01:35:03.243"/>
</kw>
<msg timestamp="20210419 01:35:03.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:34:56.437" endtime="20210419 01:35:03.243"/>
</kw>
<msg timestamp="20210419 01:35:03.243" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210419 01:34:56.435" endtime="20210419 01:35:03.243"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:35:03.249" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98885-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:35:10.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:35:10.583" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:35:03.246" endtime="20210419 01:35:10.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:35:10.587" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:35:10.585" endtime="20210419 01:35:10.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:35:10.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:35:10.587" endtime="20210419 01:35:10.589"/>
</kw>
<status status="PASS" starttime="20210419 01:35:03.245" endtime="20210419 01:35:10.590"/>
</kw>
<msg timestamp="20210419 01:35:10.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:35:03.245" endtime="20210419 01:35:10.590"/>
</kw>
<msg timestamp="20210419 01:35:10.591" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:35:03.244" endtime="20210419 01:35:10.591"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:35:10.591" endtime="20210419 01:35:10.593"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:35:10.601" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/98885-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:35:17.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:35:17.259" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:35:10.598" endtime="20210419 01:35:17.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:35:17.262" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:35:17.260" endtime="20210419 01:35:17.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:35:17.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:35:17.263" endtime="20210419 01:35:17.265"/>
</kw>
<status status="PASS" starttime="20210419 01:35:10.596" endtime="20210419 01:35:17.265"/>
</kw>
<msg timestamp="20210419 01:35:17.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:35:10.595" endtime="20210419 01:35:17.266"/>
</kw>
<msg timestamp="20210419 01:35:17.266" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:35:10.594" endtime="20210419 01:35:17.266"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:35:17.273" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98885-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:35:24.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:35:24.372" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210419 01:35:17.270" endtime="20210419 01:35:24.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:35:24.375" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:35:24.373" endtime="20210419 01:35:24.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:35:24.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:35:24.375" endtime="20210419 01:35:24.376"/>
</kw>
<status status="PASS" starttime="20210419 01:35:17.269" endtime="20210419 01:35:24.377"/>
</kw>
<msg timestamp="20210419 01:35:24.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:35:17.268" endtime="20210419 01:35:24.378"/>
</kw>
<msg timestamp="20210419 01:35:24.378" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210419 01:35:17.267" endtime="20210419 01:35:24.378"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:35:24.378" endtime="20210419 01:35:24.379"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:35:24.380" endtime="20210419 01:35:24.381"/>
</kw>
<status status="PASS" starttime="20210419 01:34:28.979" endtime="20210419 01:35:24.381"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210419 01:34:28.940" endtime="20210419 01:35:24.382"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:35:24.397" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:35:24.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:35:24.400" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:35:24.393" endtime="20210419 01:35:24.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:35:24.407" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:35:24.406" endtime="20210419 01:35:24.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:35:24.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:35:24.407" endtime="20210419 01:35:24.410"/>
</kw>
<status status="PASS" starttime="20210419 01:35:24.391" endtime="20210419 01:35:24.411"/>
</kw>
<msg timestamp="20210419 01:35:24.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:35:24.390" endtime="20210419 01:35:24.411"/>
</kw>
<msg timestamp="20210419 01:35:24.411" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:35:24.390" endtime="20210419 01:35:24.411"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:35:24.413" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:35:24.412" endtime="20210419 01:35:24.413"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:35:24.417" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:35:24.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:35:24.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:35:24.415" endtime="20210419 01:35:24.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:35:24.435" level="INFO"/>
<status status="PASS" starttime="20210419 01:35:24.430" endtime="20210419 01:35:24.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:35:24.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:35:24.435" endtime="20210419 01:35:24.437"/>
</kw>
<status status="PASS" starttime="20210419 01:35:24.415" endtime="20210419 01:35:24.437"/>
</kw>
<msg timestamp="20210419 01:35:24.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:35:24.415" endtime="20210419 01:35:24.437"/>
</kw>
<status status="PASS" starttime="20210419 01:35:24.414" endtime="20210419 01:35:24.437"/>
</kw>
<status status="PASS" starttime="20210419 01:35:24.413" endtime="20210419 01:35:24.438"/>
</kw>
<status status="PASS" starttime="20210419 01:35:24.386" endtime="20210419 01:35:24.438"/>
</kw>
<status status="PASS" starttime="20210419 01:35:24.385" endtime="20210419 01:35:24.438"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:35:24.444" level="INFO">Running command 'ozone sh key put o3://om:9862/98885-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:38:32.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:38:32.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:35:24.440" endtime="20210419 01:38:32.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:38:32.799" level="INFO"/>
<status status="PASS" starttime="20210419 01:38:32.798" endtime="20210419 01:38:32.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:38:32.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:38:32.800" endtime="20210419 01:38:32.801"/>
</kw>
<status status="PASS" starttime="20210419 01:35:24.440" endtime="20210419 01:38:32.802"/>
</kw>
<msg timestamp="20210419 01:38:32.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:35:24.439" endtime="20210419 01:38:32.802"/>
</kw>
<status status="PASS" starttime="20210419 01:35:24.439" endtime="20210419 01:38:32.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:38:32.811" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98885-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:38:40.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:38:40.072" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:38:32.807" endtime="20210419 01:38:40.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:38:40.074" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:38:40.072" endtime="20210419 01:38:40.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:38:40.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:38:40.074" endtime="20210419 01:38:40.075"/>
</kw>
<status status="PASS" starttime="20210419 01:38:32.806" endtime="20210419 01:38:40.075"/>
</kw>
<msg timestamp="20210419 01:38:40.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:38:32.805" endtime="20210419 01:38:40.075"/>
</kw>
<msg timestamp="20210419 01:38:40.076" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:38:32.803" endtime="20210419 01:38:40.076"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:38:40.076" endtime="20210419 01:38:40.077"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:38:40.083" level="INFO">Running command 'ozone sh key addacl o3://om:9862/98885-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:38:46.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:38:46.823" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:38:40.080" endtime="20210419 01:38:46.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:38:46.824" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:38:46.824" endtime="20210419 01:38:46.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:38:46.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:38:46.825" endtime="20210419 01:38:46.825"/>
</kw>
<status status="PASS" starttime="20210419 01:38:40.079" endtime="20210419 01:38:46.826"/>
</kw>
<msg timestamp="20210419 01:38:46.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:38:40.078" endtime="20210419 01:38:46.826"/>
</kw>
<msg timestamp="20210419 01:38:46.826" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210419 01:38:40.077" endtime="20210419 01:38:46.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:38:46.830" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98885-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:38:53.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:38:53.938" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:38:46.828" endtime="20210419 01:38:53.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:38:53.940" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:38:53.939" endtime="20210419 01:38:53.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:38:53.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:38:53.940" endtime="20210419 01:38:53.941"/>
</kw>
<status status="PASS" starttime="20210419 01:38:46.827" endtime="20210419 01:38:53.942"/>
</kw>
<msg timestamp="20210419 01:38:53.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:38:46.827" endtime="20210419 01:38:53.942"/>
</kw>
<msg timestamp="20210419 01:38:53.942" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:38:46.826" endtime="20210419 01:38:53.942"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:38:53.943" endtime="20210419 01:38:53.944"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:38:53.950" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/98885-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:00.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:00.822" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210419 01:38:53.946" endtime="20210419 01:39:00.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:00.823" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210419 01:39:00.822" endtime="20210419 01:39:00.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:00.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:00.824" endtime="20210419 01:39:00.825"/>
</kw>
<status status="PASS" starttime="20210419 01:38:53.945" endtime="20210419 01:39:00.825"/>
</kw>
<msg timestamp="20210419 01:39:00.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:38:53.945" endtime="20210419 01:39:00.825"/>
</kw>
<msg timestamp="20210419 01:39:00.826" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210419 01:38:53.944" endtime="20210419 01:39:00.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:00.831" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98885-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:07.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:07.944" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:39:00.828" endtime="20210419 01:39:07.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:07.946" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:39:07.945" endtime="20210419 01:39:07.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:07.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:07.946" endtime="20210419 01:39:07.947"/>
</kw>
<status status="PASS" starttime="20210419 01:39:00.827" endtime="20210419 01:39:07.947"/>
</kw>
<msg timestamp="20210419 01:39:07.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:00.827" endtime="20210419 01:39:07.947"/>
</kw>
<msg timestamp="20210419 01:39:07.948" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:39:00.826" endtime="20210419 01:39:07.948"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:39:07.948" endtime="20210419 01:39:07.949"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:07.953" level="INFO">Running command 'ozone sh key setacl o3://om:9862/98885-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:14.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:14.592" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:39:07.951" endtime="20210419 01:39:14.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:14.595" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:39:14.593" endtime="20210419 01:39:14.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:14.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:14.595" endtime="20210419 01:39:14.597"/>
</kw>
<status status="PASS" starttime="20210419 01:39:07.950" endtime="20210419 01:39:14.598"/>
</kw>
<msg timestamp="20210419 01:39:14.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:07.950" endtime="20210419 01:39:14.599"/>
</kw>
<msg timestamp="20210419 01:39:14.600" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:39:07.949" endtime="20210419 01:39:14.600"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:14.605" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98885-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:21.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:21.079" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210419 01:39:14.603" endtime="20210419 01:39:21.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:21.081" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:39:21.079" endtime="20210419 01:39:21.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:21.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:21.081" endtime="20210419 01:39:21.082"/>
</kw>
<status status="PASS" starttime="20210419 01:39:14.602" endtime="20210419 01:39:21.082"/>
</kw>
<msg timestamp="20210419 01:39:21.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:14.602" endtime="20210419 01:39:21.082"/>
</kw>
<msg timestamp="20210419 01:39:21.082" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210419 01:39:14.600" endtime="20210419 01:39:21.082"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:39:21.083" endtime="20210419 01:39:21.083"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:39:21.083" endtime="20210419 01:39:21.085"/>
</kw>
<status status="PASS" starttime="20210419 01:35:24.438" endtime="20210419 01:39:21.085"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210419 01:35:24.384" endtime="20210419 01:39:21.085"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:21.091" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:21.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:21.093" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:39:21.089" endtime="20210419 01:39:21.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:21.095" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:39:21.094" endtime="20210419 01:39:21.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:21.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:21.095" endtime="20210419 01:39:21.096"/>
</kw>
<status status="PASS" starttime="20210419 01:39:21.088" endtime="20210419 01:39:21.096"/>
</kw>
<msg timestamp="20210419 01:39:21.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:21.088" endtime="20210419 01:39:21.096"/>
</kw>
<msg timestamp="20210419 01:39:21.097" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:39:21.087" endtime="20210419 01:39:21.097"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:39:21.097" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:39:21.097" endtime="20210419 01:39:21.097"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:21.101" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:21.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:21.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:39:21.100" endtime="20210419 01:39:21.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:21.137" level="INFO"/>
<status status="PASS" starttime="20210419 01:39:21.136" endtime="20210419 01:39:21.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:21.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:21.138" endtime="20210419 01:39:21.138"/>
</kw>
<status status="PASS" starttime="20210419 01:39:21.099" endtime="20210419 01:39:21.139"/>
</kw>
<msg timestamp="20210419 01:39:21.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:21.099" endtime="20210419 01:39:21.139"/>
</kw>
<status status="PASS" starttime="20210419 01:39:21.098" endtime="20210419 01:39:21.139"/>
</kw>
<status status="PASS" starttime="20210419 01:39:21.098" endtime="20210419 01:39:21.139"/>
</kw>
<status status="PASS" starttime="20210419 01:39:21.087" endtime="20210419 01:39:21.140"/>
</kw>
<status status="PASS" starttime="20210419 01:39:21.086" endtime="20210419 01:39:21.140"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:21.146" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/98885-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:26.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:26.247" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210419 01:39:21.143" endtime="20210419 01:39:26.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:26.250" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210419 01:39:26.247" endtime="20210419 01:39:26.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:26.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:26.251" endtime="20210419 01:39:26.252"/>
</kw>
<status status="PASS" starttime="20210419 01:39:21.142" endtime="20210419 01:39:26.255"/>
</kw>
<msg timestamp="20210419 01:39:26.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:21.142" endtime="20210419 01:39:26.255"/>
</kw>
<status status="PASS" starttime="20210419 01:39:21.141" endtime="20210419 01:39:26.256"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:26.262" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/98885-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:33.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:33.183" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210419 01:39:26.258" endtime="20210419 01:39:33.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:33.185" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:39:33.184" endtime="20210419 01:39:33.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:33.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:33.185" endtime="20210419 01:39:33.186"/>
</kw>
<status status="PASS" starttime="20210419 01:39:26.257" endtime="20210419 01:39:33.187"/>
</kw>
<msg timestamp="20210419 01:39:33.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:26.257" endtime="20210419 01:39:33.187"/>
</kw>
<msg timestamp="20210419 01:39:33.187" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210419 01:39:26.256" endtime="20210419 01:39:33.187"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:39:33.188" endtime="20210419 01:39:33.189"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:33.196" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/98885-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:39.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:39.876" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210419 01:39:33.193" endtime="20210419 01:39:39.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:39.878" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210419 01:39:39.877" endtime="20210419 01:39:39.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:39.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:39.878" endtime="20210419 01:39:39.879"/>
</kw>
<status status="PASS" starttime="20210419 01:39:33.190" endtime="20210419 01:39:39.880"/>
</kw>
<msg timestamp="20210419 01:39:39.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:33.190" endtime="20210419 01:39:39.880"/>
</kw>
<msg timestamp="20210419 01:39:39.881" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210419 01:39:33.189" endtime="20210419 01:39:39.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:39.886" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/98885-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:45.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:45.073" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210419 01:39:39.884" endtime="20210419 01:39:45.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:45.074" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:39:45.073" endtime="20210419 01:39:45.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:45.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:45.074" endtime="20210419 01:39:45.075"/>
</kw>
<status status="PASS" starttime="20210419 01:39:39.882" endtime="20210419 01:39:45.076"/>
</kw>
<msg timestamp="20210419 01:39:45.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:39.882" endtime="20210419 01:39:45.078"/>
</kw>
<msg timestamp="20210419 01:39:45.078" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210419 01:39:39.881" endtime="20210419 01:39:45.078"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:39:45.078" endtime="20210419 01:39:45.079"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:45.094" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/98885-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:51.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:51.538" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:39:45.082" endtime="20210419 01:39:51.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:51.544" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:39:51.539" endtime="20210419 01:39:51.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:51.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:51.544" endtime="20210419 01:39:51.545"/>
</kw>
<status status="PASS" starttime="20210419 01:39:45.081" endtime="20210419 01:39:51.545"/>
</kw>
<msg timestamp="20210419 01:39:51.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:45.081" endtime="20210419 01:39:51.546"/>
</kw>
<msg timestamp="20210419 01:39:51.546" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210419 01:39:45.080" endtime="20210419 01:39:51.546"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:51.551" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/98885-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:39:58.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:39:58.381" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210419 01:39:51.548" endtime="20210419 01:39:58.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:39:58.383" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:39:58.382" endtime="20210419 01:39:58.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:39:58.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:39:58.383" endtime="20210419 01:39:58.384"/>
</kw>
<status status="PASS" starttime="20210419 01:39:51.547" endtime="20210419 01:39:58.385"/>
</kw>
<msg timestamp="20210419 01:39:58.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:51.547" endtime="20210419 01:39:58.385"/>
</kw>
<msg timestamp="20210419 01:39:58.386" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210419 01:39:51.546" endtime="20210419 01:39:58.386"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:39:58.386" endtime="20210419 01:39:58.387"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:39:58.387" endtime="20210419 01:39:58.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:39:58.395" level="INFO">Running command 'ozone sh key put o3://om:9862/98885-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:43:09.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:43:09.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:39:58.392" endtime="20210419 01:43:09.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:43:09.892" level="INFO"/>
<status status="PASS" starttime="20210419 01:43:09.891" endtime="20210419 01:43:09.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:43:09.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:43:09.893" endtime="20210419 01:43:09.894"/>
</kw>
<status status="PASS" starttime="20210419 01:39:58.390" endtime="20210419 01:43:09.895"/>
</kw>
<msg timestamp="20210419 01:43:09.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:39:58.390" endtime="20210419 01:43:09.895"/>
</kw>
<status status="PASS" starttime="20210419 01:39:58.388" endtime="20210419 01:43:09.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:43:09.903" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98885-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:43:16.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:43:16.767" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:43:09.899" endtime="20210419 01:43:16.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:43:16.768" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210419 01:43:16.768" endtime="20210419 01:43:16.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:43:16.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:43:16.769" endtime="20210419 01:43:16.769"/>
</kw>
<status status="PASS" starttime="20210419 01:43:09.898" endtime="20210419 01:43:16.770"/>
</kw>
<msg timestamp="20210419 01:43:16.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:43:09.898" endtime="20210419 01:43:16.770"/>
</kw>
<msg timestamp="20210419 01:43:16.770" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210419 01:43:09.896" endtime="20210419 01:43:16.770"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:43:16.771" endtime="20210419 01:43:16.771"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210419 01:43:16.771" endtime="20210419 01:43:16.772"/>
</kw>
<status status="PASS" starttime="20210419 01:39:21.140" endtime="20210419 01:43:16.772"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210419 01:39:21.086" endtime="20210419 01:43:16.773"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:43:16.784" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:43:16.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:43:16.787" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:43:16.781" endtime="20210419 01:43:16.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:43:16.789" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:43:16.788" endtime="20210419 01:43:16.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:43:16.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:43:16.789" endtime="20210419 01:43:16.789"/>
</kw>
<status status="PASS" starttime="20210419 01:43:16.780" endtime="20210419 01:43:16.790"/>
</kw>
<msg timestamp="20210419 01:43:16.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:43:16.778" endtime="20210419 01:43:16.790"/>
</kw>
<msg timestamp="20210419 01:43:16.790" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:43:16.777" endtime="20210419 01:43:16.790"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:43:16.791" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:43:16.791" endtime="20210419 01:43:16.791"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:43:16.797" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:43:16.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:43:16.807" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:43:16.795" endtime="20210419 01:43:16.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:43:16.809" level="INFO"/>
<status status="PASS" starttime="20210419 01:43:16.808" endtime="20210419 01:43:16.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:43:16.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:43:16.809" endtime="20210419 01:43:16.810"/>
</kw>
<status status="PASS" starttime="20210419 01:43:16.794" endtime="20210419 01:43:16.811"/>
</kw>
<msg timestamp="20210419 01:43:16.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:43:16.794" endtime="20210419 01:43:16.811"/>
</kw>
<status status="PASS" starttime="20210419 01:43:16.792" endtime="20210419 01:43:16.812"/>
</kw>
<status status="PASS" starttime="20210419 01:43:16.791" endtime="20210419 01:43:16.812"/>
</kw>
<status status="PASS" starttime="20210419 01:43:16.776" endtime="20210419 01:43:16.812"/>
</kw>
<status status="PASS" starttime="20210419 01:43:16.775" endtime="20210419 01:43:16.812"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:43:16.819" level="INFO">Running command 'ozone sh volume info o3:///98885-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:43:23.771" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:43:23.771" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98885-rpcwport is not found</msg>
<status status="PASS" starttime="20210419 01:43:16.816" endtime="20210419 01:43:23.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:43:23.773" level="INFO">VOLUME_NOT_FOUND Volume 98885-rpcwport is not found</msg>
<status status="PASS" starttime="20210419 01:43:23.772" endtime="20210419 01:43:23.773"/>
</kw>
<msg timestamp="20210419 01:43:23.773" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98885-rpcwport is not found</msg>
<status status="PASS" starttime="20210419 01:43:16.815" endtime="20210419 01:43:23.773"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:43:23.773" endtime="20210419 01:43:23.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:43:23.778" level="INFO">Running command 'ozone sh volume create o3:///98885-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:43:28.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:43:28.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:43:23.776" endtime="20210419 01:43:28.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:43:28.546" level="INFO"/>
<status status="PASS" starttime="20210419 01:43:28.545" endtime="20210419 01:43:28.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:43:28.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:43:28.546" endtime="20210419 01:43:28.547"/>
</kw>
<status status="PASS" starttime="20210419 01:43:23.775" endtime="20210419 01:43:28.548"/>
</kw>
<msg timestamp="20210419 01:43:28.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:43:23.775" endtime="20210419 01:43:28.548"/>
</kw>
<msg timestamp="20210419 01:43:28.548" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210419 01:43:23.774" endtime="20210419 01:43:28.548"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:43:28.549" endtime="20210419 01:43:28.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:43:28.554" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="98885-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:43:33.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:43:33.865" level="INFO">${output} = {
  "metadata": {},
  "name": "98885-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210419 01:43:28.551" endtime="20210419 01:43:33.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:43:33.867" level="INFO">{
  "metadata": {},
  "name": "98885-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-19T01:43:28.302Z",
  "modificationTime": "2021-04-19T01:43:28.302Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210419 01:43:33.865" endtime="20210419 01:43:33.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:43:33.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:43:33.867" endtime="20210419 01:43:33.868"/>
</kw>
<status status="PASS" starttime="20210419 01:43:28.551" endtime="20210419 01:43:33.869"/>
</kw>
<msg timestamp="20210419 01:43:33.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:43:28.550" endtime="20210419 01:43:33.869"/>
</kw>
<msg timestamp="20210419 01:43:33.869" level="INFO">${result} = {
  "metadata": {},
  "name": "98885-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210419 01:43:28.549" endtime="20210419 01:43:33.869"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:43:33.869" endtime="20210419 01:43:33.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:43:33.875" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="98885-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:43:41.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:43:41.529" level="INFO">${output} = {
  "metadata": {},
  "name": "98885-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210419 01:43:33.872" endtime="20210419 01:43:41.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:43:41.532" level="INFO">{
  "metadata": {},
  "name": "98885-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-19T01:43:28.302Z",
  "modificationTime": "2021-04-19T01:43:28.302Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210419 01:43:41.530" endtime="20210419 01:43:41.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:43:41.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:43:41.532" endtime="20210419 01:43:41.534"/>
</kw>
<status status="PASS" starttime="20210419 01:43:33.871" endtime="20210419 01:43:41.534"/>
</kw>
<msg timestamp="20210419 01:43:41.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:43:33.871" endtime="20210419 01:43:41.534"/>
</kw>
<msg timestamp="20210419 01:43:41.535" level="INFO">${result} = {
  "metadata": {},
  "name": "98885-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210419 01:43:33.870" endtime="20210419 01:43:41.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:43:41.535" endtime="20210419 01:43:41.535"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:43:41.542" level="INFO">Running command 'ozone sh volume setquota o3:///98885-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:43:48.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:43:48.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:43:41.539" endtime="20210419 01:43:48.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:43:48.434" level="INFO"/>
<status status="PASS" starttime="20210419 01:43:48.433" endtime="20210419 01:43:48.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:43:48.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:43:48.434" endtime="20210419 01:43:48.435"/>
</kw>
<status status="PASS" starttime="20210419 01:43:41.538" endtime="20210419 01:43:48.436"/>
</kw>
<msg timestamp="20210419 01:43:48.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:43:41.537" endtime="20210419 01:43:48.436"/>
</kw>
<status status="PASS" starttime="20210419 01:43:41.536" endtime="20210419 01:43:48.436"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:43:48.444" level="INFO">Running command 'ozone sh volume info o3:///98885-rpcwport | jq -r '. | select(.name=="98885-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:43:56.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:43:56.153" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:43:48.440" endtime="20210419 01:43:56.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:43:56.155" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210419 01:43:56.154" endtime="20210419 01:43:56.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:43:56.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:43:56.156" endtime="20210419 01:43:56.157"/>
</kw>
<status status="PASS" starttime="20210419 01:43:48.439" endtime="20210419 01:43:56.157"/>
</kw>
<msg timestamp="20210419 01:43:56.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:43:48.438" endtime="20210419 01:43:56.157"/>
</kw>
<msg timestamp="20210419 01:43:56.157" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:43:48.437" endtime="20210419 01:43:56.158"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:43:56.158" endtime="20210419 01:43:56.158"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:43:56.163" level="INFO">Running command 'ozone sh bucket create o3:///98885-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:44:03.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:44:03.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:43:56.161" endtime="20210419 01:44:03.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:44:03.608" level="INFO"/>
<status status="PASS" starttime="20210419 01:44:03.607" endtime="20210419 01:44:03.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:44:03.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:44:03.608" endtime="20210419 01:44:03.609"/>
</kw>
<status status="PASS" starttime="20210419 01:43:56.160" endtime="20210419 01:44:03.609"/>
</kw>
<msg timestamp="20210419 01:44:03.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:43:56.160" endtime="20210419 01:44:03.610"/>
</kw>
<status status="PASS" starttime="20210419 01:43:56.158" endtime="20210419 01:44:03.610"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:44:03.619" level="INFO">Running command 'ozone sh bucket info o3:///98885-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:44:11.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:44:11.040" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210419 01:44:03.616" endtime="20210419 01:44:11.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:44:11.041" level="INFO">DISK</msg>
<status status="PASS" starttime="20210419 01:44:11.040" endtime="20210419 01:44:11.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:44:11.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:44:11.042" endtime="20210419 01:44:11.042"/>
</kw>
<status status="PASS" starttime="20210419 01:44:03.615" endtime="20210419 01:44:11.043"/>
</kw>
<msg timestamp="20210419 01:44:11.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:44:03.612" endtime="20210419 01:44:11.043"/>
</kw>
<msg timestamp="20210419 01:44:11.043" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210419 01:44:03.610" endtime="20210419 01:44:11.043"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:44:11.043" endtime="20210419 01:44:11.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:44:11.054" level="INFO">Running command 'ozone sh bucket info o3:///98885-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:44:18.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:44:18.091" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:44:11.051" endtime="20210419 01:44:18.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:44:18.092" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210419 01:44:18.092" endtime="20210419 01:44:18.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:44:18.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:44:18.093" endtime="20210419 01:44:18.094"/>
</kw>
<status status="PASS" starttime="20210419 01:44:11.049" endtime="20210419 01:44:18.094"/>
</kw>
<msg timestamp="20210419 01:44:18.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:44:11.048" endtime="20210419 01:44:18.094"/>
</kw>
<msg timestamp="20210419 01:44:18.094" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:44:11.045" endtime="20210419 01:44:18.094"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:44:18.095" endtime="20210419 01:44:18.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:44:18.101" level="INFO">Running command 'ozone sh bucket info o3:///98885-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:44:25.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:44:25.109" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210419 01:44:18.098" endtime="20210419 01:44:25.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:44:25.111" level="INFO">100</msg>
<status status="PASS" starttime="20210419 01:44:25.110" endtime="20210419 01:44:25.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:44:25.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:44:25.111" endtime="20210419 01:44:25.112"/>
</kw>
<status status="PASS" starttime="20210419 01:44:18.097" endtime="20210419 01:44:25.113"/>
</kw>
<msg timestamp="20210419 01:44:25.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:44:18.097" endtime="20210419 01:44:25.114"/>
</kw>
<msg timestamp="20210419 01:44:25.115" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210419 01:44:18.096" endtime="20210419 01:44:25.115"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:44:25.115" endtime="20210419 01:44:25.117"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:44:25.121" level="INFO">Running command 'ozone sh bucket setquota o3:///98885-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:44:31.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:44:31.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:44:25.119" endtime="20210419 01:44:31.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:44:31.756" level="INFO"/>
<status status="PASS" starttime="20210419 01:44:31.755" endtime="20210419 01:44:31.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:44:31.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:44:31.756" endtime="20210419 01:44:31.757"/>
</kw>
<status status="PASS" starttime="20210419 01:44:25.118" endtime="20210419 01:44:31.758"/>
</kw>
<msg timestamp="20210419 01:44:31.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:44:25.118" endtime="20210419 01:44:31.758"/>
</kw>
<status status="PASS" starttime="20210419 01:44:25.117" endtime="20210419 01:44:31.759"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:44:31.764" level="INFO">Running command 'ozone sh bucket info o3:///98885-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:44:39.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:44:39.137" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210419 01:44:31.762" endtime="20210419 01:44:39.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:44:39.139" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210419 01:44:39.138" endtime="20210419 01:44:39.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:44:39.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:44:39.139" endtime="20210419 01:44:39.140"/>
</kw>
<status status="PASS" starttime="20210419 01:44:31.761" endtime="20210419 01:44:39.141"/>
</kw>
<msg timestamp="20210419 01:44:39.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:44:31.760" endtime="20210419 01:44:39.142"/>
</kw>
<msg timestamp="20210419 01:44:39.143" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210419 01:44:31.759" endtime="20210419 01:44:39.143"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:44:39.144" endtime="20210419 01:44:39.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:44:39.153" level="INFO">Running command 'ozone sh bucket info o3:///98885-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:44:46.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:44:46.822" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210419 01:44:39.150" endtime="20210419 01:44:46.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:44:46.825" level="INFO">1000</msg>
<status status="PASS" starttime="20210419 01:44:46.823" endtime="20210419 01:44:46.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:44:46.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:44:46.825" endtime="20210419 01:44:46.827"/>
</kw>
<status status="PASS" starttime="20210419 01:44:39.149" endtime="20210419 01:44:46.827"/>
</kw>
<msg timestamp="20210419 01:44:46.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:44:39.148" endtime="20210419 01:44:46.828"/>
</kw>
<msg timestamp="20210419 01:44:46.829" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210419 01:44:39.145" endtime="20210419 01:44:46.829"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:44:46.829" endtime="20210419 01:44:46.830"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:44:46.837" level="INFO">Running command 'ozone sh bucket list o3:///98885-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:44:54.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:44:54.330" level="INFO">${output} = 98885-rpcwport</msg>
<status status="PASS" starttime="20210419 01:44:46.834" endtime="20210419 01:44:54.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:44:54.332" level="INFO">98885-rpcwport</msg>
<status status="PASS" starttime="20210419 01:44:54.331" endtime="20210419 01:44:54.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:44:54.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:44:54.332" endtime="20210419 01:44:54.333"/>
</kw>
<status status="PASS" starttime="20210419 01:44:46.833" endtime="20210419 01:44:54.333"/>
</kw>
<msg timestamp="20210419 01:44:54.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:44:46.833" endtime="20210419 01:44:54.334"/>
</kw>
<msg timestamp="20210419 01:44:54.334" level="INFO">${result} = 98885-rpcwport</msg>
<status status="PASS" starttime="20210419 01:44:46.830" endtime="20210419 01:44:54.334"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:44:54.335" endtime="20210419 01:44:54.335"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:44:54.342" level="INFO">Running command 'ozone sh key put o3:///98885-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:05.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:48:05.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:44:54.339" endtime="20210419 01:48:05.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:48:05.703" level="INFO"/>
<status status="PASS" starttime="20210419 01:48:05.701" endtime="20210419 01:48:05.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:48:05.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:48:05.704" endtime="20210419 01:48:05.705"/>
</kw>
<status status="PASS" starttime="20210419 01:44:54.339" endtime="20210419 01:48:05.706"/>
</kw>
<msg timestamp="20210419 01:48:05.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:44:54.338" endtime="20210419 01:48:05.706"/>
</kw>
<status status="PASS" starttime="20210419 01:44:54.338" endtime="20210419 01:48:05.707"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:05.714" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:05.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:48:05.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:48:05.711" endtime="20210419 01:48:05.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:48:05.721" level="INFO"/>
<status status="PASS" starttime="20210419 01:48:05.720" endtime="20210419 01:48:05.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:48:05.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:48:05.722" endtime="20210419 01:48:05.724"/>
</kw>
<status status="PASS" starttime="20210419 01:48:05.709" endtime="20210419 01:48:05.724"/>
</kw>
<msg timestamp="20210419 01:48:05.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:48:05.708" endtime="20210419 01:48:05.726"/>
</kw>
<status status="PASS" starttime="20210419 01:48:05.707" endtime="20210419 01:48:05.727"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:05.733" level="INFO">Running command 'ozone sh key get o3:///98885-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:15.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:48:15.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:48:05.730" endtime="20210419 01:48:15.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:48:15.126" level="INFO"/>
<status status="PASS" starttime="20210419 01:48:15.125" endtime="20210419 01:48:15.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:48:15.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:48:15.127" endtime="20210419 01:48:15.128"/>
</kw>
<status status="PASS" starttime="20210419 01:48:05.730" endtime="20210419 01:48:15.128"/>
</kw>
<msg timestamp="20210419 01:48:15.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:48:05.729" endtime="20210419 01:48:15.129"/>
</kw>
<status status="PASS" starttime="20210419 01:48:05.728" endtime="20210419 01:48:15.129"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:15.134" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:15.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:48:15.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:48:15.132" endtime="20210419 01:48:15.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:48:15.139" level="INFO"/>
<status status="PASS" starttime="20210419 01:48:15.138" endtime="20210419 01:48:15.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:48:15.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:48:15.139" endtime="20210419 01:48:15.140"/>
</kw>
<status status="PASS" starttime="20210419 01:48:15.131" endtime="20210419 01:48:15.141"/>
</kw>
<msg timestamp="20210419 01:48:15.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:48:15.130" endtime="20210419 01:48:15.141"/>
</kw>
<status status="PASS" starttime="20210419 01:48:15.129" endtime="20210419 01:48:15.142"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:15.147" level="INFO">Running command 'ozone sh key put -t RATIS o3:///98885-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:16.775" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210419 01:48:15.145" endtime="20210419 01:48:16.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.776" endtime="20210419 01:48:16.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.776" endtime="20210419 01:48:16.776"/>
</kw>
<status status="FAIL" starttime="20210419 01:48:15.144" endtime="20210419 01:48:16.777"/>
</kw>
<msg timestamp="20210419 01:48:16.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210419 01:48:15.143" endtime="20210419 01:48:16.778"/>
</kw>
<status status="FAIL" starttime="20210419 01:48:15.142" endtime="20210419 01:48:16.778"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.778" endtime="20210419 01:48:16.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.779" endtime="20210419 01:48:16.779"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.779" endtime="20210419 01:48:16.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.779" endtime="20210419 01:48:16.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.779" endtime="20210419 01:48:16.779"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.780" endtime="20210419 01:48:16.780"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.780" endtime="20210419 01:48:16.780"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.780" endtime="20210419 01:48:16.780"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.780" endtime="20210419 01:48:16.781"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.781" endtime="20210419 01:48:16.781"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.781" endtime="20210419 01:48:16.781"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.781" endtime="20210419 01:48:16.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.782" endtime="20210419 01:48:16.792"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.792" endtime="20210419 01:48:16.792"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.792" endtime="20210419 01:48:16.792"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.793" endtime="20210419 01:48:16.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.793" endtime="20210419 01:48:16.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.793" endtime="20210419 01:48:16.793"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.793" endtime="20210419 01:48:16.793"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.793" endtime="20210419 01:48:16.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.794" endtime="20210419 01:48:16.794"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.794" endtime="20210419 01:48:16.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.794" endtime="20210419 01:48:16.794"/>
</kw>
<status status="FAIL" starttime="20210419 01:44:54.336" endtime="20210419 01:48:16.794"/>
</kw>
<status status="FAIL" starttime="20210419 01:44:54.335" endtime="20210419 01:48:16.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.795" endtime="20210419 01:48:16.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.798" endtime="20210419 01:48:16.798"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.799" endtime="20210419 01:48:16.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.800" endtime="20210419 01:48:16.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.803" endtime="20210419 01:48:16.803"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.803" endtime="20210419 01:48:16.804"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.805" endtime="20210419 01:48:16.807"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.807" endtime="20210419 01:48:16.807"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.808" endtime="20210419 01:48:16.809"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.809" endtime="20210419 01:48:16.809"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.810" endtime="20210419 01:48:16.810"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.811" endtime="20210419 01:48:16.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.811" endtime="20210419 01:48:16.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.811" endtime="20210419 01:48:16.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.811" endtime="20210419 01:48:16.814"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.814" endtime="20210419 01:48:16.814"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.815" endtime="20210419 01:48:16.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.816" endtime="20210419 01:48:16.817"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.819" endtime="20210419 01:48:16.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.819" endtime="20210419 01:48:16.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.820" endtime="20210419 01:48:16.820"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.820" endtime="20210419 01:48:16.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.822" endtime="20210419 01:48:16.822"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:48:16.823" endtime="20210419 01:48:16.823"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.825" endtime="20210419 01:48:16.825"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:48:16.825" endtime="20210419 01:48:16.825"/>
</kw>
<status status="FAIL" starttime="20210419 01:43:16.812" endtime="20210419 01:48:16.826"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210419 01:43:16.774" endtime="20210419 01:48:16.828">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:16.886" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:16.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:48:16.904" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:48:16.869" endtime="20210419 01:48:16.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:48:16.906" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:48:16.905" endtime="20210419 01:48:16.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:48:16.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:48:16.907" endtime="20210419 01:48:16.908"/>
</kw>
<status status="PASS" starttime="20210419 01:48:16.864" endtime="20210419 01:48:16.908"/>
</kw>
<msg timestamp="20210419 01:48:16.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:48:16.861" endtime="20210419 01:48:16.908"/>
</kw>
<msg timestamp="20210419 01:48:16.909" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:48:16.858" endtime="20210419 01:48:16.909"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:48:16.910" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:48:16.909" endtime="20210419 01:48:16.910"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:16.934" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:16.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:48:16.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:48:16.918" endtime="20210419 01:48:16.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:48:16.991" level="INFO"/>
<status status="PASS" starttime="20210419 01:48:16.990" endtime="20210419 01:48:16.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:48:16.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:48:16.991" endtime="20210419 01:48:16.993"/>
</kw>
<status status="PASS" starttime="20210419 01:48:16.914" endtime="20210419 01:48:16.993"/>
</kw>
<msg timestamp="20210419 01:48:16.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:48:16.913" endtime="20210419 01:48:16.993"/>
</kw>
<status status="PASS" starttime="20210419 01:48:16.910" endtime="20210419 01:48:16.994"/>
</kw>
<status status="PASS" starttime="20210419 01:48:16.910" endtime="20210419 01:48:16.994"/>
</kw>
<status status="PASS" starttime="20210419 01:48:16.855" endtime="20210419 01:48:16.994"/>
</kw>
<status status="PASS" starttime="20210419 01:48:16.851" endtime="20210419 01:48:16.994"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:17.013" level="INFO">Running command 'ozone sh volume info /98885-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:31.156" level="INFO">${rc} = 255</msg>
<msg timestamp="20210419 01:48:31.156" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98885-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210419 01:48:17.006" endtime="20210419 01:48:31.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:48:31.158" level="INFO">VOLUME_NOT_FOUND Volume 98885-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210419 01:48:31.157" endtime="20210419 01:48:31.158"/>
</kw>
<msg timestamp="20210419 01:48:31.158" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98885-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210419 01:48:17.000" endtime="20210419 01:48:31.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:48:31.159" endtime="20210419 01:48:31.160"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:31.177" level="INFO">Running command 'ozone sh volume create /98885-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:40.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:48:40.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:48:31.164" endtime="20210419 01:48:40.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:48:40.498" level="INFO"/>
<status status="PASS" starttime="20210419 01:48:40.497" endtime="20210419 01:48:40.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:48:40.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:48:40.498" endtime="20210419 01:48:40.499"/>
</kw>
<status status="PASS" starttime="20210419 01:48:31.162" endtime="20210419 01:48:40.499"/>
</kw>
<msg timestamp="20210419 01:48:40.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:48:31.162" endtime="20210419 01:48:40.500"/>
</kw>
<msg timestamp="20210419 01:48:40.500" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210419 01:48:31.160" endtime="20210419 01:48:40.500"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:48:40.500" endtime="20210419 01:48:40.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:40.505" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="98885-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:48.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:48:48.465" level="INFO">${output} = {
  "metadata": {},
  "name": "98885-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210419 01:48:40.502" endtime="20210419 01:48:48.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:48:48.467" level="INFO">{
  "metadata": {},
  "name": "98885-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-19T01:48:40.408Z",
  "modificationTime": "2021-04-19T01:48:40.408Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210419 01:48:48.465" endtime="20210419 01:48:48.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:48:48.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:48:48.470" endtime="20210419 01:48:48.473"/>
</kw>
<status status="PASS" starttime="20210419 01:48:40.502" endtime="20210419 01:48:48.473"/>
</kw>
<msg timestamp="20210419 01:48:48.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:48:40.502" endtime="20210419 01:48:48.474"/>
</kw>
<msg timestamp="20210419 01:48:48.474" level="INFO">${result} = {
  "metadata": {},
  "name": "98885-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210419 01:48:40.501" endtime="20210419 01:48:48.474"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:48:48.474" endtime="20210419 01:48:48.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:48.485" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="98885-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:48:57.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:48:57.063" level="INFO">${output} = {
  "metadata": {},
  "name": "98885-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210419 01:48:48.480" endtime="20210419 01:48:57.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:48:57.064" level="INFO">{
  "metadata": {},
  "name": "98885-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-04-19T01:48:40.408Z",
  "modificationTime": "2021-04-19T01:48:40.408Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210419 01:48:57.064" endtime="20210419 01:48:57.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:48:57.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:48:57.065" endtime="20210419 01:48:57.069"/>
</kw>
<status status="PASS" starttime="20210419 01:48:48.479" endtime="20210419 01:48:57.069"/>
</kw>
<msg timestamp="20210419 01:48:57.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:48:48.478" endtime="20210419 01:48:57.069"/>
</kw>
<msg timestamp="20210419 01:48:57.070" level="INFO">${result} = {
  "metadata": {},
  "name": "98885-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210419 01:48:48.476" endtime="20210419 01:48:57.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210419 01:48:57.070" endtime="20210419 01:48:57.070"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:48:57.083" level="INFO">Running command 'ozone sh volume setquota /98885-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:49:04.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:49:04.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:48:57.076" endtime="20210419 01:49:04.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:49:04.130" level="INFO"/>
<status status="PASS" starttime="20210419 01:49:04.130" endtime="20210419 01:49:04.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:49:04.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:49:04.131" endtime="20210419 01:49:04.132"/>
</kw>
<status status="PASS" starttime="20210419 01:48:57.072" endtime="20210419 01:49:04.132"/>
</kw>
<msg timestamp="20210419 01:49:04.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:48:57.071" endtime="20210419 01:49:04.133"/>
</kw>
<status status="PASS" starttime="20210419 01:48:57.071" endtime="20210419 01:49:04.133"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:49:04.138" level="INFO">Running command 'ozone sh volume info /98885-rpcwoscheme | jq -r '. | select(.name=="98885-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:49:11.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:49:11.545" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:49:04.135" endtime="20210419 01:49:11.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:49:11.546" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210419 01:49:11.545" endtime="20210419 01:49:11.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:49:11.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:49:11.546" endtime="20210419 01:49:11.547"/>
</kw>
<status status="PASS" starttime="20210419 01:49:04.134" endtime="20210419 01:49:11.548"/>
</kw>
<msg timestamp="20210419 01:49:11.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:49:04.134" endtime="20210419 01:49:11.548"/>
</kw>
<msg timestamp="20210419 01:49:11.548" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:49:04.133" endtime="20210419 01:49:11.548"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:49:11.549" endtime="20210419 01:49:11.549"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:49:11.555" level="INFO">Running command 'ozone sh bucket create /98885-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:49:18.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:49:18.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:49:11.553" endtime="20210419 01:49:18.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:49:18.917" level="INFO"/>
<status status="PASS" starttime="20210419 01:49:18.916" endtime="20210419 01:49:18.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:49:18.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:49:18.918" endtime="20210419 01:49:18.918"/>
</kw>
<status status="PASS" starttime="20210419 01:49:11.552" endtime="20210419 01:49:18.919"/>
</kw>
<msg timestamp="20210419 01:49:18.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:49:11.551" endtime="20210419 01:49:18.920"/>
</kw>
<status status="PASS" starttime="20210419 01:49:11.549" endtime="20210419 01:49:18.920"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:49:18.928" level="INFO">Running command 'ozone sh bucket info /98885-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:49:26.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:49:26.033" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210419 01:49:18.925" endtime="20210419 01:49:26.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:49:26.034" level="INFO">DISK</msg>
<status status="PASS" starttime="20210419 01:49:26.033" endtime="20210419 01:49:26.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:49:26.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:49:26.034" endtime="20210419 01:49:26.035"/>
</kw>
<status status="PASS" starttime="20210419 01:49:18.923" endtime="20210419 01:49:26.036"/>
</kw>
<msg timestamp="20210419 01:49:26.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:49:18.923" endtime="20210419 01:49:26.036"/>
</kw>
<msg timestamp="20210419 01:49:26.036" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210419 01:49:18.920" endtime="20210419 01:49:26.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:49:26.037" endtime="20210419 01:49:26.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:49:26.041" level="INFO">Running command 'ozone sh bucket info /98885-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:49:32.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:49:32.544" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:49:26.039" endtime="20210419 01:49:32.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:49:32.545" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210419 01:49:32.545" endtime="20210419 01:49:32.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:49:32.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:49:32.546" endtime="20210419 01:49:32.547"/>
</kw>
<status status="PASS" starttime="20210419 01:49:26.039" endtime="20210419 01:49:32.547"/>
</kw>
<msg timestamp="20210419 01:49:32.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:49:26.038" endtime="20210419 01:49:32.547"/>
</kw>
<msg timestamp="20210419 01:49:32.548" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210419 01:49:26.037" endtime="20210419 01:49:32.548"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:49:32.548" endtime="20210419 01:49:32.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:49:32.554" level="INFO">Running command 'ozone sh bucket info /98885-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:49:38.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:49:38.226" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210419 01:49:32.551" endtime="20210419 01:49:38.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:49:38.227" level="INFO">100</msg>
<status status="PASS" starttime="20210419 01:49:38.227" endtime="20210419 01:49:38.228"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:49:38.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:49:38.228" endtime="20210419 01:49:38.229"/>
</kw>
<status status="PASS" starttime="20210419 01:49:32.550" endtime="20210419 01:49:38.230"/>
</kw>
<msg timestamp="20210419 01:49:38.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:49:32.550" endtime="20210419 01:49:38.230"/>
</kw>
<msg timestamp="20210419 01:49:38.230" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210419 01:49:32.549" endtime="20210419 01:49:38.230"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:49:38.231" endtime="20210419 01:49:38.231"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:49:38.237" level="INFO">Running command 'ozone sh bucket setquota /98885-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:49:45.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:49:45.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:49:38.234" endtime="20210419 01:49:45.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:49:45.380" level="INFO"/>
<status status="PASS" starttime="20210419 01:49:45.378" endtime="20210419 01:49:45.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:49:45.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:49:45.381" endtime="20210419 01:49:45.382"/>
</kw>
<status status="PASS" starttime="20210419 01:49:38.233" endtime="20210419 01:49:45.382"/>
</kw>
<msg timestamp="20210419 01:49:45.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:49:38.232" endtime="20210419 01:49:45.383"/>
</kw>
<status status="PASS" starttime="20210419 01:49:38.231" endtime="20210419 01:49:45.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:49:45.390" level="INFO">Running command 'ozone sh bucket info /98885-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:49:52.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:49:52.969" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210419 01:49:45.387" endtime="20210419 01:49:52.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:49:52.995" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210419 01:49:52.993" endtime="20210419 01:49:52.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:49:52.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:49:52.996" endtime="20210419 01:49:52.999"/>
</kw>
<status status="PASS" starttime="20210419 01:49:45.386" endtime="20210419 01:49:53.000"/>
</kw>
<msg timestamp="20210419 01:49:53.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:49:45.385" endtime="20210419 01:49:53.002"/>
</kw>
<msg timestamp="20210419 01:49:53.003" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210419 01:49:45.384" endtime="20210419 01:49:53.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:49:53.004" endtime="20210419 01:49:53.006"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:49:53.019" level="INFO">Running command 'ozone sh bucket info /98885-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:49:59.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:49:59.949" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210419 01:49:53.013" endtime="20210419 01:49:59.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:49:59.950" level="INFO">1000</msg>
<status status="PASS" starttime="20210419 01:49:59.950" endtime="20210419 01:49:59.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:49:59.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:49:59.951" endtime="20210419 01:49:59.951"/>
</kw>
<status status="PASS" starttime="20210419 01:49:53.011" endtime="20210419 01:49:59.952"/>
</kw>
<msg timestamp="20210419 01:49:59.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:49:53.010" endtime="20210419 01:49:59.952"/>
</kw>
<msg timestamp="20210419 01:49:59.952" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210419 01:49:53.007" endtime="20210419 01:49:59.952"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:49:59.953" endtime="20210419 01:49:59.953"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:49:59.958" level="INFO">Running command 'ozone sh bucket list /98885-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:50:06.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:50:06.443" level="INFO">${output} = 98885-rpcwoscheme</msg>
<status status="PASS" starttime="20210419 01:49:59.956" endtime="20210419 01:50:06.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:50:06.447" level="INFO">98885-rpcwoscheme</msg>
<status status="PASS" starttime="20210419 01:50:06.445" endtime="20210419 01:50:06.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:50:06.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:50:06.447" endtime="20210419 01:50:06.449"/>
</kw>
<status status="PASS" starttime="20210419 01:49:59.955" endtime="20210419 01:50:06.449"/>
</kw>
<msg timestamp="20210419 01:50:06.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:49:59.954" endtime="20210419 01:50:06.450"/>
</kw>
<msg timestamp="20210419 01:50:06.450" level="INFO">${result} = 98885-rpcwoscheme</msg>
<status status="PASS" starttime="20210419 01:49:59.953" endtime="20210419 01:50:06.450"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210419 01:50:06.451" endtime="20210419 01:50:06.451"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:50:06.458" level="INFO">Running command 'ozone sh key put /98885-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:53:16.842" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210419 01:50:06.455" endtime="20210419 01:53:16.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.843" endtime="20210419 01:53:16.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.843" endtime="20210419 01:53:16.843"/>
</kw>
<status status="FAIL" starttime="20210419 01:50:06.454" endtime="20210419 01:53:16.843"/>
</kw>
<msg timestamp="20210419 01:53:16.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210419 01:50:06.454" endtime="20210419 01:53:16.844"/>
</kw>
<status status="FAIL" starttime="20210419 01:50:06.453" endtime="20210419 01:53:16.844"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.844" endtime="20210419 01:53:16.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.845" endtime="20210419 01:53:16.845"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.845" endtime="20210419 01:53:16.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.845" endtime="20210419 01:53:16.845"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.845" endtime="20210419 01:53:16.845"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.845" endtime="20210419 01:53:16.845"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.845" endtime="20210419 01:53:16.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.846" endtime="20210419 01:53:16.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.846" endtime="20210419 01:53:16.846"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.846" endtime="20210419 01:53:16.846"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.846" endtime="20210419 01:53:16.847"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.847" endtime="20210419 01:53:16.847"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.847" endtime="20210419 01:53:16.847"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.848" endtime="20210419 01:53:16.848"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.848" endtime="20210419 01:53:16.849"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.849" endtime="20210419 01:53:16.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.849" endtime="20210419 01:53:16.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.850" endtime="20210419 01:53:16.850"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.851" endtime="20210419 01:53:16.851"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.851" endtime="20210419 01:53:16.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.852" endtime="20210419 01:53:16.852"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.852" endtime="20210419 01:53:16.853"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.853" endtime="20210419 01:53:16.853"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.854" endtime="20210419 01:53:16.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.854" endtime="20210419 01:53:16.854"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.855" endtime="20210419 01:53:16.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.855" endtime="20210419 01:53:16.855"/>
</kw>
<status status="FAIL" starttime="20210419 01:50:06.452" endtime="20210419 01:53:16.856"/>
</kw>
<status status="FAIL" starttime="20210419 01:50:06.452" endtime="20210419 01:53:16.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.856" endtime="20210419 01:53:16.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.857" endtime="20210419 01:53:16.857"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.857" endtime="20210419 01:53:16.857"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.857" endtime="20210419 01:53:16.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.858" endtime="20210419 01:53:16.858"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.858" endtime="20210419 01:53:16.858"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.858" endtime="20210419 01:53:16.858"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.858" endtime="20210419 01:53:16.859"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.859" endtime="20210419 01:53:16.859"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.859" endtime="20210419 01:53:16.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.859" endtime="20210419 01:53:16.859"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.859" endtime="20210419 01:53:16.859"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.860" endtime="20210419 01:53:16.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.860" endtime="20210419 01:53:16.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.861" endtime="20210419 01:53:16.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.861" endtime="20210419 01:53:16.861"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.861" endtime="20210419 01:53:16.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.862" endtime="20210419 01:53:16.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.862" endtime="20210419 01:53:16.862"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.862" endtime="20210419 01:53:16.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.862" endtime="20210419 01:53:16.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.863" endtime="20210419 01:53:16.863"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.863" endtime="20210419 01:53:16.863"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210419 01:53:16.864" endtime="20210419 01:53:16.864"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.864" endtime="20210419 01:53:16.864"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210419 01:53:16.865" endtime="20210419 01:53:16.865"/>
</kw>
<status status="FAIL" starttime="20210419 01:48:16.994" endtime="20210419 01:53:16.865"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210419 01:48:16.840" endtime="20210419 01:53:16.866">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210419 01:28:29.667" endtime="20210419 01:53:16.870"/>
</suite>
<status status="FAIL" starttime="20210419 01:04:13.542" endtime="20210419 01:53:16.878"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:04:07.625" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:04:07.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:04:07.629" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210419 01:04:07.621" endtime="20210419 01:04:07.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:04:07.631" level="INFO">scm</msg>
<status status="PASS" starttime="20210419 01:04:07.630" endtime="20210419 01:04:07.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:04:07.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:04:07.631" endtime="20210419 01:04:07.632"/>
</kw>
<status status="PASS" starttime="20210419 01:04:07.621" endtime="20210419 01:04:07.632"/>
</kw>
<msg timestamp="20210419 01:04:07.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:04:07.621" endtime="20210419 01:04:07.633"/>
</kw>
<msg timestamp="20210419 01:04:07.633" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210419 01:04:07.620" endtime="20210419 01:04:07.633"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210419 01:04:07.634" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210419 01:04:07.633" endtime="20210419 01:04:07.634"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210419 01:04:07.639" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210419 01:04:07.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210419 01:04:07.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210419 01:04:07.636" endtime="20210419 01:04:07.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210419 01:04:07.647" level="INFO"/>
<status status="PASS" starttime="20210419 01:04:07.646" endtime="20210419 01:04:07.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210419 01:04:07.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210419 01:04:07.647" endtime="20210419 01:04:07.648"/>
</kw>
<status status="PASS" starttime="20210419 01:04:07.636" endtime="20210419 01:04:07.649"/>
</kw>
<msg timestamp="20210419 01:04:07.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210419 01:04:07.635" endtime="20210419 01:04:07.649"/>
</kw>
<status status="PASS" starttime="20210419 01:04:07.634" endtime="20210419 01:04:07.649"/>
</kw>
<status status="PASS" starttime="20210419 01:04:07.634" endtime="20210419 01:04:07.649"/>
</kw>
<status status="PASS" starttime="20210419 01:04:07.619" endtime="20210419 01:04:07.649"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210419 01:04:07.618" endtime="20210419 01:04:07.650"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210419 01:04:07.551" endtime="20210419 01:04:07.651"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2943436"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
