<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210401 06:53:39.807" schemaversion="2" generator="Rebot 4.0 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:12:53.177" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:12:53.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:12:53.179" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:12:53.179" starttime="20210401 06:12:53.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:12:53.181" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:12:53.181" starttime="20210401 06:12:53.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:12:53.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:12:53.181" starttime="20210401 06:12:53.181"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.182" starttime="20210401 06:12:53.173"/>
</kw>
<msg timestamp="20210401 06:12:53.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:12:53.182" starttime="20210401 06:12:53.172"/>
</kw>
<msg timestamp="20210401 06:12:53.182" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210401 06:12:53.182" starttime="20210401 06:12:53.172"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:12:53.186" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:12:53.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:12:53.192" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210401 06:12:53.192" starttime="20210401 06:12:53.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:12:53.193" level="INFO"/>
<status status="PASS" endtime="20210401 06:12:53.194" starttime="20210401 06:12:53.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:12:53.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:12:53.194" starttime="20210401 06:12:53.194"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.195" starttime="20210401 06:12:53.184"/>
</kw>
<msg timestamp="20210401 06:12:53.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:12:53.195" starttime="20210401 06:12:53.183"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.195" starttime="20210401 06:12:53.183"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.195" starttime="20210401 06:12:53.182"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.195" starttime="20210401 06:12:53.172"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.195" starttime="20210401 06:12:53.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:12:53.199" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:12:53.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:12:53.326" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210401 06:12:53.326" starttime="20210401 06:12:53.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:12:53.327" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 01 Apr 2021 06:12:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCFNNPPT37zvZftY5qt/4ARvg40rnunwKUYLxO7v2ZHWAfSXL5p/MfBPGPYY2fWOFKeBDqxES96nUmfeDFlbwXwVtz
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1617293573315&amp;s=18pvG/Az7IzSguQ1o54jXgmzFih5CqLsy9rfNPh6Scs="; Path=/; HttpOnly
Last-Modified: Thu, 01 Apr 2021 05:58:38 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210401 06:12:53.327" starttime="20210401 06:12:53.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:12:53.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:12:53.328" starttime="20210401 06:12:53.327"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.328" starttime="20210401 06:12:53.196"/>
</kw>
<msg timestamp="20210401 06:12:53.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:12:53.329" starttime="20210401 06:12:53.196"/>
</kw>
<msg timestamp="20210401 06:12:53.329" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210401 06:12:53.329" starttime="20210401 06:12:53.195"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:12:53.330" starttime="20210401 06:12:53.329"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210401 06:12:53.330" starttime="20210401 06:12:53.170"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:12:53.336" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:12:53.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:12:53.339" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:12:53.339" starttime="20210401 06:12:53.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:12:53.340" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:12:53.340" starttime="20210401 06:12:53.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:12:53.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:12:53.341" starttime="20210401 06:12:53.340"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.341" starttime="20210401 06:12:53.333"/>
</kw>
<msg timestamp="20210401 06:12:53.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:12:53.341" starttime="20210401 06:12:53.333"/>
</kw>
<msg timestamp="20210401 06:12:53.342" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210401 06:12:53.342" starttime="20210401 06:12:53.333"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:12:53.344" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210401 06:12:53.344" starttime="20210401 06:12:53.342"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:12:53.348" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:12:53.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:12:53.354" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210401 06:12:53.354" starttime="20210401 06:12:53.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:12:53.355" level="INFO"/>
<status status="PASS" endtime="20210401 06:12:53.355" starttime="20210401 06:12:53.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:12:53.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:12:53.356" starttime="20210401 06:12:53.355"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.356" starttime="20210401 06:12:53.345"/>
</kw>
<msg timestamp="20210401 06:12:53.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:12:53.356" starttime="20210401 06:12:53.345"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.357" starttime="20210401 06:12:53.344"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.357" starttime="20210401 06:12:53.344"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.357" starttime="20210401 06:12:53.332"/>
</kw>
<status status="PASS" endtime="20210401 06:12:53.357" starttime="20210401 06:12:53.332"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:12:53.360" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:16:56.480" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:16:56.480" level="INFO">${output} = 2021-04-01 06:12:55,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-04-01 06:12:55,417 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210401 06:16:56.480" starttime="20210401 06:12:53.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:16:56.481" level="INFO">2021-04-01 06:12:55,261 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-04-01 06:12:55,417 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-04-01 06:12:55,417 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-04-01 06:12:55,915 [main] WARN ha.OMProxyInfo: OzoneManager address om:9862 for serviceID null remains unresolved for node ID null Check your ozone-site.xml file to ensure ozone manager addresses are configured properly.
2021-04-01 06:12:58,417 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms.
2021-04-01 06:13:02,418 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 2 failover attempts. Trying to failover after sleeping for 6000ms.
2021-04-01 06:13:08,419 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 3 failover attempts. Trying to failover after sleeping for 8000ms.
2021-04-01 06:13:16,419 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 4 failover attempts. Trying to failover after sleeping for 10000ms.
2021-04-01 06:13:26,420 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 5 failover attempts. Trying to failover after sleeping for 12000ms.
2021-04-01 06:13:38,421 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 6 failover attempts. Trying to failover after sleeping for 14000ms.
2021-04-01 06:13:52,422 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 7 failover attempts. Trying to failover after sleeping for 16000ms.
2021-04-01 06:14:08,422 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 8 failover attempts. Trying to failover after sleeping for 18000ms.
2021-04-01 06:14:26,423 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 9 failover attempts. Trying to failover after sleeping for 20000ms.
2021-04-01 06:14:46,424 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 10 failover attempts. Trying to failover after sleeping for 22000ms.
2021-04-01 06:15:08,425 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 11 failover attempts. Trying to failover after sleeping for 24000ms.
2021-04-01 06:15:32,426 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 12 failover attempts. Trying to failover after sleeping for 26000ms.
2021-04-01 06:15:58,427 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 13 failover attempts. Trying to failover after sleeping for 28000ms.
2021-04-01 06:16:26,427 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost, while invoking $Proxy22.submitRequest over nodeId=null,nodeAddress=om:9862 after 14 failover attempts. Trying to failover after sleeping for 30000ms.
2021-04-01 06:16:56,430 [main] ERROR ha.OMFailoverProxyProvider: Failed to connect to OMs: [nodeId=null,nodeAddress=om:9862]. Attempted 15 failovers. Got following exceptions during retries: 
Retry Attempt 0 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 1 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 2 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 3 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 4 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 5 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 6 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 7 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 8 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 9 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 10 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 11 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 12 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 13 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 14 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
Retry Attempt 15 Exception - java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost

2021-04-01 06:16:56,432 [main] ERROR client.OzoneClientFactory: Couldn't create RpcClient protocol exception: 
java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "om":9862; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.hadoop.net.NetUtils.wrapWithMessage(NetUtils.java:836)
	at org.apache.hadoop.net.NetUtils.wrapException(NetUtils.java:773)
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1592)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy22.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy22.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:149)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.init(RandomKeyGenerator.java:257)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.call(RandomKeyGenerator.java:280)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.call(RandomKeyGenerator.java:80)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.freon.Freon.execute(Freon.java:88)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.freon.Freon.main(Freon.java:114)
Caused by: java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	... 37 more
java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy22.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy22.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:149)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.init(RandomKeyGenerator.java:257)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.call(RandomKeyGenerator.java:280)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.call(RandomKeyGenerator.java:80)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.freon.Freon.execute(Freon.java:88)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.freon.Freon.main(Freon.java:114)</msg>
<status status="PASS" endtime="20210401 06:16:56.481" starttime="20210401 06:16:56.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:16:56.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210401 06:16:56.482" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210401 06:16:56.482" starttime="20210401 06:16:56.482"/>
</kw>
<status status="FAIL" endtime="20210401 06:16:56.483" starttime="20210401 06:12:53.358"/>
</kw>
<msg timestamp="20210401 06:16:56.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210401 06:16:56.483" starttime="20210401 06:12:53.358"/>
</kw>
<status status="FAIL" endtime="20210401 06:16:56.483" starttime="20210401 06:12:53.357"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" endtime="20210401 06:16:56.483" starttime="20210401 06:16:56.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:16:56.484" starttime="20210401 06:16:56.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210401 06:16:56.484" starttime="20210401 06:12:53.331">255 != 0</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20210401 06:16:56.485" starttime="20210401 06:12:53.146"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:16:56.494" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:16:58.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:16:58.062" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210401 06:16:58.062" starttime="20210401 06:16:56.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:16:58.064" level="INFO">om</msg>
<status status="PASS" endtime="20210401 06:16:58.064" starttime="20210401 06:16:58.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:16:58.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:16:58.065" starttime="20210401 06:16:58.064"/>
</kw>
<status status="PASS" endtime="20210401 06:16:58.065" starttime="20210401 06:16:56.492"/>
</kw>
<msg timestamp="20210401 06:16:58.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:16:58.065" starttime="20210401 06:16:56.491"/>
</kw>
<msg timestamp="20210401 06:16:58.066" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210401 06:16:58.066" starttime="20210401 06:16:56.491"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:16:58.066" starttime="20210401 06:16:58.066"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:16:58.070" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:16:59.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:16:59.341" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210401 06:16:59.341" starttime="20210401 06:16:58.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:16:59.342" level="INFO">om</msg>
<status status="PASS" endtime="20210401 06:16:59.342" starttime="20210401 06:16:59.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:16:59.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:16:59.343" starttime="20210401 06:16:59.342"/>
</kw>
<status status="PASS" endtime="20210401 06:16:59.343" starttime="20210401 06:16:58.067"/>
</kw>
<msg timestamp="20210401 06:16:59.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:16:59.343" starttime="20210401 06:16:58.067"/>
</kw>
<msg timestamp="20210401 06:16:59.344" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210401 06:16:59.344" starttime="20210401 06:16:58.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:16:59.344" starttime="20210401 06:16:59.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210401 06:16:59.345" starttime="20210401 06:16:56.490"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:16:59.351" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:17:00.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:17:00.683" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:17:00.683" starttime="20210401 06:16:59.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:17:00.684" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:17:00.684" starttime="20210401 06:17:00.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:17:00.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:17:00.685" starttime="20210401 06:17:00.685"/>
</kw>
<status status="PASS" endtime="20210401 06:17:00.686" starttime="20210401 06:16:59.349"/>
</kw>
<msg timestamp="20210401 06:17:00.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:17:00.686" starttime="20210401 06:16:59.348"/>
</kw>
<msg timestamp="20210401 06:17:00.686" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210401 06:17:00.686" starttime="20210401 06:16:59.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:17:00.687" starttime="20210401 06:17:00.686"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:17:00.690" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:17:01.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:17:01.918" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:17:01.918" starttime="20210401 06:17:00.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:17:01.919" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:17:01.920" starttime="20210401 06:17:01.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:17:01.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:17:01.920" starttime="20210401 06:17:01.920"/>
</kw>
<status status="PASS" endtime="20210401 06:17:01.921" starttime="20210401 06:17:00.688"/>
</kw>
<msg timestamp="20210401 06:17:01.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:17:01.921" starttime="20210401 06:17:00.687"/>
</kw>
<msg timestamp="20210401 06:17:01.921" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210401 06:17:01.921" starttime="20210401 06:17:00.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:17:01.922" starttime="20210401 06:17:01.921"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210401 06:17:01.922" starttime="20210401 06:16:59.347"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:17:01.927" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:17:03.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:17:03.154" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210401 06:17:03.155" starttime="20210401 06:17:01.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:17:03.156" level="INFO">om</msg>
<status status="PASS" endtime="20210401 06:17:03.156" starttime="20210401 06:17:03.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:17:03.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:17:03.157" starttime="20210401 06:17:03.156"/>
</kw>
<status status="PASS" endtime="20210401 06:17:03.157" starttime="20210401 06:17:01.924"/>
</kw>
<msg timestamp="20210401 06:17:03.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:17:03.157" starttime="20210401 06:17:01.924"/>
</kw>
<msg timestamp="20210401 06:17:03.157" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210401 06:17:03.157" starttime="20210401 06:17:01.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:17:03.158" starttime="20210401 06:17:03.158"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:17:03.158" starttime="20210401 06:17:03.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:17:03.162" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:17:04.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:17:04.332" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210401 06:17:04.332" starttime="20210401 06:17:03.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:17:04.334" level="INFO">om</msg>
<status status="PASS" endtime="20210401 06:17:04.334" starttime="20210401 06:17:04.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:17:04.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:17:04.335" starttime="20210401 06:17:04.334"/>
</kw>
<status status="PASS" endtime="20210401 06:17:04.335" starttime="20210401 06:17:03.159"/>
</kw>
<msg timestamp="20210401 06:17:04.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:17:04.335" starttime="20210401 06:17:03.159"/>
</kw>
<msg timestamp="20210401 06:17:04.335" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210401 06:17:04.335" starttime="20210401 06:17:03.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:17:04.336" starttime="20210401 06:17:04.336"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:17:04.337" starttime="20210401 06:17:04.336"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210401 06:17:04.337" starttime="20210401 06:17:01.922"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:17:04.341" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:17:05.658" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:17:05.658" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210401 06:17:05.658" starttime="20210401 06:17:04.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:17:05.659" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210401 06:17:05.659" starttime="20210401 06:17:05.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:17:05.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:17:05.660" starttime="20210401 06:17:05.659"/>
</kw>
<msg timestamp="20210401 06:17:05.660" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210401 06:17:05.660" starttime="20210401 06:17:04.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:17:05.661" starttime="20210401 06:17:05.661"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:17:05.664" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:17:06.905" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:17:06.905" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210401 06:17:06.905" starttime="20210401 06:17:05.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:17:06.906" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210401 06:17:06.907" starttime="20210401 06:17:06.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:17:06.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:17:06.907" starttime="20210401 06:17:06.907"/>
</kw>
<msg timestamp="20210401 06:17:06.908" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210401 06:17:06.908" starttime="20210401 06:17:05.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" endtime="20210401 06:17:06.908" starttime="20210401 06:17:06.908"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" endtime="20210401 06:17:06.908" starttime="20210401 06:17:04.338"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210401 06:17:06.910" starttime="20210401 06:16:56.487"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="SETUP" name="Create volumes">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210401 06:17:06.923" level="INFO">${random} = 66162</msg>
<status status="PASS" endtime="20210401 06:17:06.923" starttime="20210401 06:17:06.923"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:17:06.925" level="INFO">${source} = 66162-source</msg>
<status status="PASS" endtime="20210401 06:17:06.925" starttime="20210401 06:17:06.923"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:17:06.926" level="INFO">${target} = 66162-target</msg>
<status status="PASS" endtime="20210401 06:17:06.926" starttime="20210401 06:17:06.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:17:06.930" level="INFO">Running command 'ozone sh volume create 66162-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:21:09.619" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:21:09.619" level="INFO">${output} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:21:09.619" starttime="20210401 06:17:06.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:21:09.621" level="INFO">java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:149)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClient(OzoneAddress.java:97)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:166)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)</msg>
<status status="PASS" endtime="20210401 06:21:09.621" starttime="20210401 06:21:09.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:21:09.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210401 06:21:09.622" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210401 06:21:09.622" starttime="20210401 06:21:09.621"/>
</kw>
<status status="FAIL" endtime="20210401 06:21:09.622" starttime="20210401 06:17:06.927"/>
</kw>
<msg timestamp="20210401 06:21:09.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210401 06:21:09.622" starttime="20210401 06:17:06.927"/>
</kw>
<status status="FAIL" endtime="20210401 06:21:09.622" starttime="20210401 06:17:06.927"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<status status="NOT RUN" endtime="20210401 06:21:09.623" starttime="20210401 06:21:09.623"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" endtime="20210401 06:21:09.623" starttime="20210401 06:21:09.623"/>
</kw>
<status status="FAIL" endtime="20210401 06:21:09.623" starttime="20210401 06:17:06.922"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.624" starttime="20210401 06:21:09.623">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.626" starttime="20210401 06:21:09.625">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.627" starttime="20210401 06:21:09.627">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.629" starttime="20210401 06:21:09.628">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.630" starttime="20210401 06:21:09.630">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.631" starttime="20210401 06:21:09.631">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.634" starttime="20210401 06:21:09.632">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.636" starttime="20210401 06:21:09.635">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.637" starttime="20210401 06:21:09.636">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.637" starttime="20210401 06:21:09.637">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.638" starttime="20210401 06:21:09.638">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.639" starttime="20210401 06:21:09.639">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.640" starttime="20210401 06:21:09.639">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.641" starttime="20210401 06:21:09.640">Parent suite setup failed:
255 != 0</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<timeout value="2 minutes"/>
<status status="FAIL" endtime="20210401 06:21:09.642" starttime="20210401 06:21:09.641">Parent suite setup failed:
255 != 0</status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20210401 06:21:09.642" starttime="20210401 06:17:06.912">Suite setup failed:
255 != 0</status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210401 06:21:09.662" level="INFO">${random} = 71603</msg>
<status status="PASS" endtime="20210401 06:21:09.662" starttime="20210401 06:21:09.662"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:21:09.663" level="INFO">${prefix} = 71603</msg>
<status status="PASS" endtime="20210401 06:21:09.663" starttime="20210401 06:21:09.662"/>
</kw>
<status status="PASS" endtime="20210401 06:21:09.663" starttime="20210401 06:21:09.661"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:21:09.668" level="INFO">Running command 'ozone sh volume info /71603-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:25:12.408" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:25:12.408" level="INFO">${output} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:25:12.408" starttime="20210401 06:21:09.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:25:12.410" level="INFO">java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:149)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClient(OzoneAddress.java:97)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:166)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)</msg>
<status status="PASS" endtime="20210401 06:25:12.410" starttime="20210401 06:25:12.409"/>
</kw>
<msg timestamp="20210401 06:25:12.410" level="INFO">${result} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:25:12.410" starttime="20210401 06:21:09.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210401 06:25:12.411" level="FAIL">'java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:149)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClient(OzoneAddress.java:97)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:166)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" endtime="20210401 06:25:12.411" starttime="20210401 06:25:12.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.412" starttime="20210401 06:25:12.412"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.412" starttime="20210401 06:25:12.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.412" starttime="20210401 06:25:12.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.412" starttime="20210401 06:25:12.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.412" starttime="20210401 06:25:12.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.413" starttime="20210401 06:25:12.413"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.413" starttime="20210401 06:25:12.413"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.413" starttime="20210401 06:25:12.413"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.413" starttime="20210401 06:25:12.413"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.413" starttime="20210401 06:25:12.413"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.413" starttime="20210401 06:25:12.413"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.414" starttime="20210401 06:25:12.414"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.414" starttime="20210401 06:25:12.414"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.414" starttime="20210401 06:25:12.414"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.414" starttime="20210401 06:25:12.414"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.414" starttime="20210401 06:25:12.414"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.415" starttime="20210401 06:25:12.414"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.415" starttime="20210401 06:25:12.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.415" starttime="20210401 06:25:12.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.415" starttime="20210401 06:25:12.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.415" starttime="20210401 06:25:12.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.415" starttime="20210401 06:25:12.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.416" starttime="20210401 06:25:12.416"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.416" starttime="20210401 06:25:12.416"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.416" starttime="20210401 06:25:12.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.416" starttime="20210401 06:25:12.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.416" starttime="20210401 06:25:12.416"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.417" starttime="20210401 06:25:12.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.417" starttime="20210401 06:25:12.417"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.417" starttime="20210401 06:25:12.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.417" starttime="20210401 06:25:12.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.417" starttime="20210401 06:25:12.417"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.417" starttime="20210401 06:25:12.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.418" starttime="20210401 06:25:12.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.418" starttime="20210401 06:25:12.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.418" starttime="20210401 06:25:12.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.418" starttime="20210401 06:25:12.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.418" starttime="20210401 06:25:12.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.418" starttime="20210401 06:25:12.418"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.418" starttime="20210401 06:25:12.418"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.419" starttime="20210401 06:25:12.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.419" starttime="20210401 06:25:12.419"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.419" starttime="20210401 06:25:12.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.419" starttime="20210401 06:25:12.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.419" starttime="20210401 06:25:12.419"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.420" starttime="20210401 06:25:12.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.420" starttime="20210401 06:25:12.420"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:25:12.420" starttime="20210401 06:25:12.420"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.420" starttime="20210401 06:25:12.420"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:25:12.420" starttime="20210401 06:25:12.420"/>
</kw>
<status status="FAIL" endtime="20210401 06:25:12.421" starttime="20210401 06:21:09.663"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210401 06:25:12.421" starttime="20210401 06:21:09.663">'java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
    [ Message content over the limit has been removed. ]
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210401 06:25:12.422" starttime="20210401 06:21:09.643"/>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="SETUP" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210401 06:25:12.433" level="INFO">${random} = 15160</msg>
<status status="PASS" endtime="20210401 06:25:12.433" starttime="20210401 06:25:12.433"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:25:12.434" level="INFO">${prefix} = 15160</msg>
<status status="PASS" endtime="20210401 06:25:12.434" starttime="20210401 06:25:12.433"/>
</kw>
<status status="PASS" endtime="20210401 06:25:12.434" starttime="20210401 06:25:12.432"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:25:12.440" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:25:12.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:25:12.443" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:25:12.443" starttime="20210401 06:25:12.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:25:12.444" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:25:12.444" starttime="20210401 06:25:12.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:25:12.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:25:12.445" starttime="20210401 06:25:12.444"/>
</kw>
<status status="PASS" endtime="20210401 06:25:12.445" starttime="20210401 06:25:12.437"/>
</kw>
<msg timestamp="20210401 06:25:12.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:25:12.445" starttime="20210401 06:25:12.437"/>
</kw>
<msg timestamp="20210401 06:25:12.445" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210401 06:25:12.445" starttime="20210401 06:25:12.436"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:25:12.448" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210401 06:25:12.448" starttime="20210401 06:25:12.446"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:25:12.453" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:25:12.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:25:12.489" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210401 06:25:12.490" starttime="20210401 06:25:12.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:25:12.491" level="INFO"/>
<status status="PASS" endtime="20210401 06:25:12.491" starttime="20210401 06:25:12.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:25:12.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:25:12.492" starttime="20210401 06:25:12.491"/>
</kw>
<status status="PASS" endtime="20210401 06:25:12.492" starttime="20210401 06:25:12.450"/>
</kw>
<msg timestamp="20210401 06:25:12.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:25:12.492" starttime="20210401 06:25:12.450"/>
</kw>
<status status="PASS" endtime="20210401 06:25:12.493" starttime="20210401 06:25:12.449"/>
</kw>
<status status="PASS" endtime="20210401 06:25:12.493" starttime="20210401 06:25:12.448"/>
</kw>
<status status="PASS" endtime="20210401 06:25:12.493" starttime="20210401 06:25:12.436"/>
</kw>
<status status="PASS" endtime="20210401 06:25:12.493" starttime="20210401 06:25:12.435"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:25:12.501" level="INFO">Running command 'ozone sh volume info o3://om:9862/15160-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:29:15.742" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:29:15.742" level="INFO">${output} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:29:15.742" starttime="20210401 06:25:12.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:29:15.743" level="INFO">java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:92)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClientFromHostPort(OzoneAddress.java:107)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:151)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)</msg>
<status status="PASS" endtime="20210401 06:29:15.743" starttime="20210401 06:29:15.742"/>
</kw>
<msg timestamp="20210401 06:29:15.744" level="INFO">${result} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:29:15.744" starttime="20210401 06:25:12.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210401 06:29:15.745" level="FAIL">'java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:92)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClientFromHostPort(OzoneAddress.java:107)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:151)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" endtime="20210401 06:29:15.745" starttime="20210401 06:29:15.744"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.745" starttime="20210401 06:29:15.745"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.745" starttime="20210401 06:29:15.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.745" starttime="20210401 06:29:15.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.746" starttime="20210401 06:29:15.745"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.746" starttime="20210401 06:29:15.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.746" starttime="20210401 06:29:15.746"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.746" starttime="20210401 06:29:15.746"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.746" starttime="20210401 06:29:15.746"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.746" starttime="20210401 06:29:15.746"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.747" starttime="20210401 06:29:15.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.747" starttime="20210401 06:29:15.747"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.747" starttime="20210401 06:29:15.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.747" starttime="20210401 06:29:15.747"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.747" starttime="20210401 06:29:15.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.747" starttime="20210401 06:29:15.747"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.748" starttime="20210401 06:29:15.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.748" starttime="20210401 06:29:15.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.748" starttime="20210401 06:29:15.748"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.748" starttime="20210401 06:29:15.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.748" starttime="20210401 06:29:15.748"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.749" starttime="20210401 06:29:15.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.749" starttime="20210401 06:29:15.749"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.749" starttime="20210401 06:29:15.749"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.749" starttime="20210401 06:29:15.749"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.749" starttime="20210401 06:29:15.749"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.749" starttime="20210401 06:29:15.749"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.750" starttime="20210401 06:29:15.750"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.750" starttime="20210401 06:29:15.750"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.750" starttime="20210401 06:29:15.750"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.750" starttime="20210401 06:29:15.750"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.750" starttime="20210401 06:29:15.750"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.750" starttime="20210401 06:29:15.750"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.751" starttime="20210401 06:29:15.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.751" starttime="20210401 06:29:15.751"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.751" starttime="20210401 06:29:15.751"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.751" starttime="20210401 06:29:15.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.751" starttime="20210401 06:29:15.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.751" starttime="20210401 06:29:15.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.752" starttime="20210401 06:29:15.752"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.752" starttime="20210401 06:29:15.752"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.752" starttime="20210401 06:29:15.752"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.752" starttime="20210401 06:29:15.752"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.752" starttime="20210401 06:29:15.752"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.753" starttime="20210401 06:29:15.752"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.753" starttime="20210401 06:29:15.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.753" starttime="20210401 06:29:15.753"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.753" starttime="20210401 06:29:15.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:29:15.753" starttime="20210401 06:29:15.753"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.753" starttime="20210401 06:29:15.753"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:29:15.754" starttime="20210401 06:29:15.753"/>
</kw>
<status status="FAIL" endtime="20210401 06:29:15.754" starttime="20210401 06:25:12.493"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210401 06:29:15.755" starttime="20210401 06:25:12.434">'java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
    [ Message content over the limit has been removed. ]
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:29:15.760" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:29:15.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:29:15.763" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:29:15.763" starttime="20210401 06:29:15.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:29:15.764" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:29:15.764" starttime="20210401 06:29:15.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:29:15.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:29:15.765" starttime="20210401 06:29:15.764"/>
</kw>
<status status="PASS" endtime="20210401 06:29:15.765" starttime="20210401 06:29:15.757"/>
</kw>
<msg timestamp="20210401 06:29:15.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:29:15.765" starttime="20210401 06:29:15.757"/>
</kw>
<msg timestamp="20210401 06:29:15.766" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210401 06:29:15.766" starttime="20210401 06:29:15.757"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:29:15.766" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210401 06:29:15.766" starttime="20210401 06:29:15.766"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:29:15.770" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:29:15.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:29:15.777" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210401 06:29:15.777" starttime="20210401 06:29:15.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:29:15.778" level="INFO"/>
<status status="PASS" endtime="20210401 06:29:15.778" starttime="20210401 06:29:15.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:29:15.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:29:15.779" starttime="20210401 06:29:15.778"/>
</kw>
<status status="PASS" endtime="20210401 06:29:15.779" starttime="20210401 06:29:15.768"/>
</kw>
<msg timestamp="20210401 06:29:15.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:29:15.779" starttime="20210401 06:29:15.768"/>
</kw>
<status status="PASS" endtime="20210401 06:29:15.779" starttime="20210401 06:29:15.767"/>
</kw>
<status status="PASS" endtime="20210401 06:29:15.779" starttime="20210401 06:29:15.767"/>
</kw>
<status status="PASS" endtime="20210401 06:29:15.780" starttime="20210401 06:29:15.756"/>
</kw>
<status status="PASS" endtime="20210401 06:29:15.780" starttime="20210401 06:29:15.756"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:29:15.784" level="INFO">Running command 'ozone sh volume create o3://om:9862/15160-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:33:18.533" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:33:18.533" level="INFO">${output} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:33:18.533" starttime="20210401 06:29:15.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:33:18.534" level="INFO">java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:92)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClientFromHostPort(OzoneAddress.java:107)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:151)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)</msg>
<status status="PASS" endtime="20210401 06:33:18.535" starttime="20210401 06:33:18.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:33:18.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210401 06:33:18.536" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210401 06:33:18.536" starttime="20210401 06:33:18.535"/>
</kw>
<status status="FAIL" endtime="20210401 06:33:18.536" starttime="20210401 06:29:15.782"/>
</kw>
<msg timestamp="20210401 06:33:18.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210401 06:33:18.537" starttime="20210401 06:29:15.781"/>
</kw>
<status status="FAIL" endtime="20210401 06:33:18.537" starttime="20210401 06:29:15.781"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:33:18.537" starttime="20210401 06:33:18.537"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:33:18.537" starttime="20210401 06:33:18.537"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<status status="NOT RUN" endtime="20210401 06:33:18.537" starttime="20210401 06:33:18.537"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:33:18.537" starttime="20210401 06:33:18.537"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:33:18.538" starttime="20210401 06:33:18.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<status status="NOT RUN" endtime="20210401 06:33:18.538" starttime="20210401 06:33:18.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:33:18.538" starttime="20210401 06:33:18.538"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:33:18.538" starttime="20210401 06:33:18.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<status status="NOT RUN" endtime="20210401 06:33:18.538" starttime="20210401 06:33:18.538"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:33:18.539" starttime="20210401 06:33:18.538"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:33:18.539" starttime="20210401 06:33:18.539"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:33:18.539" starttime="20210401 06:33:18.539"/>
</kw>
<status status="FAIL" endtime="20210401 06:33:18.539" starttime="20210401 06:29:15.780"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210401 06:33:18.539" starttime="20210401 06:29:15.755">255 != 0</status>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:33:18.545" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:33:18.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:33:18.547" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:33:18.547" starttime="20210401 06:33:18.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:33:18.548" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:33:18.549" starttime="20210401 06:33:18.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:33:18.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:33:18.549" starttime="20210401 06:33:18.549"/>
</kw>
<status status="PASS" endtime="20210401 06:33:18.549" starttime="20210401 06:33:18.542"/>
</kw>
<msg timestamp="20210401 06:33:18.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:33:18.550" starttime="20210401 06:33:18.542"/>
</kw>
<msg timestamp="20210401 06:33:18.550" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210401 06:33:18.550" starttime="20210401 06:33:18.542"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:33:18.551" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210401 06:33:18.551" starttime="20210401 06:33:18.550"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:33:18.555" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:33:18.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:33:18.591" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210401 06:33:18.591" starttime="20210401 06:33:18.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:33:18.593" level="INFO"/>
<status status="PASS" endtime="20210401 06:33:18.593" starttime="20210401 06:33:18.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:33:18.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:33:18.594" starttime="20210401 06:33:18.593"/>
</kw>
<status status="PASS" endtime="20210401 06:33:18.594" starttime="20210401 06:33:18.552"/>
</kw>
<msg timestamp="20210401 06:33:18.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:33:18.595" starttime="20210401 06:33:18.552"/>
</kw>
<status status="PASS" endtime="20210401 06:33:18.595" starttime="20210401 06:33:18.551"/>
</kw>
<status status="PASS" endtime="20210401 06:33:18.595" starttime="20210401 06:33:18.551"/>
</kw>
<status status="PASS" endtime="20210401 06:33:18.595" starttime="20210401 06:33:18.541"/>
</kw>
<status status="PASS" endtime="20210401 06:33:18.595" starttime="20210401 06:33:18.541"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:33:18.600" level="INFO">Running command 'ozone sh bucket create o3://om:9862/15160-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:37:21.237" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:37:21.237" level="INFO">${output} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:37:21.237" starttime="20210401 06:33:18.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:37:21.238" level="INFO">java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:92)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClientFromHostPort(OzoneAddress.java:107)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:151)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)</msg>
<status status="PASS" endtime="20210401 06:37:21.238" starttime="20210401 06:37:21.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:37:21.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210401 06:37:21.239" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210401 06:37:21.239" starttime="20210401 06:37:21.238"/>
</kw>
<status status="FAIL" endtime="20210401 06:37:21.239" starttime="20210401 06:33:18.597"/>
</kw>
<msg timestamp="20210401 06:37:21.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210401 06:37:21.240" starttime="20210401 06:33:18.597"/>
</kw>
<status status="FAIL" endtime="20210401 06:37:21.240" starttime="20210401 06:33:18.596"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:37:21.240" starttime="20210401 06:37:21.240"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:37:21.240" starttime="20210401 06:37:21.240"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<status status="NOT RUN" endtime="20210401 06:37:21.241" starttime="20210401 06:37:21.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:37:21.241" starttime="20210401 06:37:21.241"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:37:21.241" starttime="20210401 06:37:21.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<status status="NOT RUN" endtime="20210401 06:37:21.241" starttime="20210401 06:37:21.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:37:21.241" starttime="20210401 06:37:21.241"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:37:21.241" starttime="20210401 06:37:21.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<status status="NOT RUN" endtime="20210401 06:37:21.242" starttime="20210401 06:37:21.242"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:37:21.242" starttime="20210401 06:37:21.242"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:37:21.242" starttime="20210401 06:37:21.242"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:37:21.242" starttime="20210401 06:37:21.242"/>
</kw>
<status status="FAIL" endtime="20210401 06:37:21.242" starttime="20210401 06:33:18.595"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210401 06:37:21.243" starttime="20210401 06:33:18.540">255 != 0</status>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:37:21.248" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:37:21.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:37:21.251" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:37:21.251" starttime="20210401 06:37:21.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:37:21.252" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:37:21.252" starttime="20210401 06:37:21.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:37:21.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:37:21.253" starttime="20210401 06:37:21.252"/>
</kw>
<status status="PASS" endtime="20210401 06:37:21.253" starttime="20210401 06:37:21.246"/>
</kw>
<msg timestamp="20210401 06:37:21.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:37:21.253" starttime="20210401 06:37:21.246"/>
</kw>
<msg timestamp="20210401 06:37:21.253" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210401 06:37:21.253" starttime="20210401 06:37:21.245"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:37:21.254" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210401 06:37:21.254" starttime="20210401 06:37:21.254"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:37:21.258" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:37:21.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:37:21.264" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210401 06:37:21.264" starttime="20210401 06:37:21.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:37:21.265" level="INFO"/>
<status status="PASS" endtime="20210401 06:37:21.266" starttime="20210401 06:37:21.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:37:21.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:37:21.267" starttime="20210401 06:37:21.266"/>
</kw>
<status status="PASS" endtime="20210401 06:37:21.267" starttime="20210401 06:37:21.256"/>
</kw>
<msg timestamp="20210401 06:37:21.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:37:21.267" starttime="20210401 06:37:21.255"/>
</kw>
<status status="PASS" endtime="20210401 06:37:21.267" starttime="20210401 06:37:21.255"/>
</kw>
<status status="PASS" endtime="20210401 06:37:21.267" starttime="20210401 06:37:21.254"/>
</kw>
<status status="PASS" endtime="20210401 06:37:21.268" starttime="20210401 06:37:21.245"/>
</kw>
<status status="PASS" endtime="20210401 06:37:21.268" starttime="20210401 06:37:21.244"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:37:21.272" level="INFO">Running command 'ozone sh key put o3://om:9862/15160-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:41:23.941" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:41:23.941" level="INFO">${output} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:41:23.941" starttime="20210401 06:37:21.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:41:23.942" level="INFO">java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:92)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClientFromHostPort(OzoneAddress.java:107)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:151)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)</msg>
<status status="PASS" endtime="20210401 06:41:23.942" starttime="20210401 06:41:23.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:41:23.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210401 06:41:23.943" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210401 06:41:23.943" starttime="20210401 06:41:23.943"/>
</kw>
<status status="FAIL" endtime="20210401 06:41:23.944" starttime="20210401 06:37:21.269"/>
</kw>
<msg timestamp="20210401 06:41:23.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210401 06:41:23.944" starttime="20210401 06:37:21.269"/>
</kw>
<status status="FAIL" endtime="20210401 06:41:23.944" starttime="20210401 06:37:21.268"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210401 06:41:23.944" starttime="20210401 06:41:23.944"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:41:23.945" starttime="20210401 06:41:23.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<status status="NOT RUN" endtime="20210401 06:41:23.945" starttime="20210401 06:41:23.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210401 06:41:23.945" starttime="20210401 06:41:23.945"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:41:23.945" starttime="20210401 06:41:23.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<status status="NOT RUN" endtime="20210401 06:41:23.945" starttime="20210401 06:41:23.945"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210401 06:41:23.946" starttime="20210401 06:41:23.946"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:41:23.946" starttime="20210401 06:41:23.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc</arg>
<status status="NOT RUN" endtime="20210401 06:41:23.946" starttime="20210401 06:41:23.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" endtime="20210401 06:41:23.946" starttime="20210401 06:41:23.946"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:41:23.946" starttime="20210401 06:41:23.946"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:41:23.947" starttime="20210401 06:41:23.946"/>
</kw>
<status status="FAIL" endtime="20210401 06:41:23.947" starttime="20210401 06:37:21.268"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210401 06:41:23.947" starttime="20210401 06:37:21.243">255 != 0</status>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:41:23.953" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:41:23.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:41:23.955" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:41:23.955" starttime="20210401 06:41:23.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:41:23.957" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:41:23.957" starttime="20210401 06:41:23.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:41:23.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:41:23.957" starttime="20210401 06:41:23.957"/>
</kw>
<status status="PASS" endtime="20210401 06:41:23.958" starttime="20210401 06:41:23.950"/>
</kw>
<msg timestamp="20210401 06:41:23.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:41:23.958" starttime="20210401 06:41:23.950"/>
</kw>
<msg timestamp="20210401 06:41:23.958" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210401 06:41:23.958" starttime="20210401 06:41:23.949"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:41:23.959" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210401 06:41:23.959" starttime="20210401 06:41:23.958"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:41:23.963" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:41:23.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:41:23.996" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210401 06:41:23.996" starttime="20210401 06:41:23.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:41:23.997" level="INFO"/>
<status status="PASS" endtime="20210401 06:41:23.997" starttime="20210401 06:41:23.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:41:23.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:41:23.998" starttime="20210401 06:41:23.997"/>
</kw>
<status status="PASS" endtime="20210401 06:41:23.998" starttime="20210401 06:41:23.960"/>
</kw>
<msg timestamp="20210401 06:41:23.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:41:23.998" starttime="20210401 06:41:23.960"/>
</kw>
<status status="PASS" endtime="20210401 06:41:23.998" starttime="20210401 06:41:23.959"/>
</kw>
<status status="PASS" endtime="20210401 06:41:23.998" starttime="20210401 06:41:23.959"/>
</kw>
<status status="PASS" endtime="20210401 06:41:23.999" starttime="20210401 06:41:23.949"/>
</kw>
<status status="PASS" endtime="20210401 06:41:23.999" starttime="20210401 06:41:23.948"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:41:24.003" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/15160-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:45:26.516" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:45:26.516" level="INFO">${output} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:45:26.516" starttime="20210401 06:41:24.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:45:26.517" level="INFO">java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:92)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClientFromHostPort(OzoneAddress.java:107)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:151)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)</msg>
<status status="PASS" endtime="20210401 06:45:26.517" starttime="20210401 06:45:26.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:45:26.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210401 06:45:26.518" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210401 06:45:26.518" starttime="20210401 06:45:26.517"/>
</kw>
<status status="FAIL" endtime="20210401 06:45:26.518" starttime="20210401 06:41:24.001"/>
</kw>
<msg timestamp="20210401 06:45:26.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210401 06:45:26.519" starttime="20210401 06:41:24.000"/>
</kw>
<status status="FAIL" endtime="20210401 06:45:26.519" starttime="20210401 06:41:24.000"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<status status="NOT RUN" endtime="20210401 06:45:26.519" starttime="20210401 06:45:26.519"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:45:26.519" starttime="20210401 06:45:26.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<status status="NOT RUN" endtime="20210401 06:45:26.519" starttime="20210401 06:45:26.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<status status="NOT RUN" endtime="20210401 06:45:26.520" starttime="20210401 06:45:26.520"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:45:26.520" starttime="20210401 06:45:26.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<status status="NOT RUN" endtime="20210401 06:45:26.520" starttime="20210401 06:45:26.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<status status="NOT RUN" endtime="20210401 06:45:26.520" starttime="20210401 06:45:26.520"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:45:26.520" starttime="20210401 06:45:26.520"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:45:26.521" starttime="20210401 06:45:26.521"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" endtime="20210401 06:45:26.521" starttime="20210401 06:45:26.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<status status="NOT RUN" endtime="20210401 06:45:26.521" starttime="20210401 06:45:26.521"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:45:26.521" starttime="20210401 06:45:26.521"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" endtime="20210401 06:45:26.521" starttime="20210401 06:45:26.521"/>
</kw>
<status status="FAIL" endtime="20210401 06:45:26.522" starttime="20210401 06:41:23.999"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210401 06:45:26.522" starttime="20210401 06:41:23.947">255 != 0</status>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:45:26.528" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:45:26.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:45:26.531" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:45:26.531" starttime="20210401 06:45:26.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:45:26.532" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:45:26.532" starttime="20210401 06:45:26.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:45:26.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:45:26.533" starttime="20210401 06:45:26.532"/>
</kw>
<status status="PASS" endtime="20210401 06:45:26.533" starttime="20210401 06:45:26.526"/>
</kw>
<msg timestamp="20210401 06:45:26.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:45:26.533" starttime="20210401 06:45:26.526"/>
</kw>
<msg timestamp="20210401 06:45:26.534" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210401 06:45:26.534" starttime="20210401 06:45:26.525"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:45:26.534" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210401 06:45:26.534" starttime="20210401 06:45:26.534"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:45:26.538" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:45:26.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:45:26.545" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210401 06:45:26.545" starttime="20210401 06:45:26.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:45:26.546" level="INFO"/>
<status status="PASS" endtime="20210401 06:45:26.547" starttime="20210401 06:45:26.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:45:26.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:45:26.547" starttime="20210401 06:45:26.547"/>
</kw>
<status status="PASS" endtime="20210401 06:45:26.548" starttime="20210401 06:45:26.536"/>
</kw>
<msg timestamp="20210401 06:45:26.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:45:26.548" starttime="20210401 06:45:26.536"/>
</kw>
<status status="PASS" endtime="20210401 06:45:26.548" starttime="20210401 06:45:26.535"/>
</kw>
<status status="PASS" endtime="20210401 06:45:26.548" starttime="20210401 06:45:26.535"/>
</kw>
<status status="PASS" endtime="20210401 06:45:26.548" starttime="20210401 06:45:26.524"/>
</kw>
<status status="PASS" endtime="20210401 06:45:26.548" starttime="20210401 06:45:26.524"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:45:26.552" level="INFO">Running command 'ozone sh volume info o3:///15160-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:49:29.275" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:49:29.275" level="INFO">${output} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:49:29.275" starttime="20210401 06:45:26.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:49:29.276" level="INFO">java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:149)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClient(OzoneAddress.java:97)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:166)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)</msg>
<status status="PASS" endtime="20210401 06:49:29.277" starttime="20210401 06:49:29.276"/>
</kw>
<msg timestamp="20210401 06:49:29.277" level="INFO">${result} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:49:29.277" starttime="20210401 06:45:26.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210401 06:49:29.278" level="FAIL">'java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:149)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClient(OzoneAddress.java:97)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:166)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" endtime="20210401 06:49:29.278" starttime="20210401 06:49:29.277"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.278" starttime="20210401 06:49:29.278"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.278" starttime="20210401 06:49:29.278"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.279" starttime="20210401 06:49:29.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.279" starttime="20210401 06:49:29.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.279" starttime="20210401 06:49:29.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.279" starttime="20210401 06:49:29.279"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.279" starttime="20210401 06:49:29.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.279" starttime="20210401 06:49:29.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.280" starttime="20210401 06:49:29.280"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.280" starttime="20210401 06:49:29.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.280" starttime="20210401 06:49:29.280"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.280" starttime="20210401 06:49:29.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.280" starttime="20210401 06:49:29.280"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.281" starttime="20210401 06:49:29.280"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.281" starttime="20210401 06:49:29.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.281" starttime="20210401 06:49:29.281"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.281" starttime="20210401 06:49:29.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.281" starttime="20210401 06:49:29.281"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.282" starttime="20210401 06:49:29.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.282" starttime="20210401 06:49:29.282"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.282" starttime="20210401 06:49:29.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.282" starttime="20210401 06:49:29.282"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.282" starttime="20210401 06:49:29.282"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.282" starttime="20210401 06:49:29.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.283" starttime="20210401 06:49:29.283"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.283" starttime="20210401 06:49:29.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.283" starttime="20210401 06:49:29.283"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.283" starttime="20210401 06:49:29.283"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.283" starttime="20210401 06:49:29.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.283" starttime="20210401 06:49:29.283"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.284" starttime="20210401 06:49:29.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.284" starttime="20210401 06:49:29.284"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.284" starttime="20210401 06:49:29.284"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.284" starttime="20210401 06:49:29.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.284" starttime="20210401 06:49:29.284"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.285" starttime="20210401 06:49:29.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.285" starttime="20210401 06:49:29.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.285" starttime="20210401 06:49:29.285"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.285" starttime="20210401 06:49:29.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.285" starttime="20210401 06:49:29.285"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.285" starttime="20210401 06:49:29.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.286" starttime="20210401 06:49:29.285"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.286" starttime="20210401 06:49:29.286"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.286" starttime="20210401 06:49:29.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.286" starttime="20210401 06:49:29.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.286" starttime="20210401 06:49:29.286"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.286" starttime="20210401 06:49:29.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:49:29.287" starttime="20210401 06:49:29.287"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.287" starttime="20210401 06:49:29.287"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:49:29.287" starttime="20210401 06:49:29.287"/>
</kw>
<status status="FAIL" endtime="20210401 06:49:29.288" starttime="20210401 06:45:26.549"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210401 06:49:29.288" starttime="20210401 06:45:26.523">'java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
    [ Message content over the limit has been removed. ]
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw type="SETUP" name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:49:29.294" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:49:29.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:49:29.297" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:49:29.297" starttime="20210401 06:49:29.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:49:29.298" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:49:29.298" starttime="20210401 06:49:29.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:49:29.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:49:29.299" starttime="20210401 06:49:29.298"/>
</kw>
<status status="PASS" endtime="20210401 06:49:29.299" starttime="20210401 06:49:29.291"/>
</kw>
<msg timestamp="20210401 06:49:29.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:49:29.299" starttime="20210401 06:49:29.291"/>
</kw>
<msg timestamp="20210401 06:49:29.299" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210401 06:49:29.299" starttime="20210401 06:49:29.290"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:49:29.300" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210401 06:49:29.300" starttime="20210401 06:49:29.300"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:49:29.304" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:49:29.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:49:29.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210401 06:49:29.337" starttime="20210401 06:49:29.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:49:29.339" level="INFO"/>
<status status="PASS" endtime="20210401 06:49:29.339" starttime="20210401 06:49:29.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:49:29.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:49:29.339" starttime="20210401 06:49:29.339"/>
</kw>
<status status="PASS" endtime="20210401 06:49:29.340" starttime="20210401 06:49:29.302"/>
</kw>
<msg timestamp="20210401 06:49:29.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:49:29.340" starttime="20210401 06:49:29.301"/>
</kw>
<status status="PASS" endtime="20210401 06:49:29.340" starttime="20210401 06:49:29.301"/>
</kw>
<status status="PASS" endtime="20210401 06:49:29.340" starttime="20210401 06:49:29.300"/>
</kw>
<status status="PASS" endtime="20210401 06:49:29.340" starttime="20210401 06:49:29.290"/>
</kw>
<status status="PASS" endtime="20210401 06:49:29.341" starttime="20210401 06:49:29.289"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:49:29.345" level="INFO">Running command 'ozone sh volume info /15160-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:53:32.089" level="INFO">${rc} = 255</msg>
<msg timestamp="20210401 06:53:32.089" level="INFO">${output} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:53:32.089" starttime="20210401 06:49:29.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:53:32.091" level="INFO">java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:149)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClient(OzoneAddress.java:97)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:166)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)</msg>
<status status="PASS" endtime="20210401 06:53:32.091" starttime="20210401 06:53:32.090"/>
</kw>
<msg timestamp="20210401 06:53:32.091" level="INFO">${result} = java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java...</msg>
<status status="PASS" endtime="20210401 06:53:32.091" starttime="20210401 06:49:29.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210401 06:53:32.092" level="FAIL">'java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invoke(RetryInvocationHandler.java:157)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeOnce(RetryInvocationHandler.java:95)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:359)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at org.apache.hadoop.ozone.om.protocolPB.Hadoop3OmTransport.submitRequest(Hadoop3OmTransport.java:80)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.submitRequest(OzoneManagerProtocolClientSideTranslatorPB.java:220)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.getServiceInfo(OzoneManagerProtocolClientSideTranslatorPB.java:1074)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.&lt;init&gt;(RpcClient.java:176)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:246)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getClientProtocol(OzoneClientFactory.java:229)
	at org.apache.hadoop.ozone.client.OzoneClientFactory.getRpcClient(OzoneClientFactory.java:149)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createRpcClient(OzoneAddress.java:97)
	at org.apache.hadoop.ozone.shell.OzoneAddress.createClient(OzoneAddress.java:166)
	at org.apache.hadoop.ozone.shell.Handler.createClient(Handler.java:104)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:92)
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)' does not contain 'VOLUME_NOT_FOUND'</msg>
<status status="FAIL" endtime="20210401 06:53:32.092" starttime="20210401 06:53:32.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.093" starttime="20210401 06:53:32.092"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.093" starttime="20210401 06:53:32.093"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.093" starttime="20210401 06:53:32.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.093" starttime="20210401 06:53:32.093"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.093" starttime="20210401 06:53:32.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.095" starttime="20210401 06:53:32.095"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.095" starttime="20210401 06:53:32.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.095" starttime="20210401 06:53:32.095"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.095" starttime="20210401 06:53:32.095"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.095" starttime="20210401 06:53:32.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.096" starttime="20210401 06:53:32.096"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.096" starttime="20210401 06:53:32.096"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.096" starttime="20210401 06:53:32.096"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.096" starttime="20210401 06:53:32.096"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.096" starttime="20210401 06:53:32.096"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.097" starttime="20210401 06:53:32.096"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.097" starttime="20210401 06:53:32.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.097" starttime="20210401 06:53:32.097"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.097" starttime="20210401 06:53:32.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.097" starttime="20210401 06:53:32.097"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.097" starttime="20210401 06:53:32.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.098" starttime="20210401 06:53:32.098"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.098" starttime="20210401 06:53:32.098"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.098" starttime="20210401 06:53:32.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.098" starttime="20210401 06:53:32.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.098" starttime="20210401 06:53:32.098"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.098" starttime="20210401 06:53:32.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.099" starttime="20210401 06:53:32.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.099" starttime="20210401 06:53:32.099"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.099" starttime="20210401 06:53:32.099"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.099" starttime="20210401 06:53:32.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.099" starttime="20210401 06:53:32.099"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.100" starttime="20210401 06:53:32.099"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.100" starttime="20210401 06:53:32.100"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.100" starttime="20210401 06:53:32.100"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.100" starttime="20210401 06:53:32.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.100" starttime="20210401 06:53:32.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.100" starttime="20210401 06:53:32.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.100" starttime="20210401 06:53:32.100"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.101" starttime="20210401 06:53:32.101"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.101" starttime="20210401 06:53:32.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.101" starttime="20210401 06:53:32.101"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.101" starttime="20210401 06:53:32.101"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.101" starttime="20210401 06:53:32.101"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.101" starttime="20210401 06:53:32.101"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.102" starttime="20210401 06:53:32.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.102" starttime="20210401 06:53:32.102"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" endtime="20210401 06:53:32.102" starttime="20210401 06:53:32.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.102" starttime="20210401 06:53:32.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" endtime="20210401 06:53:32.102" starttime="20210401 06:53:32.102"/>
</kw>
<status status="FAIL" endtime="20210401 06:53:32.103" starttime="20210401 06:49:29.341"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" endtime="20210401 06:53:32.103" starttime="20210401 06:49:29.289">'java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy20.submitRequest(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:422)
	at org.apache.hadoop.io.retry.RetryInvocationHandler$Call.invokeMethod(RetryInvocationHandler.java:165)
    [ Message content over the limit has been removed. ]
	at org.apache.hadoop.ozone.shell.Handler.call(Handler.java:42)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.ozone.shell.OzoneShell.lambda$execute$0(OzoneShell.java:55)
	at org.apache.hadoop.hdds.tracing.TracingUtil.executeInNewSpan(TracingUtil.java:159)
	at org.apache.hadoop.ozone.shell.OzoneShell.execute(OzoneShell.java:53)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.ozone.shell.OzoneShell.main(OzoneShell.java:47)' does not contain 'VOLUME_NOT_FOUND'</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210401 06:53:32.105" starttime="20210401 06:25:12.425"/>
</suite>
<status status="FAIL" endtime="20210401 06:53:32.109" starttime="20210401 06:12:53.119"/>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:12:48.399" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:12:48.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:12:48.402" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210401 06:12:48.402" starttime="20210401 06:12:48.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:12:48.403" level="INFO">scm</msg>
<status status="PASS" endtime="20210401 06:12:48.403" starttime="20210401 06:12:48.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:12:48.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:12:48.404" starttime="20210401 06:12:48.403"/>
</kw>
<status status="PASS" endtime="20210401 06:12:48.404" starttime="20210401 06:12:48.395"/>
</kw>
<msg timestamp="20210401 06:12:48.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:12:48.405" starttime="20210401 06:12:48.395"/>
</kw>
<msg timestamp="20210401 06:12:48.405" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210401 06:12:48.405" starttime="20210401 06:12:48.394"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210401 06:12:48.405" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210401 06:12:48.406" starttime="20210401 06:12:48.405"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210401 06:12:48.409" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210401 06:12:48.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210401 06:12:48.416" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210401 06:12:48.416" starttime="20210401 06:12:48.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210401 06:12:48.417" level="INFO"/>
<status status="PASS" endtime="20210401 06:12:48.417" starttime="20210401 06:12:48.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210401 06:12:48.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210401 06:12:48.418" starttime="20210401 06:12:48.417"/>
</kw>
<status status="PASS" endtime="20210401 06:12:48.418" starttime="20210401 06:12:48.407"/>
</kw>
<msg timestamp="20210401 06:12:48.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210401 06:12:48.418" starttime="20210401 06:12:48.407"/>
</kw>
<status status="PASS" endtime="20210401 06:12:48.418" starttime="20210401 06:12:48.406"/>
</kw>
<status status="PASS" endtime="20210401 06:12:48.419" starttime="20210401 06:12:48.406"/>
</kw>
<status status="PASS" endtime="20210401 06:12:48.419" starttime="20210401 06:12:48.393"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" endtime="20210401 06:12:48.419" starttime="20210401 06:12:48.393"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210401 06:12:48.420" starttime="20210401 06:12:48.342"/>
</suite>
<status status="FAIL" elapsedtime="2439068" endtime="N/A" starttime="N/A"/>
</suite>
<statistics>
<total>
<stat fail="24" skip="0" pass="6">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="24" skip="0" id="s1" name="ozonesecure" pass="6">ozonesecure</stat>
<stat fail="24" skip="0" id="s1-s1" name="Basic" pass="5">ozonesecure.Basic</stat>
<stat fail="1" skip="0" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="0" skip="0" id="s1-s1-s2" name="Getconf" pass="4">ozonesecure.Basic.Getconf</stat>
<stat fail="15" skip="0" id="s1-s1-s3" name="Links" pass="0">ozonesecure.Basic.Links</stat>
<stat fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="7" skip="0" id="s1-s1-s5" name="Ozone-Shell" pass="0">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" skip="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
