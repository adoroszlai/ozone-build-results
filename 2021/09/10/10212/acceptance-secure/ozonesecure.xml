<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20210910 02:07:59.937" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:17:40.467" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:17:40.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:17:40.471" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:17:40.463" endtime="20210910 01:17:40.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:17:40.472" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:17:40.472" endtime="20210910 01:17:40.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:17:40.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:17:40.473" endtime="20210910 01:17:40.473"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.462" endtime="20210910 01:17:40.474"/>
</kw>
<msg timestamp="20210910 01:17:40.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:17:40.462" endtime="20210910 01:17:40.474"/>
</kw>
<msg timestamp="20210910 01:17:40.474" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210910 01:17:40.461" endtime="20210910 01:17:40.474"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:17:40.479" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:17:40.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:17:40.486" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:17:40.477" endtime="20210910 01:17:40.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:17:40.487" level="INFO"/>
<status status="PASS" starttime="20210910 01:17:40.486" endtime="20210910 01:17:40.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:17:40.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:17:40.487" endtime="20210910 01:17:40.489"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.476" endtime="20210910 01:17:40.489"/>
</kw>
<msg timestamp="20210910 01:17:40.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:17:40.476" endtime="20210910 01:17:40.490"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.475" endtime="20210910 01:17:40.490"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.475" endtime="20210910 01:17:40.490"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.461" endtime="20210910 01:17:40.490"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.460" endtime="20210910 01:17:40.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:17:40.495" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:17:40.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:17:40.653" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210910 01:17:40.492" endtime="20210910 01:17:40.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:17:40.655" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Fri, 10 Sep 2021 01:17:40 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCHabSdEkSg2W7N5e+Am337CCUOyUO2wXcFmKWCk1D1hhNnknIHlZ8zYk5HfLymDp+t/0vhDR6NO2/MaiRM8ao5rT6
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1631272660641&amp;s=B2dp2v5H40rsCIXyaSSA1GrHOVIQuxB78q5JwUdg8Jw="; Path=/; HttpOnly
Last-Modified: Fri, 10 Sep 2021 00:54:40 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210910 01:17:40.654" endtime="20210910 01:17:40.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:17:40.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:17:40.655" endtime="20210910 01:17:40.656"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.491" endtime="20210910 01:17:40.656"/>
</kw>
<msg timestamp="20210910 01:17:40.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:17:40.491" endtime="20210910 01:17:40.657"/>
</kw>
<msg timestamp="20210910 01:17:40.657" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210910 01:17:40.490" endtime="20210910 01:17:40.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:17:40.657" endtime="20210910 01:17:40.658"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210910 01:17:40.459" endtime="20210910 01:17:40.658"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:17:40.667" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:17:40.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:17:40.671" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:17:40.664" endtime="20210910 01:17:40.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:17:40.672" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:17:40.672" endtime="20210910 01:17:40.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:17:40.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:17:40.673" endtime="20210910 01:17:40.673"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.664" endtime="20210910 01:17:40.674"/>
</kw>
<msg timestamp="20210910 01:17:40.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:17:40.663" endtime="20210910 01:17:40.674"/>
</kw>
<msg timestamp="20210910 01:17:40.674" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:17:40.663" endtime="20210910 01:17:40.674"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:17:40.676" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:17:40.674" endtime="20210910 01:17:40.676"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:17:40.681" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:17:40.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:17:40.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:17:40.679" endtime="20210910 01:17:40.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:17:40.692" level="INFO"/>
<status status="PASS" starttime="20210910 01:17:40.691" endtime="20210910 01:17:40.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:17:40.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:17:40.692" endtime="20210910 01:17:40.693"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.678" endtime="20210910 01:17:40.693"/>
</kw>
<msg timestamp="20210910 01:17:40.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:17:40.678" endtime="20210910 01:17:40.694"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.677" endtime="20210910 01:17:40.694"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.677" endtime="20210910 01:17:40.694"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.662" endtime="20210910 01:17:40.694"/>
</kw>
<status status="PASS" starttime="20210910 01:17:40.662" endtime="20210910 01:17:40.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:17:40.699" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:22:40.663" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210910 01:17:40.697" endtime="20210910 01:22:40.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210910 01:22:40.664" endtime="20210910 01:22:40.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210910 01:22:40.664" endtime="20210910 01:22:40.664"/>
</kw>
<status status="FAIL" starttime="20210910 01:17:40.696" endtime="20210910 01:22:40.664"/>
</kw>
<msg timestamp="20210910 01:22:40.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210910 01:17:40.695" endtime="20210910 01:22:40.665"/>
</kw>
<status status="FAIL" starttime="20210910 01:17:40.695" endtime="20210910 01:22:40.665"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210910 01:22:40.665" endtime="20210910 01:22:40.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 01:22:40.666" endtime="20210910 01:22:40.666"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210910 01:17:40.659" endtime="20210910 01:22:40.666">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210910 01:17:40.426" endtime="20210910 01:22:40.669"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:22:40.686" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:22:43.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:22:43.979" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210910 01:22:40.683" endtime="20210910 01:22:43.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:22:43.981" level="INFO">om</msg>
<status status="PASS" starttime="20210910 01:22:43.980" endtime="20210910 01:22:43.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:22:43.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:22:43.982" endtime="20210910 01:22:43.984"/>
</kw>
<status status="PASS" starttime="20210910 01:22:40.682" endtime="20210910 01:22:43.984"/>
</kw>
<msg timestamp="20210910 01:22:43.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:22:40.681" endtime="20210910 01:22:43.985"/>
</kw>
<msg timestamp="20210910 01:22:43.985" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210910 01:22:40.680" endtime="20210910 01:22:43.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:22:43.986" endtime="20210910 01:22:43.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:22:43.995" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:22:47.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:22:47.013" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210910 01:22:43.990" endtime="20210910 01:22:47.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:22:47.016" level="INFO">om</msg>
<status status="PASS" starttime="20210910 01:22:47.014" endtime="20210910 01:22:47.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:22:47.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:22:47.016" endtime="20210910 01:22:47.017"/>
</kw>
<status status="PASS" starttime="20210910 01:22:43.989" endtime="20210910 01:22:47.017"/>
</kw>
<msg timestamp="20210910 01:22:47.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:22:43.988" endtime="20210910 01:22:47.017"/>
</kw>
<msg timestamp="20210910 01:22:47.017" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210910 01:22:43.987" endtime="20210910 01:22:47.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:22:47.018" endtime="20210910 01:22:47.018"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210910 01:22:40.679" endtime="20210910 01:22:47.018"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:22:47.025" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:22:50.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:22:50.256" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:22:47.022" endtime="20210910 01:22:50.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:22:50.257" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:22:50.256" endtime="20210910 01:22:50.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:22:50.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:22:50.257" endtime="20210910 01:22:50.258"/>
</kw>
<status status="PASS" starttime="20210910 01:22:47.021" endtime="20210910 01:22:50.258"/>
</kw>
<msg timestamp="20210910 01:22:50.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:22:47.020" endtime="20210910 01:22:50.258"/>
</kw>
<msg timestamp="20210910 01:22:50.259" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210910 01:22:47.020" endtime="20210910 01:22:50.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:22:50.259" endtime="20210910 01:22:50.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:22:50.266" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:22:53.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:22:53.273" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:22:50.263" endtime="20210910 01:22:53.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:22:53.274" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:22:53.274" endtime="20210910 01:22:53.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:22:53.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:22:53.275" endtime="20210910 01:22:53.276"/>
</kw>
<status status="PASS" starttime="20210910 01:22:50.262" endtime="20210910 01:22:53.276"/>
</kw>
<msg timestamp="20210910 01:22:53.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:22:50.262" endtime="20210910 01:22:53.276"/>
</kw>
<msg timestamp="20210910 01:22:53.276" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210910 01:22:50.260" endtime="20210910 01:22:53.276"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:22:53.277" endtime="20210910 01:22:53.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210910 01:22:47.019" endtime="20210910 01:22:53.277"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:22:53.285" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:22:56.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:22:56.032" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210910 01:22:53.283" endtime="20210910 01:22:56.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:22:56.034" level="INFO">om</msg>
<status status="PASS" starttime="20210910 01:22:56.033" endtime="20210910 01:22:56.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:22:56.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:22:56.034" endtime="20210910 01:22:56.035"/>
</kw>
<status status="PASS" starttime="20210910 01:22:53.282" endtime="20210910 01:22:56.035"/>
</kw>
<msg timestamp="20210910 01:22:56.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:22:53.281" endtime="20210910 01:22:56.035"/>
</kw>
<msg timestamp="20210910 01:22:56.036" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210910 01:22:53.279" endtime="20210910 01:22:56.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:22:56.036" endtime="20210910 01:22:56.037"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:22:56.037" endtime="20210910 01:22:56.038"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:22:56.044" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:22:58.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:22:58.827" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210910 01:22:56.041" endtime="20210910 01:22:58.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:22:58.829" level="INFO">om</msg>
<status status="PASS" starttime="20210910 01:22:58.828" endtime="20210910 01:22:58.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:22:58.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:22:58.829" endtime="20210910 01:22:58.830"/>
</kw>
<status status="PASS" starttime="20210910 01:22:56.040" endtime="20210910 01:22:58.830"/>
</kw>
<msg timestamp="20210910 01:22:58.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:22:56.039" endtime="20210910 01:22:58.830"/>
</kw>
<msg timestamp="20210910 01:22:58.831" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210910 01:22:56.038" endtime="20210910 01:22:58.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:22:58.831" endtime="20210910 01:22:58.831"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:22:58.832" endtime="20210910 01:22:58.832"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210910 01:22:53.278" endtime="20210910 01:22:58.832"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:22:58.840" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:23:01.532" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:23:01.533" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210910 01:22:58.836" endtime="20210910 01:23:01.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:23:01.534" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210910 01:23:01.533" endtime="20210910 01:23:01.534"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:23:01.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:23:01.534" endtime="20210910 01:23:01.535"/>
</kw>
<msg timestamp="20210910 01:23:01.535" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210910 01:22:58.835" endtime="20210910 01:23:01.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:23:01.536" endtime="20210910 01:23:01.536"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:23:01.540" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:23:04.342" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:23:04.342" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210910 01:23:01.537" endtime="20210910 01:23:04.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:23:04.344" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210910 01:23:04.343" endtime="20210910 01:23:04.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:23:04.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:23:04.344" endtime="20210910 01:23:04.345"/>
</kw>
<msg timestamp="20210910 01:23:04.345" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210910 01:23:01.536" endtime="20210910 01:23:04.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:23:04.345" endtime="20210910 01:23:04.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210910 01:22:58.833" endtime="20210910 01:23:04.347"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210910 01:22:40.673" endtime="20210910 01:23:04.350"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210910 01:23:04.382" level="INFO">${random} = 34393</msg>
<status status="PASS" starttime="20210910 01:23:04.381" endtime="20210910 01:23:04.382"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:23:04.386" level="INFO">${source} = 34393-source</msg>
<status status="PASS" starttime="20210910 01:23:04.383" endtime="20210910 01:23:04.386"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:23:04.389" level="INFO">${target} = 34393-target</msg>
<status status="PASS" starttime="20210910 01:23:04.386" endtime="20210910 01:23:04.389"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:23:04.394" level="INFO">Running command 'ozone sh volume create 34393-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:23:12.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:23:12.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:23:04.391" endtime="20210910 01:23:12.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:23:12.468" level="INFO"/>
<status status="PASS" starttime="20210910 01:23:12.468" endtime="20210910 01:23:12.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:23:12.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:23:12.469" endtime="20210910 01:23:12.469"/>
</kw>
<status status="PASS" starttime="20210910 01:23:04.390" endtime="20210910 01:23:12.470"/>
</kw>
<msg timestamp="20210910 01:23:12.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:23:04.390" endtime="20210910 01:23:12.470"/>
</kw>
<status status="PASS" starttime="20210910 01:23:04.389" endtime="20210910 01:23:12.470"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:23:12.475" level="INFO">Running command 'ozone sh volume create 34393-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:23:20.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:23:20.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:23:12.472" endtime="20210910 01:23:20.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:23:20.679" level="INFO"/>
<status status="PASS" starttime="20210910 01:23:20.679" endtime="20210910 01:23:20.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:23:20.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:23:20.680" endtime="20210910 01:23:20.680"/>
</kw>
<status status="PASS" starttime="20210910 01:23:12.471" endtime="20210910 01:23:20.681"/>
</kw>
<msg timestamp="20210910 01:23:20.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:23:12.471" endtime="20210910 01:23:20.681"/>
</kw>
<status status="PASS" starttime="20210910 01:23:12.470" endtime="20210910 01:23:20.681"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:23:20.692" level="INFO">Running command 'ozone sh bucket create 34393-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:23:28.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:23:28.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:23:20.687" endtime="20210910 01:23:28.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:23:28.481" level="INFO"/>
<status status="PASS" starttime="20210910 01:23:28.480" endtime="20210910 01:23:28.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:23:28.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:23:28.482" endtime="20210910 01:23:28.483"/>
</kw>
<status status="PASS" starttime="20210910 01:23:20.685" endtime="20210910 01:23:28.484"/>
</kw>
<msg timestamp="20210910 01:23:28.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:23:20.683" endtime="20210910 01:23:28.484"/>
</kw>
<status status="PASS" starttime="20210910 01:23:20.683" endtime="20210910 01:23:28.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:23:28.492" level="INFO">Running command 'ozone sh key put 34393-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:26:39.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:26:39.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:23:28.489" endtime="20210910 01:26:39.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:26:39.409" level="INFO"/>
<status status="PASS" starttime="20210910 01:26:39.408" endtime="20210910 01:26:39.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:26:39.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:26:39.409" endtime="20210910 01:26:39.410"/>
</kw>
<status status="PASS" starttime="20210910 01:23:28.487" endtime="20210910 01:26:39.411"/>
</kw>
<msg timestamp="20210910 01:26:39.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:23:28.487" endtime="20210910 01:26:39.411"/>
</kw>
<status status="PASS" starttime="20210910 01:23:28.485" endtime="20210910 01:26:39.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:26:39.417" level="INFO">Running command 'ozone sh bucket create 34393-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:26:47.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:26:47.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:26:39.414" endtime="20210910 01:26:47.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:26:47.416" level="INFO"/>
<status status="PASS" starttime="20210910 01:26:47.414" endtime="20210910 01:26:47.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:26:47.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:26:47.417" endtime="20210910 01:26:47.418"/>
</kw>
<status status="PASS" starttime="20210910 01:26:39.413" endtime="20210910 01:26:47.418"/>
</kw>
<msg timestamp="20210910 01:26:47.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:26:39.413" endtime="20210910 01:26:47.419"/>
</kw>
<status status="PASS" starttime="20210910 01:26:39.412" endtime="20210910 01:26:47.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:26:47.425" level="INFO">Running command 'ozone sh bucket link 34393-source/readable-bucket 34393-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:26:53.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:26:53.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:26:47.423" endtime="20210910 01:26:53.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:26:53.855" level="INFO"/>
<status status="PASS" starttime="20210910 01:26:53.854" endtime="20210910 01:26:53.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:26:53.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:26:53.855" endtime="20210910 01:26:53.856"/>
</kw>
<status status="PASS" starttime="20210910 01:26:47.421" endtime="20210910 01:26:53.856"/>
</kw>
<msg timestamp="20210910 01:26:53.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:26:47.421" endtime="20210910 01:26:53.856"/>
</kw>
<status status="PASS" starttime="20210910 01:26:47.420" endtime="20210910 01:26:53.857"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:26:53.862" level="INFO">Running command 'ozone sh bucket link 34393-source/readable-bucket 34393-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:02.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:02.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:26:53.858" endtime="20210910 01:27:02.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:02.034" level="INFO"/>
<status status="PASS" starttime="20210910 01:27:02.033" endtime="20210910 01:27:02.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:02.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:02.034" endtime="20210910 01:27:02.036"/>
</kw>
<status status="PASS" starttime="20210910 01:26:53.858" endtime="20210910 01:27:02.036"/>
</kw>
<msg timestamp="20210910 01:27:02.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:26:53.858" endtime="20210910 01:27:02.037"/>
</kw>
<status status="PASS" starttime="20210910 01:26:53.857" endtime="20210910 01:27:02.037"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:02.043" level="INFO">Running command 'ozone sh bucket link 34393-source/unreadable-bucket 34393-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:09.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:09.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:27:02.040" endtime="20210910 01:27:09.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:09.643" level="INFO"/>
<status status="PASS" starttime="20210910 01:27:09.642" endtime="20210910 01:27:09.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:09.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:09.643" endtime="20210910 01:27:09.644"/>
</kw>
<status status="PASS" starttime="20210910 01:27:02.039" endtime="20210910 01:27:09.644"/>
</kw>
<msg timestamp="20210910 01:27:09.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:02.038" endtime="20210910 01:27:09.644"/>
</kw>
<status status="PASS" starttime="20210910 01:27:02.037" endtime="20210910 01:27:09.645"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:09.648" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 34393-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:16.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:16.691" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:27:09.646" endtime="20210910 01:27:16.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:16.694" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:27:16.692" endtime="20210910 01:27:16.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:16.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:16.694" endtime="20210910 01:27:16.695"/>
</kw>
<status status="PASS" starttime="20210910 01:27:09.646" endtime="20210910 01:27:16.696"/>
</kw>
<msg timestamp="20210910 01:27:16.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:09.645" endtime="20210910 01:27:16.696"/>
</kw>
<status status="PASS" starttime="20210910 01:27:09.645" endtime="20210910 01:27:16.697"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:16.703" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 34393-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:22.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:22.214" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:27:16.700" endtime="20210910 01:27:22.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:22.215" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:27:22.215" endtime="20210910 01:27:22.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:22.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:22.216" endtime="20210910 01:27:22.216"/>
</kw>
<status status="PASS" starttime="20210910 01:27:16.699" endtime="20210910 01:27:22.216"/>
</kw>
<msg timestamp="20210910 01:27:22.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:16.698" endtime="20210910 01:27:22.217"/>
</kw>
<status status="PASS" starttime="20210910 01:27:16.697" endtime="20210910 01:27:22.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:22.221" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 34393-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:28.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:28.340" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:27:22.219" endtime="20210910 01:27:28.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:28.343" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:27:28.341" endtime="20210910 01:27:28.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:28.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:28.343" endtime="20210910 01:27:28.344"/>
</kw>
<status status="PASS" starttime="20210910 01:27:22.219" endtime="20210910 01:27:28.345"/>
</kw>
<msg timestamp="20210910 01:27:28.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:22.218" endtime="20210910 01:27:28.345"/>
</kw>
<status status="PASS" starttime="20210910 01:27:22.217" endtime="20210910 01:27:28.346"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:28.352" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 34393-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:35.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:35.639" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:27:28.349" endtime="20210910 01:27:35.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:35.641" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:27:35.640" endtime="20210910 01:27:35.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:35.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:35.641" endtime="20210910 01:27:35.642"/>
</kw>
<status status="PASS" starttime="20210910 01:27:28.348" endtime="20210910 01:27:35.642"/>
</kw>
<msg timestamp="20210910 01:27:35.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:28.348" endtime="20210910 01:27:35.642"/>
</kw>
<status status="PASS" starttime="20210910 01:27:28.347" endtime="20210910 01:27:35.642"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:35.648" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 34393-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:42.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:42.337" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:27:35.645" endtime="20210910 01:27:42.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:42.338" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:27:42.338" endtime="20210910 01:27:42.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:42.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:42.339" endtime="20210910 01:27:42.339"/>
</kw>
<status status="PASS" starttime="20210910 01:27:35.644" endtime="20210910 01:27:42.340"/>
</kw>
<msg timestamp="20210910 01:27:42.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:35.644" endtime="20210910 01:27:42.340"/>
</kw>
<status status="PASS" starttime="20210910 01:27:35.643" endtime="20210910 01:27:42.340"/>
</kw>
<status status="PASS" starttime="20210910 01:23:20.682" endtime="20210910 01:27:42.341"/>
</kw>
<status status="PASS" starttime="20210910 01:23:20.682" endtime="20210910 01:27:42.341"/>
</kw>
<status status="PASS" starttime="20210910 01:23:04.381" endtime="20210910 01:27:42.341"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:42.347" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:42.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:42.351" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:27:42.345" endtime="20210910 01:27:42.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:42.352" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:27:42.352" endtime="20210910 01:27:42.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:42.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:42.353" endtime="20210910 01:27:42.354"/>
</kw>
<status status="PASS" starttime="20210910 01:27:42.344" endtime="20210910 01:27:42.354"/>
</kw>
<msg timestamp="20210910 01:27:42.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:42.344" endtime="20210910 01:27:42.354"/>
</kw>
<msg timestamp="20210910 01:27:42.355" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:27:42.343" endtime="20210910 01:27:42.355"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:27:42.357" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:27:42.355" endtime="20210910 01:27:42.357"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:42.361" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:42.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:42.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:27:42.359" endtime="20210910 01:27:42.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:42.571" level="INFO"/>
<status status="PASS" starttime="20210910 01:27:42.570" endtime="20210910 01:27:42.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:42.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:42.571" endtime="20210910 01:27:42.573"/>
</kw>
<status status="PASS" starttime="20210910 01:27:42.358" endtime="20210910 01:27:42.573"/>
</kw>
<msg timestamp="20210910 01:27:42.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:42.358" endtime="20210910 01:27:42.573"/>
</kw>
<status status="PASS" starttime="20210910 01:27:42.357" endtime="20210910 01:27:42.574"/>
</kw>
<status status="PASS" starttime="20210910 01:27:42.357" endtime="20210910 01:27:42.574"/>
</kw>
<status status="PASS" starttime="20210910 01:27:42.343" endtime="20210910 01:27:42.574"/>
</kw>
<status status="PASS" starttime="20210910 01:27:42.342" endtime="20210910 01:27:42.574"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:42.578" level="INFO">Running command 'ozone sh bucket link 34393-source/no-such-bucket 34393-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:49.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:49.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:27:42.576" endtime="20210910 01:27:49.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:49.841" level="INFO"/>
<status status="PASS" starttime="20210910 01:27:49.840" endtime="20210910 01:27:49.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:49.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:49.841" endtime="20210910 01:27:49.842"/>
</kw>
<status status="PASS" starttime="20210910 01:27:42.576" endtime="20210910 01:27:49.842"/>
</kw>
<msg timestamp="20210910 01:27:49.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:42.575" endtime="20210910 01:27:49.842"/>
</kw>
<status status="PASS" starttime="20210910 01:27:42.574" endtime="20210910 01:27:49.842"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:49.846" level="INFO">Running command 'ozone sh key list 34393-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:57.564" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:27:57.564" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210910 01:27:49.843" endtime="20210910 01:27:57.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:57.567" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210910 01:27:57.565" endtime="20210910 01:27:57.567"/>
</kw>
<msg timestamp="20210910 01:27:57.568" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210910 01:27:49.843" endtime="20210910 01:27:57.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:27:57.569" endtime="20210910 01:27:57.570"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:27:42.341" endtime="20210910 01:27:57.571"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:57.583" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:57.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:57.588" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:27:57.578" endtime="20210910 01:27:57.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:57.590" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:27:57.589" endtime="20210910 01:27:57.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:57.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:57.591" endtime="20210910 01:27:57.592"/>
</kw>
<status status="PASS" starttime="20210910 01:27:57.577" endtime="20210910 01:27:57.593"/>
</kw>
<msg timestamp="20210910 01:27:57.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:57.576" endtime="20210910 01:27:57.593"/>
</kw>
<msg timestamp="20210910 01:27:57.594" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:27:57.576" endtime="20210910 01:27:57.594"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:27:57.596" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:27:57.595" endtime="20210910 01:27:57.596"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:57.601" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:27:57.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:27:57.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:27:57.599" endtime="20210910 01:27:57.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:27:57.613" level="INFO"/>
<status status="PASS" starttime="20210910 01:27:57.612" endtime="20210910 01:27:57.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:27:57.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:27:57.613" endtime="20210910 01:27:57.614"/>
</kw>
<status status="PASS" starttime="20210910 01:27:57.598" endtime="20210910 01:27:57.615"/>
</kw>
<msg timestamp="20210910 01:27:57.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:57.598" endtime="20210910 01:27:57.615"/>
</kw>
<status status="PASS" starttime="20210910 01:27:57.597" endtime="20210910 01:27:57.616"/>
</kw>
<status status="PASS" starttime="20210910 01:27:57.596" endtime="20210910 01:27:57.616"/>
</kw>
<status status="PASS" starttime="20210910 01:27:57.575" endtime="20210910 01:27:57.616"/>
</kw>
<status status="PASS" starttime="20210910 01:27:57.574" endtime="20210910 01:27:57.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:27:57.622" level="INFO">Running command 'ozone sh bucket link 34393-source/bucket1 34393-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:28:05.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:28:05.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:27:57.619" endtime="20210910 01:28:05.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:28:05.166" level="INFO"/>
<status status="PASS" starttime="20210910 01:28:05.165" endtime="20210910 01:28:05.166"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:28:05.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:28:05.166" endtime="20210910 01:28:05.167"/>
</kw>
<status status="PASS" starttime="20210910 01:27:57.618" endtime="20210910 01:28:05.168"/>
</kw>
<msg timestamp="20210910 01:28:05.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:27:57.618" endtime="20210910 01:28:05.168"/>
</kw>
<status status="PASS" starttime="20210910 01:27:57.617" endtime="20210910 01:28:05.169"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:28:05.174" level="INFO">Running command 'ozone sh bucket create 34393-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:28:13.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:28:13.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:28:05.172" endtime="20210910 01:28:13.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:28:13.348" level="INFO"/>
<status status="PASS" starttime="20210910 01:28:13.347" endtime="20210910 01:28:13.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:28:13.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:28:13.348" endtime="20210910 01:28:13.349"/>
</kw>
<status status="PASS" starttime="20210910 01:28:05.171" endtime="20210910 01:28:13.350"/>
</kw>
<msg timestamp="20210910 01:28:13.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:28:05.170" endtime="20210910 01:28:13.351"/>
</kw>
<status status="PASS" starttime="20210910 01:28:05.169" endtime="20210910 01:28:13.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:28:13.367" level="INFO">Running command 'ozone sh key put 34393-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:29:57.574" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210910 01:28:13.356" endtime="20210910 01:29:57.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210910 01:29:57.576" endtime="20210910 01:29:57.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210910 01:29:57.576" endtime="20210910 01:29:57.576"/>
</kw>
<status status="FAIL" starttime="20210910 01:28:13.355" endtime="20210910 01:29:57.577"/>
</kw>
<msg timestamp="20210910 01:29:57.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210910 01:28:13.355" endtime="20210910 01:29:57.577"/>
</kw>
<status status="FAIL" starttime="20210910 01:28:13.351" endtime="20210910 01:29:57.577"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210910 01:29:57.577" endtime="20210910 01:29:57.578"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210910 01:27:57.573" endtime="20210910 01:29:57.578">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:29:57.589" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:29:57.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:29:57.596" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:29:57.585" endtime="20210910 01:29:57.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:29:57.597" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:29:57.597" endtime="20210910 01:29:57.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:29:57.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:29:57.598" endtime="20210910 01:29:57.599"/>
</kw>
<status status="PASS" starttime="20210910 01:29:57.584" endtime="20210910 01:29:57.599"/>
</kw>
<msg timestamp="20210910 01:29:57.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:29:57.584" endtime="20210910 01:29:57.599"/>
</kw>
<msg timestamp="20210910 01:29:57.600" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:29:57.584" endtime="20210910 01:29:57.600"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:29:57.602" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:29:57.601" endtime="20210910 01:29:57.603"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:29:57.609" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:29:57.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:29:57.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:29:57.606" endtime="20210910 01:29:57.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:29:57.624" level="INFO"/>
<status status="PASS" starttime="20210910 01:29:57.622" endtime="20210910 01:29:57.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:29:57.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:29:57.624" endtime="20210910 01:29:57.625"/>
</kw>
<status status="PASS" starttime="20210910 01:29:57.605" endtime="20210910 01:29:57.625"/>
</kw>
<msg timestamp="20210910 01:29:57.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:29:57.605" endtime="20210910 01:29:57.625"/>
</kw>
<status status="PASS" starttime="20210910 01:29:57.604" endtime="20210910 01:29:57.626"/>
</kw>
<status status="PASS" starttime="20210910 01:29:57.603" endtime="20210910 01:29:57.626"/>
</kw>
<status status="PASS" starttime="20210910 01:29:57.583" endtime="20210910 01:29:57.626"/>
</kw>
<status status="PASS" starttime="20210910 01:29:57.582" endtime="20210910 01:29:57.626"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:29:57.634" level="INFO">Running command 'ozone sh key put 34393-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:31:57.582" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210910 01:29:57.630" endtime="20210910 01:31:57.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210910 01:31:57.584" endtime="20210910 01:31:57.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210910 01:31:57.584" endtime="20210910 01:31:57.584"/>
</kw>
<status status="FAIL" starttime="20210910 01:29:57.629" endtime="20210910 01:31:57.585"/>
</kw>
<msg timestamp="20210910 01:31:57.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210910 01:29:57.629" endtime="20210910 01:31:57.585"/>
</kw>
<status status="FAIL" starttime="20210910 01:29:57.627" endtime="20210910 01:31:57.585"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210910 01:31:57.586" endtime="20210910 01:31:57.586"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210910 01:29:57.581" endtime="20210910 01:31:57.586">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:31:57.594" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:31:57.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:31:57.598" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:31:57.591" endtime="20210910 01:31:57.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:31:57.601" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:31:57.599" endtime="20210910 01:31:57.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:31:57.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:31:57.601" endtime="20210910 01:31:57.602"/>
</kw>
<status status="PASS" starttime="20210910 01:31:57.590" endtime="20210910 01:31:57.602"/>
</kw>
<msg timestamp="20210910 01:31:57.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:31:57.590" endtime="20210910 01:31:57.603"/>
</kw>
<msg timestamp="20210910 01:31:57.603" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:31:57.589" endtime="20210910 01:31:57.603"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:31:57.604" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:31:57.603" endtime="20210910 01:31:57.604"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:31:57.610" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:31:57.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:31:57.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:31:57.607" endtime="20210910 01:31:57.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:31:57.624" level="INFO"/>
<status status="PASS" starttime="20210910 01:31:57.622" endtime="20210910 01:31:57.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:31:57.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:31:57.624" endtime="20210910 01:31:57.625"/>
</kw>
<status status="PASS" starttime="20210910 01:31:57.606" endtime="20210910 01:31:57.627"/>
</kw>
<msg timestamp="20210910 01:31:57.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:31:57.606" endtime="20210910 01:31:57.627"/>
</kw>
<status status="PASS" starttime="20210910 01:31:57.605" endtime="20210910 01:31:57.628"/>
</kw>
<status status="PASS" starttime="20210910 01:31:57.604" endtime="20210910 01:31:57.628"/>
</kw>
<status status="PASS" starttime="20210910 01:31:57.589" endtime="20210910 01:31:57.628"/>
</kw>
<status status="PASS" starttime="20210910 01:31:57.588" endtime="20210910 01:31:57.629"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:31:57.636" level="INFO">Running command 'ozone sh key list 34393-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:05.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:05.804" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210910 01:31:57.633" endtime="20210910 01:32:05.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:05.806" level="INFO">key1</msg>
<status status="PASS" starttime="20210910 01:32:05.805" endtime="20210910 01:32:05.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:05.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:05.807" endtime="20210910 01:32:05.809"/>
</kw>
<status status="PASS" starttime="20210910 01:31:57.632" endtime="20210910 01:32:05.810"/>
</kw>
<msg timestamp="20210910 01:32:05.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:31:57.630" endtime="20210910 01:32:05.810"/>
</kw>
<msg timestamp="20210910 01:32:05.811" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210910 01:31:57.629" endtime="20210910 01:32:05.811"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:05.817" level="INFO">Running command 'ozone sh key list 34393-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:12.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:12.202" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210910 01:32:05.814" endtime="20210910 01:32:12.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:12.204" level="INFO">key1</msg>
<status status="PASS" starttime="20210910 01:32:12.203" endtime="20210910 01:32:12.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:12.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:12.205" endtime="20210910 01:32:12.205"/>
</kw>
<status status="PASS" starttime="20210910 01:32:05.813" endtime="20210910 01:32:12.206"/>
</kw>
<msg timestamp="20210910 01:32:12.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:05.812" endtime="20210910 01:32:12.207"/>
</kw>
<msg timestamp="20210910 01:32:12.207" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210910 01:32:05.811" endtime="20210910 01:32:12.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:32:12.208" endtime="20210910 01:32:12.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:32:12.210" endtime="20210910 01:32:12.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210910 01:32:12.212" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210910 01:32:12.210" endtime="20210910 01:32:12.212"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210910 01:31:57.587" endtime="20210910 01:32:12.212">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:12.221" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:12.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:12.225" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:32:12.218" endtime="20210910 01:32:12.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:12.227" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:32:12.226" endtime="20210910 01:32:12.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:12.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:12.228" endtime="20210910 01:32:12.229"/>
</kw>
<status status="PASS" starttime="20210910 01:32:12.218" endtime="20210910 01:32:12.229"/>
</kw>
<msg timestamp="20210910 01:32:12.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:12.217" endtime="20210910 01:32:12.229"/>
</kw>
<msg timestamp="20210910 01:32:12.230" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:32:12.216" endtime="20210910 01:32:12.230"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:32:12.232" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:32:12.231" endtime="20210910 01:32:12.232"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:12.239" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:12.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:12.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:32:12.237" endtime="20210910 01:32:12.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:12.250" level="INFO"/>
<status status="PASS" starttime="20210910 01:32:12.249" endtime="20210910 01:32:12.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:12.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:12.251" endtime="20210910 01:32:12.252"/>
</kw>
<status status="PASS" starttime="20210910 01:32:12.235" endtime="20210910 01:32:12.252"/>
</kw>
<msg timestamp="20210910 01:32:12.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:12.235" endtime="20210910 01:32:12.252"/>
</kw>
<status status="PASS" starttime="20210910 01:32:12.233" endtime="20210910 01:32:12.253"/>
</kw>
<status status="PASS" starttime="20210910 01:32:12.232" endtime="20210910 01:32:12.253"/>
</kw>
<status status="PASS" starttime="20210910 01:32:12.215" endtime="20210910 01:32:12.253"/>
</kw>
<status status="PASS" starttime="20210910 01:32:12.214" endtime="20210910 01:32:12.253"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:12.257" level="INFO">Running command 'ozone sh key delete 34393-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:21.022" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:32:21.022" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210910 01:32:12.255" endtime="20210910 01:32:21.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:21.023" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210910 01:32:21.023" endtime="20210910 01:32:21.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:21.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210910 01:32:21.026" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210910 01:32:21.024" endtime="20210910 01:32:21.026"/>
</kw>
<status status="FAIL" starttime="20210910 01:32:12.254" endtime="20210910 01:32:21.027"/>
</kw>
<msg timestamp="20210910 01:32:21.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210910 01:32:12.254" endtime="20210910 01:32:21.027"/>
</kw>
<status status="FAIL" starttime="20210910 01:32:12.253" endtime="20210910 01:32:21.032"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210910 01:32:21.032" endtime="20210910 01:32:21.033"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 01:32:21.033" endtime="20210910 01:32:21.033"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210910 01:32:12.213" endtime="20210910 01:32:21.034">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:21.045" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:21.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:21.051" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:32:21.042" endtime="20210910 01:32:21.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:21.053" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:32:21.051" endtime="20210910 01:32:21.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:21.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:21.053" endtime="20210910 01:32:21.055"/>
</kw>
<status status="PASS" starttime="20210910 01:32:21.041" endtime="20210910 01:32:21.055"/>
</kw>
<msg timestamp="20210910 01:32:21.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:21.040" endtime="20210910 01:32:21.055"/>
</kw>
<msg timestamp="20210910 01:32:21.056" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:32:21.039" endtime="20210910 01:32:21.056"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:32:21.057" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:32:21.056" endtime="20210910 01:32:21.057"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:21.064" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:21.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:21.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:32:21.060" endtime="20210910 01:32:21.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:21.074" level="INFO"/>
<status status="PASS" starttime="20210910 01:32:21.073" endtime="20210910 01:32:21.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:21.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:21.074" endtime="20210910 01:32:21.075"/>
</kw>
<status status="PASS" starttime="20210910 01:32:21.060" endtime="20210910 01:32:21.075"/>
</kw>
<msg timestamp="20210910 01:32:21.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:21.059" endtime="20210910 01:32:21.076"/>
</kw>
<status status="PASS" starttime="20210910 01:32:21.058" endtime="20210910 01:32:21.076"/>
</kw>
<status status="PASS" starttime="20210910 01:32:21.057" endtime="20210910 01:32:21.076"/>
</kw>
<status status="PASS" starttime="20210910 01:32:21.038" endtime="20210910 01:32:21.076"/>
</kw>
<status status="PASS" starttime="20210910 01:32:21.037" endtime="20210910 01:32:21.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:21.082" level="INFO">Running command 'ozone sh bucket list 34393-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:29.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:29.168" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210910 01:32:21.079" endtime="20210910 01:32:29.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:29.170" level="INFO">{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:27:49.764Z",
  "modificationTime" : "2021-09-10T01:27:49.764Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:27:09.442Z",
  "modificationTime" : "2021-09-10T01:27:42.108Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:28:04.845Z",
  "modificationTime" : "2021-09-10T01:28:04.845Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:26:53.440Z",
  "modificationTime" : "2021-09-10T01:27:35.552Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:27:01.638Z",
  "modificationTime" : "2021-09-10T01:27:01.638Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210910 01:32:29.169" endtime="20210910 01:32:29.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:29.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:29.170" endtime="20210910 01:32:29.171"/>
</kw>
<status status="PASS" starttime="20210910 01:32:21.078" endtime="20210910 01:32:29.171"/>
</kw>
<msg timestamp="20210910 01:32:29.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:21.078" endtime="20210910 01:32:29.172"/>
</kw>
<msg timestamp="20210910 01:32:29.173" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210910 01:32:21.077" endtime="20210910 01:32:29.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:32:29.173" endtime="20210910 01:32:29.174"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:32:29.174" endtime="20210910 01:32:29.174"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:32:21.035" endtime="20210910 01:32:29.175"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:29.185" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:29.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:29.190" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:32:29.182" endtime="20210910 01:32:29.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:29.192" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:32:29.191" endtime="20210910 01:32:29.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:29.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:29.192" endtime="20210910 01:32:29.193"/>
</kw>
<status status="PASS" starttime="20210910 01:32:29.181" endtime="20210910 01:32:29.194"/>
</kw>
<msg timestamp="20210910 01:32:29.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:29.181" endtime="20210910 01:32:29.194"/>
</kw>
<msg timestamp="20210910 01:32:29.195" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:32:29.180" endtime="20210910 01:32:29.195"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:32:29.197" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:32:29.196" endtime="20210910 01:32:29.197"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:29.204" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:29.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:29.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:32:29.201" endtime="20210910 01:32:29.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:29.217" level="INFO"/>
<status status="PASS" starttime="20210910 01:32:29.216" endtime="20210910 01:32:29.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:29.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:29.217" endtime="20210910 01:32:29.218"/>
</kw>
<status status="PASS" starttime="20210910 01:32:29.200" endtime="20210910 01:32:29.219"/>
</kw>
<msg timestamp="20210910 01:32:29.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:29.199" endtime="20210910 01:32:29.219"/>
</kw>
<status status="PASS" starttime="20210910 01:32:29.197" endtime="20210910 01:32:29.219"/>
</kw>
<status status="PASS" starttime="20210910 01:32:29.197" endtime="20210910 01:32:29.219"/>
</kw>
<status status="PASS" starttime="20210910 01:32:29.180" endtime="20210910 01:32:29.220"/>
</kw>
<status status="PASS" starttime="20210910 01:32:29.179" endtime="20210910 01:32:29.220"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:29.225" level="INFO">Running command 'ozone sh bucket info 34393-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:38.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:38.153" level="INFO">${output} = {
  "volumeName" : "34393-target",
  "bucketName" : "link1",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-10T01:28:04.845Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210910 01:32:29.222" endtime="20210910 01:32:38.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:38.154" level="INFO">{
  "volumeName" : "34393-target",
  "bucketName" : "link1",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-10T01:28:04.845Z",
  "modificationTime" : "2021-09-10T01:28:04.845Z"
}</msg>
<status status="PASS" starttime="20210910 01:32:38.154" endtime="20210910 01:32:38.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:38.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:38.155" endtime="20210910 01:32:38.156"/>
</kw>
<status status="PASS" starttime="20210910 01:32:29.221" endtime="20210910 01:32:38.157"/>
</kw>
<msg timestamp="20210910 01:32:38.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:29.221" endtime="20210910 01:32:38.157"/>
</kw>
<msg timestamp="20210910 01:32:38.158" level="INFO">${result} = {
  "volumeName" : "34393-target",
  "bucketName" : "link1",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-10T01:28:04.845Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210910 01:32:29.220" endtime="20210910 01:32:38.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:32:38.159" endtime="20210910 01:32:38.160"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:32:38.160" endtime="20210910 01:32:38.161"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:32:38.161" endtime="20210910 01:32:38.162"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:32:38.163" endtime="20210910 01:32:38.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:32:38.164" endtime="20210910 01:32:38.164"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:32:38.165" endtime="20210910 01:32:38.165"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:32:38.166" endtime="20210910 01:32:38.166"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:32:29.177" endtime="20210910 01:32:38.167"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:38.177" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:38.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:38.184" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:32:38.174" endtime="20210910 01:32:38.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:38.187" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:32:38.186" endtime="20210910 01:32:38.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:38.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:38.188" endtime="20210910 01:32:38.189"/>
</kw>
<status status="PASS" starttime="20210910 01:32:38.174" endtime="20210910 01:32:38.190"/>
</kw>
<msg timestamp="20210910 01:32:38.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:38.173" endtime="20210910 01:32:38.190"/>
</kw>
<msg timestamp="20210910 01:32:38.191" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:32:38.172" endtime="20210910 01:32:38.191"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:32:38.192" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:32:38.191" endtime="20210910 01:32:38.192"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:38.200" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:38.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:38.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:32:38.197" endtime="20210910 01:32:38.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:38.213" level="INFO"/>
<status status="PASS" starttime="20210910 01:32:38.211" endtime="20210910 01:32:38.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:38.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:38.213" endtime="20210910 01:32:38.214"/>
</kw>
<status status="PASS" starttime="20210910 01:32:38.196" endtime="20210910 01:32:38.214"/>
</kw>
<msg timestamp="20210910 01:32:38.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:38.195" endtime="20210910 01:32:38.214"/>
</kw>
<status status="PASS" starttime="20210910 01:32:38.193" endtime="20210910 01:32:38.215"/>
</kw>
<status status="PASS" starttime="20210910 01:32:38.192" endtime="20210910 01:32:38.215"/>
</kw>
<status status="PASS" starttime="20210910 01:32:38.171" endtime="20210910 01:32:38.215"/>
</kw>
<status status="PASS" starttime="20210910 01:32:38.170" endtime="20210910 01:32:38.215"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:38.221" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 34393-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:46.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:46.409" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:32:38.218" endtime="20210910 01:32:46.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:46.411" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:32:46.410" endtime="20210910 01:32:46.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:46.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:46.411" endtime="20210910 01:32:46.412"/>
</kw>
<status status="PASS" starttime="20210910 01:32:38.217" endtime="20210910 01:32:46.412"/>
</kw>
<msg timestamp="20210910 01:32:46.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:38.217" endtime="20210910 01:32:46.412"/>
</kw>
<status status="PASS" starttime="20210910 01:32:38.216" endtime="20210910 01:32:46.413"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:46.420" level="INFO">Running command 'ozone sh bucket getacl 34393-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:32:54.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:32:54.320" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210910 01:32:46.416" endtime="20210910 01:32:54.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:32:54.323" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210910 01:32:54.321" endtime="20210910 01:32:54.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:32:54.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:32:54.324" endtime="20210910 01:32:54.325"/>
</kw>
<status status="PASS" starttime="20210910 01:32:46.415" endtime="20210910 01:32:54.326"/>
</kw>
<msg timestamp="20210910 01:32:54.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:46.415" endtime="20210910 01:32:54.327"/>
</kw>
<msg timestamp="20210910 01:32:54.328" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210910 01:32:46.414" endtime="20210910 01:32:54.328"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:32:54.329" endtime="20210910 01:32:54.330"/>
</kw>
<status status="PASS" starttime="20210910 01:32:46.413" endtime="20210910 01:32:54.331"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:32:54.340" level="INFO">Running command 'ozone sh bucket getacl 34393-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:02.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:02.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:32:54.337" endtime="20210910 01:33:02.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:02.506" level="INFO"/>
<status status="PASS" starttime="20210910 01:33:02.501" endtime="20210910 01:33:02.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:02.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:02.506" endtime="20210910 01:33:02.507"/>
</kw>
<status status="PASS" starttime="20210910 01:32:54.335" endtime="20210910 01:33:02.508"/>
</kw>
<msg timestamp="20210910 01:33:02.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:32:54.335" endtime="20210910 01:33:02.508"/>
</kw>
<msg timestamp="20210910 01:33:02.509" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210910 01:32:54.334" endtime="20210910 01:33:02.509"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:33:02.509" endtime="20210910 01:33:02.510"/>
</kw>
<status status="PASS" starttime="20210910 01:32:54.331" endtime="20210910 01:33:02.511"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:02.519" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 34393-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:10.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:10.878" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:33:02.516" endtime="20210910 01:33:10.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:10.881" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:33:10.879" endtime="20210910 01:33:10.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:10.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:10.882" endtime="20210910 01:33:10.883"/>
</kw>
<status status="PASS" starttime="20210910 01:33:02.514" endtime="20210910 01:33:10.884"/>
</kw>
<msg timestamp="20210910 01:33:10.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:02.513" endtime="20210910 01:33:10.885"/>
</kw>
<status status="PASS" starttime="20210910 01:33:02.512" endtime="20210910 01:33:10.885"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:10.894" level="INFO">Running command 'ozone sh bucket getacl 34393-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:19.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:19.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:33:10.891" endtime="20210910 01:33:19.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:19.574" level="INFO"/>
<status status="PASS" starttime="20210910 01:33:19.572" endtime="20210910 01:33:19.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:19.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:19.574" endtime="20210910 01:33:19.577"/>
</kw>
<status status="PASS" starttime="20210910 01:33:10.890" endtime="20210910 01:33:19.577"/>
</kw>
<msg timestamp="20210910 01:33:19.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:10.890" endtime="20210910 01:33:19.577"/>
</kw>
<msg timestamp="20210910 01:33:19.578" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210910 01:33:10.889" endtime="20210910 01:33:19.578"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:33:19.578" endtime="20210910 01:33:19.579"/>
</kw>
<status status="PASS" starttime="20210910 01:33:10.886" endtime="20210910 01:33:19.579"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:19.585" level="INFO">Running command 'ozone sh bucket getacl 34393-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:28.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:28.211" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210910 01:33:19.583" endtime="20210910 01:33:28.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:28.215" level="INFO">READ</msg>
<status status="PASS" starttime="20210910 01:33:28.213" endtime="20210910 01:33:28.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:28.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:28.215" endtime="20210910 01:33:28.217"/>
</kw>
<status status="PASS" starttime="20210910 01:33:19.582" endtime="20210910 01:33:28.219"/>
</kw>
<msg timestamp="20210910 01:33:28.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:19.582" endtime="20210910 01:33:28.219"/>
</kw>
<msg timestamp="20210910 01:33:28.220" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210910 01:33:19.580" endtime="20210910 01:33:28.220"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:33:28.220" endtime="20210910 01:33:28.222"/>
</kw>
<status status="PASS" starttime="20210910 01:33:19.579" endtime="20210910 01:33:28.222"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:32:38.168" endtime="20210910 01:33:28.223"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:28.234" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:28.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:28.241" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:33:28.231" endtime="20210910 01:33:28.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:28.243" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:33:28.242" endtime="20210910 01:33:28.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:28.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:28.244" endtime="20210910 01:33:28.245"/>
</kw>
<status status="PASS" starttime="20210910 01:33:28.230" endtime="20210910 01:33:28.246"/>
</kw>
<msg timestamp="20210910 01:33:28.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:28.229" endtime="20210910 01:33:28.246"/>
</kw>
<msg timestamp="20210910 01:33:28.247" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:33:28.227" endtime="20210910 01:33:28.247"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:33:28.248" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:33:28.247" endtime="20210910 01:33:28.248"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:28.255" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:28.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:28.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:33:28.253" endtime="20210910 01:33:28.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:28.441" level="INFO"/>
<status status="PASS" starttime="20210910 01:33:28.440" endtime="20210910 01:33:28.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:28.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:28.441" endtime="20210910 01:33:28.442"/>
</kw>
<status status="PASS" starttime="20210910 01:33:28.252" endtime="20210910 01:33:28.442"/>
</kw>
<msg timestamp="20210910 01:33:28.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:28.251" endtime="20210910 01:33:28.443"/>
</kw>
<status status="PASS" starttime="20210910 01:33:28.250" endtime="20210910 01:33:28.443"/>
</kw>
<status status="PASS" starttime="20210910 01:33:28.249" endtime="20210910 01:33:28.443"/>
</kw>
<status status="PASS" starttime="20210910 01:33:28.226" endtime="20210910 01:33:28.443"/>
</kw>
<status status="PASS" starttime="20210910 01:33:28.226" endtime="20210910 01:33:28.443"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:28.448" level="INFO">Running command 'ozone sh bucket link 34393-source/bucket2 34393-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:36.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:36.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:33:28.445" endtime="20210910 01:33:36.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:36.445" level="INFO"/>
<status status="PASS" starttime="20210910 01:33:36.444" endtime="20210910 01:33:36.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:36.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:36.445" endtime="20210910 01:33:36.446"/>
</kw>
<status status="PASS" starttime="20210910 01:33:28.445" endtime="20210910 01:33:36.447"/>
</kw>
<msg timestamp="20210910 01:33:36.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:28.444" endtime="20210910 01:33:36.447"/>
</kw>
<status status="PASS" starttime="20210910 01:33:28.444" endtime="20210910 01:33:36.447"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:36.451" level="INFO">Running command 'ozone sh bucket create 34393-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:43.415" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:33:43.416" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210910 01:33:36.448" endtime="20210910 01:33:43.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:43.417" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210910 01:33:43.416" endtime="20210910 01:33:43.417"/>
</kw>
<msg timestamp="20210910 01:33:43.418" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210910 01:33:36.448" endtime="20210910 01:33:43.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:33:43.418" endtime="20210910 01:33:43.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:43.424" level="INFO">Running command 'ozone sh bucket create 34393-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:51.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:51.503" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:33:43.421" endtime="20210910 01:33:51.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:51.505" level="INFO"/>
<status status="PASS" starttime="20210910 01:33:51.504" endtime="20210910 01:33:51.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:51.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:51.505" endtime="20210910 01:33:51.505"/>
</kw>
<status status="PASS" starttime="20210910 01:33:43.420" endtime="20210910 01:33:51.506"/>
</kw>
<msg timestamp="20210910 01:33:51.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:43.420" endtime="20210910 01:33:51.506"/>
</kw>
<status status="PASS" starttime="20210910 01:33:43.419" endtime="20210910 01:33:51.506"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:51.512" level="INFO">Running command 'ozone sh bucket link 34393-source/bucket1 34393-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:59.641" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:33:59.641" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210910 01:33:51.508" endtime="20210910 01:33:59.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:59.643" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210910 01:33:59.642" endtime="20210910 01:33:59.643"/>
</kw>
<msg timestamp="20210910 01:33:59.643" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210910 01:33:51.507" endtime="20210910 01:33:59.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:33:59.644" endtime="20210910 01:33:59.644"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:33:28.224" endtime="20210910 01:33:59.644"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:59.656" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:59.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:59.661" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:33:59.653" endtime="20210910 01:33:59.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:59.664" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:33:59.663" endtime="20210910 01:33:59.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:59.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:59.665" endtime="20210910 01:33:59.666"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.651" endtime="20210910 01:33:59.667"/>
</kw>
<msg timestamp="20210910 01:33:59.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:59.651" endtime="20210910 01:33:59.667"/>
</kw>
<msg timestamp="20210910 01:33:59.668" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:33:59.649" endtime="20210910 01:33:59.668"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:33:59.669" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:33:59.668" endtime="20210910 01:33:59.669"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:59.676" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:59.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:59.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:33:59.673" endtime="20210910 01:33:59.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:59.688" level="INFO"/>
<status status="PASS" starttime="20210910 01:33:59.687" endtime="20210910 01:33:59.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:59.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:59.689" endtime="20210910 01:33:59.689"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.672" endtime="20210910 01:33:59.690"/>
</kw>
<msg timestamp="20210910 01:33:59.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:59.672" endtime="20210910 01:33:59.690"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.670" endtime="20210910 01:33:59.690"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.670" endtime="20210910 01:33:59.690"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.648" endtime="20210910 01:33:59.690"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.647" endtime="20210910 01:33:59.691"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:59.701" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:59.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:59.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:33:59.698" endtime="20210910 01:33:59.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:59.709" level="INFO"/>
<status status="PASS" starttime="20210910 01:33:59.708" endtime="20210910 01:33:59.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:59.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:59.710" endtime="20210910 01:33:59.711"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.696" endtime="20210910 01:33:59.712"/>
</kw>
<msg timestamp="20210910 01:33:59.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:59.696" endtime="20210910 01:33:59.712"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.695" endtime="20210910 01:33:59.713"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:59.719" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:59.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:59.725" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:33:59.716" endtime="20210910 01:33:59.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:59.728" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:33:59.726" endtime="20210910 01:33:59.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:59.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:59.728" endtime="20210910 01:33:59.729"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.715" endtime="20210910 01:33:59.729"/>
</kw>
<msg timestamp="20210910 01:33:59.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:59.715" endtime="20210910 01:33:59.730"/>
</kw>
<msg timestamp="20210910 01:33:59.730" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:33:59.714" endtime="20210910 01:33:59.730"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:33:59.731" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:33:59.730" endtime="20210910 01:33:59.732"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:59.740" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:33:59.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:33:59.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:33:59.735" endtime="20210910 01:33:59.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:33:59.752" level="INFO"/>
<status status="PASS" starttime="20210910 01:33:59.751" endtime="20210910 01:33:59.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:33:59.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:33:59.753" endtime="20210910 01:33:59.754"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.734" endtime="20210910 01:33:59.754"/>
</kw>
<msg timestamp="20210910 01:33:59.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:33:59.734" endtime="20210910 01:33:59.755"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.732" endtime="20210910 01:33:59.755"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.732" endtime="20210910 01:33:59.755"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.713" endtime="20210910 01:33:59.756"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.713" endtime="20210910 01:33:59.756"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:33:59.760" level="INFO">Running command 'ozone sh key list 34393-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:07.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:07.675" level="INFO">${output} = {
  "volumeName" : "34393-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-10T01:23:35.137Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210910 01:33:59.757" endtime="20210910 01:34:07.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:07.677" level="INFO">{
  "volumeName" : "34393-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-10T01:23:35.137Z",
  "modificationTime" : "2021-09-10T01:26:38.505Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210910 01:34:07.676" endtime="20210910 01:34:07.677"/>
</kw>
<msg timestamp="20210910 01:34:07.677" level="INFO">${result} = {
  "volumeName" : "34393-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-10T01:23:35.137Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210910 01:33:59.756" endtime="20210910 01:34:07.677"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:34:07.677" endtime="20210910 01:34:07.678"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.694" endtime="20210910 01:34:07.678"/>
</kw>
<status status="PASS" starttime="20210910 01:33:59.691" endtime="20210910 01:34:07.678"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:33:59.645" endtime="20210910 01:34:07.678"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:07.706" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:07.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:07.711" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:34:07.692" endtime="20210910 01:34:07.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:07.712" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:34:07.711" endtime="20210910 01:34:07.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:07.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:07.712" endtime="20210910 01:34:07.713"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.691" endtime="20210910 01:34:07.713"/>
</kw>
<msg timestamp="20210910 01:34:07.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:07.691" endtime="20210910 01:34:07.713"/>
</kw>
<msg timestamp="20210910 01:34:07.716" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:34:07.690" endtime="20210910 01:34:07.716"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:34:07.717" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:34:07.716" endtime="20210910 01:34:07.717"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:07.727" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:07.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:07.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:34:07.722" endtime="20210910 01:34:07.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:07.738" level="INFO"/>
<status status="PASS" starttime="20210910 01:34:07.737" endtime="20210910 01:34:07.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:07.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:07.738" endtime="20210910 01:34:07.739"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.722" endtime="20210910 01:34:07.739"/>
</kw>
<msg timestamp="20210910 01:34:07.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:07.721" endtime="20210910 01:34:07.739"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.719" endtime="20210910 01:34:07.740"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.718" endtime="20210910 01:34:07.740"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.687" endtime="20210910 01:34:07.741"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.686" endtime="20210910 01:34:07.741"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:07.747" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:07.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:07.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:34:07.744" endtime="20210910 01:34:07.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:07.753" level="INFO"/>
<status status="PASS" starttime="20210910 01:34:07.753" endtime="20210910 01:34:07.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:07.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:07.754" endtime="20210910 01:34:07.754"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.743" endtime="20210910 01:34:07.755"/>
</kw>
<msg timestamp="20210910 01:34:07.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:07.743" endtime="20210910 01:34:07.755"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.742" endtime="20210910 01:34:07.755"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:07.762" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:07.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:07.766" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:34:07.758" endtime="20210910 01:34:07.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:07.767" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:34:07.767" endtime="20210910 01:34:07.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:07.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:07.768" endtime="20210910 01:34:07.768"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.757" endtime="20210910 01:34:07.769"/>
</kw>
<msg timestamp="20210910 01:34:07.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:07.757" endtime="20210910 01:34:07.769"/>
</kw>
<msg timestamp="20210910 01:34:07.769" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:34:07.756" endtime="20210910 01:34:07.769"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:34:07.770" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:34:07.770" endtime="20210910 01:34:07.770"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:07.776" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:07.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:07.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:34:07.773" endtime="20210910 01:34:07.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:07.787" level="INFO"/>
<status status="PASS" starttime="20210910 01:34:07.786" endtime="20210910 01:34:07.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:07.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:07.787" endtime="20210910 01:34:07.788"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.772" endtime="20210910 01:34:07.789"/>
</kw>
<msg timestamp="20210910 01:34:07.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:07.772" endtime="20210910 01:34:07.789"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.771" endtime="20210910 01:34:07.789"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.771" endtime="20210910 01:34:07.790"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.756" endtime="20210910 01:34:07.790"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.755" endtime="20210910 01:34:07.790"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:07.795" level="INFO">Running command 'ozone sh key list 34393-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:16.243" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:34:16.243" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 34393-target unreadable-link null</msg>
<status status="PASS" starttime="20210910 01:34:07.791" endtime="20210910 01:34:16.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:16.246" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 34393-target unreadable-link null</msg>
<status status="PASS" starttime="20210910 01:34:16.244" endtime="20210910 01:34:16.246"/>
</kw>
<msg timestamp="20210910 01:34:16.247" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 34393-target unreadable-link null</msg>
<status status="PASS" starttime="20210910 01:34:07.790" endtime="20210910 01:34:16.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:34:16.248" endtime="20210910 01:34:16.248"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.742" endtime="20210910 01:34:16.249"/>
</kw>
<status status="PASS" starttime="20210910 01:34:07.741" endtime="20210910 01:34:16.249"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:34:07.681" endtime="20210910 01:34:16.250"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:16.264" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:16.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:16.269" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:34:16.260" endtime="20210910 01:34:16.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:16.271" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:34:16.270" endtime="20210910 01:34:16.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:16.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:16.272" endtime="20210910 01:34:16.272"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.258" endtime="20210910 01:34:16.273"/>
</kw>
<msg timestamp="20210910 01:34:16.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:16.258" endtime="20210910 01:34:16.273"/>
</kw>
<msg timestamp="20210910 01:34:16.273" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:34:16.256" endtime="20210910 01:34:16.273"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:34:16.274" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:34:16.274" endtime="20210910 01:34:16.274"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:16.281" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:16.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:16.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:34:16.279" endtime="20210910 01:34:16.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:16.296" level="INFO"/>
<status status="PASS" starttime="20210910 01:34:16.295" endtime="20210910 01:34:16.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:16.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:16.296" endtime="20210910 01:34:16.298"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.278" endtime="20210910 01:34:16.298"/>
</kw>
<msg timestamp="20210910 01:34:16.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:16.277" endtime="20210910 01:34:16.299"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.275" endtime="20210910 01:34:16.299"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.275" endtime="20210910 01:34:16.300"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.255" endtime="20210910 01:34:16.300"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.253" endtime="20210910 01:34:16.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:16.307" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:16.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:16.312" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:34:16.305" endtime="20210910 01:34:16.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:16.314" level="INFO"/>
<status status="PASS" starttime="20210910 01:34:16.314" endtime="20210910 01:34:16.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:16.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:16.315" endtime="20210910 01:34:16.316"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.304" endtime="20210910 01:34:16.316"/>
</kw>
<msg timestamp="20210910 01:34:16.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:16.303" endtime="20210910 01:34:16.316"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.302" endtime="20210910 01:34:16.316"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:16.322" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:16.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:16.326" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:34:16.320" endtime="20210910 01:34:16.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:16.328" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:34:16.327" endtime="20210910 01:34:16.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:16.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:16.329" endtime="20210910 01:34:16.330"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.319" endtime="20210910 01:34:16.331"/>
</kw>
<msg timestamp="20210910 01:34:16.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:16.318" endtime="20210910 01:34:16.331"/>
</kw>
<msg timestamp="20210910 01:34:16.332" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:34:16.318" endtime="20210910 01:34:16.332"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:34:16.335" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:34:16.333" endtime="20210910 01:34:16.335"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:16.341" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:16.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:16.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:34:16.339" endtime="20210910 01:34:16.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:16.353" level="INFO"/>
<status status="PASS" starttime="20210910 01:34:16.352" endtime="20210910 01:34:16.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:16.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:16.353" endtime="20210910 01:34:16.354"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.338" endtime="20210910 01:34:16.354"/>
</kw>
<msg timestamp="20210910 01:34:16.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:16.337" endtime="20210910 01:34:16.354"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.336" endtime="20210910 01:34:16.355"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.335" endtime="20210910 01:34:16.355"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.317" endtime="20210910 01:34:16.355"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.317" endtime="20210910 01:34:16.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:16.360" level="INFO">Running command 'ozone sh bucket info 34393-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:25.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:25.147" level="INFO">${output} = {
  "volumeName" : "34393-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-10T01:27:09.442Z...</msg>
<status status="PASS" starttime="20210910 01:34:16.358" endtime="20210910 01:34:25.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:25.150" level="INFO">{
  "volumeName" : "34393-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-10T01:27:09.442Z",
  "modificationTime" : "2021-09-10T01:27:42.108Z"
}</msg>
<status status="PASS" starttime="20210910 01:34:25.149" endtime="20210910 01:34:25.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:25.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:25.151" endtime="20210910 01:34:25.152"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.356" endtime="20210910 01:34:25.153"/>
</kw>
<msg timestamp="20210910 01:34:25.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:16.356" endtime="20210910 01:34:25.153"/>
</kw>
<msg timestamp="20210910 01:34:25.155" level="INFO">${result} = {
  "volumeName" : "34393-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-10T01:27:09.442Z...</msg>
<status status="PASS" starttime="20210910 01:34:16.355" endtime="20210910 01:34:25.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:34:25.155" endtime="20210910 01:34:25.156"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:34:25.156" endtime="20210910 01:34:25.156"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:25.161" level="INFO">Running command 'ozone sh key list 34393-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:32.927" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:34:32.928" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 34393-source unreadable-bucket </msg>
<status status="PASS" starttime="20210910 01:34:25.157" endtime="20210910 01:34:32.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:32.929" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 34393-source unreadable-bucket </msg>
<status status="PASS" starttime="20210910 01:34:32.928" endtime="20210910 01:34:32.929"/>
</kw>
<msg timestamp="20210910 01:34:32.929" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 34393-source unreadable-bucket </msg>
<status status="PASS" starttime="20210910 01:34:25.157" endtime="20210910 01:34:32.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:34:32.930" endtime="20210910 01:34:32.930"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.301" endtime="20210910 01:34:32.930"/>
</kw>
<status status="PASS" starttime="20210910 01:34:16.301" endtime="20210910 01:34:32.930"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:34:16.251" endtime="20210910 01:34:32.931"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:32.941" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:32.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:32.946" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:34:32.938" endtime="20210910 01:34:32.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:32.948" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:34:32.947" endtime="20210910 01:34:32.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:32.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:32.949" endtime="20210910 01:34:32.950"/>
</kw>
<status status="PASS" starttime="20210910 01:34:32.937" endtime="20210910 01:34:32.950"/>
</kw>
<msg timestamp="20210910 01:34:32.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:32.936" endtime="20210910 01:34:32.951"/>
</kw>
<msg timestamp="20210910 01:34:32.951" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:34:32.936" endtime="20210910 01:34:32.951"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:34:32.952" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:34:32.952" endtime="20210910 01:34:32.952"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:32.958" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:32.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:32.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:34:32.956" endtime="20210910 01:34:32.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:32.969" level="INFO"/>
<status status="PASS" starttime="20210910 01:34:32.968" endtime="20210910 01:34:32.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:32.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:32.969" endtime="20210910 01:34:32.970"/>
</kw>
<status status="PASS" starttime="20210910 01:34:32.955" endtime="20210910 01:34:32.970"/>
</kw>
<msg timestamp="20210910 01:34:32.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:32.955" endtime="20210910 01:34:32.971"/>
</kw>
<status status="PASS" starttime="20210910 01:34:32.954" endtime="20210910 01:34:32.971"/>
</kw>
<status status="PASS" starttime="20210910 01:34:32.953" endtime="20210910 01:34:32.971"/>
</kw>
<status status="PASS" starttime="20210910 01:34:32.935" endtime="20210910 01:34:32.971"/>
</kw>
<status status="PASS" starttime="20210910 01:34:32.934" endtime="20210910 01:34:32.972"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:32.977" level="INFO">Running command 'ozone sh bucket link 34393-target/loop1 34393-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:40.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:40.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:34:32.974" endtime="20210910 01:34:40.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:40.833" level="INFO"/>
<status status="PASS" starttime="20210910 01:34:40.831" endtime="20210910 01:34:40.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:40.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:40.833" endtime="20210910 01:34:40.834"/>
</kw>
<status status="PASS" starttime="20210910 01:34:32.973" endtime="20210910 01:34:40.836"/>
</kw>
<msg timestamp="20210910 01:34:40.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:32.973" endtime="20210910 01:34:40.837"/>
</kw>
<status status="PASS" starttime="20210910 01:34:32.972" endtime="20210910 01:34:40.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:40.845" level="INFO">Running command 'ozone sh bucket link 34393-target/loop2 34393-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:48.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:48.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:34:40.842" endtime="20210910 01:34:48.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:48.610" level="INFO"/>
<status status="PASS" starttime="20210910 01:34:48.609" endtime="20210910 01:34:48.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:48.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:48.610" endtime="20210910 01:34:48.611"/>
</kw>
<status status="PASS" starttime="20210910 01:34:40.840" endtime="20210910 01:34:48.611"/>
</kw>
<msg timestamp="20210910 01:34:48.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:40.840" endtime="20210910 01:34:48.611"/>
</kw>
<status status="PASS" starttime="20210910 01:34:40.838" endtime="20210910 01:34:48.612"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:48.617" level="INFO">Running command 'ozone sh bucket link 34393-target/loop3 34393-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:34:56.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:34:56.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:34:48.613" endtime="20210910 01:34:56.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:34:56.432" level="INFO"/>
<status status="PASS" starttime="20210910 01:34:56.432" endtime="20210910 01:34:56.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:34:56.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:34:56.433" endtime="20210910 01:34:56.434"/>
</kw>
<status status="PASS" starttime="20210910 01:34:48.613" endtime="20210910 01:34:56.434"/>
</kw>
<msg timestamp="20210910 01:34:56.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:34:48.612" endtime="20210910 01:34:56.435"/>
</kw>
<status status="PASS" starttime="20210910 01:34:48.612" endtime="20210910 01:34:56.435"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:34:56.440" level="INFO">Running command 'ozone sh key list 34393-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:35:04.428" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:35:04.428" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210910 01:34:56.436" endtime="20210910 01:35:04.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:35:04.429" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210910 01:35:04.428" endtime="20210910 01:35:04.429"/>
</kw>
<msg timestamp="20210910 01:35:04.430" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210910 01:34:56.435" endtime="20210910 01:35:04.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:35:04.430" endtime="20210910 01:35:04.431"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:34:32.932" endtime="20210910 01:35:04.431"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:35:04.440" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:35:04.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:35:04.445" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:35:04.437" endtime="20210910 01:35:04.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:35:04.448" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:35:04.447" endtime="20210910 01:35:04.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:35:04.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:35:04.448" endtime="20210910 01:35:04.450"/>
</kw>
<status status="PASS" starttime="20210910 01:35:04.436" endtime="20210910 01:35:04.450"/>
</kw>
<msg timestamp="20210910 01:35:04.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:35:04.435" endtime="20210910 01:35:04.451"/>
</kw>
<msg timestamp="20210910 01:35:04.451" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:35:04.434" endtime="20210910 01:35:04.451"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:35:04.453" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:35:04.452" endtime="20210910 01:35:04.453"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:35:04.460" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:35:04.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:35:04.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:35:04.457" endtime="20210910 01:35:04.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:35:04.471" level="INFO"/>
<status status="PASS" starttime="20210910 01:35:04.470" endtime="20210910 01:35:04.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:35:04.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:35:04.472" endtime="20210910 01:35:04.473"/>
</kw>
<status status="PASS" starttime="20210910 01:35:04.456" endtime="20210910 01:35:04.473"/>
</kw>
<msg timestamp="20210910 01:35:04.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:35:04.456" endtime="20210910 01:35:04.473"/>
</kw>
<status status="PASS" starttime="20210910 01:35:04.454" endtime="20210910 01:35:04.474"/>
</kw>
<status status="PASS" starttime="20210910 01:35:04.453" endtime="20210910 01:35:04.474"/>
</kw>
<status status="PASS" starttime="20210910 01:35:04.434" endtime="20210910 01:35:04.474"/>
</kw>
<status status="PASS" starttime="20210910 01:35:04.433" endtime="20210910 01:35:04.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:35:04.480" level="INFO">Running command 'ozone sh bucket link 34393-source/bucket1 34393-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:35:12.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:35:12.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:35:04.477" endtime="20210910 01:35:12.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:35:12.537" level="INFO"/>
<status status="PASS" starttime="20210910 01:35:12.536" endtime="20210910 01:35:12.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:35:12.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:35:12.538" endtime="20210910 01:35:12.538"/>
</kw>
<status status="PASS" starttime="20210910 01:35:04.476" endtime="20210910 01:35:12.539"/>
</kw>
<msg timestamp="20210910 01:35:12.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:35:04.476" endtime="20210910 01:35:12.539"/>
</kw>
<status status="PASS" starttime="20210910 01:35:04.475" endtime="20210910 01:35:12.539"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:35:12.544" level="INFO">Running command 'ozone sh key put 34393-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:37:04.433" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210910 01:35:12.541" endtime="20210910 01:37:04.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210910 01:37:04.433" endtime="20210910 01:37:04.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210910 01:37:04.434" endtime="20210910 01:37:04.434"/>
</kw>
<status status="FAIL" starttime="20210910 01:35:12.541" endtime="20210910 01:37:04.434"/>
</kw>
<msg timestamp="20210910 01:37:04.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210910 01:35:12.540" endtime="20210910 01:37:04.434"/>
</kw>
<status status="FAIL" starttime="20210910 01:35:12.540" endtime="20210910 01:37:04.435"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210910 01:37:04.435" endtime="20210910 01:37:04.435"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210910 01:35:04.432" endtime="20210910 01:37:04.436">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:37:04.444" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:37:04.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:37:04.449" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:37:04.441" endtime="20210910 01:37:04.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:37:04.451" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:37:04.450" endtime="20210910 01:37:04.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:37:04.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:37:04.451" endtime="20210910 01:37:04.452"/>
</kw>
<status status="PASS" starttime="20210910 01:37:04.440" endtime="20210910 01:37:04.452"/>
</kw>
<msg timestamp="20210910 01:37:04.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:37:04.440" endtime="20210910 01:37:04.453"/>
</kw>
<msg timestamp="20210910 01:37:04.453" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:37:04.439" endtime="20210910 01:37:04.453"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:37:04.454" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:37:04.453" endtime="20210910 01:37:04.454"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:37:04.460" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:37:04.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:37:04.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:37:04.457" endtime="20210910 01:37:04.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:37:04.471" level="INFO"/>
<status status="PASS" starttime="20210910 01:37:04.470" endtime="20210910 01:37:04.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:37:04.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:37:04.472" endtime="20210910 01:37:04.472"/>
</kw>
<status status="PASS" starttime="20210910 01:37:04.456" endtime="20210910 01:37:04.473"/>
</kw>
<msg timestamp="20210910 01:37:04.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:37:04.455" endtime="20210910 01:37:04.473"/>
</kw>
<status status="PASS" starttime="20210910 01:37:04.454" endtime="20210910 01:37:04.474"/>
</kw>
<status status="PASS" starttime="20210910 01:37:04.454" endtime="20210910 01:37:04.474"/>
</kw>
<status status="PASS" starttime="20210910 01:37:04.438" endtime="20210910 01:37:04.474"/>
</kw>
<status status="PASS" starttime="20210910 01:37:04.438" endtime="20210910 01:37:04.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:37:04.479" level="INFO">Running command 'ozone sh bucket delete 34393-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:37:11.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:37:11.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:37:04.477" endtime="20210910 01:37:11.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:37:11.942" level="INFO"/>
<status status="PASS" starttime="20210910 01:37:11.941" endtime="20210910 01:37:11.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:37:11.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:37:11.942" endtime="20210910 01:37:11.943"/>
</kw>
<status status="PASS" starttime="20210910 01:37:04.476" endtime="20210910 01:37:11.943"/>
</kw>
<msg timestamp="20210910 01:37:11.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:37:04.476" endtime="20210910 01:37:11.944"/>
</kw>
<status status="PASS" starttime="20210910 01:37:04.474" endtime="20210910 01:37:11.944"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:37:11.948" level="INFO">Running command 'ozone sh bucket list 34393-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:37:19.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:37:19.604" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T...</msg>
<status status="PASS" starttime="20210910 01:37:11.946" endtime="20210910 01:37:19.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:37:19.607" level="INFO">{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:33:51.389Z",
  "modificationTime" : "2021-09-10T01:33:51.389Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:27:49.764Z",
  "modificationTime" : "2021-09-10T01:27:49.764Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:27:09.442Z",
  "modificationTime" : "2021-09-10T01:27:42.108Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:33:36.203Z",
  "modificationTime" : "2021-09-10T01:33:36.203Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:35:12.313Z",
  "modificationTime" : "2021-09-10T01:35:12.313Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:34:56.133Z",
  "modificationTime" : "2021-09-10T01:34:56.133Z",
  "sourceVolume" : "34393-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:34:40.729Z",
  "modificationTime" : "2021-09-10T01:34:40.729Z",
  "sourceVolume" : "34393-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:34:48.391Z",
  "modificationTime" : "2021-09-10T01:34:48.391Z",
  "sourceVolume" : "34393-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:26:53.440Z",
  "modificationTime" : "2021-09-10T01:27:35.552Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T01:27:01.638Z",
  "modificationTime" : "2021-09-10T01:27:01.638Z",
  "sourceVolume" : "34393-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210910 01:37:19.605" endtime="20210910 01:37:19.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:37:19.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:37:19.607" endtime="20210910 01:37:19.609"/>
</kw>
<status status="PASS" starttime="20210910 01:37:11.945" endtime="20210910 01:37:19.609"/>
</kw>
<msg timestamp="20210910 01:37:19.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:37:11.945" endtime="20210910 01:37:19.610"/>
</kw>
<msg timestamp="20210910 01:37:19.610" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "34393-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-10T...</msg>
<status status="PASS" starttime="20210910 01:37:11.944" endtime="20210910 01:37:19.610"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:37:19.611" endtime="20210910 01:37:19.611"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:37:19.619" level="INFO">Running command 'ozone sh key list 34393-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:37:27.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:37:27.490" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210910 01:37:19.614" endtime="20210910 01:37:27.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:37:27.492" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210910 01:37:27.491" endtime="20210910 01:37:27.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:37:27.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:37:27.492" endtime="20210910 01:37:27.493"/>
</kw>
<status status="PASS" starttime="20210910 01:37:19.613" endtime="20210910 01:37:27.493"/>
</kw>
<msg timestamp="20210910 01:37:27.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:37:19.613" endtime="20210910 01:37:27.493"/>
</kw>
<msg timestamp="20210910 01:37:27.494" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210910 01:37:19.612" endtime="20210910 01:37:27.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:37:27.494" endtime="20210910 01:37:27.494"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:37:04.436" endtime="20210910 01:37:27.495"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210910 01:23:04.354" endtime="20210910 01:37:27.497"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210910 01:37:27.527" level="INFO">${random} = 94434</msg>
<status status="PASS" starttime="20210910 01:37:27.526" endtime="20210910 01:37:27.527"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:37:27.527" level="INFO">${prefix} = 94434</msg>
<status status="PASS" starttime="20210910 01:37:27.527" endtime="20210910 01:37:27.527"/>
</kw>
<status status="PASS" starttime="20210910 01:37:27.526" endtime="20210910 01:37:27.528"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:37:27.534" level="INFO">Running command 'ozone sh volume info /94434-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:37:34.014" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:37:34.014" level="INFO">${output} = VOLUME_NOT_FOUND Volume 94434-rpcbasic is not found</msg>
<status status="PASS" starttime="20210910 01:37:27.531" endtime="20210910 01:37:34.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:37:34.015" level="INFO">VOLUME_NOT_FOUND Volume 94434-rpcbasic is not found</msg>
<status status="PASS" starttime="20210910 01:37:34.014" endtime="20210910 01:37:34.015"/>
</kw>
<msg timestamp="20210910 01:37:34.019" level="INFO">${result} = VOLUME_NOT_FOUND Volume 94434-rpcbasic is not found</msg>
<status status="PASS" starttime="20210910 01:37:27.530" endtime="20210910 01:37:34.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:37:34.019" endtime="20210910 01:37:34.020"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:37:34.030" level="INFO">Running command 'ozone sh volume create /94434-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:37:41.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:37:41.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:37:34.023" endtime="20210910 01:37:41.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:37:41.722" level="INFO"/>
<status status="PASS" starttime="20210910 01:37:41.721" endtime="20210910 01:37:41.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:37:41.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:37:41.722" endtime="20210910 01:37:41.723"/>
</kw>
<status status="PASS" starttime="20210910 01:37:34.022" endtime="20210910 01:37:41.724"/>
</kw>
<msg timestamp="20210910 01:37:41.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:37:34.022" endtime="20210910 01:37:41.724"/>
</kw>
<msg timestamp="20210910 01:37:41.725" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210910 01:37:34.020" endtime="20210910 01:37:41.725"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:37:41.725" endtime="20210910 01:37:41.725"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:37:41.732" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="94434-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:37:47.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:37:47.798" level="INFO">${output} = {
  "metadata": {},
  "name": "94434-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210910 01:37:41.728" endtime="20210910 01:37:47.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:37:47.800" level="INFO">{
  "metadata": {},
  "name": "94434-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-10T01:37:41.476Z",
  "modificationTime": "2021-09-10T01:37:41.476Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210910 01:37:47.799" endtime="20210910 01:37:47.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:37:47.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:37:47.800" endtime="20210910 01:37:47.801"/>
</kw>
<status status="PASS" starttime="20210910 01:37:41.727" endtime="20210910 01:37:47.801"/>
</kw>
<msg timestamp="20210910 01:37:47.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:37:41.727" endtime="20210910 01:37:47.802"/>
</kw>
<msg timestamp="20210910 01:37:47.802" level="INFO">${result} = {
  "metadata": {},
  "name": "94434-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210910 01:37:41.726" endtime="20210910 01:37:47.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:37:47.802" endtime="20210910 01:37:47.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:37:47.807" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="94434-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:37:56.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:37:56.099" level="INFO">${output} = {
  "metadata": {},
  "name": "94434-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210910 01:37:47.805" endtime="20210910 01:37:56.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:37:56.100" level="INFO">{
  "metadata": {},
  "name": "94434-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-10T01:37:41.476Z",
  "modificationTime": "2021-09-10T01:37:41.476Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210910 01:37:56.099" endtime="20210910 01:37:56.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:37:56.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:37:56.100" endtime="20210910 01:37:56.101"/>
</kw>
<status status="PASS" starttime="20210910 01:37:47.804" endtime="20210910 01:37:56.101"/>
</kw>
<msg timestamp="20210910 01:37:56.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:37:47.804" endtime="20210910 01:37:56.102"/>
</kw>
<msg timestamp="20210910 01:37:56.102" level="INFO">${result} = {
  "metadata": {},
  "name": "94434-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210910 01:37:47.803" endtime="20210910 01:37:56.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:37:56.102" endtime="20210910 01:37:56.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:37:56.107" level="INFO">Running command 'ozone sh volume setquota /94434-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:38:03.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:38:03.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:37:56.105" endtime="20210910 01:38:03.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:38:03.711" level="INFO"/>
<status status="PASS" starttime="20210910 01:38:03.709" endtime="20210910 01:38:03.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:38:03.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:38:03.712" endtime="20210910 01:38:03.713"/>
</kw>
<status status="PASS" starttime="20210910 01:37:56.104" endtime="20210910 01:38:03.713"/>
</kw>
<msg timestamp="20210910 01:38:03.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:37:56.104" endtime="20210910 01:38:03.714"/>
</kw>
<status status="PASS" starttime="20210910 01:37:56.103" endtime="20210910 01:38:03.714"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:38:03.721" level="INFO">Running command 'ozone sh volume info /94434-rpcbasic | jq -r '. | select(.name=="94434-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:38:11.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:38:11.645" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:38:03.718" endtime="20210910 01:38:11.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:38:11.647" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210910 01:38:11.646" endtime="20210910 01:38:11.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:38:11.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:38:11.647" endtime="20210910 01:38:11.648"/>
</kw>
<status status="PASS" starttime="20210910 01:38:03.717" endtime="20210910 01:38:11.648"/>
</kw>
<msg timestamp="20210910 01:38:11.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:38:03.717" endtime="20210910 01:38:11.648"/>
</kw>
<msg timestamp="20210910 01:38:11.649" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:38:03.715" endtime="20210910 01:38:11.649"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:38:11.649" endtime="20210910 01:38:11.649"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:38:11.657" level="INFO">Running command 'ozone sh bucket create /94434-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:38:17.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:38:17.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:38:11.653" endtime="20210910 01:38:17.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:38:17.207" level="INFO"/>
<status status="PASS" starttime="20210910 01:38:17.207" endtime="20210910 01:38:17.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:38:17.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:38:17.208" endtime="20210910 01:38:17.208"/>
</kw>
<status status="PASS" starttime="20210910 01:38:11.652" endtime="20210910 01:38:17.209"/>
</kw>
<msg timestamp="20210910 01:38:17.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:38:11.650" endtime="20210910 01:38:17.209"/>
</kw>
<status status="PASS" starttime="20210910 01:38:11.649" endtime="20210910 01:38:17.209"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:38:17.214" level="INFO">Running command 'ozone sh bucket info /94434-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:38:24.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:38:24.984" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210910 01:38:17.212" endtime="20210910 01:38:24.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:38:24.988" level="INFO">DISK</msg>
<status status="PASS" starttime="20210910 01:38:24.985" endtime="20210910 01:38:24.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:38:24.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:38:24.990" endtime="20210910 01:38:24.993"/>
</kw>
<status status="PASS" starttime="20210910 01:38:17.211" endtime="20210910 01:38:24.993"/>
</kw>
<msg timestamp="20210910 01:38:24.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:38:17.211" endtime="20210910 01:38:24.993"/>
</kw>
<msg timestamp="20210910 01:38:24.994" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210910 01:38:17.209" endtime="20210910 01:38:24.994"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:38:24.994" endtime="20210910 01:38:24.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:38:25.021" level="INFO">Running command 'ozone sh bucket info /94434-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:38:33.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:38:33.291" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:38:25.000" endtime="20210910 01:38:33.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:38:33.294" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210910 01:38:33.292" endtime="20210910 01:38:33.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:38:33.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:38:33.294" endtime="20210910 01:38:33.296"/>
</kw>
<status status="PASS" starttime="20210910 01:38:24.999" endtime="20210910 01:38:33.297"/>
</kw>
<msg timestamp="20210910 01:38:33.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:38:24.998" endtime="20210910 01:38:33.298"/>
</kw>
<msg timestamp="20210910 01:38:33.298" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:38:24.996" endtime="20210910 01:38:33.298"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:38:33.299" endtime="20210910 01:38:33.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:38:33.308" level="INFO">Running command 'ozone sh bucket info /94434-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:38:42.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:38:42.063" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210910 01:38:33.304" endtime="20210910 01:38:42.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:38:42.066" level="INFO">100</msg>
<status status="PASS" starttime="20210910 01:38:42.064" endtime="20210910 01:38:42.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:38:42.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:38:42.067" endtime="20210910 01:38:42.068"/>
</kw>
<status status="PASS" starttime="20210910 01:38:33.303" endtime="20210910 01:38:42.069"/>
</kw>
<msg timestamp="20210910 01:38:42.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:38:33.302" endtime="20210910 01:38:42.069"/>
</kw>
<msg timestamp="20210910 01:38:42.070" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210910 01:38:33.300" endtime="20210910 01:38:42.070"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:38:42.070" endtime="20210910 01:38:42.071"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:38:42.078" level="INFO">Running command 'ozone sh bucket setquota /94434-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:38:48.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:38:48.257" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:38:42.075" endtime="20210910 01:38:48.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:38:48.259" level="INFO"/>
<status status="PASS" starttime="20210910 01:38:48.258" endtime="20210910 01:38:48.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:38:48.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:38:48.260" endtime="20210910 01:38:48.261"/>
</kw>
<status status="PASS" starttime="20210910 01:38:42.074" endtime="20210910 01:38:48.261"/>
</kw>
<msg timestamp="20210910 01:38:48.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:38:42.074" endtime="20210910 01:38:48.262"/>
</kw>
<status status="PASS" starttime="20210910 01:38:42.072" endtime="20210910 01:38:48.262"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:38:48.268" level="INFO">Running command 'ozone sh bucket info /94434-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:38:56.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:38:56.791" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210910 01:38:48.265" endtime="20210910 01:38:56.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:38:56.792" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210910 01:38:56.792" endtime="20210910 01:38:56.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:38:56.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:38:56.793" endtime="20210910 01:38:56.794"/>
</kw>
<status status="PASS" starttime="20210910 01:38:48.264" endtime="20210910 01:38:56.794"/>
</kw>
<msg timestamp="20210910 01:38:56.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:38:48.264" endtime="20210910 01:38:56.795"/>
</kw>
<msg timestamp="20210910 01:38:56.795" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210910 01:38:48.263" endtime="20210910 01:38:56.795"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:38:56.795" endtime="20210910 01:38:56.796"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:38:56.802" level="INFO">Running command 'ozone sh bucket info /94434-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:39:04.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:39:04.676" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210910 01:38:56.798" endtime="20210910 01:39:04.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:39:04.678" level="INFO">1000</msg>
<status status="PASS" starttime="20210910 01:39:04.677" endtime="20210910 01:39:04.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:39:04.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:39:04.678" endtime="20210910 01:39:04.679"/>
</kw>
<status status="PASS" starttime="20210910 01:38:56.798" endtime="20210910 01:39:04.680"/>
</kw>
<msg timestamp="20210910 01:39:04.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:38:56.797" endtime="20210910 01:39:04.680"/>
</kw>
<msg timestamp="20210910 01:39:04.681" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210910 01:38:56.796" endtime="20210910 01:39:04.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:39:04.681" endtime="20210910 01:39:04.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:39:04.691" level="INFO">Running command 'ozone sh bucket list /94434-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:39:11.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:39:11.647" level="INFO">${output} = 94434-rpcbasic</msg>
<status status="PASS" starttime="20210910 01:39:04.687" endtime="20210910 01:39:11.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:39:11.649" level="INFO">94434-rpcbasic</msg>
<status status="PASS" starttime="20210910 01:39:11.648" endtime="20210910 01:39:11.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:39:11.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:39:11.649" endtime="20210910 01:39:11.650"/>
</kw>
<status status="PASS" starttime="20210910 01:39:04.686" endtime="20210910 01:39:11.651"/>
</kw>
<msg timestamp="20210910 01:39:11.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:39:04.685" endtime="20210910 01:39:11.651"/>
</kw>
<msg timestamp="20210910 01:39:11.651" level="INFO">${result} = 94434-rpcbasic</msg>
<status status="PASS" starttime="20210910 01:39:04.682" endtime="20210910 01:39:11.652"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:39:11.652" endtime="20210910 01:39:11.652"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:39:11.659" level="INFO">Running command 'ozone sh key put /94434-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:42:21.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:42:21.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:39:11.657" endtime="20210910 01:42:21.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:42:21.383" level="INFO"/>
<status status="PASS" starttime="20210910 01:42:21.381" endtime="20210910 01:42:21.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:42:21.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:42:21.384" endtime="20210910 01:42:21.386"/>
</kw>
<status status="PASS" starttime="20210910 01:39:11.656" endtime="20210910 01:42:21.386"/>
</kw>
<msg timestamp="20210910 01:42:21.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:39:11.655" endtime="20210910 01:42:21.386"/>
</kw>
<status status="PASS" starttime="20210910 01:39:11.654" endtime="20210910 01:42:21.387"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:42:21.393" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:42:21.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:42:21.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:42:21.389" endtime="20210910 01:42:21.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:42:21.400" level="INFO"/>
<status status="PASS" starttime="20210910 01:42:21.399" endtime="20210910 01:42:21.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:42:21.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:42:21.401" endtime="20210910 01:42:21.402"/>
</kw>
<status status="PASS" starttime="20210910 01:42:21.388" endtime="20210910 01:42:21.403"/>
</kw>
<msg timestamp="20210910 01:42:21.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:42:21.388" endtime="20210910 01:42:21.403"/>
</kw>
<status status="PASS" starttime="20210910 01:42:21.387" endtime="20210910 01:42:21.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:42:21.410" level="INFO">Running command 'ozone sh key get /94434-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:42:27.529" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210910 01:42:21.407" endtime="20210910 01:42:27.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.530" endtime="20210910 01:42:27.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.531" endtime="20210910 01:42:27.531"/>
</kw>
<status status="FAIL" starttime="20210910 01:42:21.406" endtime="20210910 01:42:27.532"/>
</kw>
<msg timestamp="20210910 01:42:27.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210910 01:42:21.406" endtime="20210910 01:42:27.532"/>
</kw>
<status status="FAIL" starttime="20210910 01:42:21.404" endtime="20210910 01:42:27.533"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.534" endtime="20210910 01:42:27.534"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.534" endtime="20210910 01:42:27.534"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.534" endtime="20210910 01:42:27.534"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.534" endtime="20210910 01:42:27.534"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.535" endtime="20210910 01:42:27.535"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.535" endtime="20210910 01:42:27.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.535" endtime="20210910 01:42:27.535"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.535" endtime="20210910 01:42:27.536"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.536" endtime="20210910 01:42:27.536"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.536" endtime="20210910 01:42:27.537"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.538" endtime="20210910 01:42:27.538"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.539" endtime="20210910 01:42:27.539"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.540" endtime="20210910 01:42:27.541"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.541" endtime="20210910 01:42:27.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.542" endtime="20210910 01:42:27.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.543" endtime="20210910 01:42:27.544"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.553" endtime="20210910 01:42:27.555"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.556" endtime="20210910 01:42:27.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.557" endtime="20210910 01:42:27.557"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.559" endtime="20210910 01:42:27.559"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.560" endtime="20210910 01:42:27.560"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.560" endtime="20210910 01:42:27.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.561" endtime="20210910 01:42:27.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.563" endtime="20210910 01:42:27.564"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.564" endtime="20210910 01:42:27.565"/>
</kw>
<status status="FAIL" starttime="20210910 01:39:11.653" endtime="20210910 01:42:27.566"/>
</kw>
<status status="FAIL" starttime="20210910 01:39:11.653" endtime="20210910 01:42:27.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.567" endtime="20210910 01:42:27.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.568" endtime="20210910 01:42:27.569"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.569" endtime="20210910 01:42:27.569"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.569" endtime="20210910 01:42:27.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.570" endtime="20210910 01:42:27.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.571" endtime="20210910 01:42:27.571"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.572" endtime="20210910 01:42:27.572"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.572" endtime="20210910 01:42:27.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.574" endtime="20210910 01:42:27.575"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.575" endtime="20210910 01:42:27.575"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.576" endtime="20210910 01:42:27.576"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.576" endtime="20210910 01:42:27.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.577" endtime="20210910 01:42:27.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.578" endtime="20210910 01:42:27.578"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.579" endtime="20210910 01:42:27.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.579" endtime="20210910 01:42:27.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.580" endtime="20210910 01:42:27.580"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.580" endtime="20210910 01:42:27.581"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.581" endtime="20210910 01:42:27.581"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.582" endtime="20210910 01:42:27.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.582" endtime="20210910 01:42:27.582"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.584" endtime="20210910 01:42:27.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.584" endtime="20210910 01:42:27.584"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:42:27.585" endtime="20210910 01:42:27.585"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.586" endtime="20210910 01:42:27.586"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 01:42:27.586" endtime="20210910 01:42:27.587"/>
</kw>
<status status="FAIL" starttime="20210910 01:37:27.529" endtime="20210910 01:42:27.588"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210910 01:37:27.528" endtime="20210910 01:42:27.589">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210910 01:37:27.501" endtime="20210910 01:42:27.595"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210910 01:42:27.641" level="INFO">${random} = 98511</msg>
<status status="PASS" starttime="20210910 01:42:27.638" endtime="20210910 01:42:27.641"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:42:27.644" level="INFO">${prefix} = 98511</msg>
<status status="PASS" starttime="20210910 01:42:27.642" endtime="20210910 01:42:27.644"/>
</kw>
<status status="PASS" starttime="20210910 01:42:27.637" endtime="20210910 01:42:27.645"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:42:27.668" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:42:27.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:42:27.681" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:42:27.662" endtime="20210910 01:42:27.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:42:27.683" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:42:27.682" endtime="20210910 01:42:27.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:42:27.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:42:27.683" endtime="20210910 01:42:27.686"/>
</kw>
<status status="PASS" starttime="20210910 01:42:27.659" endtime="20210910 01:42:27.687"/>
</kw>
<msg timestamp="20210910 01:42:27.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:42:27.657" endtime="20210910 01:42:27.688"/>
</kw>
<msg timestamp="20210910 01:42:27.690" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:42:27.654" endtime="20210910 01:42:27.690"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:42:27.699" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:42:27.691" endtime="20210910 01:42:27.700"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:42:27.717" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:42:27.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:42:27.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:42:27.710" endtime="20210910 01:42:27.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:42:27.954" level="INFO"/>
<status status="PASS" starttime="20210910 01:42:27.953" endtime="20210910 01:42:27.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:42:27.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:42:27.954" endtime="20210910 01:42:27.955"/>
</kw>
<status status="PASS" starttime="20210910 01:42:27.707" endtime="20210910 01:42:27.956"/>
</kw>
<msg timestamp="20210910 01:42:27.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:42:27.706" endtime="20210910 01:42:27.956"/>
</kw>
<status status="PASS" starttime="20210910 01:42:27.702" endtime="20210910 01:42:27.957"/>
</kw>
<status status="PASS" starttime="20210910 01:42:27.700" endtime="20210910 01:42:27.957"/>
</kw>
<status status="PASS" starttime="20210910 01:42:27.653" endtime="20210910 01:42:27.957"/>
</kw>
<status status="PASS" starttime="20210910 01:42:27.649" endtime="20210910 01:42:27.958"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:42:27.984" level="INFO">Running command 'ozone sh volume info o3://om:9862/98511-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:42:38.564" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:42:38.564" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98511-rpcwoport is not found</msg>
<status status="PASS" starttime="20210910 01:42:27.973" endtime="20210910 01:42:38.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:42:38.566" level="INFO">VOLUME_NOT_FOUND Volume 98511-rpcwoport is not found</msg>
<status status="PASS" starttime="20210910 01:42:38.565" endtime="20210910 01:42:38.566"/>
</kw>
<msg timestamp="20210910 01:42:38.566" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98511-rpcwoport is not found</msg>
<status status="PASS" starttime="20210910 01:42:27.968" endtime="20210910 01:42:38.566"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:42:38.567" endtime="20210910 01:42:38.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:42:38.573" level="INFO">Running command 'ozone sh volume create o3://om:9862/98511-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:42:44.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:42:44.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:42:38.569" endtime="20210910 01:42:44.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:42:44.909" level="INFO"/>
<status status="PASS" starttime="20210910 01:42:44.908" endtime="20210910 01:42:44.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:42:44.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:42:44.909" endtime="20210910 01:42:44.910"/>
</kw>
<status status="PASS" starttime="20210910 01:42:38.568" endtime="20210910 01:42:44.910"/>
</kw>
<msg timestamp="20210910 01:42:44.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:42:38.568" endtime="20210910 01:42:44.910"/>
</kw>
<msg timestamp="20210910 01:42:44.911" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210910 01:42:38.567" endtime="20210910 01:42:44.911"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:42:44.911" endtime="20210910 01:42:44.912"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:42:44.917" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="98511-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:42:53.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:42:53.110" level="INFO">${output} = {
  "metadata": {},
  "name": "98511-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210910 01:42:44.914" endtime="20210910 01:42:53.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:42:53.112" level="INFO">{
  "metadata": {},
  "name": "98511-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-10T01:42:44.532Z",
  "modificationTime": "2021-09-10T01:42:44.532Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210910 01:42:53.111" endtime="20210910 01:42:53.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:42:53.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:42:53.112" endtime="20210910 01:42:53.113"/>
</kw>
<status status="PASS" starttime="20210910 01:42:44.913" endtime="20210910 01:42:53.114"/>
</kw>
<msg timestamp="20210910 01:42:53.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:42:44.913" endtime="20210910 01:42:53.115"/>
</kw>
<msg timestamp="20210910 01:42:53.116" level="INFO">${result} = {
  "metadata": {},
  "name": "98511-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210910 01:42:44.912" endtime="20210910 01:42:53.116"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:42:53.116" endtime="20210910 01:42:53.117"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:42:53.122" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="98511-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:43:01.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:43:01.787" level="INFO">${output} = {
  "metadata": {},
  "name": "98511-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210910 01:42:53.120" endtime="20210910 01:43:01.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:43:01.790" level="INFO">{
  "metadata": {},
  "name": "98511-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-10T01:42:44.532Z",
  "modificationTime": "2021-09-10T01:42:44.532Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210910 01:43:01.788" endtime="20210910 01:43:01.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:43:01.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:43:01.791" endtime="20210910 01:43:01.793"/>
</kw>
<status status="PASS" starttime="20210910 01:42:53.119" endtime="20210910 01:43:01.793"/>
</kw>
<msg timestamp="20210910 01:43:01.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:42:53.118" endtime="20210910 01:43:01.793"/>
</kw>
<msg timestamp="20210910 01:43:01.793" level="INFO">${result} = {
  "metadata": {},
  "name": "98511-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210910 01:42:53.117" endtime="20210910 01:43:01.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:43:01.794" endtime="20210910 01:43:01.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:43:01.802" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/98511-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:43:09.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:43:09.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:43:01.799" endtime="20210910 01:43:09.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:43:09.420" level="INFO"/>
<status status="PASS" starttime="20210910 01:43:09.418" endtime="20210910 01:43:09.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:43:09.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:43:09.420" endtime="20210910 01:43:09.421"/>
</kw>
<status status="PASS" starttime="20210910 01:43:01.797" endtime="20210910 01:43:09.422"/>
</kw>
<msg timestamp="20210910 01:43:09.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:43:01.796" endtime="20210910 01:43:09.423"/>
</kw>
<status status="PASS" starttime="20210910 01:43:01.795" endtime="20210910 01:43:09.423"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:43:09.430" level="INFO">Running command 'ozone sh volume info o3://om:9862/98511-rpcwoport | jq -r '. | select(.name=="98511-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:43:18.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:43:18.361" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:43:09.427" endtime="20210910 01:43:18.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:43:18.363" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210910 01:43:18.362" endtime="20210910 01:43:18.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:43:18.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:43:18.363" endtime="20210910 01:43:18.364"/>
</kw>
<status status="PASS" starttime="20210910 01:43:09.426" endtime="20210910 01:43:18.364"/>
</kw>
<msg timestamp="20210910 01:43:18.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:43:09.426" endtime="20210910 01:43:18.364"/>
</kw>
<msg timestamp="20210910 01:43:18.365" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:43:09.424" endtime="20210910 01:43:18.365"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:43:18.365" endtime="20210910 01:43:18.365"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:43:18.372" level="INFO">Running command 'ozone sh bucket create o3://om:9862/98511-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:43:26.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:43:26.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:43:18.369" endtime="20210910 01:43:26.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:43:26.727" level="INFO"/>
<status status="PASS" starttime="20210910 01:43:26.726" endtime="20210910 01:43:26.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:43:26.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:43:26.727" endtime="20210910 01:43:26.728"/>
</kw>
<status status="PASS" starttime="20210910 01:43:18.368" endtime="20210910 01:43:26.729"/>
</kw>
<msg timestamp="20210910 01:43:26.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:43:18.367" endtime="20210910 01:43:26.729"/>
</kw>
<status status="PASS" starttime="20210910 01:43:18.366" endtime="20210910 01:43:26.729"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:43:26.734" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98511-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:43:34.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:43:34.840" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210910 01:43:26.732" endtime="20210910 01:43:34.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:43:34.841" level="INFO">DISK</msg>
<status status="PASS" starttime="20210910 01:43:34.840" endtime="20210910 01:43:34.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:43:34.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:43:34.841" endtime="20210910 01:43:34.842"/>
</kw>
<status status="PASS" starttime="20210910 01:43:26.731" endtime="20210910 01:43:34.842"/>
</kw>
<msg timestamp="20210910 01:43:34.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:43:26.731" endtime="20210910 01:43:34.843"/>
</kw>
<msg timestamp="20210910 01:43:34.843" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210910 01:43:26.730" endtime="20210910 01:43:34.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:43:34.843" endtime="20210910 01:43:34.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:43:34.849" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98511-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:43:42.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:43:42.315" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:43:34.846" endtime="20210910 01:43:42.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:43:42.316" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210910 01:43:42.315" endtime="20210910 01:43:42.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:43:42.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:43:42.317" endtime="20210910 01:43:42.317"/>
</kw>
<status status="PASS" starttime="20210910 01:43:34.845" endtime="20210910 01:43:42.318"/>
</kw>
<msg timestamp="20210910 01:43:42.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:43:34.845" endtime="20210910 01:43:42.318"/>
</kw>
<msg timestamp="20210910 01:43:42.318" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:43:34.844" endtime="20210910 01:43:42.318"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:43:42.318" endtime="20210910 01:43:42.319"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:43:42.323" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98511-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:43:50.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:43:50.232" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210910 01:43:42.321" endtime="20210910 01:43:50.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:43:50.234" level="INFO">100</msg>
<status status="PASS" starttime="20210910 01:43:50.233" endtime="20210910 01:43:50.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:43:50.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:43:50.235" endtime="20210910 01:43:50.236"/>
</kw>
<status status="PASS" starttime="20210910 01:43:42.320" endtime="20210910 01:43:50.236"/>
</kw>
<msg timestamp="20210910 01:43:50.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:43:42.320" endtime="20210910 01:43:50.237"/>
</kw>
<msg timestamp="20210910 01:43:50.238" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210910 01:43:42.319" endtime="20210910 01:43:50.238"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:43:50.238" endtime="20210910 01:43:50.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:43:50.247" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/98511-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:43:57.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:43:57.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:43:50.244" endtime="20210910 01:43:57.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:43:57.968" level="INFO"/>
<status status="PASS" starttime="20210910 01:43:57.968" endtime="20210910 01:43:57.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:43:57.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:43:57.969" endtime="20210910 01:43:57.970"/>
</kw>
<status status="PASS" starttime="20210910 01:43:50.242" endtime="20210910 01:43:57.971"/>
</kw>
<msg timestamp="20210910 01:43:57.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:43:50.241" endtime="20210910 01:43:57.971"/>
</kw>
<status status="PASS" starttime="20210910 01:43:50.240" endtime="20210910 01:43:57.972"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:43:57.978" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98511-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:44:05.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:44:05.726" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210910 01:43:57.975" endtime="20210910 01:44:05.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:44:05.729" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210910 01:44:05.727" endtime="20210910 01:44:05.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:44:05.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:44:05.730" endtime="20210910 01:44:05.731"/>
</kw>
<status status="PASS" starttime="20210910 01:43:57.974" endtime="20210910 01:44:05.731"/>
</kw>
<msg timestamp="20210910 01:44:05.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:43:57.974" endtime="20210910 01:44:05.732"/>
</kw>
<msg timestamp="20210910 01:44:05.732" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210910 01:43:57.972" endtime="20210910 01:44:05.732"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:44:05.732" endtime="20210910 01:44:05.733"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:44:05.739" level="INFO">Running command 'ozone sh bucket info o3://om:9862/98511-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:44:14.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:44:14.545" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210910 01:44:05.736" endtime="20210910 01:44:14.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:44:14.547" level="INFO">1000</msg>
<status status="PASS" starttime="20210910 01:44:14.546" endtime="20210910 01:44:14.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:44:14.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:44:14.547" endtime="20210910 01:44:14.548"/>
</kw>
<status status="PASS" starttime="20210910 01:44:05.736" endtime="20210910 01:44:14.548"/>
</kw>
<msg timestamp="20210910 01:44:14.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:44:05.735" endtime="20210910 01:44:14.549"/>
</kw>
<msg timestamp="20210910 01:44:14.549" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210910 01:44:05.734" endtime="20210910 01:44:14.549"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:44:14.549" endtime="20210910 01:44:14.551"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:44:14.558" level="INFO">Running command 'ozone sh bucket list o3://om:9862/98511-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:44:23.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:44:23.048" level="INFO">${output} = 98511-rpcwoport</msg>
<status status="PASS" starttime="20210910 01:44:14.555" endtime="20210910 01:44:23.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:44:23.050" level="INFO">98511-rpcwoport</msg>
<status status="PASS" starttime="20210910 01:44:23.049" endtime="20210910 01:44:23.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:44:23.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:44:23.050" endtime="20210910 01:44:23.051"/>
</kw>
<status status="PASS" starttime="20210910 01:44:14.553" endtime="20210910 01:44:23.051"/>
</kw>
<msg timestamp="20210910 01:44:23.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:44:14.552" endtime="20210910 01:44:23.051"/>
</kw>
<msg timestamp="20210910 01:44:23.052" level="INFO">${result} = 98511-rpcwoport</msg>
<status status="PASS" starttime="20210910 01:44:14.551" endtime="20210910 01:44:23.052"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:44:23.053" endtime="20210910 01:44:23.054"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:44:23.067" level="INFO">Running command 'ozone sh key put o3://om:9862/98511-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:47:27.648" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210910 01:44:23.063" endtime="20210910 01:47:27.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.649" endtime="20210910 01:47:27.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.649" endtime="20210910 01:47:27.649"/>
</kw>
<status status="FAIL" starttime="20210910 01:44:23.061" endtime="20210910 01:47:27.650"/>
</kw>
<msg timestamp="20210910 01:47:27.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210910 01:44:23.058" endtime="20210910 01:47:27.650"/>
</kw>
<status status="FAIL" starttime="20210910 01:44:23.057" endtime="20210910 01:47:27.650"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.650" endtime="20210910 01:47:27.650"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.651" endtime="20210910 01:47:27.651"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.651" endtime="20210910 01:47:27.651"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.651" endtime="20210910 01:47:27.651"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.651" endtime="20210910 01:47:27.651"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.652" endtime="20210910 01:47:27.652"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.652" endtime="20210910 01:47:27.652"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.652" endtime="20210910 01:47:27.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.652" endtime="20210910 01:47:27.652"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.652" endtime="20210910 01:47:27.652"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.653" endtime="20210910 01:47:27.653"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.653" endtime="20210910 01:47:27.653"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.653" endtime="20210910 01:47:27.653"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.653" endtime="20210910 01:47:27.654"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.654" endtime="20210910 01:47:27.654"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.654" endtime="20210910 01:47:27.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.655" endtime="20210910 01:47:27.655"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.655" endtime="20210910 01:47:27.655"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.655" endtime="20210910 01:47:27.655"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.656" endtime="20210910 01:47:27.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.656" endtime="20210910 01:47:27.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.657" endtime="20210910 01:47:27.657"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.657" endtime="20210910 01:47:27.657"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.657" endtime="20210910 01:47:27.657"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.657" endtime="20210910 01:47:27.657"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.658" endtime="20210910 01:47:27.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.658" endtime="20210910 01:47:27.658"/>
</kw>
<status status="FAIL" starttime="20210910 01:44:23.055" endtime="20210910 01:47:27.658"/>
</kw>
<status status="FAIL" starttime="20210910 01:44:23.055" endtime="20210910 01:47:27.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.658" endtime="20210910 01:47:27.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.658" endtime="20210910 01:47:27.659"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.659" endtime="20210910 01:47:27.659"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.659" endtime="20210910 01:47:27.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.659" endtime="20210910 01:47:27.660"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.660" endtime="20210910 01:47:27.660"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.660" endtime="20210910 01:47:27.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.661" endtime="20210910 01:47:27.661"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.661" endtime="20210910 01:47:27.661"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.662" endtime="20210910 01:47:27.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.662" endtime="20210910 01:47:27.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.663" endtime="20210910 01:47:27.663"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.663" endtime="20210910 01:47:27.663"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.664" endtime="20210910 01:47:27.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.664" endtime="20210910 01:47:27.664"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.665" endtime="20210910 01:47:27.665"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.665" endtime="20210910 01:47:27.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.666" endtime="20210910 01:47:27.666"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.666" endtime="20210910 01:47:27.667"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.667" endtime="20210910 01:47:27.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.668" endtime="20210910 01:47:27.668"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.668" endtime="20210910 01:47:27.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.669" endtime="20210910 01:47:27.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 01:47:27.669" endtime="20210910 01:47:27.669"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.670" endtime="20210910 01:47:27.670"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 01:47:27.670" endtime="20210910 01:47:27.670"/>
</kw>
<status status="FAIL" starttime="20210910 01:42:27.958" endtime="20210910 01:47:27.672"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210910 01:42:27.646" endtime="20210910 01:47:27.673">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:47:27.705" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:47:27.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:47:27.710" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:47:27.681" endtime="20210910 01:47:27.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:47:27.712" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:47:27.711" endtime="20210910 01:47:27.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:47:27.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:47:27.712" endtime="20210910 01:47:27.713"/>
</kw>
<status status="PASS" starttime="20210910 01:47:27.680" endtime="20210910 01:47:27.713"/>
</kw>
<msg timestamp="20210910 01:47:27.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:47:27.679" endtime="20210910 01:47:27.714"/>
</kw>
<msg timestamp="20210910 01:47:27.714" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:47:27.678" endtime="20210910 01:47:27.714"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:47:27.716" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:47:27.714" endtime="20210910 01:47:27.717"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:47:27.722" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:47:27.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:47:27.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:47:27.719" endtime="20210910 01:47:27.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:47:27.737" level="INFO"/>
<status status="PASS" starttime="20210910 01:47:27.736" endtime="20210910 01:47:27.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:47:27.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:47:27.737" endtime="20210910 01:47:27.738"/>
</kw>
<status status="PASS" starttime="20210910 01:47:27.719" endtime="20210910 01:47:27.738"/>
</kw>
<msg timestamp="20210910 01:47:27.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:47:27.718" endtime="20210910 01:47:27.739"/>
</kw>
<status status="PASS" starttime="20210910 01:47:27.718" endtime="20210910 01:47:27.739"/>
</kw>
<status status="PASS" starttime="20210910 01:47:27.717" endtime="20210910 01:47:27.739"/>
</kw>
<status status="PASS" starttime="20210910 01:47:27.678" endtime="20210910 01:47:27.739"/>
</kw>
<status status="PASS" starttime="20210910 01:47:27.677" endtime="20210910 01:47:27.739"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:47:27.746" level="INFO">Running command 'ozone sh volume create o3://om:9862/98511-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:47:34.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:47:34.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:47:27.743" endtime="20210910 01:47:34.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:47:34.307" level="INFO"/>
<status status="PASS" starttime="20210910 01:47:34.306" endtime="20210910 01:47:34.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:47:34.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:47:34.308" endtime="20210910 01:47:34.308"/>
</kw>
<status status="PASS" starttime="20210910 01:47:27.743" endtime="20210910 01:47:34.309"/>
</kw>
<msg timestamp="20210910 01:47:34.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:47:27.742" endtime="20210910 01:47:34.309"/>
</kw>
<status status="PASS" starttime="20210910 01:47:27.741" endtime="20210910 01:47:34.309"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:47:34.315" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98511-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:47:42.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:47:42.686" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:47:34.311" endtime="20210910 01:47:42.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:47:42.688" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:47:42.687" endtime="20210910 01:47:42.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:47:42.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:47:42.688" endtime="20210910 01:47:42.689"/>
</kw>
<status status="PASS" starttime="20210910 01:47:34.311" endtime="20210910 01:47:42.689"/>
</kw>
<msg timestamp="20210910 01:47:42.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:47:34.310" endtime="20210910 01:47:42.689"/>
</kw>
<msg timestamp="20210910 01:47:42.689" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:47:34.309" endtime="20210910 01:47:42.690"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:47:42.690" endtime="20210910 01:47:42.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:47:42.695" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/98511-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:47:48.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:47:48.987" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210910 01:47:42.693" endtime="20210910 01:47:48.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:47:48.989" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210910 01:47:48.988" endtime="20210910 01:47:48.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:47:48.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:47:48.989" endtime="20210910 01:47:48.990"/>
</kw>
<status status="PASS" starttime="20210910 01:47:42.692" endtime="20210910 01:47:48.990"/>
</kw>
<msg timestamp="20210910 01:47:48.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:47:42.692" endtime="20210910 01:47:48.990"/>
</kw>
<msg timestamp="20210910 01:47:48.991" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210910 01:47:42.691" endtime="20210910 01:47:48.991"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:47:48.998" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98511-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:47:56.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:47:56.970" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210910 01:47:48.994" endtime="20210910 01:47:56.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:47:56.973" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:47:56.971" endtime="20210910 01:47:56.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:47:56.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:47:56.974" endtime="20210910 01:47:56.976"/>
</kw>
<status status="PASS" starttime="20210910 01:47:48.993" endtime="20210910 01:47:56.976"/>
</kw>
<msg timestamp="20210910 01:47:56.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:47:48.992" endtime="20210910 01:47:56.977"/>
</kw>
<msg timestamp="20210910 01:47:56.980" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210910 01:47:48.991" endtime="20210910 01:47:56.980"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:47:56.980" endtime="20210910 01:47:56.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:47:56.991" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/98511-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:48:05.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:48:05.016" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210910 01:47:56.987" endtime="20210910 01:48:05.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:48:05.017" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210910 01:48:05.017" endtime="20210910 01:48:05.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:48:05.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:48:05.018" endtime="20210910 01:48:05.018"/>
</kw>
<status status="PASS" starttime="20210910 01:47:56.986" endtime="20210910 01:48:05.019"/>
</kw>
<msg timestamp="20210910 01:48:05.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:47:56.985" endtime="20210910 01:48:05.019"/>
</kw>
<msg timestamp="20210910 01:48:05.019" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210910 01:47:56.983" endtime="20210910 01:48:05.019"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:48:05.025" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98511-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:48:13.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:48:13.478" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210910 01:48:05.022" endtime="20210910 01:48:13.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:48:13.481" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:48:13.479" endtime="20210910 01:48:13.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:48:13.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:48:13.482" endtime="20210910 01:48:13.483"/>
</kw>
<status status="PASS" starttime="20210910 01:48:05.021" endtime="20210910 01:48:13.484"/>
</kw>
<msg timestamp="20210910 01:48:13.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:48:05.021" endtime="20210910 01:48:13.485"/>
</kw>
<msg timestamp="20210910 01:48:13.486" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210910 01:48:05.020" endtime="20210910 01:48:13.486"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:48:13.487" endtime="20210910 01:48:13.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:48:13.497" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/98511-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:48:21.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:48:21.787" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:48:13.493" endtime="20210910 01:48:21.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:48:21.790" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:48:21.789" endtime="20210910 01:48:21.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:48:21.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:48:21.791" endtime="20210910 01:48:21.792"/>
</kw>
<status status="PASS" starttime="20210910 01:48:13.492" endtime="20210910 01:48:21.793"/>
</kw>
<msg timestamp="20210910 01:48:21.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:48:13.491" endtime="20210910 01:48:21.793"/>
</kw>
<msg timestamp="20210910 01:48:21.794" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:48:13.489" endtime="20210910 01:48:21.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:48:21.802" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/98511-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:48:30.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:48:30.184" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210910 01:48:21.798" endtime="20210910 01:48:30.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:48:30.185" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:48:30.185" endtime="20210910 01:48:30.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:48:30.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:48:30.186" endtime="20210910 01:48:30.186"/>
</kw>
<status status="PASS" starttime="20210910 01:48:21.797" endtime="20210910 01:48:30.187"/>
</kw>
<msg timestamp="20210910 01:48:30.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:48:21.796" endtime="20210910 01:48:30.187"/>
</kw>
<msg timestamp="20210910 01:48:30.188" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210910 01:48:21.795" endtime="20210910 01:48:30.188"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:48:30.188" endtime="20210910 01:48:30.189"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:48:30.189" endtime="20210910 01:48:30.190"/>
</kw>
<status status="PASS" starttime="20210910 01:47:27.740" endtime="20210910 01:48:30.190"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210910 01:47:27.674" endtime="20210910 01:48:30.191"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:48:30.201" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:48:30.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:48:30.206" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:48:30.198" endtime="20210910 01:48:30.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:48:30.208" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:48:30.207" endtime="20210910 01:48:30.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:48:30.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:48:30.208" endtime="20210910 01:48:30.209"/>
</kw>
<status status="PASS" starttime="20210910 01:48:30.197" endtime="20210910 01:48:30.209"/>
</kw>
<msg timestamp="20210910 01:48:30.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:48:30.197" endtime="20210910 01:48:30.210"/>
</kw>
<msg timestamp="20210910 01:48:30.210" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:48:30.196" endtime="20210910 01:48:30.210"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:48:30.211" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:48:30.211" endtime="20210910 01:48:30.211"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:48:30.218" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:48:30.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:48:30.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:48:30.215" endtime="20210910 01:48:30.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:48:30.427" level="INFO"/>
<status status="PASS" starttime="20210910 01:48:30.426" endtime="20210910 01:48:30.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:48:30.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:48:30.428" endtime="20210910 01:48:30.428"/>
</kw>
<status status="PASS" starttime="20210910 01:48:30.214" endtime="20210910 01:48:30.429"/>
</kw>
<msg timestamp="20210910 01:48:30.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:48:30.214" endtime="20210910 01:48:30.429"/>
</kw>
<status status="PASS" starttime="20210910 01:48:30.213" endtime="20210910 01:48:30.429"/>
</kw>
<status status="PASS" starttime="20210910 01:48:30.212" endtime="20210910 01:48:30.429"/>
</kw>
<status status="PASS" starttime="20210910 01:48:30.195" endtime="20210910 01:48:30.430"/>
</kw>
<status status="PASS" starttime="20210910 01:48:30.194" endtime="20210910 01:48:30.430"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:48:30.435" level="INFO">Running command 'ozone sh bucket create o3://om:9862/98511-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:48:36.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:48:36.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:48:30.432" endtime="20210910 01:48:36.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:48:36.504" level="INFO"/>
<status status="PASS" starttime="20210910 01:48:36.503" endtime="20210910 01:48:36.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:48:36.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:48:36.504" endtime="20210910 01:48:36.505"/>
</kw>
<status status="PASS" starttime="20210910 01:48:30.432" endtime="20210910 01:48:36.505"/>
</kw>
<msg timestamp="20210910 01:48:36.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:48:30.431" endtime="20210910 01:48:36.505"/>
</kw>
<status status="PASS" starttime="20210910 01:48:30.431" endtime="20210910 01:48:36.505"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:48:36.512" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98511-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:48:45.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:48:45.039" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210910 01:48:36.508" endtime="20210910 01:48:45.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:48:45.041" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:48:45.040" endtime="20210910 01:48:45.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:48:45.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:48:45.041" endtime="20210910 01:48:45.042"/>
</kw>
<status status="PASS" starttime="20210910 01:48:36.507" endtime="20210910 01:48:45.042"/>
</kw>
<msg timestamp="20210910 01:48:45.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:48:36.506" endtime="20210910 01:48:45.042"/>
</kw>
<msg timestamp="20210910 01:48:45.042" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210910 01:48:36.506" endtime="20210910 01:48:45.042"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:48:45.043" endtime="20210910 01:48:45.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:48:45.050" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/98511-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:48:51.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:48:51.777" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210910 01:48:45.047" endtime="20210910 01:48:51.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:48:51.779" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210910 01:48:51.777" endtime="20210910 01:48:51.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:48:51.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:48:51.780" endtime="20210910 01:48:51.781"/>
</kw>
<status status="PASS" starttime="20210910 01:48:45.046" endtime="20210910 01:48:51.781"/>
</kw>
<msg timestamp="20210910 01:48:51.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:48:45.045" endtime="20210910 01:48:51.782"/>
</kw>
<msg timestamp="20210910 01:48:51.782" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210910 01:48:45.044" endtime="20210910 01:48:51.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:48:51.787" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98511-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:48:59.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:48:59.288" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210910 01:48:51.785" endtime="20210910 01:48:59.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:48:59.290" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:48:59.289" endtime="20210910 01:48:59.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:48:59.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:48:59.290" endtime="20210910 01:48:59.291"/>
</kw>
<status status="PASS" starttime="20210910 01:48:51.784" endtime="20210910 01:48:59.291"/>
</kw>
<msg timestamp="20210910 01:48:59.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:48:51.784" endtime="20210910 01:48:59.292"/>
</kw>
<msg timestamp="20210910 01:48:59.292" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210910 01:48:51.782" endtime="20210910 01:48:59.292"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:48:59.293" endtime="20210910 01:48:59.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:48:59.301" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/98511-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:49:06.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:49:06.880" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210910 01:48:59.298" endtime="20210910 01:49:06.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:49:06.883" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210910 01:49:06.881" endtime="20210910 01:49:06.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:49:06.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:49:06.884" endtime="20210910 01:49:06.886"/>
</kw>
<status status="PASS" starttime="20210910 01:48:59.296" endtime="20210910 01:49:06.887"/>
</kw>
<msg timestamp="20210910 01:49:06.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:48:59.296" endtime="20210910 01:49:06.887"/>
</kw>
<msg timestamp="20210910 01:49:06.888" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210910 01:48:59.295" endtime="20210910 01:49:06.888"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:49:06.895" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98511-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:49:16.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:49:16.146" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210910 01:49:06.892" endtime="20210910 01:49:16.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:49:16.149" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:49:16.147" endtime="20210910 01:49:16.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:49:16.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:49:16.149" endtime="20210910 01:49:16.150"/>
</kw>
<status status="PASS" starttime="20210910 01:49:06.890" endtime="20210910 01:49:16.151"/>
</kw>
<msg timestamp="20210910 01:49:16.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:49:06.889" endtime="20210910 01:49:16.152"/>
</kw>
<msg timestamp="20210910 01:49:16.153" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210910 01:49:06.888" endtime="20210910 01:49:16.153"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:49:16.153" endtime="20210910 01:49:16.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:49:16.163" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/98511-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:49:24.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:49:24.796" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:49:16.159" endtime="20210910 01:49:24.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:49:24.798" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:49:24.797" endtime="20210910 01:49:24.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:49:24.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:49:24.799" endtime="20210910 01:49:24.800"/>
</kw>
<status status="PASS" starttime="20210910 01:49:16.158" endtime="20210910 01:49:24.801"/>
</kw>
<msg timestamp="20210910 01:49:24.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:49:16.158" endtime="20210910 01:49:24.801"/>
</kw>
<msg timestamp="20210910 01:49:24.801" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:49:16.156" endtime="20210910 01:49:24.802"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:49:24.809" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/98511-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:49:32.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:49:32.829" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210910 01:49:24.805" endtime="20210910 01:49:32.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:49:32.832" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:49:32.831" endtime="20210910 01:49:32.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:49:32.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:49:32.834" endtime="20210910 01:49:32.835"/>
</kw>
<status status="PASS" starttime="20210910 01:49:24.804" endtime="20210910 01:49:32.836"/>
</kw>
<msg timestamp="20210910 01:49:32.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:49:24.803" endtime="20210910 01:49:32.837"/>
</kw>
<msg timestamp="20210910 01:49:32.837" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210910 01:49:24.802" endtime="20210910 01:49:32.837"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:49:32.838" endtime="20210910 01:49:32.839"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:49:32.839" endtime="20210910 01:49:32.840"/>
</kw>
<status status="PASS" starttime="20210910 01:48:30.430" endtime="20210910 01:49:32.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210910 01:48:30.193" endtime="20210910 01:49:32.841"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:49:32.853" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:49:32.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:49:32.860" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:49:32.850" endtime="20210910 01:49:32.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:49:32.862" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:49:32.861" endtime="20210910 01:49:32.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:49:32.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:49:32.863" endtime="20210910 01:49:32.864"/>
</kw>
<status status="PASS" starttime="20210910 01:49:32.849" endtime="20210910 01:49:32.865"/>
</kw>
<msg timestamp="20210910 01:49:32.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:49:32.848" endtime="20210910 01:49:32.866"/>
</kw>
<msg timestamp="20210910 01:49:32.866" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:49:32.847" endtime="20210910 01:49:32.866"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:49:32.867" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:49:32.867" endtime="20210910 01:49:32.867"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:49:32.874" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:49:32.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:49:32.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:49:32.871" endtime="20210910 01:49:32.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:49:32.888" level="INFO"/>
<status status="PASS" starttime="20210910 01:49:32.886" endtime="20210910 01:49:32.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:49:32.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:49:32.888" endtime="20210910 01:49:32.889"/>
</kw>
<status status="PASS" starttime="20210910 01:49:32.870" endtime="20210910 01:49:32.890"/>
</kw>
<msg timestamp="20210910 01:49:32.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:49:32.869" endtime="20210910 01:49:32.890"/>
</kw>
<status status="PASS" starttime="20210910 01:49:32.868" endtime="20210910 01:49:32.890"/>
</kw>
<status status="PASS" starttime="20210910 01:49:32.868" endtime="20210910 01:49:32.890"/>
</kw>
<status status="PASS" starttime="20210910 01:49:32.846" endtime="20210910 01:49:32.890"/>
</kw>
<status status="PASS" starttime="20210910 01:49:32.845" endtime="20210910 01:49:32.890"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:49:32.897" level="INFO">Running command 'ozone sh key put o3://om:9862/98511-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:52:45.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:52:45.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:49:32.893" endtime="20210910 01:52:45.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:52:45.460" level="INFO"/>
<status status="PASS" starttime="20210910 01:52:45.460" endtime="20210910 01:52:45.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:52:45.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:52:45.461" endtime="20210910 01:52:45.461"/>
</kw>
<status status="PASS" starttime="20210910 01:49:32.892" endtime="20210910 01:52:45.462"/>
</kw>
<msg timestamp="20210910 01:52:45.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:49:32.892" endtime="20210910 01:52:45.462"/>
</kw>
<status status="PASS" starttime="20210910 01:49:32.891" endtime="20210910 01:52:45.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:52:45.467" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98511-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:52:53.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:52:53.704" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210910 01:52:45.465" endtime="20210910 01:52:53.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:52:53.706" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:52:53.705" endtime="20210910 01:52:53.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:52:53.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:52:53.706" endtime="20210910 01:52:53.707"/>
</kw>
<status status="PASS" starttime="20210910 01:52:45.464" endtime="20210910 01:52:53.707"/>
</kw>
<msg timestamp="20210910 01:52:53.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:52:45.464" endtime="20210910 01:52:53.707"/>
</kw>
<msg timestamp="20210910 01:52:53.708" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210910 01:52:45.463" endtime="20210910 01:52:53.708"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:52:53.708" endtime="20210910 01:52:53.709"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:52:53.713" level="INFO">Running command 'ozone sh key addacl o3://om:9862/98511-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:52:59.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:52:59.186" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:52:53.710" endtime="20210910 01:52:59.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:52:59.188" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:52:59.187" endtime="20210910 01:52:59.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:52:59.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:52:59.189" endtime="20210910 01:52:59.190"/>
</kw>
<status status="PASS" starttime="20210910 01:52:53.710" endtime="20210910 01:52:59.191"/>
</kw>
<msg timestamp="20210910 01:52:59.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:52:53.710" endtime="20210910 01:52:59.192"/>
</kw>
<msg timestamp="20210910 01:52:59.193" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210910 01:52:53.709" endtime="20210910 01:52:59.193"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:52:59.203" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98511-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:53:07.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:53:07.098" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210910 01:52:59.198" endtime="20210910 01:53:07.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:53:07.100" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:53:07.098" endtime="20210910 01:53:07.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:53:07.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:53:07.100" endtime="20210910 01:53:07.101"/>
</kw>
<status status="PASS" starttime="20210910 01:52:59.196" endtime="20210910 01:53:07.101"/>
</kw>
<msg timestamp="20210910 01:53:07.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:52:59.195" endtime="20210910 01:53:07.101"/>
</kw>
<msg timestamp="20210910 01:53:07.102" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210910 01:52:59.193" endtime="20210910 01:53:07.102"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:53:07.103" endtime="20210910 01:53:07.104"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:53:07.109" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/98511-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:53:14.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:53:14.637" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210910 01:53:07.106" endtime="20210910 01:53:14.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:53:14.641" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210910 01:53:14.638" endtime="20210910 01:53:14.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:53:14.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:53:14.641" endtime="20210910 01:53:14.643"/>
</kw>
<status status="PASS" starttime="20210910 01:53:07.105" endtime="20210910 01:53:14.644"/>
</kw>
<msg timestamp="20210910 01:53:14.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:53:07.105" endtime="20210910 01:53:14.645"/>
</kw>
<msg timestamp="20210910 01:53:14.646" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210910 01:53:07.104" endtime="20210910 01:53:14.646"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:53:14.654" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98511-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:53:22.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:53:22.872" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210910 01:53:14.650" endtime="20210910 01:53:22.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:53:22.874" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:53:22.873" endtime="20210910 01:53:22.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:53:22.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:53:22.875" endtime="20210910 01:53:22.877"/>
</kw>
<status status="PASS" starttime="20210910 01:53:14.649" endtime="20210910 01:53:22.877"/>
</kw>
<msg timestamp="20210910 01:53:22.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:53:14.648" endtime="20210910 01:53:22.878"/>
</kw>
<msg timestamp="20210910 01:53:22.878" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210910 01:53:14.646" endtime="20210910 01:53:22.878"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:53:22.878" endtime="20210910 01:53:22.879"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:53:22.894" level="INFO">Running command 'ozone sh key setacl o3://om:9862/98511-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:53:28.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:53:28.923" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:53:22.891" endtime="20210910 01:53:28.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:53:28.925" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:53:28.925" endtime="20210910 01:53:28.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:53:28.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:53:28.926" endtime="20210910 01:53:28.926"/>
</kw>
<status status="PASS" starttime="20210910 01:53:22.890" endtime="20210910 01:53:28.927"/>
</kw>
<msg timestamp="20210910 01:53:28.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:53:22.887" endtime="20210910 01:53:28.927"/>
</kw>
<msg timestamp="20210910 01:53:28.927" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:53:22.880" endtime="20210910 01:53:28.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:53:28.934" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98511-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:53:36.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:53:36.849" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210910 01:53:28.932" endtime="20210910 01:53:36.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:53:36.851" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:53:36.850" endtime="20210910 01:53:36.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:53:36.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:53:36.851" endtime="20210910 01:53:36.852"/>
</kw>
<status status="PASS" starttime="20210910 01:53:28.930" endtime="20210910 01:53:36.852"/>
</kw>
<msg timestamp="20210910 01:53:36.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:53:28.930" endtime="20210910 01:53:36.853"/>
</kw>
<msg timestamp="20210910 01:53:36.853" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210910 01:53:28.928" endtime="20210910 01:53:36.853"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:53:36.853" endtime="20210910 01:53:36.854"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:53:36.854" endtime="20210910 01:53:36.855"/>
</kw>
<status status="PASS" starttime="20210910 01:49:32.891" endtime="20210910 01:53:36.856"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210910 01:49:32.843" endtime="20210910 01:53:36.857"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:53:36.867" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:53:36.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:53:36.872" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:53:36.863" endtime="20210910 01:53:36.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:53:36.874" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:53:36.873" endtime="20210910 01:53:36.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:53:36.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:53:36.875" endtime="20210910 01:53:36.876"/>
</kw>
<status status="PASS" starttime="20210910 01:53:36.862" endtime="20210910 01:53:36.877"/>
</kw>
<msg timestamp="20210910 01:53:36.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:53:36.862" endtime="20210910 01:53:36.877"/>
</kw>
<msg timestamp="20210910 01:53:36.878" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:53:36.861" endtime="20210910 01:53:36.878"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:53:36.879" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:53:36.878" endtime="20210910 01:53:36.879"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:53:36.885" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:53:37.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:53:37.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:53:36.882" endtime="20210910 01:53:37.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:53:37.092" level="INFO"/>
<status status="PASS" starttime="20210910 01:53:37.092" endtime="20210910 01:53:37.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:53:37.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:53:37.093" endtime="20210910 01:53:37.093"/>
</kw>
<status status="PASS" starttime="20210910 01:53:36.881" endtime="20210910 01:53:37.094"/>
</kw>
<msg timestamp="20210910 01:53:37.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:53:36.881" endtime="20210910 01:53:37.094"/>
</kw>
<status status="PASS" starttime="20210910 01:53:36.880" endtime="20210910 01:53:37.094"/>
</kw>
<status status="PASS" starttime="20210910 01:53:36.879" endtime="20210910 01:53:37.094"/>
</kw>
<status status="PASS" starttime="20210910 01:53:36.860" endtime="20210910 01:53:37.095"/>
</kw>
<status status="PASS" starttime="20210910 01:53:36.860" endtime="20210910 01:53:37.095"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:53:37.101" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/98511-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:53:44.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:53:44.580" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210910 01:53:37.098" endtime="20210910 01:53:44.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:53:44.582" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210910 01:53:44.581" endtime="20210910 01:53:44.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:53:44.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:53:44.582" endtime="20210910 01:53:44.583"/>
</kw>
<status status="PASS" starttime="20210910 01:53:37.097" endtime="20210910 01:53:44.583"/>
</kw>
<msg timestamp="20210910 01:53:44.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:53:37.097" endtime="20210910 01:53:44.584"/>
</kw>
<status status="PASS" starttime="20210910 01:53:37.096" endtime="20210910 01:53:44.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:53:44.590" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/98511-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:53:51.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:53:51.446" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210910 01:53:44.587" endtime="20210910 01:53:51.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:53:51.448" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:53:51.447" endtime="20210910 01:53:51.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:53:51.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:53:51.448" endtime="20210910 01:53:51.449"/>
</kw>
<status status="PASS" starttime="20210910 01:53:44.586" endtime="20210910 01:53:51.449"/>
</kw>
<msg timestamp="20210910 01:53:51.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:53:44.585" endtime="20210910 01:53:51.449"/>
</kw>
<msg timestamp="20210910 01:53:51.450" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210910 01:53:44.584" endtime="20210910 01:53:51.450"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:53:51.450" endtime="20210910 01:53:51.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:53:51.455" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/98511-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:53:58.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:53:58.469" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210910 01:53:51.453" endtime="20210910 01:53:58.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:53:58.471" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210910 01:53:58.470" endtime="20210910 01:53:58.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:53:58.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:53:58.471" endtime="20210910 01:53:58.472"/>
</kw>
<status status="PASS" starttime="20210910 01:53:51.452" endtime="20210910 01:53:58.472"/>
</kw>
<msg timestamp="20210910 01:53:58.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:53:51.452" endtime="20210910 01:53:58.473"/>
</kw>
<msg timestamp="20210910 01:53:58.473" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210910 01:53:51.451" endtime="20210910 01:53:58.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:53:58.478" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/98511-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:54:04.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:54:04.896" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210910 01:53:58.475" endtime="20210910 01:54:04.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:54:04.898" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:54:04.897" endtime="20210910 01:54:04.898"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:54:04.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:54:04.898" endtime="20210910 01:54:04.899"/>
</kw>
<status status="PASS" starttime="20210910 01:53:58.474" endtime="20210910 01:54:04.899"/>
</kw>
<msg timestamp="20210910 01:54:04.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:53:58.474" endtime="20210910 01:54:04.899"/>
</kw>
<msg timestamp="20210910 01:54:04.900" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210910 01:53:58.473" endtime="20210910 01:54:04.900"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:54:04.900" endtime="20210910 01:54:04.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:54:04.905" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/98511-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:54:10.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:54:10.693" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:54:04.903" endtime="20210910 01:54:10.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:54:10.695" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:54:10.693" endtime="20210910 01:54:10.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:54:10.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:54:10.696" endtime="20210910 01:54:10.696"/>
</kw>
<status status="PASS" starttime="20210910 01:54:04.902" endtime="20210910 01:54:10.697"/>
</kw>
<msg timestamp="20210910 01:54:10.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:54:04.902" endtime="20210910 01:54:10.697"/>
</kw>
<msg timestamp="20210910 01:54:10.697" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210910 01:54:04.901" endtime="20210910 01:54:10.697"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:54:10.702" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/98511-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:54:19.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:54:19.739" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210910 01:54:10.699" endtime="20210910 01:54:19.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:54:19.740" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:54:19.739" endtime="20210910 01:54:19.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:54:19.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:54:19.740" endtime="20210910 01:54:19.741"/>
</kw>
<status status="PASS" starttime="20210910 01:54:10.699" endtime="20210910 01:54:19.741"/>
</kw>
<msg timestamp="20210910 01:54:19.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:54:10.698" endtime="20210910 01:54:19.742"/>
</kw>
<msg timestamp="20210910 01:54:19.742" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210910 01:54:10.698" endtime="20210910 01:54:19.742"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:54:19.742" endtime="20210910 01:54:19.743"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:54:19.743" endtime="20210910 01:54:19.744"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:54:19.750" level="INFO">Running command 'ozone sh key put o3://om:9862/98511-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:57:30.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:57:30.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:54:19.747" endtime="20210910 01:57:30.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:57:30.442" level="INFO"/>
<status status="PASS" starttime="20210910 01:57:30.441" endtime="20210910 01:57:30.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:57:30.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:57:30.442" endtime="20210910 01:57:30.443"/>
</kw>
<status status="PASS" starttime="20210910 01:54:19.746" endtime="20210910 01:57:30.443"/>
</kw>
<msg timestamp="20210910 01:57:30.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:54:19.746" endtime="20210910 01:57:30.444"/>
</kw>
<status status="PASS" starttime="20210910 01:54:19.744" endtime="20210910 01:57:30.444"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:57:30.449" level="INFO">Running command 'ozone sh key getacl o3://om:9862/98511-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:57:38.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:57:38.960" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210910 01:57:30.446" endtime="20210910 01:57:38.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:57:38.962" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210910 01:57:38.961" endtime="20210910 01:57:38.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:57:38.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:57:38.962" endtime="20210910 01:57:38.964"/>
</kw>
<status status="PASS" starttime="20210910 01:57:30.446" endtime="20210910 01:57:38.964"/>
</kw>
<msg timestamp="20210910 01:57:38.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:57:30.445" endtime="20210910 01:57:38.965"/>
</kw>
<msg timestamp="20210910 01:57:38.965" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210910 01:57:30.444" endtime="20210910 01:57:38.966"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:57:38.966" endtime="20210910 01:57:38.967"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210910 01:57:38.967" endtime="20210910 01:57:38.968"/>
</kw>
<status status="PASS" starttime="20210910 01:53:37.095" endtime="20210910 01:57:38.968"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210910 01:53:36.858" endtime="20210910 01:57:38.969"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:57:38.986" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:57:38.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:57:38.994" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:57:38.979" endtime="20210910 01:57:38.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:57:38.996" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:57:38.995" endtime="20210910 01:57:38.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:57:38.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:57:38.997" endtime="20210910 01:57:38.997"/>
</kw>
<status status="PASS" starttime="20210910 01:57:38.978" endtime="20210910 01:57:38.998"/>
</kw>
<msg timestamp="20210910 01:57:38.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:57:38.978" endtime="20210910 01:57:39.002"/>
</kw>
<msg timestamp="20210910 01:57:39.002" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:57:38.977" endtime="20210910 01:57:39.002"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:57:39.003" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:57:39.002" endtime="20210910 01:57:39.003"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:57:39.014" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:57:39.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:57:39.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:57:39.009" endtime="20210910 01:57:39.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:57:39.028" level="INFO"/>
<status status="PASS" starttime="20210910 01:57:39.027" endtime="20210910 01:57:39.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:57:39.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:57:39.028" endtime="20210910 01:57:39.029"/>
</kw>
<status status="PASS" starttime="20210910 01:57:39.008" endtime="20210910 01:57:39.030"/>
</kw>
<msg timestamp="20210910 01:57:39.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:57:39.008" endtime="20210910 01:57:39.030"/>
</kw>
<status status="PASS" starttime="20210910 01:57:39.007" endtime="20210910 01:57:39.030"/>
</kw>
<status status="PASS" starttime="20210910 01:57:39.003" endtime="20210910 01:57:39.030"/>
</kw>
<status status="PASS" starttime="20210910 01:57:38.977" endtime="20210910 01:57:39.031"/>
</kw>
<status status="PASS" starttime="20210910 01:57:38.976" endtime="20210910 01:57:39.031"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:57:39.036" level="INFO">Running command 'ozone sh volume info o3:///98511-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:57:46.638" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 01:57:46.639" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98511-rpcwport is not found</msg>
<status status="PASS" starttime="20210910 01:57:39.034" endtime="20210910 01:57:46.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:57:46.640" level="INFO">VOLUME_NOT_FOUND Volume 98511-rpcwport is not found</msg>
<status status="PASS" starttime="20210910 01:57:46.639" endtime="20210910 01:57:46.640"/>
</kw>
<msg timestamp="20210910 01:57:46.641" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98511-rpcwport is not found</msg>
<status status="PASS" starttime="20210910 01:57:39.033" endtime="20210910 01:57:46.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:57:46.641" endtime="20210910 01:57:46.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:57:46.647" level="INFO">Running command 'ozone sh volume create o3:///98511-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:57:53.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:57:53.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:57:46.644" endtime="20210910 01:57:53.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:57:53.215" level="INFO"/>
<status status="PASS" starttime="20210910 01:57:53.213" endtime="20210910 01:57:53.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:57:53.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:57:53.215" endtime="20210910 01:57:53.217"/>
</kw>
<status status="PASS" starttime="20210910 01:57:46.643" endtime="20210910 01:57:53.218"/>
</kw>
<msg timestamp="20210910 01:57:53.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:57:46.642" endtime="20210910 01:57:53.219"/>
</kw>
<msg timestamp="20210910 01:57:53.220" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210910 01:57:46.642" endtime="20210910 01:57:53.221"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:57:53.221" endtime="20210910 01:57:53.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:57:53.235" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="98511-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:58:01.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:58:01.719" level="INFO">${output} = {
  "metadata": {},
  "name": "98511-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210910 01:57:53.227" endtime="20210910 01:58:01.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:58:01.720" level="INFO">{
  "metadata": {},
  "name": "98511-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-10T01:57:53.086Z",
  "modificationTime": "2021-09-10T01:57:53.086Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210910 01:58:01.719" endtime="20210910 01:58:01.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:58:01.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:58:01.720" endtime="20210910 01:58:01.721"/>
</kw>
<status status="PASS" starttime="20210910 01:57:53.226" endtime="20210910 01:58:01.722"/>
</kw>
<msg timestamp="20210910 01:58:01.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:57:53.225" endtime="20210910 01:58:01.722"/>
</kw>
<msg timestamp="20210910 01:58:01.723" level="INFO">${result} = {
  "metadata": {},
  "name": "98511-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210910 01:57:53.223" endtime="20210910 01:58:01.723"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:58:01.724" endtime="20210910 01:58:01.724"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:58:01.730" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="98511-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:58:10.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:58:10.383" level="INFO">${output} = {
  "metadata": {},
  "name": "98511-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210910 01:58:01.726" endtime="20210910 01:58:10.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:58:10.385" level="INFO">{
  "metadata": {},
  "name": "98511-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-10T01:57:53.086Z",
  "modificationTime": "2021-09-10T01:57:53.086Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210910 01:58:10.384" endtime="20210910 01:58:10.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:58:10.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:58:10.385" endtime="20210910 01:58:10.386"/>
</kw>
<status status="PASS" starttime="20210910 01:58:01.726" endtime="20210910 01:58:10.386"/>
</kw>
<msg timestamp="20210910 01:58:10.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:58:01.725" endtime="20210910 01:58:10.386"/>
</kw>
<msg timestamp="20210910 01:58:10.387" level="INFO">${result} = {
  "metadata": {},
  "name": "98511-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210910 01:58:01.725" endtime="20210910 01:58:10.387"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 01:58:10.387" endtime="20210910 01:58:10.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:58:10.393" level="INFO">Running command 'ozone sh volume setquota o3:///98511-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:58:17.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:58:17.907" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:58:10.390" endtime="20210910 01:58:17.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:58:17.908" level="INFO"/>
<status status="PASS" starttime="20210910 01:58:17.907" endtime="20210910 01:58:17.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:58:17.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:58:17.908" endtime="20210910 01:58:17.909"/>
</kw>
<status status="PASS" starttime="20210910 01:58:10.389" endtime="20210910 01:58:17.909"/>
</kw>
<msg timestamp="20210910 01:58:17.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:58:10.389" endtime="20210910 01:58:17.910"/>
</kw>
<status status="PASS" starttime="20210910 01:58:10.388" endtime="20210910 01:58:17.910"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:58:17.917" level="INFO">Running command 'ozone sh volume info o3:///98511-rpcwport | jq -r '. | select(.name=="98511-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:58:26.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:58:26.108" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:58:17.912" endtime="20210910 01:58:26.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:58:26.110" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210910 01:58:26.109" endtime="20210910 01:58:26.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:58:26.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:58:26.111" endtime="20210910 01:58:26.112"/>
</kw>
<status status="PASS" starttime="20210910 01:58:17.912" endtime="20210910 01:58:26.113"/>
</kw>
<msg timestamp="20210910 01:58:26.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:58:17.911" endtime="20210910 01:58:26.113"/>
</kw>
<msg timestamp="20210910 01:58:26.113" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:58:17.910" endtime="20210910 01:58:26.113"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:58:26.113" endtime="20210910 01:58:26.114"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:58:26.119" level="INFO">Running command 'ozone sh bucket create o3:///98511-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:58:34.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:58:34.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:58:26.116" endtime="20210910 01:58:34.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:58:34.390" level="INFO"/>
<status status="PASS" starttime="20210910 01:58:34.389" endtime="20210910 01:58:34.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:58:34.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:58:34.390" endtime="20210910 01:58:34.391"/>
</kw>
<status status="PASS" starttime="20210910 01:58:26.115" endtime="20210910 01:58:34.391"/>
</kw>
<msg timestamp="20210910 01:58:34.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:58:26.115" endtime="20210910 01:58:34.392"/>
</kw>
<status status="PASS" starttime="20210910 01:58:26.114" endtime="20210910 01:58:34.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:58:34.400" level="INFO">Running command 'ozone sh bucket info o3:///98511-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:58:42.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:58:42.899" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210910 01:58:34.397" endtime="20210910 01:58:42.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:58:42.901" level="INFO">DISK</msg>
<status status="PASS" starttime="20210910 01:58:42.900" endtime="20210910 01:58:42.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:58:42.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:58:42.903" endtime="20210910 01:58:42.904"/>
</kw>
<status status="PASS" starttime="20210910 01:58:34.395" endtime="20210910 01:58:42.904"/>
</kw>
<msg timestamp="20210910 01:58:42.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:58:34.394" endtime="20210910 01:58:42.904"/>
</kw>
<msg timestamp="20210910 01:58:42.905" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210910 01:58:34.392" endtime="20210910 01:58:42.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:58:42.905" endtime="20210910 01:58:42.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:58:42.912" level="INFO">Running command 'ozone sh bucket info o3:///98511-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:58:51.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:58:51.944" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:58:42.909" endtime="20210910 01:58:51.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:58:51.947" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210910 01:58:51.945" endtime="20210910 01:58:51.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:58:51.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:58:51.948" endtime="20210910 01:58:51.949"/>
</kw>
<status status="PASS" starttime="20210910 01:58:42.907" endtime="20210910 01:58:51.950"/>
</kw>
<msg timestamp="20210910 01:58:51.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:58:42.907" endtime="20210910 01:58:51.950"/>
</kw>
<msg timestamp="20210910 01:58:51.950" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210910 01:58:42.906" endtime="20210910 01:58:51.951"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:58:51.951" endtime="20210910 01:58:51.952"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:58:51.959" level="INFO">Running command 'ozone sh bucket info o3:///98511-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:58:58.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:58:58.929" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210910 01:58:51.956" endtime="20210910 01:58:58.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:58:58.931" level="INFO">100</msg>
<status status="PASS" starttime="20210910 01:58:58.930" endtime="20210910 01:58:58.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:58:58.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:58:58.932" endtime="20210910 01:58:58.933"/>
</kw>
<status status="PASS" starttime="20210910 01:58:51.955" endtime="20210910 01:58:58.933"/>
</kw>
<msg timestamp="20210910 01:58:58.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:58:51.954" endtime="20210910 01:58:58.934"/>
</kw>
<msg timestamp="20210910 01:58:58.935" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210910 01:58:51.952" endtime="20210910 01:58:58.935"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:58:58.935" endtime="20210910 01:58:58.937"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:58:58.944" level="INFO">Running command 'ozone sh bucket setquota o3:///98511-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:59:06.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:59:06.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:58:58.941" endtime="20210910 01:59:06.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:59:06.413" level="INFO"/>
<status status="PASS" starttime="20210910 01:59:06.411" endtime="20210910 01:59:06.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:59:06.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:59:06.413" endtime="20210910 01:59:06.414"/>
</kw>
<status status="PASS" starttime="20210910 01:58:58.940" endtime="20210910 01:59:06.415"/>
</kw>
<msg timestamp="20210910 01:59:06.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:58:58.939" endtime="20210910 01:59:06.415"/>
</kw>
<status status="PASS" starttime="20210910 01:58:58.937" endtime="20210910 01:59:06.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:59:06.423" level="INFO">Running command 'ozone sh bucket info o3:///98511-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:59:14.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:59:14.413" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210910 01:59:06.420" endtime="20210910 01:59:14.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:59:14.414" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210910 01:59:14.413" endtime="20210910 01:59:14.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:59:14.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:59:14.414" endtime="20210910 01:59:14.415"/>
</kw>
<status status="PASS" starttime="20210910 01:59:06.419" endtime="20210910 01:59:14.416"/>
</kw>
<msg timestamp="20210910 01:59:14.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:59:06.418" endtime="20210910 01:59:14.416"/>
</kw>
<msg timestamp="20210910 01:59:14.416" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210910 01:59:06.416" endtime="20210910 01:59:14.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:59:14.417" endtime="20210910 01:59:14.418"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:59:14.424" level="INFO">Running command 'ozone sh bucket info o3:///98511-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:59:22.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:59:22.991" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210910 01:59:14.421" endtime="20210910 01:59:22.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:59:22.993" level="INFO">1000</msg>
<status status="PASS" starttime="20210910 01:59:22.992" endtime="20210910 01:59:22.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:59:22.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:59:22.993" endtime="20210910 01:59:22.994"/>
</kw>
<status status="PASS" starttime="20210910 01:59:14.420" endtime="20210910 01:59:22.995"/>
</kw>
<msg timestamp="20210910 01:59:22.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:59:14.419" endtime="20210910 01:59:22.995"/>
</kw>
<msg timestamp="20210910 01:59:22.996" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210910 01:59:14.418" endtime="20210910 01:59:22.996"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:59:22.996" endtime="20210910 01:59:22.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:59:23.002" level="INFO">Running command 'ozone sh bucket list o3:///98511-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:59:30.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:59:30.954" level="INFO">${output} = 98511-rpcwport</msg>
<status status="PASS" starttime="20210910 01:59:22.999" endtime="20210910 01:59:30.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:59:30.956" level="INFO">98511-rpcwport</msg>
<status status="PASS" starttime="20210910 01:59:30.955" endtime="20210910 01:59:30.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:59:30.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:59:30.956" endtime="20210910 01:59:30.957"/>
</kw>
<status status="PASS" starttime="20210910 01:59:22.999" endtime="20210910 01:59:30.957"/>
</kw>
<msg timestamp="20210910 01:59:30.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:59:22.998" endtime="20210910 01:59:30.957"/>
</kw>
<msg timestamp="20210910 01:59:30.957" level="INFO">${result} = 98511-rpcwport</msg>
<status status="PASS" starttime="20210910 01:59:22.997" endtime="20210910 01:59:30.958"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 01:59:30.958" endtime="20210910 01:59:30.958"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:59:30.964" level="INFO">Running command 'ozone sh key put o3:///98511-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:02:38.971" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210910 01:59:30.961" endtime="20210910 02:02:38.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.971" endtime="20210910 02:02:38.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.972" endtime="20210910 02:02:38.972"/>
</kw>
<status status="FAIL" starttime="20210910 01:59:30.961" endtime="20210910 02:02:38.972"/>
</kw>
<msg timestamp="20210910 02:02:38.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210910 01:59:30.960" endtime="20210910 02:02:38.972"/>
</kw>
<status status="FAIL" starttime="20210910 01:59:30.960" endtime="20210910 02:02:38.973"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.973" endtime="20210910 02:02:38.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.973" endtime="20210910 02:02:38.973"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.973" endtime="20210910 02:02:38.973"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.973" endtime="20210910 02:02:38.974"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.974" endtime="20210910 02:02:38.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.974" endtime="20210910 02:02:38.974"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.974" endtime="20210910 02:02:38.974"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.974" endtime="20210910 02:02:38.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.975" endtime="20210910 02:02:38.976"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.976" endtime="20210910 02:02:38.976"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.976" endtime="20210910 02:02:38.976"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.976" endtime="20210910 02:02:38.976"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.977" endtime="20210910 02:02:38.977"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.977" endtime="20210910 02:02:38.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.977" endtime="20210910 02:02:38.977"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.977" endtime="20210910 02:02:38.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.977" endtime="20210910 02:02:38.978"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.978" endtime="20210910 02:02:38.978"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.978" endtime="20210910 02:02:38.978"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.978" endtime="20210910 02:02:38.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.978" endtime="20210910 02:02:38.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.979" endtime="20210910 02:02:38.979"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.979" endtime="20210910 02:02:38.979"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.979" endtime="20210910 02:02:38.979"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.979" endtime="20210910 02:02:38.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.980" endtime="20210910 02:02:38.980"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.981" endtime="20210910 02:02:38.981"/>
</kw>
<status status="FAIL" starttime="20210910 01:59:30.959" endtime="20210910 02:02:38.981"/>
</kw>
<status status="FAIL" starttime="20210910 01:59:30.958" endtime="20210910 02:02:38.981"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.982" endtime="20210910 02:02:38.982"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.982" endtime="20210910 02:02:38.982"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.982" endtime="20210910 02:02:38.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.983" endtime="20210910 02:02:38.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.983" endtime="20210910 02:02:38.983"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.983" endtime="20210910 02:02:38.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.984" endtime="20210910 02:02:38.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.984" endtime="20210910 02:02:38.984"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.984" endtime="20210910 02:02:38.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.984" endtime="20210910 02:02:38.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.985" endtime="20210910 02:02:38.985"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.985" endtime="20210910 02:02:38.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.985" endtime="20210910 02:02:38.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.985" endtime="20210910 02:02:38.985"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.986" endtime="20210910 02:02:38.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.986" endtime="20210910 02:02:38.986"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.986" endtime="20210910 02:02:38.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.986" endtime="20210910 02:02:38.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.987" endtime="20210910 02:02:38.987"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.987" endtime="20210910 02:02:38.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.987" endtime="20210910 02:02:38.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.987" endtime="20210910 02:02:38.987"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.988" endtime="20210910 02:02:38.988"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:02:38.988" endtime="20210910 02:02:38.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.988" endtime="20210910 02:02:38.988"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 02:02:38.988" endtime="20210910 02:02:38.989"/>
</kw>
<status status="FAIL" starttime="20210910 01:57:39.031" endtime="20210910 02:02:38.989"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210910 01:57:38.970" endtime="20210910 02:02:38.989">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:02:38.999" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:02:39.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:02:39.004" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 02:02:38.997" endtime="20210910 02:02:39.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:02:39.005" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 02:02:39.004" endtime="20210910 02:02:39.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:02:39.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:02:39.006" endtime="20210910 02:02:39.006"/>
</kw>
<status status="PASS" starttime="20210910 02:02:38.996" endtime="20210910 02:02:39.007"/>
</kw>
<msg timestamp="20210910 02:02:39.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:02:38.996" endtime="20210910 02:02:39.007"/>
</kw>
<msg timestamp="20210910 02:02:39.007" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 02:02:38.994" endtime="20210910 02:02:39.007"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 02:02:39.009" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 02:02:39.007" endtime="20210910 02:02:39.009"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:02:39.014" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:02:39.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:02:39.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 02:02:39.011" endtime="20210910 02:02:39.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:02:39.230" level="INFO"/>
<status status="PASS" starttime="20210910 02:02:39.227" endtime="20210910 02:02:39.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:02:39.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:02:39.230" endtime="20210910 02:02:39.231"/>
</kw>
<status status="PASS" starttime="20210910 02:02:39.011" endtime="20210910 02:02:39.231"/>
</kw>
<msg timestamp="20210910 02:02:39.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:02:39.010" endtime="20210910 02:02:39.231"/>
</kw>
<status status="PASS" starttime="20210910 02:02:39.010" endtime="20210910 02:02:39.232"/>
</kw>
<status status="PASS" starttime="20210910 02:02:39.009" endtime="20210910 02:02:39.232"/>
</kw>
<status status="PASS" starttime="20210910 02:02:38.994" endtime="20210910 02:02:39.232"/>
</kw>
<status status="PASS" starttime="20210910 02:02:38.993" endtime="20210910 02:02:39.232"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:02:39.237" level="INFO">Running command 'ozone sh volume info /98511-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:02:45.243" level="INFO">${rc} = 255</msg>
<msg timestamp="20210910 02:02:45.243" level="INFO">${output} = VOLUME_NOT_FOUND Volume 98511-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210910 02:02:39.235" endtime="20210910 02:02:45.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:02:45.245" level="INFO">VOLUME_NOT_FOUND Volume 98511-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210910 02:02:45.244" endtime="20210910 02:02:45.245"/>
</kw>
<msg timestamp="20210910 02:02:45.245" level="INFO">${result} = VOLUME_NOT_FOUND Volume 98511-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210910 02:02:39.234" endtime="20210910 02:02:45.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 02:02:45.246" endtime="20210910 02:02:45.246"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:02:45.251" level="INFO">Running command 'ozone sh volume create /98511-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:02:52.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:02:52.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 02:02:45.248" endtime="20210910 02:02:52.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:02:52.563" level="INFO"/>
<status status="PASS" starttime="20210910 02:02:52.562" endtime="20210910 02:02:52.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:02:52.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:02:52.564" endtime="20210910 02:02:52.565"/>
</kw>
<status status="PASS" starttime="20210910 02:02:45.248" endtime="20210910 02:02:52.565"/>
</kw>
<msg timestamp="20210910 02:02:52.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:02:45.247" endtime="20210910 02:02:52.566"/>
</kw>
<msg timestamp="20210910 02:02:52.566" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210910 02:02:45.246" endtime="20210910 02:02:52.566"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 02:02:52.566" endtime="20210910 02:02:52.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:02:52.573" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="98511-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:03:01.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:03:01.485" level="INFO">${output} = {
  "metadata": {},
  "name": "98511-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210910 02:02:52.570" endtime="20210910 02:03:01.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:03:01.486" level="INFO">{
  "metadata": {},
  "name": "98511-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-10T02:02:52.342Z",
  "modificationTime": "2021-09-10T02:02:52.342Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210910 02:03:01.486" endtime="20210910 02:03:01.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:03:01.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:03:01.487" endtime="20210910 02:03:01.487"/>
</kw>
<status status="PASS" starttime="20210910 02:02:52.569" endtime="20210910 02:03:01.488"/>
</kw>
<msg timestamp="20210910 02:03:01.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:02:52.569" endtime="20210910 02:03:01.488"/>
</kw>
<msg timestamp="20210910 02:03:01.488" level="INFO">${result} = {
  "metadata": {},
  "name": "98511-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210910 02:02:52.567" endtime="20210910 02:03:01.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 02:03:01.489" endtime="20210910 02:03:01.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:03:01.494" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="98511-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:03:08.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:03:08.875" level="INFO">${output} = {
  "metadata": {},
  "name": "98511-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210910 02:03:01.491" endtime="20210910 02:03:08.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:03:08.877" level="INFO">{
  "metadata": {},
  "name": "98511-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-10T02:02:52.342Z",
  "modificationTime": "2021-09-10T02:02:52.342Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210910 02:03:08.877" endtime="20210910 02:03:08.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:03:08.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:03:08.878" endtime="20210910 02:03:08.878"/>
</kw>
<status status="PASS" starttime="20210910 02:03:01.491" endtime="20210910 02:03:08.879"/>
</kw>
<msg timestamp="20210910 02:03:08.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:03:01.490" endtime="20210910 02:03:08.879"/>
</kw>
<msg timestamp="20210910 02:03:08.880" level="INFO">${result} = {
  "metadata": {},
  "name": "98511-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210910 02:03:01.489" endtime="20210910 02:03:08.880"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210910 02:03:08.880" endtime="20210910 02:03:08.880"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:03:08.889" level="INFO">Running command 'ozone sh volume setquota /98511-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:03:15.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:03:15.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 02:03:08.886" endtime="20210910 02:03:15.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:03:15.993" level="INFO"/>
<status status="PASS" starttime="20210910 02:03:15.992" endtime="20210910 02:03:15.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:03:15.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:03:15.993" endtime="20210910 02:03:15.994"/>
</kw>
<status status="PASS" starttime="20210910 02:03:08.885" endtime="20210910 02:03:15.994"/>
</kw>
<msg timestamp="20210910 02:03:15.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:03:08.884" endtime="20210910 02:03:15.995"/>
</kw>
<status status="PASS" starttime="20210910 02:03:08.881" endtime="20210910 02:03:15.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:03:16.002" level="INFO">Running command 'ozone sh volume info /98511-rpcwoscheme | jq -r '. | select(.name=="98511-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:03:23.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:03:23.559" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210910 02:03:15.998" endtime="20210910 02:03:23.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:03:23.561" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210910 02:03:23.560" endtime="20210910 02:03:23.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:03:23.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:03:23.562" endtime="20210910 02:03:23.563"/>
</kw>
<status status="PASS" starttime="20210910 02:03:15.997" endtime="20210910 02:03:23.563"/>
</kw>
<msg timestamp="20210910 02:03:23.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:03:15.997" endtime="20210910 02:03:23.564"/>
</kw>
<msg timestamp="20210910 02:03:23.564" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210910 02:03:15.995" endtime="20210910 02:03:23.564"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 02:03:23.564" endtime="20210910 02:03:23.565"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:03:23.570" level="INFO">Running command 'ozone sh bucket create /98511-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:03:31.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:03:31.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 02:03:23.567" endtime="20210910 02:03:31.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:03:31.771" level="INFO"/>
<status status="PASS" starttime="20210910 02:03:31.771" endtime="20210910 02:03:31.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:03:31.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:03:31.772" endtime="20210910 02:03:31.772"/>
</kw>
<status status="PASS" starttime="20210910 02:03:23.567" endtime="20210910 02:03:31.773"/>
</kw>
<msg timestamp="20210910 02:03:31.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:03:23.566" endtime="20210910 02:03:31.773"/>
</kw>
<status status="PASS" starttime="20210910 02:03:23.565" endtime="20210910 02:03:31.774"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:03:31.780" level="INFO">Running command 'ozone sh bucket info /98511-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:03:40.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:03:40.125" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210910 02:03:31.776" endtime="20210910 02:03:40.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:03:40.128" level="INFO">DISK</msg>
<status status="PASS" starttime="20210910 02:03:40.126" endtime="20210910 02:03:40.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:03:40.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:03:40.128" endtime="20210910 02:03:40.132"/>
</kw>
<status status="PASS" starttime="20210910 02:03:31.776" endtime="20210910 02:03:40.132"/>
</kw>
<msg timestamp="20210910 02:03:40.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:03:31.775" endtime="20210910 02:03:40.132"/>
</kw>
<msg timestamp="20210910 02:03:40.133" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210910 02:03:31.774" endtime="20210910 02:03:40.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 02:03:40.133" endtime="20210910 02:03:40.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:03:40.142" level="INFO">Running command 'ozone sh bucket info /98511-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:03:47.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:03:47.990" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210910 02:03:40.138" endtime="20210910 02:03:47.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:03:47.991" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210910 02:03:47.990" endtime="20210910 02:03:47.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:03:47.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:03:47.992" endtime="20210910 02:03:47.993"/>
</kw>
<status status="PASS" starttime="20210910 02:03:40.137" endtime="20210910 02:03:47.993"/>
</kw>
<msg timestamp="20210910 02:03:47.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:03:40.137" endtime="20210910 02:03:47.994"/>
</kw>
<msg timestamp="20210910 02:03:47.995" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210910 02:03:40.134" endtime="20210910 02:03:47.995"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 02:03:47.996" endtime="20210910 02:03:47.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:03:48.003" level="INFO">Running command 'ozone sh bucket info /98511-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:03:54.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:03:54.679" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210910 02:03:48.001" endtime="20210910 02:03:54.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:03:54.681" level="INFO">100</msg>
<status status="PASS" starttime="20210910 02:03:54.680" endtime="20210910 02:03:54.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:03:54.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:03:54.681" endtime="20210910 02:03:54.682"/>
</kw>
<status status="PASS" starttime="20210910 02:03:48.000" endtime="20210910 02:03:54.682"/>
</kw>
<msg timestamp="20210910 02:03:54.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:03:47.999" endtime="20210910 02:03:54.682"/>
</kw>
<msg timestamp="20210910 02:03:54.683" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210910 02:03:47.997" endtime="20210910 02:03:54.683"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 02:03:54.683" endtime="20210910 02:03:54.683"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:03:54.687" level="INFO">Running command 'ozone sh bucket setquota /98511-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:04:01.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:04:01.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 02:03:54.685" endtime="20210910 02:04:01.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:04:01.651" level="INFO"/>
<status status="PASS" starttime="20210910 02:04:01.651" endtime="20210910 02:04:01.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:04:01.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:04:01.652" endtime="20210910 02:04:01.653"/>
</kw>
<status status="PASS" starttime="20210910 02:03:54.685" endtime="20210910 02:04:01.654"/>
</kw>
<msg timestamp="20210910 02:04:01.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:03:54.684" endtime="20210910 02:04:01.655"/>
</kw>
<status status="PASS" starttime="20210910 02:03:54.684" endtime="20210910 02:04:01.655"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:04:01.664" level="INFO">Running command 'ozone sh bucket info /98511-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:04:09.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:04:09.948" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210910 02:04:01.660" endtime="20210910 02:04:09.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:04:09.951" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210910 02:04:09.950" endtime="20210910 02:04:09.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:04:09.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:04:09.952" endtime="20210910 02:04:09.956"/>
</kw>
<status status="PASS" starttime="20210910 02:04:01.658" endtime="20210910 02:04:09.956"/>
</kw>
<msg timestamp="20210910 02:04:09.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:04:01.658" endtime="20210910 02:04:09.957"/>
</kw>
<msg timestamp="20210910 02:04:09.958" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210910 02:04:01.656" endtime="20210910 02:04:09.958"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 02:04:09.959" endtime="20210910 02:04:09.960"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:04:09.969" level="INFO">Running command 'ozone sh bucket info /98511-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:04:18.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:04:18.858" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210910 02:04:09.965" endtime="20210910 02:04:18.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:04:18.862" level="INFO">1000</msg>
<status status="PASS" starttime="20210910 02:04:18.859" endtime="20210910 02:04:18.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:04:18.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:04:18.862" endtime="20210910 02:04:18.864"/>
</kw>
<status status="PASS" starttime="20210910 02:04:09.964" endtime="20210910 02:04:18.864"/>
</kw>
<msg timestamp="20210910 02:04:18.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:04:09.963" endtime="20210910 02:04:18.865"/>
</kw>
<msg timestamp="20210910 02:04:18.865" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210910 02:04:09.960" endtime="20210910 02:04:18.865"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 02:04:18.865" endtime="20210910 02:04:18.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:04:18.873" level="INFO">Running command 'ozone sh bucket list /98511-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:04:27.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:04:27.789" level="INFO">${output} = 98511-rpcwoscheme</msg>
<status status="PASS" starttime="20210910 02:04:18.870" endtime="20210910 02:04:27.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:04:27.791" level="INFO">98511-rpcwoscheme</msg>
<status status="PASS" starttime="20210910 02:04:27.789" endtime="20210910 02:04:27.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:04:27.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:04:27.791" endtime="20210910 02:04:27.792"/>
</kw>
<status status="PASS" starttime="20210910 02:04:18.869" endtime="20210910 02:04:27.793"/>
</kw>
<msg timestamp="20210910 02:04:27.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:04:18.868" endtime="20210910 02:04:27.794"/>
</kw>
<msg timestamp="20210910 02:04:27.794" level="INFO">${result} = 98511-rpcwoscheme</msg>
<status status="PASS" starttime="20210910 02:04:18.866" endtime="20210910 02:04:27.794"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210910 02:04:27.795" endtime="20210910 02:04:27.796"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:04:27.804" level="INFO">Running command 'ozone sh key put /98511-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:07:36.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:07:36.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 02:04:27.801" endtime="20210910 02:07:36.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:07:36.357" level="INFO"/>
<status status="PASS" starttime="20210910 02:07:36.356" endtime="20210910 02:07:36.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:07:36.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:07:36.357" endtime="20210910 02:07:36.358"/>
</kw>
<status status="PASS" starttime="20210910 02:04:27.800" endtime="20210910 02:07:36.358"/>
</kw>
<msg timestamp="20210910 02:07:36.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:04:27.799" endtime="20210910 02:07:36.358"/>
</kw>
<status status="PASS" starttime="20210910 02:04:27.798" endtime="20210910 02:07:36.359"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:07:36.364" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:07:36.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 02:07:36.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 02:07:36.361" endtime="20210910 02:07:36.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 02:07:36.370" level="INFO"/>
<status status="PASS" starttime="20210910 02:07:36.369" endtime="20210910 02:07:36.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 02:07:36.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 02:07:36.370" endtime="20210910 02:07:36.371"/>
</kw>
<status status="PASS" starttime="20210910 02:07:36.360" endtime="20210910 02:07:36.372"/>
</kw>
<msg timestamp="20210910 02:07:36.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 02:07:36.360" endtime="20210910 02:07:36.372"/>
</kw>
<status status="PASS" starttime="20210910 02:07:36.359" endtime="20210910 02:07:36.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 02:07:36.378" level="INFO">Running command 'ozone sh key get /98511-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 02:07:38.993" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210910 02:07:36.376" endtime="20210910 02:07:38.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210910 02:07:38.994" endtime="20210910 02:07:38.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210910 02:07:38.994" endtime="20210910 02:07:38.994"/>
</kw>
<status status="FAIL" starttime="20210910 02:07:36.375" endtime="20210910 02:07:38.995"/>
</kw>
<msg timestamp="20210910 02:07:38.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210910 02:07:36.374" endtime="20210910 02:07:38.995"/>
</kw>
<status status="FAIL" starttime="20210910 02:07:36.373" endtime="20210910 02:07:38.995"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 02:07:38.996" endtime="20210910 02:07:38.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210910 02:07:38.996" endtime="20210910 02:07:38.996"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 02:07:38.997" endtime="20210910 02:07:38.997"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 02:07:38.997" endtime="20210910 02:07:38.997"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 02:07:38.997" endtime="20210910 02:07:38.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210910 02:07:38.998" endtime="20210910 02:07:38.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 02:07:38.998" endtime="20210910 02:07:38.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210910 02:07:38.998" endtime="20210910 02:07:38.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210910 02:07:38.999" endtime="20210910 02:07:38.999"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 02:07:38.999" endtime="20210910 02:07:38.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.000" endtime="20210910 02:07:39.000"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.001" endtime="20210910 02:07:39.001"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.001" endtime="20210910 02:07:39.002"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.003" endtime="20210910 02:07:39.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.003" endtime="20210910 02:07:39.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.008" endtime="20210910 02:07:39.008"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.009" endtime="20210910 02:07:39.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.010" endtime="20210910 02:07:39.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.011" endtime="20210910 02:07:39.012"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.012" endtime="20210910 02:07:39.012"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.016" endtime="20210910 02:07:39.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.016" endtime="20210910 02:07:39.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.017" endtime="20210910 02:07:39.018"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.018" endtime="20210910 02:07:39.019"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.019" endtime="20210910 02:07:39.019"/>
</kw>
<status status="FAIL" starttime="20210910 02:04:27.796" endtime="20210910 02:07:39.021"/>
</kw>
<status status="FAIL" starttime="20210910 02:04:27.796" endtime="20210910 02:07:39.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.021" endtime="20210910 02:07:39.021"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.022" endtime="20210910 02:07:39.023"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.023" endtime="20210910 02:07:39.024"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.025" endtime="20210910 02:07:39.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.028" endtime="20210910 02:07:39.028"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.031" endtime="20210910 02:07:39.032"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.033" endtime="20210910 02:07:39.034"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.034" endtime="20210910 02:07:39.034"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.035" endtime="20210910 02:07:39.035"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.035" endtime="20210910 02:07:39.035"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.035" endtime="20210910 02:07:39.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.036" endtime="20210910 02:07:39.036"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.036" endtime="20210910 02:07:39.037"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.037" endtime="20210910 02:07:39.037"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.038" endtime="20210910 02:07:39.038"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.039" endtime="20210910 02:07:39.039"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.040" endtime="20210910 02:07:39.041"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.041" endtime="20210910 02:07:39.041"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.041" endtime="20210910 02:07:39.041"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.041" endtime="20210910 02:07:39.047"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.047" endtime="20210910 02:07:39.047"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.047" endtime="20210910 02:07:39.047"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.047" endtime="20210910 02:07:39.047"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210910 02:07:39.048" endtime="20210910 02:07:39.048"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.048" endtime="20210910 02:07:39.048"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210910 02:07:39.048" endtime="20210910 02:07:39.048"/>
</kw>
<status status="FAIL" starttime="20210910 02:02:39.232" endtime="20210910 02:07:39.054"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210910 02:02:38.992" endtime="20210910 02:07:39.057">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210910 01:42:27.602" endtime="20210910 02:07:39.070"/>
</suite>
<status status="FAIL" starttime="20210910 01:17:40.391" endtime="20210910 02:07:39.101"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:17:35.091" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:17:35.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:17:35.095" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210910 01:17:35.087" endtime="20210910 01:17:35.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:17:35.097" level="INFO">scm</msg>
<status status="PASS" starttime="20210910 01:17:35.096" endtime="20210910 01:17:35.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:17:35.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:17:35.097" endtime="20210910 01:17:35.098"/>
</kw>
<status status="PASS" starttime="20210910 01:17:35.087" endtime="20210910 01:17:35.098"/>
</kw>
<msg timestamp="20210910 01:17:35.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:17:35.086" endtime="20210910 01:17:35.098"/>
</kw>
<msg timestamp="20210910 01:17:35.099" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210910 01:17:35.085" endtime="20210910 01:17:35.099"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210910 01:17:35.099" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210910 01:17:35.099" endtime="20210910 01:17:35.100"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210910 01:17:35.104" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210910 01:17:35.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210910 01:17:35.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210910 01:17:35.102" endtime="20210910 01:17:35.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210910 01:17:35.113" level="INFO"/>
<status status="PASS" starttime="20210910 01:17:35.112" endtime="20210910 01:17:35.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210910 01:17:35.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210910 01:17:35.113" endtime="20210910 01:17:35.114"/>
</kw>
<status status="PASS" starttime="20210910 01:17:35.101" endtime="20210910 01:17:35.114"/>
</kw>
<msg timestamp="20210910 01:17:35.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210910 01:17:35.101" endtime="20210910 01:17:35.114"/>
</kw>
<status status="PASS" starttime="20210910 01:17:35.100" endtime="20210910 01:17:35.114"/>
</kw>
<status status="PASS" starttime="20210910 01:17:35.100" endtime="20210910 01:17:35.115"/>
</kw>
<status status="PASS" starttime="20210910 01:17:35.084" endtime="20210910 01:17:35.115"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210910 01:17:35.083" endtime="20210910 01:17:35.115"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210910 01:17:35.017" endtime="20210910 01:17:35.117"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2998810"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
