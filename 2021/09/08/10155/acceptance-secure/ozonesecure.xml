<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210908 01:53:53.605" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:04:11.199" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:04:11.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:04:11.204" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:04:11.195" endtime="20210908 01:04:11.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:04:11.205" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:04:11.204" endtime="20210908 01:04:11.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:04:11.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:04:11.205" endtime="20210908 01:04:11.206"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.194" endtime="20210908 01:04:11.206"/>
</kw>
<msg timestamp="20210908 01:04:11.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:04:11.194" endtime="20210908 01:04:11.206"/>
</kw>
<msg timestamp="20210908 01:04:11.207" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210908 01:04:11.194" endtime="20210908 01:04:11.207"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:04:11.211" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:04:11.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:04:11.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:04:11.209" endtime="20210908 01:04:11.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:04:11.220" level="INFO"/>
<status status="PASS" starttime="20210908 01:04:11.219" endtime="20210908 01:04:11.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:04:11.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:04:11.220" endtime="20210908 01:04:11.221"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.209" endtime="20210908 01:04:11.221"/>
</kw>
<msg timestamp="20210908 01:04:11.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:04:11.208" endtime="20210908 01:04:11.221"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.208" endtime="20210908 01:04:11.221"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.207" endtime="20210908 01:04:11.222"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.193" endtime="20210908 01:04:11.222"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.193" endtime="20210908 01:04:11.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:04:11.226" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:04:11.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:04:11.355" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210908 01:04:11.223" endtime="20210908 01:04:11.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:04:11.357" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Wed, 08 Sep 2021 01:04:11 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC3SykVI+pDK1qrtPI80fUDpyGKy8BJF7+zCKCsgKnJ96DtZMFx7ddq58A0mRVj0QlZ0uybC9mapmW/RdIBS9Osn8+
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1631099051345&amp;s=e4PkvYpu4mXgwaQMyLIWbA7NuIuYR8WLcj8nbg2p96s="; Path=/; HttpOnly
Last-Modified: Wed, 08 Sep 2021 00:49:26 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210908 01:04:11.356" endtime="20210908 01:04:11.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:04:11.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:04:11.357" endtime="20210908 01:04:11.358"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.223" endtime="20210908 01:04:11.358"/>
</kw>
<msg timestamp="20210908 01:04:11.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:04:11.223" endtime="20210908 01:04:11.359"/>
</kw>
<msg timestamp="20210908 01:04:11.359" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210908 01:04:11.222" endtime="20210908 01:04:11.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:04:11.359" endtime="20210908 01:04:11.360"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210908 01:04:11.192" endtime="20210908 01:04:11.360"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:04:11.367" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:04:11.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:04:11.372" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:04:11.365" endtime="20210908 01:04:11.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:04:11.373" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:04:11.372" endtime="20210908 01:04:11.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:04:11.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:04:11.373" endtime="20210908 01:04:11.373"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.365" endtime="20210908 01:04:11.374"/>
</kw>
<msg timestamp="20210908 01:04:11.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:04:11.364" endtime="20210908 01:04:11.374"/>
</kw>
<msg timestamp="20210908 01:04:11.374" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:04:11.364" endtime="20210908 01:04:11.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:04:11.376" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:04:11.374" endtime="20210908 01:04:11.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:04:11.382" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:04:11.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:04:11.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:04:11.380" endtime="20210908 01:04:11.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:04:11.390" level="INFO"/>
<status status="PASS" starttime="20210908 01:04:11.389" endtime="20210908 01:04:11.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:04:11.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:04:11.390" endtime="20210908 01:04:11.391"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.379" endtime="20210908 01:04:11.391"/>
</kw>
<msg timestamp="20210908 01:04:11.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:04:11.378" endtime="20210908 01:04:11.392"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.377" endtime="20210908 01:04:11.392"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.377" endtime="20210908 01:04:11.392"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.363" endtime="20210908 01:04:11.392"/>
</kw>
<status status="PASS" starttime="20210908 01:04:11.363" endtime="20210908 01:04:11.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:04:11.396" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:11.362" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210908 01:04:11.394" endtime="20210908 01:09:11.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210908 01:09:11.363" endtime="20210908 01:09:11.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210908 01:09:11.363" endtime="20210908 01:09:11.363"/>
</kw>
<status status="FAIL" starttime="20210908 01:04:11.393" endtime="20210908 01:09:11.364"/>
</kw>
<msg timestamp="20210908 01:09:11.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210908 01:04:11.393" endtime="20210908 01:09:11.364"/>
</kw>
<status status="FAIL" starttime="20210908 01:04:11.392" endtime="20210908 01:09:11.364"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210908 01:09:11.365" endtime="20210908 01:09:11.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:09:11.365" endtime="20210908 01:09:11.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210908 01:04:11.362" endtime="20210908 01:09:11.365">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210908 01:04:11.162" endtime="20210908 01:09:11.368"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:11.385" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:13.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:09:13.707" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210908 01:09:11.383" endtime="20210908 01:09:13.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:13.709" level="INFO">om</msg>
<status status="PASS" starttime="20210908 01:09:13.708" endtime="20210908 01:09:13.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:13.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:13.709" endtime="20210908 01:09:13.710"/>
</kw>
<status status="PASS" starttime="20210908 01:09:11.382" endtime="20210908 01:09:13.710"/>
</kw>
<msg timestamp="20210908 01:09:13.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:09:11.381" endtime="20210908 01:09:13.710"/>
</kw>
<msg timestamp="20210908 01:09:13.711" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210908 01:09:11.381" endtime="20210908 01:09:13.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:09:13.711" endtime="20210908 01:09:13.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:13.715" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:16.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:09:16.494" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210908 01:09:13.713" endtime="20210908 01:09:16.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:16.495" level="INFO">om</msg>
<status status="PASS" starttime="20210908 01:09:16.494" endtime="20210908 01:09:16.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:16.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:16.495" endtime="20210908 01:09:16.496"/>
</kw>
<status status="PASS" starttime="20210908 01:09:13.713" endtime="20210908 01:09:16.496"/>
</kw>
<msg timestamp="20210908 01:09:16.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:09:13.712" endtime="20210908 01:09:16.496"/>
</kw>
<msg timestamp="20210908 01:09:16.497" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210908 01:09:13.712" endtime="20210908 01:09:16.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:09:16.497" endtime="20210908 01:09:16.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210908 01:09:11.379" endtime="20210908 01:09:16.498"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:16.505" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:19.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:09:19.410" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:09:16.503" endtime="20210908 01:09:19.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:19.412" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:09:19.411" endtime="20210908 01:09:19.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:19.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:19.412" endtime="20210908 01:09:19.413"/>
</kw>
<status status="PASS" starttime="20210908 01:09:16.502" endtime="20210908 01:09:19.414"/>
</kw>
<msg timestamp="20210908 01:09:19.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:09:16.501" endtime="20210908 01:09:19.414"/>
</kw>
<msg timestamp="20210908 01:09:19.414" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210908 01:09:16.501" endtime="20210908 01:09:19.415"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:09:19.415" endtime="20210908 01:09:19.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:19.420" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:22.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:09:22.652" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:09:19.417" endtime="20210908 01:09:22.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:22.654" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:09:22.652" endtime="20210908 01:09:22.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:22.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:22.654" endtime="20210908 01:09:22.655"/>
</kw>
<status status="PASS" starttime="20210908 01:09:19.417" endtime="20210908 01:09:22.655"/>
</kw>
<msg timestamp="20210908 01:09:22.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:09:19.416" endtime="20210908 01:09:22.656"/>
</kw>
<msg timestamp="20210908 01:09:22.656" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210908 01:09:19.416" endtime="20210908 01:09:22.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:09:22.656" endtime="20210908 01:09:22.657"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210908 01:09:16.500" endtime="20210908 01:09:22.657"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:22.663" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:25.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:09:25.081" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210908 01:09:22.661" endtime="20210908 01:09:25.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:25.083" level="INFO">om</msg>
<status status="PASS" starttime="20210908 01:09:25.082" endtime="20210908 01:09:25.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:25.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:25.083" endtime="20210908 01:09:25.084"/>
</kw>
<status status="PASS" starttime="20210908 01:09:22.661" endtime="20210908 01:09:25.084"/>
</kw>
<msg timestamp="20210908 01:09:25.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:09:22.660" endtime="20210908 01:09:25.085"/>
</kw>
<msg timestamp="20210908 01:09:25.085" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210908 01:09:22.659" endtime="20210908 01:09:25.086"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:09:25.086" endtime="20210908 01:09:25.087"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:09:25.087" endtime="20210908 01:09:25.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:25.092" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:27.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:09:27.689" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210908 01:09:25.089" endtime="20210908 01:09:27.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:27.691" level="INFO">om</msg>
<status status="PASS" starttime="20210908 01:09:27.690" endtime="20210908 01:09:27.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:27.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:27.691" endtime="20210908 01:09:27.692"/>
</kw>
<status status="PASS" starttime="20210908 01:09:25.088" endtime="20210908 01:09:27.692"/>
</kw>
<msg timestamp="20210908 01:09:27.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:09:25.088" endtime="20210908 01:09:27.692"/>
</kw>
<msg timestamp="20210908 01:09:27.693" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210908 01:09:25.087" endtime="20210908 01:09:27.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:09:27.693" endtime="20210908 01:09:27.694"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:09:27.694" endtime="20210908 01:09:27.694"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210908 01:09:22.658" endtime="20210908 01:09:27.695"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:27.702" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:30.111" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:09:30.111" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210908 01:09:27.698" endtime="20210908 01:09:30.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:30.113" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210908 01:09:30.112" endtime="20210908 01:09:30.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:30.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:30.114" endtime="20210908 01:09:30.115"/>
</kw>
<msg timestamp="20210908 01:09:30.116" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210908 01:09:27.697" endtime="20210908 01:09:30.116"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:09:30.116" endtime="20210908 01:09:30.117"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:30.122" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:32.621" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:09:32.621" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210908 01:09:30.119" endtime="20210908 01:09:32.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:32.623" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210908 01:09:32.622" endtime="20210908 01:09:32.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:32.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:32.623" endtime="20210908 01:09:32.624"/>
</kw>
<msg timestamp="20210908 01:09:32.624" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210908 01:09:30.118" endtime="20210908 01:09:32.624"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:09:32.624" endtime="20210908 01:09:32.625"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210908 01:09:27.696" endtime="20210908 01:09:32.625"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210908 01:09:11.372" endtime="20210908 01:09:32.627"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210908 01:09:32.666" level="INFO">${random} = 92517</msg>
<status status="PASS" starttime="20210908 01:09:32.665" endtime="20210908 01:09:32.666"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:09:32.669" level="INFO">${source} = 92517-source</msg>
<status status="PASS" starttime="20210908 01:09:32.666" endtime="20210908 01:09:32.669"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:09:32.671" level="INFO">${target} = 92517-target</msg>
<status status="PASS" starttime="20210908 01:09:32.670" endtime="20210908 01:09:32.671"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:32.675" level="INFO">Running command 'ozone sh volume create 92517-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:39.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:09:39.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:09:32.673" endtime="20210908 01:09:39.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:39.361" level="INFO"/>
<status status="PASS" starttime="20210908 01:09:39.360" endtime="20210908 01:09:39.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:39.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:39.361" endtime="20210908 01:09:39.361"/>
</kw>
<status status="PASS" starttime="20210908 01:09:32.672" endtime="20210908 01:09:39.362"/>
</kw>
<msg timestamp="20210908 01:09:39.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:09:32.672" endtime="20210908 01:09:39.362"/>
</kw>
<status status="PASS" starttime="20210908 01:09:32.672" endtime="20210908 01:09:39.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:39.366" level="INFO">Running command 'ozone sh volume create 92517-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:44.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:09:44.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:09:39.364" endtime="20210908 01:09:44.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:44.808" level="INFO"/>
<status status="PASS" starttime="20210908 01:09:44.807" endtime="20210908 01:09:44.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:44.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:44.808" endtime="20210908 01:09:44.809"/>
</kw>
<status status="PASS" starttime="20210908 01:09:39.363" endtime="20210908 01:09:44.810"/>
</kw>
<msg timestamp="20210908 01:09:44.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:09:39.363" endtime="20210908 01:09:44.810"/>
</kw>
<status status="PASS" starttime="20210908 01:09:39.362" endtime="20210908 01:09:44.811"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:44.818" level="INFO">Running command 'ozone sh bucket create 92517-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:09:50.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:09:50.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:09:44.816" endtime="20210908 01:09:50.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:09:50.539" level="INFO"/>
<status status="PASS" starttime="20210908 01:09:50.538" endtime="20210908 01:09:50.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:09:50.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:09:50.540" endtime="20210908 01:09:50.541"/>
</kw>
<status status="PASS" starttime="20210908 01:09:44.815" endtime="20210908 01:09:50.542"/>
</kw>
<msg timestamp="20210908 01:09:50.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:09:44.813" endtime="20210908 01:09:50.542"/>
</kw>
<status status="PASS" starttime="20210908 01:09:44.812" endtime="20210908 01:09:50.543"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:09:50.550" level="INFO">Running command 'ozone sh key put 92517-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:13:02.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:13:02.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:09:50.546" endtime="20210908 01:13:02.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:13:02.397" level="INFO"/>
<status status="PASS" starttime="20210908 01:13:02.396" endtime="20210908 01:13:02.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:13:02.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:13:02.397" endtime="20210908 01:13:02.398"/>
</kw>
<status status="PASS" starttime="20210908 01:09:50.545" endtime="20210908 01:13:02.398"/>
</kw>
<msg timestamp="20210908 01:13:02.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:09:50.545" endtime="20210908 01:13:02.398"/>
</kw>
<status status="PASS" starttime="20210908 01:09:50.544" endtime="20210908 01:13:02.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:13:02.406" level="INFO">Running command 'ozone sh bucket create 92517-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:13:10.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:13:10.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:13:02.402" endtime="20210908 01:13:10.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:13:10.395" level="INFO"/>
<status status="PASS" starttime="20210908 01:13:10.394" endtime="20210908 01:13:10.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:13:10.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:13:10.395" endtime="20210908 01:13:10.396"/>
</kw>
<status status="PASS" starttime="20210908 01:13:02.401" endtime="20210908 01:13:10.396"/>
</kw>
<msg timestamp="20210908 01:13:10.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:13:02.401" endtime="20210908 01:13:10.397"/>
</kw>
<status status="PASS" starttime="20210908 01:13:02.399" endtime="20210908 01:13:10.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:13:10.401" level="INFO">Running command 'ozone sh bucket link 92517-source/readable-bucket 92517-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:13:18.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:13:18.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:13:10.399" endtime="20210908 01:13:18.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:13:18.210" level="INFO"/>
<status status="PASS" starttime="20210908 01:13:18.210" endtime="20210908 01:13:18.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:13:18.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:13:18.211" endtime="20210908 01:13:18.211"/>
</kw>
<status status="PASS" starttime="20210908 01:13:10.398" endtime="20210908 01:13:18.212"/>
</kw>
<msg timestamp="20210908 01:13:18.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:13:10.398" endtime="20210908 01:13:18.212"/>
</kw>
<status status="PASS" starttime="20210908 01:13:10.397" endtime="20210908 01:13:18.213"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:13:18.218" level="INFO">Running command 'ozone sh bucket link 92517-source/readable-bucket 92517-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:13:26.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:13:26.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:13:18.216" endtime="20210908 01:13:26.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:13:26.199" level="INFO"/>
<status status="PASS" starttime="20210908 01:13:26.198" endtime="20210908 01:13:26.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:13:26.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:13:26.199" endtime="20210908 01:13:26.200"/>
</kw>
<status status="PASS" starttime="20210908 01:13:18.215" endtime="20210908 01:13:26.201"/>
</kw>
<msg timestamp="20210908 01:13:26.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:13:18.214" endtime="20210908 01:13:26.202"/>
</kw>
<status status="PASS" starttime="20210908 01:13:18.213" endtime="20210908 01:13:26.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:13:26.209" level="INFO">Running command 'ozone sh bucket link 92517-source/unreadable-bucket 92517-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:13:33.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:13:33.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:13:26.206" endtime="20210908 01:13:33.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:13:33.921" level="INFO"/>
<status status="PASS" starttime="20210908 01:13:33.920" endtime="20210908 01:13:33.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:13:33.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:13:33.921" endtime="20210908 01:13:33.922"/>
</kw>
<status status="PASS" starttime="20210908 01:13:26.205" endtime="20210908 01:13:33.922"/>
</kw>
<msg timestamp="20210908 01:13:33.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:13:26.205" endtime="20210908 01:13:33.923"/>
</kw>
<status status="PASS" starttime="20210908 01:13:26.204" endtime="20210908 01:13:33.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:13:33.928" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 92517-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:13:40.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:13:40.929" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:13:33.926" endtime="20210908 01:13:40.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:13:40.931" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:13:40.930" endtime="20210908 01:13:40.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:13:40.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:13:40.932" endtime="20210908 01:13:40.933"/>
</kw>
<status status="PASS" starttime="20210908 01:13:33.924" endtime="20210908 01:13:40.934"/>
</kw>
<msg timestamp="20210908 01:13:40.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:13:33.924" endtime="20210908 01:13:40.934"/>
</kw>
<status status="PASS" starttime="20210908 01:13:33.923" endtime="20210908 01:13:40.935"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:13:40.939" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 92517-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:13:48.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:13:48.879" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:13:40.937" endtime="20210908 01:13:48.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:13:48.881" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:13:48.879" endtime="20210908 01:13:48.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:13:48.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:13:48.881" endtime="20210908 01:13:48.882"/>
</kw>
<status status="PASS" starttime="20210908 01:13:40.936" endtime="20210908 01:13:48.883"/>
</kw>
<msg timestamp="20210908 01:13:48.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:13:40.936" endtime="20210908 01:13:48.883"/>
</kw>
<status status="PASS" starttime="20210908 01:13:40.935" endtime="20210908 01:13:48.884"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:13:48.889" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 92517-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:13:56.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:13:56.247" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:13:48.886" endtime="20210908 01:13:56.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:13:56.249" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:13:56.248" endtime="20210908 01:13:56.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:13:56.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:13:56.249" endtime="20210908 01:13:56.250"/>
</kw>
<status status="PASS" starttime="20210908 01:13:48.886" endtime="20210908 01:13:56.250"/>
</kw>
<msg timestamp="20210908 01:13:56.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:13:48.885" endtime="20210908 01:13:56.251"/>
</kw>
<status status="PASS" starttime="20210908 01:13:48.884" endtime="20210908 01:13:56.251"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:13:56.256" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 92517-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:14:01.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:14:01.694" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:13:56.253" endtime="20210908 01:14:01.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:14:01.697" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:14:01.696" endtime="20210908 01:14:01.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:14:01.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:14:01.697" endtime="20210908 01:14:01.698"/>
</kw>
<status status="PASS" starttime="20210908 01:13:56.252" endtime="20210908 01:14:01.699"/>
</kw>
<msg timestamp="20210908 01:14:01.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:13:56.252" endtime="20210908 01:14:01.699"/>
</kw>
<status status="PASS" starttime="20210908 01:13:56.251" endtime="20210908 01:14:01.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:14:01.706" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 92517-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:14:08.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:14:08.486" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:14:01.702" endtime="20210908 01:14:08.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:14:08.489" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:14:08.488" endtime="20210908 01:14:08.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:14:08.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:14:08.490" endtime="20210908 01:14:08.491"/>
</kw>
<status status="PASS" starttime="20210908 01:14:01.701" endtime="20210908 01:14:08.492"/>
</kw>
<msg timestamp="20210908 01:14:08.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:14:01.701" endtime="20210908 01:14:08.493"/>
</kw>
<status status="PASS" starttime="20210908 01:14:01.700" endtime="20210908 01:14:08.493"/>
</kw>
<status status="PASS" starttime="20210908 01:09:44.812" endtime="20210908 01:14:08.494"/>
</kw>
<status status="PASS" starttime="20210908 01:09:44.811" endtime="20210908 01:14:08.494"/>
</kw>
<status status="PASS" starttime="20210908 01:09:32.665" endtime="20210908 01:14:08.495"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:14:08.504" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:14:08.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:14:08.510" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:14:08.501" endtime="20210908 01:14:08.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:14:08.513" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:14:08.511" endtime="20210908 01:14:08.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:14:08.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:14:08.513" endtime="20210908 01:14:08.515"/>
</kw>
<status status="PASS" starttime="20210908 01:14:08.500" endtime="20210908 01:14:08.516"/>
</kw>
<msg timestamp="20210908 01:14:08.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:14:08.500" endtime="20210908 01:14:08.517"/>
</kw>
<msg timestamp="20210908 01:14:08.517" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:14:08.499" endtime="20210908 01:14:08.517"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:14:08.521" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:14:08.518" endtime="20210908 01:14:08.521"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:14:08.528" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:14:08.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:14:08.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:14:08.525" endtime="20210908 01:14:08.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:14:08.749" level="INFO"/>
<status status="PASS" starttime="20210908 01:14:08.748" endtime="20210908 01:14:08.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:14:08.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:14:08.749" endtime="20210908 01:14:08.750"/>
</kw>
<status status="PASS" starttime="20210908 01:14:08.524" endtime="20210908 01:14:08.750"/>
</kw>
<msg timestamp="20210908 01:14:08.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:14:08.523" endtime="20210908 01:14:08.751"/>
</kw>
<status status="PASS" starttime="20210908 01:14:08.522" endtime="20210908 01:14:08.751"/>
</kw>
<status status="PASS" starttime="20210908 01:14:08.522" endtime="20210908 01:14:08.751"/>
</kw>
<status status="PASS" starttime="20210908 01:14:08.498" endtime="20210908 01:14:08.751"/>
</kw>
<status status="PASS" starttime="20210908 01:14:08.497" endtime="20210908 01:14:08.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:14:08.763" level="INFO">Running command 'ozone sh bucket link 92517-source/no-such-bucket 92517-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:14:16.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:14:16.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:14:08.756" endtime="20210908 01:14:16.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:14:16.081" level="INFO"/>
<status status="PASS" starttime="20210908 01:14:16.079" endtime="20210908 01:14:16.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:14:16.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:14:16.082" endtime="20210908 01:14:16.084"/>
</kw>
<status status="PASS" starttime="20210908 01:14:08.753" endtime="20210908 01:14:16.084"/>
</kw>
<msg timestamp="20210908 01:14:16.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:14:08.752" endtime="20210908 01:14:16.084"/>
</kw>
<status status="PASS" starttime="20210908 01:14:08.752" endtime="20210908 01:14:16.085"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:14:16.090" level="INFO">Running command 'ozone sh key list 92517-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:14:23.743" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:14:23.743" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210908 01:14:16.087" endtime="20210908 01:14:23.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:14:23.744" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210908 01:14:23.743" endtime="20210908 01:14:23.745"/>
</kw>
<msg timestamp="20210908 01:14:23.745" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210908 01:14:16.086" endtime="20210908 01:14:23.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:14:23.745" endtime="20210908 01:14:23.746"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:14:08.495" endtime="20210908 01:14:23.746"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:14:23.754" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:14:23.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:14:23.759" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:14:23.751" endtime="20210908 01:14:23.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:14:23.761" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:14:23.760" endtime="20210908 01:14:23.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:14:23.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:14:23.762" endtime="20210908 01:14:23.763"/>
</kw>
<status status="PASS" starttime="20210908 01:14:23.750" endtime="20210908 01:14:23.763"/>
</kw>
<msg timestamp="20210908 01:14:23.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:14:23.750" endtime="20210908 01:14:23.763"/>
</kw>
<msg timestamp="20210908 01:14:23.763" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:14:23.749" endtime="20210908 01:14:23.763"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:14:23.764" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:14:23.764" endtime="20210908 01:14:23.764"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:14:23.768" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:14:23.777" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:14:23.777" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:14:23.767" endtime="20210908 01:14:23.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:14:23.779" level="INFO"/>
<status status="PASS" starttime="20210908 01:14:23.777" endtime="20210908 01:14:23.779"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:14:23.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:14:23.779" endtime="20210908 01:14:23.780"/>
</kw>
<status status="PASS" starttime="20210908 01:14:23.766" endtime="20210908 01:14:23.781"/>
</kw>
<msg timestamp="20210908 01:14:23.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:14:23.766" endtime="20210908 01:14:23.781"/>
</kw>
<status status="PASS" starttime="20210908 01:14:23.765" endtime="20210908 01:14:23.781"/>
</kw>
<status status="PASS" starttime="20210908 01:14:23.765" endtime="20210908 01:14:23.782"/>
</kw>
<status status="PASS" starttime="20210908 01:14:23.749" endtime="20210908 01:14:23.782"/>
</kw>
<status status="PASS" starttime="20210908 01:14:23.748" endtime="20210908 01:14:23.782"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:14:23.787" level="INFO">Running command 'ozone sh bucket link 92517-source/bucket1 92517-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:14:30.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:14:30.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:14:23.785" endtime="20210908 01:14:30.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:14:30.568" level="INFO"/>
<status status="PASS" starttime="20210908 01:14:30.567" endtime="20210908 01:14:30.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:14:30.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:14:30.568" endtime="20210908 01:14:30.569"/>
</kw>
<status status="PASS" starttime="20210908 01:14:23.784" endtime="20210908 01:14:30.569"/>
</kw>
<msg timestamp="20210908 01:14:30.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:14:23.783" endtime="20210908 01:14:30.570"/>
</kw>
<status status="PASS" starttime="20210908 01:14:23.782" endtime="20210908 01:14:30.570"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:14:30.573" level="INFO">Running command 'ozone sh bucket create 92517-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:14:35.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:14:35.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:14:30.572" endtime="20210908 01:14:35.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:14:35.871" level="INFO"/>
<status status="PASS" starttime="20210908 01:14:35.870" endtime="20210908 01:14:35.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:14:35.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:14:35.871" endtime="20210908 01:14:35.872"/>
</kw>
<status status="PASS" starttime="20210908 01:14:30.571" endtime="20210908 01:14:35.872"/>
</kw>
<msg timestamp="20210908 01:14:35.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:14:30.571" endtime="20210908 01:14:35.872"/>
</kw>
<status status="PASS" starttime="20210908 01:14:30.570" endtime="20210908 01:14:35.872"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:14:35.878" level="INFO">Running command 'ozone sh key put 92517-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:16:23.748" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210908 01:14:35.875" endtime="20210908 01:16:23.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210908 01:16:23.749" endtime="20210908 01:16:23.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210908 01:16:23.750" endtime="20210908 01:16:23.750"/>
</kw>
<status status="FAIL" starttime="20210908 01:14:35.874" endtime="20210908 01:16:23.750"/>
</kw>
<msg timestamp="20210908 01:16:23.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210908 01:14:35.873" endtime="20210908 01:16:23.750"/>
</kw>
<status status="FAIL" starttime="20210908 01:14:35.873" endtime="20210908 01:16:23.751"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210908 01:16:23.751" endtime="20210908 01:16:23.751"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210908 01:14:23.747" endtime="20210908 01:16:23.751">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:16:23.760" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:16:23.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:16:23.765" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:16:23.757" endtime="20210908 01:16:23.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:16:23.767" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:16:23.766" endtime="20210908 01:16:23.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:16:23.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:16:23.767" endtime="20210908 01:16:23.768"/>
</kw>
<status status="PASS" starttime="20210908 01:16:23.757" endtime="20210908 01:16:23.769"/>
</kw>
<msg timestamp="20210908 01:16:23.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:16:23.757" endtime="20210908 01:16:23.769"/>
</kw>
<msg timestamp="20210908 01:16:23.770" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:16:23.756" endtime="20210908 01:16:23.770"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:16:23.771" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:16:23.770" endtime="20210908 01:16:23.771"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:16:23.778" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:16:23.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:16:23.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:16:23.774" endtime="20210908 01:16:23.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:16:23.789" level="INFO"/>
<status status="PASS" starttime="20210908 01:16:23.788" endtime="20210908 01:16:23.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:16:23.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:16:23.789" endtime="20210908 01:16:23.790"/>
</kw>
<status status="PASS" starttime="20210908 01:16:23.773" endtime="20210908 01:16:23.790"/>
</kw>
<msg timestamp="20210908 01:16:23.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:16:23.773" endtime="20210908 01:16:23.791"/>
</kw>
<status status="PASS" starttime="20210908 01:16:23.772" endtime="20210908 01:16:23.791"/>
</kw>
<status status="PASS" starttime="20210908 01:16:23.772" endtime="20210908 01:16:23.791"/>
</kw>
<status status="PASS" starttime="20210908 01:16:23.755" endtime="20210908 01:16:23.792"/>
</kw>
<status status="PASS" starttime="20210908 01:16:23.755" endtime="20210908 01:16:23.792"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:16:23.797" level="INFO">Running command 'ozone sh key put 92517-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:23.754" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210908 01:16:23.794" endtime="20210908 01:18:23.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210908 01:18:23.755" endtime="20210908 01:18:23.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210908 01:18:23.756" endtime="20210908 01:18:23.756"/>
</kw>
<status status="FAIL" starttime="20210908 01:16:23.793" endtime="20210908 01:18:23.756"/>
</kw>
<msg timestamp="20210908 01:18:23.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210908 01:16:23.793" endtime="20210908 01:18:23.757"/>
</kw>
<status status="FAIL" starttime="20210908 01:16:23.792" endtime="20210908 01:18:23.757"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210908 01:18:23.757" endtime="20210908 01:18:23.757"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210908 01:16:23.753" endtime="20210908 01:18:23.757">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:23.769" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:23.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:23.774" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:18:23.766" endtime="20210908 01:18:23.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:23.776" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:18:23.775" endtime="20210908 01:18:23.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:23.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:23.777" endtime="20210908 01:18:23.778"/>
</kw>
<status status="PASS" starttime="20210908 01:18:23.764" endtime="20210908 01:18:23.779"/>
</kw>
<msg timestamp="20210908 01:18:23.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:23.764" endtime="20210908 01:18:23.779"/>
</kw>
<msg timestamp="20210908 01:18:23.780" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:18:23.763" endtime="20210908 01:18:23.780"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:18:23.781" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:18:23.780" endtime="20210908 01:18:23.782"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:23.789" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:23.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:23.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:18:23.786" endtime="20210908 01:18:23.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:23.802" level="INFO"/>
<status status="PASS" starttime="20210908 01:18:23.801" endtime="20210908 01:18:23.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:23.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:23.803" endtime="20210908 01:18:23.804"/>
</kw>
<status status="PASS" starttime="20210908 01:18:23.785" endtime="20210908 01:18:23.805"/>
</kw>
<msg timestamp="20210908 01:18:23.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:23.784" endtime="20210908 01:18:23.805"/>
</kw>
<status status="PASS" starttime="20210908 01:18:23.783" endtime="20210908 01:18:23.806"/>
</kw>
<status status="PASS" starttime="20210908 01:18:23.782" endtime="20210908 01:18:23.806"/>
</kw>
<status status="PASS" starttime="20210908 01:18:23.761" endtime="20210908 01:18:23.806"/>
</kw>
<status status="PASS" starttime="20210908 01:18:23.760" endtime="20210908 01:18:23.807"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:23.813" level="INFO">Running command 'ozone sh key list 92517-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:31.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:31.796" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210908 01:18:23.810" endtime="20210908 01:18:31.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:31.797" level="INFO">key1</msg>
<status status="PASS" starttime="20210908 01:18:31.797" endtime="20210908 01:18:31.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:31.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:31.798" endtime="20210908 01:18:31.799"/>
</kw>
<status status="PASS" starttime="20210908 01:18:23.809" endtime="20210908 01:18:31.800"/>
</kw>
<msg timestamp="20210908 01:18:31.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:23.808" endtime="20210908 01:18:31.800"/>
</kw>
<msg timestamp="20210908 01:18:31.801" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210908 01:18:23.807" endtime="20210908 01:18:31.801"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:31.806" level="INFO">Running command 'ozone sh key list 92517-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:39.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:39.367" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210908 01:18:31.803" endtime="20210908 01:18:39.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:39.369" level="INFO">key1</msg>
<status status="PASS" starttime="20210908 01:18:39.368" endtime="20210908 01:18:39.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:39.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:39.369" endtime="20210908 01:18:39.370"/>
</kw>
<status status="PASS" starttime="20210908 01:18:31.802" endtime="20210908 01:18:39.370"/>
</kw>
<msg timestamp="20210908 01:18:39.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:31.802" endtime="20210908 01:18:39.370"/>
</kw>
<msg timestamp="20210908 01:18:39.371" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210908 01:18:31.801" endtime="20210908 01:18:39.371"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:18:39.371" endtime="20210908 01:18:39.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:18:39.372" endtime="20210908 01:18:39.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210908 01:18:39.373" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210908 01:18:39.372" endtime="20210908 01:18:39.373"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210908 01:18:23.758" endtime="20210908 01:18:39.373">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:39.383" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:39.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:39.387" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:18:39.380" endtime="20210908 01:18:39.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:39.390" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:18:39.388" endtime="20210908 01:18:39.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:39.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:39.391" endtime="20210908 01:18:39.392"/>
</kw>
<status status="PASS" starttime="20210908 01:18:39.380" endtime="20210908 01:18:39.392"/>
</kw>
<msg timestamp="20210908 01:18:39.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:39.379" endtime="20210908 01:18:39.393"/>
</kw>
<msg timestamp="20210908 01:18:39.393" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:18:39.379" endtime="20210908 01:18:39.393"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:18:39.403" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:18:39.394" endtime="20210908 01:18:39.403"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:39.411" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:39.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:39.420" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:18:39.409" endtime="20210908 01:18:39.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:39.421" level="INFO"/>
<status status="PASS" starttime="20210908 01:18:39.420" endtime="20210908 01:18:39.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:39.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:39.422" endtime="20210908 01:18:39.423"/>
</kw>
<status status="PASS" starttime="20210908 01:18:39.408" endtime="20210908 01:18:39.423"/>
</kw>
<msg timestamp="20210908 01:18:39.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:39.407" endtime="20210908 01:18:39.424"/>
</kw>
<status status="PASS" starttime="20210908 01:18:39.405" endtime="20210908 01:18:39.424"/>
</kw>
<status status="PASS" starttime="20210908 01:18:39.403" endtime="20210908 01:18:39.424"/>
</kw>
<status status="PASS" starttime="20210908 01:18:39.378" endtime="20210908 01:18:39.424"/>
</kw>
<status status="PASS" starttime="20210908 01:18:39.377" endtime="20210908 01:18:39.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:39.430" level="INFO">Running command 'ozone sh key delete 92517-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:46.827" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:18:46.827" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210908 01:18:39.427" endtime="20210908 01:18:46.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:46.829" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210908 01:18:46.828" endtime="20210908 01:18:46.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:46.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210908 01:18:46.830" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210908 01:18:46.829" endtime="20210908 01:18:46.830"/>
</kw>
<status status="FAIL" starttime="20210908 01:18:39.426" endtime="20210908 01:18:46.830"/>
</kw>
<msg timestamp="20210908 01:18:46.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210908 01:18:39.426" endtime="20210908 01:18:46.830"/>
</kw>
<status status="FAIL" starttime="20210908 01:18:39.425" endtime="20210908 01:18:46.831"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210908 01:18:46.831" endtime="20210908 01:18:46.831"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:18:46.831" endtime="20210908 01:18:46.831"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210908 01:18:39.375" endtime="20210908 01:18:46.832">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:46.841" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:46.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:46.844" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:18:46.838" endtime="20210908 01:18:46.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:46.846" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:18:46.845" endtime="20210908 01:18:46.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:46.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:46.846" endtime="20210908 01:18:46.848"/>
</kw>
<status status="PASS" starttime="20210908 01:18:46.837" endtime="20210908 01:18:46.848"/>
</kw>
<msg timestamp="20210908 01:18:46.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:46.837" endtime="20210908 01:18:46.849"/>
</kw>
<msg timestamp="20210908 01:18:46.849" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:18:46.836" endtime="20210908 01:18:46.849"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:18:46.851" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:18:46.850" endtime="20210908 01:18:46.851"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:46.857" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:46.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:46.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:18:46.855" endtime="20210908 01:18:46.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:46.870" level="INFO"/>
<status status="PASS" starttime="20210908 01:18:46.869" endtime="20210908 01:18:46.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:46.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:46.870" endtime="20210908 01:18:46.871"/>
</kw>
<status status="PASS" starttime="20210908 01:18:46.854" endtime="20210908 01:18:46.872"/>
</kw>
<msg timestamp="20210908 01:18:46.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:46.854" endtime="20210908 01:18:46.872"/>
</kw>
<status status="PASS" starttime="20210908 01:18:46.852" endtime="20210908 01:18:46.872"/>
</kw>
<status status="PASS" starttime="20210908 01:18:46.851" endtime="20210908 01:18:46.872"/>
</kw>
<status status="PASS" starttime="20210908 01:18:46.836" endtime="20210908 01:18:46.873"/>
</kw>
<status status="PASS" starttime="20210908 01:18:46.835" endtime="20210908 01:18:46.873"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:46.877" level="INFO">Running command 'ozone sh bucket list 92517-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:53.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:53.521" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210908 01:18:46.875" endtime="20210908 01:18:53.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:53.522" level="INFO">{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:14:15.988Z",
  "modificationTime" : "2021-09-08T01:14:15.988Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:13:33.650Z",
  "modificationTime" : "2021-09-08T01:14:08.157Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:14:30.272Z",
  "modificationTime" : "2021-09-08T01:14:30.272Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:13:18.127Z",
  "modificationTime" : "2021-09-08T01:14:01.377Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:13:25.987Z",
  "modificationTime" : "2021-09-08T01:13:25.987Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210908 01:18:53.522" endtime="20210908 01:18:53.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:53.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:53.523" endtime="20210908 01:18:53.523"/>
</kw>
<status status="PASS" starttime="20210908 01:18:46.874" endtime="20210908 01:18:53.523"/>
</kw>
<msg timestamp="20210908 01:18:53.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:46.874" endtime="20210908 01:18:53.524"/>
</kw>
<msg timestamp="20210908 01:18:53.524" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210908 01:18:46.873" endtime="20210908 01:18:53.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:18:53.525" endtime="20210908 01:18:53.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:18:53.525" endtime="20210908 01:18:53.526"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:18:46.833" endtime="20210908 01:18:53.526"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:53.533" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:53.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:53.537" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:18:53.531" endtime="20210908 01:18:53.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:53.538" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:18:53.538" endtime="20210908 01:18:53.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:53.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:53.539" endtime="20210908 01:18:53.540"/>
</kw>
<status status="PASS" starttime="20210908 01:18:53.531" endtime="20210908 01:18:53.540"/>
</kw>
<msg timestamp="20210908 01:18:53.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:53.530" endtime="20210908 01:18:53.540"/>
</kw>
<msg timestamp="20210908 01:18:53.540" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:18:53.530" endtime="20210908 01:18:53.540"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:18:53.541" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:18:53.540" endtime="20210908 01:18:53.541"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:53.548" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:18:53.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:18:53.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:18:53.546" endtime="20210908 01:18:53.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:18:53.559" level="INFO"/>
<status status="PASS" starttime="20210908 01:18:53.558" endtime="20210908 01:18:53.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:18:53.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:18:53.559" endtime="20210908 01:18:53.560"/>
</kw>
<status status="PASS" starttime="20210908 01:18:53.545" endtime="20210908 01:18:53.560"/>
</kw>
<msg timestamp="20210908 01:18:53.560" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:53.542" endtime="20210908 01:18:53.560"/>
</kw>
<status status="PASS" starttime="20210908 01:18:53.542" endtime="20210908 01:18:53.561"/>
</kw>
<status status="PASS" starttime="20210908 01:18:53.541" endtime="20210908 01:18:53.561"/>
</kw>
<status status="PASS" starttime="20210908 01:18:53.529" endtime="20210908 01:18:53.561"/>
</kw>
<status status="PASS" starttime="20210908 01:18:53.529" endtime="20210908 01:18:53.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:18:53.565" level="INFO">Running command 'ozone sh bucket info 92517-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:01.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:01.211" level="INFO">${output} = {
  "volumeName" : "92517-target",
  "bucketName" : "link1",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-08T01:14:30.272Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210908 01:18:53.563" endtime="20210908 01:19:01.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:01.213" level="INFO">{
  "volumeName" : "92517-target",
  "bucketName" : "link1",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-08T01:14:30.272Z",
  "modificationTime" : "2021-09-08T01:14:30.272Z"
}</msg>
<status status="PASS" starttime="20210908 01:19:01.212" endtime="20210908 01:19:01.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:01.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:01.214" endtime="20210908 01:19:01.214"/>
</kw>
<status status="PASS" starttime="20210908 01:18:53.563" endtime="20210908 01:19:01.215"/>
</kw>
<msg timestamp="20210908 01:19:01.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:18:53.562" endtime="20210908 01:19:01.215"/>
</kw>
<msg timestamp="20210908 01:19:01.215" level="INFO">${result} = {
  "volumeName" : "92517-target",
  "bucketName" : "link1",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-08T01:14:30.272Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210908 01:18:53.562" endtime="20210908 01:19:01.215"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:19:01.216" endtime="20210908 01:19:01.216"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:19:01.216" endtime="20210908 01:19:01.217"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:19:01.217" endtime="20210908 01:19:01.218"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:19:01.218" endtime="20210908 01:19:01.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:19:01.219" endtime="20210908 01:19:01.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:19:01.221" endtime="20210908 01:19:01.221"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:19:01.222" endtime="20210908 01:19:01.223"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:18:53.528" endtime="20210908 01:19:01.224"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:01.237" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:01.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:01.240" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:19:01.233" endtime="20210908 01:19:01.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:01.242" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:19:01.241" endtime="20210908 01:19:01.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:01.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:01.243" endtime="20210908 01:19:01.243"/>
</kw>
<status status="PASS" starttime="20210908 01:19:01.232" endtime="20210908 01:19:01.244"/>
</kw>
<msg timestamp="20210908 01:19:01.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:01.231" endtime="20210908 01:19:01.244"/>
</kw>
<msg timestamp="20210908 01:19:01.245" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:19:01.230" endtime="20210908 01:19:01.245"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:19:01.245" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:19:01.245" endtime="20210908 01:19:01.245"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:01.252" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:01.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:01.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:19:01.250" endtime="20210908 01:19:01.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:01.263" level="INFO"/>
<status status="PASS" starttime="20210908 01:19:01.262" endtime="20210908 01:19:01.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:01.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:01.263" endtime="20210908 01:19:01.265"/>
</kw>
<status status="PASS" starttime="20210908 01:19:01.249" endtime="20210908 01:19:01.266"/>
</kw>
<msg timestamp="20210908 01:19:01.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:01.248" endtime="20210908 01:19:01.266"/>
</kw>
<status status="PASS" starttime="20210908 01:19:01.246" endtime="20210908 01:19:01.267"/>
</kw>
<status status="PASS" starttime="20210908 01:19:01.246" endtime="20210908 01:19:01.267"/>
</kw>
<status status="PASS" starttime="20210908 01:19:01.229" endtime="20210908 01:19:01.267"/>
</kw>
<status status="PASS" starttime="20210908 01:19:01.228" endtime="20210908 01:19:01.267"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:01.272" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 92517-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:08.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:08.338" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:19:01.270" endtime="20210908 01:19:08.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:08.340" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:19:08.339" endtime="20210908 01:19:08.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:08.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:08.340" endtime="20210908 01:19:08.340"/>
</kw>
<status status="PASS" starttime="20210908 01:19:01.269" endtime="20210908 01:19:08.341"/>
</kw>
<msg timestamp="20210908 01:19:08.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:01.269" endtime="20210908 01:19:08.341"/>
</kw>
<status status="PASS" starttime="20210908 01:19:01.268" endtime="20210908 01:19:08.341"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:08.350" level="INFO">Running command 'ozone sh bucket getacl 92517-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:16.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:16.169" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210908 01:19:08.347" endtime="20210908 01:19:16.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:16.172" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210908 01:19:16.171" endtime="20210908 01:19:16.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:16.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:16.173" endtime="20210908 01:19:16.175"/>
</kw>
<status status="PASS" starttime="20210908 01:19:08.346" endtime="20210908 01:19:16.176"/>
</kw>
<msg timestamp="20210908 01:19:16.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:08.346" endtime="20210908 01:19:16.177"/>
</kw>
<msg timestamp="20210908 01:19:16.178" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210908 01:19:08.343" endtime="20210908 01:19:16.178"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:19:16.179" endtime="20210908 01:19:16.180"/>
</kw>
<status status="PASS" starttime="20210908 01:19:08.342" endtime="20210908 01:19:16.181"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:16.194" level="INFO">Running command 'ozone sh bucket getacl 92517-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:23.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:23.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:19:16.191" endtime="20210908 01:19:23.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:23.922" level="INFO"/>
<status status="PASS" starttime="20210908 01:19:23.920" endtime="20210908 01:19:23.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:23.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:23.922" endtime="20210908 01:19:23.923"/>
</kw>
<status status="PASS" starttime="20210908 01:19:16.189" endtime="20210908 01:19:23.923"/>
</kw>
<msg timestamp="20210908 01:19:23.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:16.188" endtime="20210908 01:19:23.923"/>
</kw>
<msg timestamp="20210908 01:19:23.924" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210908 01:19:16.186" endtime="20210908 01:19:23.924"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:19:23.924" endtime="20210908 01:19:23.924"/>
</kw>
<status status="PASS" starttime="20210908 01:19:16.182" endtime="20210908 01:19:23.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:23.929" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 92517-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:30.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:30.710" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:19:23.927" endtime="20210908 01:19:30.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:30.711" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:19:30.710" endtime="20210908 01:19:30.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:30.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:30.711" endtime="20210908 01:19:30.712"/>
</kw>
<status status="PASS" starttime="20210908 01:19:23.926" endtime="20210908 01:19:30.712"/>
</kw>
<msg timestamp="20210908 01:19:30.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:23.926" endtime="20210908 01:19:30.713"/>
</kw>
<status status="PASS" starttime="20210908 01:19:23.925" endtime="20210908 01:19:30.713"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:30.721" level="INFO">Running command 'ozone sh bucket getacl 92517-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:38.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:38.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:19:30.718" endtime="20210908 01:19:38.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:38.984" level="INFO"/>
<status status="PASS" starttime="20210908 01:19:38.984" endtime="20210908 01:19:38.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:38.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:38.985" endtime="20210908 01:19:38.986"/>
</kw>
<status status="PASS" starttime="20210908 01:19:30.716" endtime="20210908 01:19:38.986"/>
</kw>
<msg timestamp="20210908 01:19:38.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:30.716" endtime="20210908 01:19:38.987"/>
</kw>
<msg timestamp="20210908 01:19:38.987" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210908 01:19:30.715" endtime="20210908 01:19:38.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:19:38.987" endtime="20210908 01:19:38.988"/>
</kw>
<status status="PASS" starttime="20210908 01:19:30.713" endtime="20210908 01:19:38.988"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:38.995" level="INFO">Running command 'ozone sh bucket getacl 92517-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:45.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:45.113" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210908 01:19:38.992" endtime="20210908 01:19:45.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:45.116" level="INFO">READ</msg>
<status status="PASS" starttime="20210908 01:19:45.114" endtime="20210908 01:19:45.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:45.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:45.116" endtime="20210908 01:19:45.117"/>
</kw>
<status status="PASS" starttime="20210908 01:19:38.991" endtime="20210908 01:19:45.117"/>
</kw>
<msg timestamp="20210908 01:19:45.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:38.991" endtime="20210908 01:19:45.118"/>
</kw>
<msg timestamp="20210908 01:19:45.118" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210908 01:19:38.990" endtime="20210908 01:19:45.118"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:19:45.118" endtime="20210908 01:19:45.119"/>
</kw>
<status status="PASS" starttime="20210908 01:19:38.989" endtime="20210908 01:19:45.120"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:19:01.227" endtime="20210908 01:19:45.120"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:45.130" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:45.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:45.136" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:19:45.127" endtime="20210908 01:19:45.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:45.139" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:19:45.137" endtime="20210908 01:19:45.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:45.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:45.139" endtime="20210908 01:19:45.140"/>
</kw>
<status status="PASS" starttime="20210908 01:19:45.127" endtime="20210908 01:19:45.141"/>
</kw>
<msg timestamp="20210908 01:19:45.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:45.126" endtime="20210908 01:19:45.142"/>
</kw>
<msg timestamp="20210908 01:19:45.142" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:19:45.125" endtime="20210908 01:19:45.142"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:19:45.144" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:19:45.143" endtime="20210908 01:19:45.144"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:45.150" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:45.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:45.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:19:45.147" endtime="20210908 01:19:45.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:45.372" level="INFO"/>
<status status="PASS" starttime="20210908 01:19:45.371" endtime="20210908 01:19:45.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:45.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:45.372" endtime="20210908 01:19:45.373"/>
</kw>
<status status="PASS" starttime="20210908 01:19:45.147" endtime="20210908 01:19:45.373"/>
</kw>
<msg timestamp="20210908 01:19:45.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:45.146" endtime="20210908 01:19:45.373"/>
</kw>
<status status="PASS" starttime="20210908 01:19:45.145" endtime="20210908 01:19:45.374"/>
</kw>
<status status="PASS" starttime="20210908 01:19:45.145" endtime="20210908 01:19:45.374"/>
</kw>
<status status="PASS" starttime="20210908 01:19:45.124" endtime="20210908 01:19:45.374"/>
</kw>
<status status="PASS" starttime="20210908 01:19:45.124" endtime="20210908 01:19:45.374"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:45.379" level="INFO">Running command 'ozone sh bucket link 92517-source/bucket2 92517-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:52.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:19:52.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:19:45.376" endtime="20210908 01:19:52.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:52.511" level="INFO"/>
<status status="PASS" starttime="20210908 01:19:52.510" endtime="20210908 01:19:52.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:19:52.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:19:52.512" endtime="20210908 01:19:52.514"/>
</kw>
<status status="PASS" starttime="20210908 01:19:45.376" endtime="20210908 01:19:52.514"/>
</kw>
<msg timestamp="20210908 01:19:52.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:45.375" endtime="20210908 01:19:52.515"/>
</kw>
<status status="PASS" starttime="20210908 01:19:45.374" endtime="20210908 01:19:52.515"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:52.518" level="INFO">Running command 'ozone sh bucket create 92517-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:19:58.486" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:19:58.486" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210908 01:19:52.516" endtime="20210908 01:19:58.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:19:58.487" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210908 01:19:58.486" endtime="20210908 01:19:58.487"/>
</kw>
<msg timestamp="20210908 01:19:58.488" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210908 01:19:52.515" endtime="20210908 01:19:58.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:19:58.488" endtime="20210908 01:19:58.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:19:58.493" level="INFO">Running command 'ozone sh bucket create 92517-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:05.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:05.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:19:58.490" endtime="20210908 01:20:05.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:05.334" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:05.333" endtime="20210908 01:20:05.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:05.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:05.335" endtime="20210908 01:20:05.335"/>
</kw>
<status status="PASS" starttime="20210908 01:19:58.489" endtime="20210908 01:20:05.336"/>
</kw>
<msg timestamp="20210908 01:20:05.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:19:58.489" endtime="20210908 01:20:05.336"/>
</kw>
<status status="PASS" starttime="20210908 01:19:58.488" endtime="20210908 01:20:05.336"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:05.339" level="INFO">Running command 'ozone sh bucket link 92517-source/bucket1 92517-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:12.263" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:20:12.263" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210908 01:20:05.337" endtime="20210908 01:20:12.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:12.266" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210908 01:20:12.264" endtime="20210908 01:20:12.266"/>
</kw>
<msg timestamp="20210908 01:20:12.266" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210908 01:20:05.336" endtime="20210908 01:20:12.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:20:12.267" endtime="20210908 01:20:12.268"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:19:45.122" endtime="20210908 01:20:12.268"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:12.278" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:12.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:12.283" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:20:12.276" endtime="20210908 01:20:12.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:12.284" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:20:12.283" endtime="20210908 01:20:12.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:12.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:12.285" endtime="20210908 01:20:12.286"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.275" endtime="20210908 01:20:12.286"/>
</kw>
<msg timestamp="20210908 01:20:12.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:12.274" endtime="20210908 01:20:12.287"/>
</kw>
<msg timestamp="20210908 01:20:12.287" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:20:12.273" endtime="20210908 01:20:12.287"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:20:12.289" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:20:12.288" endtime="20210908 01:20:12.289"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:12.294" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:12.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:12.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:12.292" endtime="20210908 01:20:12.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:12.305" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:12.303" endtime="20210908 01:20:12.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:12.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:12.305" endtime="20210908 01:20:12.306"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.291" endtime="20210908 01:20:12.306"/>
</kw>
<msg timestamp="20210908 01:20:12.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:12.290" endtime="20210908 01:20:12.307"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.289" endtime="20210908 01:20:12.307"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.289" endtime="20210908 01:20:12.307"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.272" endtime="20210908 01:20:12.307"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.271" endtime="20210908 01:20:12.307"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:12.313" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:12.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:12.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:12.311" endtime="20210908 01:20:12.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:12.318" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:12.318" endtime="20210908 01:20:12.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:12.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:12.319" endtime="20210908 01:20:12.320"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.310" endtime="20210908 01:20:12.320"/>
</kw>
<msg timestamp="20210908 01:20:12.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:12.310" endtime="20210908 01:20:12.320"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.309" endtime="20210908 01:20:12.321"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:12.326" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:12.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:12.331" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:20:12.324" endtime="20210908 01:20:12.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:12.333" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:20:12.332" endtime="20210908 01:20:12.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:12.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:12.334" endtime="20210908 01:20:12.335"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.323" endtime="20210908 01:20:12.335"/>
</kw>
<msg timestamp="20210908 01:20:12.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:12.323" endtime="20210908 01:20:12.336"/>
</kw>
<msg timestamp="20210908 01:20:12.336" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:20:12.322" endtime="20210908 01:20:12.336"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:20:12.337" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:20:12.336" endtime="20210908 01:20:12.337"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:12.343" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:12.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:12.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:12.341" endtime="20210908 01:20:12.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:12.354" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:12.353" endtime="20210908 01:20:12.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:12.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:12.355" endtime="20210908 01:20:12.356"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.339" endtime="20210908 01:20:12.358"/>
</kw>
<msg timestamp="20210908 01:20:12.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:12.339" endtime="20210908 01:20:12.359"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.338" endtime="20210908 01:20:12.359"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.337" endtime="20210908 01:20:12.359"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.321" endtime="20210908 01:20:12.360"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.321" endtime="20210908 01:20:12.360"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:12.363" level="INFO">Running command 'ozone sh key list 92517-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:19.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:19.523" level="INFO">${output} = {
  "volumeName" : "92517-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-08T01:09:58.004Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210908 01:20:12.361" endtime="20210908 01:20:19.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:19.525" level="INFO">{
  "volumeName" : "92517-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-08T01:09:58.004Z",
  "modificationTime" : "2021-09-08T01:13:01.952Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210908 01:20:19.524" endtime="20210908 01:20:19.525"/>
</kw>
<msg timestamp="20210908 01:20:19.525" level="INFO">${result} = {
  "volumeName" : "92517-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-08T01:09:58.004Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210908 01:20:12.360" endtime="20210908 01:20:19.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:20:19.526" endtime="20210908 01:20:19.526"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.308" endtime="20210908 01:20:19.526"/>
</kw>
<status status="PASS" starttime="20210908 01:20:12.308" endtime="20210908 01:20:19.526"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:20:12.270" endtime="20210908 01:20:19.527"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:19.534" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:19.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:19.541" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:20:19.531" endtime="20210908 01:20:19.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:19.544" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:20:19.543" endtime="20210908 01:20:19.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:19.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:19.545" endtime="20210908 01:20:19.545"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.531" endtime="20210908 01:20:19.546"/>
</kw>
<msg timestamp="20210908 01:20:19.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:19.530" endtime="20210908 01:20:19.546"/>
</kw>
<msg timestamp="20210908 01:20:19.546" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:20:19.530" endtime="20210908 01:20:19.547"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:20:19.548" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:20:19.547" endtime="20210908 01:20:19.548"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:19.554" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:19.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:19.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:19.552" endtime="20210908 01:20:19.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:19.566" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:19.565" endtime="20210908 01:20:19.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:19.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:19.566" endtime="20210908 01:20:19.567"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.551" endtime="20210908 01:20:19.568"/>
</kw>
<msg timestamp="20210908 01:20:19.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:19.550" endtime="20210908 01:20:19.568"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.549" endtime="20210908 01:20:19.568"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.548" endtime="20210908 01:20:19.569"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.529" endtime="20210908 01:20:19.569"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.529" endtime="20210908 01:20:19.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:19.576" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:19.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:19.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:19.574" endtime="20210908 01:20:19.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:19.584" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:19.583" endtime="20210908 01:20:19.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:19.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:19.585" endtime="20210908 01:20:19.586"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.572" endtime="20210908 01:20:19.586"/>
</kw>
<msg timestamp="20210908 01:20:19.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:19.572" endtime="20210908 01:20:19.586"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.571" endtime="20210908 01:20:19.587"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:19.592" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:19.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:19.597" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:20:19.590" endtime="20210908 01:20:19.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:19.600" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:20:19.599" endtime="20210908 01:20:19.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:19.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:19.600" endtime="20210908 01:20:19.601"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.589" endtime="20210908 01:20:19.602"/>
</kw>
<msg timestamp="20210908 01:20:19.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:19.589" endtime="20210908 01:20:19.602"/>
</kw>
<msg timestamp="20210908 01:20:19.602" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:20:19.588" endtime="20210908 01:20:19.602"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:20:19.603" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:20:19.602" endtime="20210908 01:20:19.603"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:19.609" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:19.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:19.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:19.607" endtime="20210908 01:20:19.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:19.620" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:19.618" endtime="20210908 01:20:19.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:19.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:19.620" endtime="20210908 01:20:19.621"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.606" endtime="20210908 01:20:19.622"/>
</kw>
<msg timestamp="20210908 01:20:19.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:19.606" endtime="20210908 01:20:19.622"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.605" endtime="20210908 01:20:19.622"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.604" endtime="20210908 01:20:19.623"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.587" endtime="20210908 01:20:19.623"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.587" endtime="20210908 01:20:19.623"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:19.628" level="INFO">Running command 'ozone sh key list 92517-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:26.969" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:20:26.969" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 92517-target unreadable-link null</msg>
<status status="PASS" starttime="20210908 01:20:19.624" endtime="20210908 01:20:26.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:26.972" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 92517-target unreadable-link null</msg>
<status status="PASS" starttime="20210908 01:20:26.971" endtime="20210908 01:20:26.972"/>
</kw>
<msg timestamp="20210908 01:20:26.973" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 92517-target unreadable-link null</msg>
<status status="PASS" starttime="20210908 01:20:19.623" endtime="20210908 01:20:26.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:20:26.973" endtime="20210908 01:20:26.974"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.570" endtime="20210908 01:20:26.974"/>
</kw>
<status status="PASS" starttime="20210908 01:20:19.569" endtime="20210908 01:20:26.974"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:20:19.527" endtime="20210908 01:20:26.975"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:26.984" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:26.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:26.988" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:20:26.981" endtime="20210908 01:20:26.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:26.989" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:20:26.989" endtime="20210908 01:20:26.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:26.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:26.990" endtime="20210908 01:20:26.991"/>
</kw>
<status status="PASS" starttime="20210908 01:20:26.980" endtime="20210908 01:20:26.991"/>
</kw>
<msg timestamp="20210908 01:20:26.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:26.980" endtime="20210908 01:20:26.991"/>
</kw>
<msg timestamp="20210908 01:20:26.992" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:20:26.979" endtime="20210908 01:20:26.992"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:20:26.992" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:20:26.992" endtime="20210908 01:20:26.992"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:26.997" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:27.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:27.006" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:26.995" endtime="20210908 01:20:27.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:27.008" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:27.006" endtime="20210908 01:20:27.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:27.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:27.008" endtime="20210908 01:20:27.009"/>
</kw>
<status status="PASS" starttime="20210908 01:20:26.994" endtime="20210908 01:20:27.010"/>
</kw>
<msg timestamp="20210908 01:20:27.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:26.994" endtime="20210908 01:20:27.010"/>
</kw>
<status status="PASS" starttime="20210908 01:20:26.993" endtime="20210908 01:20:27.011"/>
</kw>
<status status="PASS" starttime="20210908 01:20:26.993" endtime="20210908 01:20:27.011"/>
</kw>
<status status="PASS" starttime="20210908 01:20:26.978" endtime="20210908 01:20:27.011"/>
</kw>
<status status="PASS" starttime="20210908 01:20:26.977" endtime="20210908 01:20:27.011"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:27.017" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:27.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:27.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:27.015" endtime="20210908 01:20:27.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:27.023" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:27.022" endtime="20210908 01:20:27.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:27.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:27.023" endtime="20210908 01:20:27.024"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.014" endtime="20210908 01:20:27.025"/>
</kw>
<msg timestamp="20210908 01:20:27.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:27.014" endtime="20210908 01:20:27.025"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.013" endtime="20210908 01:20:27.026"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:27.032" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:27.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:27.034" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:20:27.028" endtime="20210908 01:20:27.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:27.036" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:20:27.035" endtime="20210908 01:20:27.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:27.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:27.036" endtime="20210908 01:20:27.036"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.028" endtime="20210908 01:20:27.037"/>
</kw>
<msg timestamp="20210908 01:20:27.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:27.028" endtime="20210908 01:20:27.037"/>
</kw>
<msg timestamp="20210908 01:20:27.037" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:20:27.027" endtime="20210908 01:20:27.037"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:20:27.038" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:20:27.038" endtime="20210908 01:20:27.038"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:27.043" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:27.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:27.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:27.041" endtime="20210908 01:20:27.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:27.056" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:27.056" endtime="20210908 01:20:27.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:27.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:27.057" endtime="20210908 01:20:27.059"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.040" endtime="20210908 01:20:27.060"/>
</kw>
<msg timestamp="20210908 01:20:27.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:27.040" endtime="20210908 01:20:27.060"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.039" endtime="20210908 01:20:27.060"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.039" endtime="20210908 01:20:27.060"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.026" endtime="20210908 01:20:27.061"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.026" endtime="20210908 01:20:27.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:27.066" level="INFO">Running command 'ozone sh bucket info 92517-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:34.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:34.535" level="INFO">${output} = {
  "volumeName" : "92517-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-08T01:13:33.650Z...</msg>
<status status="PASS" starttime="20210908 01:20:27.064" endtime="20210908 01:20:34.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:34.537" level="INFO">{
  "volumeName" : "92517-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-08T01:13:33.650Z",
  "modificationTime" : "2021-09-08T01:14:08.157Z"
}</msg>
<status status="PASS" starttime="20210908 01:20:34.536" endtime="20210908 01:20:34.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:34.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:34.537" endtime="20210908 01:20:34.538"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.063" endtime="20210908 01:20:34.538"/>
</kw>
<msg timestamp="20210908 01:20:34.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:27.063" endtime="20210908 01:20:34.538"/>
</kw>
<msg timestamp="20210908 01:20:34.539" level="INFO">${result} = {
  "volumeName" : "92517-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-08T01:13:33.650Z...</msg>
<status status="PASS" starttime="20210908 01:20:27.061" endtime="20210908 01:20:34.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:20:34.539" endtime="20210908 01:20:34.539"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:20:34.540" endtime="20210908 01:20:34.540"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:34.543" level="INFO">Running command 'ozone sh key list 92517-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:40.195" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:20:40.195" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 92517-source unreadable-bucket </msg>
<status status="PASS" starttime="20210908 01:20:34.541" endtime="20210908 01:20:40.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:40.197" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 92517-source unreadable-bucket </msg>
<status status="PASS" starttime="20210908 01:20:40.196" endtime="20210908 01:20:40.197"/>
</kw>
<msg timestamp="20210908 01:20:40.198" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 92517-source unreadable-bucket </msg>
<status status="PASS" starttime="20210908 01:20:34.540" endtime="20210908 01:20:40.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:20:40.198" endtime="20210908 01:20:40.199"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.012" endtime="20210908 01:20:40.199"/>
</kw>
<status status="PASS" starttime="20210908 01:20:27.012" endtime="20210908 01:20:40.199"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:20:26.976" endtime="20210908 01:20:40.200"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:40.215" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:40.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:40.220" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:20:40.212" endtime="20210908 01:20:40.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:40.223" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:20:40.221" endtime="20210908 01:20:40.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:40.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:40.223" endtime="20210908 01:20:40.224"/>
</kw>
<status status="PASS" starttime="20210908 01:20:40.210" endtime="20210908 01:20:40.225"/>
</kw>
<msg timestamp="20210908 01:20:40.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:40.209" endtime="20210908 01:20:40.226"/>
</kw>
<msg timestamp="20210908 01:20:40.226" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:20:40.208" endtime="20210908 01:20:40.226"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:20:40.227" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:20:40.227" endtime="20210908 01:20:40.227"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:40.233" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:40.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:40.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:40.231" endtime="20210908 01:20:40.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:40.245" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:40.244" endtime="20210908 01:20:40.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:40.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:40.246" endtime="20210908 01:20:40.247"/>
</kw>
<status status="PASS" starttime="20210908 01:20:40.230" endtime="20210908 01:20:40.247"/>
</kw>
<msg timestamp="20210908 01:20:40.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:40.230" endtime="20210908 01:20:40.247"/>
</kw>
<status status="PASS" starttime="20210908 01:20:40.228" endtime="20210908 01:20:40.248"/>
</kw>
<status status="PASS" starttime="20210908 01:20:40.228" endtime="20210908 01:20:40.248"/>
</kw>
<status status="PASS" starttime="20210908 01:20:40.207" endtime="20210908 01:20:40.248"/>
</kw>
<status status="PASS" starttime="20210908 01:20:40.205" endtime="20210908 01:20:40.248"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:40.254" level="INFO">Running command 'ozone sh bucket link 92517-target/loop1 92517-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:47.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:47.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:40.251" endtime="20210908 01:20:47.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:47.010" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:47.009" endtime="20210908 01:20:47.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:47.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:47.011" endtime="20210908 01:20:47.012"/>
</kw>
<status status="PASS" starttime="20210908 01:20:40.250" endtime="20210908 01:20:47.012"/>
</kw>
<msg timestamp="20210908 01:20:47.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:40.250" endtime="20210908 01:20:47.013"/>
</kw>
<status status="PASS" starttime="20210908 01:20:40.248" endtime="20210908 01:20:47.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:47.021" level="INFO">Running command 'ozone sh bucket link 92517-target/loop2 92517-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:20:54.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:20:54.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:47.017" endtime="20210908 01:20:54.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:20:54.383" level="INFO"/>
<status status="PASS" starttime="20210908 01:20:54.381" endtime="20210908 01:20:54.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:20:54.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:20:54.383" endtime="20210908 01:20:54.384"/>
</kw>
<status status="PASS" starttime="20210908 01:20:47.016" endtime="20210908 01:20:54.385"/>
</kw>
<msg timestamp="20210908 01:20:54.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:47.015" endtime="20210908 01:20:54.386"/>
</kw>
<status status="PASS" starttime="20210908 01:20:47.014" endtime="20210908 01:20:54.386"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:20:54.394" level="INFO">Running command 'ozone sh bucket link 92517-target/loop3 92517-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:21:01.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:21:01.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:20:54.390" endtime="20210908 01:21:01.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:21:01.616" level="INFO"/>
<status status="PASS" starttime="20210908 01:21:01.615" endtime="20210908 01:21:01.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:21:01.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:21:01.616" endtime="20210908 01:21:01.617"/>
</kw>
<status status="PASS" starttime="20210908 01:20:54.389" endtime="20210908 01:21:01.617"/>
</kw>
<msg timestamp="20210908 01:21:01.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:20:54.388" endtime="20210908 01:21:01.617"/>
</kw>
<status status="PASS" starttime="20210908 01:20:54.387" endtime="20210908 01:21:01.618"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:21:01.622" level="INFO">Running command 'ozone sh key list 92517-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:21:08.720" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:21:08.720" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210908 01:21:01.620" endtime="20210908 01:21:08.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:21:08.721" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210908 01:21:08.720" endtime="20210908 01:21:08.721"/>
</kw>
<msg timestamp="20210908 01:21:08.722" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210908 01:21:01.618" endtime="20210908 01:21:08.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:21:08.723" endtime="20210908 01:21:08.723"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:20:40.204" endtime="20210908 01:21:08.723"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:21:08.732" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:21:08.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:21:08.738" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:21:08.729" endtime="20210908 01:21:08.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:21:08.739" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:21:08.739" endtime="20210908 01:21:08.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:21:08.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:21:08.740" endtime="20210908 01:21:08.741"/>
</kw>
<status status="PASS" starttime="20210908 01:21:08.729" endtime="20210908 01:21:08.741"/>
</kw>
<msg timestamp="20210908 01:21:08.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:21:08.728" endtime="20210908 01:21:08.741"/>
</kw>
<msg timestamp="20210908 01:21:08.742" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:21:08.728" endtime="20210908 01:21:08.742"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:21:08.743" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:21:08.742" endtime="20210908 01:21:08.743"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:21:08.749" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:21:08.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:21:08.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:21:08.747" endtime="20210908 01:21:08.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:21:08.760" level="INFO"/>
<status status="PASS" starttime="20210908 01:21:08.759" endtime="20210908 01:21:08.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:21:08.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:21:08.760" endtime="20210908 01:21:08.761"/>
</kw>
<status status="PASS" starttime="20210908 01:21:08.746" endtime="20210908 01:21:08.761"/>
</kw>
<msg timestamp="20210908 01:21:08.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:21:08.746" endtime="20210908 01:21:08.762"/>
</kw>
<status status="PASS" starttime="20210908 01:21:08.744" endtime="20210908 01:21:08.762"/>
</kw>
<status status="PASS" starttime="20210908 01:21:08.744" endtime="20210908 01:21:08.763"/>
</kw>
<status status="PASS" starttime="20210908 01:21:08.727" endtime="20210908 01:21:08.763"/>
</kw>
<status status="PASS" starttime="20210908 01:21:08.726" endtime="20210908 01:21:08.763"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:21:08.769" level="INFO">Running command 'ozone sh bucket link 92517-source/bucket1 92517-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:21:16.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:21:16.423" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:21:08.766" endtime="20210908 01:21:16.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:21:16.424" level="INFO"/>
<status status="PASS" starttime="20210908 01:21:16.423" endtime="20210908 01:21:16.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:21:16.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:21:16.425" endtime="20210908 01:21:16.426"/>
</kw>
<status status="PASS" starttime="20210908 01:21:08.765" endtime="20210908 01:21:16.426"/>
</kw>
<msg timestamp="20210908 01:21:16.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:21:08.764" endtime="20210908 01:21:16.426"/>
</kw>
<status status="PASS" starttime="20210908 01:21:08.763" endtime="20210908 01:21:16.427"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:21:16.432" level="INFO">Running command 'ozone sh key put 92517-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:23:08.725" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210908 01:21:16.429" endtime="20210908 01:23:08.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210908 01:23:08.726" endtime="20210908 01:23:08.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210908 01:23:08.727" endtime="20210908 01:23:08.727"/>
</kw>
<status status="FAIL" starttime="20210908 01:21:16.429" endtime="20210908 01:23:08.727"/>
</kw>
<msg timestamp="20210908 01:23:08.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210908 01:21:16.428" endtime="20210908 01:23:08.727"/>
</kw>
<status status="FAIL" starttime="20210908 01:21:16.427" endtime="20210908 01:23:08.728"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210908 01:23:08.728" endtime="20210908 01:23:08.728"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210908 01:21:08.724" endtime="20210908 01:23:08.728">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:23:08.740" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:23:08.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:23:08.745" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:23:08.736" endtime="20210908 01:23:08.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:23:08.747" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:23:08.746" endtime="20210908 01:23:08.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:23:08.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:23:08.747" endtime="20210908 01:23:08.748"/>
</kw>
<status status="PASS" starttime="20210908 01:23:08.735" endtime="20210908 01:23:08.749"/>
</kw>
<msg timestamp="20210908 01:23:08.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:23:08.734" endtime="20210908 01:23:08.749"/>
</kw>
<msg timestamp="20210908 01:23:08.749" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:23:08.733" endtime="20210908 01:23:08.749"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:23:08.750" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:23:08.749" endtime="20210908 01:23:08.750"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:23:08.757" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:23:08.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:23:08.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:23:08.754" endtime="20210908 01:23:08.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:23:08.769" level="INFO"/>
<status status="PASS" starttime="20210908 01:23:08.768" endtime="20210908 01:23:08.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:23:08.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:23:08.770" endtime="20210908 01:23:08.771"/>
</kw>
<status status="PASS" starttime="20210908 01:23:08.753" endtime="20210908 01:23:08.771"/>
</kw>
<msg timestamp="20210908 01:23:08.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:23:08.752" endtime="20210908 01:23:08.772"/>
</kw>
<status status="PASS" starttime="20210908 01:23:08.751" endtime="20210908 01:23:08.772"/>
</kw>
<status status="PASS" starttime="20210908 01:23:08.750" endtime="20210908 01:23:08.772"/>
</kw>
<status status="PASS" starttime="20210908 01:23:08.732" endtime="20210908 01:23:08.773"/>
</kw>
<status status="PASS" starttime="20210908 01:23:08.732" endtime="20210908 01:23:08.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:23:08.778" level="INFO">Running command 'ozone sh bucket delete 92517-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:23:13.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:23:13.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:23:08.775" endtime="20210908 01:23:13.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:23:13.854" level="INFO"/>
<status status="PASS" starttime="20210908 01:23:13.853" endtime="20210908 01:23:13.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:23:13.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:23:13.855" endtime="20210908 01:23:13.856"/>
</kw>
<status status="PASS" starttime="20210908 01:23:08.775" endtime="20210908 01:23:13.856"/>
</kw>
<msg timestamp="20210908 01:23:13.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:23:08.774" endtime="20210908 01:23:13.856"/>
</kw>
<status status="PASS" starttime="20210908 01:23:08.773" endtime="20210908 01:23:13.857"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:23:13.861" level="INFO">Running command 'ozone sh bucket list 92517-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:23:22.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:23:22.185" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T...</msg>
<status status="PASS" starttime="20210908 01:23:13.859" endtime="20210908 01:23:22.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:23:22.187" level="INFO">{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:20:05.099Z",
  "modificationTime" : "2021-09-08T01:20:05.099Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:14:15.988Z",
  "modificationTime" : "2021-09-08T01:14:15.988Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:13:33.650Z",
  "modificationTime" : "2021-09-08T01:14:08.157Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:19:52.199Z",
  "modificationTime" : "2021-09-08T01:19:52.199Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:21:16.161Z",
  "modificationTime" : "2021-09-08T01:21:16.161Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:21:01.310Z",
  "modificationTime" : "2021-09-08T01:21:01.310Z",
  "sourceVolume" : "92517-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:20:46.926Z",
  "modificationTime" : "2021-09-08T01:20:46.926Z",
  "sourceVolume" : "92517-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:20:54.232Z",
  "modificationTime" : "2021-09-08T01:20:54.232Z",
  "sourceVolume" : "92517-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:13:18.127Z",
  "modificationTime" : "2021-09-08T01:14:01.377Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T01:13:25.987Z",
  "modificationTime" : "2021-09-08T01:13:25.987Z",
  "sourceVolume" : "92517-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210908 01:23:22.186" endtime="20210908 01:23:22.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:23:22.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:23:22.188" endtime="20210908 01:23:22.189"/>
</kw>
<status status="PASS" starttime="20210908 01:23:13.858" endtime="20210908 01:23:22.189"/>
</kw>
<msg timestamp="20210908 01:23:22.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:23:13.857" endtime="20210908 01:23:22.190"/>
</kw>
<msg timestamp="20210908 01:23:22.190" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "92517-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-08T...</msg>
<status status="PASS" starttime="20210908 01:23:13.857" endtime="20210908 01:23:22.191"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:23:22.191" endtime="20210908 01:23:22.192"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:23:22.197" level="INFO">Running command 'ozone sh key list 92517-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:23:30.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:23:30.292" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210908 01:23:22.195" endtime="20210908 01:23:30.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:23:30.293" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210908 01:23:30.292" endtime="20210908 01:23:30.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:23:30.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:23:30.293" endtime="20210908 01:23:30.295"/>
</kw>
<status status="PASS" starttime="20210908 01:23:22.194" endtime="20210908 01:23:30.295"/>
</kw>
<msg timestamp="20210908 01:23:30.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:23:22.193" endtime="20210908 01:23:30.295"/>
</kw>
<msg timestamp="20210908 01:23:30.296" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210908 01:23:22.192" endtime="20210908 01:23:30.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:23:30.297" endtime="20210908 01:23:30.299"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:23:08.730" endtime="20210908 01:23:30.300"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210908 01:09:32.635" endtime="20210908 01:23:30.304"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210908 01:23:30.348" level="INFO">${random} = 65852</msg>
<status status="PASS" starttime="20210908 01:23:30.347" endtime="20210908 01:23:30.348"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:23:30.349" level="INFO">${prefix} = 65852</msg>
<status status="PASS" starttime="20210908 01:23:30.348" endtime="20210908 01:23:30.349"/>
</kw>
<status status="PASS" starttime="20210908 01:23:30.347" endtime="20210908 01:23:30.349"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:23:30.356" level="INFO">Running command 'ozone sh volume info /65852-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:23:36.813" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:23:36.813" level="INFO">${output} = VOLUME_NOT_FOUND Volume 65852-rpcbasic is not found</msg>
<status status="PASS" starttime="20210908 01:23:30.353" endtime="20210908 01:23:36.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:23:36.815" level="INFO">VOLUME_NOT_FOUND Volume 65852-rpcbasic is not found</msg>
<status status="PASS" starttime="20210908 01:23:36.814" endtime="20210908 01:23:36.815"/>
</kw>
<msg timestamp="20210908 01:23:36.815" level="INFO">${result} = VOLUME_NOT_FOUND Volume 65852-rpcbasic is not found</msg>
<status status="PASS" starttime="20210908 01:23:30.353" endtime="20210908 01:23:36.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:23:36.815" endtime="20210908 01:23:36.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:23:36.821" level="INFO">Running command 'ozone sh volume create /65852-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:23:43.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:23:43.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:23:36.818" endtime="20210908 01:23:43.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:23:43.310" level="INFO"/>
<status status="PASS" starttime="20210908 01:23:43.309" endtime="20210908 01:23:43.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:23:43.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:23:43.310" endtime="20210908 01:23:43.311"/>
</kw>
<status status="PASS" starttime="20210908 01:23:36.817" endtime="20210908 01:23:43.311"/>
</kw>
<msg timestamp="20210908 01:23:43.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:23:36.817" endtime="20210908 01:23:43.311"/>
</kw>
<msg timestamp="20210908 01:23:43.312" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210908 01:23:36.816" endtime="20210908 01:23:43.312"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:23:43.312" endtime="20210908 01:23:43.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:23:43.319" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="65852-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:23:51.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:23:51.969" level="INFO">${output} = {
  "metadata": {},
  "name": "65852-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210908 01:23:43.315" endtime="20210908 01:23:51.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:23:51.972" level="INFO">{
  "metadata": {},
  "name": "65852-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-08T01:23:43.153Z",
  "modificationTime": "2021-09-08T01:23:43.153Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210908 01:23:51.970" endtime="20210908 01:23:51.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:23:51.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:23:51.972" endtime="20210908 01:23:51.976"/>
</kw>
<status status="PASS" starttime="20210908 01:23:43.314" endtime="20210908 01:23:51.976"/>
</kw>
<msg timestamp="20210908 01:23:51.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:23:43.314" endtime="20210908 01:23:51.976"/>
</kw>
<msg timestamp="20210908 01:23:51.976" level="INFO">${result} = {
  "metadata": {},
  "name": "65852-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210908 01:23:43.313" endtime="20210908 01:23:51.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:23:51.977" endtime="20210908 01:23:51.977"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:23:51.982" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="65852-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:24:00.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:24:00.295" level="INFO">${output} = {
  "metadata": {},
  "name": "65852-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210908 01:23:51.979" endtime="20210908 01:24:00.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:24:00.297" level="INFO">{
  "metadata": {},
  "name": "65852-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-08T01:23:43.153Z",
  "modificationTime": "2021-09-08T01:23:43.153Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210908 01:24:00.296" endtime="20210908 01:24:00.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:24:00.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:24:00.297" endtime="20210908 01:24:00.298"/>
</kw>
<status status="PASS" starttime="20210908 01:23:51.978" endtime="20210908 01:24:00.299"/>
</kw>
<msg timestamp="20210908 01:24:00.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:23:51.978" endtime="20210908 01:24:00.299"/>
</kw>
<msg timestamp="20210908 01:24:00.299" level="INFO">${result} = {
  "metadata": {},
  "name": "65852-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210908 01:23:51.977" endtime="20210908 01:24:00.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:24:00.300" endtime="20210908 01:24:00.300"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:24:00.306" level="INFO">Running command 'ozone sh volume setquota /65852-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:24:07.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:24:07.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:24:00.303" endtime="20210908 01:24:07.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:24:07.663" level="INFO"/>
<status status="PASS" starttime="20210908 01:24:07.661" endtime="20210908 01:24:07.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:24:07.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:24:07.663" endtime="20210908 01:24:07.664"/>
</kw>
<status status="PASS" starttime="20210908 01:24:00.302" endtime="20210908 01:24:07.665"/>
</kw>
<msg timestamp="20210908 01:24:07.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:24:00.302" endtime="20210908 01:24:07.665"/>
</kw>
<status status="PASS" starttime="20210908 01:24:00.300" endtime="20210908 01:24:07.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:24:07.672" level="INFO">Running command 'ozone sh volume info /65852-rpcbasic | jq -r '. | select(.name=="65852-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:24:16.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:24:16.293" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:24:07.670" endtime="20210908 01:24:16.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:24:16.295" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210908 01:24:16.294" endtime="20210908 01:24:16.295"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:24:16.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:24:16.295" endtime="20210908 01:24:16.296"/>
</kw>
<status status="PASS" starttime="20210908 01:24:07.669" endtime="20210908 01:24:16.296"/>
</kw>
<msg timestamp="20210908 01:24:16.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:24:07.669" endtime="20210908 01:24:16.297"/>
</kw>
<msg timestamp="20210908 01:24:16.297" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:24:07.666" endtime="20210908 01:24:16.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:24:16.298" endtime="20210908 01:24:16.298"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:24:16.309" level="INFO">Running command 'ozone sh bucket create /65852-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:24:23.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:24:23.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:24:16.300" endtime="20210908 01:24:23.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:24:23.995" level="INFO"/>
<status status="PASS" starttime="20210908 01:24:23.994" endtime="20210908 01:24:23.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:24:23.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:24:23.995" endtime="20210908 01:24:23.996"/>
</kw>
<status status="PASS" starttime="20210908 01:24:16.300" endtime="20210908 01:24:23.996"/>
</kw>
<msg timestamp="20210908 01:24:23.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:24:16.299" endtime="20210908 01:24:23.996"/>
</kw>
<status status="PASS" starttime="20210908 01:24:16.298" endtime="20210908 01:24:23.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:24:24.003" level="INFO">Running command 'ozone sh bucket info /65852-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:24:31.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:24:31.658" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210908 01:24:23.999" endtime="20210908 01:24:31.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:24:31.660" level="INFO">DISK</msg>
<status status="PASS" starttime="20210908 01:24:31.659" endtime="20210908 01:24:31.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:24:31.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:24:31.661" endtime="20210908 01:24:31.663"/>
</kw>
<status status="PASS" starttime="20210908 01:24:23.998" endtime="20210908 01:24:31.663"/>
</kw>
<msg timestamp="20210908 01:24:31.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:24:23.998" endtime="20210908 01:24:31.664"/>
</kw>
<msg timestamp="20210908 01:24:31.664" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210908 01:24:23.997" endtime="20210908 01:24:31.664"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:24:31.665" endtime="20210908 01:24:31.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:24:31.675" level="INFO">Running command 'ozone sh bucket info /65852-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:24:39.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:24:39.659" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:24:31.671" endtime="20210908 01:24:39.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:24:39.665" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210908 01:24:39.661" endtime="20210908 01:24:39.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:24:39.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:24:39.665" endtime="20210908 01:24:39.667"/>
</kw>
<status status="PASS" starttime="20210908 01:24:31.670" endtime="20210908 01:24:39.667"/>
</kw>
<msg timestamp="20210908 01:24:39.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:24:31.670" endtime="20210908 01:24:39.668"/>
</kw>
<msg timestamp="20210908 01:24:39.668" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:24:31.668" endtime="20210908 01:24:39.668"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:24:39.669" endtime="20210908 01:24:39.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:24:39.677" level="INFO">Running command 'ozone sh bucket info /65852-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:24:47.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:24:47.603" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210908 01:24:39.674" endtime="20210908 01:24:47.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:24:47.606" level="INFO">100</msg>
<status status="PASS" starttime="20210908 01:24:47.605" endtime="20210908 01:24:47.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:24:47.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:24:47.606" endtime="20210908 01:24:47.608"/>
</kw>
<status status="PASS" starttime="20210908 01:24:39.673" endtime="20210908 01:24:47.608"/>
</kw>
<msg timestamp="20210908 01:24:47.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:24:39.672" endtime="20210908 01:24:47.609"/>
</kw>
<msg timestamp="20210908 01:24:47.609" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210908 01:24:39.670" endtime="20210908 01:24:47.609"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:24:47.610" endtime="20210908 01:24:47.611"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:24:47.618" level="INFO">Running command 'ozone sh bucket setquota /65852-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:24:54.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:24:54.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:24:47.615" endtime="20210908 01:24:54.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:24:54.833" level="INFO"/>
<status status="PASS" starttime="20210908 01:24:54.832" endtime="20210908 01:24:54.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:24:54.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:24:54.833" endtime="20210908 01:24:54.834"/>
</kw>
<status status="PASS" starttime="20210908 01:24:47.614" endtime="20210908 01:24:54.834"/>
</kw>
<msg timestamp="20210908 01:24:54.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:24:47.613" endtime="20210908 01:24:54.835"/>
</kw>
<status status="PASS" starttime="20210908 01:24:47.611" endtime="20210908 01:24:54.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:24:54.841" level="INFO">Running command 'ozone sh bucket info /65852-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:25:02.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:25:02.363" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210908 01:24:54.838" endtime="20210908 01:25:02.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:25:02.365" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210908 01:25:02.364" endtime="20210908 01:25:02.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:25:02.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:25:02.365" endtime="20210908 01:25:02.366"/>
</kw>
<status status="PASS" starttime="20210908 01:24:54.837" endtime="20210908 01:25:02.367"/>
</kw>
<msg timestamp="20210908 01:25:02.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:24:54.837" endtime="20210908 01:25:02.367"/>
</kw>
<msg timestamp="20210908 01:25:02.367" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210908 01:24:54.835" endtime="20210908 01:25:02.367"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:25:02.367" endtime="20210908 01:25:02.368"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:25:02.374" level="INFO">Running command 'ozone sh bucket info /65852-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:25:10.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:25:10.156" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210908 01:25:02.371" endtime="20210908 01:25:10.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:25:10.158" level="INFO">1000</msg>
<status status="PASS" starttime="20210908 01:25:10.157" endtime="20210908 01:25:10.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:25:10.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:25:10.159" endtime="20210908 01:25:10.160"/>
</kw>
<status status="PASS" starttime="20210908 01:25:02.370" endtime="20210908 01:25:10.161"/>
</kw>
<msg timestamp="20210908 01:25:10.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:25:02.370" endtime="20210908 01:25:10.161"/>
</kw>
<msg timestamp="20210908 01:25:10.161" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210908 01:25:02.368" endtime="20210908 01:25:10.162"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:25:10.162" endtime="20210908 01:25:10.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:25:10.169" level="INFO">Running command 'ozone sh bucket list /65852-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:25:15.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:25:15.902" level="INFO">${output} = 65852-rpcbasic</msg>
<status status="PASS" starttime="20210908 01:25:10.166" endtime="20210908 01:25:15.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:25:15.903" level="INFO">65852-rpcbasic</msg>
<status status="PASS" starttime="20210908 01:25:15.902" endtime="20210908 01:25:15.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:25:15.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:25:15.903" endtime="20210908 01:25:15.904"/>
</kw>
<status status="PASS" starttime="20210908 01:25:10.165" endtime="20210908 01:25:15.904"/>
</kw>
<msg timestamp="20210908 01:25:15.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:25:10.165" endtime="20210908 01:25:15.905"/>
</kw>
<msg timestamp="20210908 01:25:15.905" level="INFO">${result} = 65852-rpcbasic</msg>
<status status="PASS" starttime="20210908 01:25:10.163" endtime="20210908 01:25:15.905"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:25:15.905" endtime="20210908 01:25:15.906"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:25:15.915" level="INFO">Running command 'ozone sh key put /65852-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:28:28.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:28:28.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:25:15.910" endtime="20210908 01:28:28.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:28:28.755" level="INFO"/>
<status status="PASS" starttime="20210908 01:28:28.755" endtime="20210908 01:28:28.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:28:28.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:28:28.756" endtime="20210908 01:28:28.756"/>
</kw>
<status status="PASS" starttime="20210908 01:25:15.909" endtime="20210908 01:28:28.757"/>
</kw>
<msg timestamp="20210908 01:28:28.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:25:15.908" endtime="20210908 01:28:28.757"/>
</kw>
<status status="PASS" starttime="20210908 01:25:15.908" endtime="20210908 01:28:28.757"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:28:28.762" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:28:28.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:28:28.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:28:28.759" endtime="20210908 01:28:28.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:28:28.767" level="INFO"/>
<status status="PASS" starttime="20210908 01:28:28.766" endtime="20210908 01:28:28.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:28:28.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:28:28.767" endtime="20210908 01:28:28.768"/>
</kw>
<status status="PASS" starttime="20210908 01:28:28.758" endtime="20210908 01:28:28.768"/>
</kw>
<msg timestamp="20210908 01:28:28.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:28:28.758" endtime="20210908 01:28:28.769"/>
</kw>
<status status="PASS" starttime="20210908 01:28:28.757" endtime="20210908 01:28:28.769"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:28:28.775" level="INFO">Running command 'ozone sh key get /65852-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:28:30.351" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210908 01:28:28.772" endtime="20210908 01:28:30.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.353" endtime="20210908 01:28:30.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.353" endtime="20210908 01:28:30.353"/>
</kw>
<status status="FAIL" starttime="20210908 01:28:28.771" endtime="20210908 01:28:30.354"/>
</kw>
<msg timestamp="20210908 01:28:30.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210908 01:28:28.770" endtime="20210908 01:28:30.354"/>
</kw>
<status status="FAIL" starttime="20210908 01:28:28.769" endtime="20210908 01:28:30.355"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.355" endtime="20210908 01:28:30.355"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.355" endtime="20210908 01:28:30.355"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.355" endtime="20210908 01:28:30.355"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.356" endtime="20210908 01:28:30.356"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.356" endtime="20210908 01:28:30.356"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.356" endtime="20210908 01:28:30.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.356" endtime="20210908 01:28:30.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.357" endtime="20210908 01:28:30.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.357" endtime="20210908 01:28:30.357"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.357" endtime="20210908 01:28:30.357"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.357" endtime="20210908 01:28:30.357"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.358" endtime="20210908 01:28:30.358"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.358" endtime="20210908 01:28:30.358"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.358" endtime="20210908 01:28:30.358"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.358" endtime="20210908 01:28:30.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.359" endtime="20210908 01:28:30.359"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.359" endtime="20210908 01:28:30.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.359" endtime="20210908 01:28:30.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.359" endtime="20210908 01:28:30.359"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.363" endtime="20210908 01:28:30.363"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.363" endtime="20210908 01:28:30.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.364" endtime="20210908 01:28:30.364"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.368" endtime="20210908 01:28:30.369"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.369" endtime="20210908 01:28:30.369"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.369" endtime="20210908 01:28:30.369"/>
</kw>
<status status="FAIL" starttime="20210908 01:25:15.907" endtime="20210908 01:28:30.369"/>
</kw>
<status status="FAIL" starttime="20210908 01:25:15.906" endtime="20210908 01:28:30.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.371" endtime="20210908 01:28:30.371"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.371" endtime="20210908 01:28:30.371"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.375" endtime="20210908 01:28:30.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.377" endtime="20210908 01:28:30.377"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.377" endtime="20210908 01:28:30.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.378" endtime="20210908 01:28:30.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.379" endtime="20210908 01:28:30.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.380" endtime="20210908 01:28:30.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.380" endtime="20210908 01:28:30.381"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.381" endtime="20210908 01:28:30.381"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.381" endtime="20210908 01:28:30.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.384" endtime="20210908 01:28:30.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.388" endtime="20210908 01:28:30.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.388" endtime="20210908 01:28:30.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.388" endtime="20210908 01:28:30.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.390" endtime="20210908 01:28:30.391"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.391" endtime="20210908 01:28:30.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.391" endtime="20210908 01:28:30.391"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.396" endtime="20210908 01:28:30.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.396" endtime="20210908 01:28:30.396"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.396" endtime="20210908 01:28:30.397"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.397" endtime="20210908 01:28:30.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.397" endtime="20210908 01:28:30.397"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:28:30.397" endtime="20210908 01:28:30.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.397" endtime="20210908 01:28:30.398"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:28:30.403" endtime="20210908 01:28:30.403"/>
</kw>
<status status="FAIL" starttime="20210908 01:23:30.350" endtime="20210908 01:28:30.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210908 01:23:30.349" endtime="20210908 01:28:30.408">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210908 01:23:30.312" endtime="20210908 01:28:30.418"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210908 01:28:30.466" level="INFO">${random} = 11228</msg>
<status status="PASS" starttime="20210908 01:28:30.465" endtime="20210908 01:28:30.466"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:28:30.468" level="INFO">${prefix} = 11228</msg>
<status status="PASS" starttime="20210908 01:28:30.467" endtime="20210908 01:28:30.468"/>
</kw>
<status status="PASS" starttime="20210908 01:28:30.462" endtime="20210908 01:28:30.469"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:28:30.492" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:28:30.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:28:30.508" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:28:30.481" endtime="20210908 01:28:30.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:28:30.510" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:28:30.509" endtime="20210908 01:28:30.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:28:30.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:28:30.511" endtime="20210908 01:28:30.512"/>
</kw>
<status status="PASS" starttime="20210908 01:28:30.479" endtime="20210908 01:28:30.513"/>
</kw>
<msg timestamp="20210908 01:28:30.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:28:30.478" endtime="20210908 01:28:30.513"/>
</kw>
<msg timestamp="20210908 01:28:30.514" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:28:30.476" endtime="20210908 01:28:30.514"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:28:30.519" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:28:30.514" endtime="20210908 01:28:30.519"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:28:30.550" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:28:30.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:28:30.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:28:30.529" endtime="20210908 01:28:30.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:28:30.830" level="INFO"/>
<status status="PASS" starttime="20210908 01:28:30.829" endtime="20210908 01:28:30.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:28:30.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:28:30.830" endtime="20210908 01:28:30.831"/>
</kw>
<status status="PASS" starttime="20210908 01:28:30.526" endtime="20210908 01:28:30.831"/>
</kw>
<msg timestamp="20210908 01:28:30.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:28:30.525" endtime="20210908 01:28:30.832"/>
</kw>
<status status="PASS" starttime="20210908 01:28:30.522" endtime="20210908 01:28:30.832"/>
</kw>
<status status="PASS" starttime="20210908 01:28:30.520" endtime="20210908 01:28:30.832"/>
</kw>
<status status="PASS" starttime="20210908 01:28:30.474" endtime="20210908 01:28:30.832"/>
</kw>
<status status="PASS" starttime="20210908 01:28:30.472" endtime="20210908 01:28:30.832"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:28:30.846" level="INFO">Running command 'ozone sh volume info o3://om:9862/11228-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:28:43.752" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:28:43.752" level="INFO">${output} = VOLUME_NOT_FOUND Volume 11228-rpcwoport is not found</msg>
<status status="PASS" starttime="20210908 01:28:30.837" endtime="20210908 01:28:43.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:28:43.753" level="INFO">VOLUME_NOT_FOUND Volume 11228-rpcwoport is not found</msg>
<status status="PASS" starttime="20210908 01:28:43.752" endtime="20210908 01:28:43.753"/>
</kw>
<msg timestamp="20210908 01:28:43.755" level="INFO">${result} = VOLUME_NOT_FOUND Volume 11228-rpcwoport is not found</msg>
<status status="PASS" starttime="20210908 01:28:30.834" endtime="20210908 01:28:43.755"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:28:43.756" endtime="20210908 01:28:43.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:28:43.767" level="INFO">Running command 'ozone sh volume create o3://om:9862/11228-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:28:53.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:28:53.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:28:43.761" endtime="20210908 01:28:53.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:28:53.385" level="INFO"/>
<status status="PASS" starttime="20210908 01:28:53.383" endtime="20210908 01:28:53.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:28:53.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:28:53.386" endtime="20210908 01:28:53.387"/>
</kw>
<status status="PASS" starttime="20210908 01:28:43.760" endtime="20210908 01:28:53.388"/>
</kw>
<msg timestamp="20210908 01:28:53.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:28:43.758" endtime="20210908 01:28:53.389"/>
</kw>
<msg timestamp="20210908 01:28:53.389" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210908 01:28:43.757" endtime="20210908 01:28:53.389"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:28:53.390" endtime="20210908 01:28:53.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:28:53.399" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="11228-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:29:01.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:29:01.113" level="INFO">${output} = {
  "metadata": {},
  "name": "11228-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210908 01:28:53.396" endtime="20210908 01:29:01.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:29:01.115" level="INFO">{
  "metadata": {},
  "name": "11228-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-08T01:28:53.065Z",
  "modificationTime": "2021-09-08T01:28:53.065Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210908 01:29:01.114" endtime="20210908 01:29:01.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:29:01.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:29:01.116" endtime="20210908 01:29:01.117"/>
</kw>
<status status="PASS" starttime="20210908 01:28:53.395" endtime="20210908 01:29:01.117"/>
</kw>
<msg timestamp="20210908 01:29:01.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:28:53.394" endtime="20210908 01:29:01.118"/>
</kw>
<msg timestamp="20210908 01:29:01.118" level="INFO">${result} = {
  "metadata": {},
  "name": "11228-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210908 01:28:53.391" endtime="20210908 01:29:01.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:29:01.119" endtime="20210908 01:29:01.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:29:01.124" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="11228-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:29:09.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:29:09.210" level="INFO">${output} = {
  "metadata": {},
  "name": "11228-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210908 01:29:01.121" endtime="20210908 01:29:09.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:29:09.214" level="INFO">{
  "metadata": {},
  "name": "11228-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-08T01:28:53.065Z",
  "modificationTime": "2021-09-08T01:28:53.065Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210908 01:29:09.211" endtime="20210908 01:29:09.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:29:09.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:29:09.214" endtime="20210908 01:29:09.216"/>
</kw>
<status status="PASS" starttime="20210908 01:29:01.121" endtime="20210908 01:29:09.217"/>
</kw>
<msg timestamp="20210908 01:29:09.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:29:01.120" endtime="20210908 01:29:09.217"/>
</kw>
<msg timestamp="20210908 01:29:09.219" level="INFO">${result} = {
  "metadata": {},
  "name": "11228-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210908 01:29:01.119" endtime="20210908 01:29:09.219"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:29:09.220" endtime="20210908 01:29:09.220"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:29:09.229" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/11228-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:29:16.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:29:16.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:29:09.225" endtime="20210908 01:29:16.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:29:16.563" level="INFO"/>
<status status="PASS" starttime="20210908 01:29:16.562" endtime="20210908 01:29:16.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:29:16.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:29:16.564" endtime="20210908 01:29:16.564"/>
</kw>
<status status="PASS" starttime="20210908 01:29:09.223" endtime="20210908 01:29:16.565"/>
</kw>
<msg timestamp="20210908 01:29:16.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:29:09.223" endtime="20210908 01:29:16.565"/>
</kw>
<status status="PASS" starttime="20210908 01:29:09.221" endtime="20210908 01:29:16.566"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:29:16.571" level="INFO">Running command 'ozone sh volume info o3://om:9862/11228-rpcwoport | jq -r '. | select(.name=="11228-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:29:24.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:29:24.200" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:29:16.568" endtime="20210908 01:29:24.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:29:24.203" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210908 01:29:24.201" endtime="20210908 01:29:24.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:29:24.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:29:24.203" endtime="20210908 01:29:24.204"/>
</kw>
<status status="PASS" starttime="20210908 01:29:16.568" endtime="20210908 01:29:24.206"/>
</kw>
<msg timestamp="20210908 01:29:24.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:29:16.567" endtime="20210908 01:29:24.206"/>
</kw>
<msg timestamp="20210908 01:29:24.207" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:29:16.566" endtime="20210908 01:29:24.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:29:24.209" endtime="20210908 01:29:24.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:29:24.215" level="INFO">Running command 'ozone sh bucket create o3://om:9862/11228-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:29:31.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:29:31.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:29:24.213" endtime="20210908 01:29:31.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:29:31.844" level="INFO"/>
<status status="PASS" starttime="20210908 01:29:31.842" endtime="20210908 01:29:31.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:29:31.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:29:31.844" endtime="20210908 01:29:31.846"/>
</kw>
<status status="PASS" starttime="20210908 01:29:24.212" endtime="20210908 01:29:31.846"/>
</kw>
<msg timestamp="20210908 01:29:31.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:29:24.211" endtime="20210908 01:29:31.847"/>
</kw>
<status status="PASS" starttime="20210908 01:29:24.211" endtime="20210908 01:29:31.847"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:29:31.854" level="INFO">Running command 'ozone sh bucket info o3://om:9862/11228-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:29:39.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:29:39.109" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210908 01:29:31.851" endtime="20210908 01:29:39.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:29:39.110" level="INFO">DISK</msg>
<status status="PASS" starttime="20210908 01:29:39.109" endtime="20210908 01:29:39.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:29:39.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:29:39.111" endtime="20210908 01:29:39.111"/>
</kw>
<status status="PASS" starttime="20210908 01:29:31.850" endtime="20210908 01:29:39.112"/>
</kw>
<msg timestamp="20210908 01:29:39.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:29:31.849" endtime="20210908 01:29:39.112"/>
</kw>
<msg timestamp="20210908 01:29:39.112" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210908 01:29:31.848" endtime="20210908 01:29:39.112"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:29:39.112" endtime="20210908 01:29:39.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:29:39.117" level="INFO">Running command 'ozone sh bucket info o3://om:9862/11228-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:29:46.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:29:46.252" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:29:39.115" endtime="20210908 01:29:46.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:29:46.255" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210908 01:29:46.253" endtime="20210908 01:29:46.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:29:46.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:29:46.255" endtime="20210908 01:29:46.257"/>
</kw>
<status status="PASS" starttime="20210908 01:29:39.115" endtime="20210908 01:29:46.257"/>
</kw>
<msg timestamp="20210908 01:29:46.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:29:39.114" endtime="20210908 01:29:46.258"/>
</kw>
<msg timestamp="20210908 01:29:46.259" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:29:39.113" endtime="20210908 01:29:46.259"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:29:46.260" endtime="20210908 01:29:46.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:29:46.268" level="INFO">Running command 'ozone sh bucket info o3://om:9862/11228-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:29:54.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:29:54.605" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210908 01:29:46.264" endtime="20210908 01:29:54.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:29:54.606" level="INFO">100</msg>
<status status="PASS" starttime="20210908 01:29:54.605" endtime="20210908 01:29:54.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:29:54.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:29:54.607" endtime="20210908 01:29:54.607"/>
</kw>
<status status="PASS" starttime="20210908 01:29:46.262" endtime="20210908 01:29:54.607"/>
</kw>
<msg timestamp="20210908 01:29:54.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:29:46.262" endtime="20210908 01:29:54.608"/>
</kw>
<msg timestamp="20210908 01:29:54.608" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210908 01:29:46.261" endtime="20210908 01:29:54.608"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:29:54.608" endtime="20210908 01:29:54.609"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:29:54.614" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/11228-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:30:01.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:30:01.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:29:54.611" endtime="20210908 01:30:01.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:30:01.604" level="INFO"/>
<status status="PASS" starttime="20210908 01:30:01.603" endtime="20210908 01:30:01.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:30:01.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:30:01.605" endtime="20210908 01:30:01.606"/>
</kw>
<status status="PASS" starttime="20210908 01:29:54.610" endtime="20210908 01:30:01.607"/>
</kw>
<msg timestamp="20210908 01:30:01.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:29:54.610" endtime="20210908 01:30:01.607"/>
</kw>
<status status="PASS" starttime="20210908 01:29:54.609" endtime="20210908 01:30:01.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:30:01.614" level="INFO">Running command 'ozone sh bucket info o3://om:9862/11228-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:30:08.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:30:08.076" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210908 01:30:01.611" endtime="20210908 01:30:08.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:30:08.078" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210908 01:30:08.077" endtime="20210908 01:30:08.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:30:08.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:30:08.078" endtime="20210908 01:30:08.079"/>
</kw>
<status status="PASS" starttime="20210908 01:30:01.610" endtime="20210908 01:30:08.079"/>
</kw>
<msg timestamp="20210908 01:30:08.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:30:01.610" endtime="20210908 01:30:08.079"/>
</kw>
<msg timestamp="20210908 01:30:08.080" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210908 01:30:01.608" endtime="20210908 01:30:08.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:30:08.080" endtime="20210908 01:30:08.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:30:08.085" level="INFO">Running command 'ozone sh bucket info o3://om:9862/11228-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:30:15.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:30:15.456" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210908 01:30:08.083" endtime="20210908 01:30:15.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:30:15.459" level="INFO">1000</msg>
<status status="PASS" starttime="20210908 01:30:15.457" endtime="20210908 01:30:15.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:30:15.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:30:15.459" endtime="20210908 01:30:15.461"/>
</kw>
<status status="PASS" starttime="20210908 01:30:08.082" endtime="20210908 01:30:15.461"/>
</kw>
<msg timestamp="20210908 01:30:15.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:30:08.082" endtime="20210908 01:30:15.462"/>
</kw>
<msg timestamp="20210908 01:30:15.462" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210908 01:30:08.081" endtime="20210908 01:30:15.463"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:30:15.463" endtime="20210908 01:30:15.464"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:30:15.470" level="INFO">Running command 'ozone sh bucket list o3://om:9862/11228-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:30:23.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:30:23.391" level="INFO">${output} = 11228-rpcwoport</msg>
<status status="PASS" starttime="20210908 01:30:15.467" endtime="20210908 01:30:23.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:30:23.393" level="INFO">11228-rpcwoport</msg>
<status status="PASS" starttime="20210908 01:30:23.392" endtime="20210908 01:30:23.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:30:23.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:30:23.393" endtime="20210908 01:30:23.394"/>
</kw>
<status status="PASS" starttime="20210908 01:30:15.466" endtime="20210908 01:30:23.394"/>
</kw>
<msg timestamp="20210908 01:30:23.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:30:15.466" endtime="20210908 01:30:23.394"/>
</kw>
<msg timestamp="20210908 01:30:23.395" level="INFO">${result} = 11228-rpcwoport</msg>
<status status="PASS" starttime="20210908 01:30:15.464" endtime="20210908 01:30:23.395"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:30:23.395" endtime="20210908 01:30:23.396"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:30:23.404" level="INFO">Running command 'ozone sh key put o3://om:9862/11228-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:33:30.471" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210908 01:30:23.401" endtime="20210908 01:33:30.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.472" endtime="20210908 01:33:30.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.472" endtime="20210908 01:33:30.472"/>
</kw>
<status status="FAIL" starttime="20210908 01:30:23.400" endtime="20210908 01:33:30.473"/>
</kw>
<msg timestamp="20210908 01:33:30.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210908 01:30:23.399" endtime="20210908 01:33:30.473"/>
</kw>
<status status="FAIL" starttime="20210908 01:30:23.398" endtime="20210908 01:33:30.473"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.474" endtime="20210908 01:33:30.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.474" endtime="20210908 01:33:30.474"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.474" endtime="20210908 01:33:30.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.475" endtime="20210908 01:33:30.475"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.475" endtime="20210908 01:33:30.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.475" endtime="20210908 01:33:30.475"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.475" endtime="20210908 01:33:30.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.476" endtime="20210908 01:33:30.476"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.476" endtime="20210908 01:33:30.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.476" endtime="20210908 01:33:30.476"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.476" endtime="20210908 01:33:30.477"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.477" endtime="20210908 01:33:30.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.477" endtime="20210908 01:33:30.478"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.478" endtime="20210908 01:33:30.478"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.478" endtime="20210908 01:33:30.479"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.479" endtime="20210908 01:33:30.479"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.479" endtime="20210908 01:33:30.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.480" endtime="20210908 01:33:30.480"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.480" endtime="20210908 01:33:30.481"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.481" endtime="20210908 01:33:30.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.481" endtime="20210908 01:33:30.482"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.482" endtime="20210908 01:33:30.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.482" endtime="20210908 01:33:30.482"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.483" endtime="20210908 01:33:30.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.483" endtime="20210908 01:33:30.483"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.483" endtime="20210908 01:33:30.483"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.484" endtime="20210908 01:33:30.484"/>
</kw>
<status status="FAIL" starttime="20210908 01:30:23.397" endtime="20210908 01:33:30.484"/>
</kw>
<status status="FAIL" starttime="20210908 01:30:23.396" endtime="20210908 01:33:30.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.484" endtime="20210908 01:33:30.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.485" endtime="20210908 01:33:30.485"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.485" endtime="20210908 01:33:30.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.486" endtime="20210908 01:33:30.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.486" endtime="20210908 01:33:30.487"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.488" endtime="20210908 01:33:30.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.488" endtime="20210908 01:33:30.489"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.489" endtime="20210908 01:33:30.489"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.490" endtime="20210908 01:33:30.490"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.490" endtime="20210908 01:33:30.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.490" endtime="20210908 01:33:30.491"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.491" endtime="20210908 01:33:30.491"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.491" endtime="20210908 01:33:30.491"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.492" endtime="20210908 01:33:30.492"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.493" endtime="20210908 01:33:30.493"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.493" endtime="20210908 01:33:30.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.494" endtime="20210908 01:33:30.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.494" endtime="20210908 01:33:30.494"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.495" endtime="20210908 01:33:30.495"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.495" endtime="20210908 01:33:30.495"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.496" endtime="20210908 01:33:30.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.496" endtime="20210908 01:33:30.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.496" endtime="20210908 01:33:30.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:33:30.496" endtime="20210908 01:33:30.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.497" endtime="20210908 01:33:30.497"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:33:30.498" endtime="20210908 01:33:30.498"/>
</kw>
<status status="FAIL" starttime="20210908 01:28:30.833" endtime="20210908 01:33:30.499"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210908 01:28:30.470" endtime="20210908 01:33:30.500">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:33:30.540" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:33:30.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:33:30.548" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:33:30.512" endtime="20210908 01:33:30.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:33:30.550" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:33:30.549" endtime="20210908 01:33:30.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:33:30.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:33:30.550" endtime="20210908 01:33:30.553"/>
</kw>
<status status="PASS" starttime="20210908 01:33:30.510" endtime="20210908 01:33:30.554"/>
</kw>
<msg timestamp="20210908 01:33:30.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:33:30.509" endtime="20210908 01:33:30.554"/>
</kw>
<msg timestamp="20210908 01:33:30.555" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:33:30.507" endtime="20210908 01:33:30.555"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:33:30.556" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:33:30.556" endtime="20210908 01:33:30.557"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:33:30.565" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:33:30.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:33:30.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:33:30.561" endtime="20210908 01:33:30.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:33:30.579" level="INFO"/>
<status status="PASS" starttime="20210908 01:33:30.578" endtime="20210908 01:33:30.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:33:30.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:33:30.579" endtime="20210908 01:33:30.580"/>
</kw>
<status status="PASS" starttime="20210908 01:33:30.560" endtime="20210908 01:33:30.580"/>
</kw>
<msg timestamp="20210908 01:33:30.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:33:30.560" endtime="20210908 01:33:30.580"/>
</kw>
<status status="PASS" starttime="20210908 01:33:30.558" endtime="20210908 01:33:30.581"/>
</kw>
<status status="PASS" starttime="20210908 01:33:30.557" endtime="20210908 01:33:30.581"/>
</kw>
<status status="PASS" starttime="20210908 01:33:30.506" endtime="20210908 01:33:30.581"/>
</kw>
<status status="PASS" starttime="20210908 01:33:30.505" endtime="20210908 01:33:30.581"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:33:30.589" level="INFO">Running command 'ozone sh volume create o3://om:9862/11228-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:33:38.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:33:38.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:33:30.587" endtime="20210908 01:33:38.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:33:38.899" level="INFO"/>
<status status="PASS" starttime="20210908 01:33:38.898" endtime="20210908 01:33:38.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:33:38.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:33:38.899" endtime="20210908 01:33:38.900"/>
</kw>
<status status="PASS" starttime="20210908 01:33:30.586" endtime="20210908 01:33:38.900"/>
</kw>
<msg timestamp="20210908 01:33:38.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:33:30.585" endtime="20210908 01:33:38.901"/>
</kw>
<status status="PASS" starttime="20210908 01:33:30.584" endtime="20210908 01:33:38.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:33:38.907" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/11228-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:33:47.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:33:47.011" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:33:38.904" endtime="20210908 01:33:47.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:33:47.013" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:33:47.012" endtime="20210908 01:33:47.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:33:47.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:33:47.013" endtime="20210908 01:33:47.014"/>
</kw>
<status status="PASS" starttime="20210908 01:33:38.903" endtime="20210908 01:33:47.014"/>
</kw>
<msg timestamp="20210908 01:33:47.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:33:38.902" endtime="20210908 01:33:47.014"/>
</kw>
<msg timestamp="20210908 01:33:47.015" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:33:38.901" endtime="20210908 01:33:47.015"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:33:47.015" endtime="20210908 01:33:47.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:33:47.020" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/11228-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:33:52.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:33:52.925" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210908 01:33:47.018" endtime="20210908 01:33:52.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:33:52.927" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210908 01:33:52.926" endtime="20210908 01:33:52.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:33:52.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:33:52.928" endtime="20210908 01:33:52.929"/>
</kw>
<status status="PASS" starttime="20210908 01:33:47.017" endtime="20210908 01:33:52.930"/>
</kw>
<msg timestamp="20210908 01:33:52.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:33:47.017" endtime="20210908 01:33:52.930"/>
</kw>
<msg timestamp="20210908 01:33:52.931" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210908 01:33:47.016" endtime="20210908 01:33:52.931"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:33:52.938" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/11228-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:33:58.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:33:58.990" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210908 01:33:52.935" endtime="20210908 01:33:58.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:33:58.992" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:33:58.991" endtime="20210908 01:33:58.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:33:58.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:33:58.992" endtime="20210908 01:33:58.992"/>
</kw>
<status status="PASS" starttime="20210908 01:33:52.933" endtime="20210908 01:33:58.993"/>
</kw>
<msg timestamp="20210908 01:33:58.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:33:52.933" endtime="20210908 01:33:58.993"/>
</kw>
<msg timestamp="20210908 01:33:58.993" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210908 01:33:52.931" endtime="20210908 01:33:58.993"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:33:58.994" endtime="20210908 01:33:58.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:33:59.003" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/11228-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:34:05.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:34:05.950" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210908 01:33:58.999" endtime="20210908 01:34:05.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:34:05.952" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210908 01:34:05.951" endtime="20210908 01:34:05.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:34:05.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:34:05.952" endtime="20210908 01:34:05.953"/>
</kw>
<status status="PASS" starttime="20210908 01:33:58.997" endtime="20210908 01:34:05.953"/>
</kw>
<msg timestamp="20210908 01:34:05.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:33:58.996" endtime="20210908 01:34:05.954"/>
</kw>
<msg timestamp="20210908 01:34:05.955" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210908 01:33:58.995" endtime="20210908 01:34:05.955"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:34:05.960" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/11228-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:34:13.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:34:13.250" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210908 01:34:05.958" endtime="20210908 01:34:13.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:34:13.252" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:34:13.251" endtime="20210908 01:34:13.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:34:13.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:34:13.252" endtime="20210908 01:34:13.253"/>
</kw>
<status status="PASS" starttime="20210908 01:34:05.957" endtime="20210908 01:34:13.253"/>
</kw>
<msg timestamp="20210908 01:34:13.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:34:05.956" endtime="20210908 01:34:13.253"/>
</kw>
<msg timestamp="20210908 01:34:13.254" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210908 01:34:05.955" endtime="20210908 01:34:13.254"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:34:13.254" endtime="20210908 01:34:13.258"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:34:13.264" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/11228-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:34:20.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:34:20.463" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:34:13.261" endtime="20210908 01:34:20.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:34:20.464" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:34:20.463" endtime="20210908 01:34:20.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:34:20.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:34:20.464" endtime="20210908 01:34:20.465"/>
</kw>
<status status="PASS" starttime="20210908 01:34:13.261" endtime="20210908 01:34:20.465"/>
</kw>
<msg timestamp="20210908 01:34:20.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:34:13.260" endtime="20210908 01:34:20.466"/>
</kw>
<msg timestamp="20210908 01:34:20.466" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:34:13.259" endtime="20210908 01:34:20.466"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:34:20.472" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/11228-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:34:29.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:34:29.379" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210908 01:34:20.469" endtime="20210908 01:34:29.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:34:29.381" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:34:29.380" endtime="20210908 01:34:29.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:34:29.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:34:29.381" endtime="20210908 01:34:29.382"/>
</kw>
<status status="PASS" starttime="20210908 01:34:20.468" endtime="20210908 01:34:29.383"/>
</kw>
<msg timestamp="20210908 01:34:29.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:34:20.468" endtime="20210908 01:34:29.383"/>
</kw>
<msg timestamp="20210908 01:34:29.384" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210908 01:34:20.467" endtime="20210908 01:34:29.384"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:34:29.384" endtime="20210908 01:34:29.385"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:34:29.386" endtime="20210908 01:34:29.387"/>
</kw>
<status status="PASS" starttime="20210908 01:33:30.582" endtime="20210908 01:34:29.388"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210908 01:33:30.502" endtime="20210908 01:34:29.389"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:34:29.405" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:34:29.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:34:29.409" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:34:29.402" endtime="20210908 01:34:29.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:34:29.411" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:34:29.410" endtime="20210908 01:34:29.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:34:29.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:34:29.411" endtime="20210908 01:34:29.412"/>
</kw>
<status status="PASS" starttime="20210908 01:34:29.394" endtime="20210908 01:34:29.412"/>
</kw>
<msg timestamp="20210908 01:34:29.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:34:29.394" endtime="20210908 01:34:29.412"/>
</kw>
<msg timestamp="20210908 01:34:29.413" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:34:29.394" endtime="20210908 01:34:29.413"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:34:29.414" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:34:29.413" endtime="20210908 01:34:29.414"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:34:29.418" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:34:29.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:34:29.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:34:29.416" endtime="20210908 01:34:29.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:34:29.598" level="INFO"/>
<status status="PASS" starttime="20210908 01:34:29.597" endtime="20210908 01:34:29.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:34:29.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:34:29.598" endtime="20210908 01:34:29.599"/>
</kw>
<status status="PASS" starttime="20210908 01:34:29.416" endtime="20210908 01:34:29.599"/>
</kw>
<msg timestamp="20210908 01:34:29.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:34:29.415" endtime="20210908 01:34:29.600"/>
</kw>
<status status="PASS" starttime="20210908 01:34:29.415" endtime="20210908 01:34:29.600"/>
</kw>
<status status="PASS" starttime="20210908 01:34:29.414" endtime="20210908 01:34:29.600"/>
</kw>
<status status="PASS" starttime="20210908 01:34:29.392" endtime="20210908 01:34:29.600"/>
</kw>
<status status="PASS" starttime="20210908 01:34:29.391" endtime="20210908 01:34:29.600"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:34:29.605" level="INFO">Running command 'ozone sh bucket create o3://om:9862/11228-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:34:35.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:34:35.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:34:29.603" endtime="20210908 01:34:35.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:34:35.747" level="INFO"/>
<status status="PASS" starttime="20210908 01:34:35.747" endtime="20210908 01:34:35.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:34:35.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:34:35.748" endtime="20210908 01:34:35.748"/>
</kw>
<status status="PASS" starttime="20210908 01:34:29.603" endtime="20210908 01:34:35.748"/>
</kw>
<msg timestamp="20210908 01:34:35.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:34:29.602" endtime="20210908 01:34:35.749"/>
</kw>
<status status="PASS" starttime="20210908 01:34:29.601" endtime="20210908 01:34:35.749"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:34:35.753" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/11228-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:34:43.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:34:43.426" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210908 01:34:35.751" endtime="20210908 01:34:43.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:34:43.427" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:34:43.426" endtime="20210908 01:34:43.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:34:43.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:34:43.427" endtime="20210908 01:34:43.428"/>
</kw>
<status status="PASS" starttime="20210908 01:34:35.750" endtime="20210908 01:34:43.429"/>
</kw>
<msg timestamp="20210908 01:34:43.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:34:35.750" endtime="20210908 01:34:43.429"/>
</kw>
<msg timestamp="20210908 01:34:43.429" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210908 01:34:35.749" endtime="20210908 01:34:43.429"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:34:43.429" endtime="20210908 01:34:43.430"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:34:43.435" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/11228-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:34:50.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:34:50.217" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210908 01:34:43.432" endtime="20210908 01:34:50.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:34:50.219" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210908 01:34:50.218" endtime="20210908 01:34:50.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:34:50.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:34:50.219" endtime="20210908 01:34:50.220"/>
</kw>
<status status="PASS" starttime="20210908 01:34:43.431" endtime="20210908 01:34:50.221"/>
</kw>
<msg timestamp="20210908 01:34:50.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:34:43.431" endtime="20210908 01:34:50.221"/>
</kw>
<msg timestamp="20210908 01:34:50.222" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210908 01:34:43.430" endtime="20210908 01:34:50.222"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:34:50.228" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/11228-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:34:58.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:34:58.219" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210908 01:34:50.225" endtime="20210908 01:34:58.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:34:58.222" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:34:58.220" endtime="20210908 01:34:58.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:34:58.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:34:58.222" endtime="20210908 01:34:58.224"/>
</kw>
<status status="PASS" starttime="20210908 01:34:50.225" endtime="20210908 01:34:58.225"/>
</kw>
<msg timestamp="20210908 01:34:58.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:34:50.224" endtime="20210908 01:34:58.225"/>
</kw>
<msg timestamp="20210908 01:34:58.226" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210908 01:34:50.222" endtime="20210908 01:34:58.226"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:34:58.226" endtime="20210908 01:34:58.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:34:58.235" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/11228-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:35:05.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:35:05.584" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210908 01:34:58.232" endtime="20210908 01:35:05.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:35:05.585" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210908 01:35:05.584" endtime="20210908 01:35:05.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:35:05.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:35:05.585" endtime="20210908 01:35:05.586"/>
</kw>
<status status="PASS" starttime="20210908 01:34:58.230" endtime="20210908 01:35:05.586"/>
</kw>
<msg timestamp="20210908 01:35:05.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:34:58.230" endtime="20210908 01:35:05.587"/>
</kw>
<msg timestamp="20210908 01:35:05.587" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210908 01:34:58.228" endtime="20210908 01:35:05.587"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:35:05.595" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/11228-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:35:11.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:35:11.790" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210908 01:35:05.591" endtime="20210908 01:35:11.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:35:11.792" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:35:11.791" endtime="20210908 01:35:11.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:35:11.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:35:11.792" endtime="20210908 01:35:11.793"/>
</kw>
<status status="PASS" starttime="20210908 01:35:05.588" endtime="20210908 01:35:11.793"/>
</kw>
<msg timestamp="20210908 01:35:11.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:35:05.588" endtime="20210908 01:35:11.793"/>
</kw>
<msg timestamp="20210908 01:35:11.794" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210908 01:35:05.587" endtime="20210908 01:35:11.794"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:35:11.794" endtime="20210908 01:35:11.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:35:11.799" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/11228-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:35:17.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:35:17.928" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:35:11.797" endtime="20210908 01:35:17.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:35:17.929" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:35:17.928" endtime="20210908 01:35:17.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:35:17.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:35:17.929" endtime="20210908 01:35:17.931"/>
</kw>
<status status="PASS" starttime="20210908 01:35:11.796" endtime="20210908 01:35:17.931"/>
</kw>
<msg timestamp="20210908 01:35:17.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:35:11.796" endtime="20210908 01:35:17.932"/>
</kw>
<msg timestamp="20210908 01:35:17.932" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:35:11.795" endtime="20210908 01:35:17.932"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:35:17.938" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/11228-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:35:23.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:35:23.810" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210908 01:35:17.934" endtime="20210908 01:35:23.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:35:23.811" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:35:23.810" endtime="20210908 01:35:23.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:35:23.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:35:23.812" endtime="20210908 01:35:23.813"/>
</kw>
<status status="PASS" starttime="20210908 01:35:17.934" endtime="20210908 01:35:23.813"/>
</kw>
<msg timestamp="20210908 01:35:23.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:35:17.933" endtime="20210908 01:35:23.813"/>
</kw>
<msg timestamp="20210908 01:35:23.814" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210908 01:35:17.932" endtime="20210908 01:35:23.814"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:35:23.814" endtime="20210908 01:35:23.814"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:35:23.815" endtime="20210908 01:35:23.815"/>
</kw>
<status status="PASS" starttime="20210908 01:34:29.601" endtime="20210908 01:35:23.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210908 01:34:29.389" endtime="20210908 01:35:23.816"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:35:23.823" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:35:23.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:35:23.829" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:35:23.821" endtime="20210908 01:35:23.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:35:23.831" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:35:23.830" endtime="20210908 01:35:23.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:35:23.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:35:23.832" endtime="20210908 01:35:23.833"/>
</kw>
<status status="PASS" starttime="20210908 01:35:23.820" endtime="20210908 01:35:23.834"/>
</kw>
<msg timestamp="20210908 01:35:23.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:35:23.820" endtime="20210908 01:35:23.835"/>
</kw>
<msg timestamp="20210908 01:35:23.835" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:35:23.820" endtime="20210908 01:35:23.835"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:35:23.837" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:35:23.836" endtime="20210908 01:35:23.837"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:35:23.844" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:35:23.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:35:23.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:35:23.841" endtime="20210908 01:35:23.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:35:23.854" level="INFO"/>
<status status="PASS" starttime="20210908 01:35:23.853" endtime="20210908 01:35:23.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:35:23.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:35:23.855" endtime="20210908 01:35:23.855"/>
</kw>
<status status="PASS" starttime="20210908 01:35:23.840" endtime="20210908 01:35:23.856"/>
</kw>
<msg timestamp="20210908 01:35:23.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:35:23.840" endtime="20210908 01:35:23.856"/>
</kw>
<status status="PASS" starttime="20210908 01:35:23.839" endtime="20210908 01:35:23.856"/>
</kw>
<status status="PASS" starttime="20210908 01:35:23.838" endtime="20210908 01:35:23.857"/>
</kw>
<status status="PASS" starttime="20210908 01:35:23.819" endtime="20210908 01:35:23.857"/>
</kw>
<status status="PASS" starttime="20210908 01:35:23.818" endtime="20210908 01:35:23.857"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:35:23.863" level="INFO">Running command 'ozone sh key put o3://om:9862/11228-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:38:35.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:38:35.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:35:23.861" endtime="20210908 01:38:35.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:38:35.566" level="INFO"/>
<status status="PASS" starttime="20210908 01:38:35.565" endtime="20210908 01:38:35.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:38:35.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:38:35.566" endtime="20210908 01:38:35.567"/>
</kw>
<status status="PASS" starttime="20210908 01:35:23.860" endtime="20210908 01:38:35.568"/>
</kw>
<msg timestamp="20210908 01:38:35.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:35:23.859" endtime="20210908 01:38:35.568"/>
</kw>
<status status="PASS" starttime="20210908 01:35:23.858" endtime="20210908 01:38:35.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:38:35.574" level="INFO">Running command 'ozone sh key getacl o3://om:9862/11228-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:38:43.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:38:43.490" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210908 01:38:35.571" endtime="20210908 01:38:43.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:38:43.492" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:38:43.491" endtime="20210908 01:38:43.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:38:43.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:38:43.492" endtime="20210908 01:38:43.493"/>
</kw>
<status status="PASS" starttime="20210908 01:38:35.570" endtime="20210908 01:38:43.493"/>
</kw>
<msg timestamp="20210908 01:38:43.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:38:35.570" endtime="20210908 01:38:43.493"/>
</kw>
<msg timestamp="20210908 01:38:43.494" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210908 01:38:35.569" endtime="20210908 01:38:43.494"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:38:43.494" endtime="20210908 01:38:43.495"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:38:43.499" level="INFO">Running command 'ozone sh key addacl o3://om:9862/11228-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:38:51.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:38:51.701" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:38:43.497" endtime="20210908 01:38:51.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:38:51.703" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:38:51.702" endtime="20210908 01:38:51.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:38:51.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:38:51.703" endtime="20210908 01:38:51.704"/>
</kw>
<status status="PASS" starttime="20210908 01:38:43.497" endtime="20210908 01:38:51.705"/>
</kw>
<msg timestamp="20210908 01:38:51.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:38:43.496" endtime="20210908 01:38:51.706"/>
</kw>
<msg timestamp="20210908 01:38:51.706" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210908 01:38:43.495" endtime="20210908 01:38:51.706"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:38:51.712" level="INFO">Running command 'ozone sh key getacl o3://om:9862/11228-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:39:00.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:39:00.577" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210908 01:38:51.709" endtime="20210908 01:39:00.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:39:00.579" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:39:00.578" endtime="20210908 01:39:00.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:39:00.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:39:00.579" endtime="20210908 01:39:00.580"/>
</kw>
<status status="PASS" starttime="20210908 01:38:51.708" endtime="20210908 01:39:00.581"/>
</kw>
<msg timestamp="20210908 01:39:00.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:38:51.707" endtime="20210908 01:39:00.581"/>
</kw>
<msg timestamp="20210908 01:39:00.581" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210908 01:38:51.706" endtime="20210908 01:39:00.581"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:39:00.582" endtime="20210908 01:39:00.583"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:39:00.588" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/11228-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:39:08.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:39:08.391" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210908 01:39:00.585" endtime="20210908 01:39:08.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:39:08.394" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210908 01:39:08.393" endtime="20210908 01:39:08.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:39:08.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:39:08.395" endtime="20210908 01:39:08.397"/>
</kw>
<status status="PASS" starttime="20210908 01:39:00.584" endtime="20210908 01:39:08.398"/>
</kw>
<msg timestamp="20210908 01:39:08.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:39:00.584" endtime="20210908 01:39:08.399"/>
</kw>
<msg timestamp="20210908 01:39:08.399" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210908 01:39:00.583" endtime="20210908 01:39:08.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:39:08.407" level="INFO">Running command 'ozone sh key getacl o3://om:9862/11228-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:39:15.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:39:15.661" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210908 01:39:08.403" endtime="20210908 01:39:15.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:39:15.663" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:39:15.662" endtime="20210908 01:39:15.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:39:15.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:39:15.663" endtime="20210908 01:39:15.664"/>
</kw>
<status status="PASS" starttime="20210908 01:39:08.402" endtime="20210908 01:39:15.664"/>
</kw>
<msg timestamp="20210908 01:39:15.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:39:08.401" endtime="20210908 01:39:15.664"/>
</kw>
<msg timestamp="20210908 01:39:15.665" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210908 01:39:08.399" endtime="20210908 01:39:15.665"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:39:15.665" endtime="20210908 01:39:15.668"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:39:15.673" level="INFO">Running command 'ozone sh key setacl o3://om:9862/11228-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:39:22.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:39:22.878" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:39:15.670" endtime="20210908 01:39:22.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:39:22.880" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:39:22.879" endtime="20210908 01:39:22.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:39:22.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:39:22.880" endtime="20210908 01:39:22.881"/>
</kw>
<status status="PASS" starttime="20210908 01:39:15.669" endtime="20210908 01:39:22.882"/>
</kw>
<msg timestamp="20210908 01:39:22.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:39:15.669" endtime="20210908 01:39:22.883"/>
</kw>
<msg timestamp="20210908 01:39:22.883" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:39:15.668" endtime="20210908 01:39:22.883"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:39:22.890" level="INFO">Running command 'ozone sh key getacl o3://om:9862/11228-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:39:30.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:39:30.720" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210908 01:39:22.887" endtime="20210908 01:39:30.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:39:30.722" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:39:30.720" endtime="20210908 01:39:30.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:39:30.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:39:30.722" endtime="20210908 01:39:30.723"/>
</kw>
<status status="PASS" starttime="20210908 01:39:22.886" endtime="20210908 01:39:30.724"/>
</kw>
<msg timestamp="20210908 01:39:30.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:39:22.885" endtime="20210908 01:39:30.724"/>
</kw>
<msg timestamp="20210908 01:39:30.725" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210908 01:39:22.883" endtime="20210908 01:39:30.725"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:39:30.726" endtime="20210908 01:39:30.727"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:39:30.727" endtime="20210908 01:39:30.729"/>
</kw>
<status status="PASS" starttime="20210908 01:35:23.857" endtime="20210908 01:39:30.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210908 01:35:23.817" endtime="20210908 01:39:30.730"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:39:30.742" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:39:30.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:39:30.747" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:39:30.739" endtime="20210908 01:39:30.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:39:30.750" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:39:30.748" endtime="20210908 01:39:30.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:39:30.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:39:30.750" endtime="20210908 01:39:30.752"/>
</kw>
<status status="PASS" starttime="20210908 01:39:30.738" endtime="20210908 01:39:30.752"/>
</kw>
<msg timestamp="20210908 01:39:30.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:39:30.737" endtime="20210908 01:39:30.753"/>
</kw>
<msg timestamp="20210908 01:39:30.753" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:39:30.736" endtime="20210908 01:39:30.754"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:39:30.755" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:39:30.754" endtime="20210908 01:39:30.755"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:39:30.761" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:39:30.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:39:30.972" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:39:30.759" endtime="20210908 01:39:30.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:39:30.973" level="INFO"/>
<status status="PASS" starttime="20210908 01:39:30.973" endtime="20210908 01:39:30.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:39:30.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:39:30.974" endtime="20210908 01:39:30.974"/>
</kw>
<status status="PASS" starttime="20210908 01:39:30.759" endtime="20210908 01:39:30.975"/>
</kw>
<msg timestamp="20210908 01:39:30.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:39:30.758" endtime="20210908 01:39:30.975"/>
</kw>
<status status="PASS" starttime="20210908 01:39:30.756" endtime="20210908 01:39:30.975"/>
</kw>
<status status="PASS" starttime="20210908 01:39:30.756" endtime="20210908 01:39:30.975"/>
</kw>
<status status="PASS" starttime="20210908 01:39:30.735" endtime="20210908 01:39:30.975"/>
</kw>
<status status="PASS" starttime="20210908 01:39:30.734" endtime="20210908 01:39:30.976"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:39:30.983" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/11228-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:39:38.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:39:38.280" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210908 01:39:30.980" endtime="20210908 01:39:38.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:39:38.282" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210908 01:39:38.281" endtime="20210908 01:39:38.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:39:38.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:39:38.282" endtime="20210908 01:39:38.283"/>
</kw>
<status status="PASS" starttime="20210908 01:39:30.979" endtime="20210908 01:39:38.283"/>
</kw>
<msg timestamp="20210908 01:39:38.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:39:30.978" endtime="20210908 01:39:38.284"/>
</kw>
<status status="PASS" starttime="20210908 01:39:30.977" endtime="20210908 01:39:38.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:39:38.290" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/11228-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:39:45.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:39:45.680" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210908 01:39:38.286" endtime="20210908 01:39:45.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:39:45.682" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:39:45.681" endtime="20210908 01:39:45.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:39:45.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:39:45.682" endtime="20210908 01:39:45.683"/>
</kw>
<status status="PASS" starttime="20210908 01:39:38.285" endtime="20210908 01:39:45.684"/>
</kw>
<msg timestamp="20210908 01:39:45.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:39:38.285" endtime="20210908 01:39:45.684"/>
</kw>
<msg timestamp="20210908 01:39:45.684" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210908 01:39:38.284" endtime="20210908 01:39:45.684"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:39:45.685" endtime="20210908 01:39:45.685"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:39:45.690" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/11228-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:39:52.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:39:52.876" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210908 01:39:45.687" endtime="20210908 01:39:52.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:39:52.877" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210908 01:39:52.877" endtime="20210908 01:39:52.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:39:52.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:39:52.878" endtime="20210908 01:39:52.879"/>
</kw>
<status status="PASS" starttime="20210908 01:39:45.687" endtime="20210908 01:39:52.880"/>
</kw>
<msg timestamp="20210908 01:39:52.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:39:45.686" endtime="20210908 01:39:52.881"/>
</kw>
<msg timestamp="20210908 01:39:52.881" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210908 01:39:45.686" endtime="20210908 01:39:52.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:39:52.888" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/11228-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:40:00.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:40:00.476" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210908 01:39:52.885" endtime="20210908 01:40:00.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:40:00.478" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:40:00.477" endtime="20210908 01:40:00.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:40:00.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:40:00.479" endtime="20210908 01:40:00.480"/>
</kw>
<status status="PASS" starttime="20210908 01:39:52.884" endtime="20210908 01:40:00.481"/>
</kw>
<msg timestamp="20210908 01:40:00.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:39:52.883" endtime="20210908 01:40:00.481"/>
</kw>
<msg timestamp="20210908 01:40:00.482" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210908 01:39:52.882" endtime="20210908 01:40:00.482"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:40:00.482" endtime="20210908 01:40:00.484"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:40:00.490" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/11228-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:40:07.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:40:07.965" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:40:00.487" endtime="20210908 01:40:07.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:40:07.967" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:40:07.965" endtime="20210908 01:40:07.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:40:07.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:40:07.967" endtime="20210908 01:40:07.968"/>
</kw>
<status status="PASS" starttime="20210908 01:40:00.486" endtime="20210908 01:40:07.968"/>
</kw>
<msg timestamp="20210908 01:40:07.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:40:00.486" endtime="20210908 01:40:07.968"/>
</kw>
<msg timestamp="20210908 01:40:07.969" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210908 01:40:00.484" endtime="20210908 01:40:07.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:40:07.974" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/11228-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:40:15.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:40:15.722" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210908 01:40:07.972" endtime="20210908 01:40:15.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:40:15.723" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:40:15.722" endtime="20210908 01:40:15.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:40:15.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:40:15.723" endtime="20210908 01:40:15.725"/>
</kw>
<status status="PASS" starttime="20210908 01:40:07.970" endtime="20210908 01:40:15.725"/>
</kw>
<msg timestamp="20210908 01:40:15.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:40:07.970" endtime="20210908 01:40:15.726"/>
</kw>
<msg timestamp="20210908 01:40:15.726" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210908 01:40:07.969" endtime="20210908 01:40:15.726"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:40:15.726" endtime="20210908 01:40:15.727"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:40:15.727" endtime="20210908 01:40:15.728"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:40:15.733" level="INFO">Running command 'ozone sh key put o3://om:9862/11228-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:43:27.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:43:27.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:40:15.730" endtime="20210908 01:43:27.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:43:27.408" level="INFO"/>
<status status="PASS" starttime="20210908 01:43:27.407" endtime="20210908 01:43:27.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:43:27.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:43:27.408" endtime="20210908 01:43:27.408"/>
</kw>
<status status="PASS" starttime="20210908 01:40:15.729" endtime="20210908 01:43:27.409"/>
</kw>
<msg timestamp="20210908 01:43:27.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:40:15.729" endtime="20210908 01:43:27.409"/>
</kw>
<status status="PASS" starttime="20210908 01:40:15.728" endtime="20210908 01:43:27.409"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:43:27.415" level="INFO">Running command 'ozone sh key getacl o3://om:9862/11228-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:43:35.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:43:35.336" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210908 01:43:27.412" endtime="20210908 01:43:35.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:43:35.337" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210908 01:43:35.336" endtime="20210908 01:43:35.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:43:35.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:43:35.337" endtime="20210908 01:43:35.338"/>
</kw>
<status status="PASS" starttime="20210908 01:43:27.411" endtime="20210908 01:43:35.339"/>
</kw>
<msg timestamp="20210908 01:43:35.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:43:27.410" endtime="20210908 01:43:35.339"/>
</kw>
<msg timestamp="20210908 01:43:35.339" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210908 01:43:27.410" endtime="20210908 01:43:35.339"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:43:35.339" endtime="20210908 01:43:35.340"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210908 01:43:35.340" endtime="20210908 01:43:35.341"/>
</kw>
<status status="PASS" starttime="20210908 01:39:30.976" endtime="20210908 01:43:35.341"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210908 01:39:30.732" endtime="20210908 01:43:35.341"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:43:35.350" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:43:35.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:43:35.355" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:43:35.347" endtime="20210908 01:43:35.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:43:35.356" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:43:35.355" endtime="20210908 01:43:35.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:43:35.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:43:35.356" endtime="20210908 01:43:35.357"/>
</kw>
<status status="PASS" starttime="20210908 01:43:35.346" endtime="20210908 01:43:35.357"/>
</kw>
<msg timestamp="20210908 01:43:35.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:43:35.346" endtime="20210908 01:43:35.357"/>
</kw>
<msg timestamp="20210908 01:43:35.358" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:43:35.345" endtime="20210908 01:43:35.358"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:43:35.359" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:43:35.358" endtime="20210908 01:43:35.359"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:43:35.364" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:43:35.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:43:35.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:43:35.361" endtime="20210908 01:43:35.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:43:35.377" level="INFO"/>
<status status="PASS" starttime="20210908 01:43:35.376" endtime="20210908 01:43:35.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:43:35.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:43:35.377" endtime="20210908 01:43:35.379"/>
</kw>
<status status="PASS" starttime="20210908 01:43:35.361" endtime="20210908 01:43:35.379"/>
</kw>
<msg timestamp="20210908 01:43:35.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:43:35.360" endtime="20210908 01:43:35.380"/>
</kw>
<status status="PASS" starttime="20210908 01:43:35.359" endtime="20210908 01:43:35.380"/>
</kw>
<status status="PASS" starttime="20210908 01:43:35.359" endtime="20210908 01:43:35.381"/>
</kw>
<status status="PASS" starttime="20210908 01:43:35.345" endtime="20210908 01:43:35.381"/>
</kw>
<status status="PASS" starttime="20210908 01:43:35.344" endtime="20210908 01:43:35.382"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:43:35.387" level="INFO">Running command 'ozone sh volume info o3:///11228-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:43:42.902" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:43:42.903" level="INFO">${output} = VOLUME_NOT_FOUND Volume 11228-rpcwport is not found</msg>
<status status="PASS" starttime="20210908 01:43:35.385" endtime="20210908 01:43:42.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:43:42.906" level="INFO">VOLUME_NOT_FOUND Volume 11228-rpcwport is not found</msg>
<status status="PASS" starttime="20210908 01:43:42.904" endtime="20210908 01:43:42.906"/>
</kw>
<msg timestamp="20210908 01:43:42.907" level="INFO">${result} = VOLUME_NOT_FOUND Volume 11228-rpcwport is not found</msg>
<status status="PASS" starttime="20210908 01:43:35.385" endtime="20210908 01:43:42.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:43:42.908" endtime="20210908 01:43:42.909"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:43:42.917" level="INFO">Running command 'ozone sh volume create o3:///11228-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:43:49.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:43:49.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:43:42.914" endtime="20210908 01:43:49.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:43:49.845" level="INFO"/>
<status status="PASS" starttime="20210908 01:43:49.844" endtime="20210908 01:43:49.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:43:49.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:43:49.846" endtime="20210908 01:43:49.847"/>
</kw>
<status status="PASS" starttime="20210908 01:43:42.912" endtime="20210908 01:43:49.848"/>
</kw>
<msg timestamp="20210908 01:43:49.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:43:42.911" endtime="20210908 01:43:49.848"/>
</kw>
<msg timestamp="20210908 01:43:49.849" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210908 01:43:42.909" endtime="20210908 01:43:49.849"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:43:49.849" endtime="20210908 01:43:49.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:43:49.856" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="11228-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:43:58.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:43:58.405" level="INFO">${output} = {
  "metadata": {},
  "name": "11228-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210908 01:43:49.852" endtime="20210908 01:43:58.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:43:58.407" level="INFO">{
  "metadata": {},
  "name": "11228-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-08T01:43:49.754Z",
  "modificationTime": "2021-09-08T01:43:49.754Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210908 01:43:58.406" endtime="20210908 01:43:58.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:43:58.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:43:58.407" endtime="20210908 01:43:58.408"/>
</kw>
<status status="PASS" starttime="20210908 01:43:49.852" endtime="20210908 01:43:58.408"/>
</kw>
<msg timestamp="20210908 01:43:58.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:43:49.851" endtime="20210908 01:43:58.408"/>
</kw>
<msg timestamp="20210908 01:43:58.409" level="INFO">${result} = {
  "metadata": {},
  "name": "11228-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210908 01:43:49.850" endtime="20210908 01:43:58.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:43:58.409" endtime="20210908 01:43:58.409"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:43:58.416" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="11228-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:44:06.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:44:06.826" level="INFO">${output} = {
  "metadata": {},
  "name": "11228-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210908 01:43:58.412" endtime="20210908 01:44:06.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:44:06.828" level="INFO">{
  "metadata": {},
  "name": "11228-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-08T01:43:49.754Z",
  "modificationTime": "2021-09-08T01:43:49.754Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210908 01:44:06.827" endtime="20210908 01:44:06.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:44:06.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:44:06.828" endtime="20210908 01:44:06.829"/>
</kw>
<status status="PASS" starttime="20210908 01:43:58.412" endtime="20210908 01:44:06.829"/>
</kw>
<msg timestamp="20210908 01:44:06.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:43:58.411" endtime="20210908 01:44:06.830"/>
</kw>
<msg timestamp="20210908 01:44:06.830" level="INFO">${result} = {
  "metadata": {},
  "name": "11228-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210908 01:43:58.410" endtime="20210908 01:44:06.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:44:06.831" endtime="20210908 01:44:06.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:44:06.839" level="INFO">Running command 'ozone sh volume setquota o3:///11228-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:44:14.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:44:14.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:44:06.836" endtime="20210908 01:44:14.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:44:14.387" level="INFO"/>
<status status="PASS" starttime="20210908 01:44:14.386" endtime="20210908 01:44:14.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:44:14.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:44:14.388" endtime="20210908 01:44:14.389"/>
</kw>
<status status="PASS" starttime="20210908 01:44:06.834" endtime="20210908 01:44:14.390"/>
</kw>
<msg timestamp="20210908 01:44:14.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:44:06.833" endtime="20210908 01:44:14.390"/>
</kw>
<status status="PASS" starttime="20210908 01:44:06.832" endtime="20210908 01:44:14.391"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:44:14.398" level="INFO">Running command 'ozone sh volume info o3:///11228-rpcwport | jq -r '. | select(.name=="11228-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:44:22.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:44:22.559" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:44:14.395" endtime="20210908 01:44:22.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:44:22.561" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210908 01:44:22.560" endtime="20210908 01:44:22.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:44:22.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:44:22.562" endtime="20210908 01:44:22.563"/>
</kw>
<status status="PASS" starttime="20210908 01:44:14.394" endtime="20210908 01:44:22.563"/>
</kw>
<msg timestamp="20210908 01:44:22.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:44:14.393" endtime="20210908 01:44:22.564"/>
</kw>
<msg timestamp="20210908 01:44:22.564" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:44:14.391" endtime="20210908 01:44:22.565"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:44:22.565" endtime="20210908 01:44:22.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:44:22.573" level="INFO">Running command 'ozone sh bucket create o3:///11228-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:44:29.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:44:29.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:44:22.570" endtime="20210908 01:44:29.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:44:29.368" level="INFO"/>
<status status="PASS" starttime="20210908 01:44:29.367" endtime="20210908 01:44:29.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:44:29.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:44:29.368" endtime="20210908 01:44:29.373"/>
</kw>
<status status="PASS" starttime="20210908 01:44:22.568" endtime="20210908 01:44:29.373"/>
</kw>
<msg timestamp="20210908 01:44:29.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:44:22.568" endtime="20210908 01:44:29.374"/>
</kw>
<status status="PASS" starttime="20210908 01:44:22.566" endtime="20210908 01:44:29.374"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:44:29.383" level="INFO">Running command 'ozone sh bucket info o3:///11228-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:44:37.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:44:37.453" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210908 01:44:29.381" endtime="20210908 01:44:37.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:44:37.457" level="INFO">DISK</msg>
<status status="PASS" starttime="20210908 01:44:37.455" endtime="20210908 01:44:37.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:44:37.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:44:37.457" endtime="20210908 01:44:37.459"/>
</kw>
<status status="PASS" starttime="20210908 01:44:29.380" endtime="20210908 01:44:37.459"/>
</kw>
<msg timestamp="20210908 01:44:37.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:44:29.380" endtime="20210908 01:44:37.460"/>
</kw>
<msg timestamp="20210908 01:44:37.461" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210908 01:44:29.378" endtime="20210908 01:44:37.461"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:44:37.461" endtime="20210908 01:44:37.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:44:37.471" level="INFO">Running command 'ozone sh bucket info o3:///11228-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:44:43.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:44:43.489" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:44:37.467" endtime="20210908 01:44:43.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:44:43.491" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210908 01:44:43.490" endtime="20210908 01:44:43.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:44:43.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:44:43.492" endtime="20210908 01:44:43.493"/>
</kw>
<status status="PASS" starttime="20210908 01:44:37.466" endtime="20210908 01:44:43.494"/>
</kw>
<msg timestamp="20210908 01:44:43.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:44:37.465" endtime="20210908 01:44:43.495"/>
</kw>
<msg timestamp="20210908 01:44:43.495" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:44:37.463" endtime="20210908 01:44:43.496"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:44:43.496" endtime="20210908 01:44:43.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:44:43.505" level="INFO">Running command 'ozone sh bucket info o3:///11228-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:44:49.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:44:49.493" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210908 01:44:43.501" endtime="20210908 01:44:49.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:44:49.495" level="INFO">100</msg>
<status status="PASS" starttime="20210908 01:44:49.494" endtime="20210908 01:44:49.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:44:49.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:44:49.495" endtime="20210908 01:44:49.496"/>
</kw>
<status status="PASS" starttime="20210908 01:44:43.500" endtime="20210908 01:44:49.496"/>
</kw>
<msg timestamp="20210908 01:44:49.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:44:43.499" endtime="20210908 01:44:49.496"/>
</kw>
<msg timestamp="20210908 01:44:49.497" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210908 01:44:43.497" endtime="20210908 01:44:49.497"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:44:49.497" endtime="20210908 01:44:49.498"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:44:49.502" level="INFO">Running command 'ozone sh bucket setquota o3:///11228-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:44:57.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:44:57.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:44:49.500" endtime="20210908 01:44:57.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:44:57.465" level="INFO"/>
<status status="PASS" starttime="20210908 01:44:57.464" endtime="20210908 01:44:57.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:44:57.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:44:57.466" endtime="20210908 01:44:57.467"/>
</kw>
<status status="PASS" starttime="20210908 01:44:49.499" endtime="20210908 01:44:57.468"/>
</kw>
<msg timestamp="20210908 01:44:57.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:44:49.499" endtime="20210908 01:44:57.469"/>
</kw>
<status status="PASS" starttime="20210908 01:44:49.498" endtime="20210908 01:44:57.469"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:44:57.492" level="INFO">Running command 'ozone sh bucket info o3:///11228-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:45:03.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:45:03.537" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210908 01:44:57.479" endtime="20210908 01:45:03.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:45:03.540" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210908 01:45:03.538" endtime="20210908 01:45:03.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:45:03.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:45:03.541" endtime="20210908 01:45:03.542"/>
</kw>
<status status="PASS" starttime="20210908 01:44:57.475" endtime="20210908 01:45:03.543"/>
</kw>
<msg timestamp="20210908 01:45:03.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:44:57.473" endtime="20210908 01:45:03.543"/>
</kw>
<msg timestamp="20210908 01:45:03.544" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210908 01:44:57.470" endtime="20210908 01:45:03.544"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:45:03.544" endtime="20210908 01:45:03.546"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:45:03.554" level="INFO">Running command 'ozone sh bucket info o3:///11228-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:45:10.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:45:10.743" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210908 01:45:03.551" endtime="20210908 01:45:10.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:45:10.745" level="INFO">1000</msg>
<status status="PASS" starttime="20210908 01:45:10.743" endtime="20210908 01:45:10.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:45:10.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:45:10.745" endtime="20210908 01:45:10.746"/>
</kw>
<status status="PASS" starttime="20210908 01:45:03.549" endtime="20210908 01:45:10.746"/>
</kw>
<msg timestamp="20210908 01:45:10.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:45:03.548" endtime="20210908 01:45:10.746"/>
</kw>
<msg timestamp="20210908 01:45:10.746" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210908 01:45:03.546" endtime="20210908 01:45:10.747"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:45:10.747" endtime="20210908 01:45:10.747"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:45:10.753" level="INFO">Running command 'ozone sh bucket list o3:///11228-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:45:19.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:45:19.030" level="INFO">${output} = 11228-rpcwport</msg>
<status status="PASS" starttime="20210908 01:45:10.749" endtime="20210908 01:45:19.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:45:19.033" level="INFO">11228-rpcwport</msg>
<status status="PASS" starttime="20210908 01:45:19.031" endtime="20210908 01:45:19.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:45:19.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:45:19.033" endtime="20210908 01:45:19.034"/>
</kw>
<status status="PASS" starttime="20210908 01:45:10.749" endtime="20210908 01:45:19.035"/>
</kw>
<msg timestamp="20210908 01:45:19.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:45:10.748" endtime="20210908 01:45:19.036"/>
</kw>
<msg timestamp="20210908 01:45:19.036" level="INFO">${result} = 11228-rpcwport</msg>
<status status="PASS" starttime="20210908 01:45:10.747" endtime="20210908 01:45:19.037"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:45:19.037" endtime="20210908 01:45:19.038"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:45:19.044" level="INFO">Running command 'ozone sh key put o3:///11228-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:48:31.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:48:31.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:45:19.042" endtime="20210908 01:48:31.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:48:31.348" level="INFO"/>
<status status="PASS" starttime="20210908 01:48:31.347" endtime="20210908 01:48:31.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:48:31.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:48:31.348" endtime="20210908 01:48:31.349"/>
</kw>
<status status="PASS" starttime="20210908 01:45:19.042" endtime="20210908 01:48:31.349"/>
</kw>
<msg timestamp="20210908 01:48:31.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:45:19.041" endtime="20210908 01:48:31.350"/>
</kw>
<status status="PASS" starttime="20210908 01:45:19.041" endtime="20210908 01:48:31.350"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:48:31.355" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:48:31.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:48:31.359" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:48:31.352" endtime="20210908 01:48:31.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:48:31.361" level="INFO"/>
<status status="PASS" starttime="20210908 01:48:31.360" endtime="20210908 01:48:31.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:48:31.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:48:31.361" endtime="20210908 01:48:31.362"/>
</kw>
<status status="PASS" starttime="20210908 01:48:31.351" endtime="20210908 01:48:31.362"/>
</kw>
<msg timestamp="20210908 01:48:31.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:48:31.351" endtime="20210908 01:48:31.363"/>
</kw>
<status status="PASS" starttime="20210908 01:48:31.350" endtime="20210908 01:48:31.363"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:48:31.369" level="INFO">Running command 'ozone sh key get o3:///11228-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:48:35.345" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210908 01:48:31.367" endtime="20210908 01:48:35.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.346" endtime="20210908 01:48:35.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.346" endtime="20210908 01:48:35.346"/>
</kw>
<status status="FAIL" starttime="20210908 01:48:31.366" endtime="20210908 01:48:35.347"/>
</kw>
<msg timestamp="20210908 01:48:35.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210908 01:48:31.365" endtime="20210908 01:48:35.347"/>
</kw>
<status status="FAIL" starttime="20210908 01:48:31.363" endtime="20210908 01:48:35.347"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.348" endtime="20210908 01:48:35.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.348" endtime="20210908 01:48:35.348"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.348" endtime="20210908 01:48:35.348"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.348" endtime="20210908 01:48:35.348"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.349" endtime="20210908 01:48:35.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.349" endtime="20210908 01:48:35.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.350" endtime="20210908 01:48:35.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.350" endtime="20210908 01:48:35.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.350" endtime="20210908 01:48:35.351"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.351" endtime="20210908 01:48:35.351"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.351" endtime="20210908 01:48:35.351"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.352" endtime="20210908 01:48:35.352"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.353" endtime="20210908 01:48:35.353"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.353" endtime="20210908 01:48:35.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.354" endtime="20210908 01:48:35.354"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.354" endtime="20210908 01:48:35.356"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.356" endtime="20210908 01:48:35.356"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.356" endtime="20210908 01:48:35.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.358" endtime="20210908 01:48:35.358"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.358" endtime="20210908 01:48:35.358"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.362" endtime="20210908 01:48:35.362"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.362" endtime="20210908 01:48:35.363"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.363" endtime="20210908 01:48:35.367"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.367" endtime="20210908 01:48:35.367"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.367" endtime="20210908 01:48:35.367"/>
</kw>
<status status="FAIL" starttime="20210908 01:45:19.039" endtime="20210908 01:48:35.367"/>
</kw>
<status status="FAIL" starttime="20210908 01:45:19.038" endtime="20210908 01:48:35.368"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.368" endtime="20210908 01:48:35.368"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.368" endtime="20210908 01:48:35.369"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.369" endtime="20210908 01:48:35.375"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.375" endtime="20210908 01:48:35.375"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.375" endtime="20210908 01:48:35.376"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.376" endtime="20210908 01:48:35.376"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.376" endtime="20210908 01:48:35.376"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.376" endtime="20210908 01:48:35.376"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.376" endtime="20210908 01:48:35.376"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.377" endtime="20210908 01:48:35.377"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.377" endtime="20210908 01:48:35.377"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.377" endtime="20210908 01:48:35.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.377" endtime="20210908 01:48:35.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.386" endtime="20210908 01:48:35.386"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.386" endtime="20210908 01:48:35.386"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.386" endtime="20210908 01:48:35.386"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.386" endtime="20210908 01:48:35.386"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.387" endtime="20210908 01:48:35.387"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.387" endtime="20210908 01:48:35.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.389" endtime="20210908 01:48:35.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.389" endtime="20210908 01:48:35.389"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.389" endtime="20210908 01:48:35.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.389" endtime="20210908 01:48:35.389"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:48:35.393" endtime="20210908 01:48:35.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.393" endtime="20210908 01:48:35.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:48:35.393" endtime="20210908 01:48:35.393"/>
</kw>
<status status="FAIL" starttime="20210908 01:43:35.382" endtime="20210908 01:48:35.394"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210908 01:43:35.343" endtime="20210908 01:48:35.394">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:48:35.423" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:48:35.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:48:35.439" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:48:35.419" endtime="20210908 01:48:35.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:48:35.441" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:48:35.440" endtime="20210908 01:48:35.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:48:35.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:48:35.442" endtime="20210908 01:48:35.442"/>
</kw>
<status status="PASS" starttime="20210908 01:48:35.417" endtime="20210908 01:48:35.443"/>
</kw>
<msg timestamp="20210908 01:48:35.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:48:35.415" endtime="20210908 01:48:35.443"/>
</kw>
<msg timestamp="20210908 01:48:35.443" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:48:35.410" endtime="20210908 01:48:35.443"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:48:35.445" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:48:35.444" endtime="20210908 01:48:35.445"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:48:35.465" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:48:35.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:48:35.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:48:35.455" endtime="20210908 01:48:35.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:48:35.684" level="INFO"/>
<status status="PASS" starttime="20210908 01:48:35.683" endtime="20210908 01:48:35.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:48:35.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:48:35.686" endtime="20210908 01:48:35.688"/>
</kw>
<status status="PASS" starttime="20210908 01:48:35.451" endtime="20210908 01:48:35.688"/>
</kw>
<msg timestamp="20210908 01:48:35.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:48:35.451" endtime="20210908 01:48:35.690"/>
</kw>
<status status="PASS" starttime="20210908 01:48:35.446" endtime="20210908 01:48:35.691"/>
</kw>
<status status="PASS" starttime="20210908 01:48:35.445" endtime="20210908 01:48:35.691"/>
</kw>
<status status="PASS" starttime="20210908 01:48:35.409" endtime="20210908 01:48:35.692"/>
</kw>
<status status="PASS" starttime="20210908 01:48:35.407" endtime="20210908 01:48:35.692"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:48:35.731" level="INFO">Running command 'ozone sh volume info /11228-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:48:50.500" level="INFO">${rc} = 255</msg>
<msg timestamp="20210908 01:48:50.500" level="INFO">${output} = VOLUME_NOT_FOUND Volume 11228-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210908 01:48:35.703" endtime="20210908 01:48:50.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:48:50.502" level="INFO">VOLUME_NOT_FOUND Volume 11228-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210908 01:48:50.501" endtime="20210908 01:48:50.502"/>
</kw>
<msg timestamp="20210908 01:48:50.502" level="INFO">${result} = VOLUME_NOT_FOUND Volume 11228-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210908 01:48:35.701" endtime="20210908 01:48:50.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:48:50.503" endtime="20210908 01:48:50.503"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:48:50.509" level="INFO">Running command 'ozone sh volume create /11228-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:48:58.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:48:58.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:48:50.506" endtime="20210908 01:48:58.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:48:58.213" level="INFO"/>
<status status="PASS" starttime="20210908 01:48:58.212" endtime="20210908 01:48:58.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:48:58.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:48:58.214" endtime="20210908 01:48:58.215"/>
</kw>
<status status="PASS" starttime="20210908 01:48:50.505" endtime="20210908 01:48:58.216"/>
</kw>
<msg timestamp="20210908 01:48:58.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:48:50.505" endtime="20210908 01:48:58.217"/>
</kw>
<msg timestamp="20210908 01:48:58.217" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210908 01:48:50.503" endtime="20210908 01:48:58.218"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:48:58.218" endtime="20210908 01:48:58.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:48:58.228" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="11228-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:49:06.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:49:06.452" level="INFO">${output} = {
  "metadata": {},
  "name": "11228-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210908 01:48:58.223" endtime="20210908 01:49:06.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:49:06.453" level="INFO">{
  "metadata": {},
  "name": "11228-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-08T01:48:58.066Z",
  "modificationTime": "2021-09-08T01:48:58.066Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210908 01:49:06.453" endtime="20210908 01:49:06.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:49:06.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:49:06.454" endtime="20210908 01:49:06.454"/>
</kw>
<status status="PASS" starttime="20210908 01:48:58.222" endtime="20210908 01:49:06.455"/>
</kw>
<msg timestamp="20210908 01:49:06.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:48:58.221" endtime="20210908 01:49:06.455"/>
</kw>
<msg timestamp="20210908 01:49:06.455" level="INFO">${result} = {
  "metadata": {},
  "name": "11228-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210908 01:48:58.219" endtime="20210908 01:49:06.456"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:49:06.456" endtime="20210908 01:49:06.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:49:06.465" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="11228-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:49:14.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:49:14.701" level="INFO">${output} = {
  "metadata": {},
  "name": "11228-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210908 01:49:06.460" endtime="20210908 01:49:14.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:49:14.702" level="INFO">{
  "metadata": {},
  "name": "11228-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-08T01:48:58.066Z",
  "modificationTime": "2021-09-08T01:48:58.066Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210908 01:49:14.701" endtime="20210908 01:49:14.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:49:14.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:49:14.702" endtime="20210908 01:49:14.703"/>
</kw>
<status status="PASS" starttime="20210908 01:49:06.459" endtime="20210908 01:49:14.704"/>
</kw>
<msg timestamp="20210908 01:49:14.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:49:06.458" endtime="20210908 01:49:14.704"/>
</kw>
<msg timestamp="20210908 01:49:14.704" level="INFO">${result} = {
  "metadata": {},
  "name": "11228-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210908 01:49:06.456" endtime="20210908 01:49:14.704"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210908 01:49:14.705" endtime="20210908 01:49:14.705"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:49:14.712" level="INFO">Running command 'ozone sh volume setquota /11228-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:49:22.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:49:22.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:49:14.707" endtime="20210908 01:49:22.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:49:22.625" level="INFO"/>
<status status="PASS" starttime="20210908 01:49:22.623" endtime="20210908 01:49:22.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:49:22.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:49:22.625" endtime="20210908 01:49:22.625"/>
</kw>
<status status="PASS" starttime="20210908 01:49:14.707" endtime="20210908 01:49:22.626"/>
</kw>
<msg timestamp="20210908 01:49:22.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:49:14.706" endtime="20210908 01:49:22.626"/>
</kw>
<status status="PASS" starttime="20210908 01:49:14.705" endtime="20210908 01:49:22.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:49:22.634" level="INFO">Running command 'ozone sh volume info /11228-rpcwoscheme | jq -r '. | select(.name=="11228-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:49:30.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:49:30.851" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:49:22.631" endtime="20210908 01:49:30.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:49:30.853" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210908 01:49:30.852" endtime="20210908 01:49:30.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:49:30.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:49:30.853" endtime="20210908 01:49:30.854"/>
</kw>
<status status="PASS" starttime="20210908 01:49:22.631" endtime="20210908 01:49:30.854"/>
</kw>
<msg timestamp="20210908 01:49:30.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:49:22.630" endtime="20210908 01:49:30.855"/>
</kw>
<msg timestamp="20210908 01:49:30.855" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:49:22.628" endtime="20210908 01:49:30.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:49:30.855" endtime="20210908 01:49:30.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:49:30.860" level="INFO">Running command 'ozone sh bucket create /11228-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:49:37.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:49:37.971" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:49:30.858" endtime="20210908 01:49:37.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:49:37.972" level="INFO"/>
<status status="PASS" starttime="20210908 01:49:37.971" endtime="20210908 01:49:37.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:49:37.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:49:37.972" endtime="20210908 01:49:37.973"/>
</kw>
<status status="PASS" starttime="20210908 01:49:30.857" endtime="20210908 01:49:37.974"/>
</kw>
<msg timestamp="20210908 01:49:37.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:49:30.857" endtime="20210908 01:49:37.974"/>
</kw>
<status status="PASS" starttime="20210908 01:49:30.856" endtime="20210908 01:49:37.975"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:49:37.979" level="INFO">Running command 'ozone sh bucket info /11228-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:49:45.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:49:45.966" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210908 01:49:37.977" endtime="20210908 01:49:45.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:49:45.968" level="INFO">DISK</msg>
<status status="PASS" starttime="20210908 01:49:45.967" endtime="20210908 01:49:45.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:49:45.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:49:45.968" endtime="20210908 01:49:45.968"/>
</kw>
<status status="PASS" starttime="20210908 01:49:37.976" endtime="20210908 01:49:45.969"/>
</kw>
<msg timestamp="20210908 01:49:45.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:49:37.976" endtime="20210908 01:49:45.969"/>
</kw>
<msg timestamp="20210908 01:49:45.969" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210908 01:49:37.975" endtime="20210908 01:49:45.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:49:45.970" endtime="20210908 01:49:45.970"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:49:45.976" level="INFO">Running command 'ozone sh bucket info /11228-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:49:53.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:49:53.610" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:49:45.973" endtime="20210908 01:49:53.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:49:53.613" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210908 01:49:53.611" endtime="20210908 01:49:53.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:49:53.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:49:53.614" endtime="20210908 01:49:53.615"/>
</kw>
<status status="PASS" starttime="20210908 01:49:45.972" endtime="20210908 01:49:53.616"/>
</kw>
<msg timestamp="20210908 01:49:53.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:49:45.972" endtime="20210908 01:49:53.616"/>
</kw>
<msg timestamp="20210908 01:49:53.617" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210908 01:49:45.970" endtime="20210908 01:49:53.617"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:49:53.618" endtime="20210908 01:49:53.618"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:49:53.623" level="INFO">Running command 'ozone sh bucket info /11228-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:50:01.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:50:01.464" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210908 01:49:53.621" endtime="20210908 01:50:01.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:50:01.466" level="INFO">100</msg>
<status status="PASS" starttime="20210908 01:50:01.465" endtime="20210908 01:50:01.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:50:01.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:50:01.466" endtime="20210908 01:50:01.467"/>
</kw>
<status status="PASS" starttime="20210908 01:49:53.620" endtime="20210908 01:50:01.467"/>
</kw>
<msg timestamp="20210908 01:50:01.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:49:53.620" endtime="20210908 01:50:01.468"/>
</kw>
<msg timestamp="20210908 01:50:01.468" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210908 01:49:53.619" endtime="20210908 01:50:01.468"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:50:01.468" endtime="20210908 01:50:01.469"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:50:01.475" level="INFO">Running command 'ozone sh bucket setquota /11228-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:50:08.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:50:08.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:50:01.472" endtime="20210908 01:50:08.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:50:08.407" level="INFO"/>
<status status="PASS" starttime="20210908 01:50:08.405" endtime="20210908 01:50:08.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:50:08.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:50:08.408" endtime="20210908 01:50:08.410"/>
</kw>
<status status="PASS" starttime="20210908 01:50:01.471" endtime="20210908 01:50:08.410"/>
</kw>
<msg timestamp="20210908 01:50:08.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:50:01.470" endtime="20210908 01:50:08.411"/>
</kw>
<status status="PASS" starttime="20210908 01:50:01.469" endtime="20210908 01:50:08.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:50:08.418" level="INFO">Running command 'ozone sh bucket info /11228-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:50:16.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:50:16.375" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210908 01:50:08.415" endtime="20210908 01:50:16.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:50:16.376" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210908 01:50:16.375" endtime="20210908 01:50:16.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:50:16.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:50:16.376" endtime="20210908 01:50:16.377"/>
</kw>
<status status="PASS" starttime="20210908 01:50:08.414" endtime="20210908 01:50:16.377"/>
</kw>
<msg timestamp="20210908 01:50:16.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:50:08.413" endtime="20210908 01:50:16.378"/>
</kw>
<msg timestamp="20210908 01:50:16.378" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210908 01:50:08.411" endtime="20210908 01:50:16.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:50:16.378" endtime="20210908 01:50:16.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:50:16.386" level="INFO">Running command 'ozone sh bucket info /11228-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:50:24.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:50:24.359" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210908 01:50:16.383" endtime="20210908 01:50:24.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:50:24.362" level="INFO">1000</msg>
<status status="PASS" starttime="20210908 01:50:24.361" endtime="20210908 01:50:24.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:50:24.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:50:24.363" endtime="20210908 01:50:24.364"/>
</kw>
<status status="PASS" starttime="20210908 01:50:16.382" endtime="20210908 01:50:24.364"/>
</kw>
<msg timestamp="20210908 01:50:24.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:50:16.382" endtime="20210908 01:50:24.365"/>
</kw>
<msg timestamp="20210908 01:50:24.365" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210908 01:50:16.380" endtime="20210908 01:50:24.365"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:50:24.365" endtime="20210908 01:50:24.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:50:24.374" level="INFO">Running command 'ozone sh bucket list /11228-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:50:32.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:50:32.792" level="INFO">${output} = 11228-rpcwoscheme</msg>
<status status="PASS" starttime="20210908 01:50:24.371" endtime="20210908 01:50:32.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:50:32.794" level="INFO">11228-rpcwoscheme</msg>
<status status="PASS" starttime="20210908 01:50:32.793" endtime="20210908 01:50:32.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:50:32.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:50:32.794" endtime="20210908 01:50:32.797"/>
</kw>
<status status="PASS" starttime="20210908 01:50:24.370" endtime="20210908 01:50:32.797"/>
</kw>
<msg timestamp="20210908 01:50:32.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:50:24.369" endtime="20210908 01:50:32.798"/>
</kw>
<msg timestamp="20210908 01:50:32.799" level="INFO">${result} = 11228-rpcwoscheme</msg>
<status status="PASS" starttime="20210908 01:50:24.367" endtime="20210908 01:50:32.799"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210908 01:50:32.799" endtime="20210908 01:50:32.801"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:50:32.811" level="INFO">Running command 'ozone sh key put /11228-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:53:35.400" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210908 01:50:32.807" endtime="20210908 01:53:35.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.401" endtime="20210908 01:53:35.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.401" endtime="20210908 01:53:35.402"/>
</kw>
<status status="FAIL" starttime="20210908 01:50:32.804" endtime="20210908 01:53:35.402"/>
</kw>
<msg timestamp="20210908 01:53:35.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210908 01:50:32.804" endtime="20210908 01:53:35.403"/>
</kw>
<status status="FAIL" starttime="20210908 01:50:32.803" endtime="20210908 01:53:35.403"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.403" endtime="20210908 01:53:35.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.403" endtime="20210908 01:53:35.404"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.404" endtime="20210908 01:53:35.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.404" endtime="20210908 01:53:35.404"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.404" endtime="20210908 01:53:35.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.404" endtime="20210908 01:53:35.404"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.404" endtime="20210908 01:53:35.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.405" endtime="20210908 01:53:35.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.405" endtime="20210908 01:53:35.405"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.405" endtime="20210908 01:53:35.405"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.405" endtime="20210908 01:53:35.406"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.406" endtime="20210908 01:53:35.406"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.406" endtime="20210908 01:53:35.406"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.406" endtime="20210908 01:53:35.406"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.406" endtime="20210908 01:53:35.407"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.407" endtime="20210908 01:53:35.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.407" endtime="20210908 01:53:35.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.407" endtime="20210908 01:53:35.407"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.407" endtime="20210908 01:53:35.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.408" endtime="20210908 01:53:35.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.408" endtime="20210908 01:53:35.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.408" endtime="20210908 01:53:35.408"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.408" endtime="20210908 01:53:35.408"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.408" endtime="20210908 01:53:35.409"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.409" endtime="20210908 01:53:35.409"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.409" endtime="20210908 01:53:35.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.409" endtime="20210908 01:53:35.409"/>
</kw>
<status status="FAIL" starttime="20210908 01:50:32.802" endtime="20210908 01:53:35.409"/>
</kw>
<status status="FAIL" starttime="20210908 01:50:32.801" endtime="20210908 01:53:35.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.410" endtime="20210908 01:53:35.410"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.410" endtime="20210908 01:53:35.410"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.410" endtime="20210908 01:53:35.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.410" endtime="20210908 01:53:35.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.411" endtime="20210908 01:53:35.411"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.411" endtime="20210908 01:53:35.412"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.412" endtime="20210908 01:53:35.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.412" endtime="20210908 01:53:35.412"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.412" endtime="20210908 01:53:35.413"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.413" endtime="20210908 01:53:35.413"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.413" endtime="20210908 01:53:35.413"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.413" endtime="20210908 01:53:35.413"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.414" endtime="20210908 01:53:35.414"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.414" endtime="20210908 01:53:35.414"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.414" endtime="20210908 01:53:35.414"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.414" endtime="20210908 01:53:35.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.415" endtime="20210908 01:53:35.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.415" endtime="20210908 01:53:35.415"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.415" endtime="20210908 01:53:35.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.416" endtime="20210908 01:53:35.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.416" endtime="20210908 01:53:35.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.416" endtime="20210908 01:53:35.416"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.416" endtime="20210908 01:53:35.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210908 01:53:35.417" endtime="20210908 01:53:35.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.417" endtime="20210908 01:53:35.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210908 01:53:35.417" endtime="20210908 01:53:35.417"/>
</kw>
<status status="FAIL" starttime="20210908 01:48:35.692" endtime="20210908 01:53:35.418"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210908 01:48:35.399" endtime="20210908 01:53:35.418">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210908 01:28:30.430" endtime="20210908 01:53:35.420"/>
</suite>
<status status="FAIL" starttime="20210908 01:04:11.131" endtime="20210908 01:53:35.428"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:04:06.076" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:04:06.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:04:06.081" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210908 01:04:06.072" endtime="20210908 01:04:06.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:04:06.082" level="INFO">scm</msg>
<status status="PASS" starttime="20210908 01:04:06.081" endtime="20210908 01:04:06.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:04:06.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:04:06.082" endtime="20210908 01:04:06.083"/>
</kw>
<status status="PASS" starttime="20210908 01:04:06.071" endtime="20210908 01:04:06.083"/>
</kw>
<msg timestamp="20210908 01:04:06.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:04:06.071" endtime="20210908 01:04:06.083"/>
</kw>
<msg timestamp="20210908 01:04:06.083" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210908 01:04:06.071" endtime="20210908 01:04:06.083"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210908 01:04:06.084" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210908 01:04:06.084" endtime="20210908 01:04:06.084"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210908 01:04:06.089" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210908 01:04:06.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210908 01:04:06.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210908 01:04:06.087" endtime="20210908 01:04:06.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210908 01:04:06.097" level="INFO"/>
<status status="PASS" starttime="20210908 01:04:06.096" endtime="20210908 01:04:06.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210908 01:04:06.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210908 01:04:06.097" endtime="20210908 01:04:06.098"/>
</kw>
<status status="PASS" starttime="20210908 01:04:06.086" endtime="20210908 01:04:06.098"/>
</kw>
<msg timestamp="20210908 01:04:06.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210908 01:04:06.086" endtime="20210908 01:04:06.098"/>
</kw>
<status status="PASS" starttime="20210908 01:04:06.085" endtime="20210908 01:04:06.098"/>
</kw>
<status status="PASS" starttime="20210908 01:04:06.084" endtime="20210908 01:04:06.099"/>
</kw>
<status status="PASS" starttime="20210908 01:04:06.069" endtime="20210908 01:04:06.099"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210908 01:04:06.069" endtime="20210908 01:04:06.099"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210908 01:04:06.009" endtime="20210908 01:04:06.100"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2964388"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
