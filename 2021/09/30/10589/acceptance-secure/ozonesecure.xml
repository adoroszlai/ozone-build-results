<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20210930 15:23:33.408" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:33:03.227" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:33:03.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:33:03.231" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:33:03.223" endtime="20210930 14:33:03.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:33:03.232" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:33:03.231" endtime="20210930 14:33:03.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:33:03.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:33:03.233" endtime="20210930 14:33:03.233"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.222" endtime="20210930 14:33:03.234"/>
</kw>
<msg timestamp="20210930 14:33:03.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:33:03.222" endtime="20210930 14:33:03.234"/>
</kw>
<msg timestamp="20210930 14:33:03.234" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210930 14:33:03.221" endtime="20210930 14:33:03.234"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:33:03.238" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:33:03.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:33:03.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:33:03.237" endtime="20210930 14:33:03.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:33:03.248" level="INFO"/>
<status status="PASS" starttime="20210930 14:33:03.248" endtime="20210930 14:33:03.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:33:03.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:33:03.249" endtime="20210930 14:33:03.250"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.236" endtime="20210930 14:33:03.250"/>
</kw>
<msg timestamp="20210930 14:33:03.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:33:03.236" endtime="20210930 14:33:03.250"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.235" endtime="20210930 14:33:03.250"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.234" endtime="20210930 14:33:03.251"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.221" endtime="20210930 14:33:03.251"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.220" endtime="20210930 14:33:03.251"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:33:03.255" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:33:03.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:33:03.504" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210930 14:33:03.253" endtime="20210930 14:33:03.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:33:03.506" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 30 Sep 2021 14:33:03 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCgsF0ReW8ZqOKb7tbYCSm+IuDyEQbGNtLtNMcheFiVuLUetFphy9kux3bwbpBzr9u+9NtMWW4ZaNIvThhs8uTK80k
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1633048383489&amp;s=RULPH89YbyCD9fb7bsjDWE4kWwXcB/zJTuF563RZodk="; Path=/; HttpOnly
Last-Modified: Thu, 30 Sep 2021 14:16:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210930 14:33:03.505" endtime="20210930 14:33:03.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:33:03.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:33:03.507" endtime="20210930 14:33:03.509"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.252" endtime="20210930 14:33:03.509"/>
</kw>
<msg timestamp="20210930 14:33:03.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:33:03.252" endtime="20210930 14:33:03.510"/>
</kw>
<msg timestamp="20210930 14:33:03.510" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210930 14:33:03.251" endtime="20210930 14:33:03.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:33:03.511" endtime="20210930 14:33:03.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210930 14:33:03.219" endtime="20210930 14:33:03.511"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:33:03.518" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:33:03.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:33:03.522" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:33:03.516" endtime="20210930 14:33:03.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:33:03.523" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:33:03.522" endtime="20210930 14:33:03.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:33:03.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:33:03.524" endtime="20210930 14:33:03.524"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.515" endtime="20210930 14:33:03.525"/>
</kw>
<msg timestamp="20210930 14:33:03.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:33:03.515" endtime="20210930 14:33:03.525"/>
</kw>
<msg timestamp="20210930 14:33:03.525" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:33:03.514" endtime="20210930 14:33:03.525"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:33:03.528" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:33:03.526" endtime="20210930 14:33:03.528"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:33:03.532" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:33:03.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:33:03.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:33:03.530" endtime="20210930 14:33:03.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:33:03.542" level="INFO"/>
<status status="PASS" starttime="20210930 14:33:03.542" endtime="20210930 14:33:03.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:33:03.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:33:03.543" endtime="20210930 14:33:03.543"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.530" endtime="20210930 14:33:03.544"/>
</kw>
<msg timestamp="20210930 14:33:03.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:33:03.529" endtime="20210930 14:33:03.544"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.529" endtime="20210930 14:33:03.544"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.528" endtime="20210930 14:33:03.544"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.514" endtime="20210930 14:33:03.544"/>
</kw>
<status status="PASS" starttime="20210930 14:33:03.513" endtime="20210930 14:33:03.545"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:33:03.550" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:03.513" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210930 14:33:03.547" endtime="20210930 14:38:03.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210930 14:38:03.514" endtime="20210930 14:38:03.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210930 14:38:03.514" endtime="20210930 14:38:03.514"/>
</kw>
<status status="FAIL" starttime="20210930 14:33:03.546" endtime="20210930 14:38:03.515"/>
</kw>
<msg timestamp="20210930 14:38:03.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210930 14:33:03.545" endtime="20210930 14:38:03.515"/>
</kw>
<status status="FAIL" starttime="20210930 14:33:03.545" endtime="20210930 14:38:03.515"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210930 14:38:03.516" endtime="20210930 14:38:03.516"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 14:38:03.516" endtime="20210930 14:38:03.516"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210930 14:33:03.512" endtime="20210930 14:38:03.516">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210930 14:33:03.186" endtime="20210930 14:38:03.518"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:03.535" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:06.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:38:06.608" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210930 14:38:03.531" endtime="20210930 14:38:06.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:06.611" level="INFO">om</msg>
<status status="PASS" starttime="20210930 14:38:06.609" endtime="20210930 14:38:06.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:06.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:06.611" endtime="20210930 14:38:06.613"/>
</kw>
<status status="PASS" starttime="20210930 14:38:03.530" endtime="20210930 14:38:06.614"/>
</kw>
<msg timestamp="20210930 14:38:06.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:38:03.530" endtime="20210930 14:38:06.615"/>
</kw>
<msg timestamp="20210930 14:38:06.615" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210930 14:38:03.528" endtime="20210930 14:38:06.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:38:06.616" endtime="20210930 14:38:06.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:06.624" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:09.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:38:09.845" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210930 14:38:06.620" endtime="20210930 14:38:09.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:09.846" level="INFO">om</msg>
<status status="PASS" starttime="20210930 14:38:09.845" endtime="20210930 14:38:09.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:09.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:09.846" endtime="20210930 14:38:09.847"/>
</kw>
<status status="PASS" starttime="20210930 14:38:06.619" endtime="20210930 14:38:09.848"/>
</kw>
<msg timestamp="20210930 14:38:09.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:38:06.618" endtime="20210930 14:38:09.848"/>
</kw>
<msg timestamp="20210930 14:38:09.848" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210930 14:38:06.617" endtime="20210930 14:38:09.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:38:09.848" endtime="20210930 14:38:09.849"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210930 14:38:03.527" endtime="20210930 14:38:09.849"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:09.857" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:11.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:38:11.454" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:38:09.854" endtime="20210930 14:38:11.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:11.456" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:38:11.455" endtime="20210930 14:38:11.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:11.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:11.456" endtime="20210930 14:38:11.457"/>
</kw>
<status status="PASS" starttime="20210930 14:38:09.853" endtime="20210930 14:38:11.457"/>
</kw>
<msg timestamp="20210930 14:38:11.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:38:09.853" endtime="20210930 14:38:11.457"/>
</kw>
<msg timestamp="20210930 14:38:11.458" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210930 14:38:09.851" endtime="20210930 14:38:11.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:38:11.458" endtime="20210930 14:38:11.459"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:11.462" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:14.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:38:14.048" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:38:11.460" endtime="20210930 14:38:14.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:14.050" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:38:14.049" endtime="20210930 14:38:14.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:14.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:14.050" endtime="20210930 14:38:14.051"/>
</kw>
<status status="PASS" starttime="20210930 14:38:11.460" endtime="20210930 14:38:14.051"/>
</kw>
<msg timestamp="20210930 14:38:14.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:38:11.459" endtime="20210930 14:38:14.051"/>
</kw>
<msg timestamp="20210930 14:38:14.051" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210930 14:38:11.459" endtime="20210930 14:38:14.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:38:14.052" endtime="20210930 14:38:14.052"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210930 14:38:09.850" endtime="20210930 14:38:14.052"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:14.063" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:16.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:38:16.964" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210930 14:38:14.060" endtime="20210930 14:38:16.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:16.966" level="INFO">om</msg>
<status status="PASS" starttime="20210930 14:38:16.965" endtime="20210930 14:38:16.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:16.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:16.966" endtime="20210930 14:38:16.967"/>
</kw>
<status status="PASS" starttime="20210930 14:38:14.056" endtime="20210930 14:38:16.968"/>
</kw>
<msg timestamp="20210930 14:38:16.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:38:14.056" endtime="20210930 14:38:16.968"/>
</kw>
<msg timestamp="20210930 14:38:16.968" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210930 14:38:14.055" endtime="20210930 14:38:16.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:38:16.968" endtime="20210930 14:38:16.969"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:38:16.969" endtime="20210930 14:38:16.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:16.975" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:19.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:38:19.772" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210930 14:38:16.971" endtime="20210930 14:38:19.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:19.773" level="INFO">om</msg>
<status status="PASS" starttime="20210930 14:38:19.772" endtime="20210930 14:38:19.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:19.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:19.774" endtime="20210930 14:38:19.775"/>
</kw>
<status status="PASS" starttime="20210930 14:38:16.970" endtime="20210930 14:38:19.775"/>
</kw>
<msg timestamp="20210930 14:38:19.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:38:16.970" endtime="20210930 14:38:19.775"/>
</kw>
<msg timestamp="20210930 14:38:19.776" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210930 14:38:16.970" endtime="20210930 14:38:19.776"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:38:19.776" endtime="20210930 14:38:19.776"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:38:19.777" endtime="20210930 14:38:19.777"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210930 14:38:14.053" endtime="20210930 14:38:19.777"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:19.786" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:22.492" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:38:22.492" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210930 14:38:19.782" endtime="20210930 14:38:22.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:22.493" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210930 14:38:22.492" endtime="20210930 14:38:22.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:22.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:22.493" endtime="20210930 14:38:22.494"/>
</kw>
<msg timestamp="20210930 14:38:22.494" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210930 14:38:19.781" endtime="20210930 14:38:22.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:38:22.495" endtime="20210930 14:38:22.495"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:22.498" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:25.374" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:38:25.374" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210930 14:38:22.496" endtime="20210930 14:38:25.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:25.376" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210930 14:38:25.375" endtime="20210930 14:38:25.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:25.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:25.376" endtime="20210930 14:38:25.377"/>
</kw>
<msg timestamp="20210930 14:38:25.377" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210930 14:38:22.495" endtime="20210930 14:38:25.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:38:25.377" endtime="20210930 14:38:25.378"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210930 14:38:19.779" endtime="20210930 14:38:25.378"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210930 14:38:03.521" endtime="20210930 14:38:25.380"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210930 14:38:25.408" level="INFO">${random} = 46452</msg>
<status status="PASS" starttime="20210930 14:38:25.408" endtime="20210930 14:38:25.409"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:38:25.411" level="INFO">${source} = 46452-source</msg>
<status status="PASS" starttime="20210930 14:38:25.409" endtime="20210930 14:38:25.411"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:38:25.414" level="INFO">${target} = 46452-target</msg>
<status status="PASS" starttime="20210930 14:38:25.412" endtime="20210930 14:38:25.414"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:25.419" level="INFO">Running command 'ozone sh volume create 46452-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:33.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:38:33.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:38:25.416" endtime="20210930 14:38:33.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:33.393" level="INFO"/>
<status status="PASS" starttime="20210930 14:38:33.392" endtime="20210930 14:38:33.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:33.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:33.393" endtime="20210930 14:38:33.394"/>
</kw>
<status status="PASS" starttime="20210930 14:38:25.415" endtime="20210930 14:38:33.394"/>
</kw>
<msg timestamp="20210930 14:38:33.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:38:25.415" endtime="20210930 14:38:33.395"/>
</kw>
<status status="PASS" starttime="20210930 14:38:25.414" endtime="20210930 14:38:33.395"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:33.400" level="INFO">Running command 'ozone sh volume create 46452-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:39.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:38:39.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:38:33.397" endtime="20210930 14:38:39.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:39.693" level="INFO"/>
<status status="PASS" starttime="20210930 14:38:39.692" endtime="20210930 14:38:39.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:39.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:39.698" endtime="20210930 14:38:39.698"/>
</kw>
<status status="PASS" starttime="20210930 14:38:33.397" endtime="20210930 14:38:39.700"/>
</kw>
<msg timestamp="20210930 14:38:39.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:38:33.396" endtime="20210930 14:38:39.703"/>
</kw>
<status status="PASS" starttime="20210930 14:38:33.395" endtime="20210930 14:38:39.704"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:39.715" level="INFO">Running command 'ozone sh bucket create 46452-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:38:47.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:38:47.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:38:39.712" endtime="20210930 14:38:47.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:38:47.776" level="INFO"/>
<status status="PASS" starttime="20210930 14:38:47.774" endtime="20210930 14:38:47.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:38:47.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:38:47.777" endtime="20210930 14:38:47.778"/>
</kw>
<status status="PASS" starttime="20210930 14:38:39.711" endtime="20210930 14:38:47.779"/>
</kw>
<msg timestamp="20210930 14:38:47.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:38:39.706" endtime="20210930 14:38:47.779"/>
</kw>
<status status="PASS" starttime="20210930 14:38:39.705" endtime="20210930 14:38:47.780"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:38:47.787" level="INFO">Running command 'ozone sh key put 46452-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:41:59.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:41:59.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:38:47.784" endtime="20210930 14:41:59.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:41:59.698" level="INFO"/>
<status status="PASS" starttime="20210930 14:41:59.696" endtime="20210930 14:41:59.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:41:59.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:41:59.698" endtime="20210930 14:41:59.699"/>
</kw>
<status status="PASS" starttime="20210930 14:38:47.783" endtime="20210930 14:41:59.700"/>
</kw>
<msg timestamp="20210930 14:41:59.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:38:47.782" endtime="20210930 14:41:59.701"/>
</kw>
<status status="PASS" starttime="20210930 14:38:47.780" endtime="20210930 14:41:59.701"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:41:59.709" level="INFO">Running command 'ozone sh bucket create 46452-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:42:08.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:42:08.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:41:59.705" endtime="20210930 14:42:08.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:42:08.045" level="INFO"/>
<status status="PASS" starttime="20210930 14:42:08.045" endtime="20210930 14:42:08.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:42:08.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:42:08.046" endtime="20210930 14:42:08.046"/>
</kw>
<status status="PASS" starttime="20210930 14:41:59.704" endtime="20210930 14:42:08.047"/>
</kw>
<msg timestamp="20210930 14:42:08.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:41:59.703" endtime="20210930 14:42:08.048"/>
</kw>
<status status="PASS" starttime="20210930 14:41:59.702" endtime="20210930 14:42:08.048"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:42:08.053" level="INFO">Running command 'ozone sh bucket link 46452-source/readable-bucket 46452-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:42:15.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:42:15.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:42:08.050" endtime="20210930 14:42:15.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:42:15.909" level="INFO"/>
<status status="PASS" starttime="20210930 14:42:15.908" endtime="20210930 14:42:15.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:42:15.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:42:15.909" endtime="20210930 14:42:15.910"/>
</kw>
<status status="PASS" starttime="20210930 14:42:08.050" endtime="20210930 14:42:15.910"/>
</kw>
<msg timestamp="20210930 14:42:15.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:42:08.049" endtime="20210930 14:42:15.911"/>
</kw>
<status status="PASS" starttime="20210930 14:42:08.048" endtime="20210930 14:42:15.911"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:42:15.918" level="INFO">Running command 'ozone sh bucket link 46452-source/readable-bucket 46452-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:42:23.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:42:23.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:42:15.915" endtime="20210930 14:42:23.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:42:23.791" level="INFO"/>
<status status="PASS" starttime="20210930 14:42:23.790" endtime="20210930 14:42:23.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:42:23.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:42:23.791" endtime="20210930 14:42:23.792"/>
</kw>
<status status="PASS" starttime="20210930 14:42:15.914" endtime="20210930 14:42:23.792"/>
</kw>
<msg timestamp="20210930 14:42:23.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:42:15.913" endtime="20210930 14:42:23.793"/>
</kw>
<status status="PASS" starttime="20210930 14:42:15.911" endtime="20210930 14:42:23.793"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:42:23.799" level="INFO">Running command 'ozone sh bucket link 46452-source/unreadable-bucket 46452-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:42:31.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:42:31.571" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:42:23.796" endtime="20210930 14:42:31.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:42:31.573" level="INFO"/>
<status status="PASS" starttime="20210930 14:42:31.572" endtime="20210930 14:42:31.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:42:31.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:42:31.573" endtime="20210930 14:42:31.574"/>
</kw>
<status status="PASS" starttime="20210930 14:42:23.795" endtime="20210930 14:42:31.574"/>
</kw>
<msg timestamp="20210930 14:42:31.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:42:23.794" endtime="20210930 14:42:31.574"/>
</kw>
<status status="PASS" starttime="20210930 14:42:23.793" endtime="20210930 14:42:31.575"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:42:31.581" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 46452-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:42:39.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:42:39.553" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:42:31.578" endtime="20210930 14:42:39.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:42:39.554" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:42:39.553" endtime="20210930 14:42:39.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:42:39.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:42:39.554" endtime="20210930 14:42:39.555"/>
</kw>
<status status="PASS" starttime="20210930 14:42:31.577" endtime="20210930 14:42:39.556"/>
</kw>
<msg timestamp="20210930 14:42:39.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:42:31.576" endtime="20210930 14:42:39.556"/>
</kw>
<status status="PASS" starttime="20210930 14:42:31.575" endtime="20210930 14:42:39.556"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:42:39.560" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 46452-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:42:48.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:42:48.072" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:42:39.558" endtime="20210930 14:42:48.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:42:48.073" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:42:48.073" endtime="20210930 14:42:48.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:42:48.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:42:48.074" endtime="20210930 14:42:48.074"/>
</kw>
<status status="PASS" starttime="20210930 14:42:39.557" endtime="20210930 14:42:48.075"/>
</kw>
<msg timestamp="20210930 14:42:48.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:42:39.557" endtime="20210930 14:42:48.075"/>
</kw>
<status status="PASS" starttime="20210930 14:42:39.556" endtime="20210930 14:42:48.075"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:42:48.081" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 46452-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:42:55.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:42:55.835" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:42:48.078" endtime="20210930 14:42:55.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:42:55.837" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:42:55.836" endtime="20210930 14:42:55.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:42:55.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:42:55.837" endtime="20210930 14:42:55.837"/>
</kw>
<status status="PASS" starttime="20210930 14:42:48.077" endtime="20210930 14:42:55.838"/>
</kw>
<msg timestamp="20210930 14:42:55.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:42:48.076" endtime="20210930 14:42:55.838"/>
</kw>
<status status="PASS" starttime="20210930 14:42:48.075" endtime="20210930 14:42:55.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:42:55.844" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 46452-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:43:04.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:43:04.376" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:42:55.841" endtime="20210930 14:43:04.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:43:04.377" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:43:04.377" endtime="20210930 14:43:04.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:43:04.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:43:04.378" endtime="20210930 14:43:04.378"/>
</kw>
<status status="PASS" starttime="20210930 14:42:55.840" endtime="20210930 14:43:04.379"/>
</kw>
<msg timestamp="20210930 14:43:04.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:42:55.839" endtime="20210930 14:43:04.379"/>
</kw>
<status status="PASS" starttime="20210930 14:42:55.838" endtime="20210930 14:43:04.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:43:04.384" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 46452-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:43:11.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:43:11.988" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:43:04.381" endtime="20210930 14:43:11.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:43:11.990" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:43:11.989" endtime="20210930 14:43:11.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:43:11.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:43:11.990" endtime="20210930 14:43:11.991"/>
</kw>
<status status="PASS" starttime="20210930 14:43:04.381" endtime="20210930 14:43:11.991"/>
</kw>
<msg timestamp="20210930 14:43:11.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:43:04.380" endtime="20210930 14:43:11.991"/>
</kw>
<status status="PASS" starttime="20210930 14:43:04.380" endtime="20210930 14:43:11.991"/>
</kw>
<status status="PASS" starttime="20210930 14:38:39.704" endtime="20210930 14:43:11.992"/>
</kw>
<status status="PASS" starttime="20210930 14:38:39.704" endtime="20210930 14:43:11.992"/>
</kw>
<status status="PASS" starttime="20210930 14:38:25.407" endtime="20210930 14:43:11.992"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:43:11.998" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:43:12.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:43:12.003" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:43:11.996" endtime="20210930 14:43:12.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:43:12.004" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:43:12.003" endtime="20210930 14:43:12.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:43:12.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:43:12.005" endtime="20210930 14:43:12.006"/>
</kw>
<status status="PASS" starttime="20210930 14:43:11.996" endtime="20210930 14:43:12.006"/>
</kw>
<msg timestamp="20210930 14:43:12.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:43:11.995" endtime="20210930 14:43:12.006"/>
</kw>
<msg timestamp="20210930 14:43:12.006" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:43:11.995" endtime="20210930 14:43:12.007"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:43:12.011" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:43:12.007" endtime="20210930 14:43:12.011"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:43:12.022" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:43:12.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:43:12.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:43:12.020" endtime="20210930 14:43:12.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:43:12.091" level="INFO"/>
<status status="PASS" starttime="20210930 14:43:12.090" endtime="20210930 14:43:12.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:43:12.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:43:12.091" endtime="20210930 14:43:12.092"/>
</kw>
<status status="PASS" starttime="20210930 14:43:12.019" endtime="20210930 14:43:12.092"/>
</kw>
<msg timestamp="20210930 14:43:12.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:43:12.019" endtime="20210930 14:43:12.093"/>
</kw>
<status status="PASS" starttime="20210930 14:43:12.016" endtime="20210930 14:43:12.093"/>
</kw>
<status status="PASS" starttime="20210930 14:43:12.012" endtime="20210930 14:43:12.093"/>
</kw>
<status status="PASS" starttime="20210930 14:43:11.994" endtime="20210930 14:43:12.093"/>
</kw>
<status status="PASS" starttime="20210930 14:43:11.993" endtime="20210930 14:43:12.093"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:43:12.098" level="INFO">Running command 'ozone sh bucket link 46452-source/no-such-bucket 46452-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:43:18.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:43:18.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:43:12.095" endtime="20210930 14:43:18.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:43:18.523" level="INFO"/>
<status status="PASS" starttime="20210930 14:43:18.522" endtime="20210930 14:43:18.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:43:18.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:43:18.524" endtime="20210930 14:43:18.524"/>
</kw>
<status status="PASS" starttime="20210930 14:43:12.095" endtime="20210930 14:43:18.525"/>
</kw>
<msg timestamp="20210930 14:43:18.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:43:12.094" endtime="20210930 14:43:18.525"/>
</kw>
<status status="PASS" starttime="20210930 14:43:12.094" endtime="20210930 14:43:18.525"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:43:18.529" level="INFO">Running command 'ozone sh key list 46452-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:43:26.173" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:43:26.173" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210930 14:43:18.526" endtime="20210930 14:43:26.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:43:26.175" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210930 14:43:26.174" endtime="20210930 14:43:26.175"/>
</kw>
<msg timestamp="20210930 14:43:26.176" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210930 14:43:18.525" endtime="20210930 14:43:26.176"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:43:26.176" endtime="20210930 14:43:26.177"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:43:11.992" endtime="20210930 14:43:26.178"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:43:26.189" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:43:26.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:43:26.194" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:43:26.184" endtime="20210930 14:43:26.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:43:26.197" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:43:26.195" endtime="20210930 14:43:26.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:43:26.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:43:26.197" endtime="20210930 14:43:26.198"/>
</kw>
<status status="PASS" starttime="20210930 14:43:26.184" endtime="20210930 14:43:26.199"/>
</kw>
<msg timestamp="20210930 14:43:26.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:43:26.183" endtime="20210930 14:43:26.199"/>
</kw>
<msg timestamp="20210930 14:43:26.200" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:43:26.182" endtime="20210930 14:43:26.200"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:43:26.201" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:43:26.200" endtime="20210930 14:43:26.201"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:43:26.208" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:43:26.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:43:26.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:43:26.205" endtime="20210930 14:43:26.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:43:26.220" level="INFO"/>
<status status="PASS" starttime="20210930 14:43:26.219" endtime="20210930 14:43:26.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:43:26.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:43:26.221" endtime="20210930 14:43:26.222"/>
</kw>
<status status="PASS" starttime="20210930 14:43:26.204" endtime="20210930 14:43:26.222"/>
</kw>
<msg timestamp="20210930 14:43:26.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:43:26.203" endtime="20210930 14:43:26.222"/>
</kw>
<status status="PASS" starttime="20210930 14:43:26.202" endtime="20210930 14:43:26.223"/>
</kw>
<status status="PASS" starttime="20210930 14:43:26.201" endtime="20210930 14:43:26.223"/>
</kw>
<status status="PASS" starttime="20210930 14:43:26.180" endtime="20210930 14:43:26.223"/>
</kw>
<status status="PASS" starttime="20210930 14:43:26.180" endtime="20210930 14:43:26.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:43:26.229" level="INFO">Running command 'ozone sh bucket link 46452-source/bucket1 46452-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:43:35.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:43:35.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:43:26.225" endtime="20210930 14:43:35.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:43:35.061" level="INFO"/>
<status status="PASS" starttime="20210930 14:43:35.059" endtime="20210930 14:43:35.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:43:35.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:43:35.062" endtime="20210930 14:43:35.064"/>
</kw>
<status status="PASS" starttime="20210930 14:43:26.225" endtime="20210930 14:43:35.065"/>
</kw>
<msg timestamp="20210930 14:43:35.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:43:26.224" endtime="20210930 14:43:35.065"/>
</kw>
<status status="PASS" starttime="20210930 14:43:26.223" endtime="20210930 14:43:35.066"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:43:35.073" level="INFO">Running command 'ozone sh bucket create 46452-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:43:43.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:43:43.690" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:43:35.070" endtime="20210930 14:43:43.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:43:43.692" level="INFO"/>
<status status="PASS" starttime="20210930 14:43:43.691" endtime="20210930 14:43:43.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:43:43.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:43:43.692" endtime="20210930 14:43:43.693"/>
</kw>
<status status="PASS" starttime="20210930 14:43:35.069" endtime="20210930 14:43:43.693"/>
</kw>
<msg timestamp="20210930 14:43:43.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:43:35.068" endtime="20210930 14:43:43.693"/>
</kw>
<status status="PASS" starttime="20210930 14:43:35.066" endtime="20210930 14:43:43.693"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:43:43.698" level="INFO">Running command 'ozone sh key put 46452-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:45:26.179" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210930 14:43:43.695" endtime="20210930 14:45:26.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210930 14:45:26.181" endtime="20210930 14:45:26.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210930 14:45:26.181" endtime="20210930 14:45:26.181"/>
</kw>
<status status="FAIL" starttime="20210930 14:43:43.695" endtime="20210930 14:45:26.181"/>
</kw>
<msg timestamp="20210930 14:45:26.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210930 14:43:43.694" endtime="20210930 14:45:26.182"/>
</kw>
<status status="FAIL" starttime="20210930 14:43:43.694" endtime="20210930 14:45:26.182"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210930 14:45:26.182" endtime="20210930 14:45:26.182"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210930 14:43:26.178" endtime="20210930 14:45:26.182">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:45:26.190" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:45:26.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:45:26.194" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:45:26.188" endtime="20210930 14:45:26.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:45:26.196" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:45:26.195" endtime="20210930 14:45:26.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:45:26.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:45:26.197" endtime="20210930 14:45:26.198"/>
</kw>
<status status="PASS" starttime="20210930 14:45:26.186" endtime="20210930 14:45:26.199"/>
</kw>
<msg timestamp="20210930 14:45:26.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:45:26.186" endtime="20210930 14:45:26.199"/>
</kw>
<msg timestamp="20210930 14:45:26.199" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:45:26.186" endtime="20210930 14:45:26.199"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:45:26.201" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:45:26.200" endtime="20210930 14:45:26.201"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:45:26.207" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:45:26.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:45:26.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:45:26.204" endtime="20210930 14:45:26.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:45:26.219" level="INFO"/>
<status status="PASS" starttime="20210930 14:45:26.216" endtime="20210930 14:45:26.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:45:26.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:45:26.219" endtime="20210930 14:45:26.220"/>
</kw>
<status status="PASS" starttime="20210930 14:45:26.203" endtime="20210930 14:45:26.220"/>
</kw>
<msg timestamp="20210930 14:45:26.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:45:26.203" endtime="20210930 14:45:26.221"/>
</kw>
<status status="PASS" starttime="20210930 14:45:26.202" endtime="20210930 14:45:26.221"/>
</kw>
<status status="PASS" starttime="20210930 14:45:26.201" endtime="20210930 14:45:26.221"/>
</kw>
<status status="PASS" starttime="20210930 14:45:26.185" endtime="20210930 14:45:26.221"/>
</kw>
<status status="PASS" starttime="20210930 14:45:26.184" endtime="20210930 14:45:26.221"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:45:26.226" level="INFO">Running command 'ozone sh key put 46452-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:26.184" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210930 14:45:26.223" endtime="20210930 14:47:26.184"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210930 14:47:26.186" endtime="20210930 14:47:26.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210930 14:47:26.186" endtime="20210930 14:47:26.186"/>
</kw>
<status status="FAIL" starttime="20210930 14:45:26.222" endtime="20210930 14:47:26.186"/>
</kw>
<msg timestamp="20210930 14:47:26.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210930 14:45:26.222" endtime="20210930 14:47:26.187"/>
</kw>
<status status="FAIL" starttime="20210930 14:45:26.221" endtime="20210930 14:47:26.187"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210930 14:47:26.187" endtime="20210930 14:47:26.187"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210930 14:45:26.183" endtime="20210930 14:47:26.187">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:26.196" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:26.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:26.201" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:47:26.193" endtime="20210930 14:47:26.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:26.204" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:47:26.202" endtime="20210930 14:47:26.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:26.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:26.204" endtime="20210930 14:47:26.205"/>
</kw>
<status status="PASS" starttime="20210930 14:47:26.192" endtime="20210930 14:47:26.206"/>
</kw>
<msg timestamp="20210930 14:47:26.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:26.191" endtime="20210930 14:47:26.206"/>
</kw>
<msg timestamp="20210930 14:47:26.207" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:47:26.190" endtime="20210930 14:47:26.207"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:47:26.208" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:47:26.207" endtime="20210930 14:47:26.208"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:26.215" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:26.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:26.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:47:26.212" endtime="20210930 14:47:26.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:26.229" level="INFO"/>
<status status="PASS" starttime="20210930 14:47:26.227" endtime="20210930 14:47:26.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:26.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:26.229" endtime="20210930 14:47:26.230"/>
</kw>
<status status="PASS" starttime="20210930 14:47:26.211" endtime="20210930 14:47:26.231"/>
</kw>
<msg timestamp="20210930 14:47:26.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:26.210" endtime="20210930 14:47:26.231"/>
</kw>
<status status="PASS" starttime="20210930 14:47:26.209" endtime="20210930 14:47:26.231"/>
</kw>
<status status="PASS" starttime="20210930 14:47:26.209" endtime="20210930 14:47:26.232"/>
</kw>
<status status="PASS" starttime="20210930 14:47:26.190" endtime="20210930 14:47:26.232"/>
</kw>
<status status="PASS" starttime="20210930 14:47:26.189" endtime="20210930 14:47:26.232"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:26.237" level="INFO">Running command 'ozone sh key list 46452-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:34.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:34.928" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210930 14:47:26.234" endtime="20210930 14:47:34.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:34.932" level="INFO">key1</msg>
<status status="PASS" starttime="20210930 14:47:34.930" endtime="20210930 14:47:34.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:34.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:34.933" endtime="20210930 14:47:34.936"/>
</kw>
<status status="PASS" starttime="20210930 14:47:26.234" endtime="20210930 14:47:34.937"/>
</kw>
<msg timestamp="20210930 14:47:34.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:26.233" endtime="20210930 14:47:34.937"/>
</kw>
<msg timestamp="20210930 14:47:34.938" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210930 14:47:26.233" endtime="20210930 14:47:34.938"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:34.947" level="INFO">Running command 'ozone sh key list 46452-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:43.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:43.528" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210930 14:47:34.943" endtime="20210930 14:47:43.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:43.530" level="INFO">key1</msg>
<status status="PASS" starttime="20210930 14:47:43.529" endtime="20210930 14:47:43.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:43.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:43.530" endtime="20210930 14:47:43.531"/>
</kw>
<status status="PASS" starttime="20210930 14:47:34.941" endtime="20210930 14:47:43.531"/>
</kw>
<msg timestamp="20210930 14:47:43.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:34.940" endtime="20210930 14:47:43.532"/>
</kw>
<msg timestamp="20210930 14:47:43.532" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210930 14:47:34.938" endtime="20210930 14:47:43.532"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:47:43.532" endtime="20210930 14:47:43.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:47:43.533" endtime="20210930 14:47:43.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210930 14:47:43.534" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210930 14:47:43.534" endtime="20210930 14:47:43.534"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210930 14:47:26.188" endtime="20210930 14:47:43.535">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:43.545" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:43.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:43.550" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:47:43.542" endtime="20210930 14:47:43.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:43.553" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:47:43.551" endtime="20210930 14:47:43.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:43.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:43.553" endtime="20210930 14:47:43.555"/>
</kw>
<status status="PASS" starttime="20210930 14:47:43.541" endtime="20210930 14:47:43.555"/>
</kw>
<msg timestamp="20210930 14:47:43.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:43.540" endtime="20210930 14:47:43.555"/>
</kw>
<msg timestamp="20210930 14:47:43.556" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:47:43.539" endtime="20210930 14:47:43.556"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:47:43.557" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:47:43.556" endtime="20210930 14:47:43.557"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:43.581" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:43.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:43.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:47:43.576" endtime="20210930 14:47:43.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:43.593" level="INFO"/>
<status status="PASS" starttime="20210930 14:47:43.592" endtime="20210930 14:47:43.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:43.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:43.594" endtime="20210930 14:47:43.594"/>
</kw>
<status status="PASS" starttime="20210930 14:47:43.569" endtime="20210930 14:47:43.595"/>
</kw>
<msg timestamp="20210930 14:47:43.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:43.569" endtime="20210930 14:47:43.595"/>
</kw>
<status status="PASS" starttime="20210930 14:47:43.558" endtime="20210930 14:47:43.595"/>
</kw>
<status status="PASS" starttime="20210930 14:47:43.557" endtime="20210930 14:47:43.596"/>
</kw>
<status status="PASS" starttime="20210930 14:47:43.538" endtime="20210930 14:47:43.596"/>
</kw>
<status status="PASS" starttime="20210930 14:47:43.537" endtime="20210930 14:47:43.596"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:43.600" level="INFO">Running command 'ozone sh key delete 46452-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:51.783" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:47:51.783" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210930 14:47:43.598" endtime="20210930 14:47:51.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:51.784" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210930 14:47:51.783" endtime="20210930 14:47:51.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:51.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210930 14:47:51.785" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210930 14:47:51.784" endtime="20210930 14:47:51.785"/>
</kw>
<status status="FAIL" starttime="20210930 14:47:43.597" endtime="20210930 14:47:51.786"/>
</kw>
<msg timestamp="20210930 14:47:51.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210930 14:47:43.597" endtime="20210930 14:47:51.786"/>
</kw>
<status status="FAIL" starttime="20210930 14:47:43.596" endtime="20210930 14:47:51.786"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210930 14:47:51.786" endtime="20210930 14:47:51.786"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 14:47:51.787" endtime="20210930 14:47:51.787"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210930 14:47:43.536" endtime="20210930 14:47:51.787">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:51.802" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:51.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:51.809" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:47:51.799" endtime="20210930 14:47:51.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:51.812" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:47:51.810" endtime="20210930 14:47:51.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:51.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:51.812" endtime="20210930 14:47:51.813"/>
</kw>
<status status="PASS" starttime="20210930 14:47:51.798" endtime="20210930 14:47:51.813"/>
</kw>
<msg timestamp="20210930 14:47:51.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:51.794" endtime="20210930 14:47:51.814"/>
</kw>
<msg timestamp="20210930 14:47:51.814" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:47:51.793" endtime="20210930 14:47:51.814"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:47:51.815" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:47:51.814" endtime="20210930 14:47:51.816"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:51.823" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:51.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:51.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:47:51.819" endtime="20210930 14:47:51.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:51.836" level="INFO"/>
<status status="PASS" starttime="20210930 14:47:51.835" endtime="20210930 14:47:51.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:51.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:51.837" endtime="20210930 14:47:51.838"/>
</kw>
<status status="PASS" starttime="20210930 14:47:51.818" endtime="20210930 14:47:51.838"/>
</kw>
<msg timestamp="20210930 14:47:51.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:51.818" endtime="20210930 14:47:51.839"/>
</kw>
<status status="PASS" starttime="20210930 14:47:51.816" endtime="20210930 14:47:51.841"/>
</kw>
<status status="PASS" starttime="20210930 14:47:51.816" endtime="20210930 14:47:51.841"/>
</kw>
<status status="PASS" starttime="20210930 14:47:51.792" endtime="20210930 14:47:51.841"/>
</kw>
<status status="PASS" starttime="20210930 14:47:51.791" endtime="20210930 14:47:51.841"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:51.848" level="INFO">Running command 'ozone sh bucket list 46452-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:59.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:59.442" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210930 14:47:51.845" endtime="20210930 14:47:59.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:59.444" level="INFO">{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:43:18.432Z",
  "modificationTime" : "2021-09-30T14:43:18.432Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:42:31.483Z",
  "modificationTime" : "2021-09-30T14:43:11.911Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:43:34.742Z",
  "modificationTime" : "2021-09-30T14:43:34.742Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:42:15.681Z",
  "modificationTime" : "2021-09-30T14:43:04.096Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:42:23.694Z",
  "modificationTime" : "2021-09-30T14:42:23.694Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210930 14:47:59.443" endtime="20210930 14:47:59.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:59.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:59.444" endtime="20210930 14:47:59.445"/>
</kw>
<status status="PASS" starttime="20210930 14:47:51.844" endtime="20210930 14:47:59.445"/>
</kw>
<msg timestamp="20210930 14:47:59.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:51.843" endtime="20210930 14:47:59.445"/>
</kw>
<msg timestamp="20210930 14:47:59.446" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210930 14:47:51.842" endtime="20210930 14:47:59.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:47:59.446" endtime="20210930 14:47:59.446"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:47:59.447" endtime="20210930 14:47:59.447"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:47:51.789" endtime="20210930 14:47:59.448"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:59.454" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:59.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:59.457" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:47:59.452" endtime="20210930 14:47:59.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:59.458" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:47:59.458" endtime="20210930 14:47:59.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:59.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:59.459" endtime="20210930 14:47:59.459"/>
</kw>
<status status="PASS" starttime="20210930 14:47:59.451" endtime="20210930 14:47:59.460"/>
</kw>
<msg timestamp="20210930 14:47:59.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:59.451" endtime="20210930 14:47:59.460"/>
</kw>
<msg timestamp="20210930 14:47:59.460" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:47:59.450" endtime="20210930 14:47:59.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:47:59.461" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:47:59.460" endtime="20210930 14:47:59.461"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:59.465" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:47:59.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:47:59.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:47:59.463" endtime="20210930 14:47:59.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:47:59.473" level="INFO"/>
<status status="PASS" starttime="20210930 14:47:59.473" endtime="20210930 14:47:59.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:47:59.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:47:59.473" endtime="20210930 14:47:59.474"/>
</kw>
<status status="PASS" starttime="20210930 14:47:59.463" endtime="20210930 14:47:59.474"/>
</kw>
<msg timestamp="20210930 14:47:59.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:59.462" endtime="20210930 14:47:59.474"/>
</kw>
<status status="PASS" starttime="20210930 14:47:59.462" endtime="20210930 14:47:59.475"/>
</kw>
<status status="PASS" starttime="20210930 14:47:59.461" endtime="20210930 14:47:59.475"/>
</kw>
<status status="PASS" starttime="20210930 14:47:59.450" endtime="20210930 14:47:59.475"/>
</kw>
<status status="PASS" starttime="20210930 14:47:59.449" endtime="20210930 14:47:59.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:47:59.480" level="INFO">Running command 'ozone sh bucket info 46452-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:06.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:06.952" level="INFO">${output} = {
  "volumeName" : "46452-target",
  "bucketName" : "link1",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-30T14:43:34.742Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210930 14:47:59.477" endtime="20210930 14:48:06.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:06.954" level="INFO">{
  "volumeName" : "46452-target",
  "bucketName" : "link1",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-30T14:43:34.742Z",
  "modificationTime" : "2021-09-30T14:43:34.742Z"
}</msg>
<status status="PASS" starttime="20210930 14:48:06.953" endtime="20210930 14:48:06.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:06.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:06.956" endtime="20210930 14:48:06.957"/>
</kw>
<status status="PASS" starttime="20210930 14:47:59.477" endtime="20210930 14:48:06.957"/>
</kw>
<msg timestamp="20210930 14:48:06.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:47:59.476" endtime="20210930 14:48:06.958"/>
</kw>
<msg timestamp="20210930 14:48:06.958" level="INFO">${result} = {
  "volumeName" : "46452-target",
  "bucketName" : "link1",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-30T14:43:34.742Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210930 14:47:59.475" endtime="20210930 14:48:06.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:48:06.959" endtime="20210930 14:48:06.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:48:06.960" endtime="20210930 14:48:06.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:48:06.962" endtime="20210930 14:48:06.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:48:06.963" endtime="20210930 14:48:06.964"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:48:06.965" endtime="20210930 14:48:06.965"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:48:06.966" endtime="20210930 14:48:06.967"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:48:06.967" endtime="20210930 14:48:06.968"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:47:59.448" endtime="20210930 14:48:06.969"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:06.981" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:06.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:06.985" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:48:06.977" endtime="20210930 14:48:06.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:06.987" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:48:06.986" endtime="20210930 14:48:06.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:06.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:06.987" endtime="20210930 14:48:06.989"/>
</kw>
<status status="PASS" starttime="20210930 14:48:06.976" endtime="20210930 14:48:06.989"/>
</kw>
<msg timestamp="20210930 14:48:06.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:06.975" endtime="20210930 14:48:06.990"/>
</kw>
<msg timestamp="20210930 14:48:06.991" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:48:06.975" endtime="20210930 14:48:06.991"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:48:06.992" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:48:06.991" endtime="20210930 14:48:06.992"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:06.999" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:07.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:07.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:48:06.997" endtime="20210930 14:48:07.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:07.013" level="INFO"/>
<status status="PASS" starttime="20210930 14:48:07.012" endtime="20210930 14:48:07.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:07.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:07.013" endtime="20210930 14:48:07.014"/>
</kw>
<status status="PASS" starttime="20210930 14:48:06.996" endtime="20210930 14:48:07.015"/>
</kw>
<msg timestamp="20210930 14:48:07.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:06.995" endtime="20210930 14:48:07.015"/>
</kw>
<status status="PASS" starttime="20210930 14:48:06.993" endtime="20210930 14:48:07.016"/>
</kw>
<status status="PASS" starttime="20210930 14:48:06.993" endtime="20210930 14:48:07.016"/>
</kw>
<status status="PASS" starttime="20210930 14:48:06.973" endtime="20210930 14:48:07.016"/>
</kw>
<status status="PASS" starttime="20210930 14:48:06.972" endtime="20210930 14:48:07.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:07.022" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 46452-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:15.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:15.096" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:48:07.019" endtime="20210930 14:48:15.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:15.098" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:48:15.097" endtime="20210930 14:48:15.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:15.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:15.099" endtime="20210930 14:48:15.101"/>
</kw>
<status status="PASS" starttime="20210930 14:48:07.018" endtime="20210930 14:48:15.101"/>
</kw>
<msg timestamp="20210930 14:48:15.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:07.018" endtime="20210930 14:48:15.102"/>
</kw>
<status status="PASS" starttime="20210930 14:48:07.017" endtime="20210930 14:48:15.103"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:15.113" level="INFO">Running command 'ozone sh bucket getacl 46452-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:23.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:23.469" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210930 14:48:15.109" endtime="20210930 14:48:23.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:23.471" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210930 14:48:23.470" endtime="20210930 14:48:23.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:23.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:23.472" endtime="20210930 14:48:23.474"/>
</kw>
<status status="PASS" starttime="20210930 14:48:15.108" endtime="20210930 14:48:23.475"/>
</kw>
<msg timestamp="20210930 14:48:23.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:15.107" endtime="20210930 14:48:23.475"/>
</kw>
<msg timestamp="20210930 14:48:23.476" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210930 14:48:15.105" endtime="20210930 14:48:23.476"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:48:23.476" endtime="20210930 14:48:23.477"/>
</kw>
<status status="PASS" starttime="20210930 14:48:15.104" endtime="20210930 14:48:23.478"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:23.488" level="INFO">Running command 'ozone sh bucket getacl 46452-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:31.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:31.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:48:23.486" endtime="20210930 14:48:31.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:31.490" level="INFO"/>
<status status="PASS" starttime="20210930 14:48:31.488" endtime="20210930 14:48:31.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:31.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:31.491" endtime="20210930 14:48:31.491"/>
</kw>
<status status="PASS" starttime="20210930 14:48:23.485" endtime="20210930 14:48:31.492"/>
</kw>
<msg timestamp="20210930 14:48:31.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:23.484" endtime="20210930 14:48:31.492"/>
</kw>
<msg timestamp="20210930 14:48:31.492" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210930 14:48:23.482" endtime="20210930 14:48:31.492"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:48:31.493" endtime="20210930 14:48:31.493"/>
</kw>
<status status="PASS" starttime="20210930 14:48:23.479" endtime="20210930 14:48:31.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:31.498" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 46452-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:38.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:38.608" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:48:31.496" endtime="20210930 14:48:38.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:38.610" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 14:48:38.609" endtime="20210930 14:48:38.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:38.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:38.610" endtime="20210930 14:48:38.611"/>
</kw>
<status status="PASS" starttime="20210930 14:48:31.495" endtime="20210930 14:48:38.612"/>
</kw>
<msg timestamp="20210930 14:48:38.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:31.494" endtime="20210930 14:48:38.612"/>
</kw>
<status status="PASS" starttime="20210930 14:48:31.494" endtime="20210930 14:48:38.613"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:38.625" level="INFO">Running command 'ozone sh bucket getacl 46452-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:47.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:47.050" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:48:38.621" endtime="20210930 14:48:47.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:47.053" level="INFO"/>
<status status="PASS" starttime="20210930 14:48:47.052" endtime="20210930 14:48:47.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:47.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:47.054" endtime="20210930 14:48:47.054"/>
</kw>
<status status="PASS" starttime="20210930 14:48:38.620" endtime="20210930 14:48:47.055"/>
</kw>
<msg timestamp="20210930 14:48:47.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:38.619" endtime="20210930 14:48:47.055"/>
</kw>
<msg timestamp="20210930 14:48:47.056" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210930 14:48:38.617" endtime="20210930 14:48:47.056"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:48:47.056" endtime="20210930 14:48:47.057"/>
</kw>
<status status="PASS" starttime="20210930 14:48:38.613" endtime="20210930 14:48:47.057"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:47.066" level="INFO">Running command 'ozone sh bucket getacl 46452-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:55.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:55.708" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210930 14:48:47.062" endtime="20210930 14:48:55.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:55.710" level="INFO">READ</msg>
<status status="PASS" starttime="20210930 14:48:55.709" endtime="20210930 14:48:55.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:55.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:55.710" endtime="20210930 14:48:55.711"/>
</kw>
<status status="PASS" starttime="20210930 14:48:47.061" endtime="20210930 14:48:55.711"/>
</kw>
<msg timestamp="20210930 14:48:55.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:47.061" endtime="20210930 14:48:55.711"/>
</kw>
<msg timestamp="20210930 14:48:55.712" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210930 14:48:47.059" endtime="20210930 14:48:55.712"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:48:55.712" endtime="20210930 14:48:55.714"/>
</kw>
<status status="PASS" starttime="20210930 14:48:47.058" endtime="20210930 14:48:55.714"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:48:06.970" endtime="20210930 14:48:55.714"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:55.727" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:55.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:55.732" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:48:55.724" endtime="20210930 14:48:55.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:55.734" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:48:55.732" endtime="20210930 14:48:55.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:55.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:55.734" endtime="20210930 14:48:55.736"/>
</kw>
<status status="PASS" starttime="20210930 14:48:55.722" endtime="20210930 14:48:55.736"/>
</kw>
<msg timestamp="20210930 14:48:55.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:55.721" endtime="20210930 14:48:55.737"/>
</kw>
<msg timestamp="20210930 14:48:55.737" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:48:55.720" endtime="20210930 14:48:55.737"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:48:55.739" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:48:55.738" endtime="20210930 14:48:55.739"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:55.746" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:48:55.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:48:55.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:48:55.743" endtime="20210930 14:48:55.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:48:55.807" level="INFO"/>
<status status="PASS" starttime="20210930 14:48:55.806" endtime="20210930 14:48:55.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:48:55.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:48:55.811" endtime="20210930 14:48:55.815"/>
</kw>
<status status="PASS" starttime="20210930 14:48:55.742" endtime="20210930 14:48:55.815"/>
</kw>
<msg timestamp="20210930 14:48:55.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:55.741" endtime="20210930 14:48:55.815"/>
</kw>
<status status="PASS" starttime="20210930 14:48:55.740" endtime="20210930 14:48:55.816"/>
</kw>
<status status="PASS" starttime="20210930 14:48:55.739" endtime="20210930 14:48:55.816"/>
</kw>
<status status="PASS" starttime="20210930 14:48:55.719" endtime="20210930 14:48:55.816"/>
</kw>
<status status="PASS" starttime="20210930 14:48:55.718" endtime="20210930 14:48:55.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:48:55.826" level="INFO">Running command 'ozone sh bucket link 46452-source/bucket2 46452-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:03.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:03.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:48:55.821" endtime="20210930 14:49:03.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:03.457" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:03.456" endtime="20210930 14:49:03.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:03.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:03.458" endtime="20210930 14:49:03.459"/>
</kw>
<status status="PASS" starttime="20210930 14:48:55.819" endtime="20210930 14:49:03.460"/>
</kw>
<msg timestamp="20210930 14:49:03.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:48:55.819" endtime="20210930 14:49:03.460"/>
</kw>
<status status="PASS" starttime="20210930 14:48:55.817" endtime="20210930 14:49:03.460"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:03.465" level="INFO">Running command 'ozone sh bucket create 46452-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:11.406" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:49:11.406" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210930 14:49:03.461" endtime="20210930 14:49:11.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:11.408" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210930 14:49:11.407" endtime="20210930 14:49:11.408"/>
</kw>
<msg timestamp="20210930 14:49:11.409" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210930 14:49:03.460" endtime="20210930 14:49:11.409"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:49:11.409" endtime="20210930 14:49:11.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:11.420" level="INFO">Running command 'ozone sh bucket create 46452-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:19.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:19.460" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:49:11.412" endtime="20210930 14:49:19.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:19.463" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:19.462" endtime="20210930 14:49:19.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:19.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:19.464" endtime="20210930 14:49:19.466"/>
</kw>
<status status="PASS" starttime="20210930 14:49:11.411" endtime="20210930 14:49:19.466"/>
</kw>
<msg timestamp="20210930 14:49:19.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:11.411" endtime="20210930 14:49:19.467"/>
</kw>
<status status="PASS" starttime="20210930 14:49:11.410" endtime="20210930 14:49:19.467"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:19.472" level="INFO">Running command 'ozone sh bucket link 46452-source/bucket1 46452-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:27.133" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:49:27.133" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210930 14:49:19.469" endtime="20210930 14:49:27.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:27.136" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210930 14:49:27.134" endtime="20210930 14:49:27.136"/>
</kw>
<msg timestamp="20210930 14:49:27.137" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210930 14:49:19.468" endtime="20210930 14:49:27.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:49:27.137" endtime="20210930 14:49:27.138"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:48:55.716" endtime="20210930 14:49:27.138"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:27.150" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:27.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:27.155" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:49:27.146" endtime="20210930 14:49:27.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:27.157" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:49:27.156" endtime="20210930 14:49:27.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:27.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:27.157" endtime="20210930 14:49:27.158"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.145" endtime="20210930 14:49:27.158"/>
</kw>
<msg timestamp="20210930 14:49:27.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:27.144" endtime="20210930 14:49:27.159"/>
</kw>
<msg timestamp="20210930 14:49:27.159" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:49:27.143" endtime="20210930 14:49:27.159"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:49:27.160" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:49:27.160" endtime="20210930 14:49:27.161"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:27.167" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:27.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:27.177" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:49:27.164" endtime="20210930 14:49:27.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:27.179" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:27.178" endtime="20210930 14:49:27.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:27.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:27.180" endtime="20210930 14:49:27.181"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.163" endtime="20210930 14:49:27.181"/>
</kw>
<msg timestamp="20210930 14:49:27.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:27.162" endtime="20210930 14:49:27.182"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.161" endtime="20210930 14:49:27.182"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.161" endtime="20210930 14:49:27.182"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.142" endtime="20210930 14:49:27.183"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.141" endtime="20210930 14:49:27.183"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:27.190" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:27.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:27.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:49:27.188" endtime="20210930 14:49:27.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:27.198" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:27.197" endtime="20210930 14:49:27.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:27.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:27.198" endtime="20210930 14:49:27.200"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.187" endtime="20210930 14:49:27.200"/>
</kw>
<msg timestamp="20210930 14:49:27.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:27.186" endtime="20210930 14:49:27.200"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.185" endtime="20210930 14:49:27.201"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:27.208" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:27.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:27.213" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:49:27.205" endtime="20210930 14:49:27.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:27.214" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:49:27.213" endtime="20210930 14:49:27.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:27.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:27.215" endtime="20210930 14:49:27.215"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.204" endtime="20210930 14:49:27.216"/>
</kw>
<msg timestamp="20210930 14:49:27.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:27.203" endtime="20210930 14:49:27.216"/>
</kw>
<msg timestamp="20210930 14:49:27.216" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:49:27.203" endtime="20210930 14:49:27.216"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:49:27.217" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:49:27.217" endtime="20210930 14:49:27.218"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:27.225" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:27.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:27.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:49:27.222" endtime="20210930 14:49:27.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:27.237" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:27.236" endtime="20210930 14:49:27.237"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:27.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:27.237" endtime="20210930 14:49:27.238"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.220" endtime="20210930 14:49:27.239"/>
</kw>
<msg timestamp="20210930 14:49:27.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:27.220" endtime="20210930 14:49:27.239"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.218" endtime="20210930 14:49:27.240"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.218" endtime="20210930 14:49:27.240"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.202" endtime="20210930 14:49:27.240"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.201" endtime="20210930 14:49:27.240"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:27.244" level="INFO">Running command 'ozone sh key list 46452-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:36.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:36.190" level="INFO">${output} = {
  "volumeName" : "46452-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-30T14:38:55.482Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210930 14:49:27.241" endtime="20210930 14:49:36.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:36.191" level="INFO">{
  "volumeName" : "46452-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-30T14:38:55.482Z",
  "modificationTime" : "2021-09-30T14:41:59.131Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210930 14:49:36.190" endtime="20210930 14:49:36.191"/>
</kw>
<msg timestamp="20210930 14:49:36.192" level="INFO">${result} = {
  "volumeName" : "46452-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-30T14:38:55.482Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210930 14:49:27.241" endtime="20210930 14:49:36.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:49:36.192" endtime="20210930 14:49:36.192"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.184" endtime="20210930 14:49:36.193"/>
</kw>
<status status="PASS" starttime="20210930 14:49:27.183" endtime="20210930 14:49:36.193"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:49:27.140" endtime="20210930 14:49:36.193"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:36.204" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:36.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:36.208" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:49:36.201" endtime="20210930 14:49:36.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:36.210" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:49:36.209" endtime="20210930 14:49:36.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:36.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:36.210" endtime="20210930 14:49:36.211"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.201" endtime="20210930 14:49:36.212"/>
</kw>
<msg timestamp="20210930 14:49:36.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:36.200" endtime="20210930 14:49:36.213"/>
</kw>
<msg timestamp="20210930 14:49:36.214" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:49:36.198" endtime="20210930 14:49:36.214"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:49:36.216" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:49:36.214" endtime="20210930 14:49:36.216"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:36.223" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:36.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:36.233" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:49:36.220" endtime="20210930 14:49:36.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:36.235" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:36.234" endtime="20210930 14:49:36.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:36.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:36.235" endtime="20210930 14:49:36.237"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.219" endtime="20210930 14:49:36.237"/>
</kw>
<msg timestamp="20210930 14:49:36.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:36.218" endtime="20210930 14:49:36.238"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.217" endtime="20210930 14:49:36.238"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.216" endtime="20210930 14:49:36.239"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.197" endtime="20210930 14:49:36.239"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.196" endtime="20210930 14:49:36.239"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:36.247" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:36.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:36.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:49:36.244" endtime="20210930 14:49:36.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:36.254" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:36.253" endtime="20210930 14:49:36.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:36.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:36.254" endtime="20210930 14:49:36.255"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.243" endtime="20210930 14:49:36.256"/>
</kw>
<msg timestamp="20210930 14:49:36.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:36.242" endtime="20210930 14:49:36.256"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.242" endtime="20210930 14:49:36.257"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:36.265" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:36.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:36.271" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:49:36.261" endtime="20210930 14:49:36.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:36.273" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:49:36.272" endtime="20210930 14:49:36.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:36.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:36.273" endtime="20210930 14:49:36.274"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.259" endtime="20210930 14:49:36.275"/>
</kw>
<msg timestamp="20210930 14:49:36.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:36.259" endtime="20210930 14:49:36.276"/>
</kw>
<msg timestamp="20210930 14:49:36.276" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:49:36.258" endtime="20210930 14:49:36.276"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:49:36.278" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:49:36.277" endtime="20210930 14:49:36.278"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:36.283" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:36.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:36.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:49:36.281" endtime="20210930 14:49:36.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:36.299" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:36.297" endtime="20210930 14:49:36.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:36.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:36.299" endtime="20210930 14:49:36.300"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.280" endtime="20210930 14:49:36.301"/>
</kw>
<msg timestamp="20210930 14:49:36.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:36.280" endtime="20210930 14:49:36.301"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.279" endtime="20210930 14:49:36.302"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.278" endtime="20210930 14:49:36.302"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.257" endtime="20210930 14:49:36.303"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.257" endtime="20210930 14:49:36.303"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:36.307" level="INFO">Running command 'ozone sh key list 46452-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:44.841" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:49:44.841" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 46452-target unreadable-link null</msg>
<status status="PASS" starttime="20210930 14:49:36.304" endtime="20210930 14:49:44.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:44.844" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 46452-target unreadable-link null</msg>
<status status="PASS" starttime="20210930 14:49:44.842" endtime="20210930 14:49:44.845"/>
</kw>
<msg timestamp="20210930 14:49:44.846" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 46452-target unreadable-link null</msg>
<status status="PASS" starttime="20210930 14:49:36.304" endtime="20210930 14:49:44.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:49:44.847" endtime="20210930 14:49:44.848"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.241" endtime="20210930 14:49:44.849"/>
</kw>
<status status="PASS" starttime="20210930 14:49:36.240" endtime="20210930 14:49:44.849"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:49:36.194" endtime="20210930 14:49:44.849"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:44.864" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:44.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:44.869" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:49:44.860" endtime="20210930 14:49:44.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:44.872" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:49:44.871" endtime="20210930 14:49:44.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:44.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:44.872" endtime="20210930 14:49:44.874"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.859" endtime="20210930 14:49:44.874"/>
</kw>
<msg timestamp="20210930 14:49:44.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:44.859" endtime="20210930 14:49:44.875"/>
</kw>
<msg timestamp="20210930 14:49:44.875" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:49:44.858" endtime="20210930 14:49:44.875"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:49:44.876" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:49:44.875" endtime="20210930 14:49:44.877"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:44.883" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:44.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:44.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:49:44.880" endtime="20210930 14:49:44.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:44.895" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:44.894" endtime="20210930 14:49:44.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:44.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:44.895" endtime="20210930 14:49:44.897"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.879" endtime="20210930 14:49:44.897"/>
</kw>
<msg timestamp="20210930 14:49:44.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:44.879" endtime="20210930 14:49:44.898"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.878" endtime="20210930 14:49:44.898"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.877" endtime="20210930 14:49:44.898"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.857" endtime="20210930 14:49:44.898"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.856" endtime="20210930 14:49:44.898"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:44.905" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:44.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:44.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:49:44.902" endtime="20210930 14:49:44.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:44.912" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:44.911" endtime="20210930 14:49:44.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:44.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:44.912" endtime="20210930 14:49:44.913"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.901" endtime="20210930 14:49:44.913"/>
</kw>
<msg timestamp="20210930 14:49:44.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:44.901" endtime="20210930 14:49:44.914"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.900" endtime="20210930 14:49:44.914"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:44.920" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:44.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:44.926" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:49:44.918" endtime="20210930 14:49:44.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:44.928" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:49:44.926" endtime="20210930 14:49:44.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:44.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:44.928" endtime="20210930 14:49:44.929"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.917" endtime="20210930 14:49:44.929"/>
</kw>
<msg timestamp="20210930 14:49:44.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:44.916" endtime="20210930 14:49:44.930"/>
</kw>
<msg timestamp="20210930 14:49:44.930" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:49:44.915" endtime="20210930 14:49:44.930"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:49:44.931" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:49:44.930" endtime="20210930 14:49:44.931"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:44.937" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:44.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:44.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:49:44.934" endtime="20210930 14:49:44.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:44.950" level="INFO"/>
<status status="PASS" starttime="20210930 14:49:44.949" endtime="20210930 14:49:44.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:44.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:44.950" endtime="20210930 14:49:44.951"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.933" endtime="20210930 14:49:44.952"/>
</kw>
<msg timestamp="20210930 14:49:44.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:44.933" endtime="20210930 14:49:44.952"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.932" endtime="20210930 14:49:44.953"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.931" endtime="20210930 14:49:44.953"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.915" endtime="20210930 14:49:44.953"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.914" endtime="20210930 14:49:44.953"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:44.958" level="INFO">Running command 'ozone sh bucket info 46452-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:49:53.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:49:53.069" level="INFO">${output} = {
  "volumeName" : "46452-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-30T14:42:31.483Z...</msg>
<status status="PASS" starttime="20210930 14:49:44.956" endtime="20210930 14:49:53.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:49:53.072" level="INFO">{
  "volumeName" : "46452-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-30T14:42:31.483Z",
  "modificationTime" : "2021-09-30T14:43:11.911Z"
}</msg>
<status status="PASS" starttime="20210930 14:49:53.070" endtime="20210930 14:49:53.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:49:53.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:49:53.073" endtime="20210930 14:49:53.075"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.955" endtime="20210930 14:49:53.076"/>
</kw>
<msg timestamp="20210930 14:49:53.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:49:44.955" endtime="20210930 14:49:53.077"/>
</kw>
<msg timestamp="20210930 14:49:53.078" level="INFO">${result} = {
  "volumeName" : "46452-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-30T14:42:31.483Z...</msg>
<status status="PASS" starttime="20210930 14:49:44.953" endtime="20210930 14:49:53.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:49:53.079" endtime="20210930 14:49:53.080"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:49:53.081" endtime="20210930 14:49:53.082"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:49:53.088" level="INFO">Running command 'ozone sh key list 46452-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:50:00.734" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:50:00.735" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 46452-source unreadable-bucket </msg>
<status status="PASS" starttime="20210930 14:49:53.084" endtime="20210930 14:50:00.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:50:00.737" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 46452-source unreadable-bucket </msg>
<status status="PASS" starttime="20210930 14:50:00.736" endtime="20210930 14:50:00.737"/>
</kw>
<msg timestamp="20210930 14:50:00.738" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 46452-source unreadable-bucket </msg>
<status status="PASS" starttime="20210930 14:49:53.082" endtime="20210930 14:50:00.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:50:00.738" endtime="20210930 14:50:00.739"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.899" endtime="20210930 14:50:00.739"/>
</kw>
<status status="PASS" starttime="20210930 14:49:44.899" endtime="20210930 14:50:00.739"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:49:44.855" endtime="20210930 14:50:00.740"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:50:00.752" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:50:00.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:50:00.759" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:50:00.748" endtime="20210930 14:50:00.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:50:00.761" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:50:00.760" endtime="20210930 14:50:00.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:50:00.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:50:00.762" endtime="20210930 14:50:00.763"/>
</kw>
<status status="PASS" starttime="20210930 14:50:00.746" endtime="20210930 14:50:00.764"/>
</kw>
<msg timestamp="20210930 14:50:00.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:50:00.745" endtime="20210930 14:50:00.765"/>
</kw>
<msg timestamp="20210930 14:50:00.765" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:50:00.744" endtime="20210930 14:50:00.765"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:50:00.767" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:50:00.766" endtime="20210930 14:50:00.767"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:50:00.775" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:50:00.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:50:00.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:50:00.772" endtime="20210930 14:50:00.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:50:00.793" level="INFO"/>
<status status="PASS" starttime="20210930 14:50:00.791" endtime="20210930 14:50:00.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:50:00.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:50:00.794" endtime="20210930 14:50:00.795"/>
</kw>
<status status="PASS" starttime="20210930 14:50:00.772" endtime="20210930 14:50:00.796"/>
</kw>
<msg timestamp="20210930 14:50:00.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:50:00.770" endtime="20210930 14:50:00.797"/>
</kw>
<status status="PASS" starttime="20210930 14:50:00.768" endtime="20210930 14:50:00.797"/>
</kw>
<status status="PASS" starttime="20210930 14:50:00.767" endtime="20210930 14:50:00.797"/>
</kw>
<status status="PASS" starttime="20210930 14:50:00.743" endtime="20210930 14:50:00.798"/>
</kw>
<status status="PASS" starttime="20210930 14:50:00.742" endtime="20210930 14:50:00.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:50:00.806" level="INFO">Running command 'ozone sh bucket link 46452-target/loop1 46452-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:50:09.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:50:09.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:50:00.802" endtime="20210930 14:50:09.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:50:09.318" level="INFO"/>
<status status="PASS" starttime="20210930 14:50:09.317" endtime="20210930 14:50:09.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:50:09.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:50:09.318" endtime="20210930 14:50:09.319"/>
</kw>
<status status="PASS" starttime="20210930 14:50:00.801" endtime="20210930 14:50:09.319"/>
</kw>
<msg timestamp="20210930 14:50:09.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:50:00.800" endtime="20210930 14:50:09.320"/>
</kw>
<status status="PASS" starttime="20210930 14:50:00.799" endtime="20210930 14:50:09.320"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:50:09.325" level="INFO">Running command 'ozone sh bucket link 46452-target/loop2 46452-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:50:17.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:50:17.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:50:09.322" endtime="20210930 14:50:17.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:50:17.325" level="INFO"/>
<status status="PASS" starttime="20210930 14:50:17.324" endtime="20210930 14:50:17.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:50:17.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:50:17.326" endtime="20210930 14:50:17.328"/>
</kw>
<status status="PASS" starttime="20210930 14:50:09.321" endtime="20210930 14:50:17.328"/>
</kw>
<msg timestamp="20210930 14:50:17.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:50:09.321" endtime="20210930 14:50:17.329"/>
</kw>
<status status="PASS" starttime="20210930 14:50:09.320" endtime="20210930 14:50:17.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:50:17.338" level="INFO">Running command 'ozone sh bucket link 46452-target/loop3 46452-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:50:24.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:50:24.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:50:17.333" endtime="20210930 14:50:24.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:50:24.993" level="INFO"/>
<status status="PASS" starttime="20210930 14:50:24.991" endtime="20210930 14:50:24.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:50:24.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:50:24.993" endtime="20210930 14:50:24.994"/>
</kw>
<status status="PASS" starttime="20210930 14:50:17.332" endtime="20210930 14:50:24.995"/>
</kw>
<msg timestamp="20210930 14:50:24.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:50:17.331" endtime="20210930 14:50:24.995"/>
</kw>
<status status="PASS" starttime="20210930 14:50:17.330" endtime="20210930 14:50:24.996"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:50:25.000" level="INFO">Running command 'ozone sh key list 46452-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:50:32.595" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:50:32.595" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210930 14:50:24.997" endtime="20210930 14:50:32.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:50:32.596" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210930 14:50:32.595" endtime="20210930 14:50:32.596"/>
</kw>
<msg timestamp="20210930 14:50:32.597" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210930 14:50:24.996" endtime="20210930 14:50:32.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:50:32.597" endtime="20210930 14:50:32.598"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:50:00.741" endtime="20210930 14:50:32.598"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:50:32.608" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:50:32.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:50:32.613" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:50:32.605" endtime="20210930 14:50:32.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:50:32.616" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:50:32.614" endtime="20210930 14:50:32.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:50:32.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:50:32.616" endtime="20210930 14:50:32.617"/>
</kw>
<status status="PASS" starttime="20210930 14:50:32.604" endtime="20210930 14:50:32.618"/>
</kw>
<msg timestamp="20210930 14:50:32.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:50:32.604" endtime="20210930 14:50:32.618"/>
</kw>
<msg timestamp="20210930 14:50:32.619" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:50:32.603" endtime="20210930 14:50:32.619"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:50:32.621" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:50:32.619" endtime="20210930 14:50:32.621"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:50:32.626" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:50:32.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:50:32.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:50:32.624" endtime="20210930 14:50:32.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:50:32.638" level="INFO"/>
<status status="PASS" starttime="20210930 14:50:32.637" endtime="20210930 14:50:32.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:50:32.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:50:32.639" endtime="20210930 14:50:32.640"/>
</kw>
<status status="PASS" starttime="20210930 14:50:32.623" endtime="20210930 14:50:32.640"/>
</kw>
<msg timestamp="20210930 14:50:32.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:50:32.623" endtime="20210930 14:50:32.641"/>
</kw>
<status status="PASS" starttime="20210930 14:50:32.622" endtime="20210930 14:50:32.642"/>
</kw>
<status status="PASS" starttime="20210930 14:50:32.622" endtime="20210930 14:50:32.642"/>
</kw>
<status status="PASS" starttime="20210930 14:50:32.602" endtime="20210930 14:50:32.642"/>
</kw>
<status status="PASS" starttime="20210930 14:50:32.601" endtime="20210930 14:50:32.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:50:32.648" level="INFO">Running command 'ozone sh bucket link 46452-source/bucket1 46452-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:50:40.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:50:40.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:50:32.645" endtime="20210930 14:50:40.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:50:40.856" level="INFO"/>
<status status="PASS" starttime="20210930 14:50:40.854" endtime="20210930 14:50:40.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:50:40.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:50:40.856" endtime="20210930 14:50:40.857"/>
</kw>
<status status="PASS" starttime="20210930 14:50:32.645" endtime="20210930 14:50:40.857"/>
</kw>
<msg timestamp="20210930 14:50:40.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:50:32.644" endtime="20210930 14:50:40.857"/>
</kw>
<status status="PASS" starttime="20210930 14:50:32.643" endtime="20210930 14:50:40.858"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:50:40.864" level="INFO">Running command 'ozone sh key put 46452-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:52:32.601" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210930 14:50:40.861" endtime="20210930 14:52:32.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210930 14:52:32.602" endtime="20210930 14:52:32.602"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210930 14:52:32.602" endtime="20210930 14:52:32.602"/>
</kw>
<status status="FAIL" starttime="20210930 14:50:40.860" endtime="20210930 14:52:32.602"/>
</kw>
<msg timestamp="20210930 14:52:32.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210930 14:50:40.859" endtime="20210930 14:52:32.603"/>
</kw>
<status status="FAIL" starttime="20210930 14:50:40.858" endtime="20210930 14:52:32.603"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210930 14:52:32.603" endtime="20210930 14:52:32.603"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210930 14:50:32.600" endtime="20210930 14:52:32.604">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:52:32.615" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:52:32.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:52:32.617" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:52:32.609" endtime="20210930 14:52:32.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:52:32.618" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:52:32.618" endtime="20210930 14:52:32.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:52:32.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:52:32.619" endtime="20210930 14:52:32.625"/>
</kw>
<status status="PASS" starttime="20210930 14:52:32.609" endtime="20210930 14:52:32.626"/>
</kw>
<msg timestamp="20210930 14:52:32.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:52:32.608" endtime="20210930 14:52:32.626"/>
</kw>
<msg timestamp="20210930 14:52:32.626" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:52:32.608" endtime="20210930 14:52:32.626"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:52:32.627" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:52:32.627" endtime="20210930 14:52:32.627"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:52:32.637" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:52:32.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:52:32.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:52:32.630" endtime="20210930 14:52:32.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:52:32.650" level="INFO"/>
<status status="PASS" starttime="20210930 14:52:32.650" endtime="20210930 14:52:32.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:52:32.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:52:32.650" endtime="20210930 14:52:32.651"/>
</kw>
<status status="PASS" starttime="20210930 14:52:32.629" endtime="20210930 14:52:32.652"/>
</kw>
<msg timestamp="20210930 14:52:32.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:52:32.629" endtime="20210930 14:52:32.652"/>
</kw>
<status status="PASS" starttime="20210930 14:52:32.628" endtime="20210930 14:52:32.652"/>
</kw>
<status status="PASS" starttime="20210930 14:52:32.627" endtime="20210930 14:52:32.652"/>
</kw>
<status status="PASS" starttime="20210930 14:52:32.607" endtime="20210930 14:52:32.652"/>
</kw>
<status status="PASS" starttime="20210930 14:52:32.607" endtime="20210930 14:52:32.652"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:52:32.659" level="INFO">Running command 'ozone sh bucket delete 46452-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:52:41.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:52:41.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:52:32.654" endtime="20210930 14:52:41.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:52:41.188" level="INFO"/>
<status status="PASS" starttime="20210930 14:52:41.186" endtime="20210930 14:52:41.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:52:41.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:52:41.188" endtime="20210930 14:52:41.190"/>
</kw>
<status status="PASS" starttime="20210930 14:52:32.654" endtime="20210930 14:52:41.191"/>
</kw>
<msg timestamp="20210930 14:52:41.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:52:32.653" endtime="20210930 14:52:41.192"/>
</kw>
<status status="PASS" starttime="20210930 14:52:32.653" endtime="20210930 14:52:41.192"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:52:41.199" level="INFO">Running command 'ozone sh bucket list 46452-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:52:50.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:52:50.480" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T...</msg>
<status status="PASS" starttime="20210930 14:52:41.196" endtime="20210930 14:52:50.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:52:50.482" level="INFO">{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:49:19.367Z",
  "modificationTime" : "2021-09-30T14:49:19.367Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:43:18.432Z",
  "modificationTime" : "2021-09-30T14:43:18.432Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:42:31.483Z",
  "modificationTime" : "2021-09-30T14:43:11.911Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:49:03.281Z",
  "modificationTime" : "2021-09-30T14:49:03.281Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:50:40.741Z",
  "modificationTime" : "2021-09-30T14:50:40.741Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:50:24.857Z",
  "modificationTime" : "2021-09-30T14:50:24.857Z",
  "sourceVolume" : "46452-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:50:09.221Z",
  "modificationTime" : "2021-09-30T14:50:09.221Z",
  "sourceVolume" : "46452-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:50:17.220Z",
  "modificationTime" : "2021-09-30T14:50:17.220Z",
  "sourceVolume" : "46452-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:42:15.681Z",
  "modificationTime" : "2021-09-30T14:43:04.096Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T14:42:23.694Z",
  "modificationTime" : "2021-09-30T14:42:23.694Z",
  "sourceVolume" : "46452-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210930 14:52:50.481" endtime="20210930 14:52:50.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:52:50.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:52:50.482" endtime="20210930 14:52:50.483"/>
</kw>
<status status="PASS" starttime="20210930 14:52:41.195" endtime="20210930 14:52:50.483"/>
</kw>
<msg timestamp="20210930 14:52:50.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:52:41.194" endtime="20210930 14:52:50.484"/>
</kw>
<msg timestamp="20210930 14:52:50.485" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "46452-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-30T...</msg>
<status status="PASS" starttime="20210930 14:52:41.192" endtime="20210930 14:52:50.485"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:52:50.485" endtime="20210930 14:52:50.486"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:52:50.492" level="INFO">Running command 'ozone sh key list 46452-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:52:57.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:52:57.333" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210930 14:52:50.489" endtime="20210930 14:52:57.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:52:57.335" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210930 14:52:57.334" endtime="20210930 14:52:57.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:52:57.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:52:57.336" endtime="20210930 14:52:57.337"/>
</kw>
<status status="PASS" starttime="20210930 14:52:50.488" endtime="20210930 14:52:57.338"/>
</kw>
<msg timestamp="20210930 14:52:57.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:52:50.488" endtime="20210930 14:52:57.338"/>
</kw>
<msg timestamp="20210930 14:52:57.339" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210930 14:52:50.486" endtime="20210930 14:52:57.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:52:57.339" endtime="20210930 14:52:57.340"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:52:32.606" endtime="20210930 14:52:57.340"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210930 14:38:25.384" endtime="20210930 14:52:57.344"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210930 14:52:57.382" level="INFO">${random} = 12375</msg>
<status status="PASS" starttime="20210930 14:52:57.381" endtime="20210930 14:52:57.382"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:52:57.383" level="INFO">${prefix} = 12375</msg>
<status status="PASS" starttime="20210930 14:52:57.382" endtime="20210930 14:52:57.383"/>
</kw>
<status status="PASS" starttime="20210930 14:52:57.380" endtime="20210930 14:52:57.383"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:52:57.392" level="INFO">Running command 'ozone sh volume info /12375-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:53:03.172" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:53:03.173" level="INFO">${output} = VOLUME_NOT_FOUND Volume 12375-rpcbasic is not found</msg>
<status status="PASS" starttime="20210930 14:52:57.389" endtime="20210930 14:53:03.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:53:03.174" level="INFO">VOLUME_NOT_FOUND Volume 12375-rpcbasic is not found</msg>
<status status="PASS" starttime="20210930 14:53:03.173" endtime="20210930 14:53:03.174"/>
</kw>
<msg timestamp="20210930 14:53:03.175" level="INFO">${result} = VOLUME_NOT_FOUND Volume 12375-rpcbasic is not found</msg>
<status status="PASS" starttime="20210930 14:52:57.388" endtime="20210930 14:53:03.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:53:03.176" endtime="20210930 14:53:03.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:53:03.185" level="INFO">Running command 'ozone sh volume create /12375-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:53:11.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:53:11.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:53:03.182" endtime="20210930 14:53:11.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:53:11.624" level="INFO"/>
<status status="PASS" starttime="20210930 14:53:11.623" endtime="20210930 14:53:11.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:53:11.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:53:11.624" endtime="20210930 14:53:11.625"/>
</kw>
<status status="PASS" starttime="20210930 14:53:03.180" endtime="20210930 14:53:11.625"/>
</kw>
<msg timestamp="20210930 14:53:11.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:53:03.180" endtime="20210930 14:53:11.626"/>
</kw>
<msg timestamp="20210930 14:53:11.626" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210930 14:53:03.177" endtime="20210930 14:53:11.626"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:53:11.626" endtime="20210930 14:53:11.627"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:53:11.641" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="12375-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:53:19.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:53:19.151" level="INFO">${output} = {
  "metadata": {},
  "name": "12375-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210930 14:53:11.637" endtime="20210930 14:53:19.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:53:19.154" level="INFO">{
  "metadata": {},
  "name": "12375-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-30T14:53:11.524Z",
  "modificationTime": "2021-09-30T14:53:11.524Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210930 14:53:19.152" endtime="20210930 14:53:19.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:53:19.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:53:19.154" endtime="20210930 14:53:19.155"/>
</kw>
<status status="PASS" starttime="20210930 14:53:11.635" endtime="20210930 14:53:19.156"/>
</kw>
<msg timestamp="20210930 14:53:19.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:53:11.634" endtime="20210930 14:53:19.156"/>
</kw>
<msg timestamp="20210930 14:53:19.157" level="INFO">${result} = {
  "metadata": {},
  "name": "12375-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210930 14:53:11.627" endtime="20210930 14:53:19.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:53:19.157" endtime="20210930 14:53:19.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:53:19.164" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="12375-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:53:28.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:53:28.490" level="INFO">${output} = {
  "metadata": {},
  "name": "12375-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210930 14:53:19.161" endtime="20210930 14:53:28.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:53:28.491" level="INFO">{
  "metadata": {},
  "name": "12375-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-30T14:53:11.524Z",
  "modificationTime": "2021-09-30T14:53:11.524Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210930 14:53:28.490" endtime="20210930 14:53:28.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:53:28.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:53:28.492" endtime="20210930 14:53:28.492"/>
</kw>
<status status="PASS" starttime="20210930 14:53:19.160" endtime="20210930 14:53:28.493"/>
</kw>
<msg timestamp="20210930 14:53:28.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:53:19.159" endtime="20210930 14:53:28.493"/>
</kw>
<msg timestamp="20210930 14:53:28.493" level="INFO">${result} = {
  "metadata": {},
  "name": "12375-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210930 14:53:19.158" endtime="20210930 14:53:28.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:53:28.493" endtime="20210930 14:53:28.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:53:28.498" level="INFO">Running command 'ozone sh volume setquota /12375-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:53:34.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:53:34.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:53:28.496" endtime="20210930 14:53:34.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:53:34.992" level="INFO"/>
<status status="PASS" starttime="20210930 14:53:34.990" endtime="20210930 14:53:34.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:53:34.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:53:34.992" endtime="20210930 14:53:34.993"/>
</kw>
<status status="PASS" starttime="20210930 14:53:28.495" endtime="20210930 14:53:34.994"/>
</kw>
<msg timestamp="20210930 14:53:34.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:53:28.495" endtime="20210930 14:53:34.994"/>
</kw>
<status status="PASS" starttime="20210930 14:53:28.494" endtime="20210930 14:53:34.995"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:53:35.002" level="INFO">Running command 'ozone sh volume info /12375-rpcbasic | jq -r '. | select(.name=="12375-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:53:41.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:53:41.512" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210930 14:53:34.998" endtime="20210930 14:53:41.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:53:41.515" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210930 14:53:41.514" endtime="20210930 14:53:41.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:53:41.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:53:41.516" endtime="20210930 14:53:41.516"/>
</kw>
<status status="PASS" starttime="20210930 14:53:34.998" endtime="20210930 14:53:41.517"/>
</kw>
<msg timestamp="20210930 14:53:41.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:53:34.997" endtime="20210930 14:53:41.517"/>
</kw>
<msg timestamp="20210930 14:53:41.517" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210930 14:53:34.995" endtime="20210930 14:53:41.517"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:53:41.517" endtime="20210930 14:53:41.518"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:53:41.526" level="INFO">Running command 'ozone sh bucket create /12375-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:53:50.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:53:50.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:53:41.521" endtime="20210930 14:53:50.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:53:50.266" level="INFO"/>
<status status="PASS" starttime="20210930 14:53:50.264" endtime="20210930 14:53:50.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:53:50.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:53:50.266" endtime="20210930 14:53:50.267"/>
</kw>
<status status="PASS" starttime="20210930 14:53:41.520" endtime="20210930 14:53:50.268"/>
</kw>
<msg timestamp="20210930 14:53:50.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:53:41.519" endtime="20210930 14:53:50.268"/>
</kw>
<status status="PASS" starttime="20210930 14:53:41.518" endtime="20210930 14:53:50.269"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:53:50.275" level="INFO">Running command 'ozone sh bucket info /12375-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:53:58.700" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:53:58.700" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210930 14:53:50.272" endtime="20210930 14:53:58.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:53:58.702" level="INFO">DISK</msg>
<status status="PASS" starttime="20210930 14:53:58.701" endtime="20210930 14:53:58.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:53:58.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:53:58.702" endtime="20210930 14:53:58.703"/>
</kw>
<status status="PASS" starttime="20210930 14:53:50.271" endtime="20210930 14:53:58.704"/>
</kw>
<msg timestamp="20210930 14:53:58.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:53:50.271" endtime="20210930 14:53:58.705"/>
</kw>
<msg timestamp="20210930 14:53:58.705" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210930 14:53:50.269" endtime="20210930 14:53:58.705"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:53:58.706" endtime="20210930 14:53:58.706"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:53:58.713" level="INFO">Running command 'ozone sh bucket info /12375-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:54:07.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:54:07.357" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210930 14:53:58.710" endtime="20210930 14:54:07.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:54:07.361" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210930 14:54:07.359" endtime="20210930 14:54:07.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:54:07.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:54:07.362" endtime="20210930 14:54:07.364"/>
</kw>
<status status="PASS" starttime="20210930 14:53:58.709" endtime="20210930 14:54:07.365"/>
</kw>
<msg timestamp="20210930 14:54:07.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:53:58.708" endtime="20210930 14:54:07.365"/>
</kw>
<msg timestamp="20210930 14:54:07.366" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210930 14:53:58.707" endtime="20210930 14:54:07.366"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:54:07.367" endtime="20210930 14:54:07.367"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:54:07.378" level="INFO">Running command 'ozone sh bucket info /12375-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:54:16.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:54:16.216" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210930 14:54:07.373" endtime="20210930 14:54:16.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:54:16.218" level="INFO">100</msg>
<status status="PASS" starttime="20210930 14:54:16.216" endtime="20210930 14:54:16.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:54:16.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:54:16.218" endtime="20210930 14:54:16.219"/>
</kw>
<status status="PASS" starttime="20210930 14:54:07.372" endtime="20210930 14:54:16.220"/>
</kw>
<msg timestamp="20210930 14:54:16.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:54:07.371" endtime="20210930 14:54:16.221"/>
</kw>
<msg timestamp="20210930 14:54:16.222" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210930 14:54:07.368" endtime="20210930 14:54:16.222"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:54:16.222" endtime="20210930 14:54:16.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:54:16.233" level="INFO">Running command 'ozone sh bucket setquota /12375-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:54:24.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:54:24.230" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:54:16.229" endtime="20210930 14:54:24.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:54:24.232" level="INFO"/>
<status status="PASS" starttime="20210930 14:54:24.231" endtime="20210930 14:54:24.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:54:24.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:54:24.232" endtime="20210930 14:54:24.233"/>
</kw>
<status status="PASS" starttime="20210930 14:54:16.227" endtime="20210930 14:54:24.233"/>
</kw>
<msg timestamp="20210930 14:54:24.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:54:16.226" endtime="20210930 14:54:24.234"/>
</kw>
<status status="PASS" starttime="20210930 14:54:16.224" endtime="20210930 14:54:24.234"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:54:24.243" level="INFO">Running command 'ozone sh bucket info /12375-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:54:32.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:54:32.773" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210930 14:54:24.236" endtime="20210930 14:54:32.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:54:32.775" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210930 14:54:32.774" endtime="20210930 14:54:32.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:54:32.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:54:32.775" endtime="20210930 14:54:32.776"/>
</kw>
<status status="PASS" starttime="20210930 14:54:24.236" endtime="20210930 14:54:32.776"/>
</kw>
<msg timestamp="20210930 14:54:32.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:54:24.235" endtime="20210930 14:54:32.777"/>
</kw>
<msg timestamp="20210930 14:54:32.777" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210930 14:54:24.234" endtime="20210930 14:54:32.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:54:32.777" endtime="20210930 14:54:32.778"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:54:32.784" level="INFO">Running command 'ozone sh bucket info /12375-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:54:41.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:54:41.019" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210930 14:54:32.781" endtime="20210930 14:54:41.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:54:41.021" level="INFO">1000</msg>
<status status="PASS" starttime="20210930 14:54:41.020" endtime="20210930 14:54:41.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:54:41.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:54:41.021" endtime="20210930 14:54:41.023"/>
</kw>
<status status="PASS" starttime="20210930 14:54:32.781" endtime="20210930 14:54:41.024"/>
</kw>
<msg timestamp="20210930 14:54:41.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:54:32.780" endtime="20210930 14:54:41.024"/>
</kw>
<msg timestamp="20210930 14:54:41.025" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210930 14:54:32.778" endtime="20210930 14:54:41.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:54:41.026" endtime="20210930 14:54:41.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:54:41.037" level="INFO">Running command 'ozone sh bucket list /12375-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:54:50.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:54:50.487" level="INFO">${output} = 12375-rpcbasic</msg>
<status status="PASS" starttime="20210930 14:54:41.033" endtime="20210930 14:54:50.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:54:50.489" level="INFO">12375-rpcbasic</msg>
<status status="PASS" starttime="20210930 14:54:50.488" endtime="20210930 14:54:50.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:54:50.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:54:50.489" endtime="20210930 14:54:50.492"/>
</kw>
<status status="PASS" starttime="20210930 14:54:41.030" endtime="20210930 14:54:50.493"/>
</kw>
<msg timestamp="20210930 14:54:50.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:54:41.029" endtime="20210930 14:54:50.494"/>
</kw>
<msg timestamp="20210930 14:54:50.495" level="INFO">${result} = 12375-rpcbasic</msg>
<status status="PASS" starttime="20210930 14:54:41.027" endtime="20210930 14:54:50.495"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:54:50.495" endtime="20210930 14:54:50.496"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:54:50.505" level="INFO">Running command 'ozone sh key put /12375-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:57:57.385" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210930 14:54:50.502" endtime="20210930 14:57:57.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.386" endtime="20210930 14:57:57.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.386" endtime="20210930 14:57:57.386"/>
</kw>
<status status="FAIL" starttime="20210930 14:54:50.500" endtime="20210930 14:57:57.387"/>
</kw>
<msg timestamp="20210930 14:57:57.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210930 14:54:50.499" endtime="20210930 14:57:57.387"/>
</kw>
<status status="FAIL" starttime="20210930 14:54:50.498" endtime="20210930 14:57:57.387"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.388" endtime="20210930 14:57:57.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.388" endtime="20210930 14:57:57.388"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.388" endtime="20210930 14:57:57.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.388" endtime="20210930 14:57:57.388"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.388" endtime="20210930 14:57:57.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.389" endtime="20210930 14:57:57.389"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.389" endtime="20210930 14:57:57.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.389" endtime="20210930 14:57:57.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.389" endtime="20210930 14:57:57.389"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.390" endtime="20210930 14:57:57.390"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.390" endtime="20210930 14:57:57.390"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.390" endtime="20210930 14:57:57.390"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.390" endtime="20210930 14:57:57.390"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.390" endtime="20210930 14:57:57.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.391" endtime="20210930 14:57:57.391"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.391" endtime="20210930 14:57:57.391"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.392" endtime="20210930 14:57:57.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.392" endtime="20210930 14:57:57.392"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.393" endtime="20210930 14:57:57.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.393" endtime="20210930 14:57:57.393"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.394" endtime="20210930 14:57:57.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.394" endtime="20210930 14:57:57.395"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.395" endtime="20210930 14:57:57.395"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.395" endtime="20210930 14:57:57.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.396" endtime="20210930 14:57:57.396"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.396" endtime="20210930 14:57:57.396"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.397" endtime="20210930 14:57:57.397"/>
</kw>
<status status="FAIL" starttime="20210930 14:54:50.497" endtime="20210930 14:57:57.397"/>
</kw>
<status status="FAIL" starttime="20210930 14:54:50.497" endtime="20210930 14:57:57.398"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.398" endtime="20210930 14:57:57.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.398" endtime="20210930 14:57:57.399"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.399" endtime="20210930 14:57:57.399"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.399" endtime="20210930 14:57:57.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.400" endtime="20210930 14:57:57.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.400" endtime="20210930 14:57:57.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.401" endtime="20210930 14:57:57.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.401" endtime="20210930 14:57:57.402"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.402" endtime="20210930 14:57:57.402"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.402" endtime="20210930 14:57:57.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.403" endtime="20210930 14:57:57.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.403" endtime="20210930 14:57:57.403"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.403" endtime="20210930 14:57:57.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.404" endtime="20210930 14:57:57.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.404" endtime="20210930 14:57:57.404"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.405" endtime="20210930 14:57:57.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.405" endtime="20210930 14:57:57.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.406" endtime="20210930 14:57:57.406"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.406" endtime="20210930 14:57:57.406"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.407" endtime="20210930 14:57:57.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.408" endtime="20210930 14:57:57.408"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.408" endtime="20210930 14:57:57.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.408" endtime="20210930 14:57:57.409"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 14:57:57.409" endtime="20210930 14:57:57.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.409" endtime="20210930 14:57:57.409"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 14:57:57.409" endtime="20210930 14:57:57.410"/>
</kw>
<status status="FAIL" starttime="20210930 14:52:57.385" endtime="20210930 14:57:57.410"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210930 14:52:57.384" endtime="20210930 14:57:57.411">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210930 14:52:57.350" endtime="20210930 14:57:57.413"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210930 14:57:57.433" level="INFO">${random} = 66901</msg>
<status status="PASS" starttime="20210930 14:57:57.432" endtime="20210930 14:57:57.433"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:57:57.434" level="INFO">${prefix} = 66901</msg>
<status status="PASS" starttime="20210930 14:57:57.433" endtime="20210930 14:57:57.434"/>
</kw>
<status status="PASS" starttime="20210930 14:57:57.431" endtime="20210930 14:57:57.435"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:57:57.442" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:57:57.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:57:57.447" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:57:57.439" endtime="20210930 14:57:57.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:57:57.448" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:57:57.447" endtime="20210930 14:57:57.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:57:57.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:57:57.448" endtime="20210930 14:57:57.449"/>
</kw>
<status status="PASS" starttime="20210930 14:57:57.438" endtime="20210930 14:57:57.450"/>
</kw>
<msg timestamp="20210930 14:57:57.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:57:57.438" endtime="20210930 14:57:57.450"/>
</kw>
<msg timestamp="20210930 14:57:57.450" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:57:57.438" endtime="20210930 14:57:57.450"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:57:57.453" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:57:57.451" endtime="20210930 14:57:57.453"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:57:57.459" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:57:57.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:57:57.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:57:57.456" endtime="20210930 14:57:57.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:57:57.518" level="INFO"/>
<status status="PASS" starttime="20210930 14:57:57.516" endtime="20210930 14:57:57.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:57:57.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:57:57.519" endtime="20210930 14:57:57.520"/>
</kw>
<status status="PASS" starttime="20210930 14:57:57.456" endtime="20210930 14:57:57.520"/>
</kw>
<msg timestamp="20210930 14:57:57.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:57:57.455" endtime="20210930 14:57:57.520"/>
</kw>
<status status="PASS" starttime="20210930 14:57:57.454" endtime="20210930 14:57:57.521"/>
</kw>
<status status="PASS" starttime="20210930 14:57:57.453" endtime="20210930 14:57:57.521"/>
</kw>
<status status="PASS" starttime="20210930 14:57:57.437" endtime="20210930 14:57:57.521"/>
</kw>
<status status="PASS" starttime="20210930 14:57:57.436" endtime="20210930 14:57:57.521"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:57:57.527" level="INFO">Running command 'ozone sh volume info o3://om:9862/66901-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:58:05.927" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 14:58:05.927" level="INFO">${output} = VOLUME_NOT_FOUND Volume 66901-rpcwoport is not found</msg>
<status status="PASS" starttime="20210930 14:57:57.524" endtime="20210930 14:58:05.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:58:05.930" level="INFO">VOLUME_NOT_FOUND Volume 66901-rpcwoport is not found</msg>
<status status="PASS" starttime="20210930 14:58:05.928" endtime="20210930 14:58:05.931"/>
</kw>
<msg timestamp="20210930 14:58:05.931" level="INFO">${result} = VOLUME_NOT_FOUND Volume 66901-rpcwoport is not found</msg>
<status status="PASS" starttime="20210930 14:57:57.522" endtime="20210930 14:58:05.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:58:05.932" endtime="20210930 14:58:05.933"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:58:05.941" level="INFO">Running command 'ozone sh volume create o3://om:9862/66901-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:58:13.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:58:13.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:58:05.937" endtime="20210930 14:58:13.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:58:13.891" level="INFO"/>
<status status="PASS" starttime="20210930 14:58:13.889" endtime="20210930 14:58:13.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:58:13.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:58:13.892" endtime="20210930 14:58:13.893"/>
</kw>
<status status="PASS" starttime="20210930 14:58:05.936" endtime="20210930 14:58:13.894"/>
</kw>
<msg timestamp="20210930 14:58:13.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:58:05.935" endtime="20210930 14:58:13.894"/>
</kw>
<msg timestamp="20210930 14:58:13.895" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210930 14:58:05.933" endtime="20210930 14:58:13.895"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:58:13.896" endtime="20210930 14:58:13.897"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:58:13.904" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="66901-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:58:22.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:58:22.513" level="INFO">${output} = {
  "metadata": {},
  "name": "66901-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210930 14:58:13.902" endtime="20210930 14:58:22.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:58:22.515" level="INFO">{
  "metadata": {},
  "name": "66901-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-30T14:58:13.783Z",
  "modificationTime": "2021-09-30T14:58:13.783Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210930 14:58:22.514" endtime="20210930 14:58:22.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:58:22.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:58:22.515" endtime="20210930 14:58:22.516"/>
</kw>
<status status="PASS" starttime="20210930 14:58:13.900" endtime="20210930 14:58:22.517"/>
</kw>
<msg timestamp="20210930 14:58:22.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:58:13.899" endtime="20210930 14:58:22.518"/>
</kw>
<msg timestamp="20210930 14:58:22.518" level="INFO">${result} = {
  "metadata": {},
  "name": "66901-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210930 14:58:13.897" endtime="20210930 14:58:22.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:58:22.519" endtime="20210930 14:58:22.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:58:22.527" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="66901-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:58:33.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:58:33.000" level="INFO">${output} = {
  "metadata": {},
  "name": "66901-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210930 14:58:22.523" endtime="20210930 14:58:33.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:58:33.003" level="INFO">{
  "metadata": {},
  "name": "66901-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-30T14:58:13.783Z",
  "modificationTime": "2021-09-30T14:58:13.783Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210930 14:58:33.001" endtime="20210930 14:58:33.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:58:33.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:58:33.004" endtime="20210930 14:58:33.005"/>
</kw>
<status status="PASS" starttime="20210930 14:58:22.522" endtime="20210930 14:58:33.006"/>
</kw>
<msg timestamp="20210930 14:58:33.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:58:22.522" endtime="20210930 14:58:33.007"/>
</kw>
<msg timestamp="20210930 14:58:33.008" level="INFO">${result} = {
  "metadata": {},
  "name": "66901-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210930 14:58:22.520" endtime="20210930 14:58:33.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 14:58:33.009" endtime="20210930 14:58:33.010"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:58:33.019" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/66901-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:58:40.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:58:40.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:58:33.015" endtime="20210930 14:58:40.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:58:40.485" level="INFO"/>
<status status="PASS" starttime="20210930 14:58:40.484" endtime="20210930 14:58:40.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:58:40.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:58:40.485" endtime="20210930 14:58:40.486"/>
</kw>
<status status="PASS" starttime="20210930 14:58:33.013" endtime="20210930 14:58:40.486"/>
</kw>
<msg timestamp="20210930 14:58:40.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:58:33.012" endtime="20210930 14:58:40.486"/>
</kw>
<status status="PASS" starttime="20210930 14:58:33.010" endtime="20210930 14:58:40.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:58:40.492" level="INFO">Running command 'ozone sh volume info o3://om:9862/66901-rpcwoport | jq -r '. | select(.name=="66901-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:58:49.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:58:49.717" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210930 14:58:40.489" endtime="20210930 14:58:49.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:58:49.718" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210930 14:58:49.717" endtime="20210930 14:58:49.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:58:49.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:58:49.718" endtime="20210930 14:58:49.719"/>
</kw>
<status status="PASS" starttime="20210930 14:58:40.488" endtime="20210930 14:58:49.720"/>
</kw>
<msg timestamp="20210930 14:58:49.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:58:40.488" endtime="20210930 14:58:49.720"/>
</kw>
<msg timestamp="20210930 14:58:49.720" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210930 14:58:40.487" endtime="20210930 14:58:49.721"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:58:49.721" endtime="20210930 14:58:49.722"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:58:49.731" level="INFO">Running command 'ozone sh bucket create o3://om:9862/66901-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:58:58.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:58:58.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:58:49.724" endtime="20210930 14:58:58.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:58:58.036" level="INFO"/>
<status status="PASS" starttime="20210930 14:58:58.034" endtime="20210930 14:58:58.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:58:58.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:58:58.036" endtime="20210930 14:58:58.037"/>
</kw>
<status status="PASS" starttime="20210930 14:58:49.723" endtime="20210930 14:58:58.037"/>
</kw>
<msg timestamp="20210930 14:58:58.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:58:49.723" endtime="20210930 14:58:58.038"/>
</kw>
<status status="PASS" starttime="20210930 14:58:49.722" endtime="20210930 14:58:58.038"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:58:58.047" level="INFO">Running command 'ozone sh bucket info o3://om:9862/66901-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:59:04.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:59:04.374" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210930 14:58:58.041" endtime="20210930 14:59:04.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:59:04.376" level="INFO">DISK</msg>
<status status="PASS" starttime="20210930 14:59:04.375" endtime="20210930 14:59:04.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:59:04.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:59:04.377" endtime="20210930 14:59:04.377"/>
</kw>
<status status="PASS" starttime="20210930 14:58:58.040" endtime="20210930 14:59:04.378"/>
</kw>
<msg timestamp="20210930 14:59:04.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:58:58.040" endtime="20210930 14:59:04.378"/>
</kw>
<msg timestamp="20210930 14:59:04.378" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210930 14:58:58.038" endtime="20210930 14:59:04.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:59:04.379" endtime="20210930 14:59:04.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:59:04.385" level="INFO">Running command 'ozone sh bucket info o3://om:9862/66901-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:59:13.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:59:13.153" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210930 14:59:04.382" endtime="20210930 14:59:13.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:59:13.154" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210930 14:59:13.153" endtime="20210930 14:59:13.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:59:13.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:59:13.155" endtime="20210930 14:59:13.155"/>
</kw>
<status status="PASS" starttime="20210930 14:59:04.381" endtime="20210930 14:59:13.156"/>
</kw>
<msg timestamp="20210930 14:59:13.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:59:04.381" endtime="20210930 14:59:13.156"/>
</kw>
<msg timestamp="20210930 14:59:13.156" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210930 14:59:04.380" endtime="20210930 14:59:13.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:59:13.157" endtime="20210930 14:59:13.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:59:13.162" level="INFO">Running command 'ozone sh bucket info o3://om:9862/66901-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:59:21.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:59:21.548" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210930 14:59:13.159" endtime="20210930 14:59:21.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:59:21.551" level="INFO">100</msg>
<status status="PASS" starttime="20210930 14:59:21.550" endtime="20210930 14:59:21.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:59:21.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:59:21.552" endtime="20210930 14:59:21.553"/>
</kw>
<status status="PASS" starttime="20210930 14:59:13.159" endtime="20210930 14:59:21.555"/>
</kw>
<msg timestamp="20210930 14:59:21.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:59:13.158" endtime="20210930 14:59:21.555"/>
</kw>
<msg timestamp="20210930 14:59:21.556" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210930 14:59:13.157" endtime="20210930 14:59:21.556"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:59:21.556" endtime="20210930 14:59:21.557"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:59:21.565" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/66901-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:59:29.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:59:29.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:59:21.561" endtime="20210930 14:59:29.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:59:29.455" level="INFO"/>
<status status="PASS" starttime="20210930 14:59:29.454" endtime="20210930 14:59:29.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:59:29.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:59:29.455" endtime="20210930 14:59:29.456"/>
</kw>
<status status="PASS" starttime="20210930 14:59:21.560" endtime="20210930 14:59:29.456"/>
</kw>
<msg timestamp="20210930 14:59:29.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:59:21.559" endtime="20210930 14:59:29.456"/>
</kw>
<status status="PASS" starttime="20210930 14:59:21.557" endtime="20210930 14:59:29.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:59:29.462" level="INFO">Running command 'ozone sh bucket info o3://om:9862/66901-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:59:38.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:59:38.395" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210930 14:59:29.459" endtime="20210930 14:59:38.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:59:38.398" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210930 14:59:38.397" endtime="20210930 14:59:38.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:59:38.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:59:38.399" endtime="20210930 14:59:38.400"/>
</kw>
<status status="PASS" starttime="20210930 14:59:29.458" endtime="20210930 14:59:38.400"/>
</kw>
<msg timestamp="20210930 14:59:38.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:59:29.458" endtime="20210930 14:59:38.401"/>
</kw>
<msg timestamp="20210930 14:59:38.401" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210930 14:59:29.457" endtime="20210930 14:59:38.401"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:59:38.401" endtime="20210930 14:59:38.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:59:38.410" level="INFO">Running command 'ozone sh bucket info o3://om:9862/66901-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:59:47.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:59:47.610" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210930 14:59:38.405" endtime="20210930 14:59:47.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:59:47.612" level="INFO">1000</msg>
<status status="PASS" starttime="20210930 14:59:47.611" endtime="20210930 14:59:47.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:59:47.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:59:47.613" endtime="20210930 14:59:47.613"/>
</kw>
<status status="PASS" starttime="20210930 14:59:38.404" endtime="20210930 14:59:47.614"/>
</kw>
<msg timestamp="20210930 14:59:47.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:59:38.403" endtime="20210930 14:59:47.614"/>
</kw>
<msg timestamp="20210930 14:59:47.615" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210930 14:59:38.402" endtime="20210930 14:59:47.615"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:59:47.615" endtime="20210930 14:59:47.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:59:47.622" level="INFO">Running command 'ozone sh bucket list o3://om:9862/66901-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:59:56.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:59:56.165" level="INFO">${output} = 66901-rpcwoport</msg>
<status status="PASS" starttime="20210930 14:59:47.619" endtime="20210930 14:59:56.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:59:56.167" level="INFO">66901-rpcwoport</msg>
<status status="PASS" starttime="20210930 14:59:56.166" endtime="20210930 14:59:56.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:59:56.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:59:56.167" endtime="20210930 14:59:56.168"/>
</kw>
<status status="PASS" starttime="20210930 14:59:47.618" endtime="20210930 14:59:56.168"/>
</kw>
<msg timestamp="20210930 14:59:56.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:59:47.618" endtime="20210930 14:59:56.168"/>
</kw>
<msg timestamp="20210930 14:59:56.169" level="INFO">${result} = 66901-rpcwoport</msg>
<status status="PASS" starttime="20210930 14:59:47.616" endtime="20210930 14:59:56.169"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 14:59:56.169" endtime="20210930 14:59:56.170"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:59:56.175" level="INFO">Running command 'ozone sh key put o3://om:9862/66901-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:02:57.436" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210930 14:59:56.172" endtime="20210930 15:02:57.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.437" endtime="20210930 15:02:57.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.437" endtime="20210930 15:02:57.437"/>
</kw>
<status status="FAIL" starttime="20210930 14:59:56.172" endtime="20210930 15:02:57.438"/>
</kw>
<msg timestamp="20210930 15:02:57.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210930 14:59:56.171" endtime="20210930 15:02:57.438"/>
</kw>
<status status="FAIL" starttime="20210930 14:59:56.171" endtime="20210930 15:02:57.438"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.438" endtime="20210930 15:02:57.438"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.438" endtime="20210930 15:02:57.439"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.439" endtime="20210930 15:02:57.439"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.439" endtime="20210930 15:02:57.439"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.439" endtime="20210930 15:02:57.439"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.439" endtime="20210930 15:02:57.439"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.439" endtime="20210930 15:02:57.439"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.440" endtime="20210930 15:02:57.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.441" endtime="20210930 15:02:57.441"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.441" endtime="20210930 15:02:57.441"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.441" endtime="20210930 15:02:57.442"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.442" endtime="20210930 15:02:57.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.442" endtime="20210930 15:02:57.442"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.442" endtime="20210930 15:02:57.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.443" endtime="20210930 15:02:57.443"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.443" endtime="20210930 15:02:57.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.443" endtime="20210930 15:02:57.444"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.444" endtime="20210930 15:02:57.444"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.445" endtime="20210930 15:02:57.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.445" endtime="20210930 15:02:57.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.445" endtime="20210930 15:02:57.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.446" endtime="20210930 15:02:57.446"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.446" endtime="20210930 15:02:57.446"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.446" endtime="20210930 15:02:57.446"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.446" endtime="20210930 15:02:57.446"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.446" endtime="20210930 15:02:57.446"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.447" endtime="20210930 15:02:57.447"/>
</kw>
<status status="FAIL" starttime="20210930 14:59:56.170" endtime="20210930 15:02:57.447"/>
</kw>
<status status="FAIL" starttime="20210930 14:59:56.170" endtime="20210930 15:02:57.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.447" endtime="20210930 15:02:57.447"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.447" endtime="20210930 15:02:57.447"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.447" endtime="20210930 15:02:57.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.448" endtime="20210930 15:02:57.448"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.448" endtime="20210930 15:02:57.448"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.448" endtime="20210930 15:02:57.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.448" endtime="20210930 15:02:57.448"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.448" endtime="20210930 15:02:57.448"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.448" endtime="20210930 15:02:57.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.449" endtime="20210930 15:02:57.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.449" endtime="20210930 15:02:57.449"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.449" endtime="20210930 15:02:57.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.449" endtime="20210930 15:02:57.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.449" endtime="20210930 15:02:57.449"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.450" endtime="20210930 15:02:57.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.450" endtime="20210930 15:02:57.450"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.450" endtime="20210930 15:02:57.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.450" endtime="20210930 15:02:57.450"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.450" endtime="20210930 15:02:57.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.450" endtime="20210930 15:02:57.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.451" endtime="20210930 15:02:57.451"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.451" endtime="20210930 15:02:57.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.451" endtime="20210930 15:02:57.451"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:02:57.451" endtime="20210930 15:02:57.451"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.452" endtime="20210930 15:02:57.452"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:02:57.452" endtime="20210930 15:02:57.452"/>
</kw>
<status status="FAIL" starttime="20210930 14:57:57.521" endtime="20210930 15:02:57.452"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210930 14:57:57.435" endtime="20210930 15:02:57.452">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:02:57.461" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:02:57.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:02:57.467" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 15:02:57.458" endtime="20210930 15:02:57.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:02:57.468" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 15:02:57.467" endtime="20210930 15:02:57.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:02:57.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:02:57.469" endtime="20210930 15:02:57.470"/>
</kw>
<status status="PASS" starttime="20210930 15:02:57.457" endtime="20210930 15:02:57.470"/>
</kw>
<msg timestamp="20210930 15:02:57.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:02:57.457" endtime="20210930 15:02:57.471"/>
</kw>
<msg timestamp="20210930 15:02:57.471" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 15:02:57.456" endtime="20210930 15:02:57.472"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 15:02:57.473" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 15:02:57.472" endtime="20210930 15:02:57.473"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:02:57.494" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:02:57.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:02:57.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:02:57.477" endtime="20210930 15:02:57.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:02:57.541" level="INFO"/>
<status status="PASS" starttime="20210930 15:02:57.540" endtime="20210930 15:02:57.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:02:57.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:02:57.541" endtime="20210930 15:02:57.542"/>
</kw>
<status status="PASS" starttime="20210930 15:02:57.476" endtime="20210930 15:02:57.542"/>
</kw>
<msg timestamp="20210930 15:02:57.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:02:57.476" endtime="20210930 15:02:57.542"/>
</kw>
<status status="PASS" starttime="20210930 15:02:57.475" endtime="20210930 15:02:57.543"/>
</kw>
<status status="PASS" starttime="20210930 15:02:57.474" endtime="20210930 15:02:57.543"/>
</kw>
<status status="PASS" starttime="20210930 15:02:57.455" endtime="20210930 15:02:57.543"/>
</kw>
<status status="PASS" starttime="20210930 15:02:57.454" endtime="20210930 15:02:57.543"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:02:57.550" level="INFO">Running command 'ozone sh volume create o3://om:9862/66901-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:03:03.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:03:03.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:02:57.548" endtime="20210930 15:03:03.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:03:03.298" level="INFO"/>
<status status="PASS" starttime="20210930 15:03:03.297" endtime="20210930 15:03:03.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:03:03.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:03:03.298" endtime="20210930 15:03:03.299"/>
</kw>
<status status="PASS" starttime="20210930 15:02:57.547" endtime="20210930 15:03:03.300"/>
</kw>
<msg timestamp="20210930 15:03:03.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:02:57.546" endtime="20210930 15:03:03.300"/>
</kw>
<status status="PASS" starttime="20210930 15:02:57.545" endtime="20210930 15:03:03.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:03:03.306" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/66901-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:03:11.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:03:11.660" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:03:03.303" endtime="20210930 15:03:11.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:03:11.661" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:03:11.661" endtime="20210930 15:03:11.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:03:11.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:03:11.662" endtime="20210930 15:03:11.662"/>
</kw>
<status status="PASS" starttime="20210930 15:03:03.302" endtime="20210930 15:03:11.663"/>
</kw>
<msg timestamp="20210930 15:03:11.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:03:03.302" endtime="20210930 15:03:11.663"/>
</kw>
<msg timestamp="20210930 15:03:11.663" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:03:03.301" endtime="20210930 15:03:11.663"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:03:11.664" endtime="20210930 15:03:11.665"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:03:11.672" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/66901-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:03:19.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:03:19.231" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210930 15:03:11.668" endtime="20210930 15:03:19.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:03:19.233" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210930 15:03:19.232" endtime="20210930 15:03:19.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:03:19.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:03:19.233" endtime="20210930 15:03:19.234"/>
</kw>
<status status="PASS" starttime="20210930 15:03:11.667" endtime="20210930 15:03:19.234"/>
</kw>
<msg timestamp="20210930 15:03:19.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:03:11.666" endtime="20210930 15:03:19.234"/>
</kw>
<msg timestamp="20210930 15:03:19.235" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210930 15:03:11.665" endtime="20210930 15:03:19.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:03:19.240" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/66901-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:03:27.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:03:27.626" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210930 15:03:19.237" endtime="20210930 15:03:27.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:03:27.627" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:03:27.626" endtime="20210930 15:03:27.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:03:27.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:03:27.628" endtime="20210930 15:03:27.628"/>
</kw>
<status status="PASS" starttime="20210930 15:03:19.237" endtime="20210930 15:03:27.629"/>
</kw>
<msg timestamp="20210930 15:03:27.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:03:19.236" endtime="20210930 15:03:27.629"/>
</kw>
<msg timestamp="20210930 15:03:27.629" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210930 15:03:19.235" endtime="20210930 15:03:27.629"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:03:27.630" endtime="20210930 15:03:27.631"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:03:27.637" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/66901-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:03:35.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:03:35.433" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210930 15:03:27.634" endtime="20210930 15:03:35.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:03:35.435" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210930 15:03:35.434" endtime="20210930 15:03:35.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:03:35.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:03:35.436" endtime="20210930 15:03:35.437"/>
</kw>
<status status="PASS" starttime="20210930 15:03:27.633" endtime="20210930 15:03:35.437"/>
</kw>
<msg timestamp="20210930 15:03:35.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:03:27.633" endtime="20210930 15:03:35.437"/>
</kw>
<msg timestamp="20210930 15:03:35.438" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210930 15:03:27.631" endtime="20210930 15:03:35.438"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:03:35.444" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/66901-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:03:42.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:03:42.078" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210930 15:03:35.441" endtime="20210930 15:03:42.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:03:42.081" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:03:42.079" endtime="20210930 15:03:42.081"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:03:42.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:03:42.081" endtime="20210930 15:03:42.082"/>
</kw>
<status status="PASS" starttime="20210930 15:03:35.440" endtime="20210930 15:03:42.082"/>
</kw>
<msg timestamp="20210930 15:03:42.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:03:35.440" endtime="20210930 15:03:42.082"/>
</kw>
<msg timestamp="20210930 15:03:42.083" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210930 15:03:35.438" endtime="20210930 15:03:42.083"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:03:42.083" endtime="20210930 15:03:42.084"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:03:42.122" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/66901-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:03:49.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:03:49.603" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:03:42.086" endtime="20210930 15:03:49.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:03:49.605" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:03:49.604" endtime="20210930 15:03:49.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:03:49.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:03:49.605" endtime="20210930 15:03:49.606"/>
</kw>
<status status="PASS" starttime="20210930 15:03:42.086" endtime="20210930 15:03:49.606"/>
</kw>
<msg timestamp="20210930 15:03:49.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:03:42.085" endtime="20210930 15:03:49.607"/>
</kw>
<msg timestamp="20210930 15:03:49.607" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:03:42.084" endtime="20210930 15:03:49.607"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:03:49.614" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/66901-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:03:57.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:03:57.617" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210930 15:03:49.610" endtime="20210930 15:03:57.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:03:57.618" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:03:57.617" endtime="20210930 15:03:57.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:03:57.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:03:57.618" endtime="20210930 15:03:57.619"/>
</kw>
<status status="PASS" starttime="20210930 15:03:49.610" endtime="20210930 15:03:57.620"/>
</kw>
<msg timestamp="20210930 15:03:57.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:03:49.609" endtime="20210930 15:03:57.620"/>
</kw>
<msg timestamp="20210930 15:03:57.621" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210930 15:03:49.607" endtime="20210930 15:03:57.621"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:03:57.621" endtime="20210930 15:03:57.621"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:03:57.622" endtime="20210930 15:03:57.623"/>
</kw>
<status status="PASS" starttime="20210930 15:02:57.544" endtime="20210930 15:03:57.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210930 15:02:57.454" endtime="20210930 15:03:57.624"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:03:57.638" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:03:57.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:03:57.645" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 15:03:57.634" endtime="20210930 15:03:57.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:03:57.648" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 15:03:57.646" endtime="20210930 15:03:57.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:03:57.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:03:57.648" endtime="20210930 15:03:57.650"/>
</kw>
<status status="PASS" starttime="20210930 15:03:57.633" endtime="20210930 15:03:57.650"/>
</kw>
<msg timestamp="20210930 15:03:57.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:03:57.632" endtime="20210930 15:03:57.651"/>
</kw>
<msg timestamp="20210930 15:03:57.651" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 15:03:57.631" endtime="20210930 15:03:57.651"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 15:03:57.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 15:03:57.651" endtime="20210930 15:03:57.652"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:03:57.659" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:03:57.685" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:03:57.685" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:03:57.656" endtime="20210930 15:03:57.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:03:57.686" level="INFO"/>
<status status="PASS" starttime="20210930 15:03:57.686" endtime="20210930 15:03:57.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:03:57.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:03:57.687" endtime="20210930 15:03:57.688"/>
</kw>
<status status="PASS" starttime="20210930 15:03:57.654" endtime="20210930 15:03:57.688"/>
</kw>
<msg timestamp="20210930 15:03:57.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:03:57.654" endtime="20210930 15:03:57.688"/>
</kw>
<status status="PASS" starttime="20210930 15:03:57.653" endtime="20210930 15:03:57.689"/>
</kw>
<status status="PASS" starttime="20210930 15:03:57.652" endtime="20210930 15:03:57.689"/>
</kw>
<status status="PASS" starttime="20210930 15:03:57.630" endtime="20210930 15:03:57.689"/>
</kw>
<status status="PASS" starttime="20210930 15:03:57.629" endtime="20210930 15:03:57.689"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:03:57.696" level="INFO">Running command 'ozone sh bucket create o3://om:9862/66901-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:04:05.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:04:05.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:03:57.692" endtime="20210930 15:04:05.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:04:05.770" level="INFO"/>
<status status="PASS" starttime="20210930 15:04:05.769" endtime="20210930 15:04:05.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:04:05.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:04:05.770" endtime="20210930 15:04:05.771"/>
</kw>
<status status="PASS" starttime="20210930 15:03:57.691" endtime="20210930 15:04:05.771"/>
</kw>
<msg timestamp="20210930 15:04:05.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:03:57.691" endtime="20210930 15:04:05.772"/>
</kw>
<status status="PASS" starttime="20210930 15:03:57.690" endtime="20210930 15:04:05.772"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:04:05.777" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/66901-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:04:14.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:04:14.889" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210930 15:04:05.774" endtime="20210930 15:04:14.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:04:14.890" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:04:14.889" endtime="20210930 15:04:14.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:04:14.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:04:14.891" endtime="20210930 15:04:14.892"/>
</kw>
<status status="PASS" starttime="20210930 15:04:05.773" endtime="20210930 15:04:14.893"/>
</kw>
<msg timestamp="20210930 15:04:14.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:04:05.773" endtime="20210930 15:04:14.893"/>
</kw>
<msg timestamp="20210930 15:04:14.894" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210930 15:04:05.772" endtime="20210930 15:04:14.894"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:04:14.894" endtime="20210930 15:04:14.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:04:14.901" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/66901-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:04:22.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:04:22.726" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210930 15:04:14.898" endtime="20210930 15:04:22.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:04:22.728" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210930 15:04:22.727" endtime="20210930 15:04:22.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:04:22.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:04:22.729" endtime="20210930 15:04:22.730"/>
</kw>
<status status="PASS" starttime="20210930 15:04:14.897" endtime="20210930 15:04:22.731"/>
</kw>
<msg timestamp="20210930 15:04:22.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:04:14.897" endtime="20210930 15:04:22.731"/>
</kw>
<msg timestamp="20210930 15:04:22.732" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210930 15:04:14.896" endtime="20210930 15:04:22.732"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:04:22.740" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/66901-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:04:30.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:04:30.975" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210930 15:04:22.736" endtime="20210930 15:04:30.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:04:30.976" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:04:30.975" endtime="20210930 15:04:30.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:04:30.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:04:30.976" endtime="20210930 15:04:30.977"/>
</kw>
<status status="PASS" starttime="20210930 15:04:22.734" endtime="20210930 15:04:30.977"/>
</kw>
<msg timestamp="20210930 15:04:30.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:04:22.734" endtime="20210930 15:04:30.978"/>
</kw>
<msg timestamp="20210930 15:04:30.978" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210930 15:04:22.732" endtime="20210930 15:04:30.978"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:04:30.978" endtime="20210930 15:04:30.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:04:30.991" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/66901-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:04:39.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:04:39.482" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210930 15:04:30.984" endtime="20210930 15:04:39.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:04:39.484" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210930 15:04:39.483" endtime="20210930 15:04:39.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:04:39.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:04:39.484" endtime="20210930 15:04:39.485"/>
</kw>
<status status="PASS" starttime="20210930 15:04:30.982" endtime="20210930 15:04:39.486"/>
</kw>
<msg timestamp="20210930 15:04:39.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:04:30.981" endtime="20210930 15:04:39.486"/>
</kw>
<msg timestamp="20210930 15:04:39.486" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210930 15:04:30.980" endtime="20210930 15:04:39.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:04:39.493" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/66901-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:04:48.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:04:48.023" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210930 15:04:39.489" endtime="20210930 15:04:48.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:04:48.027" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:04:48.024" endtime="20210930 15:04:48.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:04:48.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:04:48.027" endtime="20210930 15:04:48.028"/>
</kw>
<status status="PASS" starttime="20210930 15:04:39.488" endtime="20210930 15:04:48.028"/>
</kw>
<msg timestamp="20210930 15:04:48.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:04:39.488" endtime="20210930 15:04:48.029"/>
</kw>
<msg timestamp="20210930 15:04:48.030" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210930 15:04:39.487" endtime="20210930 15:04:48.030"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:04:48.030" endtime="20210930 15:04:48.032"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:04:48.039" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/66901-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:04:55.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:04:55.805" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:04:48.036" endtime="20210930 15:04:55.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:04:55.806" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:04:55.805" endtime="20210930 15:04:55.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:04:55.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:04:55.806" endtime="20210930 15:04:55.808"/>
</kw>
<status status="PASS" starttime="20210930 15:04:48.035" endtime="20210930 15:04:55.808"/>
</kw>
<msg timestamp="20210930 15:04:55.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:04:48.034" endtime="20210930 15:04:55.809"/>
</kw>
<msg timestamp="20210930 15:04:55.814" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:04:48.032" endtime="20210930 15:04:55.814"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:04:55.819" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/66901-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:05:04.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:05:04.798" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210930 15:04:55.816" endtime="20210930 15:05:04.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:05:04.800" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:05:04.798" endtime="20210930 15:05:04.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:05:04.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:05:04.800" endtime="20210930 15:05:04.801"/>
</kw>
<status status="PASS" starttime="20210930 15:04:55.815" endtime="20210930 15:05:04.801"/>
</kw>
<msg timestamp="20210930 15:05:04.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:04:55.815" endtime="20210930 15:05:04.801"/>
</kw>
<msg timestamp="20210930 15:05:04.802" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210930 15:04:55.814" endtime="20210930 15:05:04.802"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:05:04.802" endtime="20210930 15:05:04.803"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:05:04.803" endtime="20210930 15:05:04.804"/>
</kw>
<status status="PASS" starttime="20210930 15:03:57.689" endtime="20210930 15:05:04.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210930 15:03:57.628" endtime="20210930 15:05:04.805"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:05:04.813" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:05:04.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:05:04.818" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 15:05:04.810" endtime="20210930 15:05:04.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:05:04.819" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 15:05:04.818" endtime="20210930 15:05:04.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:05:04.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:05:04.820" endtime="20210930 15:05:04.820"/>
</kw>
<status status="PASS" starttime="20210930 15:05:04.810" endtime="20210930 15:05:04.821"/>
</kw>
<msg timestamp="20210930 15:05:04.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:05:04.809" endtime="20210930 15:05:04.821"/>
</kw>
<msg timestamp="20210930 15:05:04.821" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 15:05:04.809" endtime="20210930 15:05:04.821"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 15:05:04.822" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 15:05:04.822" endtime="20210930 15:05:04.822"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:05:04.828" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:05:04.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:05:04.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:05:04.825" endtime="20210930 15:05:04.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:05:04.839" level="INFO"/>
<status status="PASS" starttime="20210930 15:05:04.838" endtime="20210930 15:05:04.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:05:04.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:05:04.839" endtime="20210930 15:05:04.840"/>
</kw>
<status status="PASS" starttime="20210930 15:05:04.824" endtime="20210930 15:05:04.840"/>
</kw>
<msg timestamp="20210930 15:05:04.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:05:04.824" endtime="20210930 15:05:04.841"/>
</kw>
<status status="PASS" starttime="20210930 15:05:04.823" endtime="20210930 15:05:04.841"/>
</kw>
<status status="PASS" starttime="20210930 15:05:04.823" endtime="20210930 15:05:04.841"/>
</kw>
<status status="PASS" starttime="20210930 15:05:04.808" endtime="20210930 15:05:04.841"/>
</kw>
<status status="PASS" starttime="20210930 15:05:04.807" endtime="20210930 15:05:04.841"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:05:04.847" level="INFO">Running command 'ozone sh key put o3://om:9862/66901-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:08:17.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:08:17.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:05:04.844" endtime="20210930 15:08:17.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:08:17.858" level="INFO"/>
<status status="PASS" starttime="20210930 15:08:17.857" endtime="20210930 15:08:17.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:08:17.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:08:17.858" endtime="20210930 15:08:17.859"/>
</kw>
<status status="PASS" starttime="20210930 15:05:04.843" endtime="20210930 15:08:17.860"/>
</kw>
<msg timestamp="20210930 15:08:17.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:05:04.843" endtime="20210930 15:08:17.860"/>
</kw>
<status status="PASS" starttime="20210930 15:05:04.842" endtime="20210930 15:08:17.861"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:08:17.868" level="INFO">Running command 'ozone sh key getacl o3://om:9862/66901-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:08:26.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:08:26.032" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210930 15:08:17.865" endtime="20210930 15:08:26.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:08:26.035" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:08:26.033" endtime="20210930 15:08:26.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:08:26.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:08:26.036" endtime="20210930 15:08:26.038"/>
</kw>
<status status="PASS" starttime="20210930 15:08:17.864" endtime="20210930 15:08:26.039"/>
</kw>
<msg timestamp="20210930 15:08:26.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:08:17.863" endtime="20210930 15:08:26.039"/>
</kw>
<msg timestamp="20210930 15:08:26.040" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210930 15:08:17.861" endtime="20210930 15:08:26.040"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:08:26.041" endtime="20210930 15:08:26.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:08:26.052" level="INFO">Running command 'ozone sh key addacl o3://om:9862/66901-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:08:31.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:08:31.999" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 15:08:26.048" endtime="20210930 15:08:31.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:08:32.001" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 15:08:32.000" endtime="20210930 15:08:32.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:08:32.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:08:32.002" endtime="20210930 15:08:32.003"/>
</kw>
<status status="PASS" starttime="20210930 15:08:26.046" endtime="20210930 15:08:32.004"/>
</kw>
<msg timestamp="20210930 15:08:32.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:08:26.045" endtime="20210930 15:08:32.004"/>
</kw>
<msg timestamp="20210930 15:08:32.005" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210930 15:08:26.043" endtime="20210930 15:08:32.005"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:08:32.011" level="INFO">Running command 'ozone sh key getacl o3://om:9862/66901-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:08:40.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:08:40.554" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210930 15:08:32.008" endtime="20210930 15:08:40.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:08:40.555" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:08:40.555" endtime="20210930 15:08:40.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:08:40.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:08:40.556" endtime="20210930 15:08:40.556"/>
</kw>
<status status="PASS" starttime="20210930 15:08:32.007" endtime="20210930 15:08:40.557"/>
</kw>
<msg timestamp="20210930 15:08:40.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:08:32.006" endtime="20210930 15:08:40.557"/>
</kw>
<msg timestamp="20210930 15:08:40.557" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210930 15:08:32.005" endtime="20210930 15:08:40.557"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:08:40.558" endtime="20210930 15:08:40.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:08:40.563" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/66901-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:08:46.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:08:46.317" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210930 15:08:40.561" endtime="20210930 15:08:46.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:08:46.319" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210930 15:08:46.317" endtime="20210930 15:08:46.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:08:46.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:08:46.319" endtime="20210930 15:08:46.320"/>
</kw>
<status status="PASS" starttime="20210930 15:08:40.560" endtime="20210930 15:08:46.321"/>
</kw>
<msg timestamp="20210930 15:08:46.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:08:40.560" endtime="20210930 15:08:46.321"/>
</kw>
<msg timestamp="20210930 15:08:46.321" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210930 15:08:40.559" endtime="20210930 15:08:46.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:08:46.326" level="INFO">Running command 'ozone sh key getacl o3://om:9862/66901-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:08:54.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:08:54.286" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210930 15:08:46.324" endtime="20210930 15:08:54.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:08:54.287" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:08:54.287" endtime="20210930 15:08:54.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:08:54.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:08:54.288" endtime="20210930 15:08:54.288"/>
</kw>
<status status="PASS" starttime="20210930 15:08:46.323" endtime="20210930 15:08:54.289"/>
</kw>
<msg timestamp="20210930 15:08:54.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:08:46.322" endtime="20210930 15:08:54.289"/>
</kw>
<msg timestamp="20210930 15:08:54.289" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210930 15:08:46.322" endtime="20210930 15:08:54.289"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:08:54.289" endtime="20210930 15:08:54.290"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:08:54.294" level="INFO">Running command 'ozone sh key setacl o3://om:9862/66901-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:09:01.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:09:01.699" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:08:54.292" endtime="20210930 15:09:01.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:09:01.701" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:09:01.700" endtime="20210930 15:09:01.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:09:01.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:09:01.701" endtime="20210930 15:09:01.702"/>
</kw>
<status status="PASS" starttime="20210930 15:08:54.291" endtime="20210930 15:09:01.703"/>
</kw>
<msg timestamp="20210930 15:09:01.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:08:54.291" endtime="20210930 15:09:01.704"/>
</kw>
<msg timestamp="20210930 15:09:01.704" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:08:54.290" endtime="20210930 15:09:01.704"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:09:01.718" level="INFO">Running command 'ozone sh key getacl o3://om:9862/66901-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:09:09.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:09:09.570" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210930 15:09:01.712" endtime="20210930 15:09:09.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:09:09.572" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:09:09.571" endtime="20210930 15:09:09.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:09:09.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:09:09.572" endtime="20210930 15:09:09.573"/>
</kw>
<status status="PASS" starttime="20210930 15:09:01.710" endtime="20210930 15:09:09.573"/>
</kw>
<msg timestamp="20210930 15:09:09.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:09:01.708" endtime="20210930 15:09:09.574"/>
</kw>
<msg timestamp="20210930 15:09:09.574" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210930 15:09:01.705" endtime="20210930 15:09:09.574"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:09:09.574" endtime="20210930 15:09:09.575"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:09:09.575" endtime="20210930 15:09:09.576"/>
</kw>
<status status="PASS" starttime="20210930 15:05:04.842" endtime="20210930 15:09:09.576"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210930 15:05:04.806" endtime="20210930 15:09:09.577"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:09:09.584" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:09:09.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:09:09.587" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 15:09:09.582" endtime="20210930 15:09:09.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:09:09.589" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 15:09:09.588" endtime="20210930 15:09:09.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:09:09.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:09:09.589" endtime="20210930 15:09:09.590"/>
</kw>
<status status="PASS" starttime="20210930 15:09:09.581" endtime="20210930 15:09:09.590"/>
</kw>
<msg timestamp="20210930 15:09:09.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:09:09.580" endtime="20210930 15:09:09.591"/>
</kw>
<msg timestamp="20210930 15:09:09.591" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 15:09:09.580" endtime="20210930 15:09:09.591"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 15:09:09.592" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 15:09:09.591" endtime="20210930 15:09:09.592"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:09:09.596" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:09:09.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:09:09.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:09:09.594" endtime="20210930 15:09:09.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:09:09.653" level="INFO"/>
<status status="PASS" starttime="20210930 15:09:09.652" endtime="20210930 15:09:09.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:09:09.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:09:09.654" endtime="20210930 15:09:09.654"/>
</kw>
<status status="PASS" starttime="20210930 15:09:09.594" endtime="20210930 15:09:09.655"/>
</kw>
<msg timestamp="20210930 15:09:09.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:09:09.593" endtime="20210930 15:09:09.655"/>
</kw>
<status status="PASS" starttime="20210930 15:09:09.593" endtime="20210930 15:09:09.656"/>
</kw>
<status status="PASS" starttime="20210930 15:09:09.592" endtime="20210930 15:09:09.656"/>
</kw>
<status status="PASS" starttime="20210930 15:09:09.579" endtime="20210930 15:09:09.656"/>
</kw>
<status status="PASS" starttime="20210930 15:09:09.579" endtime="20210930 15:09:09.656"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:09:09.663" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/66901-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:09:18.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:09:18.265" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210930 15:09:09.660" endtime="20210930 15:09:18.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:09:18.269" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210930 15:09:18.267" endtime="20210930 15:09:18.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:09:18.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:09:18.270" endtime="20210930 15:09:18.271"/>
</kw>
<status status="PASS" starttime="20210930 15:09:09.659" endtime="20210930 15:09:18.272"/>
</kw>
<msg timestamp="20210930 15:09:18.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:09:09.658" endtime="20210930 15:09:18.273"/>
</kw>
<status status="PASS" starttime="20210930 15:09:09.657" endtime="20210930 15:09:18.274"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:09:18.286" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/66901-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:09:24.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:09:24.684" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210930 15:09:18.281" endtime="20210930 15:09:24.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:09:24.687" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:09:24.685" endtime="20210930 15:09:24.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:09:24.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:09:24.688" endtime="20210930 15:09:24.689"/>
</kw>
<status status="PASS" starttime="20210930 15:09:18.279" endtime="20210930 15:09:24.690"/>
</kw>
<msg timestamp="20210930 15:09:24.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:09:18.278" endtime="20210930 15:09:24.691"/>
</kw>
<msg timestamp="20210930 15:09:24.692" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210930 15:09:18.274" endtime="20210930 15:09:24.692"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:09:24.692" endtime="20210930 15:09:24.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:09:24.703" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/66901-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:09:32.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:09:32.554" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210930 15:09:24.699" endtime="20210930 15:09:32.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:09:32.556" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210930 15:09:32.555" endtime="20210930 15:09:32.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:09:32.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:09:32.557" endtime="20210930 15:09:32.558"/>
</kw>
<status status="PASS" starttime="20210930 15:09:24.698" endtime="20210930 15:09:32.558"/>
</kw>
<msg timestamp="20210930 15:09:32.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:09:24.697" endtime="20210930 15:09:32.558"/>
</kw>
<msg timestamp="20210930 15:09:32.559" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210930 15:09:24.695" endtime="20210930 15:09:32.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:09:32.565" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/66901-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:09:40.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:09:40.546" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210930 15:09:32.562" endtime="20210930 15:09:40.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:09:40.549" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:09:40.547" endtime="20210930 15:09:40.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:09:40.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:09:40.549" endtime="20210930 15:09:40.550"/>
</kw>
<status status="PASS" starttime="20210930 15:09:32.561" endtime="20210930 15:09:40.550"/>
</kw>
<msg timestamp="20210930 15:09:40.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:09:32.560" endtime="20210930 15:09:40.550"/>
</kw>
<msg timestamp="20210930 15:09:40.551" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210930 15:09:32.559" endtime="20210930 15:09:40.551"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:09:40.551" endtime="20210930 15:09:40.552"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:09:40.558" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/66901-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:09:48.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:09:48.134" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:09:40.555" endtime="20210930 15:09:48.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:09:48.136" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:09:48.135" endtime="20210930 15:09:48.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:09:48.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:09:48.137" endtime="20210930 15:09:48.139"/>
</kw>
<status status="PASS" starttime="20210930 15:09:40.554" endtime="20210930 15:09:48.139"/>
</kw>
<msg timestamp="20210930 15:09:48.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:09:40.553" endtime="20210930 15:09:48.140"/>
</kw>
<msg timestamp="20210930 15:09:48.140" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210930 15:09:40.552" endtime="20210930 15:09:48.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:09:48.146" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/66901-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:09:56.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:09:56.349" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210930 15:09:48.142" endtime="20210930 15:09:56.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:09:56.350" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:09:56.350" endtime="20210930 15:09:56.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:09:56.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:09:56.351" endtime="20210930 15:09:56.352"/>
</kw>
<status status="PASS" starttime="20210930 15:09:48.142" endtime="20210930 15:09:56.352"/>
</kw>
<msg timestamp="20210930 15:09:56.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:09:48.141" endtime="20210930 15:09:56.352"/>
</kw>
<msg timestamp="20210930 15:09:56.353" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210930 15:09:48.140" endtime="20210930 15:09:56.353"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:09:56.353" endtime="20210930 15:09:56.353"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:09:56.354" endtime="20210930 15:09:56.354"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:09:56.361" level="INFO">Running command 'ozone sh key put o3://om:9862/66901-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:13:06.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:13:06.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:09:56.358" endtime="20210930 15:13:06.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:13:06.713" level="INFO"/>
<status status="PASS" starttime="20210930 15:13:06.711" endtime="20210930 15:13:06.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:13:06.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:13:06.713" endtime="20210930 15:13:06.715"/>
</kw>
<status status="PASS" starttime="20210930 15:09:56.357" endtime="20210930 15:13:06.715"/>
</kw>
<msg timestamp="20210930 15:13:06.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:09:56.356" endtime="20210930 15:13:06.717"/>
</kw>
<status status="PASS" starttime="20210930 15:09:56.354" endtime="20210930 15:13:06.717"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:13:06.721" level="INFO">Running command 'ozone sh key getacl o3://om:9862/66901-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:13:14.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:13:14.749" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210930 15:13:06.719" endtime="20210930 15:13:14.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:13:14.752" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210930 15:13:14.750" endtime="20210930 15:13:14.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:13:14.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:13:14.752" endtime="20210930 15:13:14.754"/>
</kw>
<status status="PASS" starttime="20210930 15:13:06.718" endtime="20210930 15:13:14.755"/>
</kw>
<msg timestamp="20210930 15:13:14.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:13:06.718" endtime="20210930 15:13:14.755"/>
</kw>
<msg timestamp="20210930 15:13:14.756" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210930 15:13:06.717" endtime="20210930 15:13:14.756"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:13:14.756" endtime="20210930 15:13:14.757"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210930 15:13:14.758" endtime="20210930 15:13:14.759"/>
</kw>
<status status="PASS" starttime="20210930 15:09:09.657" endtime="20210930 15:13:14.760"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210930 15:09:09.577" endtime="20210930 15:13:14.760"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:13:14.770" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:13:14.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:13:14.774" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 15:13:14.768" endtime="20210930 15:13:14.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:13:14.775" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 15:13:14.774" endtime="20210930 15:13:14.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:13:14.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:13:14.775" endtime="20210930 15:13:14.776"/>
</kw>
<status status="PASS" starttime="20210930 15:13:14.767" endtime="20210930 15:13:14.776"/>
</kw>
<msg timestamp="20210930 15:13:14.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:13:14.767" endtime="20210930 15:13:14.776"/>
</kw>
<msg timestamp="20210930 15:13:14.776" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 15:13:14.766" endtime="20210930 15:13:14.776"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 15:13:14.777" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 15:13:14.776" endtime="20210930 15:13:14.777"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:13:14.783" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:13:14.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:13:14.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:13:14.780" endtime="20210930 15:13:14.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:13:14.793" level="INFO"/>
<status status="PASS" starttime="20210930 15:13:14.792" endtime="20210930 15:13:14.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:13:14.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:13:14.794" endtime="20210930 15:13:14.795"/>
</kw>
<status status="PASS" starttime="20210930 15:13:14.779" endtime="20210930 15:13:14.796"/>
</kw>
<msg timestamp="20210930 15:13:14.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:13:14.778" endtime="20210930 15:13:14.796"/>
</kw>
<status status="PASS" starttime="20210930 15:13:14.778" endtime="20210930 15:13:14.796"/>
</kw>
<status status="PASS" starttime="20210930 15:13:14.777" endtime="20210930 15:13:14.796"/>
</kw>
<status status="PASS" starttime="20210930 15:13:14.765" endtime="20210930 15:13:14.797"/>
</kw>
<status status="PASS" starttime="20210930 15:13:14.762" endtime="20210930 15:13:14.797"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:13:14.802" level="INFO">Running command 'ozone sh volume info o3:///66901-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:13:22.515" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 15:13:22.516" level="INFO">${output} = VOLUME_NOT_FOUND Volume 66901-rpcwport is not found</msg>
<status status="PASS" starttime="20210930 15:13:14.800" endtime="20210930 15:13:22.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:13:22.517" level="INFO">VOLUME_NOT_FOUND Volume 66901-rpcwport is not found</msg>
<status status="PASS" starttime="20210930 15:13:22.516" endtime="20210930 15:13:22.517"/>
</kw>
<msg timestamp="20210930 15:13:22.518" level="INFO">${result} = VOLUME_NOT_FOUND Volume 66901-rpcwport is not found</msg>
<status status="PASS" starttime="20210930 15:13:14.799" endtime="20210930 15:13:22.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 15:13:22.518" endtime="20210930 15:13:22.519"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:13:22.524" level="INFO">Running command 'ozone sh volume create o3:///66901-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:13:30.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:13:30.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:13:22.521" endtime="20210930 15:13:30.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:13:30.726" level="INFO"/>
<status status="PASS" starttime="20210930 15:13:30.725" endtime="20210930 15:13:30.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:13:30.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:13:30.727" endtime="20210930 15:13:30.729"/>
</kw>
<status status="PASS" starttime="20210930 15:13:22.521" endtime="20210930 15:13:30.729"/>
</kw>
<msg timestamp="20210930 15:13:30.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:13:22.520" endtime="20210930 15:13:30.730"/>
</kw>
<msg timestamp="20210930 15:13:30.731" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210930 15:13:22.519" endtime="20210930 15:13:30.731"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 15:13:30.731" endtime="20210930 15:13:30.732"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:13:30.740" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="66901-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:13:38.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:13:38.737" level="INFO">${output} = {
  "metadata": {},
  "name": "66901-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210930 15:13:30.737" endtime="20210930 15:13:38.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:13:38.738" level="INFO">{
  "metadata": {},
  "name": "66901-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-30T15:13:30.301Z",
  "modificationTime": "2021-09-30T15:13:30.301Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210930 15:13:38.738" endtime="20210930 15:13:38.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:13:38.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:13:38.739" endtime="20210930 15:13:38.740"/>
</kw>
<status status="PASS" starttime="20210930 15:13:30.735" endtime="20210930 15:13:38.740"/>
</kw>
<msg timestamp="20210930 15:13:38.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:13:30.735" endtime="20210930 15:13:38.740"/>
</kw>
<msg timestamp="20210930 15:13:38.741" level="INFO">${result} = {
  "metadata": {},
  "name": "66901-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210930 15:13:30.732" endtime="20210930 15:13:38.741"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 15:13:38.741" endtime="20210930 15:13:38.741"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:13:38.748" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="66901-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:13:47.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:13:47.592" level="INFO">${output} = {
  "metadata": {},
  "name": "66901-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210930 15:13:38.744" endtime="20210930 15:13:47.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:13:47.594" level="INFO">{
  "metadata": {},
  "name": "66901-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-30T15:13:30.301Z",
  "modificationTime": "2021-09-30T15:13:30.301Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210930 15:13:47.593" endtime="20210930 15:13:47.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:13:47.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:13:47.594" endtime="20210930 15:13:47.596"/>
</kw>
<status status="PASS" starttime="20210930 15:13:38.743" endtime="20210930 15:13:47.597"/>
</kw>
<msg timestamp="20210930 15:13:47.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:13:38.743" endtime="20210930 15:13:47.597"/>
</kw>
<msg timestamp="20210930 15:13:47.597" level="INFO">${result} = {
  "metadata": {},
  "name": "66901-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210930 15:13:38.742" endtime="20210930 15:13:47.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 15:13:47.597" endtime="20210930 15:13:47.598"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:13:47.606" level="INFO">Running command 'ozone sh volume setquota o3:///66901-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:13:56.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:13:56.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:13:47.601" endtime="20210930 15:13:56.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:13:56.642" level="INFO"/>
<status status="PASS" starttime="20210930 15:13:56.641" endtime="20210930 15:13:56.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:13:56.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:13:56.642" endtime="20210930 15:13:56.643"/>
</kw>
<status status="PASS" starttime="20210930 15:13:47.600" endtime="20210930 15:13:56.643"/>
</kw>
<msg timestamp="20210930 15:13:56.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:13:47.599" endtime="20210930 15:13:56.644"/>
</kw>
<status status="PASS" starttime="20210930 15:13:47.598" endtime="20210930 15:13:56.644"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:13:56.650" level="INFO">Running command 'ozone sh volume info o3:///66901-rpcwport | jq -r '. | select(.name=="66901-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:14:05.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:14:05.453" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210930 15:13:56.647" endtime="20210930 15:14:05.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:14:05.455" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210930 15:14:05.454" endtime="20210930 15:14:05.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:14:05.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:14:05.455" endtime="20210930 15:14:05.456"/>
</kw>
<status status="PASS" starttime="20210930 15:13:56.646" endtime="20210930 15:14:05.457"/>
</kw>
<msg timestamp="20210930 15:14:05.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:13:56.646" endtime="20210930 15:14:05.457"/>
</kw>
<msg timestamp="20210930 15:14:05.457" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210930 15:13:56.644" endtime="20210930 15:14:05.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:14:05.458" endtime="20210930 15:14:05.458"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:14:05.465" level="INFO">Running command 'ozone sh bucket create o3:///66901-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:14:13.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:14:13.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:14:05.461" endtime="20210930 15:14:13.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:14:13.477" level="INFO"/>
<status status="PASS" starttime="20210930 15:14:13.476" endtime="20210930 15:14:13.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:14:13.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:14:13.477" endtime="20210930 15:14:13.478"/>
</kw>
<status status="PASS" starttime="20210930 15:14:05.460" endtime="20210930 15:14:13.478"/>
</kw>
<msg timestamp="20210930 15:14:13.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:14:05.460" endtime="20210930 15:14:13.479"/>
</kw>
<status status="PASS" starttime="20210930 15:14:05.459" endtime="20210930 15:14:13.479"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:14:13.486" level="INFO">Running command 'ozone sh bucket info o3:///66901-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:14:21.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:14:21.526" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210930 15:14:13.482" endtime="20210930 15:14:21.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:14:21.530" level="INFO">DISK</msg>
<status status="PASS" starttime="20210930 15:14:21.528" endtime="20210930 15:14:21.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:14:21.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:14:21.530" endtime="20210930 15:14:21.532"/>
</kw>
<status status="PASS" starttime="20210930 15:14:13.481" endtime="20210930 15:14:21.532"/>
</kw>
<msg timestamp="20210930 15:14:21.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:14:13.481" endtime="20210930 15:14:21.533"/>
</kw>
<msg timestamp="20210930 15:14:21.533" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210930 15:14:13.479" endtime="20210930 15:14:21.533"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:14:21.534" endtime="20210930 15:14:21.534"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:14:21.540" level="INFO">Running command 'ozone sh bucket info o3:///66901-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:14:30.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:14:30.304" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210930 15:14:21.537" endtime="20210930 15:14:30.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:14:30.307" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210930 15:14:30.305" endtime="20210930 15:14:30.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:14:30.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:14:30.308" endtime="20210930 15:14:30.308"/>
</kw>
<status status="PASS" starttime="20210930 15:14:21.536" endtime="20210930 15:14:30.309"/>
</kw>
<msg timestamp="20210930 15:14:30.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:14:21.536" endtime="20210930 15:14:30.309"/>
</kw>
<msg timestamp="20210930 15:14:30.309" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210930 15:14:21.534" endtime="20210930 15:14:30.309"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:14:30.309" endtime="20210930 15:14:30.310"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:14:30.318" level="INFO">Running command 'ozone sh bucket info o3:///66901-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:14:38.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:14:38.948" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210930 15:14:30.314" endtime="20210930 15:14:38.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:14:38.950" level="INFO">100</msg>
<status status="PASS" starttime="20210930 15:14:38.949" endtime="20210930 15:14:38.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:14:38.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:14:38.951" endtime="20210930 15:14:38.952"/>
</kw>
<status status="PASS" starttime="20210930 15:14:30.313" endtime="20210930 15:14:38.953"/>
</kw>
<msg timestamp="20210930 15:14:38.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:14:30.312" endtime="20210930 15:14:38.954"/>
</kw>
<msg timestamp="20210930 15:14:38.954" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210930 15:14:30.310" endtime="20210930 15:14:38.954"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:14:38.955" endtime="20210930 15:14:38.956"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:14:38.963" level="INFO">Running command 'ozone sh bucket setquota o3:///66901-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:14:47.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:14:47.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:14:38.960" endtime="20210930 15:14:47.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:14:47.231" level="INFO"/>
<status status="PASS" starttime="20210930 15:14:47.230" endtime="20210930 15:14:47.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:14:47.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:14:47.232" endtime="20210930 15:14:47.234"/>
</kw>
<status status="PASS" starttime="20210930 15:14:38.958" endtime="20210930 15:14:47.235"/>
</kw>
<msg timestamp="20210930 15:14:47.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:14:38.958" endtime="20210930 15:14:47.236"/>
</kw>
<status status="PASS" starttime="20210930 15:14:38.956" endtime="20210930 15:14:47.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:14:47.245" level="INFO">Running command 'ozone sh bucket info o3:///66901-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:14:56.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:14:56.120" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210930 15:14:47.241" endtime="20210930 15:14:56.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:14:56.123" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210930 15:14:56.121" endtime="20210930 15:14:56.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:14:56.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:14:56.124" endtime="20210930 15:14:56.125"/>
</kw>
<status status="PASS" starttime="20210930 15:14:47.240" endtime="20210930 15:14:56.125"/>
</kw>
<msg timestamp="20210930 15:14:56.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:14:47.239" endtime="20210930 15:14:56.126"/>
</kw>
<msg timestamp="20210930 15:14:56.126" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210930 15:14:47.237" endtime="20210930 15:14:56.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:14:56.127" endtime="20210930 15:14:56.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:14:56.136" level="INFO">Running command 'ozone sh bucket info o3:///66901-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:15:04.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:15:04.772" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210930 15:14:56.132" endtime="20210930 15:15:04.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:15:04.774" level="INFO">1000</msg>
<status status="PASS" starttime="20210930 15:15:04.773" endtime="20210930 15:15:04.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:15:04.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:15:04.774" endtime="20210930 15:15:04.775"/>
</kw>
<status status="PASS" starttime="20210930 15:14:56.130" endtime="20210930 15:15:04.775"/>
</kw>
<msg timestamp="20210930 15:15:04.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:14:56.130" endtime="20210930 15:15:04.775"/>
</kw>
<msg timestamp="20210930 15:15:04.776" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210930 15:14:56.128" endtime="20210930 15:15:04.776"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:15:04.776" endtime="20210930 15:15:04.777"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:15:04.782" level="INFO">Running command 'ozone sh bucket list o3:///66901-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:15:13.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:15:13.999" level="INFO">${output} = 66901-rpcwport</msg>
<status status="PASS" starttime="20210930 15:15:04.779" endtime="20210930 15:15:14.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:15:14.001" level="INFO">66901-rpcwport</msg>
<status status="PASS" starttime="20210930 15:15:14.000" endtime="20210930 15:15:14.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:15:14.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:15:14.001" endtime="20210930 15:15:14.002"/>
</kw>
<status status="PASS" starttime="20210930 15:15:04.779" endtime="20210930 15:15:14.003"/>
</kw>
<msg timestamp="20210930 15:15:14.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:15:04.778" endtime="20210930 15:15:14.003"/>
</kw>
<msg timestamp="20210930 15:15:14.004" level="INFO">${result} = 66901-rpcwport</msg>
<status status="PASS" starttime="20210930 15:15:04.777" endtime="20210930 15:15:14.004"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:15:14.004" endtime="20210930 15:15:14.004"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:15:14.012" level="INFO">Running command 'ozone sh key put o3:///66901-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:18:14.762" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210930 15:15:14.008" endtime="20210930 15:18:14.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.763" endtime="20210930 15:18:14.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.764" endtime="20210930 15:18:14.764"/>
</kw>
<status status="FAIL" starttime="20210930 15:15:14.007" endtime="20210930 15:18:14.764"/>
</kw>
<msg timestamp="20210930 15:18:14.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210930 15:15:14.007" endtime="20210930 15:18:14.765"/>
</kw>
<status status="FAIL" starttime="20210930 15:15:14.006" endtime="20210930 15:18:14.765"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.766" endtime="20210930 15:18:14.766"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.766" endtime="20210930 15:18:14.766"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.766" endtime="20210930 15:18:14.766"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.767" endtime="20210930 15:18:14.767"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.767" endtime="20210930 15:18:14.767"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.768" endtime="20210930 15:18:14.768"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.768" endtime="20210930 15:18:14.768"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.769" endtime="20210930 15:18:14.769"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.769" endtime="20210930 15:18:14.770"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.770" endtime="20210930 15:18:14.770"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.770" endtime="20210930 15:18:14.770"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.770" endtime="20210930 15:18:14.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.771" endtime="20210930 15:18:14.771"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.771" endtime="20210930 15:18:14.771"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.771" endtime="20210930 15:18:14.771"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.771" endtime="20210930 15:18:14.771"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.772" endtime="20210930 15:18:14.772"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.772" endtime="20210930 15:18:14.772"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.772" endtime="20210930 15:18:14.772"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.772" endtime="20210930 15:18:14.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.773" endtime="20210930 15:18:14.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.773" endtime="20210930 15:18:14.773"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.773" endtime="20210930 15:18:14.773"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.773" endtime="20210930 15:18:14.773"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.773" endtime="20210930 15:18:14.774"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.774" endtime="20210930 15:18:14.774"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.774" endtime="20210930 15:18:14.774"/>
</kw>
<status status="FAIL" starttime="20210930 15:15:14.005" endtime="20210930 15:18:14.774"/>
</kw>
<status status="FAIL" starttime="20210930 15:15:14.005" endtime="20210930 15:18:14.774"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.774" endtime="20210930 15:18:14.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.775" endtime="20210930 15:18:14.775"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.775" endtime="20210930 15:18:14.775"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.775" endtime="20210930 15:18:14.775"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.776" endtime="20210930 15:18:14.776"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.776" endtime="20210930 15:18:14.776"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.776" endtime="20210930 15:18:14.777"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.777" endtime="20210930 15:18:14.777"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.777" endtime="20210930 15:18:14.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.778" endtime="20210930 15:18:14.778"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.778" endtime="20210930 15:18:14.778"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.779" endtime="20210930 15:18:14.780"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.780" endtime="20210930 15:18:14.780"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.781" endtime="20210930 15:18:14.781"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.781" endtime="20210930 15:18:14.781"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.781" endtime="20210930 15:18:14.782"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.782" endtime="20210930 15:18:14.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.782" endtime="20210930 15:18:14.782"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.783" endtime="20210930 15:18:14.783"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.783" endtime="20210930 15:18:14.783"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.783" endtime="20210930 15:18:14.783"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.784" endtime="20210930 15:18:14.784"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.785" endtime="20210930 15:18:14.785"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:18:14.785" endtime="20210930 15:18:14.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.785" endtime="20210930 15:18:14.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:18:14.785" endtime="20210930 15:18:14.786"/>
</kw>
<status status="FAIL" starttime="20210930 15:13:14.797" endtime="20210930 15:18:14.786"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210930 15:13:14.761" endtime="20210930 15:18:14.787">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:18:14.800" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:18:14.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:18:14.807" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 15:18:14.797" endtime="20210930 15:18:14.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:18:14.809" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 15:18:14.807" endtime="20210930 15:18:14.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:18:14.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:18:14.809" endtime="20210930 15:18:14.811"/>
</kw>
<status status="PASS" starttime="20210930 15:18:14.795" endtime="20210930 15:18:14.811"/>
</kw>
<msg timestamp="20210930 15:18:14.812" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:18:14.794" endtime="20210930 15:18:14.812"/>
</kw>
<msg timestamp="20210930 15:18:14.812" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 15:18:14.793" endtime="20210930 15:18:14.812"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 15:18:14.813" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 15:18:14.813" endtime="20210930 15:18:14.813"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:18:14.819" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:18:14.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:18:14.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:18:14.817" endtime="20210930 15:18:14.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:18:14.885" level="INFO"/>
<status status="PASS" starttime="20210930 15:18:14.884" endtime="20210930 15:18:14.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:18:14.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:18:14.885" endtime="20210930 15:18:14.886"/>
</kw>
<status status="PASS" starttime="20210930 15:18:14.816" endtime="20210930 15:18:14.886"/>
</kw>
<msg timestamp="20210930 15:18:14.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:18:14.815" endtime="20210930 15:18:14.886"/>
</kw>
<status status="PASS" starttime="20210930 15:18:14.814" endtime="20210930 15:18:14.887"/>
</kw>
<status status="PASS" starttime="20210930 15:18:14.814" endtime="20210930 15:18:14.887"/>
</kw>
<status status="PASS" starttime="20210930 15:18:14.792" endtime="20210930 15:18:14.887"/>
</kw>
<status status="PASS" starttime="20210930 15:18:14.791" endtime="20210930 15:18:14.887"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:18:14.893" level="INFO">Running command 'ozone sh volume info /66901-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:18:23.267" level="INFO">${rc} = 255</msg>
<msg timestamp="20210930 15:18:23.267" level="INFO">${output} = VOLUME_NOT_FOUND Volume 66901-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210930 15:18:14.890" endtime="20210930 15:18:23.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:18:23.269" level="INFO">VOLUME_NOT_FOUND Volume 66901-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210930 15:18:23.268" endtime="20210930 15:18:23.270"/>
</kw>
<msg timestamp="20210930 15:18:23.271" level="INFO">${result} = VOLUME_NOT_FOUND Volume 66901-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210930 15:18:14.890" endtime="20210930 15:18:23.271"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 15:18:23.271" endtime="20210930 15:18:23.272"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:18:23.278" level="INFO">Running command 'ozone sh volume create /66901-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:18:30.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:18:30.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:18:23.275" endtime="20210930 15:18:30.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:18:30.937" level="INFO"/>
<status status="PASS" starttime="20210930 15:18:30.937" endtime="20210930 15:18:30.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:18:30.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:18:30.938" endtime="20210930 15:18:30.939"/>
</kw>
<status status="PASS" starttime="20210930 15:18:23.274" endtime="20210930 15:18:30.939"/>
</kw>
<msg timestamp="20210930 15:18:30.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:18:23.273" endtime="20210930 15:18:30.939"/>
</kw>
<msg timestamp="20210930 15:18:30.940" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210930 15:18:23.273" endtime="20210930 15:18:30.940"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 15:18:30.940" endtime="20210930 15:18:30.940"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:18:30.945" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="66901-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:18:37.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:18:37.790" level="INFO">${output} = {
  "metadata": {},
  "name": "66901-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210930 15:18:30.943" endtime="20210930 15:18:37.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:18:37.792" level="INFO">{
  "metadata": {},
  "name": "66901-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-30T15:18:30.866Z",
  "modificationTime": "2021-09-30T15:18:30.866Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210930 15:18:37.791" endtime="20210930 15:18:37.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:18:37.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:18:37.792" endtime="20210930 15:18:37.793"/>
</kw>
<status status="PASS" starttime="20210930 15:18:30.942" endtime="20210930 15:18:37.793"/>
</kw>
<msg timestamp="20210930 15:18:37.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:18:30.941" endtime="20210930 15:18:37.793"/>
</kw>
<msg timestamp="20210930 15:18:37.794" level="INFO">${result} = {
  "metadata": {},
  "name": "66901-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210930 15:18:30.940" endtime="20210930 15:18:37.794"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 15:18:37.794" endtime="20210930 15:18:37.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:18:37.800" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="66901-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:18:47.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:18:47.319" level="INFO">${output} = {
  "metadata": {},
  "name": "66901-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210930 15:18:37.797" endtime="20210930 15:18:47.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:18:47.323" level="INFO">{
  "metadata": {},
  "name": "66901-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-30T15:18:30.866Z",
  "modificationTime": "2021-09-30T15:18:30.866Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210930 15:18:47.321" endtime="20210930 15:18:47.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:18:47.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:18:47.324" endtime="20210930 15:18:47.325"/>
</kw>
<status status="PASS" starttime="20210930 15:18:37.796" endtime="20210930 15:18:47.326"/>
</kw>
<msg timestamp="20210930 15:18:47.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:18:37.796" endtime="20210930 15:18:47.326"/>
</kw>
<msg timestamp="20210930 15:18:47.327" level="INFO">${result} = {
  "metadata": {},
  "name": "66901-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210930 15:18:37.795" endtime="20210930 15:18:47.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210930 15:18:47.328" endtime="20210930 15:18:47.329"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:18:47.336" level="INFO">Running command 'ozone sh volume setquota /66901-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:18:55.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:18:55.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:18:47.332" endtime="20210930 15:18:55.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:18:55.317" level="INFO"/>
<status status="PASS" starttime="20210930 15:18:55.316" endtime="20210930 15:18:55.318"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:18:55.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:18:55.318" endtime="20210930 15:18:55.319"/>
</kw>
<status status="PASS" starttime="20210930 15:18:47.331" endtime="20210930 15:18:55.320"/>
</kw>
<msg timestamp="20210930 15:18:55.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:18:47.331" endtime="20210930 15:18:55.320"/>
</kw>
<status status="PASS" starttime="20210930 15:18:47.329" endtime="20210930 15:18:55.321"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:18:55.329" level="INFO">Running command 'ozone sh volume info /66901-rpcwoscheme | jq -r '. | select(.name=="66901-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:19:03.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:19:03.832" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210930 15:18:55.325" endtime="20210930 15:19:03.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:19:03.834" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210930 15:19:03.832" endtime="20210930 15:19:03.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:19:03.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:19:03.834" endtime="20210930 15:19:03.836"/>
</kw>
<status status="PASS" starttime="20210930 15:18:55.324" endtime="20210930 15:19:03.836"/>
</kw>
<msg timestamp="20210930 15:19:03.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:18:55.323" endtime="20210930 15:19:03.837"/>
</kw>
<msg timestamp="20210930 15:19:03.837" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210930 15:18:55.321" endtime="20210930 15:19:03.838"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:19:03.838" endtime="20210930 15:19:03.839"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:19:03.844" level="INFO">Running command 'ozone sh bucket create /66901-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:19:11.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:19:11.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:19:03.841" endtime="20210930 15:19:11.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:19:11.869" level="INFO"/>
<status status="PASS" starttime="20210930 15:19:11.868" endtime="20210930 15:19:11.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:19:11.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:19:11.869" endtime="20210930 15:19:11.870"/>
</kw>
<status status="PASS" starttime="20210930 15:19:03.841" endtime="20210930 15:19:11.871"/>
</kw>
<msg timestamp="20210930 15:19:11.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:19:03.840" endtime="20210930 15:19:11.871"/>
</kw>
<status status="PASS" starttime="20210930 15:19:03.839" endtime="20210930 15:19:11.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:19:11.882" level="INFO">Running command 'ozone sh bucket info /66901-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:19:20.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:19:20.670" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210930 15:19:11.878" endtime="20210930 15:19:20.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:19:20.672" level="INFO">DISK</msg>
<status status="PASS" starttime="20210930 15:19:20.671" endtime="20210930 15:19:20.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:19:20.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:19:20.672" endtime="20210930 15:19:20.673"/>
</kw>
<status status="PASS" starttime="20210930 15:19:11.877" endtime="20210930 15:19:20.673"/>
</kw>
<msg timestamp="20210930 15:19:20.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:19:11.875" endtime="20210930 15:19:20.674"/>
</kw>
<msg timestamp="20210930 15:19:20.674" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210930 15:19:11.872" endtime="20210930 15:19:20.674"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:19:20.675" endtime="20210930 15:19:20.675"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:19:20.681" level="INFO">Running command 'ozone sh bucket info /66901-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:19:29.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:19:29.423" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210930 15:19:20.678" endtime="20210930 15:19:29.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:19:29.425" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210930 15:19:29.424" endtime="20210930 15:19:29.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:19:29.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:19:29.425" endtime="20210930 15:19:29.427"/>
</kw>
<status status="PASS" starttime="20210930 15:19:20.677" endtime="20210930 15:19:29.428"/>
</kw>
<msg timestamp="20210930 15:19:29.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:19:20.677" endtime="20210930 15:19:29.428"/>
</kw>
<msg timestamp="20210930 15:19:29.429" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210930 15:19:20.675" endtime="20210930 15:19:29.429"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:19:29.429" endtime="20210930 15:19:29.430"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:19:29.436" level="INFO">Running command 'ozone sh bucket info /66901-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:19:37.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:19:37.752" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210930 15:19:29.433" endtime="20210930 15:19:37.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:19:37.754" level="INFO">100</msg>
<status status="PASS" starttime="20210930 15:19:37.753" endtime="20210930 15:19:37.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:19:37.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:19:37.754" endtime="20210930 15:19:37.756"/>
</kw>
<status status="PASS" starttime="20210930 15:19:29.433" endtime="20210930 15:19:37.757"/>
</kw>
<msg timestamp="20210930 15:19:37.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:19:29.432" endtime="20210930 15:19:37.757"/>
</kw>
<msg timestamp="20210930 15:19:37.757" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210930 15:19:29.431" endtime="20210930 15:19:37.757"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:19:37.758" endtime="20210930 15:19:37.758"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:19:37.763" level="INFO">Running command 'ozone sh bucket setquota /66901-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:19:45.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:19:45.980" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 15:19:37.760" endtime="20210930 15:19:45.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:19:45.981" level="INFO"/>
<status status="PASS" starttime="20210930 15:19:45.980" endtime="20210930 15:19:45.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:19:45.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:19:45.981" endtime="20210930 15:19:45.982"/>
</kw>
<status status="PASS" starttime="20210930 15:19:37.760" endtime="20210930 15:19:45.983"/>
</kw>
<msg timestamp="20210930 15:19:45.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:19:37.759" endtime="20210930 15:19:45.983"/>
</kw>
<status status="PASS" starttime="20210930 15:19:37.759" endtime="20210930 15:19:45.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:19:45.991" level="INFO">Running command 'ozone sh bucket info /66901-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:19:54.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:19:54.768" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210930 15:19:45.988" endtime="20210930 15:19:54.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:19:54.769" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210930 15:19:54.769" endtime="20210930 15:19:54.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:19:54.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:19:54.770" endtime="20210930 15:19:54.770"/>
</kw>
<status status="PASS" starttime="20210930 15:19:45.986" endtime="20210930 15:19:54.771"/>
</kw>
<msg timestamp="20210930 15:19:54.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:19:45.986" endtime="20210930 15:19:54.771"/>
</kw>
<msg timestamp="20210930 15:19:54.771" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210930 15:19:45.984" endtime="20210930 15:19:54.771"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:19:54.772" endtime="20210930 15:19:54.772"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:19:54.779" level="INFO">Running command 'ozone sh bucket info /66901-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:20:03.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:20:03.570" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210930 15:19:54.776" endtime="20210930 15:20:03.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:20:03.571" level="INFO">1000</msg>
<status status="PASS" starttime="20210930 15:20:03.570" endtime="20210930 15:20:03.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:20:03.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:20:03.571" endtime="20210930 15:20:03.572"/>
</kw>
<status status="PASS" starttime="20210930 15:19:54.774" endtime="20210930 15:20:03.573"/>
</kw>
<msg timestamp="20210930 15:20:03.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:19:54.774" endtime="20210930 15:20:03.573"/>
</kw>
<msg timestamp="20210930 15:20:03.573" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210930 15:19:54.772" endtime="20210930 15:20:03.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:20:03.573" endtime="20210930 15:20:03.574"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:20:03.580" level="INFO">Running command 'ozone sh bucket list /66901-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:20:12.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 15:20:12.228" level="INFO">${output} = 66901-rpcwoscheme</msg>
<status status="PASS" starttime="20210930 15:20:03.577" endtime="20210930 15:20:12.228"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 15:20:12.229" level="INFO">66901-rpcwoscheme</msg>
<status status="PASS" starttime="20210930 15:20:12.228" endtime="20210930 15:20:12.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 15:20:12.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 15:20:12.229" endtime="20210930 15:20:12.238"/>
</kw>
<status status="PASS" starttime="20210930 15:20:03.576" endtime="20210930 15:20:12.239"/>
</kw>
<msg timestamp="20210930 15:20:12.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 15:20:03.576" endtime="20210930 15:20:12.240"/>
</kw>
<msg timestamp="20210930 15:20:12.241" level="INFO">${result} = 66901-rpcwoscheme</msg>
<status status="PASS" starttime="20210930 15:20:03.574" endtime="20210930 15:20:12.241"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210930 15:20:12.242" endtime="20210930 15:20:12.243"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 15:20:12.250" level="INFO">Running command 'ozone sh key put /66901-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 15:23:14.790" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210930 15:20:12.247" endtime="20210930 15:23:14.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.791" endtime="20210930 15:23:14.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.792" endtime="20210930 15:23:14.792"/>
</kw>
<status status="FAIL" starttime="20210930 15:20:12.246" endtime="20210930 15:23:14.792"/>
</kw>
<msg timestamp="20210930 15:23:14.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210930 15:20:12.246" endtime="20210930 15:23:14.792"/>
</kw>
<status status="FAIL" starttime="20210930 15:20:12.245" endtime="20210930 15:23:14.793"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.793" endtime="20210930 15:23:14.793"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.793" endtime="20210930 15:23:14.793"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.794" endtime="20210930 15:23:14.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.794" endtime="20210930 15:23:14.794"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.794" endtime="20210930 15:23:14.795"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.795" endtime="20210930 15:23:14.795"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.795" endtime="20210930 15:23:14.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.795" endtime="20210930 15:23:14.795"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.796" endtime="20210930 15:23:14.796"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.796" endtime="20210930 15:23:14.797"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.797" endtime="20210930 15:23:14.797"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.797" endtime="20210930 15:23:14.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.798" endtime="20210930 15:23:14.799"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.799" endtime="20210930 15:23:14.799"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.800" endtime="20210930 15:23:14.800"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.800" endtime="20210930 15:23:14.801"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.801" endtime="20210930 15:23:14.801"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.802" endtime="20210930 15:23:14.802"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.802" endtime="20210930 15:23:14.802"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.802" endtime="20210930 15:23:14.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.803" endtime="20210930 15:23:14.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.803" endtime="20210930 15:23:14.804"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.805" endtime="20210930 15:23:14.805"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.805" endtime="20210930 15:23:14.805"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.806" endtime="20210930 15:23:14.806"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.806" endtime="20210930 15:23:14.807"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.807" endtime="20210930 15:23:14.807"/>
</kw>
<status status="FAIL" starttime="20210930 15:20:12.244" endtime="20210930 15:23:14.808"/>
</kw>
<status status="FAIL" starttime="20210930 15:20:12.244" endtime="20210930 15:23:14.808"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.808" endtime="20210930 15:23:14.809"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.810" endtime="20210930 15:23:14.810"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.810" endtime="20210930 15:23:14.810"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.810" endtime="20210930 15:23:14.811"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.811" endtime="20210930 15:23:14.811"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.811" endtime="20210930 15:23:14.812"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.812" endtime="20210930 15:23:14.812"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.813" endtime="20210930 15:23:14.813"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.813" endtime="20210930 15:23:14.813"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.814" endtime="20210930 15:23:14.814"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.815" endtime="20210930 15:23:14.815"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.815" endtime="20210930 15:23:14.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.816" endtime="20210930 15:23:14.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.816" endtime="20210930 15:23:14.816"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.816" endtime="20210930 15:23:14.816"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.816" endtime="20210930 15:23:14.817"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.817" endtime="20210930 15:23:14.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.818" endtime="20210930 15:23:14.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.819" endtime="20210930 15:23:14.819"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.819" endtime="20210930 15:23:14.820"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.820" endtime="20210930 15:23:14.820"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.820" endtime="20210930 15:23:14.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.821" endtime="20210930 15:23:14.821"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210930 15:23:14.821" endtime="20210930 15:23:14.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.822" endtime="20210930 15:23:14.822"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210930 15:23:14.822" endtime="20210930 15:23:14.822"/>
</kw>
<status status="FAIL" starttime="20210930 15:18:14.888" endtime="20210930 15:23:14.823"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210930 15:18:14.789" endtime="20210930 15:23:14.824">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210930 14:57:57.416" endtime="20210930 15:23:14.829"/>
</suite>
<status status="FAIL" starttime="20210930 14:33:03.150" endtime="20210930 15:23:14.838"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:32:57.614" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:32:57.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:32:57.620" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210930 14:32:57.610" endtime="20210930 14:32:57.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:32:57.621" level="INFO">scm</msg>
<status status="PASS" starttime="20210930 14:32:57.620" endtime="20210930 14:32:57.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:32:57.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:32:57.621" endtime="20210930 14:32:57.622"/>
</kw>
<status status="PASS" starttime="20210930 14:32:57.608" endtime="20210930 14:32:57.622"/>
</kw>
<msg timestamp="20210930 14:32:57.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:32:57.607" endtime="20210930 14:32:57.623"/>
</kw>
<msg timestamp="20210930 14:32:57.623" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210930 14:32:57.607" endtime="20210930 14:32:57.623"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210930 14:32:57.624" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210930 14:32:57.623" endtime="20210930 14:32:57.624"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210930 14:32:57.631" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210930 14:32:57.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210930 14:32:57.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210930 14:32:57.628" endtime="20210930 14:32:57.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210930 14:32:57.646" level="INFO"/>
<status status="PASS" starttime="20210930 14:32:57.644" endtime="20210930 14:32:57.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210930 14:32:57.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210930 14:32:57.646" endtime="20210930 14:32:57.647"/>
</kw>
<status status="PASS" starttime="20210930 14:32:57.626" endtime="20210930 14:32:57.647"/>
</kw>
<msg timestamp="20210930 14:32:57.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210930 14:32:57.626" endtime="20210930 14:32:57.647"/>
</kw>
<status status="PASS" starttime="20210930 14:32:57.625" endtime="20210930 14:32:57.647"/>
</kw>
<status status="PASS" starttime="20210930 14:32:57.625" endtime="20210930 14:32:57.648"/>
</kw>
<status status="PASS" starttime="20210930 14:32:57.606" endtime="20210930 14:32:57.648"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210930 14:32:57.604" endtime="20210930 14:32:57.648"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210930 14:32:57.526" endtime="20210930 14:32:57.649"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="3011811"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
