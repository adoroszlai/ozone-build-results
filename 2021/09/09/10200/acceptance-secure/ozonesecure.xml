<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20210909 12:19:00.022" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:29:11.344" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:29:11.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:29:11.348" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:29:11.341" endtime="20210909 11:29:11.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:29:11.349" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:29:11.349" endtime="20210909 11:29:11.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:29:11.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:29:11.350" endtime="20210909 11:29:11.350"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.340" endtime="20210909 11:29:11.350"/>
</kw>
<msg timestamp="20210909 11:29:11.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:29:11.340" endtime="20210909 11:29:11.351"/>
</kw>
<msg timestamp="20210909 11:29:11.351" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210909 11:29:11.339" endtime="20210909 11:29:11.351"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:29:11.355" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:29:11.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:29:11.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:29:11.353" endtime="20210909 11:29:11.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:29:11.363" level="INFO"/>
<status status="PASS" starttime="20210909 11:29:11.363" endtime="20210909 11:29:11.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:29:11.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:29:11.364" endtime="20210909 11:29:11.364"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.353" endtime="20210909 11:29:11.364"/>
</kw>
<msg timestamp="20210909 11:29:11.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:29:11.352" endtime="20210909 11:29:11.365"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.352" endtime="20210909 11:29:11.365"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.351" endtime="20210909 11:29:11.365"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.339" endtime="20210909 11:29:11.365"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.338" endtime="20210909 11:29:11.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:29:11.369" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:29:11.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:29:11.493" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210909 11:29:11.367" endtime="20210909 11:29:11.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:29:11.495" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 09 Sep 2021 11:29:11 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC/ffZTgTHQzgcGdZfLWcHUzpBOOTRngf7cruHp4s04kuXRrzUip8Rz6esAObk2FdSADB4OLL4PM9z+Nl3OtvJtnql
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1631222951480&amp;s=s6YWT/6b+ZB2TZeQuAl9dHfxP9/dpYva5dDea2sQoSE="; Path=/; HttpOnly
Last-Modified: Thu, 09 Sep 2021 11:15:12 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210909 11:29:11.494" endtime="20210909 11:29:11.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:29:11.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:29:11.495" endtime="20210909 11:29:11.496"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.366" endtime="20210909 11:29:11.496"/>
</kw>
<msg timestamp="20210909 11:29:11.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:29:11.366" endtime="20210909 11:29:11.496"/>
</kw>
<msg timestamp="20210909 11:29:11.496" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210909 11:29:11.365" endtime="20210909 11:29:11.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:29:11.497" endtime="20210909 11:29:11.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210909 11:29:11.337" endtime="20210909 11:29:11.498"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:29:11.504" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:29:11.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:29:11.509" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:29:11.501" endtime="20210909 11:29:11.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:29:11.510" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:29:11.510" endtime="20210909 11:29:11.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:29:11.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:29:11.510" endtime="20210909 11:29:11.511"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.501" endtime="20210909 11:29:11.511"/>
</kw>
<msg timestamp="20210909 11:29:11.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:29:11.501" endtime="20210909 11:29:11.512"/>
</kw>
<msg timestamp="20210909 11:29:11.512" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:29:11.500" endtime="20210909 11:29:11.512"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:29:11.514" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:29:11.512" endtime="20210909 11:29:11.514"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:29:11.518" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:29:11.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:29:11.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:29:11.516" endtime="20210909 11:29:11.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:29:11.526" level="INFO"/>
<status status="PASS" starttime="20210909 11:29:11.526" endtime="20210909 11:29:11.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:29:11.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:29:11.527" endtime="20210909 11:29:11.527"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.515" endtime="20210909 11:29:11.527"/>
</kw>
<msg timestamp="20210909 11:29:11.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:29:11.515" endtime="20210909 11:29:11.528"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.514" endtime="20210909 11:29:11.528"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.514" endtime="20210909 11:29:11.528"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.500" endtime="20210909 11:29:11.528"/>
</kw>
<status status="PASS" starttime="20210909 11:29:11.499" endtime="20210909 11:29:11.528"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:29:11.532" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:11.499" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210909 11:29:11.530" endtime="20210909 11:34:11.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210909 11:34:11.500" endtime="20210909 11:34:11.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210909 11:34:11.500" endtime="20210909 11:34:11.500"/>
</kw>
<status status="FAIL" starttime="20210909 11:29:11.529" endtime="20210909 11:34:11.501"/>
</kw>
<msg timestamp="20210909 11:34:11.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210909 11:29:11.529" endtime="20210909 11:34:11.501"/>
</kw>
<status status="FAIL" starttime="20210909 11:29:11.528" endtime="20210909 11:34:11.502"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210909 11:34:11.502" endtime="20210909 11:34:11.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 11:34:11.502" endtime="20210909 11:34:11.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210909 11:29:11.498" endtime="20210909 11:34:11.503">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210909 11:29:11.311" endtime="20210909 11:34:11.504"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:11.516" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:14.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:34:14.468" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210909 11:34:11.513" endtime="20210909 11:34:14.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:14.470" level="INFO">om</msg>
<status status="PASS" starttime="20210909 11:34:14.469" endtime="20210909 11:34:14.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:14.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:14.470" endtime="20210909 11:34:14.471"/>
</kw>
<status status="PASS" starttime="20210909 11:34:11.512" endtime="20210909 11:34:14.471"/>
</kw>
<msg timestamp="20210909 11:34:14.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:34:11.512" endtime="20210909 11:34:14.472"/>
</kw>
<msg timestamp="20210909 11:34:14.472" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210909 11:34:11.511" endtime="20210909 11:34:14.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:34:14.472" endtime="20210909 11:34:14.472"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:14.477" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:16.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:34:16.296" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210909 11:34:14.475" endtime="20210909 11:34:16.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:16.297" level="INFO">om</msg>
<status status="PASS" starttime="20210909 11:34:16.296" endtime="20210909 11:34:16.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:16.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:16.297" endtime="20210909 11:34:16.298"/>
</kw>
<status status="PASS" starttime="20210909 11:34:14.474" endtime="20210909 11:34:16.298"/>
</kw>
<msg timestamp="20210909 11:34:16.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:34:14.473" endtime="20210909 11:34:16.298"/>
</kw>
<msg timestamp="20210909 11:34:16.299" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210909 11:34:14.473" endtime="20210909 11:34:16.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:34:16.299" endtime="20210909 11:34:16.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210909 11:34:11.511" endtime="20210909 11:34:16.300"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:16.305" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:18.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:34:18.123" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:34:16.302" endtime="20210909 11:34:18.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:18.125" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:34:18.124" endtime="20210909 11:34:18.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:18.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:18.126" endtime="20210909 11:34:18.128"/>
</kw>
<status status="PASS" starttime="20210909 11:34:16.302" endtime="20210909 11:34:18.129"/>
</kw>
<msg timestamp="20210909 11:34:18.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:34:16.302" endtime="20210909 11:34:18.129"/>
</kw>
<msg timestamp="20210909 11:34:18.130" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210909 11:34:16.301" endtime="20210909 11:34:18.130"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:34:18.130" endtime="20210909 11:34:18.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:18.138" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:21.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:34:21.235" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:34:18.134" endtime="20210909 11:34:21.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:21.236" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:34:21.235" endtime="20210909 11:34:21.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:21.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:21.236" endtime="20210909 11:34:21.237"/>
</kw>
<status status="PASS" starttime="20210909 11:34:18.133" endtime="20210909 11:34:21.238"/>
</kw>
<msg timestamp="20210909 11:34:21.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:34:18.132" endtime="20210909 11:34:21.238"/>
</kw>
<msg timestamp="20210909 11:34:21.238" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210909 11:34:18.131" endtime="20210909 11:34:21.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:34:21.239" endtime="20210909 11:34:21.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210909 11:34:16.300" endtime="20210909 11:34:21.240"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:21.247" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:23.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:34:23.651" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210909 11:34:21.244" endtime="20210909 11:34:23.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:23.653" level="INFO">om</msg>
<status status="PASS" starttime="20210909 11:34:23.652" endtime="20210909 11:34:23.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:23.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:23.653" endtime="20210909 11:34:23.654"/>
</kw>
<status status="PASS" starttime="20210909 11:34:21.243" endtime="20210909 11:34:23.654"/>
</kw>
<msg timestamp="20210909 11:34:23.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:34:21.243" endtime="20210909 11:34:23.655"/>
</kw>
<msg timestamp="20210909 11:34:23.655" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210909 11:34:21.241" endtime="20210909 11:34:23.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:34:23.655" endtime="20210909 11:34:23.656"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:34:23.656" endtime="20210909 11:34:23.656"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:23.661" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:26.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:34:26.193" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210909 11:34:23.658" endtime="20210909 11:34:26.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:26.195" level="INFO">om</msg>
<status status="PASS" starttime="20210909 11:34:26.195" endtime="20210909 11:34:26.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:26.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:26.196" endtime="20210909 11:34:26.196"/>
</kw>
<status status="PASS" starttime="20210909 11:34:23.657" endtime="20210909 11:34:26.197"/>
</kw>
<msg timestamp="20210909 11:34:26.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:34:23.657" endtime="20210909 11:34:26.197"/>
</kw>
<msg timestamp="20210909 11:34:26.197" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210909 11:34:23.656" endtime="20210909 11:34:26.197"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:34:26.198" endtime="20210909 11:34:26.198"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:34:26.198" endtime="20210909 11:34:26.199"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210909 11:34:21.240" endtime="20210909 11:34:26.199"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:26.204" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:29.116" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:34:29.116" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210909 11:34:26.202" endtime="20210909 11:34:29.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:29.117" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210909 11:34:29.116" endtime="20210909 11:34:29.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:29.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:29.117" endtime="20210909 11:34:29.118"/>
</kw>
<msg timestamp="20210909 11:34:29.118" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210909 11:34:26.201" endtime="20210909 11:34:29.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:34:29.118" endtime="20210909 11:34:29.119"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:29.122" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:31.872" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:34:31.872" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210909 11:34:29.120" endtime="20210909 11:34:31.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:31.874" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210909 11:34:31.873" endtime="20210909 11:34:31.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:31.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:31.875" endtime="20210909 11:34:31.875"/>
</kw>
<msg timestamp="20210909 11:34:31.876" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210909 11:34:29.119" endtime="20210909 11:34:31.876"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:34:31.876" endtime="20210909 11:34:31.876"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210909 11:34:26.200" endtime="20210909 11:34:31.876"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210909 11:34:11.506" endtime="20210909 11:34:31.878"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210909 11:34:31.898" level="INFO">${random} = 29132</msg>
<status status="PASS" starttime="20210909 11:34:31.898" endtime="20210909 11:34:31.898"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:34:31.900" level="INFO">${source} = 29132-source</msg>
<status status="PASS" starttime="20210909 11:34:31.899" endtime="20210909 11:34:31.900"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:34:31.902" level="INFO">${target} = 29132-target</msg>
<status status="PASS" starttime="20210909 11:34:31.900" endtime="20210909 11:34:31.902"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:31.907" level="INFO">Running command 'ozone sh volume create 29132-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:39.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:34:39.946" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:34:31.904" endtime="20210909 11:34:39.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:39.949" level="INFO"/>
<status status="PASS" starttime="20210909 11:34:39.948" endtime="20210909 11:34:39.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:39.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:39.950" endtime="20210909 11:34:39.951"/>
</kw>
<status status="PASS" starttime="20210909 11:34:31.904" endtime="20210909 11:34:39.952"/>
</kw>
<msg timestamp="20210909 11:34:39.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:34:31.903" endtime="20210909 11:34:39.953"/>
</kw>
<status status="PASS" starttime="20210909 11:34:31.903" endtime="20210909 11:34:39.953"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:39.961" level="INFO">Running command 'ozone sh volume create 29132-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:47.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:34:47.544" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:34:39.958" endtime="20210909 11:34:47.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:47.545" level="INFO"/>
<status status="PASS" starttime="20210909 11:34:47.545" endtime="20210909 11:34:47.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:47.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:47.546" endtime="20210909 11:34:47.547"/>
</kw>
<status status="PASS" starttime="20210909 11:34:39.956" endtime="20210909 11:34:47.548"/>
</kw>
<msg timestamp="20210909 11:34:47.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:34:39.955" endtime="20210909 11:34:47.548"/>
</kw>
<status status="PASS" starttime="20210909 11:34:39.954" endtime="20210909 11:34:47.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:47.558" level="INFO">Running command 'ozone sh bucket create 29132-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:34:55.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:34:55.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:34:47.555" endtime="20210909 11:34:55.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:34:55.417" level="INFO"/>
<status status="PASS" starttime="20210909 11:34:55.416" endtime="20210909 11:34:55.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:34:55.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:34:55.417" endtime="20210909 11:34:55.418"/>
</kw>
<status status="PASS" starttime="20210909 11:34:47.554" endtime="20210909 11:34:55.419"/>
</kw>
<msg timestamp="20210909 11:34:55.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:34:47.552" endtime="20210909 11:34:55.419"/>
</kw>
<status status="PASS" starttime="20210909 11:34:47.550" endtime="20210909 11:34:55.419"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:34:55.424" level="INFO">Running command 'ozone sh key put 29132-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:38:06.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:38:06.115" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:34:55.422" endtime="20210909 11:38:06.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:38:06.119" level="INFO"/>
<status status="PASS" starttime="20210909 11:38:06.117" endtime="20210909 11:38:06.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:38:06.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:38:06.119" endtime="20210909 11:38:06.120"/>
</kw>
<status status="PASS" starttime="20210909 11:34:55.421" endtime="20210909 11:38:06.120"/>
</kw>
<msg timestamp="20210909 11:38:06.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:34:55.420" endtime="20210909 11:38:06.121"/>
</kw>
<status status="PASS" starttime="20210909 11:34:55.420" endtime="20210909 11:38:06.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:38:06.127" level="INFO">Running command 'ozone sh bucket create 29132-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:38:13.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:38:13.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:38:06.124" endtime="20210909 11:38:13.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:38:13.603" level="INFO"/>
<status status="PASS" starttime="20210909 11:38:13.602" endtime="20210909 11:38:13.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:38:13.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:38:13.603" endtime="20210909 11:38:13.604"/>
</kw>
<status status="PASS" starttime="20210909 11:38:06.123" endtime="20210909 11:38:13.604"/>
</kw>
<msg timestamp="20210909 11:38:13.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:38:06.123" endtime="20210909 11:38:13.604"/>
</kw>
<status status="PASS" starttime="20210909 11:38:06.121" endtime="20210909 11:38:13.605"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:38:13.611" level="INFO">Running command 'ozone sh bucket link 29132-source/readable-bucket 29132-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:38:20.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:38:20.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:38:13.608" endtime="20210909 11:38:20.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:38:20.751" level="INFO"/>
<status status="PASS" starttime="20210909 11:38:20.751" endtime="20210909 11:38:20.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:38:20.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:38:20.751" endtime="20210909 11:38:20.752"/>
</kw>
<status status="PASS" starttime="20210909 11:38:13.607" endtime="20210909 11:38:20.752"/>
</kw>
<msg timestamp="20210909 11:38:20.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:38:13.606" endtime="20210909 11:38:20.753"/>
</kw>
<status status="PASS" starttime="20210909 11:38:13.605" endtime="20210909 11:38:20.753"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:38:20.758" level="INFO">Running command 'ozone sh bucket link 29132-source/readable-bucket 29132-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:38:29.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:38:29.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:38:20.756" endtime="20210909 11:38:29.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:38:29.015" level="INFO"/>
<status status="PASS" starttime="20210909 11:38:29.014" endtime="20210909 11:38:29.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:38:29.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:38:29.015" endtime="20210909 11:38:29.015"/>
</kw>
<status status="PASS" starttime="20210909 11:38:20.755" endtime="20210909 11:38:29.016"/>
</kw>
<msg timestamp="20210909 11:38:29.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:38:20.754" endtime="20210909 11:38:29.016"/>
</kw>
<status status="PASS" starttime="20210909 11:38:20.753" endtime="20210909 11:38:29.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:38:29.020" level="INFO">Running command 'ozone sh bucket link 29132-source/unreadable-bucket 29132-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:38:34.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:38:34.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:38:29.018" endtime="20210909 11:38:34.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:38:34.616" level="INFO"/>
<status status="PASS" starttime="20210909 11:38:34.615" endtime="20210909 11:38:34.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:38:34.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:38:34.617" endtime="20210909 11:38:34.618"/>
</kw>
<status status="PASS" starttime="20210909 11:38:29.017" endtime="20210909 11:38:34.619"/>
</kw>
<msg timestamp="20210909 11:38:34.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:38:29.017" endtime="20210909 11:38:34.619"/>
</kw>
<status status="PASS" starttime="20210909 11:38:29.016" endtime="20210909 11:38:34.620"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:38:34.626" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 29132-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:38:42.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:38:42.044" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:38:34.622" endtime="20210909 11:38:42.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:38:42.047" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:38:42.046" endtime="20210909 11:38:42.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:38:42.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:38:42.048" endtime="20210909 11:38:42.049"/>
</kw>
<status status="PASS" starttime="20210909 11:38:34.621" endtime="20210909 11:38:42.050"/>
</kw>
<msg timestamp="20210909 11:38:42.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:38:34.621" endtime="20210909 11:38:42.051"/>
</kw>
<status status="PASS" starttime="20210909 11:38:34.620" endtime="20210909 11:38:42.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:38:42.058" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 29132-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:38:49.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:38:49.159" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:38:42.056" endtime="20210909 11:38:49.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:38:49.161" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:38:49.160" endtime="20210909 11:38:49.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:38:49.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:38:49.161" endtime="20210909 11:38:49.162"/>
</kw>
<status status="PASS" starttime="20210909 11:38:42.054" endtime="20210909 11:38:49.162"/>
</kw>
<msg timestamp="20210909 11:38:49.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:38:42.054" endtime="20210909 11:38:49.163"/>
</kw>
<status status="PASS" starttime="20210909 11:38:42.052" endtime="20210909 11:38:49.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:38:49.168" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 29132-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:38:56.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:38:56.478" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:38:49.166" endtime="20210909 11:38:56.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:38:56.483" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:38:56.479" endtime="20210909 11:38:56.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:38:56.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:38:56.485" endtime="20210909 11:38:56.488"/>
</kw>
<status status="PASS" starttime="20210909 11:38:49.165" endtime="20210909 11:38:56.490"/>
</kw>
<msg timestamp="20210909 11:38:56.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:38:49.164" endtime="20210909 11:38:56.490"/>
</kw>
<status status="PASS" starttime="20210909 11:38:49.163" endtime="20210909 11:38:56.491"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:38:56.499" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 29132-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:39:04.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:39:04.310" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:38:56.495" endtime="20210909 11:39:04.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:39:04.311" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:39:04.310" endtime="20210909 11:39:04.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:39:04.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:39:04.311" endtime="20210909 11:39:04.312"/>
</kw>
<status status="PASS" starttime="20210909 11:38:56.494" endtime="20210909 11:39:04.312"/>
</kw>
<msg timestamp="20210909 11:39:04.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:38:56.493" endtime="20210909 11:39:04.312"/>
</kw>
<status status="PASS" starttime="20210909 11:38:56.491" endtime="20210909 11:39:04.312"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:39:04.317" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 29132-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:39:10.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:39:10.986" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:39:04.314" endtime="20210909 11:39:10.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:39:10.990" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:39:10.987" endtime="20210909 11:39:10.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:39:10.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:39:10.990" endtime="20210909 11:39:10.991"/>
</kw>
<status status="PASS" starttime="20210909 11:39:04.313" endtime="20210909 11:39:10.991"/>
</kw>
<msg timestamp="20210909 11:39:10.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:39:04.313" endtime="20210909 11:39:10.991"/>
</kw>
<status status="PASS" starttime="20210909 11:39:04.313" endtime="20210909 11:39:10.992"/>
</kw>
<status status="PASS" starttime="20210909 11:34:47.550" endtime="20210909 11:39:10.992"/>
</kw>
<status status="PASS" starttime="20210909 11:34:47.549" endtime="20210909 11:39:10.992"/>
</kw>
<status status="PASS" starttime="20210909 11:34:31.897" endtime="20210909 11:39:10.992"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:39:11.004" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:39:11.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:39:11.008" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:39:10.999" endtime="20210909 11:39:11.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:39:11.012" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:39:11.009" endtime="20210909 11:39:11.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:39:11.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:39:11.012" endtime="20210909 11:39:11.013"/>
</kw>
<status status="PASS" starttime="20210909 11:39:10.998" endtime="20210909 11:39:11.013"/>
</kw>
<msg timestamp="20210909 11:39:11.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:39:10.998" endtime="20210909 11:39:11.014"/>
</kw>
<msg timestamp="20210909 11:39:11.015" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:39:10.996" endtime="20210909 11:39:11.015"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:39:11.017" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:39:11.015" endtime="20210909 11:39:11.017"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:39:11.026" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:39:11.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:39:11.061" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:39:11.023" endtime="20210909 11:39:11.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:39:11.062" level="INFO"/>
<status status="PASS" starttime="20210909 11:39:11.061" endtime="20210909 11:39:11.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:39:11.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:39:11.062" endtime="20210909 11:39:11.063"/>
</kw>
<status status="PASS" starttime="20210909 11:39:11.020" endtime="20210909 11:39:11.063"/>
</kw>
<msg timestamp="20210909 11:39:11.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:39:11.020" endtime="20210909 11:39:11.063"/>
</kw>
<status status="PASS" starttime="20210909 11:39:11.019" endtime="20210909 11:39:11.064"/>
</kw>
<status status="PASS" starttime="20210909 11:39:11.019" endtime="20210909 11:39:11.064"/>
</kw>
<status status="PASS" starttime="20210909 11:39:10.995" endtime="20210909 11:39:11.064"/>
</kw>
<status status="PASS" starttime="20210909 11:39:10.995" endtime="20210909 11:39:11.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:39:11.082" level="INFO">Running command 'ozone sh bucket link 29132-source/no-such-bucket 29132-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:39:17.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:39:17.779" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:39:11.066" endtime="20210909 11:39:17.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:39:17.780" level="INFO"/>
<status status="PASS" starttime="20210909 11:39:17.779" endtime="20210909 11:39:17.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:39:17.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:39:17.781" endtime="20210909 11:39:17.781"/>
</kw>
<status status="PASS" starttime="20210909 11:39:11.065" endtime="20210909 11:39:17.781"/>
</kw>
<msg timestamp="20210909 11:39:17.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:39:11.065" endtime="20210909 11:39:17.782"/>
</kw>
<status status="PASS" starttime="20210909 11:39:11.064" endtime="20210909 11:39:17.782"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:39:17.785" level="INFO">Running command 'ozone sh key list 29132-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:39:25.288" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:39:25.288" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210909 11:39:17.783" endtime="20210909 11:39:25.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:39:25.290" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210909 11:39:25.289" endtime="20210909 11:39:25.290"/>
</kw>
<msg timestamp="20210909 11:39:25.291" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210909 11:39:17.782" endtime="20210909 11:39:25.291"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:39:25.292" endtime="20210909 11:39:25.293"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:39:10.992" endtime="20210909 11:39:25.294"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:39:25.307" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:39:25.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:39:25.313" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:39:25.303" endtime="20210909 11:39:25.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:39:25.315" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:39:25.314" endtime="20210909 11:39:25.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:39:25.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:39:25.316" endtime="20210909 11:39:25.317"/>
</kw>
<status status="PASS" starttime="20210909 11:39:25.301" endtime="20210909 11:39:25.318"/>
</kw>
<msg timestamp="20210909 11:39:25.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:39:25.300" endtime="20210909 11:39:25.318"/>
</kw>
<msg timestamp="20210909 11:39:25.319" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:39:25.299" endtime="20210909 11:39:25.319"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:39:25.320" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:39:25.319" endtime="20210909 11:39:25.320"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:39:25.327" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:39:25.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:39:25.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:39:25.324" endtime="20210909 11:39:25.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:39:25.341" level="INFO"/>
<status status="PASS" starttime="20210909 11:39:25.340" endtime="20210909 11:39:25.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:39:25.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:39:25.342" endtime="20210909 11:39:25.343"/>
</kw>
<status status="PASS" starttime="20210909 11:39:25.323" endtime="20210909 11:39:25.343"/>
</kw>
<msg timestamp="20210909 11:39:25.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:39:25.323" endtime="20210909 11:39:25.343"/>
</kw>
<status status="PASS" starttime="20210909 11:39:25.321" endtime="20210909 11:39:25.344"/>
</kw>
<status status="PASS" starttime="20210909 11:39:25.320" endtime="20210909 11:39:25.344"/>
</kw>
<status status="PASS" starttime="20210909 11:39:25.298" endtime="20210909 11:39:25.344"/>
</kw>
<status status="PASS" starttime="20210909 11:39:25.297" endtime="20210909 11:39:25.344"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:39:25.349" level="INFO">Running command 'ozone sh bucket link 29132-source/bucket1 29132-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:39:32.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:39:32.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:39:25.347" endtime="20210909 11:39:32.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:39:32.578" level="INFO"/>
<status status="PASS" starttime="20210909 11:39:32.577" endtime="20210909 11:39:32.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:39:32.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:39:32.578" endtime="20210909 11:39:32.579"/>
</kw>
<status status="PASS" starttime="20210909 11:39:25.346" endtime="20210909 11:39:32.580"/>
</kw>
<msg timestamp="20210909 11:39:32.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:39:25.345" endtime="20210909 11:39:32.580"/>
</kw>
<status status="PASS" starttime="20210909 11:39:25.344" endtime="20210909 11:39:32.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:39:32.585" level="INFO">Running command 'ozone sh bucket create 29132-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:39:39.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:39:39.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:39:32.582" endtime="20210909 11:39:39.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:39:39.771" level="INFO"/>
<status status="PASS" starttime="20210909 11:39:39.771" endtime="20210909 11:39:39.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:39:39.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:39:39.772" endtime="20210909 11:39:39.772"/>
</kw>
<status status="PASS" starttime="20210909 11:39:32.581" endtime="20210909 11:39:39.773"/>
</kw>
<msg timestamp="20210909 11:39:39.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:39:32.581" endtime="20210909 11:39:39.773"/>
</kw>
<status status="PASS" starttime="20210909 11:39:32.580" endtime="20210909 11:39:39.774"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:39:39.779" level="INFO">Running command 'ozone sh key put 29132-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:41:25.296" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210909 11:39:39.776" endtime="20210909 11:41:25.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210909 11:41:25.297" endtime="20210909 11:41:25.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210909 11:41:25.297" endtime="20210909 11:41:25.297"/>
</kw>
<status status="FAIL" starttime="20210909 11:39:39.775" endtime="20210909 11:41:25.298"/>
</kw>
<msg timestamp="20210909 11:41:25.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210909 11:39:39.775" endtime="20210909 11:41:25.298"/>
</kw>
<status status="FAIL" starttime="20210909 11:39:39.774" endtime="20210909 11:41:25.298"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210909 11:41:25.299" endtime="20210909 11:41:25.299"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210909 11:39:25.295" endtime="20210909 11:41:25.299">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:41:25.307" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:41:25.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:41:25.311" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:41:25.303" endtime="20210909 11:41:25.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:41:25.313" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:41:25.312" endtime="20210909 11:41:25.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:41:25.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:41:25.313" endtime="20210909 11:41:25.314"/>
</kw>
<status status="PASS" starttime="20210909 11:41:25.303" endtime="20210909 11:41:25.315"/>
</kw>
<msg timestamp="20210909 11:41:25.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:41:25.302" endtime="20210909 11:41:25.315"/>
</kw>
<msg timestamp="20210909 11:41:25.316" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:41:25.302" endtime="20210909 11:41:25.316"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:41:25.317" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:41:25.316" endtime="20210909 11:41:25.317"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:41:25.322" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:41:25.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:41:25.330" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:41:25.320" endtime="20210909 11:41:25.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:41:25.332" level="INFO"/>
<status status="PASS" starttime="20210909 11:41:25.331" endtime="20210909 11:41:25.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:41:25.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:41:25.332" endtime="20210909 11:41:25.332"/>
</kw>
<status status="PASS" starttime="20210909 11:41:25.319" endtime="20210909 11:41:25.333"/>
</kw>
<msg timestamp="20210909 11:41:25.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:41:25.319" endtime="20210909 11:41:25.333"/>
</kw>
<status status="PASS" starttime="20210909 11:41:25.318" endtime="20210909 11:41:25.333"/>
</kw>
<status status="PASS" starttime="20210909 11:41:25.317" endtime="20210909 11:41:25.334"/>
</kw>
<status status="PASS" starttime="20210909 11:41:25.301" endtime="20210909 11:41:25.334"/>
</kw>
<status status="PASS" starttime="20210909 11:41:25.301" endtime="20210909 11:41:25.334"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:41:25.340" level="INFO">Running command 'ozone sh key put 29132-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:25.301" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210909 11:41:25.338" endtime="20210909 11:43:25.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210909 11:43:25.302" endtime="20210909 11:43:25.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210909 11:43:25.302" endtime="20210909 11:43:25.302"/>
</kw>
<status status="FAIL" starttime="20210909 11:41:25.336" endtime="20210909 11:43:25.303"/>
</kw>
<msg timestamp="20210909 11:43:25.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210909 11:41:25.336" endtime="20210909 11:43:25.303"/>
</kw>
<status status="FAIL" starttime="20210909 11:41:25.335" endtime="20210909 11:43:25.303"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210909 11:43:25.303" endtime="20210909 11:43:25.303"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210909 11:41:25.300" endtime="20210909 11:43:25.304">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:25.312" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:25.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:25.315" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:43:25.308" endtime="20210909 11:43:25.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:25.316" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:43:25.315" endtime="20210909 11:43:25.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:25.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:25.316" endtime="20210909 11:43:25.317"/>
</kw>
<status status="PASS" starttime="20210909 11:43:25.307" endtime="20210909 11:43:25.317"/>
</kw>
<msg timestamp="20210909 11:43:25.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:25.307" endtime="20210909 11:43:25.318"/>
</kw>
<msg timestamp="20210909 11:43:25.318" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:43:25.307" endtime="20210909 11:43:25.318"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:43:25.319" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:43:25.318" endtime="20210909 11:43:25.319"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:25.324" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:25.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:25.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:43:25.322" endtime="20210909 11:43:25.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:25.338" level="INFO"/>
<status status="PASS" starttime="20210909 11:43:25.337" endtime="20210909 11:43:25.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:25.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:25.338" endtime="20210909 11:43:25.339"/>
</kw>
<status status="PASS" starttime="20210909 11:43:25.321" endtime="20210909 11:43:25.340"/>
</kw>
<msg timestamp="20210909 11:43:25.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:25.321" endtime="20210909 11:43:25.341"/>
</kw>
<status status="PASS" starttime="20210909 11:43:25.320" endtime="20210909 11:43:25.341"/>
</kw>
<status status="PASS" starttime="20210909 11:43:25.319" endtime="20210909 11:43:25.341"/>
</kw>
<status status="PASS" starttime="20210909 11:43:25.306" endtime="20210909 11:43:25.341"/>
</kw>
<status status="PASS" starttime="20210909 11:43:25.306" endtime="20210909 11:43:25.341"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:25.347" level="INFO">Running command 'ozone sh key list 29132-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:32.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:32.873" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210909 11:43:25.344" endtime="20210909 11:43:32.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:32.875" level="INFO">key1</msg>
<status status="PASS" starttime="20210909 11:43:32.874" endtime="20210909 11:43:32.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:32.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:32.876" endtime="20210909 11:43:32.878"/>
</kw>
<status status="PASS" starttime="20210909 11:43:25.343" endtime="20210909 11:43:32.878"/>
</kw>
<msg timestamp="20210909 11:43:32.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:25.343" endtime="20210909 11:43:32.879"/>
</kw>
<msg timestamp="20210909 11:43:32.879" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210909 11:43:25.342" endtime="20210909 11:43:32.880"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:32.886" level="INFO">Running command 'ozone sh key list 29132-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:40.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:40.252" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210909 11:43:32.883" endtime="20210909 11:43:40.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:40.253" level="INFO">key1</msg>
<status status="PASS" starttime="20210909 11:43:40.252" endtime="20210909 11:43:40.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:40.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:40.254" endtime="20210909 11:43:40.254"/>
</kw>
<status status="PASS" starttime="20210909 11:43:32.882" endtime="20210909 11:43:40.255"/>
</kw>
<msg timestamp="20210909 11:43:40.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:32.881" endtime="20210909 11:43:40.255"/>
</kw>
<msg timestamp="20210909 11:43:40.255" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210909 11:43:32.880" endtime="20210909 11:43:40.255"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:43:40.255" endtime="20210909 11:43:40.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:43:40.256" endtime="20210909 11:43:40.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210909 11:43:40.257" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210909 11:43:40.256" endtime="20210909 11:43:40.257"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210909 11:43:25.305" endtime="20210909 11:43:40.258">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:40.270" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:40.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:40.274" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:43:40.266" endtime="20210909 11:43:40.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:40.276" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:43:40.275" endtime="20210909 11:43:40.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:40.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:40.276" endtime="20210909 11:43:40.276"/>
</kw>
<status status="PASS" starttime="20210909 11:43:40.265" endtime="20210909 11:43:40.277"/>
</kw>
<msg timestamp="20210909 11:43:40.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:40.265" endtime="20210909 11:43:40.277"/>
</kw>
<msg timestamp="20210909 11:43:40.277" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:43:40.264" endtime="20210909 11:43:40.277"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:43:40.278" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:43:40.277" endtime="20210909 11:43:40.278"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:40.284" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:40.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:40.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:43:40.281" endtime="20210909 11:43:40.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:40.299" level="INFO"/>
<status status="PASS" starttime="20210909 11:43:40.298" endtime="20210909 11:43:40.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:40.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:40.299" endtime="20210909 11:43:40.300"/>
</kw>
<status status="PASS" starttime="20210909 11:43:40.280" endtime="20210909 11:43:40.301"/>
</kw>
<msg timestamp="20210909 11:43:40.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:40.280" endtime="20210909 11:43:40.301"/>
</kw>
<status status="PASS" starttime="20210909 11:43:40.279" endtime="20210909 11:43:40.302"/>
</kw>
<status status="PASS" starttime="20210909 11:43:40.278" endtime="20210909 11:43:40.302"/>
</kw>
<status status="PASS" starttime="20210909 11:43:40.264" endtime="20210909 11:43:40.302"/>
</kw>
<status status="PASS" starttime="20210909 11:43:40.263" endtime="20210909 11:43:40.302"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:40.307" level="INFO">Running command 'ozone sh key delete 29132-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:46.928" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:43:46.929" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210909 11:43:40.304" endtime="20210909 11:43:46.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:46.932" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210909 11:43:46.930" endtime="20210909 11:43:46.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:46.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210909 11:43:46.935" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210909 11:43:46.932" endtime="20210909 11:43:46.935"/>
</kw>
<status status="FAIL" starttime="20210909 11:43:40.304" endtime="20210909 11:43:46.936"/>
</kw>
<msg timestamp="20210909 11:43:46.936" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210909 11:43:40.303" endtime="20210909 11:43:46.937"/>
</kw>
<status status="FAIL" starttime="20210909 11:43:40.303" endtime="20210909 11:43:46.937"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210909 11:43:46.938" endtime="20210909 11:43:46.938"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 11:43:46.938" endtime="20210909 11:43:46.939"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210909 11:43:40.262" endtime="20210909 11:43:46.940">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:46.954" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:46.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:46.960" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:43:46.951" endtime="20210909 11:43:46.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:46.962" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:43:46.961" endtime="20210909 11:43:46.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:46.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:46.962" endtime="20210909 11:43:46.963"/>
</kw>
<status status="PASS" starttime="20210909 11:43:46.949" endtime="20210909 11:43:46.963"/>
</kw>
<msg timestamp="20210909 11:43:46.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:46.948" endtime="20210909 11:43:46.964"/>
</kw>
<msg timestamp="20210909 11:43:46.964" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:43:46.947" endtime="20210909 11:43:46.964"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:43:46.965" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:43:46.964" endtime="20210909 11:43:46.965"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:46.971" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:46.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:46.982" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:43:46.968" endtime="20210909 11:43:46.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:46.984" level="INFO"/>
<status status="PASS" starttime="20210909 11:43:46.983" endtime="20210909 11:43:46.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:46.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:46.984" endtime="20210909 11:43:46.985"/>
</kw>
<status status="PASS" starttime="20210909 11:43:46.968" endtime="20210909 11:43:46.985"/>
</kw>
<msg timestamp="20210909 11:43:46.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:46.967" endtime="20210909 11:43:46.986"/>
</kw>
<status status="PASS" starttime="20210909 11:43:46.966" endtime="20210909 11:43:46.986"/>
</kw>
<status status="PASS" starttime="20210909 11:43:46.965" endtime="20210909 11:43:46.986"/>
</kw>
<status status="PASS" starttime="20210909 11:43:46.945" endtime="20210909 11:43:46.986"/>
</kw>
<status status="PASS" starttime="20210909 11:43:46.944" endtime="20210909 11:43:46.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:46.992" level="INFO">Running command 'ozone sh bucket list 29132-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:54.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:54.917" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210909 11:43:46.989" endtime="20210909 11:43:54.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:54.918" level="INFO">{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:39:17.706Z",
  "modificationTime" : "2021-09-09T11:39:17.706Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:38:34.522Z",
  "modificationTime" : "2021-09-09T11:39:10.872Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:39:32.499Z",
  "modificationTime" : "2021-09-09T11:39:32.499Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:38:20.658Z",
  "modificationTime" : "2021-09-09T11:39:04.061Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:38:28.860Z",
  "modificationTime" : "2021-09-09T11:38:28.860Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210909 11:43:54.918" endtime="20210909 11:43:54.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:54.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:54.919" endtime="20210909 11:43:54.920"/>
</kw>
<status status="PASS" starttime="20210909 11:43:46.988" endtime="20210909 11:43:54.920"/>
</kw>
<msg timestamp="20210909 11:43:54.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:46.988" endtime="20210909 11:43:54.921"/>
</kw>
<msg timestamp="20210909 11:43:54.921" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210909 11:43:46.987" endtime="20210909 11:43:54.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:43:54.922" endtime="20210909 11:43:54.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:43:54.922" endtime="20210909 11:43:54.923"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:43:46.943" endtime="20210909 11:43:54.924"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:54.932" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:54.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:54.937" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:43:54.929" endtime="20210909 11:43:54.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:54.939" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:43:54.938" endtime="20210909 11:43:54.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:54.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:54.939" endtime="20210909 11:43:54.940"/>
</kw>
<status status="PASS" starttime="20210909 11:43:54.928" endtime="20210909 11:43:54.940"/>
</kw>
<msg timestamp="20210909 11:43:54.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:54.928" endtime="20210909 11:43:54.941"/>
</kw>
<msg timestamp="20210909 11:43:54.941" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:43:54.928" endtime="20210909 11:43:54.941"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:43:54.942" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:43:54.941" endtime="20210909 11:43:54.942"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:54.948" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:43:54.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:43:54.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:43:54.946" endtime="20210909 11:43:54.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:43:54.958" level="INFO"/>
<status status="PASS" starttime="20210909 11:43:54.957" endtime="20210909 11:43:54.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:43:54.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:43:54.958" endtime="20210909 11:43:54.959"/>
</kw>
<status status="PASS" starttime="20210909 11:43:54.944" endtime="20210909 11:43:54.959"/>
</kw>
<msg timestamp="20210909 11:43:54.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:54.944" endtime="20210909 11:43:54.960"/>
</kw>
<status status="PASS" starttime="20210909 11:43:54.943" endtime="20210909 11:43:54.960"/>
</kw>
<status status="PASS" starttime="20210909 11:43:54.942" endtime="20210909 11:43:54.960"/>
</kw>
<status status="PASS" starttime="20210909 11:43:54.927" endtime="20210909 11:43:54.960"/>
</kw>
<status status="PASS" starttime="20210909 11:43:54.926" endtime="20210909 11:43:54.960"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:43:54.965" level="INFO">Running command 'ozone sh bucket info 29132-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:02.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:02.599" level="INFO">${output} = {
  "volumeName" : "29132-target",
  "bucketName" : "link1",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-09T11:39:32.499Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210909 11:43:54.963" endtime="20210909 11:44:02.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:02.601" level="INFO">{
  "volumeName" : "29132-target",
  "bucketName" : "link1",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-09T11:39:32.499Z",
  "modificationTime" : "2021-09-09T11:39:32.499Z"
}</msg>
<status status="PASS" starttime="20210909 11:44:02.600" endtime="20210909 11:44:02.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:02.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:02.601" endtime="20210909 11:44:02.602"/>
</kw>
<status status="PASS" starttime="20210909 11:43:54.962" endtime="20210909 11:44:02.602"/>
</kw>
<msg timestamp="20210909 11:44:02.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:43:54.961" endtime="20210909 11:44:02.602"/>
</kw>
<msg timestamp="20210909 11:44:02.603" level="INFO">${result} = {
  "volumeName" : "29132-target",
  "bucketName" : "link1",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-09T11:39:32.499Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210909 11:43:54.961" endtime="20210909 11:44:02.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:44:02.603" endtime="20210909 11:44:02.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:44:02.605" endtime="20210909 11:44:02.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:44:02.606" endtime="20210909 11:44:02.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:44:02.607" endtime="20210909 11:44:02.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:44:02.608" endtime="20210909 11:44:02.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:44:02.609" endtime="20210909 11:44:02.610"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:44:02.610" endtime="20210909 11:44:02.610"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:43:54.925" endtime="20210909 11:44:02.611"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:02.618" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:02.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:02.623" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:44:02.615" endtime="20210909 11:44:02.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:02.626" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:44:02.625" endtime="20210909 11:44:02.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:02.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:02.626" endtime="20210909 11:44:02.627"/>
</kw>
<status status="PASS" starttime="20210909 11:44:02.614" endtime="20210909 11:44:02.627"/>
</kw>
<msg timestamp="20210909 11:44:02.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:02.614" endtime="20210909 11:44:02.628"/>
</kw>
<msg timestamp="20210909 11:44:02.628" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:44:02.614" endtime="20210909 11:44:02.628"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:44:02.629" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:44:02.628" endtime="20210909 11:44:02.629"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:02.634" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:02.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:02.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:44:02.632" endtime="20210909 11:44:02.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:02.643" level="INFO"/>
<status status="PASS" starttime="20210909 11:44:02.643" endtime="20210909 11:44:02.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:02.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:02.644" endtime="20210909 11:44:02.644"/>
</kw>
<status status="PASS" starttime="20210909 11:44:02.631" endtime="20210909 11:44:02.645"/>
</kw>
<msg timestamp="20210909 11:44:02.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:02.631" endtime="20210909 11:44:02.645"/>
</kw>
<status status="PASS" starttime="20210909 11:44:02.630" endtime="20210909 11:44:02.645"/>
</kw>
<status status="PASS" starttime="20210909 11:44:02.629" endtime="20210909 11:44:02.646"/>
</kw>
<status status="PASS" starttime="20210909 11:44:02.613" endtime="20210909 11:44:02.646"/>
</kw>
<status status="PASS" starttime="20210909 11:44:02.612" endtime="20210909 11:44:02.646"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:02.650" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 29132-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:09.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:09.220" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:44:02.648" endtime="20210909 11:44:09.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:09.222" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:44:09.221" endtime="20210909 11:44:09.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:09.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:09.222" endtime="20210909 11:44:09.223"/>
</kw>
<status status="PASS" starttime="20210909 11:44:02.647" endtime="20210909 11:44:09.224"/>
</kw>
<msg timestamp="20210909 11:44:09.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:02.647" endtime="20210909 11:44:09.224"/>
</kw>
<status status="PASS" starttime="20210909 11:44:02.646" endtime="20210909 11:44:09.225"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:09.232" level="INFO">Running command 'ozone sh bucket getacl 29132-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:16.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:16.595" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210909 11:44:09.229" endtime="20210909 11:44:16.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:16.597" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210909 11:44:16.596" endtime="20210909 11:44:16.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:16.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:16.597" endtime="20210909 11:44:16.598"/>
</kw>
<status status="PASS" starttime="20210909 11:44:09.228" endtime="20210909 11:44:16.598"/>
</kw>
<msg timestamp="20210909 11:44:16.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:09.228" endtime="20210909 11:44:16.598"/>
</kw>
<msg timestamp="20210909 11:44:16.599" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210909 11:44:09.226" endtime="20210909 11:44:16.599"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:44:16.599" endtime="20210909 11:44:16.599"/>
</kw>
<status status="PASS" starttime="20210909 11:44:09.225" endtime="20210909 11:44:16.600"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:16.607" level="INFO">Running command 'ozone sh bucket getacl 29132-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:24.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:24.123" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:44:16.604" endtime="20210909 11:44:24.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:24.126" level="INFO"/>
<status status="PASS" starttime="20210909 11:44:24.124" endtime="20210909 11:44:24.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:24.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:24.126" endtime="20210909 11:44:24.128"/>
</kw>
<status status="PASS" starttime="20210909 11:44:16.603" endtime="20210909 11:44:24.128"/>
</kw>
<msg timestamp="20210909 11:44:24.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:16.602" endtime="20210909 11:44:24.128"/>
</kw>
<msg timestamp="20210909 11:44:24.129" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210909 11:44:16.601" endtime="20210909 11:44:24.129"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:44:24.129" endtime="20210909 11:44:24.130"/>
</kw>
<status status="PASS" starttime="20210909 11:44:16.600" endtime="20210909 11:44:24.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:24.138" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 29132-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:30.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:30.679" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:44:24.134" endtime="20210909 11:44:30.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:30.681" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 11:44:30.680" endtime="20210909 11:44:30.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:30.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:30.681" endtime="20210909 11:44:30.682"/>
</kw>
<status status="PASS" starttime="20210909 11:44:24.133" endtime="20210909 11:44:30.682"/>
</kw>
<msg timestamp="20210909 11:44:30.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:24.132" endtime="20210909 11:44:30.682"/>
</kw>
<status status="PASS" starttime="20210909 11:44:24.131" endtime="20210909 11:44:30.682"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:30.691" level="INFO">Running command 'ozone sh bucket getacl 29132-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:38.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:38.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:44:30.688" endtime="20210909 11:44:38.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:38.035" level="INFO"/>
<status status="PASS" starttime="20210909 11:44:38.033" endtime="20210909 11:44:38.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:38.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:38.036" endtime="20210909 11:44:38.038"/>
</kw>
<status status="PASS" starttime="20210909 11:44:30.685" endtime="20210909 11:44:38.039"/>
</kw>
<msg timestamp="20210909 11:44:38.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:30.685" endtime="20210909 11:44:38.039"/>
</kw>
<msg timestamp="20210909 11:44:38.039" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210909 11:44:30.684" endtime="20210909 11:44:38.039"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:44:38.039" endtime="20210909 11:44:38.041"/>
</kw>
<status status="PASS" starttime="20210909 11:44:30.683" endtime="20210909 11:44:38.041"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:38.053" level="INFO">Running command 'ozone sh bucket getacl 29132-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:45.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:45.259" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210909 11:44:38.049" endtime="20210909 11:44:45.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:45.261" level="INFO">READ</msg>
<status status="PASS" starttime="20210909 11:44:45.260" endtime="20210909 11:44:45.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:45.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:45.261" endtime="20210909 11:44:45.262"/>
</kw>
<status status="PASS" starttime="20210909 11:44:38.047" endtime="20210909 11:44:45.263"/>
</kw>
<msg timestamp="20210909 11:44:45.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:38.046" endtime="20210909 11:44:45.264"/>
</kw>
<msg timestamp="20210909 11:44:45.265" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210909 11:44:38.044" endtime="20210909 11:44:45.265"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:44:45.265" endtime="20210909 11:44:45.267"/>
</kw>
<status status="PASS" starttime="20210909 11:44:38.042" endtime="20210909 11:44:45.267"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:44:02.611" endtime="20210909 11:44:45.268"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:45.278" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:45.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:45.284" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:44:45.275" endtime="20210909 11:44:45.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:45.286" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:44:45.285" endtime="20210909 11:44:45.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:45.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:45.287" endtime="20210909 11:44:45.288"/>
</kw>
<status status="PASS" starttime="20210909 11:44:45.274" endtime="20210909 11:44:45.289"/>
</kw>
<msg timestamp="20210909 11:44:45.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:45.274" endtime="20210909 11:44:45.289"/>
</kw>
<msg timestamp="20210909 11:44:45.290" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:44:45.272" endtime="20210909 11:44:45.290"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:44:45.291" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:44:45.290" endtime="20210909 11:44:45.291"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:45.297" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:45.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:45.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:44:45.295" endtime="20210909 11:44:45.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:45.348" level="INFO"/>
<status status="PASS" starttime="20210909 11:44:45.347" endtime="20210909 11:44:45.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:45.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:45.349" endtime="20210909 11:44:45.350"/>
</kw>
<status status="PASS" starttime="20210909 11:44:45.294" endtime="20210909 11:44:45.351"/>
</kw>
<msg timestamp="20210909 11:44:45.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:45.294" endtime="20210909 11:44:45.351"/>
</kw>
<status status="PASS" starttime="20210909 11:44:45.293" endtime="20210909 11:44:45.352"/>
</kw>
<status status="PASS" starttime="20210909 11:44:45.292" endtime="20210909 11:44:45.352"/>
</kw>
<status status="PASS" starttime="20210909 11:44:45.271" endtime="20210909 11:44:45.352"/>
</kw>
<status status="PASS" starttime="20210909 11:44:45.270" endtime="20210909 11:44:45.352"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:45.359" level="INFO">Running command 'ozone sh bucket link 29132-source/bucket2 29132-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:50.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:44:50.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:44:45.356" endtime="20210909 11:44:50.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:50.665" level="INFO"/>
<status status="PASS" starttime="20210909 11:44:50.665" endtime="20210909 11:44:50.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:44:50.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:44:50.666" endtime="20210909 11:44:50.667"/>
</kw>
<status status="PASS" starttime="20210909 11:44:45.355" endtime="20210909 11:44:50.667"/>
</kw>
<msg timestamp="20210909 11:44:50.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:45.354" endtime="20210909 11:44:50.668"/>
</kw>
<status status="PASS" starttime="20210909 11:44:45.353" endtime="20210909 11:44:50.668"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:50.672" level="INFO">Running command 'ozone sh bucket create 29132-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:44:58.103" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:44:58.104" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210909 11:44:50.669" endtime="20210909 11:44:58.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:44:58.107" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210909 11:44:58.105" endtime="20210909 11:44:58.107"/>
</kw>
<msg timestamp="20210909 11:44:58.107" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210909 11:44:50.668" endtime="20210909 11:44:58.107"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:44:58.108" endtime="20210909 11:44:58.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:44:58.113" level="INFO">Running command 'ozone sh bucket create 29132-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:04.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:04.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:44:58.110" endtime="20210909 11:45:04.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:04.730" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:04.729" endtime="20210909 11:45:04.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:04.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:04.730" endtime="20210909 11:45:04.731"/>
</kw>
<status status="PASS" starttime="20210909 11:44:58.110" endtime="20210909 11:45:04.731"/>
</kw>
<msg timestamp="20210909 11:45:04.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:44:58.109" endtime="20210909 11:45:04.731"/>
</kw>
<status status="PASS" starttime="20210909 11:44:58.108" endtime="20210909 11:45:04.732"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:04.735" level="INFO">Running command 'ozone sh bucket link 29132-source/bucket1 29132-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:10.249" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:45:10.249" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210909 11:45:04.732" endtime="20210909 11:45:10.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:10.250" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210909 11:45:10.249" endtime="20210909 11:45:10.250"/>
</kw>
<msg timestamp="20210909 11:45:10.251" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210909 11:45:04.732" endtime="20210909 11:45:10.251"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:45:10.251" endtime="20210909 11:45:10.251"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:44:45.269" endtime="20210909 11:45:10.252"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:10.258" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:10.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:10.263" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:45:10.256" endtime="20210909 11:45:10.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:10.264" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:45:10.264" endtime="20210909 11:45:10.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:10.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:10.265" endtime="20210909 11:45:10.266"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.255" endtime="20210909 11:45:10.266"/>
</kw>
<msg timestamp="20210909 11:45:10.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:10.255" endtime="20210909 11:45:10.266"/>
</kw>
<msg timestamp="20210909 11:45:10.267" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:45:10.254" endtime="20210909 11:45:10.267"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:45:10.275" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:45:10.267" endtime="20210909 11:45:10.276"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:10.286" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:10.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:10.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:10.283" endtime="20210909 11:45:10.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:10.296" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:10.295" endtime="20210909 11:45:10.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:10.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:10.296" endtime="20210909 11:45:10.297"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.280" endtime="20210909 11:45:10.298"/>
</kw>
<msg timestamp="20210909 11:45:10.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:10.279" endtime="20210909 11:45:10.298"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.278" endtime="20210909 11:45:10.298"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.276" endtime="20210909 11:45:10.298"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.254" endtime="20210909 11:45:10.299"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.253" endtime="20210909 11:45:10.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:10.304" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:10.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:10.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:10.302" endtime="20210909 11:45:10.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:10.310" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:10.309" endtime="20210909 11:45:10.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:10.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:10.310" endtime="20210909 11:45:10.311"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.301" endtime="20210909 11:45:10.311"/>
</kw>
<msg timestamp="20210909 11:45:10.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:10.301" endtime="20210909 11:45:10.312"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.300" endtime="20210909 11:45:10.312"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:10.318" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:10.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:10.322" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:45:10.315" endtime="20210909 11:45:10.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:10.324" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:45:10.323" endtime="20210909 11:45:10.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:10.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:10.324" endtime="20210909 11:45:10.325"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.314" endtime="20210909 11:45:10.325"/>
</kw>
<msg timestamp="20210909 11:45:10.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:10.314" endtime="20210909 11:45:10.325"/>
</kw>
<msg timestamp="20210909 11:45:10.327" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:45:10.314" endtime="20210909 11:45:10.327"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:45:10.328" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:45:10.327" endtime="20210909 11:45:10.328"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:10.333" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:10.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:10.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:10.331" endtime="20210909 11:45:10.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:10.342" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:10.342" endtime="20210909 11:45:10.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:10.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:10.343" endtime="20210909 11:45:10.343"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.329" endtime="20210909 11:45:10.344"/>
</kw>
<msg timestamp="20210909 11:45:10.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:10.329" endtime="20210909 11:45:10.344"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.328" endtime="20210909 11:45:10.344"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.328" endtime="20210909 11:45:10.344"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.313" endtime="20210909 11:45:10.344"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.312" endtime="20210909 11:45:10.345"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:10.348" level="INFO">Running command 'ozone sh key list 29132-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:17.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:17.757" level="INFO">${output} = {
  "volumeName" : "29132-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-09T11:35:02.103Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210909 11:45:10.345" endtime="20210909 11:45:17.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:17.759" level="INFO">{
  "volumeName" : "29132-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-09T11:35:02.103Z",
  "modificationTime" : "2021-09-09T11:38:05.444Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210909 11:45:17.758" endtime="20210909 11:45:17.759"/>
</kw>
<msg timestamp="20210909 11:45:17.759" level="INFO">${result} = {
  "volumeName" : "29132-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-09T11:35:02.103Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210909 11:45:10.345" endtime="20210909 11:45:17.759"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:45:17.759" endtime="20210909 11:45:17.760"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.300" endtime="20210909 11:45:17.760"/>
</kw>
<status status="PASS" starttime="20210909 11:45:10.299" endtime="20210909 11:45:17.760"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:45:10.252" endtime="20210909 11:45:17.760"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:17.768" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:17.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:17.771" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:45:17.765" endtime="20210909 11:45:17.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:17.773" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:45:17.772" endtime="20210909 11:45:17.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:17.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:17.774" endtime="20210909 11:45:17.775"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.764" endtime="20210909 11:45:17.775"/>
</kw>
<msg timestamp="20210909 11:45:17.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:17.763" endtime="20210909 11:45:17.776"/>
</kw>
<msg timestamp="20210909 11:45:17.776" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:45:17.763" endtime="20210909 11:45:17.776"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:45:17.777" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:45:17.776" endtime="20210909 11:45:17.777"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:17.784" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:17.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:17.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:17.780" endtime="20210909 11:45:17.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:17.792" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:17.791" endtime="20210909 11:45:17.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:17.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:17.792" endtime="20210909 11:45:17.793"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.779" endtime="20210909 11:45:17.793"/>
</kw>
<msg timestamp="20210909 11:45:17.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:17.779" endtime="20210909 11:45:17.794"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.778" endtime="20210909 11:45:17.794"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.777" endtime="20210909 11:45:17.794"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.763" endtime="20210909 11:45:17.795"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.762" endtime="20210909 11:45:17.795"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:17.802" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:17.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:17.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:17.799" endtime="20210909 11:45:17.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:17.808" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:17.807" endtime="20210909 11:45:17.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:17.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:17.808" endtime="20210909 11:45:17.809"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.798" endtime="20210909 11:45:17.810"/>
</kw>
<msg timestamp="20210909 11:45:17.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:17.797" endtime="20210909 11:45:17.810"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.796" endtime="20210909 11:45:17.810"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:17.822" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:17.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:17.826" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:45:17.813" endtime="20210909 11:45:17.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:17.827" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:45:17.827" endtime="20210909 11:45:17.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:17.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:17.828" endtime="20210909 11:45:17.828"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.813" endtime="20210909 11:45:17.828"/>
</kw>
<msg timestamp="20210909 11:45:17.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:17.812" endtime="20210909 11:45:17.829"/>
</kw>
<msg timestamp="20210909 11:45:17.829" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:45:17.811" endtime="20210909 11:45:17.829"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:45:17.836" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:45:17.829" endtime="20210909 11:45:17.836"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:17.846" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:17.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:17.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:17.838" endtime="20210909 11:45:17.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:17.855" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:17.854" endtime="20210909 11:45:17.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:17.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:17.855" endtime="20210909 11:45:17.855"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.837" endtime="20210909 11:45:17.856"/>
</kw>
<msg timestamp="20210909 11:45:17.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:17.837" endtime="20210909 11:45:17.856"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.836" endtime="20210909 11:45:17.856"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.836" endtime="20210909 11:45:17.856"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.811" endtime="20210909 11:45:17.856"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.810" endtime="20210909 11:45:17.857"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:17.861" level="INFO">Running command 'ozone sh key list 29132-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:25.007" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:45:25.007" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 29132-target unreadable-link null</msg>
<status status="PASS" starttime="20210909 11:45:17.858" endtime="20210909 11:45:25.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:25.008" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 29132-target unreadable-link null</msg>
<status status="PASS" starttime="20210909 11:45:25.007" endtime="20210909 11:45:25.008"/>
</kw>
<msg timestamp="20210909 11:45:25.009" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 29132-target unreadable-link null</msg>
<status status="PASS" starttime="20210909 11:45:17.857" endtime="20210909 11:45:25.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:45:25.009" endtime="20210909 11:45:25.009"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.796" endtime="20210909 11:45:25.010"/>
</kw>
<status status="PASS" starttime="20210909 11:45:17.795" endtime="20210909 11:45:25.010"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:45:17.761" endtime="20210909 11:45:25.010"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:25.019" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:25.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:25.024" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:45:25.017" endtime="20210909 11:45:25.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:25.026" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:45:25.025" endtime="20210909 11:45:25.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:25.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:25.027" endtime="20210909 11:45:25.028"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.016" endtime="20210909 11:45:25.029"/>
</kw>
<msg timestamp="20210909 11:45:25.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:25.016" endtime="20210909 11:45:25.029"/>
</kw>
<msg timestamp="20210909 11:45:25.030" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:45:25.015" endtime="20210909 11:45:25.030"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:45:25.031" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:45:25.030" endtime="20210909 11:45:25.031"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:25.037" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:25.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:25.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:25.033" endtime="20210909 11:45:25.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:25.047" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:25.046" endtime="20210909 11:45:25.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:25.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:25.047" endtime="20210909 11:45:25.048"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.033" endtime="20210909 11:45:25.048"/>
</kw>
<msg timestamp="20210909 11:45:25.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:25.032" endtime="20210909 11:45:25.048"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.032" endtime="20210909 11:45:25.048"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.031" endtime="20210909 11:45:25.048"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.014" endtime="20210909 11:45:25.048"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.013" endtime="20210909 11:45:25.049"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:25.054" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:25.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:25.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:25.052" endtime="20210909 11:45:25.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:25.060" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:25.060" endtime="20210909 11:45:25.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:25.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:25.061" endtime="20210909 11:45:25.062"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.051" endtime="20210909 11:45:25.062"/>
</kw>
<msg timestamp="20210909 11:45:25.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:25.051" endtime="20210909 11:45:25.062"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.050" endtime="20210909 11:45:25.063"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:25.068" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:25.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:25.073" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:45:25.066" endtime="20210909 11:45:25.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:25.075" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:45:25.074" endtime="20210909 11:45:25.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:25.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:25.075" endtime="20210909 11:45:25.076"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.065" endtime="20210909 11:45:25.076"/>
</kw>
<msg timestamp="20210909 11:45:25.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:25.065" endtime="20210909 11:45:25.076"/>
</kw>
<msg timestamp="20210909 11:45:25.077" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:45:25.064" endtime="20210909 11:45:25.077"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:45:25.078" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:45:25.077" endtime="20210909 11:45:25.078"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:25.084" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:25.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:25.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:25.082" endtime="20210909 11:45:25.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:25.095" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:25.094" endtime="20210909 11:45:25.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:25.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:25.095" endtime="20210909 11:45:25.096"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.081" endtime="20210909 11:45:25.096"/>
</kw>
<msg timestamp="20210909 11:45:25.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:25.080" endtime="20210909 11:45:25.097"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.079" endtime="20210909 11:45:25.097"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.078" endtime="20210909 11:45:25.097"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.063" endtime="20210909 11:45:25.097"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.063" endtime="20210909 11:45:25.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:25.102" level="INFO">Running command 'ozone sh bucket info 29132-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:32.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:32.426" level="INFO">${output} = {
  "volumeName" : "29132-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-09T11:38:34.522Z...</msg>
<status status="PASS" starttime="20210909 11:45:25.099" endtime="20210909 11:45:32.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:32.429" level="INFO">{
  "volumeName" : "29132-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-09T11:38:34.522Z",
  "modificationTime" : "2021-09-09T11:39:10.872Z"
}</msg>
<status status="PASS" starttime="20210909 11:45:32.428" endtime="20210909 11:45:32.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:32.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:32.430" endtime="20210909 11:45:32.431"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.098" endtime="20210909 11:45:32.432"/>
</kw>
<msg timestamp="20210909 11:45:32.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:25.098" endtime="20210909 11:45:32.432"/>
</kw>
<msg timestamp="20210909 11:45:32.433" level="INFO">${result} = {
  "volumeName" : "29132-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-09T11:38:34.522Z...</msg>
<status status="PASS" starttime="20210909 11:45:25.097" endtime="20210909 11:45:32.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:45:32.433" endtime="20210909 11:45:32.434"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:45:32.434" endtime="20210909 11:45:32.435"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:32.439" level="INFO">Running command 'ozone sh key list 29132-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:39.886" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:45:39.886" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 29132-source unreadable-bucket </msg>
<status status="PASS" starttime="20210909 11:45:32.437" endtime="20210909 11:45:39.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:39.888" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 29132-source unreadable-bucket </msg>
<status status="PASS" starttime="20210909 11:45:39.887" endtime="20210909 11:45:39.888"/>
</kw>
<msg timestamp="20210909 11:45:39.888" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 29132-source unreadable-bucket </msg>
<status status="PASS" starttime="20210909 11:45:32.435" endtime="20210909 11:45:39.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:45:39.889" endtime="20210909 11:45:39.889"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.049" endtime="20210909 11:45:39.889"/>
</kw>
<status status="PASS" starttime="20210909 11:45:25.049" endtime="20210909 11:45:39.889"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:45:25.012" endtime="20210909 11:45:39.890"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:39.901" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:39.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:39.906" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:45:39.897" endtime="20210909 11:45:39.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:39.907" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:45:39.906" endtime="20210909 11:45:39.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:39.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:39.908" endtime="20210909 11:45:39.909"/>
</kw>
<status status="PASS" starttime="20210909 11:45:39.896" endtime="20210909 11:45:39.912"/>
</kw>
<msg timestamp="20210909 11:45:39.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:39.895" endtime="20210909 11:45:39.912"/>
</kw>
<msg timestamp="20210909 11:45:39.912" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:45:39.894" endtime="20210909 11:45:39.912"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:45:39.913" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:45:39.913" endtime="20210909 11:45:39.913"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:39.918" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:39.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:39.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:39.916" endtime="20210909 11:45:39.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:39.932" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:39.930" endtime="20210909 11:45:39.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:39.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:39.933" endtime="20210909 11:45:39.934"/>
</kw>
<status status="PASS" starttime="20210909 11:45:39.915" endtime="20210909 11:45:39.935"/>
</kw>
<msg timestamp="20210909 11:45:39.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:39.915" endtime="20210909 11:45:39.935"/>
</kw>
<status status="PASS" starttime="20210909 11:45:39.914" endtime="20210909 11:45:39.936"/>
</kw>
<status status="PASS" starttime="20210909 11:45:39.913" endtime="20210909 11:45:39.936"/>
</kw>
<status status="PASS" starttime="20210909 11:45:39.893" endtime="20210909 11:45:39.936"/>
</kw>
<status status="PASS" starttime="20210909 11:45:39.892" endtime="20210909 11:45:39.939"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:39.949" level="INFO">Running command 'ozone sh bucket link 29132-target/loop1 29132-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:46.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:46.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:39.941" endtime="20210909 11:45:46.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:46.962" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:46.961" endtime="20210909 11:45:46.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:46.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:46.962" endtime="20210909 11:45:46.963"/>
</kw>
<status status="PASS" starttime="20210909 11:45:39.941" endtime="20210909 11:45:46.963"/>
</kw>
<msg timestamp="20210909 11:45:46.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:39.940" endtime="20210909 11:45:46.963"/>
</kw>
<status status="PASS" starttime="20210909 11:45:39.940" endtime="20210909 11:45:46.964"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:46.971" level="INFO">Running command 'ozone sh bucket link 29132-target/loop2 29132-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:45:54.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:45:54.844" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:46.968" endtime="20210909 11:45:54.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:45:54.845" level="INFO"/>
<status status="PASS" starttime="20210909 11:45:54.845" endtime="20210909 11:45:54.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:45:54.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:45:54.846" endtime="20210909 11:45:54.846"/>
</kw>
<status status="PASS" starttime="20210909 11:45:46.965" endtime="20210909 11:45:54.847"/>
</kw>
<msg timestamp="20210909 11:45:54.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:46.964" endtime="20210909 11:45:54.847"/>
</kw>
<status status="PASS" starttime="20210909 11:45:46.964" endtime="20210909 11:45:54.847"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:45:54.852" level="INFO">Running command 'ozone sh bucket link 29132-target/loop3 29132-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:46:02.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:46:02.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:45:54.849" endtime="20210909 11:46:02.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:46:02.048" level="INFO"/>
<status status="PASS" starttime="20210909 11:46:02.048" endtime="20210909 11:46:02.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:46:02.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:46:02.049" endtime="20210909 11:46:02.050"/>
</kw>
<status status="PASS" starttime="20210909 11:45:54.848" endtime="20210909 11:46:02.051"/>
</kw>
<msg timestamp="20210909 11:46:02.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:45:54.848" endtime="20210909 11:46:02.051"/>
</kw>
<status status="PASS" starttime="20210909 11:45:54.847" endtime="20210909 11:46:02.052"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:46:02.056" level="INFO">Running command 'ozone sh key list 29132-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:46:08.788" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:46:08.788" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210909 11:46:02.053" endtime="20210909 11:46:08.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:46:08.791" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210909 11:46:08.790" endtime="20210909 11:46:08.791"/>
</kw>
<msg timestamp="20210909 11:46:08.791" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210909 11:46:02.052" endtime="20210909 11:46:08.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:46:08.792" endtime="20210909 11:46:08.792"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:45:39.890" endtime="20210909 11:46:08.793"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:46:08.801" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:46:08.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:46:08.805" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:46:08.798" endtime="20210909 11:46:08.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:46:08.807" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:46:08.806" endtime="20210909 11:46:08.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:46:08.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:46:08.808" endtime="20210909 11:46:08.809"/>
</kw>
<status status="PASS" starttime="20210909 11:46:08.797" endtime="20210909 11:46:08.809"/>
</kw>
<msg timestamp="20210909 11:46:08.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:46:08.797" endtime="20210909 11:46:08.810"/>
</kw>
<msg timestamp="20210909 11:46:08.810" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:46:08.796" endtime="20210909 11:46:08.810"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:46:08.811" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:46:08.810" endtime="20210909 11:46:08.811"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:46:08.816" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:46:08.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:46:08.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:46:08.813" endtime="20210909 11:46:08.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:46:08.826" level="INFO"/>
<status status="PASS" starttime="20210909 11:46:08.825" endtime="20210909 11:46:08.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:46:08.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:46:08.826" endtime="20210909 11:46:08.827"/>
</kw>
<status status="PASS" starttime="20210909 11:46:08.813" endtime="20210909 11:46:08.827"/>
</kw>
<msg timestamp="20210909 11:46:08.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:46:08.812" endtime="20210909 11:46:08.827"/>
</kw>
<status status="PASS" starttime="20210909 11:46:08.812" endtime="20210909 11:46:08.828"/>
</kw>
<status status="PASS" starttime="20210909 11:46:08.811" endtime="20210909 11:46:08.828"/>
</kw>
<status status="PASS" starttime="20210909 11:46:08.796" endtime="20210909 11:46:08.828"/>
</kw>
<status status="PASS" starttime="20210909 11:46:08.795" endtime="20210909 11:46:08.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:46:08.834" level="INFO">Running command 'ozone sh bucket link 29132-source/bucket1 29132-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:46:15.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:46:15.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:46:08.831" endtime="20210909 11:46:15.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:46:15.884" level="INFO"/>
<status status="PASS" starttime="20210909 11:46:15.882" endtime="20210909 11:46:15.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:46:15.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:46:15.884" endtime="20210909 11:46:15.886"/>
</kw>
<status status="PASS" starttime="20210909 11:46:08.830" endtime="20210909 11:46:15.886"/>
</kw>
<msg timestamp="20210909 11:46:15.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:46:08.830" endtime="20210909 11:46:15.887"/>
</kw>
<status status="PASS" starttime="20210909 11:46:08.829" endtime="20210909 11:46:15.887"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:46:15.892" level="INFO">Running command 'ozone sh key put 29132-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:48:08.795" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210909 11:46:15.889" endtime="20210909 11:48:08.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210909 11:48:08.795" endtime="20210909 11:48:08.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210909 11:48:08.796" endtime="20210909 11:48:08.796"/>
</kw>
<status status="FAIL" starttime="20210909 11:46:15.889" endtime="20210909 11:48:08.796"/>
</kw>
<msg timestamp="20210909 11:48:08.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210909 11:46:15.888" endtime="20210909 11:48:08.796"/>
</kw>
<status status="FAIL" starttime="20210909 11:46:15.887" endtime="20210909 11:48:08.796"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210909 11:48:08.797" endtime="20210909 11:48:08.797"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210909 11:46:08.794" endtime="20210909 11:48:08.797">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:48:08.806" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:48:08.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:48:08.810" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:48:08.802" endtime="20210909 11:48:08.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:48:08.812" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:48:08.811" endtime="20210909 11:48:08.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:48:08.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:48:08.812" endtime="20210909 11:48:08.813"/>
</kw>
<status status="PASS" starttime="20210909 11:48:08.802" endtime="20210909 11:48:08.813"/>
</kw>
<msg timestamp="20210909 11:48:08.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:48:08.802" endtime="20210909 11:48:08.814"/>
</kw>
<msg timestamp="20210909 11:48:08.814" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:48:08.801" endtime="20210909 11:48:08.814"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:48:08.816" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:48:08.815" endtime="20210909 11:48:08.816"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:48:08.823" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:48:08.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:48:08.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:48:08.819" endtime="20210909 11:48:08.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:48:08.835" level="INFO"/>
<status status="PASS" starttime="20210909 11:48:08.833" endtime="20210909 11:48:08.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:48:08.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:48:08.835" endtime="20210909 11:48:08.836"/>
</kw>
<status status="PASS" starttime="20210909 11:48:08.818" endtime="20210909 11:48:08.837"/>
</kw>
<msg timestamp="20210909 11:48:08.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:48:08.818" endtime="20210909 11:48:08.837"/>
</kw>
<status status="PASS" starttime="20210909 11:48:08.817" endtime="20210909 11:48:08.837"/>
</kw>
<status status="PASS" starttime="20210909 11:48:08.816" endtime="20210909 11:48:08.837"/>
</kw>
<status status="PASS" starttime="20210909 11:48:08.801" endtime="20210909 11:48:08.837"/>
</kw>
<status status="PASS" starttime="20210909 11:48:08.800" endtime="20210909 11:48:08.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:48:08.842" level="INFO">Running command 'ozone sh bucket delete 29132-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:48:16.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:48:16.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:48:08.839" endtime="20210909 11:48:16.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:48:16.368" level="INFO"/>
<status status="PASS" starttime="20210909 11:48:16.367" endtime="20210909 11:48:16.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:48:16.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:48:16.368" endtime="20210909 11:48:16.369"/>
</kw>
<status status="PASS" starttime="20210909 11:48:08.839" endtime="20210909 11:48:16.369"/>
</kw>
<msg timestamp="20210909 11:48:16.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:48:08.838" endtime="20210909 11:48:16.369"/>
</kw>
<status status="PASS" starttime="20210909 11:48:08.838" endtime="20210909 11:48:16.370"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:48:16.373" level="INFO">Running command 'ozone sh bucket list 29132-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:48:24.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:48:24.482" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T...</msg>
<status status="PASS" starttime="20210909 11:48:16.371" endtime="20210909 11:48:24.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:48:24.485" level="INFO">{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:45:04.676Z",
  "modificationTime" : "2021-09-09T11:45:04.676Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:39:17.706Z",
  "modificationTime" : "2021-09-09T11:39:17.706Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:38:34.522Z",
  "modificationTime" : "2021-09-09T11:39:10.872Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:44:50.595Z",
  "modificationTime" : "2021-09-09T11:44:50.595Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:46:15.800Z",
  "modificationTime" : "2021-09-09T11:46:15.800Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:46:01.934Z",
  "modificationTime" : "2021-09-09T11:46:01.934Z",
  "sourceVolume" : "29132-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:45:46.647Z",
  "modificationTime" : "2021-09-09T11:45:46.647Z",
  "sourceVolume" : "29132-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:45:54.540Z",
  "modificationTime" : "2021-09-09T11:45:54.540Z",
  "sourceVolume" : "29132-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:38:20.658Z",
  "modificationTime" : "2021-09-09T11:39:04.061Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T11:38:28.860Z",
  "modificationTime" : "2021-09-09T11:38:28.860Z",
  "sourceVolume" : "29132-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210909 11:48:24.484" endtime="20210909 11:48:24.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:48:24.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:48:24.486" endtime="20210909 11:48:24.487"/>
</kw>
<status status="PASS" starttime="20210909 11:48:16.371" endtime="20210909 11:48:24.488"/>
</kw>
<msg timestamp="20210909 11:48:24.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:48:16.370" endtime="20210909 11:48:24.488"/>
</kw>
<msg timestamp="20210909 11:48:24.489" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "29132-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-09T...</msg>
<status status="PASS" starttime="20210909 11:48:16.370" endtime="20210909 11:48:24.489"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:48:24.489" endtime="20210909 11:48:24.489"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:48:24.495" level="INFO">Running command 'ozone sh key list 29132-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:48:33.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:48:33.491" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210909 11:48:24.491" endtime="20210909 11:48:33.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:48:33.493" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210909 11:48:33.492" endtime="20210909 11:48:33.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:48:33.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:48:33.493" endtime="20210909 11:48:33.494"/>
</kw>
<status status="PASS" starttime="20210909 11:48:24.491" endtime="20210909 11:48:33.495"/>
</kw>
<msg timestamp="20210909 11:48:33.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:48:24.490" endtime="20210909 11:48:33.495"/>
</kw>
<msg timestamp="20210909 11:48:33.495" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210909 11:48:24.490" endtime="20210909 11:48:33.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:48:33.496" endtime="20210909 11:48:33.496"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:48:08.799" endtime="20210909 11:48:33.497"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210909 11:34:31.881" endtime="20210909 11:48:33.499"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210909 11:48:33.532" level="INFO">${random} = 10647</msg>
<status status="PASS" starttime="20210909 11:48:33.532" endtime="20210909 11:48:33.532"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:48:33.533" level="INFO">${prefix} = 10647</msg>
<status status="PASS" starttime="20210909 11:48:33.532" endtime="20210909 11:48:33.533"/>
</kw>
<status status="PASS" starttime="20210909 11:48:33.531" endtime="20210909 11:48:33.533"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:48:33.541" level="INFO">Running command 'ozone sh volume info /10647-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:48:41.020" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:48:41.021" level="INFO">${output} = VOLUME_NOT_FOUND Volume 10647-rpcbasic is not found</msg>
<status status="PASS" starttime="20210909 11:48:33.538" endtime="20210909 11:48:41.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:48:41.023" level="INFO">VOLUME_NOT_FOUND Volume 10647-rpcbasic is not found</msg>
<status status="PASS" starttime="20210909 11:48:41.022" endtime="20210909 11:48:41.023"/>
</kw>
<msg timestamp="20210909 11:48:41.024" level="INFO">${result} = VOLUME_NOT_FOUND Volume 10647-rpcbasic is not found</msg>
<status status="PASS" starttime="20210909 11:48:33.537" endtime="20210909 11:48:41.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:48:41.024" endtime="20210909 11:48:41.025"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:48:41.029" level="INFO">Running command 'ozone sh volume create /10647-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:48:46.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:48:46.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:48:41.027" endtime="20210909 11:48:46.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:48:46.380" level="INFO"/>
<status status="PASS" starttime="20210909 11:48:46.379" endtime="20210909 11:48:46.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:48:46.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:48:46.380" endtime="20210909 11:48:46.381"/>
</kw>
<status status="PASS" starttime="20210909 11:48:41.026" endtime="20210909 11:48:46.381"/>
</kw>
<msg timestamp="20210909 11:48:46.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:48:41.026" endtime="20210909 11:48:46.382"/>
</kw>
<msg timestamp="20210909 11:48:46.382" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210909 11:48:41.025" endtime="20210909 11:48:46.382"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:48:46.382" endtime="20210909 11:48:46.383"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:48:46.387" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="10647-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:48:54.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:48:54.183" level="INFO">${output} = {
  "metadata": {},
  "name": "10647-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210909 11:48:46.385" endtime="20210909 11:48:54.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:48:54.186" level="INFO">{
  "metadata": {},
  "name": "10647-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-09T11:48:46.267Z",
  "modificationTime": "2021-09-09T11:48:46.267Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210909 11:48:54.184" endtime="20210909 11:48:54.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:48:54.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:48:54.186" endtime="20210909 11:48:54.190"/>
</kw>
<status status="PASS" starttime="20210909 11:48:46.384" endtime="20210909 11:48:54.191"/>
</kw>
<msg timestamp="20210909 11:48:54.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:48:46.384" endtime="20210909 11:48:54.191"/>
</kw>
<msg timestamp="20210909 11:48:54.191" level="INFO">${result} = {
  "metadata": {},
  "name": "10647-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210909 11:48:46.383" endtime="20210909 11:48:54.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:48:54.192" endtime="20210909 11:48:54.192"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:48:54.197" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="10647-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:49:02.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:49:02.404" level="INFO">${output} = {
  "metadata": {},
  "name": "10647-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210909 11:48:54.194" endtime="20210909 11:49:02.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:49:02.405" level="INFO">{
  "metadata": {},
  "name": "10647-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-09T11:48:46.267Z",
  "modificationTime": "2021-09-09T11:48:46.267Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210909 11:49:02.404" endtime="20210909 11:49:02.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:49:02.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:49:02.406" endtime="20210909 11:49:02.407"/>
</kw>
<status status="PASS" starttime="20210909 11:48:54.193" endtime="20210909 11:49:02.407"/>
</kw>
<msg timestamp="20210909 11:49:02.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:48:54.193" endtime="20210909 11:49:02.407"/>
</kw>
<msg timestamp="20210909 11:49:02.407" level="INFO">${result} = {
  "metadata": {},
  "name": "10647-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210909 11:48:54.192" endtime="20210909 11:49:02.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:49:02.408" endtime="20210909 11:49:02.408"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:49:02.414" level="INFO">Running command 'ozone sh volume setquota /10647-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:49:10.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:49:10.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:49:02.410" endtime="20210909 11:49:10.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:49:10.149" level="INFO"/>
<status status="PASS" starttime="20210909 11:49:10.147" endtime="20210909 11:49:10.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:49:10.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:49:10.149" endtime="20210909 11:49:10.152"/>
</kw>
<status status="PASS" starttime="20210909 11:49:02.409" endtime="20210909 11:49:10.154"/>
</kw>
<msg timestamp="20210909 11:49:10.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:49:02.409" endtime="20210909 11:49:10.155"/>
</kw>
<status status="PASS" starttime="20210909 11:49:02.408" endtime="20210909 11:49:10.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:49:10.166" level="INFO">Running command 'ozone sh volume info /10647-rpcbasic | jq -r '. | select(.name=="10647-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:49:17.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:49:17.950" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210909 11:49:10.163" endtime="20210909 11:49:17.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:49:17.951" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210909 11:49:17.950" endtime="20210909 11:49:17.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:49:17.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:49:17.951" endtime="20210909 11:49:17.952"/>
</kw>
<status status="PASS" starttime="20210909 11:49:10.161" endtime="20210909 11:49:17.952"/>
</kw>
<msg timestamp="20210909 11:49:17.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:49:10.159" endtime="20210909 11:49:17.952"/>
</kw>
<msg timestamp="20210909 11:49:17.953" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210909 11:49:10.156" endtime="20210909 11:49:17.953"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:49:17.953" endtime="20210909 11:49:17.954"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:49:17.960" level="INFO">Running command 'ozone sh bucket create /10647-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:49:23.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:49:23.350" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:49:17.957" endtime="20210909 11:49:23.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:49:23.351" level="INFO"/>
<status status="PASS" starttime="20210909 11:49:23.350" endtime="20210909 11:49:23.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:49:23.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:49:23.352" endtime="20210909 11:49:23.352"/>
</kw>
<status status="PASS" starttime="20210909 11:49:17.956" endtime="20210909 11:49:23.353"/>
</kw>
<msg timestamp="20210909 11:49:23.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:49:17.955" endtime="20210909 11:49:23.353"/>
</kw>
<status status="PASS" starttime="20210909 11:49:17.954" endtime="20210909 11:49:23.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:49:23.358" level="INFO">Running command 'ozone sh bucket info /10647-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:49:31.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:49:31.334" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210909 11:49:23.355" endtime="20210909 11:49:31.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:49:31.335" level="INFO">DISK</msg>
<status status="PASS" starttime="20210909 11:49:31.334" endtime="20210909 11:49:31.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:49:31.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:49:31.335" endtime="20210909 11:49:31.336"/>
</kw>
<status status="PASS" starttime="20210909 11:49:23.355" endtime="20210909 11:49:31.337"/>
</kw>
<msg timestamp="20210909 11:49:31.337" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:49:23.355" endtime="20210909 11:49:31.337"/>
</kw>
<msg timestamp="20210909 11:49:31.337" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210909 11:49:23.354" endtime="20210909 11:49:31.337"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:49:31.337" endtime="20210909 11:49:31.338"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:49:31.343" level="INFO">Running command 'ozone sh bucket info /10647-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:49:38.729" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:49:38.729" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210909 11:49:31.340" endtime="20210909 11:49:38.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:49:38.731" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210909 11:49:38.730" endtime="20210909 11:49:38.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:49:38.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:49:38.732" endtime="20210909 11:49:38.733"/>
</kw>
<status status="PASS" starttime="20210909 11:49:31.340" endtime="20210909 11:49:38.733"/>
</kw>
<msg timestamp="20210909 11:49:38.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:49:31.339" endtime="20210909 11:49:38.734"/>
</kw>
<msg timestamp="20210909 11:49:38.734" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210909 11:49:31.338" endtime="20210909 11:49:38.734"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:49:38.735" endtime="20210909 11:49:38.735"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:49:38.740" level="INFO">Running command 'ozone sh bucket info /10647-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:49:46.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:49:46.520" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210909 11:49:38.738" endtime="20210909 11:49:46.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:49:46.523" level="INFO">100</msg>
<status status="PASS" starttime="20210909 11:49:46.522" endtime="20210909 11:49:46.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:49:46.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:49:46.523" endtime="20210909 11:49:46.524"/>
</kw>
<status status="PASS" starttime="20210909 11:49:38.737" endtime="20210909 11:49:46.524"/>
</kw>
<msg timestamp="20210909 11:49:46.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:49:38.737" endtime="20210909 11:49:46.525"/>
</kw>
<msg timestamp="20210909 11:49:46.526" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210909 11:49:38.736" endtime="20210909 11:49:46.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:49:46.526" endtime="20210909 11:49:46.527"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:49:46.535" level="INFO">Running command 'ozone sh bucket setquota /10647-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:49:53.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:49:53.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:49:46.530" endtime="20210909 11:49:53.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:49:53.459" level="INFO"/>
<status status="PASS" starttime="20210909 11:49:53.457" endtime="20210909 11:49:53.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:49:53.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:49:53.460" endtime="20210909 11:49:53.461"/>
</kw>
<status status="PASS" starttime="20210909 11:49:46.529" endtime="20210909 11:49:53.462"/>
</kw>
<msg timestamp="20210909 11:49:53.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:49:46.528" endtime="20210909 11:49:53.462"/>
</kw>
<status status="PASS" starttime="20210909 11:49:46.527" endtime="20210909 11:49:53.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:49:53.470" level="INFO">Running command 'ozone sh bucket info /10647-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:50:01.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:50:01.075" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210909 11:49:53.466" endtime="20210909 11:50:01.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:50:01.078" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210909 11:50:01.076" endtime="20210909 11:50:01.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:50:01.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:50:01.079" endtime="20210909 11:50:01.081"/>
</kw>
<status status="PASS" starttime="20210909 11:49:53.465" endtime="20210909 11:50:01.081"/>
</kw>
<msg timestamp="20210909 11:50:01.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:49:53.465" endtime="20210909 11:50:01.082"/>
</kw>
<msg timestamp="20210909 11:50:01.083" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210909 11:49:53.463" endtime="20210909 11:50:01.083"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:50:01.083" endtime="20210909 11:50:01.085"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:50:01.094" level="INFO">Running command 'ozone sh bucket info /10647-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:50:08.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:50:08.371" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210909 11:50:01.090" endtime="20210909 11:50:08.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:50:08.374" level="INFO">1000</msg>
<status status="PASS" starttime="20210909 11:50:08.372" endtime="20210909 11:50:08.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:50:08.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:50:08.375" endtime="20210909 11:50:08.376"/>
</kw>
<status status="PASS" starttime="20210909 11:50:01.089" endtime="20210909 11:50:08.376"/>
</kw>
<msg timestamp="20210909 11:50:08.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:50:01.088" endtime="20210909 11:50:08.377"/>
</kw>
<msg timestamp="20210909 11:50:08.378" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210909 11:50:01.085" endtime="20210909 11:50:08.378"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:50:08.378" endtime="20210909 11:50:08.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:50:08.385" level="INFO">Running command 'ozone sh bucket list /10647-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:50:15.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:50:15.691" level="INFO">${output} = 10647-rpcbasic</msg>
<status status="PASS" starttime="20210909 11:50:08.381" endtime="20210909 11:50:15.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:50:15.694" level="INFO">10647-rpcbasic</msg>
<status status="PASS" starttime="20210909 11:50:15.693" endtime="20210909 11:50:15.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:50:15.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:50:15.694" endtime="20210909 11:50:15.695"/>
</kw>
<status status="PASS" starttime="20210909 11:50:08.380" endtime="20210909 11:50:15.696"/>
</kw>
<msg timestamp="20210909 11:50:15.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:50:08.380" endtime="20210909 11:50:15.696"/>
</kw>
<msg timestamp="20210909 11:50:15.696" level="INFO">${result} = 10647-rpcbasic</msg>
<status status="PASS" starttime="20210909 11:50:08.379" endtime="20210909 11:50:15.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:50:15.696" endtime="20210909 11:50:15.697"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:50:15.707" level="INFO">Running command 'ozone sh key put /10647-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:53:27.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:53:27.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:50:15.702" endtime="20210909 11:53:27.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:53:27.188" level="INFO"/>
<status status="PASS" starttime="20210909 11:53:27.188" endtime="20210909 11:53:27.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:53:27.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:53:27.189" endtime="20210909 11:53:27.190"/>
</kw>
<status status="PASS" starttime="20210909 11:50:15.701" endtime="20210909 11:53:27.190"/>
</kw>
<msg timestamp="20210909 11:53:27.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:50:15.700" endtime="20210909 11:53:27.190"/>
</kw>
<status status="PASS" starttime="20210909 11:50:15.699" endtime="20210909 11:53:27.191"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:53:27.195" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:53:27.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:53:27.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:53:27.193" endtime="20210909 11:53:27.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:53:27.201" level="INFO"/>
<status status="PASS" starttime="20210909 11:53:27.200" endtime="20210909 11:53:27.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:53:27.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:53:27.201" endtime="20210909 11:53:27.202"/>
</kw>
<status status="PASS" starttime="20210909 11:53:27.192" endtime="20210909 11:53:27.202"/>
</kw>
<msg timestamp="20210909 11:53:27.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:53:27.191" endtime="20210909 11:53:27.203"/>
</kw>
<status status="PASS" starttime="20210909 11:53:27.191" endtime="20210909 11:53:27.203"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:53:27.208" level="INFO">Running command 'ozone sh key get /10647-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:53:33.536" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210909 11:53:27.205" endtime="20210909 11:53:33.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.538" endtime="20210909 11:53:33.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.539" endtime="20210909 11:53:33.539"/>
</kw>
<status status="FAIL" starttime="20210909 11:53:27.204" endtime="20210909 11:53:33.541"/>
</kw>
<msg timestamp="20210909 11:53:33.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210909 11:53:27.204" endtime="20210909 11:53:33.542"/>
</kw>
<status status="FAIL" starttime="20210909 11:53:27.203" endtime="20210909 11:53:33.542"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.542" endtime="20210909 11:53:33.542"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.543" endtime="20210909 11:53:33.544"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.544" endtime="20210909 11:53:33.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.545" endtime="20210909 11:53:33.545"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.545" endtime="20210909 11:53:33.545"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.545" endtime="20210909 11:53:33.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.545" endtime="20210909 11:53:33.545"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.545" endtime="20210909 11:53:33.545"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.546" endtime="20210909 11:53:33.546"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.546" endtime="20210909 11:53:33.546"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.546" endtime="20210909 11:53:33.546"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.546" endtime="20210909 11:53:33.546"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.546" endtime="20210909 11:53:33.546"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.546" endtime="20210909 11:53:33.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.549" endtime="20210909 11:53:33.550"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.550" endtime="20210909 11:53:33.550"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.550" endtime="20210909 11:53:33.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.554" endtime="20210909 11:53:33.557"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.558" endtime="20210909 11:53:33.558"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.559" endtime="20210909 11:53:33.560"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.560" endtime="20210909 11:53:33.560"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.561" endtime="20210909 11:53:33.561"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.562" endtime="20210909 11:53:33.562"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.562" endtime="20210909 11:53:33.562"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.562" endtime="20210909 11:53:33.562"/>
</kw>
<status status="FAIL" starttime="20210909 11:50:15.698" endtime="20210909 11:53:33.562"/>
</kw>
<status status="FAIL" starttime="20210909 11:50:15.697" endtime="20210909 11:53:33.564"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.566" endtime="20210909 11:53:33.566"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.566" endtime="20210909 11:53:33.566"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.566" endtime="20210909 11:53:33.566"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.566" endtime="20210909 11:53:33.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.567" endtime="20210909 11:53:33.571"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.572" endtime="20210909 11:53:33.573"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.573" endtime="20210909 11:53:33.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.573" endtime="20210909 11:53:33.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.579" endtime="20210909 11:53:33.579"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.579" endtime="20210909 11:53:33.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.580" endtime="20210909 11:53:33.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.580" endtime="20210909 11:53:33.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.580" endtime="20210909 11:53:33.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.580" endtime="20210909 11:53:33.580"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.580" endtime="20210909 11:53:33.580"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.580" endtime="20210909 11:53:33.580"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.581" endtime="20210909 11:53:33.581"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.582" endtime="20210909 11:53:33.583"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.585" endtime="20210909 11:53:33.586"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.590" endtime="20210909 11:53:33.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.590" endtime="20210909 11:53:33.590"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.590" endtime="20210909 11:53:33.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.590" endtime="20210909 11:53:33.590"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:53:33.590" endtime="20210909 11:53:33.590"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.590" endtime="20210909 11:53:33.591"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 11:53:33.591" endtime="20210909 11:53:33.591"/>
</kw>
<status status="FAIL" starttime="20210909 11:48:33.535" endtime="20210909 11:53:33.597"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210909 11:48:33.534" endtime="20210909 11:53:33.599">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210909 11:48:33.504" endtime="20210909 11:53:33.601"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210909 11:53:33.646" level="INFO">${random} = 08428</msg>
<status status="PASS" starttime="20210909 11:53:33.645" endtime="20210909 11:53:33.646"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:53:33.646" level="INFO">${prefix} = 08428</msg>
<status status="PASS" starttime="20210909 11:53:33.646" endtime="20210909 11:53:33.647"/>
</kw>
<status status="PASS" starttime="20210909 11:53:33.645" endtime="20210909 11:53:33.648"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:53:33.671" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:53:33.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:53:33.690" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:53:33.665" endtime="20210909 11:53:33.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:53:33.691" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:53:33.691" endtime="20210909 11:53:33.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:53:33.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:53:33.692" endtime="20210909 11:53:33.692"/>
</kw>
<status status="PASS" starttime="20210909 11:53:33.661" endtime="20210909 11:53:33.695"/>
</kw>
<msg timestamp="20210909 11:53:33.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:53:33.657" endtime="20210909 11:53:33.697"/>
</kw>
<msg timestamp="20210909 11:53:33.697" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:53:33.656" endtime="20210909 11:53:33.697"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:53:33.710" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:53:33.700" endtime="20210909 11:53:33.710"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:53:33.727" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:53:33.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:53:33.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:53:33.720" endtime="20210909 11:53:33.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:53:33.770" level="INFO"/>
<status status="PASS" starttime="20210909 11:53:33.765" endtime="20210909 11:53:33.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:53:33.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:53:33.770" endtime="20210909 11:53:33.771"/>
</kw>
<status status="PASS" starttime="20210909 11:53:33.718" endtime="20210909 11:53:33.772"/>
</kw>
<msg timestamp="20210909 11:53:33.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:53:33.716" endtime="20210909 11:53:33.772"/>
</kw>
<status status="PASS" starttime="20210909 11:53:33.714" endtime="20210909 11:53:33.772"/>
</kw>
<status status="PASS" starttime="20210909 11:53:33.712" endtime="20210909 11:53:33.772"/>
</kw>
<status status="PASS" starttime="20210909 11:53:33.656" endtime="20210909 11:53:33.772"/>
</kw>
<status status="PASS" starttime="20210909 11:53:33.655" endtime="20210909 11:53:33.773"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:53:33.777" level="INFO">Running command 'ozone sh volume info o3://om:9862/08428-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:53:44.828" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 11:53:44.829" level="INFO">${output} = VOLUME_NOT_FOUND Volume 08428-rpcwoport is not found</msg>
<status status="PASS" starttime="20210909 11:53:33.774" endtime="20210909 11:53:44.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:53:44.830" level="INFO">VOLUME_NOT_FOUND Volume 08428-rpcwoport is not found</msg>
<status status="PASS" starttime="20210909 11:53:44.829" endtime="20210909 11:53:44.830"/>
</kw>
<msg timestamp="20210909 11:53:44.830" level="INFO">${result} = VOLUME_NOT_FOUND Volume 08428-rpcwoport is not found</msg>
<status status="PASS" starttime="20210909 11:53:33.774" endtime="20210909 11:53:44.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:53:44.831" endtime="20210909 11:53:44.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:53:44.835" level="INFO">Running command 'ozone sh volume create o3://om:9862/08428-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:53:49.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:53:49.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:53:44.833" endtime="20210909 11:53:49.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:53:49.613" level="INFO"/>
<status status="PASS" starttime="20210909 11:53:49.599" endtime="20210909 11:53:49.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:53:49.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:53:49.616" endtime="20210909 11:53:49.617"/>
</kw>
<status status="PASS" starttime="20210909 11:53:44.832" endtime="20210909 11:53:49.618"/>
</kw>
<msg timestamp="20210909 11:53:49.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:53:44.832" endtime="20210909 11:53:49.618"/>
</kw>
<msg timestamp="20210909 11:53:49.618" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210909 11:53:44.831" endtime="20210909 11:53:49.618"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:53:49.619" endtime="20210909 11:53:49.620"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:53:49.627" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="08428-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:53:57.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:53:57.538" level="INFO">${output} = {
  "metadata": {},
  "name": "08428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210909 11:53:49.624" endtime="20210909 11:53:57.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:53:57.541" level="INFO">{
  "metadata": {},
  "name": "08428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-09T11:53:49.457Z",
  "modificationTime": "2021-09-09T11:53:49.457Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210909 11:53:57.539" endtime="20210909 11:53:57.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:53:57.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:53:57.542" endtime="20210909 11:53:57.543"/>
</kw>
<status status="PASS" starttime="20210909 11:53:49.623" endtime="20210909 11:53:57.544"/>
</kw>
<msg timestamp="20210909 11:53:57.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:53:49.623" endtime="20210909 11:53:57.545"/>
</kw>
<msg timestamp="20210909 11:53:57.545" level="INFO">${result} = {
  "metadata": {},
  "name": "08428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210909 11:53:49.620" endtime="20210909 11:53:57.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:53:57.546" endtime="20210909 11:53:57.547"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:53:57.553" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="08428-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:54:04.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:54:04.886" level="INFO">${output} = {
  "metadata": {},
  "name": "08428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210909 11:53:57.550" endtime="20210909 11:54:04.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:54:04.888" level="INFO">{
  "metadata": {},
  "name": "08428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-09T11:53:49.457Z",
  "modificationTime": "2021-09-09T11:53:49.457Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210909 11:54:04.887" endtime="20210909 11:54:04.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:54:04.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:54:04.888" endtime="20210909 11:54:04.888"/>
</kw>
<status status="PASS" starttime="20210909 11:53:57.549" endtime="20210909 11:54:04.889"/>
</kw>
<msg timestamp="20210909 11:54:04.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:53:57.548" endtime="20210909 11:54:04.889"/>
</kw>
<msg timestamp="20210909 11:54:04.889" level="INFO">${result} = {
  "metadata": {},
  "name": "08428-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210909 11:53:57.547" endtime="20210909 11:54:04.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 11:54:04.889" endtime="20210909 11:54:04.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:54:04.895" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/08428-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:54:12.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:54:12.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:54:04.892" endtime="20210909 11:54:12.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:54:12.861" level="INFO"/>
<status status="PASS" starttime="20210909 11:54:12.859" endtime="20210909 11:54:12.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:54:12.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:54:12.862" endtime="20210909 11:54:12.863"/>
</kw>
<status status="PASS" starttime="20210909 11:54:04.891" endtime="20210909 11:54:12.863"/>
</kw>
<msg timestamp="20210909 11:54:12.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:54:04.891" endtime="20210909 11:54:12.864"/>
</kw>
<status status="PASS" starttime="20210909 11:54:04.890" endtime="20210909 11:54:12.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:54:12.872" level="INFO">Running command 'ozone sh volume info o3://om:9862/08428-rpcwoport | jq -r '. | select(.name=="08428-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:54:21.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:54:21.018" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210909 11:54:12.869" endtime="20210909 11:54:21.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:54:21.019" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210909 11:54:21.018" endtime="20210909 11:54:21.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:54:21.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:54:21.019" endtime="20210909 11:54:21.020"/>
</kw>
<status status="PASS" starttime="20210909 11:54:12.867" endtime="20210909 11:54:21.020"/>
</kw>
<msg timestamp="20210909 11:54:21.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:54:12.867" endtime="20210909 11:54:21.021"/>
</kw>
<msg timestamp="20210909 11:54:21.021" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210909 11:54:12.865" endtime="20210909 11:54:21.021"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:54:21.021" endtime="20210909 11:54:21.022"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:54:21.026" level="INFO">Running command 'ozone sh bucket create o3://om:9862/08428-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:54:28.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:54:28.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:54:21.024" endtime="20210909 11:54:28.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:54:28.171" level="INFO"/>
<status status="PASS" starttime="20210909 11:54:28.170" endtime="20210909 11:54:28.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:54:28.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:54:28.171" endtime="20210909 11:54:28.172"/>
</kw>
<status status="PASS" starttime="20210909 11:54:21.023" endtime="20210909 11:54:28.172"/>
</kw>
<msg timestamp="20210909 11:54:28.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:54:21.022" endtime="20210909 11:54:28.172"/>
</kw>
<status status="PASS" starttime="20210909 11:54:21.022" endtime="20210909 11:54:28.173"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:54:28.180" level="INFO">Running command 'ozone sh bucket info o3://om:9862/08428-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:54:35.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:54:35.467" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210909 11:54:28.177" endtime="20210909 11:54:35.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:54:35.469" level="INFO">DISK</msg>
<status status="PASS" starttime="20210909 11:54:35.468" endtime="20210909 11:54:35.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:54:35.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:54:35.469" endtime="20210909 11:54:35.470"/>
</kw>
<status status="PASS" starttime="20210909 11:54:28.176" endtime="20210909 11:54:35.470"/>
</kw>
<msg timestamp="20210909 11:54:35.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:54:28.175" endtime="20210909 11:54:35.471"/>
</kw>
<msg timestamp="20210909 11:54:35.472" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210909 11:54:28.173" endtime="20210909 11:54:35.472"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:54:35.472" endtime="20210909 11:54:35.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:54:35.480" level="INFO">Running command 'ozone sh bucket info o3://om:9862/08428-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:54:42.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:54:42.960" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210909 11:54:35.477" endtime="20210909 11:54:42.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:54:42.963" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210909 11:54:42.961" endtime="20210909 11:54:42.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:54:42.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:54:42.963" endtime="20210909 11:54:42.965"/>
</kw>
<status status="PASS" starttime="20210909 11:54:35.476" endtime="20210909 11:54:42.966"/>
</kw>
<msg timestamp="20210909 11:54:42.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:54:35.476" endtime="20210909 11:54:42.967"/>
</kw>
<msg timestamp="20210909 11:54:42.967" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210909 11:54:35.474" endtime="20210909 11:54:42.968"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:54:42.968" endtime="20210909 11:54:42.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:54:42.978" level="INFO">Running command 'ozone sh bucket info o3://om:9862/08428-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:54:50.907" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:54:50.907" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210909 11:54:42.974" endtime="20210909 11:54:50.907"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:54:50.910" level="INFO">100</msg>
<status status="PASS" starttime="20210909 11:54:50.908" endtime="20210909 11:54:50.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:54:50.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:54:50.910" endtime="20210909 11:54:50.911"/>
</kw>
<status status="PASS" starttime="20210909 11:54:42.973" endtime="20210909 11:54:50.912"/>
</kw>
<msg timestamp="20210909 11:54:50.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:54:42.972" endtime="20210909 11:54:50.912"/>
</kw>
<msg timestamp="20210909 11:54:50.912" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210909 11:54:42.970" endtime="20210909 11:54:50.912"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:54:50.913" endtime="20210909 11:54:50.914"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:54:50.926" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/08428-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:54:58.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:54:58.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:54:50.919" endtime="20210909 11:54:58.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:54:58.323" level="INFO"/>
<status status="PASS" starttime="20210909 11:54:58.322" endtime="20210909 11:54:58.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:54:58.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:54:58.324" endtime="20210909 11:54:58.325"/>
</kw>
<status status="PASS" starttime="20210909 11:54:50.917" endtime="20210909 11:54:58.325"/>
</kw>
<msg timestamp="20210909 11:54:58.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:54:50.916" endtime="20210909 11:54:58.326"/>
</kw>
<status status="PASS" starttime="20210909 11:54:50.914" endtime="20210909 11:54:58.326"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:54:58.332" level="INFO">Running command 'ozone sh bucket info o3://om:9862/08428-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:55:06.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:55:06.490" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210909 11:54:58.329" endtime="20210909 11:55:06.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:55:06.492" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210909 11:55:06.491" endtime="20210909 11:55:06.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:55:06.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:55:06.492" endtime="20210909 11:55:06.493"/>
</kw>
<status status="PASS" starttime="20210909 11:54:58.328" endtime="20210909 11:55:06.493"/>
</kw>
<msg timestamp="20210909 11:55:06.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:54:58.328" endtime="20210909 11:55:06.493"/>
</kw>
<msg timestamp="20210909 11:55:06.493" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210909 11:54:58.326" endtime="20210909 11:55:06.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:55:06.494" endtime="20210909 11:55:06.494"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:55:06.499" level="INFO">Running command 'ozone sh bucket info o3://om:9862/08428-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:55:14.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:55:14.526" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210909 11:55:06.496" endtime="20210909 11:55:14.526"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:55:14.528" level="INFO">1000</msg>
<status status="PASS" starttime="20210909 11:55:14.527" endtime="20210909 11:55:14.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:55:14.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:55:14.529" endtime="20210909 11:55:14.530"/>
</kw>
<status status="PASS" starttime="20210909 11:55:06.496" endtime="20210909 11:55:14.531"/>
</kw>
<msg timestamp="20210909 11:55:14.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:55:06.495" endtime="20210909 11:55:14.531"/>
</kw>
<msg timestamp="20210909 11:55:14.532" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210909 11:55:06.494" endtime="20210909 11:55:14.532"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:55:14.532" endtime="20210909 11:55:14.533"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:55:14.540" level="INFO">Running command 'ozone sh bucket list o3://om:9862/08428-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:55:20.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:55:20.258" level="INFO">${output} = 08428-rpcwoport</msg>
<status status="PASS" starttime="20210909 11:55:14.537" endtime="20210909 11:55:20.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:55:20.260" level="INFO">08428-rpcwoport</msg>
<status status="PASS" starttime="20210909 11:55:20.259" endtime="20210909 11:55:20.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:55:20.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:55:20.260" endtime="20210909 11:55:20.261"/>
</kw>
<status status="PASS" starttime="20210909 11:55:14.536" endtime="20210909 11:55:20.261"/>
</kw>
<msg timestamp="20210909 11:55:20.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:55:14.535" endtime="20210909 11:55:20.261"/>
</kw>
<msg timestamp="20210909 11:55:20.262" level="INFO">${result} = 08428-rpcwoport</msg>
<status status="PASS" starttime="20210909 11:55:14.533" endtime="20210909 11:55:20.262"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 11:55:20.262" endtime="20210909 11:55:20.262"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:55:20.280" level="INFO">Running command 'ozone sh key put o3://om:9862/08428-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:58:32.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:58:32.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:55:20.266" endtime="20210909 11:58:32.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:58:32.193" level="INFO"/>
<status status="PASS" starttime="20210909 11:58:32.189" endtime="20210909 11:58:32.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:58:32.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:58:32.193" endtime="20210909 11:58:32.194"/>
</kw>
<status status="PASS" starttime="20210909 11:55:20.266" endtime="20210909 11:58:32.194"/>
</kw>
<msg timestamp="20210909 11:58:32.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:55:20.264" endtime="20210909 11:58:32.194"/>
</kw>
<status status="PASS" starttime="20210909 11:55:20.264" endtime="20210909 11:58:32.194"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:58:32.198" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:58:32.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:58:32.202" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:58:32.196" endtime="20210909 11:58:32.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:58:32.203" level="INFO"/>
<status status="PASS" starttime="20210909 11:58:32.203" endtime="20210909 11:58:32.204"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:58:32.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:58:32.204" endtime="20210909 11:58:32.205"/>
</kw>
<status status="PASS" starttime="20210909 11:58:32.195" endtime="20210909 11:58:32.205"/>
</kw>
<msg timestamp="20210909 11:58:32.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:58:32.195" endtime="20210909 11:58:32.206"/>
</kw>
<status status="PASS" starttime="20210909 11:58:32.195" endtime="20210909 11:58:32.206"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:58:32.211" level="INFO">Running command 'ozone sh key get o3://om:9862/08428-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:58:33.651" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210909 11:58:32.209" endtime="20210909 11:58:33.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.652" endtime="20210909 11:58:33.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.652" endtime="20210909 11:58:33.653"/>
</kw>
<status status="FAIL" starttime="20210909 11:58:32.208" endtime="20210909 11:58:33.653"/>
</kw>
<msg timestamp="20210909 11:58:33.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210909 11:58:32.207" endtime="20210909 11:58:33.653"/>
</kw>
<status status="FAIL" starttime="20210909 11:58:32.206" endtime="20210909 11:58:33.656"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.656" endtime="20210909 11:58:33.656"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.657" endtime="20210909 11:58:33.657"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.657" endtime="20210909 11:58:33.657"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.657" endtime="20210909 11:58:33.661"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.661" endtime="20210909 11:58:33.661"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.661" endtime="20210909 11:58:33.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.664" endtime="20210909 11:58:33.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.664" endtime="20210909 11:58:33.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.664" endtime="20210909 11:58:33.664"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.664" endtime="20210909 11:58:33.664"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.664" endtime="20210909 11:58:33.665"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.665" endtime="20210909 11:58:33.665"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.665" endtime="20210909 11:58:33.665"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.665" endtime="20210909 11:58:33.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.665" endtime="20210909 11:58:33.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.673" endtime="20210909 11:58:33.673"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.673" endtime="20210909 11:58:33.673"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.676" endtime="20210909 11:58:33.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.676" endtime="20210909 11:58:33.676"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.677" endtime="20210909 11:58:33.677"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.677" endtime="20210909 11:58:33.677"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.677" endtime="20210909 11:58:33.677"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.677" endtime="20210909 11:58:33.677"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.680" endtime="20210909 11:58:33.681"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.681" endtime="20210909 11:58:33.681"/>
</kw>
<status status="FAIL" starttime="20210909 11:55:20.263" endtime="20210909 11:58:33.681"/>
</kw>
<status status="FAIL" starttime="20210909 11:55:20.262" endtime="20210909 11:58:33.681"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.681" endtime="20210909 11:58:33.681"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.681" endtime="20210909 11:58:33.682"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.682" endtime="20210909 11:58:33.682"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.682" endtime="20210909 11:58:33.682"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.682" endtime="20210909 11:58:33.682"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.682" endtime="20210909 11:58:33.686"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.686" endtime="20210909 11:58:33.686"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.687" endtime="20210909 11:58:33.687"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.687" endtime="20210909 11:58:33.687"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.687" endtime="20210909 11:58:33.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.687" endtime="20210909 11:58:33.687"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.687" endtime="20210909 11:58:33.690"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.691" endtime="20210909 11:58:33.691"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.691" endtime="20210909 11:58:33.691"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.693" endtime="20210909 11:58:33.693"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.694" endtime="20210909 11:58:33.694"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.694" endtime="20210909 11:58:33.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.694" endtime="20210909 11:58:33.694"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.694" endtime="20210909 11:58:33.694"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.694" endtime="20210909 11:58:33.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.695" endtime="20210909 11:58:33.695"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.695" endtime="20210909 11:58:33.695"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.695" endtime="20210909 11:58:33.695"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 11:58:33.743" endtime="20210909 11:58:33.743"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.743" endtime="20210909 11:58:33.743"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 11:58:33.743" endtime="20210909 11:58:33.743"/>
</kw>
<status status="FAIL" starttime="20210909 11:53:33.773" endtime="20210909 11:58:33.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210909 11:53:33.648" endtime="20210909 11:58:33.744">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:58:33.767" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:58:33.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:58:33.780" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:58:33.760" endtime="20210909 11:58:33.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:58:33.787" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:58:33.781" endtime="20210909 11:58:33.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:58:33.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:58:33.787" endtime="20210909 11:58:33.788"/>
</kw>
<status status="PASS" starttime="20210909 11:58:33.756" endtime="20210909 11:58:33.788"/>
</kw>
<msg timestamp="20210909 11:58:33.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:58:33.753" endtime="20210909 11:58:33.788"/>
</kw>
<msg timestamp="20210909 11:58:33.788" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:58:33.753" endtime="20210909 11:58:33.788"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:58:33.796" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:58:33.789" endtime="20210909 11:58:33.796"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:58:33.810" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:58:33.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:58:33.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:58:33.799" endtime="20210909 11:58:33.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:58:33.877" level="INFO"/>
<status status="PASS" starttime="20210909 11:58:33.876" endtime="20210909 11:58:33.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:58:33.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:58:33.877" endtime="20210909 11:58:33.878"/>
</kw>
<status status="PASS" starttime="20210909 11:58:33.798" endtime="20210909 11:58:33.879"/>
</kw>
<msg timestamp="20210909 11:58:33.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:58:33.798" endtime="20210909 11:58:33.880"/>
</kw>
<status status="PASS" starttime="20210909 11:58:33.797" endtime="20210909 11:58:33.880"/>
</kw>
<status status="PASS" starttime="20210909 11:58:33.796" endtime="20210909 11:58:33.880"/>
</kw>
<status status="PASS" starttime="20210909 11:58:33.752" endtime="20210909 11:58:33.880"/>
</kw>
<status status="PASS" starttime="20210909 11:58:33.752" endtime="20210909 11:58:33.881"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:58:33.897" level="INFO">Running command 'ozone sh volume create o3://om:9862/08428-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:58:48.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:58:48.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:58:33.884" endtime="20210909 11:58:48.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:58:48.634" level="INFO"/>
<status status="PASS" starttime="20210909 11:58:48.633" endtime="20210909 11:58:48.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:58:48.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:58:48.637" endtime="20210909 11:58:48.639"/>
</kw>
<status status="PASS" starttime="20210909 11:58:33.883" endtime="20210909 11:58:48.640"/>
</kw>
<msg timestamp="20210909 11:58:48.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:58:33.883" endtime="20210909 11:58:48.641"/>
</kw>
<status status="PASS" starttime="20210909 11:58:33.882" endtime="20210909 11:58:48.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:58:48.655" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/08428-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:58:57.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:58:57.749" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 11:58:48.650" endtime="20210909 11:58:57.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:58:57.751" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 11:58:57.750" endtime="20210909 11:58:57.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:58:57.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:58:57.751" endtime="20210909 11:58:57.752"/>
</kw>
<status status="PASS" starttime="20210909 11:58:48.650" endtime="20210909 11:58:57.752"/>
</kw>
<msg timestamp="20210909 11:58:57.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:58:48.648" endtime="20210909 11:58:57.752"/>
</kw>
<msg timestamp="20210909 11:58:57.752" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 11:58:48.641" endtime="20210909 11:58:57.752"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 11:58:57.753" endtime="20210909 11:58:57.754"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:58:57.758" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/08428-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:59:04.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:59:04.679" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210909 11:58:57.755" endtime="20210909 11:59:04.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:59:04.681" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210909 11:59:04.680" endtime="20210909 11:59:04.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:59:04.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:59:04.682" endtime="20210909 11:59:04.683"/>
</kw>
<status status="PASS" starttime="20210909 11:58:57.755" endtime="20210909 11:59:04.684"/>
</kw>
<msg timestamp="20210909 11:59:04.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:58:57.755" endtime="20210909 11:59:04.684"/>
</kw>
<msg timestamp="20210909 11:59:04.685" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210909 11:58:57.754" endtime="20210909 11:59:04.685"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:59:04.692" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/08428-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:59:12.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:59:12.432" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210909 11:59:04.689" endtime="20210909 11:59:12.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:59:12.434" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210909 11:59:12.433" endtime="20210909 11:59:12.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:59:12.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:59:12.434" endtime="20210909 11:59:12.434"/>
</kw>
<status status="PASS" starttime="20210909 11:59:04.688" endtime="20210909 11:59:12.435"/>
</kw>
<msg timestamp="20210909 11:59:12.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:59:04.687" endtime="20210909 11:59:12.435"/>
</kw>
<msg timestamp="20210909 11:59:12.435" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210909 11:59:04.685" endtime="20210909 11:59:12.435"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 11:59:12.435" endtime="20210909 11:59:12.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:59:12.442" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/08428-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:59:19.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:59:19.372" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210909 11:59:12.439" endtime="20210909 11:59:19.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:59:19.373" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210909 11:59:19.372" endtime="20210909 11:59:19.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:59:19.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:59:19.373" endtime="20210909 11:59:19.374"/>
</kw>
<status status="PASS" starttime="20210909 11:59:12.438" endtime="20210909 11:59:19.374"/>
</kw>
<msg timestamp="20210909 11:59:19.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:59:12.438" endtime="20210909 11:59:19.375"/>
</kw>
<msg timestamp="20210909 11:59:19.375" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210909 11:59:12.437" endtime="20210909 11:59:19.375"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:59:19.380" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/08428-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:59:26.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:59:26.943" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210909 11:59:19.377" endtime="20210909 11:59:26.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:59:26.944" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210909 11:59:26.943" endtime="20210909 11:59:26.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:59:26.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:59:26.944" endtime="20210909 11:59:26.945"/>
</kw>
<status status="PASS" starttime="20210909 11:59:19.376" endtime="20210909 11:59:26.945"/>
</kw>
<msg timestamp="20210909 11:59:26.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:59:19.376" endtime="20210909 11:59:26.946"/>
</kw>
<msg timestamp="20210909 11:59:26.946" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210909 11:59:19.375" endtime="20210909 11:59:26.946"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 11:59:26.946" endtime="20210909 11:59:26.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:59:26.953" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/08428-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:59:35.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:59:35.469" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 11:59:26.950" endtime="20210909 11:59:35.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:59:35.473" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 11:59:35.471" endtime="20210909 11:59:35.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:59:35.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:59:35.474" endtime="20210909 11:59:35.475"/>
</kw>
<status status="PASS" starttime="20210909 11:59:26.948" endtime="20210909 11:59:35.476"/>
</kw>
<msg timestamp="20210909 11:59:35.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:59:26.948" endtime="20210909 11:59:35.477"/>
</kw>
<msg timestamp="20210909 11:59:35.477" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 11:59:26.947" endtime="20210909 11:59:35.478"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:59:35.485" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/08428-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:59:43.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:59:43.044" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210909 11:59:35.481" endtime="20210909 11:59:43.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:59:43.046" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 11:59:43.045" endtime="20210909 11:59:43.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:59:43.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:59:43.047" endtime="20210909 11:59:43.048"/>
</kw>
<status status="PASS" starttime="20210909 11:59:35.480" endtime="20210909 11:59:43.048"/>
</kw>
<msg timestamp="20210909 11:59:43.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:59:35.480" endtime="20210909 11:59:43.048"/>
</kw>
<msg timestamp="20210909 11:59:43.049" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210909 11:59:35.478" endtime="20210909 11:59:43.049"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 11:59:43.049" endtime="20210909 11:59:43.050"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 11:59:43.050" endtime="20210909 11:59:43.051"/>
</kw>
<status status="PASS" starttime="20210909 11:58:33.881" endtime="20210909 11:59:43.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210909 11:58:33.751" endtime="20210909 11:59:43.053"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:59:43.061" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:59:43.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:59:43.066" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:59:43.058" endtime="20210909 11:59:43.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:59:43.068" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:59:43.067" endtime="20210909 11:59:43.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:59:43.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:59:43.068" endtime="20210909 11:59:43.069"/>
</kw>
<status status="PASS" starttime="20210909 11:59:43.058" endtime="20210909 11:59:43.069"/>
</kw>
<msg timestamp="20210909 11:59:43.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:59:43.057" endtime="20210909 11:59:43.069"/>
</kw>
<msg timestamp="20210909 11:59:43.070" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:59:43.057" endtime="20210909 11:59:43.070"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:59:43.071" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:59:43.070" endtime="20210909 11:59:43.071"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:59:43.075" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:59:43.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:59:43.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:59:43.073" endtime="20210909 11:59:43.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:59:43.088" level="INFO"/>
<status status="PASS" starttime="20210909 11:59:43.086" endtime="20210909 11:59:43.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:59:43.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:59:43.088" endtime="20210909 11:59:43.089"/>
</kw>
<status status="PASS" starttime="20210909 11:59:43.073" endtime="20210909 11:59:43.089"/>
</kw>
<msg timestamp="20210909 11:59:43.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:59:43.072" endtime="20210909 11:59:43.090"/>
</kw>
<status status="PASS" starttime="20210909 11:59:43.072" endtime="20210909 11:59:43.090"/>
</kw>
<status status="PASS" starttime="20210909 11:59:43.071" endtime="20210909 11:59:43.090"/>
</kw>
<status status="PASS" starttime="20210909 11:59:43.056" endtime="20210909 11:59:43.090"/>
</kw>
<status status="PASS" starttime="20210909 11:59:43.056" endtime="20210909 11:59:43.090"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:59:43.095" level="INFO">Running command 'ozone sh bucket create o3://om:9862/08428-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:59:48.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:59:48.638" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:59:43.093" endtime="20210909 11:59:48.638"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:59:48.639" level="INFO"/>
<status status="PASS" starttime="20210909 11:59:48.639" endtime="20210909 11:59:48.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:59:48.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:59:48.640" endtime="20210909 11:59:48.640"/>
</kw>
<status status="PASS" starttime="20210909 11:59:43.092" endtime="20210909 11:59:48.641"/>
</kw>
<msg timestamp="20210909 11:59:48.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:59:43.092" endtime="20210909 11:59:48.641"/>
</kw>
<status status="PASS" starttime="20210909 11:59:43.091" endtime="20210909 11:59:48.641"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:59:48.645" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/08428-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:59:54.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:59:54.506" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210909 11:59:48.643" endtime="20210909 11:59:54.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:59:54.509" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 11:59:54.507" endtime="20210909 11:59:54.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:59:54.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:59:54.509" endtime="20210909 11:59:54.511"/>
</kw>
<status status="PASS" starttime="20210909 11:59:48.642" endtime="20210909 11:59:54.512"/>
</kw>
<msg timestamp="20210909 11:59:54.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:59:48.642" endtime="20210909 11:59:54.512"/>
</kw>
<msg timestamp="20210909 11:59:54.513" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210909 11:59:48.641" endtime="20210909 11:59:54.513"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 11:59:54.514" endtime="20210909 11:59:54.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:59:54.521" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/08428-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:00:00.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:00:00.512" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210909 11:59:54.518" endtime="20210909 12:00:00.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:00:00.513" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210909 12:00:00.512" endtime="20210909 12:00:00.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:00:00.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:00:00.513" endtime="20210909 12:00:00.514"/>
</kw>
<status status="PASS" starttime="20210909 11:59:54.517" endtime="20210909 12:00:00.514"/>
</kw>
<msg timestamp="20210909 12:00:00.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:59:54.516" endtime="20210909 12:00:00.515"/>
</kw>
<msg timestamp="20210909 12:00:00.515" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210909 11:59:54.515" endtime="20210909 12:00:00.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:00:00.519" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/08428-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:00:06.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:00:06.995" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210909 12:00:00.517" endtime="20210909 12:00:06.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:00:06.997" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:00:06.996" endtime="20210909 12:00:06.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:00:06.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:00:06.997" endtime="20210909 12:00:06.998"/>
</kw>
<status status="PASS" starttime="20210909 12:00:00.516" endtime="20210909 12:00:06.998"/>
</kw>
<msg timestamp="20210909 12:00:06.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:00:00.516" endtime="20210909 12:00:06.999"/>
</kw>
<msg timestamp="20210909 12:00:06.999" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210909 12:00:00.515" endtime="20210909 12:00:06.999"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:00:06.999" endtime="20210909 12:00:07.001"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:00:07.006" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/08428-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:00:14.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:00:14.197" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210909 12:00:07.003" endtime="20210909 12:00:14.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:00:14.201" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210909 12:00:14.199" endtime="20210909 12:00:14.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:00:14.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:00:14.202" endtime="20210909 12:00:14.203"/>
</kw>
<status status="PASS" starttime="20210909 12:00:07.002" endtime="20210909 12:00:14.204"/>
</kw>
<msg timestamp="20210909 12:00:14.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:00:07.002" endtime="20210909 12:00:14.204"/>
</kw>
<msg timestamp="20210909 12:00:14.204" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210909 12:00:07.001" endtime="20210909 12:00:14.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:00:14.210" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/08428-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:00:21.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:00:21.506" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210909 12:00:14.206" endtime="20210909 12:00:21.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:00:21.507" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:00:21.506" endtime="20210909 12:00:21.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:00:21.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:00:21.507" endtime="20210909 12:00:21.509"/>
</kw>
<status status="PASS" starttime="20210909 12:00:14.206" endtime="20210909 12:00:21.510"/>
</kw>
<msg timestamp="20210909 12:00:21.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:00:14.205" endtime="20210909 12:00:21.510"/>
</kw>
<msg timestamp="20210909 12:00:21.511" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210909 12:00:14.205" endtime="20210909 12:00:21.511"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:00:21.511" endtime="20210909 12:00:21.513"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:00:21.519" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/08428-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:00:28.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:00:28.636" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 12:00:21.516" endtime="20210909 12:00:28.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:00:28.637" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 12:00:28.637" endtime="20210909 12:00:28.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:00:28.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:00:28.638" endtime="20210909 12:00:28.638"/>
</kw>
<status status="PASS" starttime="20210909 12:00:21.515" endtime="20210909 12:00:28.639"/>
</kw>
<msg timestamp="20210909 12:00:28.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:00:21.514" endtime="20210909 12:00:28.639"/>
</kw>
<msg timestamp="20210909 12:00:28.639" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 12:00:21.513" endtime="20210909 12:00:28.639"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:00:28.644" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/08428-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:00:36.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:00:36.027" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210909 12:00:28.641" endtime="20210909 12:00:36.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:00:36.029" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:00:36.028" endtime="20210909 12:00:36.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:00:36.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:00:36.029" endtime="20210909 12:00:36.030"/>
</kw>
<status status="PASS" starttime="20210909 12:00:28.640" endtime="20210909 12:00:36.030"/>
</kw>
<msg timestamp="20210909 12:00:36.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:00:28.640" endtime="20210909 12:00:36.031"/>
</kw>
<msg timestamp="20210909 12:00:36.031" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210909 12:00:28.639" endtime="20210909 12:00:36.031"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:00:36.031" endtime="20210909 12:00:36.032"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:00:36.032" endtime="20210909 12:00:36.032"/>
</kw>
<status status="PASS" starttime="20210909 11:59:43.090" endtime="20210909 12:00:36.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210909 11:59:43.054" endtime="20210909 12:00:36.033"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:00:36.041" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:00:36.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:00:36.044" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 12:00:36.037" endtime="20210909 12:00:36.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:00:36.046" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 12:00:36.045" endtime="20210909 12:00:36.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:00:36.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:00:36.046" endtime="20210909 12:00:36.047"/>
</kw>
<status status="PASS" starttime="20210909 12:00:36.036" endtime="20210909 12:00:36.048"/>
</kw>
<msg timestamp="20210909 12:00:36.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:00:36.036" endtime="20210909 12:00:36.048"/>
</kw>
<msg timestamp="20210909 12:00:36.048" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 12:00:36.035" endtime="20210909 12:00:36.048"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 12:00:36.049" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 12:00:36.048" endtime="20210909 12:00:36.049"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:00:36.055" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:00:36.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:00:36.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:00:36.052" endtime="20210909 12:00:36.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:00:36.066" level="INFO"/>
<status status="PASS" starttime="20210909 12:00:36.065" endtime="20210909 12:00:36.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:00:36.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:00:36.067" endtime="20210909 12:00:36.068"/>
</kw>
<status status="PASS" starttime="20210909 12:00:36.051" endtime="20210909 12:00:36.068"/>
</kw>
<msg timestamp="20210909 12:00:36.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:00:36.051" endtime="20210909 12:00:36.069"/>
</kw>
<status status="PASS" starttime="20210909 12:00:36.050" endtime="20210909 12:00:36.069"/>
</kw>
<status status="PASS" starttime="20210909 12:00:36.049" endtime="20210909 12:00:36.069"/>
</kw>
<status status="PASS" starttime="20210909 12:00:36.035" endtime="20210909 12:00:36.069"/>
</kw>
<status status="PASS" starttime="20210909 12:00:36.034" endtime="20210909 12:00:36.069"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:00:36.074" level="INFO">Running command 'ozone sh key put o3://om:9862/08428-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:03:48.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:03:48.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:00:36.072" endtime="20210909 12:03:48.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:03:48.133" level="INFO"/>
<status status="PASS" starttime="20210909 12:03:48.132" endtime="20210909 12:03:48.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:03:48.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:03:48.134" endtime="20210909 12:03:48.134"/>
</kw>
<status status="PASS" starttime="20210909 12:00:36.071" endtime="20210909 12:03:48.135"/>
</kw>
<msg timestamp="20210909 12:03:48.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:00:36.071" endtime="20210909 12:03:48.135"/>
</kw>
<status status="PASS" starttime="20210909 12:00:36.070" endtime="20210909 12:03:48.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:03:48.139" level="INFO">Running command 'ozone sh key getacl o3://om:9862/08428-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:03:56.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:03:56.309" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210909 12:03:48.137" endtime="20210909 12:03:56.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:03:56.312" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:03:56.310" endtime="20210909 12:03:56.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:03:56.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:03:56.312" endtime="20210909 12:03:56.314"/>
</kw>
<status status="PASS" starttime="20210909 12:03:48.136" endtime="20210909 12:03:56.314"/>
</kw>
<msg timestamp="20210909 12:03:56.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:03:48.136" endtime="20210909 12:03:56.315"/>
</kw>
<msg timestamp="20210909 12:03:56.315" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210909 12:03:48.135" endtime="20210909 12:03:56.316"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:03:56.316" endtime="20210909 12:03:56.317"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:03:56.323" level="INFO">Running command 'ozone sh key addacl o3://om:9862/08428-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:04:03.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:04:03.789" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 12:03:56.320" endtime="20210909 12:04:03.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:04:03.792" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 12:04:03.790" endtime="20210909 12:04:03.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:04:03.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:04:03.792" endtime="20210909 12:04:03.793"/>
</kw>
<status status="PASS" starttime="20210909 12:03:56.319" endtime="20210909 12:04:03.793"/>
</kw>
<msg timestamp="20210909 12:04:03.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:03:56.318" endtime="20210909 12:04:03.794"/>
</kw>
<msg timestamp="20210909 12:04:03.794" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210909 12:03:56.317" endtime="20210909 12:04:03.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:04:03.800" level="INFO">Running command 'ozone sh key getacl o3://om:9862/08428-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:04:10.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:04:10.958" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210909 12:04:03.797" endtime="20210909 12:04:10.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:04:10.959" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:04:10.959" endtime="20210909 12:04:10.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:04:10.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:04:10.960" endtime="20210909 12:04:10.960"/>
</kw>
<status status="PASS" starttime="20210909 12:04:03.796" endtime="20210909 12:04:10.961"/>
</kw>
<msg timestamp="20210909 12:04:10.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:04:03.795" endtime="20210909 12:04:10.961"/>
</kw>
<msg timestamp="20210909 12:04:10.961" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210909 12:04:03.794" endtime="20210909 12:04:10.961"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:04:10.962" endtime="20210909 12:04:10.963"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:04:10.967" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/08428-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:04:19.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:04:19.295" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210909 12:04:10.964" endtime="20210909 12:04:19.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:04:19.297" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210909 12:04:19.296" endtime="20210909 12:04:19.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:04:19.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:04:19.297" endtime="20210909 12:04:19.298"/>
</kw>
<status status="PASS" starttime="20210909 12:04:10.964" endtime="20210909 12:04:19.298"/>
</kw>
<msg timestamp="20210909 12:04:19.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:04:10.964" endtime="20210909 12:04:19.298"/>
</kw>
<msg timestamp="20210909 12:04:19.299" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210909 12:04:10.963" endtime="20210909 12:04:19.299"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:04:19.303" level="INFO">Running command 'ozone sh key getacl o3://om:9862/08428-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:04:24.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:04:24.383" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210909 12:04:19.300" endtime="20210909 12:04:24.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:04:24.384" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:04:24.383" endtime="20210909 12:04:24.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:04:24.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:04:24.384" endtime="20210909 12:04:24.385"/>
</kw>
<status status="PASS" starttime="20210909 12:04:19.300" endtime="20210909 12:04:24.385"/>
</kw>
<msg timestamp="20210909 12:04:24.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:04:19.299" endtime="20210909 12:04:24.386"/>
</kw>
<msg timestamp="20210909 12:04:24.386" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210909 12:04:19.299" endtime="20210909 12:04:24.386"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:04:24.387" endtime="20210909 12:04:24.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:04:24.395" level="INFO">Running command 'ozone sh key setacl o3://om:9862/08428-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:04:31.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:04:31.141" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 12:04:24.392" endtime="20210909 12:04:31.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:04:31.142" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 12:04:31.142" endtime="20210909 12:04:31.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:04:31.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:04:31.143" endtime="20210909 12:04:31.143"/>
</kw>
<status status="PASS" starttime="20210909 12:04:24.391" endtime="20210909 12:04:31.144"/>
</kw>
<msg timestamp="20210909 12:04:31.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:04:24.390" endtime="20210909 12:04:31.144"/>
</kw>
<msg timestamp="20210909 12:04:31.144" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 12:04:24.388" endtime="20210909 12:04:31.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:04:31.150" level="INFO">Running command 'ozone sh key getacl o3://om:9862/08428-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:04:38.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:04:38.609" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210909 12:04:31.147" endtime="20210909 12:04:38.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:04:38.611" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:04:38.610" endtime="20210909 12:04:38.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:04:38.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:04:38.612" endtime="20210909 12:04:38.612"/>
</kw>
<status status="PASS" starttime="20210909 12:04:31.146" endtime="20210909 12:04:38.613"/>
</kw>
<msg timestamp="20210909 12:04:38.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:04:31.145" endtime="20210909 12:04:38.613"/>
</kw>
<msg timestamp="20210909 12:04:38.613" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210909 12:04:31.144" endtime="20210909 12:04:38.613"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:04:38.614" endtime="20210909 12:04:38.615"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:04:38.615" endtime="20210909 12:04:38.616"/>
</kw>
<status status="PASS" starttime="20210909 12:00:36.070" endtime="20210909 12:04:38.616"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210909 12:00:36.033" endtime="20210909 12:04:38.617"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:04:38.625" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:04:38.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:04:38.630" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 12:04:38.622" endtime="20210909 12:04:38.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:04:38.632" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 12:04:38.631" endtime="20210909 12:04:38.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:04:38.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:04:38.632" endtime="20210909 12:04:38.633"/>
</kw>
<status status="PASS" starttime="20210909 12:04:38.621" endtime="20210909 12:04:38.633"/>
</kw>
<msg timestamp="20210909 12:04:38.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:04:38.621" endtime="20210909 12:04:38.634"/>
</kw>
<msg timestamp="20210909 12:04:38.634" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 12:04:38.620" endtime="20210909 12:04:38.634"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 12:04:38.635" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 12:04:38.635" endtime="20210909 12:04:38.635"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:04:38.641" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:04:38.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:04:38.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:04:38.638" endtime="20210909 12:04:38.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:04:38.676" level="INFO"/>
<status status="PASS" starttime="20210909 12:04:38.676" endtime="20210909 12:04:38.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:04:38.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:04:38.677" endtime="20210909 12:04:38.677"/>
</kw>
<status status="PASS" starttime="20210909 12:04:38.637" endtime="20210909 12:04:38.678"/>
</kw>
<msg timestamp="20210909 12:04:38.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:04:38.637" endtime="20210909 12:04:38.678"/>
</kw>
<status status="PASS" starttime="20210909 12:04:38.636" endtime="20210909 12:04:38.678"/>
</kw>
<status status="PASS" starttime="20210909 12:04:38.636" endtime="20210909 12:04:38.678"/>
</kw>
<status status="PASS" starttime="20210909 12:04:38.620" endtime="20210909 12:04:38.678"/>
</kw>
<status status="PASS" starttime="20210909 12:04:38.619" endtime="20210909 12:04:38.679"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:04:38.683" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/08428-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:04:46.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:04:46.025" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210909 12:04:38.681" endtime="20210909 12:04:46.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:04:46.027" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210909 12:04:46.026" endtime="20210909 12:04:46.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:04:46.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:04:46.027" endtime="20210909 12:04:46.028"/>
</kw>
<status status="PASS" starttime="20210909 12:04:38.680" endtime="20210909 12:04:46.029"/>
</kw>
<msg timestamp="20210909 12:04:46.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:04:38.680" endtime="20210909 12:04:46.029"/>
</kw>
<status status="PASS" starttime="20210909 12:04:38.679" endtime="20210909 12:04:46.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:04:46.035" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/08428-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:04:53.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:04:53.541" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210909 12:04:46.032" endtime="20210909 12:04:53.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:04:53.543" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:04:53.542" endtime="20210909 12:04:53.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:04:53.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:04:53.543" endtime="20210909 12:04:53.543"/>
</kw>
<status status="PASS" starttime="20210909 12:04:46.031" endtime="20210909 12:04:53.544"/>
</kw>
<msg timestamp="20210909 12:04:53.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:04:46.031" endtime="20210909 12:04:53.544"/>
</kw>
<msg timestamp="20210909 12:04:53.544" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210909 12:04:46.030" endtime="20210909 12:04:53.544"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:04:53.545" endtime="20210909 12:04:53.546"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:04:53.551" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/08428-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:05:00.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:05:00.268" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210909 12:04:53.548" endtime="20210909 12:05:00.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:05:00.281" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210909 12:05:00.273" endtime="20210909 12:05:00.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:05:00.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:05:00.281" endtime="20210909 12:05:00.282"/>
</kw>
<status status="PASS" starttime="20210909 12:04:53.547" endtime="20210909 12:05:00.283"/>
</kw>
<msg timestamp="20210909 12:05:00.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:04:53.546" endtime="20210909 12:05:00.283"/>
</kw>
<msg timestamp="20210909 12:05:00.283" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210909 12:04:53.546" endtime="20210909 12:05:00.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:05:00.292" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/08428-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:05:07.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:05:07.636" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210909 12:05:00.288" endtime="20210909 12:05:07.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:05:07.638" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:05:07.637" endtime="20210909 12:05:07.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:05:07.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:05:07.639" endtime="20210909 12:05:07.639"/>
</kw>
<status status="PASS" starttime="20210909 12:05:00.286" endtime="20210909 12:05:07.640"/>
</kw>
<msg timestamp="20210909 12:05:07.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:05:00.284" endtime="20210909 12:05:07.640"/>
</kw>
<msg timestamp="20210909 12:05:07.640" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210909 12:05:00.284" endtime="20210909 12:05:07.641"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:05:07.641" endtime="20210909 12:05:07.642"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:05:07.647" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/08428-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:05:15.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:05:15.409" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 12:05:07.644" endtime="20210909 12:05:15.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:05:15.410" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 12:05:15.409" endtime="20210909 12:05:15.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:05:15.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:05:15.411" endtime="20210909 12:05:15.411"/>
</kw>
<status status="PASS" starttime="20210909 12:05:07.643" endtime="20210909 12:05:15.412"/>
</kw>
<msg timestamp="20210909 12:05:15.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:05:07.643" endtime="20210909 12:05:15.412"/>
</kw>
<msg timestamp="20210909 12:05:15.412" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210909 12:05:07.642" endtime="20210909 12:05:15.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:05:15.417" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/08428-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:05:22.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:05:22.250" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210909 12:05:15.414" endtime="20210909 12:05:22.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:05:22.251" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:05:22.251" endtime="20210909 12:05:22.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:05:22.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:05:22.252" endtime="20210909 12:05:22.253"/>
</kw>
<status status="PASS" starttime="20210909 12:05:15.413" endtime="20210909 12:05:22.253"/>
</kw>
<msg timestamp="20210909 12:05:22.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:05:15.413" endtime="20210909 12:05:22.253"/>
</kw>
<msg timestamp="20210909 12:05:22.254" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210909 12:05:15.412" endtime="20210909 12:05:22.254"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:05:22.254" endtime="20210909 12:05:22.255"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:05:22.255" endtime="20210909 12:05:22.256"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:05:22.262" level="INFO">Running command 'ozone sh key put o3://om:9862/08428-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:08:34.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:08:34.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:05:22.259" endtime="20210909 12:08:34.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:08:34.091" level="INFO"/>
<status status="PASS" starttime="20210909 12:08:34.091" endtime="20210909 12:08:34.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:08:34.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:08:34.092" endtime="20210909 12:08:34.092"/>
</kw>
<status status="PASS" starttime="20210909 12:05:22.258" endtime="20210909 12:08:34.093"/>
</kw>
<msg timestamp="20210909 12:08:34.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:05:22.257" endtime="20210909 12:08:34.093"/>
</kw>
<status status="PASS" starttime="20210909 12:05:22.256" endtime="20210909 12:08:34.093"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:08:34.098" level="INFO">Running command 'ozone sh key getacl o3://om:9862/08428-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:08:40.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:08:40.354" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210909 12:08:34.095" endtime="20210909 12:08:40.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:08:40.355" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210909 12:08:40.354" endtime="20210909 12:08:40.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:08:40.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:08:40.356" endtime="20210909 12:08:40.356"/>
</kw>
<status status="PASS" starttime="20210909 12:08:34.095" endtime="20210909 12:08:40.356"/>
</kw>
<msg timestamp="20210909 12:08:40.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:08:34.094" endtime="20210909 12:08:40.357"/>
</kw>
<msg timestamp="20210909 12:08:40.357" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210909 12:08:34.093" endtime="20210909 12:08:40.357"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:08:40.357" endtime="20210909 12:08:40.359"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210909 12:08:40.359" endtime="20210909 12:08:40.360"/>
</kw>
<status status="PASS" starttime="20210909 12:04:38.679" endtime="20210909 12:08:40.361"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210909 12:04:38.618" endtime="20210909 12:08:40.361"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:08:40.376" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:08:40.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:08:40.381" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 12:08:40.372" endtime="20210909 12:08:40.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:08:40.383" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 12:08:40.382" endtime="20210909 12:08:40.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:08:40.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:08:40.384" endtime="20210909 12:08:40.385"/>
</kw>
<status status="PASS" starttime="20210909 12:08:40.371" endtime="20210909 12:08:40.386"/>
</kw>
<msg timestamp="20210909 12:08:40.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:08:40.370" endtime="20210909 12:08:40.386"/>
</kw>
<msg timestamp="20210909 12:08:40.387" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 12:08:40.369" endtime="20210909 12:08:40.387"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 12:08:40.388" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 12:08:40.387" endtime="20210909 12:08:40.388"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:08:40.397" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:08:40.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:08:40.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:08:40.392" endtime="20210909 12:08:40.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:08:40.407" level="INFO"/>
<status status="PASS" starttime="20210909 12:08:40.407" endtime="20210909 12:08:40.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:08:40.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:08:40.408" endtime="20210909 12:08:40.408"/>
</kw>
<status status="PASS" starttime="20210909 12:08:40.391" endtime="20210909 12:08:40.409"/>
</kw>
<msg timestamp="20210909 12:08:40.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:08:40.391" endtime="20210909 12:08:40.409"/>
</kw>
<status status="PASS" starttime="20210909 12:08:40.390" endtime="20210909 12:08:40.409"/>
</kw>
<status status="PASS" starttime="20210909 12:08:40.389" endtime="20210909 12:08:40.409"/>
</kw>
<status status="PASS" starttime="20210909 12:08:40.367" endtime="20210909 12:08:40.409"/>
</kw>
<status status="PASS" starttime="20210909 12:08:40.366" endtime="20210909 12:08:40.410"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:08:40.417" level="INFO">Running command 'ozone sh volume info o3:///08428-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:08:47.410" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 12:08:47.410" level="INFO">${output} = VOLUME_NOT_FOUND Volume 08428-rpcwport is not found</msg>
<status status="PASS" starttime="20210909 12:08:40.413" endtime="20210909 12:08:47.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:08:47.412" level="INFO">VOLUME_NOT_FOUND Volume 08428-rpcwport is not found</msg>
<status status="PASS" starttime="20210909 12:08:47.411" endtime="20210909 12:08:47.412"/>
</kw>
<msg timestamp="20210909 12:08:47.413" level="INFO">${result} = VOLUME_NOT_FOUND Volume 08428-rpcwport is not found</msg>
<status status="PASS" starttime="20210909 12:08:40.412" endtime="20210909 12:08:47.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 12:08:47.413" endtime="20210909 12:08:47.413"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:08:47.418" level="INFO">Running command 'ozone sh volume create o3:///08428-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:08:55.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:08:55.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:08:47.415" endtime="20210909 12:08:55.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:08:55.040" level="INFO"/>
<status status="PASS" starttime="20210909 12:08:55.040" endtime="20210909 12:08:55.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:08:55.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:08:55.041" endtime="20210909 12:08:55.041"/>
</kw>
<status status="PASS" starttime="20210909 12:08:47.415" endtime="20210909 12:08:55.042"/>
</kw>
<msg timestamp="20210909 12:08:55.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:08:47.414" endtime="20210909 12:08:55.042"/>
</kw>
<msg timestamp="20210909 12:08:55.043" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210909 12:08:47.413" endtime="20210909 12:08:55.043"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 12:08:55.043" endtime="20210909 12:08:55.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:08:55.049" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="08428-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:09:03.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:09:03.385" level="INFO">${output} = {
  "metadata": {},
  "name": "08428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210909 12:08:55.046" endtime="20210909 12:09:03.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:09:03.387" level="INFO">{
  "metadata": {},
  "name": "08428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-09T12:08:54.877Z",
  "modificationTime": "2021-09-09T12:08:54.877Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210909 12:09:03.386" endtime="20210909 12:09:03.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:09:03.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:09:03.387" endtime="20210909 12:09:03.388"/>
</kw>
<status status="PASS" starttime="20210909 12:08:55.045" endtime="20210909 12:09:03.388"/>
</kw>
<msg timestamp="20210909 12:09:03.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:08:55.045" endtime="20210909 12:09:03.388"/>
</kw>
<msg timestamp="20210909 12:09:03.389" level="INFO">${result} = {
  "metadata": {},
  "name": "08428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210909 12:08:55.044" endtime="20210909 12:09:03.389"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 12:09:03.389" endtime="20210909 12:09:03.389"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:09:03.395" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="08428-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:09:08.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:09:08.919" level="INFO">${output} = {
  "metadata": {},
  "name": "08428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210909 12:09:03.392" endtime="20210909 12:09:08.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:09:08.920" level="INFO">{
  "metadata": {},
  "name": "08428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-09T12:08:54.877Z",
  "modificationTime": "2021-09-09T12:08:54.877Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210909 12:09:08.919" endtime="20210909 12:09:08.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:09:08.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:09:08.920" endtime="20210909 12:09:08.921"/>
</kw>
<status status="PASS" starttime="20210909 12:09:03.391" endtime="20210909 12:09:08.921"/>
</kw>
<msg timestamp="20210909 12:09:08.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:09:03.390" endtime="20210909 12:09:08.922"/>
</kw>
<msg timestamp="20210909 12:09:08.922" level="INFO">${result} = {
  "metadata": {},
  "name": "08428-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210909 12:09:03.389" endtime="20210909 12:09:08.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 12:09:08.922" endtime="20210909 12:09:08.923"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:09:08.927" level="INFO">Running command 'ozone sh volume setquota o3:///08428-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:09:15.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:09:15.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:09:08.925" endtime="20210909 12:09:15.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:09:15.862" level="INFO"/>
<status status="PASS" starttime="20210909 12:09:15.861" endtime="20210909 12:09:15.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:09:15.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:09:15.862" endtime="20210909 12:09:15.863"/>
</kw>
<status status="PASS" starttime="20210909 12:09:08.924" endtime="20210909 12:09:15.863"/>
</kw>
<msg timestamp="20210909 12:09:15.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:09:08.924" endtime="20210909 12:09:15.863"/>
</kw>
<status status="PASS" starttime="20210909 12:09:08.923" endtime="20210909 12:09:15.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:09:15.870" level="INFO">Running command 'ozone sh volume info o3:///08428-rpcwport | jq -r '. | select(.name=="08428-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:09:23.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:09:23.341" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210909 12:09:15.866" endtime="20210909 12:09:23.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:09:23.342" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210909 12:09:23.341" endtime="20210909 12:09:23.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:09:23.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:09:23.343" endtime="20210909 12:09:23.343"/>
</kw>
<status status="PASS" starttime="20210909 12:09:15.865" endtime="20210909 12:09:23.344"/>
</kw>
<msg timestamp="20210909 12:09:23.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:09:15.865" endtime="20210909 12:09:23.344"/>
</kw>
<msg timestamp="20210909 12:09:23.344" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210909 12:09:15.864" endtime="20210909 12:09:23.344"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:09:23.345" endtime="20210909 12:09:23.346"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:09:23.352" level="INFO">Running command 'ozone sh bucket create o3:///08428-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:09:30.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:09:30.409" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:09:23.349" endtime="20210909 12:09:30.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:09:30.411" level="INFO"/>
<status status="PASS" starttime="20210909 12:09:30.409" endtime="20210909 12:09:30.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:09:30.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:09:30.411" endtime="20210909 12:09:30.412"/>
</kw>
<status status="PASS" starttime="20210909 12:09:23.348" endtime="20210909 12:09:30.413"/>
</kw>
<msg timestamp="20210909 12:09:30.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:09:23.347" endtime="20210909 12:09:30.413"/>
</kw>
<status status="PASS" starttime="20210909 12:09:23.346" endtime="20210909 12:09:30.414"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:09:30.420" level="INFO">Running command 'ozone sh bucket info o3:///08428-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:09:38.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:09:38.476" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210909 12:09:30.417" endtime="20210909 12:09:38.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:09:38.478" level="INFO">DISK</msg>
<status status="PASS" starttime="20210909 12:09:38.477" endtime="20210909 12:09:38.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:09:38.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:09:38.478" endtime="20210909 12:09:38.479"/>
</kw>
<status status="PASS" starttime="20210909 12:09:30.416" endtime="20210909 12:09:38.479"/>
</kw>
<msg timestamp="20210909 12:09:38.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:09:30.415" endtime="20210909 12:09:38.479"/>
</kw>
<msg timestamp="20210909 12:09:38.479" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210909 12:09:30.414" endtime="20210909 12:09:38.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:09:38.480" endtime="20210909 12:09:38.480"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:09:38.485" level="INFO">Running command 'ozone sh bucket info o3:///08428-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:09:46.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:09:46.022" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210909 12:09:38.482" endtime="20210909 12:09:46.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:09:46.023" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210909 12:09:46.023" endtime="20210909 12:09:46.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:09:46.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:09:46.024" endtime="20210909 12:09:46.024"/>
</kw>
<status status="PASS" starttime="20210909 12:09:38.482" endtime="20210909 12:09:46.025"/>
</kw>
<msg timestamp="20210909 12:09:46.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:09:38.481" endtime="20210909 12:09:46.025"/>
</kw>
<msg timestamp="20210909 12:09:46.025" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210909 12:09:38.480" endtime="20210909 12:09:46.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:09:46.025" endtime="20210909 12:09:46.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:09:46.032" level="INFO">Running command 'ozone sh bucket info o3:///08428-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:09:53.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:09:53.339" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210909 12:09:46.028" endtime="20210909 12:09:53.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:09:53.341" level="INFO">100</msg>
<status status="PASS" starttime="20210909 12:09:53.339" endtime="20210909 12:09:53.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:09:53.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:09:53.342" endtime="20210909 12:09:53.343"/>
</kw>
<status status="PASS" starttime="20210909 12:09:46.028" endtime="20210909 12:09:53.344"/>
</kw>
<msg timestamp="20210909 12:09:53.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:09:46.028" endtime="20210909 12:09:53.344"/>
</kw>
<msg timestamp="20210909 12:09:53.345" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210909 12:09:46.027" endtime="20210909 12:09:53.345"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:09:53.346" endtime="20210909 12:09:53.347"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:09:53.354" level="INFO">Running command 'ozone sh bucket setquota o3:///08428-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:10:00.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:10:00.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:09:53.351" endtime="20210909 12:10:00.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:10:00.909" level="INFO"/>
<status status="PASS" starttime="20210909 12:10:00.908" endtime="20210909 12:10:00.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:10:00.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:10:00.909" endtime="20210909 12:10:00.910"/>
</kw>
<status status="PASS" starttime="20210909 12:09:53.349" endtime="20210909 12:10:00.910"/>
</kw>
<msg timestamp="20210909 12:10:00.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:09:53.349" endtime="20210909 12:10:00.911"/>
</kw>
<status status="PASS" starttime="20210909 12:09:53.347" endtime="20210909 12:10:00.911"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:10:00.916" level="INFO">Running command 'ozone sh bucket info o3:///08428-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:10:07.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:10:07.464" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210909 12:10:00.913" endtime="20210909 12:10:07.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:10:07.466" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210909 12:10:07.465" endtime="20210909 12:10:07.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:10:07.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:10:07.466" endtime="20210909 12:10:07.467"/>
</kw>
<status status="PASS" starttime="20210909 12:10:00.912" endtime="20210909 12:10:07.467"/>
</kw>
<msg timestamp="20210909 12:10:07.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:10:00.912" endtime="20210909 12:10:07.467"/>
</kw>
<msg timestamp="20210909 12:10:07.468" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210909 12:10:00.911" endtime="20210909 12:10:07.468"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:10:07.468" endtime="20210909 12:10:07.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:10:07.475" level="INFO">Running command 'ozone sh bucket info o3:///08428-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:10:14.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:10:14.139" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210909 12:10:07.470" endtime="20210909 12:10:14.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:10:14.141" level="INFO">1000</msg>
<status status="PASS" starttime="20210909 12:10:14.140" endtime="20210909 12:10:14.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:10:14.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:10:14.142" endtime="20210909 12:10:14.143"/>
</kw>
<status status="PASS" starttime="20210909 12:10:07.470" endtime="20210909 12:10:14.144"/>
</kw>
<msg timestamp="20210909 12:10:14.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:10:07.469" endtime="20210909 12:10:14.144"/>
</kw>
<msg timestamp="20210909 12:10:14.144" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210909 12:10:07.468" endtime="20210909 12:10:14.144"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:10:14.144" endtime="20210909 12:10:14.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:10:14.150" level="INFO">Running command 'ozone sh bucket list o3:///08428-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:10:21.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:10:21.639" level="INFO">${output} = 08428-rpcwport</msg>
<status status="PASS" starttime="20210909 12:10:14.147" endtime="20210909 12:10:21.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:10:21.641" level="INFO">08428-rpcwport</msg>
<status status="PASS" starttime="20210909 12:10:21.640" endtime="20210909 12:10:21.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:10:21.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:10:21.641" endtime="20210909 12:10:21.642"/>
</kw>
<status status="PASS" starttime="20210909 12:10:14.146" endtime="20210909 12:10:21.642"/>
</kw>
<msg timestamp="20210909 12:10:21.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:10:14.146" endtime="20210909 12:10:21.642"/>
</kw>
<msg timestamp="20210909 12:10:21.642" level="INFO">${result} = 08428-rpcwport</msg>
<status status="PASS" starttime="20210909 12:10:14.145" endtime="20210909 12:10:21.642"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:10:21.643" endtime="20210909 12:10:21.643"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:10:21.649" level="INFO">Running command 'ozone sh key put o3:///08428-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:13:33.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:13:33.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:10:21.647" endtime="20210909 12:13:33.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:13:33.121" level="INFO"/>
<status status="PASS" starttime="20210909 12:13:33.121" endtime="20210909 12:13:33.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:13:33.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:13:33.122" endtime="20210909 12:13:33.122"/>
</kw>
<status status="PASS" starttime="20210909 12:10:21.645" endtime="20210909 12:13:33.123"/>
</kw>
<msg timestamp="20210909 12:13:33.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:10:21.645" endtime="20210909 12:13:33.123"/>
</kw>
<status status="PASS" starttime="20210909 12:10:21.644" endtime="20210909 12:13:33.123"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:13:33.129" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:13:33.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:13:33.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:13:33.125" endtime="20210909 12:13:33.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:13:33.132" level="INFO"/>
<status status="PASS" starttime="20210909 12:13:33.131" endtime="20210909 12:13:33.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:13:33.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:13:33.132" endtime="20210909 12:13:33.132"/>
</kw>
<status status="PASS" starttime="20210909 12:13:33.124" endtime="20210909 12:13:33.133"/>
</kw>
<msg timestamp="20210909 12:13:33.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:13:33.124" endtime="20210909 12:13:33.133"/>
</kw>
<status status="PASS" starttime="20210909 12:13:33.123" endtime="20210909 12:13:33.133"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:13:33.139" level="INFO">Running command 'ozone sh key get o3:///08428-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:13:40.365" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210909 12:13:33.136" endtime="20210909 12:13:40.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.366" endtime="20210909 12:13:40.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.366" endtime="20210909 12:13:40.367"/>
</kw>
<status status="FAIL" starttime="20210909 12:13:33.135" endtime="20210909 12:13:40.367"/>
</kw>
<msg timestamp="20210909 12:13:40.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210909 12:13:33.135" endtime="20210909 12:13:40.368"/>
</kw>
<status status="FAIL" starttime="20210909 12:13:33.134" endtime="20210909 12:13:40.368"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.368" endtime="20210909 12:13:40.369"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.369" endtime="20210909 12:13:40.369"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.369" endtime="20210909 12:13:40.369"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.369" endtime="20210909 12:13:40.369"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.370" endtime="20210909 12:13:40.370"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.370" endtime="20210909 12:13:40.370"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.370" endtime="20210909 12:13:40.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.370" endtime="20210909 12:13:40.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.371" endtime="20210909 12:13:40.371"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.371" endtime="20210909 12:13:40.371"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.371" endtime="20210909 12:13:40.371"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.372" endtime="20210909 12:13:40.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.372" endtime="20210909 12:13:40.372"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.373" endtime="20210909 12:13:40.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.374" endtime="20210909 12:13:40.375"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.376" endtime="20210909 12:13:40.376"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.377" endtime="20210909 12:13:40.377"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.379" endtime="20210909 12:13:40.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.384" endtime="20210909 12:13:40.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.384" endtime="20210909 12:13:40.384"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.384" endtime="20210909 12:13:40.385"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.385" endtime="20210909 12:13:40.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.385" endtime="20210909 12:13:40.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.385" endtime="20210909 12:13:40.393"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.395" endtime="20210909 12:13:40.396"/>
</kw>
<status status="FAIL" starttime="20210909 12:10:21.644" endtime="20210909 12:13:40.397"/>
</kw>
<status status="FAIL" starttime="20210909 12:10:21.643" endtime="20210909 12:13:40.397"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.398" endtime="20210909 12:13:40.398"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.399" endtime="20210909 12:13:40.400"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.400" endtime="20210909 12:13:40.401"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.401" endtime="20210909 12:13:40.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.403" endtime="20210909 12:13:40.403"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.403" endtime="20210909 12:13:40.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.404" endtime="20210909 12:13:40.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.405" endtime="20210909 12:13:40.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.406" endtime="20210909 12:13:40.407"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.407" endtime="20210909 12:13:40.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.408" endtime="20210909 12:13:40.409"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.409" endtime="20210909 12:13:40.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.410" endtime="20210909 12:13:40.410"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.411" endtime="20210909 12:13:40.411"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.411" endtime="20210909 12:13:40.413"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.413" endtime="20210909 12:13:40.413"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.415" endtime="20210909 12:13:40.415"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.415" endtime="20210909 12:13:40.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.416" endtime="20210909 12:13:40.416"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.418" endtime="20210909 12:13:40.418"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.419" endtime="20210909 12:13:40.420"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.420" endtime="20210909 12:13:40.420"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.421" endtime="20210909 12:13:40.421"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:13:40.422" endtime="20210909 12:13:40.422"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.423" endtime="20210909 12:13:40.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 12:13:40.423" endtime="20210909 12:13:40.424"/>
</kw>
<status status="FAIL" starttime="20210909 12:08:40.410" endtime="20210909 12:13:40.425"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210909 12:08:40.364" endtime="20210909 12:13:40.427">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:13:40.463" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:13:40.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:13:40.500" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 12:13:40.447" endtime="20210909 12:13:40.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:13:40.504" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 12:13:40.501" endtime="20210909 12:13:40.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:13:40.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:13:40.505" endtime="20210909 12:13:40.507"/>
</kw>
<status status="PASS" starttime="20210909 12:13:40.444" endtime="20210909 12:13:40.508"/>
</kw>
<msg timestamp="20210909 12:13:40.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:13:40.442" endtime="20210909 12:13:40.508"/>
</kw>
<msg timestamp="20210909 12:13:40.509" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 12:13:40.440" endtime="20210909 12:13:40.509"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 12:13:40.512" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 12:13:40.510" endtime="20210909 12:13:40.512"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:13:40.543" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:13:40.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:13:40.607" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:13:40.526" endtime="20210909 12:13:40.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:13:40.608" level="INFO"/>
<status status="PASS" starttime="20210909 12:13:40.607" endtime="20210909 12:13:40.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:13:40.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:13:40.609" endtime="20210909 12:13:40.609"/>
</kw>
<status status="PASS" starttime="20210909 12:13:40.524" endtime="20210909 12:13:40.610"/>
</kw>
<msg timestamp="20210909 12:13:40.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:13:40.522" endtime="20210909 12:13:40.610"/>
</kw>
<status status="PASS" starttime="20210909 12:13:40.519" endtime="20210909 12:13:40.611"/>
</kw>
<status status="PASS" starttime="20210909 12:13:40.514" endtime="20210909 12:13:40.611"/>
</kw>
<status status="PASS" starttime="20210909 12:13:40.438" endtime="20210909 12:13:40.611"/>
</kw>
<status status="PASS" starttime="20210909 12:13:40.435" endtime="20210909 12:13:40.611"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:13:40.635" level="INFO">Running command 'ozone sh volume info /08428-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:13:51.286" level="INFO">${rc} = 255</msg>
<msg timestamp="20210909 12:13:51.286" level="INFO">${output} = VOLUME_NOT_FOUND Volume 08428-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210909 12:13:40.620" endtime="20210909 12:13:51.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:13:51.289" level="INFO">VOLUME_NOT_FOUND Volume 08428-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210909 12:13:51.287" endtime="20210909 12:13:51.289"/>
</kw>
<msg timestamp="20210909 12:13:51.290" level="INFO">${result} = VOLUME_NOT_FOUND Volume 08428-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210909 12:13:40.616" endtime="20210909 12:13:51.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 12:13:51.290" endtime="20210909 12:13:51.291"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:13:51.298" level="INFO">Running command 'ozone sh volume create /08428-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:13:58.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:13:58.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:13:51.294" endtime="20210909 12:13:58.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:13:58.459" level="INFO"/>
<status status="PASS" starttime="20210909 12:13:58.459" endtime="20210909 12:13:58.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:13:58.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:13:58.460" endtime="20210909 12:13:58.460"/>
</kw>
<status status="PASS" starttime="20210909 12:13:51.293" endtime="20210909 12:13:58.461"/>
</kw>
<msg timestamp="20210909 12:13:58.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:13:51.293" endtime="20210909 12:13:58.461"/>
</kw>
<msg timestamp="20210909 12:13:58.461" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210909 12:13:51.291" endtime="20210909 12:13:58.461"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 12:13:58.461" endtime="20210909 12:13:58.462"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:13:58.467" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="08428-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:14:05.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:14:05.309" level="INFO">${output} = {
  "metadata": {},
  "name": "08428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210909 12:13:58.464" endtime="20210909 12:14:05.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:14:05.311" level="INFO">{
  "metadata": {},
  "name": "08428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-09T12:13:58.258Z",
  "modificationTime": "2021-09-09T12:13:58.258Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210909 12:14:05.310" endtime="20210909 12:14:05.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:14:05.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:14:05.311" endtime="20210909 12:14:05.312"/>
</kw>
<status status="PASS" starttime="20210909 12:13:58.463" endtime="20210909 12:14:05.312"/>
</kw>
<msg timestamp="20210909 12:14:05.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:13:58.463" endtime="20210909 12:14:05.312"/>
</kw>
<msg timestamp="20210909 12:14:05.313" level="INFO">${result} = {
  "metadata": {},
  "name": "08428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210909 12:13:58.462" endtime="20210909 12:14:05.313"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 12:14:05.313" endtime="20210909 12:14:05.314"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:14:05.318" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="08428-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:14:11.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:14:11.805" level="INFO">${output} = {
  "metadata": {},
  "name": "08428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210909 12:14:05.316" endtime="20210909 12:14:11.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:14:11.807" level="INFO">{
  "metadata": {},
  "name": "08428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-09T12:13:58.258Z",
  "modificationTime": "2021-09-09T12:13:58.258Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210909 12:14:11.806" endtime="20210909 12:14:11.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:14:11.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:14:11.808" endtime="20210909 12:14:11.808"/>
</kw>
<status status="PASS" starttime="20210909 12:14:05.315" endtime="20210909 12:14:11.809"/>
</kw>
<msg timestamp="20210909 12:14:11.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:14:05.315" endtime="20210909 12:14:11.809"/>
</kw>
<msg timestamp="20210909 12:14:11.809" level="INFO">${result} = {
  "metadata": {},
  "name": "08428-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210909 12:14:05.314" endtime="20210909 12:14:11.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210909 12:14:11.809" endtime="20210909 12:14:11.810"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:14:11.817" level="INFO">Running command 'ozone sh volume setquota /08428-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:14:18.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:14:18.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:14:11.812" endtime="20210909 12:14:18.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:14:18.983" level="INFO"/>
<status status="PASS" starttime="20210909 12:14:18.982" endtime="20210909 12:14:18.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:14:18.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:14:18.983" endtime="20210909 12:14:18.984"/>
</kw>
<status status="PASS" starttime="20210909 12:14:11.811" endtime="20210909 12:14:18.984"/>
</kw>
<msg timestamp="20210909 12:14:18.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:14:11.811" endtime="20210909 12:14:18.984"/>
</kw>
<status status="PASS" starttime="20210909 12:14:11.810" endtime="20210909 12:14:18.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:14:18.992" level="INFO">Running command 'ozone sh volume info /08428-rpcwoscheme | jq -r '. | select(.name=="08428-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:14:24.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:14:24.941" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210909 12:14:18.988" endtime="20210909 12:14:24.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:14:24.943" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210909 12:14:24.942" endtime="20210909 12:14:24.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:14:24.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:14:24.944" endtime="20210909 12:14:24.945"/>
</kw>
<status status="PASS" starttime="20210909 12:14:18.987" endtime="20210909 12:14:24.946"/>
</kw>
<msg timestamp="20210909 12:14:24.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:14:18.987" endtime="20210909 12:14:24.946"/>
</kw>
<msg timestamp="20210909 12:14:24.947" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210909 12:14:18.985" endtime="20210909 12:14:24.947"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:14:24.947" endtime="20210909 12:14:24.948"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:14:24.955" level="INFO">Running command 'ozone sh bucket create /08428-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:14:32.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:14:32.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:14:24.952" endtime="20210909 12:14:32.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:14:32.281" level="INFO"/>
<status status="PASS" starttime="20210909 12:14:32.279" endtime="20210909 12:14:32.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:14:32.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:14:32.282" endtime="20210909 12:14:32.283"/>
</kw>
<status status="PASS" starttime="20210909 12:14:24.951" endtime="20210909 12:14:32.283"/>
</kw>
<msg timestamp="20210909 12:14:32.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:14:24.950" endtime="20210909 12:14:32.284"/>
</kw>
<status status="PASS" starttime="20210909 12:14:24.949" endtime="20210909 12:14:32.284"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:14:32.291" level="INFO">Running command 'ozone sh bucket info /08428-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:14:39.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:14:39.565" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210909 12:14:32.287" endtime="20210909 12:14:39.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:14:39.567" level="INFO">DISK</msg>
<status status="PASS" starttime="20210909 12:14:39.566" endtime="20210909 12:14:39.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:14:39.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:14:39.567" endtime="20210909 12:14:39.569"/>
</kw>
<status status="PASS" starttime="20210909 12:14:32.286" endtime="20210909 12:14:39.569"/>
</kw>
<msg timestamp="20210909 12:14:39.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:14:32.286" endtime="20210909 12:14:39.569"/>
</kw>
<msg timestamp="20210909 12:14:39.570" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210909 12:14:32.284" endtime="20210909 12:14:39.570"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:14:39.570" endtime="20210909 12:14:39.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:14:39.577" level="INFO">Running command 'ozone sh bucket info /08428-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:14:46.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:14:46.742" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210909 12:14:39.574" endtime="20210909 12:14:46.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:14:46.745" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210909 12:14:46.743" endtime="20210909 12:14:46.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:14:46.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:14:46.745" endtime="20210909 12:14:46.747"/>
</kw>
<status status="PASS" starttime="20210909 12:14:39.573" endtime="20210909 12:14:46.748"/>
</kw>
<msg timestamp="20210909 12:14:46.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:14:39.572" endtime="20210909 12:14:46.748"/>
</kw>
<msg timestamp="20210909 12:14:46.749" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210909 12:14:39.571" endtime="20210909 12:14:46.749"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:14:46.749" endtime="20210909 12:14:46.750"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:14:46.757" level="INFO">Running command 'ozone sh bucket info /08428-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:14:54.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:14:54.251" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210909 12:14:46.754" endtime="20210909 12:14:54.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:14:54.252" level="INFO">100</msg>
<status status="PASS" starttime="20210909 12:14:54.252" endtime="20210909 12:14:54.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:14:54.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:14:54.253" endtime="20210909 12:14:54.254"/>
</kw>
<status status="PASS" starttime="20210909 12:14:46.753" endtime="20210909 12:14:54.254"/>
</kw>
<msg timestamp="20210909 12:14:54.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:14:46.752" endtime="20210909 12:14:54.254"/>
</kw>
<msg timestamp="20210909 12:14:54.254" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210909 12:14:46.750" endtime="20210909 12:14:54.254"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:14:54.255" endtime="20210909 12:14:54.255"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:14:54.266" level="INFO">Running command 'ozone sh bucket setquota /08428-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:15:01.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:15:01.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:14:54.259" endtime="20210909 12:15:01.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:15:01.239" level="INFO"/>
<status status="PASS" starttime="20210909 12:15:01.238" endtime="20210909 12:15:01.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:15:01.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:15:01.239" endtime="20210909 12:15:01.240"/>
</kw>
<status status="PASS" starttime="20210909 12:14:54.259" endtime="20210909 12:15:01.241"/>
</kw>
<msg timestamp="20210909 12:15:01.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:14:54.257" endtime="20210909 12:15:01.241"/>
</kw>
<status status="PASS" starttime="20210909 12:14:54.255" endtime="20210909 12:15:01.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:15:01.246" level="INFO">Running command 'ozone sh bucket info /08428-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:15:08.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:15:08.181" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210909 12:15:01.244" endtime="20210909 12:15:08.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:15:08.184" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210909 12:15:08.182" endtime="20210909 12:15:08.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:15:08.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:15:08.184" endtime="20210909 12:15:08.187"/>
</kw>
<status status="PASS" starttime="20210909 12:15:01.243" endtime="20210909 12:15:08.189"/>
</kw>
<msg timestamp="20210909 12:15:08.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:15:01.243" endtime="20210909 12:15:08.189"/>
</kw>
<msg timestamp="20210909 12:15:08.190" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210909 12:15:01.242" endtime="20210909 12:15:08.190"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:15:08.190" endtime="20210909 12:15:08.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:15:08.197" level="INFO">Running command 'ozone sh bucket info /08428-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:15:15.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:15:15.780" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210909 12:15:08.193" endtime="20210909 12:15:15.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:15:15.781" level="INFO">1000</msg>
<status status="PASS" starttime="20210909 12:15:15.781" endtime="20210909 12:15:15.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:15:15.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:15:15.782" endtime="20210909 12:15:15.784"/>
</kw>
<status status="PASS" starttime="20210909 12:15:08.192" endtime="20210909 12:15:15.786"/>
</kw>
<msg timestamp="20210909 12:15:15.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:15:08.192" endtime="20210909 12:15:15.786"/>
</kw>
<msg timestamp="20210909 12:15:15.787" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210909 12:15:08.190" endtime="20210909 12:15:15.787"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:15:15.787" endtime="20210909 12:15:15.789"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:15:15.795" level="INFO">Running command 'ozone sh bucket list /08428-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:15:23.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:15:23.379" level="INFO">${output} = 08428-rpcwoscheme</msg>
<status status="PASS" starttime="20210909 12:15:15.792" endtime="20210909 12:15:23.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:15:23.382" level="INFO">08428-rpcwoscheme</msg>
<status status="PASS" starttime="20210909 12:15:23.380" endtime="20210909 12:15:23.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:15:23.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:15:23.383" endtime="20210909 12:15:23.384"/>
</kw>
<status status="PASS" starttime="20210909 12:15:15.791" endtime="20210909 12:15:23.385"/>
</kw>
<msg timestamp="20210909 12:15:23.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:15:15.791" endtime="20210909 12:15:23.385"/>
</kw>
<msg timestamp="20210909 12:15:23.386" level="INFO">${result} = 08428-rpcwoscheme</msg>
<status status="PASS" starttime="20210909 12:15:15.789" endtime="20210909 12:15:23.386"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210909 12:15:23.386" endtime="20210909 12:15:23.388"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:15:23.396" level="INFO">Running command 'ozone sh key put /08428-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:18:36.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:18:36.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:15:23.393" endtime="20210909 12:18:36.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:18:36.151" level="INFO"/>
<status status="PASS" starttime="20210909 12:18:36.151" endtime="20210909 12:18:36.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:18:36.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:18:36.152" endtime="20210909 12:18:36.152"/>
</kw>
<status status="PASS" starttime="20210909 12:15:23.392" endtime="20210909 12:18:36.153"/>
</kw>
<msg timestamp="20210909 12:18:36.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:15:23.391" endtime="20210909 12:18:36.153"/>
</kw>
<status status="PASS" starttime="20210909 12:15:23.390" endtime="20210909 12:18:36.153"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:18:36.158" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:18:36.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 12:18:36.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 12:18:36.156" endtime="20210909 12:18:36.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 12:18:36.163" level="INFO"/>
<status status="PASS" starttime="20210909 12:18:36.162" endtime="20210909 12:18:36.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 12:18:36.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 12:18:36.164" endtime="20210909 12:18:36.164"/>
</kw>
<status status="PASS" starttime="20210909 12:18:36.155" endtime="20210909 12:18:36.165"/>
</kw>
<msg timestamp="20210909 12:18:36.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 12:18:36.154" endtime="20210909 12:18:36.165"/>
</kw>
<status status="PASS" starttime="20210909 12:18:36.153" endtime="20210909 12:18:36.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 12:18:36.170" level="INFO">Running command 'ozone sh key get /08428-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 12:18:40.433" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210909 12:18:36.168" endtime="20210909 12:18:40.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.434" endtime="20210909 12:18:40.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.434" endtime="20210909 12:18:40.434"/>
</kw>
<status status="FAIL" starttime="20210909 12:18:36.167" endtime="20210909 12:18:40.435"/>
</kw>
<msg timestamp="20210909 12:18:40.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210909 12:18:36.167" endtime="20210909 12:18:40.435"/>
</kw>
<status status="FAIL" starttime="20210909 12:18:36.166" endtime="20210909 12:18:40.435"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.436" endtime="20210909 12:18:40.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.436" endtime="20210909 12:18:40.436"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.436" endtime="20210909 12:18:40.436"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.436" endtime="20210909 12:18:40.436"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.436" endtime="20210909 12:18:40.436"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.438" endtime="20210909 12:18:40.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.439" endtime="20210909 12:18:40.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.440" endtime="20210909 12:18:40.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.441" endtime="20210909 12:18:40.441"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.442" endtime="20210909 12:18:40.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.443" endtime="20210909 12:18:40.443"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.443" endtime="20210909 12:18:40.443"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.445" endtime="20210909 12:18:40.445"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.445" endtime="20210909 12:18:40.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.448" endtime="20210909 12:18:40.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.450" endtime="20210909 12:18:40.451"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.451" endtime="20210909 12:18:40.451"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.452" endtime="20210909 12:18:40.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.454" endtime="20210909 12:18:40.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.456" endtime="20210909 12:18:40.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.457" endtime="20210909 12:18:40.458"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.458" endtime="20210909 12:18:40.459"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.460" endtime="20210909 12:18:40.461"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.461" endtime="20210909 12:18:40.462"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.463" endtime="20210909 12:18:40.463"/>
</kw>
<status status="FAIL" starttime="20210909 12:15:23.388" endtime="20210909 12:18:40.466"/>
</kw>
<status status="FAIL" starttime="20210909 12:15:23.388" endtime="20210909 12:18:40.468"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.471" endtime="20210909 12:18:40.472"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.473" endtime="20210909 12:18:40.473"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.473" endtime="20210909 12:18:40.474"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.474" endtime="20210909 12:18:40.475"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.476" endtime="20210909 12:18:40.476"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.477" endtime="20210909 12:18:40.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.477" endtime="20210909 12:18:40.478"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.478" endtime="20210909 12:18:40.478"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.479" endtime="20210909 12:18:40.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.481" endtime="20210909 12:18:40.481"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.482" endtime="20210909 12:18:40.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.482" endtime="20210909 12:18:40.483"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.484" endtime="20210909 12:18:40.485"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.485" endtime="20210909 12:18:40.486"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.486" endtime="20210909 12:18:40.486"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.486" endtime="20210909 12:18:40.486"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.487" endtime="20210909 12:18:40.487"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.487" endtime="20210909 12:18:40.487"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.488" endtime="20210909 12:18:40.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.488" endtime="20210909 12:18:40.488"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.489" endtime="20210909 12:18:40.489"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.491" endtime="20210909 12:18:40.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.493" endtime="20210909 12:18:40.493"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210909 12:18:40.493" endtime="20210909 12:18:40.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.494" endtime="20210909 12:18:40.494"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210909 12:18:40.494" endtime="20210909 12:18:40.494"/>
</kw>
<status status="FAIL" starttime="20210909 12:13:40.611" endtime="20210909 12:18:40.499"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210909 12:13:40.430" endtime="20210909 12:18:40.500">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210909 11:53:33.610" endtime="20210909 12:18:40.507"/>
</suite>
<status status="FAIL" starttime="20210909 11:29:11.282" endtime="20210909 12:18:40.533"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:29:05.816" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:29:05.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:29:05.821" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210909 11:29:05.812" endtime="20210909 11:29:05.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:29:05.822" level="INFO">scm</msg>
<status status="PASS" starttime="20210909 11:29:05.822" endtime="20210909 11:29:05.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:29:05.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:29:05.823" endtime="20210909 11:29:05.823"/>
</kw>
<status status="PASS" starttime="20210909 11:29:05.811" endtime="20210909 11:29:05.824"/>
</kw>
<msg timestamp="20210909 11:29:05.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:29:05.811" endtime="20210909 11:29:05.824"/>
</kw>
<msg timestamp="20210909 11:29:05.824" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210909 11:29:05.811" endtime="20210909 11:29:05.824"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210909 11:29:05.825" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210909 11:29:05.825" endtime="20210909 11:29:05.825"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210909 11:29:05.829" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210909 11:29:05.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210909 11:29:05.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210909 11:29:05.827" endtime="20210909 11:29:05.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210909 11:29:05.838" level="INFO"/>
<status status="PASS" starttime="20210909 11:29:05.837" endtime="20210909 11:29:05.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210909 11:29:05.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210909 11:29:05.838" endtime="20210909 11:29:05.839"/>
</kw>
<status status="PASS" starttime="20210909 11:29:05.827" endtime="20210909 11:29:05.839"/>
</kw>
<msg timestamp="20210909 11:29:05.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210909 11:29:05.826" endtime="20210909 11:29:05.839"/>
</kw>
<status status="PASS" starttime="20210909 11:29:05.826" endtime="20210909 11:29:05.839"/>
</kw>
<status status="PASS" starttime="20210909 11:29:05.825" endtime="20210909 11:29:05.839"/>
</kw>
<status status="PASS" starttime="20210909 11:29:05.810" endtime="20210909 11:29:05.840"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210909 11:29:05.809" endtime="20210909 11:29:05.840"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210909 11:29:05.744" endtime="20210909 11:29:05.841"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2969348"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
