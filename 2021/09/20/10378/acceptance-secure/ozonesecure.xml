<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20210920 14:33:13.330" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:42:56.245" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:42:56.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:42:56.249" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:42:56.242" endtime="20210920 13:42:56.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:42:56.251" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:42:56.250" endtime="20210920 13:42:56.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:42:56.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:42:56.251" endtime="20210920 13:42:56.252"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.241" endtime="20210920 13:42:56.252"/>
</kw>
<msg timestamp="20210920 13:42:56.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:42:56.241" endtime="20210920 13:42:56.252"/>
</kw>
<msg timestamp="20210920 13:42:56.253" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210920 13:42:56.240" endtime="20210920 13:42:56.253"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:42:56.257" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:42:56.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:42:56.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:42:56.255" endtime="20210920 13:42:56.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:42:56.266" level="INFO"/>
<status status="PASS" starttime="20210920 13:42:56.265" endtime="20210920 13:42:56.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:42:56.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:42:56.266" endtime="20210920 13:42:56.267"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.255" endtime="20210920 13:42:56.267"/>
</kw>
<msg timestamp="20210920 13:42:56.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:42:56.254" endtime="20210920 13:42:56.267"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.254" endtime="20210920 13:42:56.268"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.253" endtime="20210920 13:42:56.268"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.240" endtime="20210920 13:42:56.268"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.239" endtime="20210920 13:42:56.268"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:42:56.272" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:42:56.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:42:56.433" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210920 13:42:56.270" endtime="20210920 13:42:56.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:42:56.435" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 20 Sep 2021 13:42:56 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCEpqKhlv3eilxKMqAU9Qk9ePoIE6AOvVHBNhUhTNIdDTUZM/nTiTu61zeGwct5VZHEPCvs9rGq/on7SdT1K/JYPoF
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1632181376412&amp;s=6YmEQsyaEjfx02r872QXCghNg+OU3+6L/CkttOiwykQ="; Path=/; HttpOnly
Last-Modified: Mon, 20 Sep 2021 13:27:30 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210920 13:42:56.434" endtime="20210920 13:42:56.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:42:56.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:42:56.435" endtime="20210920 13:42:56.436"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.269" endtime="20210920 13:42:56.436"/>
</kw>
<msg timestamp="20210920 13:42:56.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:42:56.269" endtime="20210920 13:42:56.437"/>
</kw>
<msg timestamp="20210920 13:42:56.437" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210920 13:42:56.268" endtime="20210920 13:42:56.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:42:56.438" endtime="20210920 13:42:56.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210920 13:42:56.238" endtime="20210920 13:42:56.438"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:42:56.446" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:42:56.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:42:56.450" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:42:56.443" endtime="20210920 13:42:56.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:42:56.451" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:42:56.451" endtime="20210920 13:42:56.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:42:56.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:42:56.451" endtime="20210920 13:42:56.452"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.442" endtime="20210920 13:42:56.452"/>
</kw>
<msg timestamp="20210920 13:42:56.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:42:56.442" endtime="20210920 13:42:56.453"/>
</kw>
<msg timestamp="20210920 13:42:56.453" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:42:56.441" endtime="20210920 13:42:56.453"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:42:56.455" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:42:56.453" endtime="20210920 13:42:56.455"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:42:56.460" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:42:56.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:42:56.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:42:56.458" endtime="20210920 13:42:56.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:42:56.470" level="INFO"/>
<status status="PASS" starttime="20210920 13:42:56.470" endtime="20210920 13:42:56.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:42:56.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:42:56.471" endtime="20210920 13:42:56.471"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.457" endtime="20210920 13:42:56.472"/>
</kw>
<msg timestamp="20210920 13:42:56.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:42:56.457" endtime="20210920 13:42:56.472"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.456" endtime="20210920 13:42:56.472"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.455" endtime="20210920 13:42:56.472"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.441" endtime="20210920 13:42:56.473"/>
</kw>
<status status="PASS" starttime="20210920 13:42:56.440" endtime="20210920 13:42:56.473"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:42:56.477" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:47:56.441" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210920 13:42:56.475" endtime="20210920 13:47:56.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210920 13:47:56.442" endtime="20210920 13:47:56.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210920 13:47:56.442" endtime="20210920 13:47:56.442"/>
</kw>
<status status="FAIL" starttime="20210920 13:42:56.474" endtime="20210920 13:47:56.443"/>
</kw>
<msg timestamp="20210920 13:47:56.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210920 13:42:56.473" endtime="20210920 13:47:56.444"/>
</kw>
<status status="FAIL" starttime="20210920 13:42:56.473" endtime="20210920 13:47:56.444"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210920 13:47:56.444" endtime="20210920 13:47:56.444"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 13:47:56.445" endtime="20210920 13:47:56.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210920 13:42:56.439" endtime="20210920 13:47:56.445">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210920 13:42:56.204" endtime="20210920 13:47:56.447"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:47:56.464" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:47:59.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:47:59.719" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210920 13:47:56.462" endtime="20210920 13:47:59.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:47:59.720" level="INFO">om</msg>
<status status="PASS" starttime="20210920 13:47:59.719" endtime="20210920 13:47:59.720"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:47:59.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:47:59.720" endtime="20210920 13:47:59.721"/>
</kw>
<status status="PASS" starttime="20210920 13:47:56.461" endtime="20210920 13:47:59.722"/>
</kw>
<msg timestamp="20210920 13:47:59.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:47:56.461" endtime="20210920 13:47:59.722"/>
</kw>
<msg timestamp="20210920 13:47:59.722" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210920 13:47:56.460" endtime="20210920 13:47:59.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:47:59.723" endtime="20210920 13:47:59.723"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:47:59.731" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:48:02.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:48:02.985" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210920 13:47:59.726" endtime="20210920 13:48:02.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:48:02.987" level="INFO">om</msg>
<status status="PASS" starttime="20210920 13:48:02.986" endtime="20210920 13:48:02.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:48:02.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:48:02.988" endtime="20210920 13:48:02.988"/>
</kw>
<status status="PASS" starttime="20210920 13:47:59.725" endtime="20210920 13:48:02.989"/>
</kw>
<msg timestamp="20210920 13:48:02.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:47:59.724" endtime="20210920 13:48:02.989"/>
</kw>
<msg timestamp="20210920 13:48:02.989" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210920 13:47:59.723" endtime="20210920 13:48:02.989"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:48:02.990" endtime="20210920 13:48:02.990"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210920 13:47:56.457" endtime="20210920 13:48:02.991"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:48:02.997" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:48:06.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:48:06.571" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:48:02.995" endtime="20210920 13:48:06.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:48:06.573" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:48:06.572" endtime="20210920 13:48:06.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:48:06.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:48:06.573" endtime="20210920 13:48:06.575"/>
</kw>
<status status="PASS" starttime="20210920 13:48:02.994" endtime="20210920 13:48:06.576"/>
</kw>
<msg timestamp="20210920 13:48:06.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:48:02.994" endtime="20210920 13:48:06.576"/>
</kw>
<msg timestamp="20210920 13:48:06.577" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210920 13:48:02.993" endtime="20210920 13:48:06.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:48:06.577" endtime="20210920 13:48:06.579"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:48:06.585" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:48:09.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:48:09.791" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:48:06.582" endtime="20210920 13:48:09.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:48:09.793" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:48:09.791" endtime="20210920 13:48:09.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:48:09.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:48:09.794" endtime="20210920 13:48:09.795"/>
</kw>
<status status="PASS" starttime="20210920 13:48:06.581" endtime="20210920 13:48:09.795"/>
</kw>
<msg timestamp="20210920 13:48:09.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:48:06.580" endtime="20210920 13:48:09.796"/>
</kw>
<msg timestamp="20210920 13:48:09.797" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210920 13:48:06.579" endtime="20210920 13:48:09.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:48:09.797" endtime="20210920 13:48:09.798"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210920 13:48:02.992" endtime="20210920 13:48:09.799"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:48:09.812" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:48:12.787" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:48:12.787" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210920 13:48:09.805" endtime="20210920 13:48:12.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:48:12.789" level="INFO">om</msg>
<status status="PASS" starttime="20210920 13:48:12.788" endtime="20210920 13:48:12.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:48:12.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:48:12.790" endtime="20210920 13:48:12.791"/>
</kw>
<status status="PASS" starttime="20210920 13:48:09.804" endtime="20210920 13:48:12.791"/>
</kw>
<msg timestamp="20210920 13:48:12.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:48:09.804" endtime="20210920 13:48:12.792"/>
</kw>
<msg timestamp="20210920 13:48:12.792" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210920 13:48:09.802" endtime="20210920 13:48:12.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:48:12.792" endtime="20210920 13:48:12.793"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:48:12.793" endtime="20210920 13:48:12.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:48:12.800" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:48:15.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:48:15.975" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210920 13:48:12.797" endtime="20210920 13:48:15.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:48:15.977" level="INFO">om</msg>
<status status="PASS" starttime="20210920 13:48:15.976" endtime="20210920 13:48:15.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:48:15.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:48:15.977" endtime="20210920 13:48:15.978"/>
</kw>
<status status="PASS" starttime="20210920 13:48:12.796" endtime="20210920 13:48:15.978"/>
</kw>
<msg timestamp="20210920 13:48:15.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:48:12.795" endtime="20210920 13:48:15.979"/>
</kw>
<msg timestamp="20210920 13:48:15.979" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210920 13:48:12.794" endtime="20210920 13:48:15.979"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:48:15.979" endtime="20210920 13:48:15.980"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:48:15.981" endtime="20210920 13:48:15.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210920 13:48:09.800" endtime="20210920 13:48:15.982"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:48:15.998" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:48:18.888" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 13:48:18.888" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210920 13:48:15.988" endtime="20210920 13:48:18.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:48:18.889" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210920 13:48:18.889" endtime="20210920 13:48:18.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:48:18.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:48:18.890" endtime="20210920 13:48:18.890"/>
</kw>
<msg timestamp="20210920 13:48:18.891" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210920 13:48:15.986" endtime="20210920 13:48:18.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:48:18.891" endtime="20210920 13:48:18.892"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:48:18.895" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:48:21.918" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 13:48:21.918" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210920 13:48:18.892" endtime="20210920 13:48:21.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:48:21.920" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210920 13:48:21.919" endtime="20210920 13:48:21.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:48:21.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:48:21.920" endtime="20210920 13:48:21.921"/>
</kw>
<msg timestamp="20210920 13:48:21.921" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210920 13:48:18.892" endtime="20210920 13:48:21.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:48:21.921" endtime="20210920 13:48:21.922"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210920 13:48:15.984" endtime="20210920 13:48:21.922"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210920 13:47:56.451" endtime="20210920 13:48:21.925"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210920 13:48:21.955" level="INFO">${random} = 43771</msg>
<status status="PASS" starttime="20210920 13:48:21.954" endtime="20210920 13:48:21.955"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:48:21.959" level="INFO">${source} = 43771-source</msg>
<status status="PASS" starttime="20210920 13:48:21.955" endtime="20210920 13:48:21.959"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:48:21.961" level="INFO">${target} = 43771-target</msg>
<status status="PASS" starttime="20210920 13:48:21.959" endtime="20210920 13:48:21.961"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:48:21.967" level="INFO">Running command 'ozone sh volume create 43771-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:48:28.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:48:28.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:48:21.963" endtime="20210920 13:48:28.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:48:28.384" level="INFO"/>
<status status="PASS" starttime="20210920 13:48:28.383" endtime="20210920 13:48:28.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:48:28.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:48:28.385" endtime="20210920 13:48:28.385"/>
</kw>
<status status="PASS" starttime="20210920 13:48:21.962" endtime="20210920 13:48:28.386"/>
</kw>
<msg timestamp="20210920 13:48:28.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:48:21.962" endtime="20210920 13:48:28.387"/>
</kw>
<status status="PASS" starttime="20210920 13:48:21.961" endtime="20210920 13:48:28.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:48:28.393" level="INFO">Running command 'ozone sh volume create 43771-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:48:36.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:48:36.940" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:48:28.390" endtime="20210920 13:48:36.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:48:36.944" level="INFO"/>
<status status="PASS" starttime="20210920 13:48:36.942" endtime="20210920 13:48:36.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:48:36.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:48:36.944" endtime="20210920 13:48:36.945"/>
</kw>
<status status="PASS" starttime="20210920 13:48:28.389" endtime="20210920 13:48:36.946"/>
</kw>
<msg timestamp="20210920 13:48:36.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:48:28.388" endtime="20210920 13:48:36.947"/>
</kw>
<status status="PASS" starttime="20210920 13:48:28.387" endtime="20210920 13:48:36.947"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:48:36.955" level="INFO">Running command 'ozone sh bucket create 43771-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:48:45.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:48:45.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:48:36.952" endtime="20210920 13:48:45.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:48:45.432" level="INFO"/>
<status status="PASS" starttime="20210920 13:48:45.430" endtime="20210920 13:48:45.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:48:45.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:48:45.432" endtime="20210920 13:48:45.433"/>
</kw>
<status status="PASS" starttime="20210920 13:48:36.952" endtime="20210920 13:48:45.434"/>
</kw>
<msg timestamp="20210920 13:48:45.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:48:36.950" endtime="20210920 13:48:45.434"/>
</kw>
<status status="PASS" starttime="20210920 13:48:36.949" endtime="20210920 13:48:45.435"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:48:45.441" level="INFO">Running command 'ozone sh key put 43771-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:51:56.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:51:56.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:48:45.438" endtime="20210920 13:51:56.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:51:56.883" level="INFO"/>
<status status="PASS" starttime="20210920 13:51:56.882" endtime="20210920 13:51:56.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:51:56.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:51:56.883" endtime="20210920 13:51:56.884"/>
</kw>
<status status="PASS" starttime="20210920 13:48:45.438" endtime="20210920 13:51:56.885"/>
</kw>
<msg timestamp="20210920 13:51:56.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:48:45.437" endtime="20210920 13:51:56.885"/>
</kw>
<status status="PASS" starttime="20210920 13:48:45.435" endtime="20210920 13:51:56.885"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:51:56.891" level="INFO">Running command 'ozone sh bucket create 43771-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:52:05.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:52:05.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:51:56.888" endtime="20210920 13:52:05.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:52:05.233" level="INFO"/>
<status status="PASS" starttime="20210920 13:52:05.233" endtime="20210920 13:52:05.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:52:05.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:52:05.234" endtime="20210920 13:52:05.234"/>
</kw>
<status status="PASS" starttime="20210920 13:51:56.887" endtime="20210920 13:52:05.235"/>
</kw>
<msg timestamp="20210920 13:52:05.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:51:56.887" endtime="20210920 13:52:05.235"/>
</kw>
<status status="PASS" starttime="20210920 13:51:56.886" endtime="20210920 13:52:05.235"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:52:05.240" level="INFO">Running command 'ozone sh bucket link 43771-source/readable-bucket 43771-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:52:14.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:52:14.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:52:05.237" endtime="20210920 13:52:14.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:52:14.051" level="INFO"/>
<status status="PASS" starttime="20210920 13:52:14.050" endtime="20210920 13:52:14.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:52:14.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:52:14.051" endtime="20210920 13:52:14.052"/>
</kw>
<status status="PASS" starttime="20210920 13:52:05.237" endtime="20210920 13:52:14.052"/>
</kw>
<msg timestamp="20210920 13:52:14.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:52:05.236" endtime="20210920 13:52:14.052"/>
</kw>
<status status="PASS" starttime="20210920 13:52:05.236" endtime="20210920 13:52:14.053"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:52:14.056" level="INFO">Running command 'ozone sh bucket link 43771-source/readable-bucket 43771-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:52:22.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:52:22.203" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:52:14.054" endtime="20210920 13:52:22.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:52:22.205" level="INFO"/>
<status status="PASS" starttime="20210920 13:52:22.204" endtime="20210920 13:52:22.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:52:22.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:52:22.205" endtime="20210920 13:52:22.206"/>
</kw>
<status status="PASS" starttime="20210920 13:52:14.054" endtime="20210920 13:52:22.207"/>
</kw>
<msg timestamp="20210920 13:52:22.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:52:14.053" endtime="20210920 13:52:22.208"/>
</kw>
<status status="PASS" starttime="20210920 13:52:14.053" endtime="20210920 13:52:22.208"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:52:22.214" level="INFO">Running command 'ozone sh bucket link 43771-source/unreadable-bucket 43771-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:52:30.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:52:30.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:52:22.211" endtime="20210920 13:52:30.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:52:30.909" level="INFO"/>
<status status="PASS" starttime="20210920 13:52:30.908" endtime="20210920 13:52:30.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:52:30.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:52:30.909" endtime="20210920 13:52:30.910"/>
</kw>
<status status="PASS" starttime="20210920 13:52:22.210" endtime="20210920 13:52:30.910"/>
</kw>
<msg timestamp="20210920 13:52:30.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:52:22.209" endtime="20210920 13:52:30.910"/>
</kw>
<status status="PASS" starttime="20210920 13:52:22.209" endtime="20210920 13:52:30.911"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:52:30.915" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 43771-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:52:39.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:52:39.581" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:52:30.912" endtime="20210920 13:52:39.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:52:39.583" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:52:39.582" endtime="20210920 13:52:39.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:52:39.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:52:39.583" endtime="20210920 13:52:39.584"/>
</kw>
<status status="PASS" starttime="20210920 13:52:30.912" endtime="20210920 13:52:39.584"/>
</kw>
<msg timestamp="20210920 13:52:39.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:52:30.912" endtime="20210920 13:52:39.584"/>
</kw>
<status status="PASS" starttime="20210920 13:52:30.911" endtime="20210920 13:52:39.585"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:52:39.589" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 43771-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:52:47.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:52:47.561" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:52:39.586" endtime="20210920 13:52:47.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:52:47.562" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:52:47.561" endtime="20210920 13:52:47.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:52:47.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:52:47.562" endtime="20210920 13:52:47.563"/>
</kw>
<status status="PASS" starttime="20210920 13:52:39.586" endtime="20210920 13:52:47.563"/>
</kw>
<msg timestamp="20210920 13:52:47.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:52:39.585" endtime="20210920 13:52:47.564"/>
</kw>
<status status="PASS" starttime="20210920 13:52:39.585" endtime="20210920 13:52:47.564"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:52:47.568" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 43771-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:52:53.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:52:53.609" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:52:47.566" endtime="20210920 13:52:53.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:52:53.610" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:52:53.610" endtime="20210920 13:52:53.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:52:53.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:52:53.610" endtime="20210920 13:52:53.611"/>
</kw>
<status status="PASS" starttime="20210920 13:52:47.565" endtime="20210920 13:52:53.611"/>
</kw>
<msg timestamp="20210920 13:52:53.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:52:47.565" endtime="20210920 13:52:53.612"/>
</kw>
<status status="PASS" starttime="20210920 13:52:47.564" endtime="20210920 13:52:53.612"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:52:53.616" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 43771-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:53:00.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:53:00.811" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:52:53.614" endtime="20210920 13:53:00.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:53:00.812" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:53:00.811" endtime="20210920 13:53:00.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:53:00.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:53:00.812" endtime="20210920 13:53:00.813"/>
</kw>
<status status="PASS" starttime="20210920 13:52:53.613" endtime="20210920 13:53:00.813"/>
</kw>
<msg timestamp="20210920 13:53:00.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:52:53.613" endtime="20210920 13:53:00.814"/>
</kw>
<status status="PASS" starttime="20210920 13:52:53.612" endtime="20210920 13:53:00.814"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:53:00.819" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 43771-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:53:09.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:53:09.336" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:53:00.816" endtime="20210920 13:53:09.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:53:09.338" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:53:09.336" endtime="20210920 13:53:09.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:53:09.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:53:09.338" endtime="20210920 13:53:09.339"/>
</kw>
<status status="PASS" starttime="20210920 13:53:00.815" endtime="20210920 13:53:09.339"/>
</kw>
<msg timestamp="20210920 13:53:09.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:53:00.815" endtime="20210920 13:53:09.340"/>
</kw>
<status status="PASS" starttime="20210920 13:53:00.814" endtime="20210920 13:53:09.340"/>
</kw>
<status status="PASS" starttime="20210920 13:48:36.949" endtime="20210920 13:53:09.340"/>
</kw>
<status status="PASS" starttime="20210920 13:48:36.947" endtime="20210920 13:53:09.341"/>
</kw>
<status status="PASS" starttime="20210920 13:48:21.953" endtime="20210920 13:53:09.341"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:53:09.350" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:53:09.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:53:09.355" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:53:09.347" endtime="20210920 13:53:09.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:53:09.357" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:53:09.356" endtime="20210920 13:53:09.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:53:09.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:53:09.358" endtime="20210920 13:53:09.360"/>
</kw>
<status status="PASS" starttime="20210920 13:53:09.346" endtime="20210920 13:53:09.360"/>
</kw>
<msg timestamp="20210920 13:53:09.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:53:09.346" endtime="20210920 13:53:09.361"/>
</kw>
<msg timestamp="20210920 13:53:09.361" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:53:09.345" endtime="20210920 13:53:09.361"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:53:09.364" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:53:09.361" endtime="20210920 13:53:09.364"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:53:09.372" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:53:09.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:53:09.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:53:09.369" endtime="20210920 13:53:09.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:53:09.420" level="INFO"/>
<status status="PASS" starttime="20210920 13:53:09.419" endtime="20210920 13:53:09.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:53:09.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:53:09.420" endtime="20210920 13:53:09.421"/>
</kw>
<status status="PASS" starttime="20210920 13:53:09.367" endtime="20210920 13:53:09.422"/>
</kw>
<msg timestamp="20210920 13:53:09.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:53:09.367" endtime="20210920 13:53:09.422"/>
</kw>
<status status="PASS" starttime="20210920 13:53:09.365" endtime="20210920 13:53:09.423"/>
</kw>
<status status="PASS" starttime="20210920 13:53:09.365" endtime="20210920 13:53:09.423"/>
</kw>
<status status="PASS" starttime="20210920 13:53:09.344" endtime="20210920 13:53:09.423"/>
</kw>
<status status="PASS" starttime="20210920 13:53:09.343" endtime="20210920 13:53:09.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:53:09.430" level="INFO">Running command 'ozone sh bucket link 43771-source/no-such-bucket 43771-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:53:17.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:53:17.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:53:09.426" endtime="20210920 13:53:17.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:53:17.264" level="INFO"/>
<status status="PASS" starttime="20210920 13:53:17.263" endtime="20210920 13:53:17.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:53:17.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:53:17.264" endtime="20210920 13:53:17.265"/>
</kw>
<status status="PASS" starttime="20210920 13:53:09.425" endtime="20210920 13:53:17.265"/>
</kw>
<msg timestamp="20210920 13:53:17.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:53:09.424" endtime="20210920 13:53:17.266"/>
</kw>
<status status="PASS" starttime="20210920 13:53:09.423" endtime="20210920 13:53:17.266"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:53:17.269" level="INFO">Running command 'ozone sh key list 43771-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:53:24.957" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 13:53:24.957" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210920 13:53:17.267" endtime="20210920 13:53:24.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:53:24.959" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210920 13:53:24.958" endtime="20210920 13:53:24.959"/>
</kw>
<msg timestamp="20210920 13:53:24.959" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210920 13:53:17.266" endtime="20210920 13:53:24.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:53:24.960" endtime="20210920 13:53:24.961"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 13:53:09.341" endtime="20210920 13:53:24.961"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:53:24.970" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:53:24.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:53:24.974" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:53:24.967" endtime="20210920 13:53:24.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:53:24.975" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:53:24.974" endtime="20210920 13:53:24.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:53:24.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:53:24.975" endtime="20210920 13:53:24.976"/>
</kw>
<status status="PASS" starttime="20210920 13:53:24.966" endtime="20210920 13:53:24.976"/>
</kw>
<msg timestamp="20210920 13:53:24.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:53:24.966" endtime="20210920 13:53:24.977"/>
</kw>
<msg timestamp="20210920 13:53:24.977" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:53:24.965" endtime="20210920 13:53:24.977"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:53:24.978" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:53:24.978" endtime="20210920 13:53:24.978"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:53:24.983" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:53:24.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:53:24.991" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:53:24.981" endtime="20210920 13:53:24.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:53:24.992" level="INFO"/>
<status status="PASS" starttime="20210920 13:53:24.991" endtime="20210920 13:53:24.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:53:24.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:53:24.993" endtime="20210920 13:53:24.993"/>
</kw>
<status status="PASS" starttime="20210920 13:53:24.980" endtime="20210920 13:53:24.994"/>
</kw>
<msg timestamp="20210920 13:53:24.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:53:24.980" endtime="20210920 13:53:24.994"/>
</kw>
<status status="PASS" starttime="20210920 13:53:24.979" endtime="20210920 13:53:24.994"/>
</kw>
<status status="PASS" starttime="20210920 13:53:24.979" endtime="20210920 13:53:24.994"/>
</kw>
<status status="PASS" starttime="20210920 13:53:24.964" endtime="20210920 13:53:24.995"/>
</kw>
<status status="PASS" starttime="20210920 13:53:24.964" endtime="20210920 13:53:24.995"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:53:24.999" level="INFO">Running command 'ozone sh bucket link 43771-source/bucket1 43771-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:53:31.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:53:31.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:53:24.997" endtime="20210920 13:53:31.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:53:31.320" level="INFO"/>
<status status="PASS" starttime="20210920 13:53:31.319" endtime="20210920 13:53:31.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:53:31.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:53:31.320" endtime="20210920 13:53:31.322"/>
</kw>
<status status="PASS" starttime="20210920 13:53:24.996" endtime="20210920 13:53:31.322"/>
</kw>
<msg timestamp="20210920 13:53:31.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:53:24.996" endtime="20210920 13:53:31.322"/>
</kw>
<status status="PASS" starttime="20210920 13:53:24.995" endtime="20210920 13:53:31.323"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:53:31.330" level="INFO">Running command 'ozone sh bucket create 43771-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:53:39.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:53:39.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:53:31.327" endtime="20210920 13:53:39.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:53:39.952" level="INFO"/>
<status status="PASS" starttime="20210920 13:53:39.951" endtime="20210920 13:53:39.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:53:39.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:53:39.952" endtime="20210920 13:53:39.953"/>
</kw>
<status status="PASS" starttime="20210920 13:53:31.326" endtime="20210920 13:53:39.953"/>
</kw>
<msg timestamp="20210920 13:53:39.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:53:31.326" endtime="20210920 13:53:39.953"/>
</kw>
<status status="PASS" starttime="20210920 13:53:31.325" endtime="20210920 13:53:39.954"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:53:39.959" level="INFO">Running command 'ozone sh key put 43771-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:55:24.964" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210920 13:53:39.956" endtime="20210920 13:55:24.964"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210920 13:55:24.965" endtime="20210920 13:55:24.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210920 13:55:24.965" endtime="20210920 13:55:24.965"/>
</kw>
<status status="FAIL" starttime="20210920 13:53:39.955" endtime="20210920 13:55:24.966"/>
</kw>
<msg timestamp="20210920 13:55:24.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210920 13:53:39.955" endtime="20210920 13:55:24.966"/>
</kw>
<status status="FAIL" starttime="20210920 13:53:39.954" endtime="20210920 13:55:24.966"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210920 13:55:24.967" endtime="20210920 13:55:24.967"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210920 13:53:24.962" endtime="20210920 13:55:24.967">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:55:24.975" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:55:24.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:55:24.980" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:55:24.972" endtime="20210920 13:55:24.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:55:24.982" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:55:24.981" endtime="20210920 13:55:24.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:55:24.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:55:24.983" endtime="20210920 13:55:24.984"/>
</kw>
<status status="PASS" starttime="20210920 13:55:24.971" endtime="20210920 13:55:24.985"/>
</kw>
<msg timestamp="20210920 13:55:24.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:55:24.971" endtime="20210920 13:55:24.985"/>
</kw>
<msg timestamp="20210920 13:55:24.986" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:55:24.970" endtime="20210920 13:55:24.986"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:55:24.988" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:55:24.987" endtime="20210920 13:55:24.988"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:55:24.994" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:55:25.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:55:25.005" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:55:24.992" endtime="20210920 13:55:25.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:55:25.007" level="INFO"/>
<status status="PASS" starttime="20210920 13:55:25.007" endtime="20210920 13:55:25.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:55:25.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:55:25.008" endtime="20210920 13:55:25.009"/>
</kw>
<status status="PASS" starttime="20210920 13:55:24.991" endtime="20210920 13:55:25.010"/>
</kw>
<msg timestamp="20210920 13:55:25.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:55:24.990" endtime="20210920 13:55:25.010"/>
</kw>
<status status="PASS" starttime="20210920 13:55:24.989" endtime="20210920 13:55:25.010"/>
</kw>
<status status="PASS" starttime="20210920 13:55:24.988" endtime="20210920 13:55:25.010"/>
</kw>
<status status="PASS" starttime="20210920 13:55:24.969" endtime="20210920 13:55:25.011"/>
</kw>
<status status="PASS" starttime="20210920 13:55:24.969" endtime="20210920 13:55:25.011"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:55:25.018" level="INFO">Running command 'ozone sh key put 43771-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:24.969" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210920 13:55:25.014" endtime="20210920 13:57:24.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210920 13:57:24.970" endtime="20210920 13:57:24.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210920 13:57:24.971" endtime="20210920 13:57:24.971"/>
</kw>
<status status="FAIL" starttime="20210920 13:55:25.013" endtime="20210920 13:57:24.972"/>
</kw>
<msg timestamp="20210920 13:57:24.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210920 13:55:25.013" endtime="20210920 13:57:24.972"/>
</kw>
<status status="FAIL" starttime="20210920 13:55:25.012" endtime="20210920 13:57:24.973"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210920 13:57:24.973" endtime="20210920 13:57:24.974"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210920 13:55:24.968" endtime="20210920 13:57:24.974">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:24.982" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:24.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:24.987" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:57:24.979" endtime="20210920 13:57:24.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:24.990" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:57:24.988" endtime="20210920 13:57:24.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:24.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:24.990" endtime="20210920 13:57:24.992"/>
</kw>
<status status="PASS" starttime="20210920 13:57:24.978" endtime="20210920 13:57:24.993"/>
</kw>
<msg timestamp="20210920 13:57:24.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:24.978" endtime="20210920 13:57:24.993"/>
</kw>
<msg timestamp="20210920 13:57:24.994" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:57:24.977" endtime="20210920 13:57:24.994"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:57:24.995" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:57:24.994" endtime="20210920 13:57:24.995"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:25.002" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:25.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:25.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:57:24.999" endtime="20210920 13:57:25.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:25.016" level="INFO"/>
<status status="PASS" starttime="20210920 13:57:25.014" endtime="20210920 13:57:25.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:25.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:25.016" endtime="20210920 13:57:25.017"/>
</kw>
<status status="PASS" starttime="20210920 13:57:24.998" endtime="20210920 13:57:25.018"/>
</kw>
<msg timestamp="20210920 13:57:25.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:24.997" endtime="20210920 13:57:25.018"/>
</kw>
<status status="PASS" starttime="20210920 13:57:24.996" endtime="20210920 13:57:25.019"/>
</kw>
<status status="PASS" starttime="20210920 13:57:24.996" endtime="20210920 13:57:25.019"/>
</kw>
<status status="PASS" starttime="20210920 13:57:24.977" endtime="20210920 13:57:25.019"/>
</kw>
<status status="PASS" starttime="20210920 13:57:24.976" endtime="20210920 13:57:25.019"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:25.025" level="INFO">Running command 'ozone sh key list 43771-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:33.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:33.421" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210920 13:57:25.021" endtime="20210920 13:57:33.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:33.423" level="INFO">key1</msg>
<status status="PASS" starttime="20210920 13:57:33.422" endtime="20210920 13:57:33.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:33.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:33.423" endtime="20210920 13:57:33.425"/>
</kw>
<status status="PASS" starttime="20210920 13:57:25.021" endtime="20210920 13:57:33.425"/>
</kw>
<msg timestamp="20210920 13:57:33.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:25.020" endtime="20210920 13:57:33.425"/>
</kw>
<msg timestamp="20210920 13:57:33.426" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210920 13:57:25.020" endtime="20210920 13:57:33.426"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:33.430" level="INFO">Running command 'ozone sh key list 43771-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:39.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:39.976" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210920 13:57:33.428" endtime="20210920 13:57:39.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:39.979" level="INFO">key1</msg>
<status status="PASS" starttime="20210920 13:57:39.977" endtime="20210920 13:57:39.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:39.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:39.980" endtime="20210920 13:57:39.982"/>
</kw>
<status status="PASS" starttime="20210920 13:57:33.427" endtime="20210920 13:57:39.982"/>
</kw>
<msg timestamp="20210920 13:57:39.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:33.426" endtime="20210920 13:57:39.983"/>
</kw>
<msg timestamp="20210920 13:57:39.983" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210920 13:57:33.426" endtime="20210920 13:57:39.984"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 13:57:39.984" endtime="20210920 13:57:39.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:57:39.986" endtime="20210920 13:57:39.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210920 13:57:39.989" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210920 13:57:39.987" endtime="20210920 13:57:39.989"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210920 13:57:24.975" endtime="20210920 13:57:39.990">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:40.001" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:40.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:40.007" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:57:39.998" endtime="20210920 13:57:40.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:40.010" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:57:40.008" endtime="20210920 13:57:40.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:40.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:40.010" endtime="20210920 13:57:40.012"/>
</kw>
<status status="PASS" starttime="20210920 13:57:39.997" endtime="20210920 13:57:40.013"/>
</kw>
<msg timestamp="20210920 13:57:40.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:39.996" endtime="20210920 13:57:40.013"/>
</kw>
<msg timestamp="20210920 13:57:40.014" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:57:39.995" endtime="20210920 13:57:40.014"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:57:40.016" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:57:40.014" endtime="20210920 13:57:40.016"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:40.023" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:40.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:40.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:57:40.020" endtime="20210920 13:57:40.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:40.035" level="INFO"/>
<status status="PASS" starttime="20210920 13:57:40.034" endtime="20210920 13:57:40.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:40.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:40.035" endtime="20210920 13:57:40.036"/>
</kw>
<status status="PASS" starttime="20210920 13:57:40.019" endtime="20210920 13:57:40.036"/>
</kw>
<msg timestamp="20210920 13:57:40.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:40.018" endtime="20210920 13:57:40.037"/>
</kw>
<status status="PASS" starttime="20210920 13:57:40.017" endtime="20210920 13:57:40.037"/>
</kw>
<status status="PASS" starttime="20210920 13:57:40.016" endtime="20210920 13:57:40.037"/>
</kw>
<status status="PASS" starttime="20210920 13:57:39.995" endtime="20210920 13:57:40.037"/>
</kw>
<status status="PASS" starttime="20210920 13:57:39.994" endtime="20210920 13:57:40.037"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:40.043" level="INFO">Running command 'ozone sh key delete 43771-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:46.310" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 13:57:46.310" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210920 13:57:40.040" endtime="20210920 13:57:46.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:46.311" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210920 13:57:46.310" endtime="20210920 13:57:46.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:46.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210920 13:57:46.312" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210920 13:57:46.312" endtime="20210920 13:57:46.313"/>
</kw>
<status status="FAIL" starttime="20210920 13:57:40.039" endtime="20210920 13:57:46.313"/>
</kw>
<msg timestamp="20210920 13:57:46.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210920 13:57:40.039" endtime="20210920 13:57:46.313"/>
</kw>
<status status="FAIL" starttime="20210920 13:57:40.038" endtime="20210920 13:57:46.313"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210920 13:57:46.314" endtime="20210920 13:57:46.314"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 13:57:46.314" endtime="20210920 13:57:46.314"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210920 13:57:39.993" endtime="20210920 13:57:46.316">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:46.324" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:46.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:46.328" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:57:46.322" endtime="20210920 13:57:46.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:46.329" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:57:46.329" endtime="20210920 13:57:46.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:46.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:46.330" endtime="20210920 13:57:46.330"/>
</kw>
<status status="PASS" starttime="20210920 13:57:46.321" endtime="20210920 13:57:46.331"/>
</kw>
<msg timestamp="20210920 13:57:46.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:46.320" endtime="20210920 13:57:46.331"/>
</kw>
<msg timestamp="20210920 13:57:46.331" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:57:46.320" endtime="20210920 13:57:46.331"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:57:46.332" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:57:46.332" endtime="20210920 13:57:46.333"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:46.337" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:46.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:46.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:57:46.335" endtime="20210920 13:57:46.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:46.346" level="INFO"/>
<status status="PASS" starttime="20210920 13:57:46.346" endtime="20210920 13:57:46.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:46.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:46.347" endtime="20210920 13:57:46.347"/>
</kw>
<status status="PASS" starttime="20210920 13:57:46.335" endtime="20210920 13:57:46.348"/>
</kw>
<msg timestamp="20210920 13:57:46.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:46.334" endtime="20210920 13:57:46.348"/>
</kw>
<status status="PASS" starttime="20210920 13:57:46.333" endtime="20210920 13:57:46.348"/>
</kw>
<status status="PASS" starttime="20210920 13:57:46.333" endtime="20210920 13:57:46.348"/>
</kw>
<status status="PASS" starttime="20210920 13:57:46.319" endtime="20210920 13:57:46.349"/>
</kw>
<status status="PASS" starttime="20210920 13:57:46.318" endtime="20210920 13:57:46.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:46.352" level="INFO">Running command 'ozone sh bucket list 43771-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:54.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:54.725" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210920 13:57:46.351" endtime="20210920 13:57:54.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:54.728" level="INFO">{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:53:17.184Z",
  "modificationTime" : "2021-09-20T13:53:17.184Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:52:30.796Z",
  "modificationTime" : "2021-09-20T13:53:09.182Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:53:30.961Z",
  "modificationTime" : "2021-09-20T13:53:30.961Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:52:13.621Z",
  "modificationTime" : "2021-09-20T13:53:00.688Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:52:22.008Z",
  "modificationTime" : "2021-09-20T13:52:22.008Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210920 13:57:54.726" endtime="20210920 13:57:54.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:54.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:54.729" endtime="20210920 13:57:54.730"/>
</kw>
<status status="PASS" starttime="20210920 13:57:46.350" endtime="20210920 13:57:54.731"/>
</kw>
<msg timestamp="20210920 13:57:54.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:46.350" endtime="20210920 13:57:54.732"/>
</kw>
<msg timestamp="20210920 13:57:54.733" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210920 13:57:46.349" endtime="20210920 13:57:54.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:57:54.733" endtime="20210920 13:57:54.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:57:54.735" endtime="20210920 13:57:54.735"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 13:57:46.317" endtime="20210920 13:57:54.736"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:54.746" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:54.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:54.751" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:57:54.743" endtime="20210920 13:57:54.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:54.752" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:57:54.752" endtime="20210920 13:57:54.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:54.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:54.753" endtime="20210920 13:57:54.753"/>
</kw>
<status status="PASS" starttime="20210920 13:57:54.742" endtime="20210920 13:57:54.754"/>
</kw>
<msg timestamp="20210920 13:57:54.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:54.741" endtime="20210920 13:57:54.754"/>
</kw>
<msg timestamp="20210920 13:57:54.754" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:57:54.740" endtime="20210920 13:57:54.754"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:57:54.755" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:57:54.754" endtime="20210920 13:57:54.755"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:54.762" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:57:54.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:57:54.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:57:54.760" endtime="20210920 13:57:54.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:57:54.774" level="INFO"/>
<status status="PASS" starttime="20210920 13:57:54.773" endtime="20210920 13:57:54.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:57:54.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:57:54.775" endtime="20210920 13:57:54.776"/>
</kw>
<status status="PASS" starttime="20210920 13:57:54.758" endtime="20210920 13:57:54.776"/>
</kw>
<msg timestamp="20210920 13:57:54.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:54.758" endtime="20210920 13:57:54.777"/>
</kw>
<status status="PASS" starttime="20210920 13:57:54.756" endtime="20210920 13:57:54.777"/>
</kw>
<status status="PASS" starttime="20210920 13:57:54.755" endtime="20210920 13:57:54.777"/>
</kw>
<status status="PASS" starttime="20210920 13:57:54.739" endtime="20210920 13:57:54.777"/>
</kw>
<status status="PASS" starttime="20210920 13:57:54.738" endtime="20210920 13:57:54.777"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:57:54.783" level="INFO">Running command 'ozone sh bucket info 43771-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:03.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:03.236" level="INFO">${output} = {
  "volumeName" : "43771-target",
  "bucketName" : "link1",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-20T13:53:30.961Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210920 13:57:54.780" endtime="20210920 13:58:03.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:03.240" level="INFO">{
  "volumeName" : "43771-target",
  "bucketName" : "link1",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-20T13:53:30.961Z",
  "modificationTime" : "2021-09-20T13:53:30.961Z"
}</msg>
<status status="PASS" starttime="20210920 13:58:03.238" endtime="20210920 13:58:03.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:03.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:03.241" endtime="20210920 13:58:03.243"/>
</kw>
<status status="PASS" starttime="20210920 13:57:54.779" endtime="20210920 13:58:03.244"/>
</kw>
<msg timestamp="20210920 13:58:03.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:57:54.779" endtime="20210920 13:58:03.244"/>
</kw>
<msg timestamp="20210920 13:58:03.245" level="INFO">${result} = {
  "volumeName" : "43771-target",
  "bucketName" : "link1",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-20T13:53:30.961Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210920 13:57:54.778" endtime="20210920 13:58:03.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:58:03.246" endtime="20210920 13:58:03.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:58:03.247" endtime="20210920 13:58:03.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:58:03.249" endtime="20210920 13:58:03.251"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:58:03.252" endtime="20210920 13:58:03.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:58:03.253" endtime="20210920 13:58:03.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:58:03.255" endtime="20210920 13:58:03.256"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:58:03.257" endtime="20210920 13:58:03.258"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 13:57:54.737" endtime="20210920 13:58:03.259"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:03.269" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:03.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:03.273" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:58:03.266" endtime="20210920 13:58:03.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:03.275" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:58:03.274" endtime="20210920 13:58:03.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:03.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:03.275" endtime="20210920 13:58:03.276"/>
</kw>
<status status="PASS" starttime="20210920 13:58:03.265" endtime="20210920 13:58:03.277"/>
</kw>
<msg timestamp="20210920 13:58:03.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:03.265" endtime="20210920 13:58:03.277"/>
</kw>
<msg timestamp="20210920 13:58:03.278" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:58:03.264" endtime="20210920 13:58:03.278"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:58:03.280" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:58:03.279" endtime="20210920 13:58:03.281"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:03.290" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:03.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:03.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:58:03.288" endtime="20210920 13:58:03.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:03.302" level="INFO"/>
<status status="PASS" starttime="20210920 13:58:03.302" endtime="20210920 13:58:03.303"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:03.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:03.303" endtime="20210920 13:58:03.304"/>
</kw>
<status status="PASS" starttime="20210920 13:58:03.286" endtime="20210920 13:58:03.304"/>
</kw>
<msg timestamp="20210920 13:58:03.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:03.284" endtime="20210920 13:58:03.304"/>
</kw>
<status status="PASS" starttime="20210920 13:58:03.283" endtime="20210920 13:58:03.305"/>
</kw>
<status status="PASS" starttime="20210920 13:58:03.282" endtime="20210920 13:58:03.305"/>
</kw>
<status status="PASS" starttime="20210920 13:58:03.264" endtime="20210920 13:58:03.305"/>
</kw>
<status status="PASS" starttime="20210920 13:58:03.263" endtime="20210920 13:58:03.305"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:03.311" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 43771-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:11.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:11.360" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:58:03.308" endtime="20210920 13:58:11.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:11.364" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:58:11.361" endtime="20210920 13:58:11.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:11.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:11.364" endtime="20210920 13:58:11.366"/>
</kw>
<status status="PASS" starttime="20210920 13:58:03.307" endtime="20210920 13:58:11.366"/>
</kw>
<msg timestamp="20210920 13:58:11.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:03.307" endtime="20210920 13:58:11.367"/>
</kw>
<status status="PASS" starttime="20210920 13:58:03.306" endtime="20210920 13:58:11.368"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:11.383" level="INFO">Running command 'ozone sh bucket getacl 43771-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:19.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:19.273" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210920 13:58:11.373" endtime="20210920 13:58:19.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:19.274" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210920 13:58:19.273" endtime="20210920 13:58:19.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:19.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:19.274" endtime="20210920 13:58:19.275"/>
</kw>
<status status="PASS" starttime="20210920 13:58:11.372" endtime="20210920 13:58:19.275"/>
</kw>
<msg timestamp="20210920 13:58:19.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:11.371" endtime="20210920 13:58:19.275"/>
</kw>
<msg timestamp="20210920 13:58:19.276" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210920 13:58:11.369" endtime="20210920 13:58:19.276"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 13:58:19.276" endtime="20210920 13:58:19.277"/>
</kw>
<status status="PASS" starttime="20210920 13:58:11.368" endtime="20210920 13:58:19.277"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:19.285" level="INFO">Running command 'ozone sh bucket getacl 43771-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:27.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:27.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:58:19.282" endtime="20210920 13:58:27.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:27.153" level="INFO"/>
<status status="PASS" starttime="20210920 13:58:27.150" endtime="20210920 13:58:27.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:27.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:27.153" endtime="20210920 13:58:27.153"/>
</kw>
<status status="PASS" starttime="20210920 13:58:19.282" endtime="20210920 13:58:27.154"/>
</kw>
<msg timestamp="20210920 13:58:27.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:19.281" endtime="20210920 13:58:27.155"/>
</kw>
<msg timestamp="20210920 13:58:27.156" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210920 13:58:19.280" endtime="20210920 13:58:27.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 13:58:27.157" endtime="20210920 13:58:27.157"/>
</kw>
<status status="PASS" starttime="20210920 13:58:19.277" endtime="20210920 13:58:27.157"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:27.163" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 43771-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:33.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:33.830" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:58:27.160" endtime="20210920 13:58:33.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:33.832" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 13:58:33.831" endtime="20210920 13:58:33.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:33.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:33.832" endtime="20210920 13:58:33.833"/>
</kw>
<status status="PASS" starttime="20210920 13:58:27.159" endtime="20210920 13:58:33.833"/>
</kw>
<msg timestamp="20210920 13:58:33.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:27.158" endtime="20210920 13:58:33.833"/>
</kw>
<status status="PASS" starttime="20210920 13:58:27.158" endtime="20210920 13:58:33.834"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:33.840" level="INFO">Running command 'ozone sh bucket getacl 43771-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:41.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:41.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:58:33.838" endtime="20210920 13:58:41.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:41.858" level="INFO"/>
<status status="PASS" starttime="20210920 13:58:41.856" endtime="20210920 13:58:41.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:41.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:41.858" endtime="20210920 13:58:41.860"/>
</kw>
<status status="PASS" starttime="20210920 13:58:33.837" endtime="20210920 13:58:41.860"/>
</kw>
<msg timestamp="20210920 13:58:41.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:33.837" endtime="20210920 13:58:41.861"/>
</kw>
<msg timestamp="20210920 13:58:41.862" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210920 13:58:33.835" endtime="20210920 13:58:41.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 13:58:41.862" endtime="20210920 13:58:41.863"/>
</kw>
<status status="PASS" starttime="20210920 13:58:33.834" endtime="20210920 13:58:41.864"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:41.875" level="INFO">Running command 'ozone sh bucket getacl 43771-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:48.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:48.089" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210920 13:58:41.870" endtime="20210920 13:58:48.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:48.090" level="INFO">READ</msg>
<status status="PASS" starttime="20210920 13:58:48.089" endtime="20210920 13:58:48.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:48.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:48.091" endtime="20210920 13:58:48.091"/>
</kw>
<status status="PASS" starttime="20210920 13:58:41.869" endtime="20210920 13:58:48.092"/>
</kw>
<msg timestamp="20210920 13:58:48.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:41.868" endtime="20210920 13:58:48.092"/>
</kw>
<msg timestamp="20210920 13:58:48.093" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210920 13:58:41.865" endtime="20210920 13:58:48.093"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 13:58:48.093" endtime="20210920 13:58:48.094"/>
</kw>
<status status="PASS" starttime="20210920 13:58:41.864" endtime="20210920 13:58:48.095"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 13:58:03.260" endtime="20210920 13:58:48.095"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:48.105" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:48.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:48.112" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:58:48.102" endtime="20210920 13:58:48.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:48.114" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:58:48.113" endtime="20210920 13:58:48.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:48.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:48.115" endtime="20210920 13:58:48.116"/>
</kw>
<status status="PASS" starttime="20210920 13:58:48.102" endtime="20210920 13:58:48.116"/>
</kw>
<msg timestamp="20210920 13:58:48.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:48.101" endtime="20210920 13:58:48.117"/>
</kw>
<msg timestamp="20210920 13:58:48.118" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:58:48.100" endtime="20210920 13:58:48.118"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:58:48.119" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:58:48.118" endtime="20210920 13:58:48.119"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:48.125" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:48.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:48.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:58:48.122" endtime="20210920 13:58:48.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:48.176" level="INFO"/>
<status status="PASS" starttime="20210920 13:58:48.175" endtime="20210920 13:58:48.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:48.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:48.176" endtime="20210920 13:58:48.177"/>
</kw>
<status status="PASS" starttime="20210920 13:58:48.121" endtime="20210920 13:58:48.178"/>
</kw>
<msg timestamp="20210920 13:58:48.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:48.121" endtime="20210920 13:58:48.178"/>
</kw>
<status status="PASS" starttime="20210920 13:58:48.120" endtime="20210920 13:58:48.178"/>
</kw>
<status status="PASS" starttime="20210920 13:58:48.119" endtime="20210920 13:58:48.179"/>
</kw>
<status status="PASS" starttime="20210920 13:58:48.099" endtime="20210920 13:58:48.179"/>
</kw>
<status status="PASS" starttime="20210920 13:58:48.098" endtime="20210920 13:58:48.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:48.185" level="INFO">Running command 'ozone sh bucket link 43771-source/bucket2 43771-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:58:55.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:58:55.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:58:48.181" endtime="20210920 13:58:55.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:58:55.827" level="INFO"/>
<status status="PASS" starttime="20210920 13:58:55.826" endtime="20210920 13:58:55.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:58:55.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:58:55.827" endtime="20210920 13:58:55.828"/>
</kw>
<status status="PASS" starttime="20210920 13:58:48.181" endtime="20210920 13:58:55.829"/>
</kw>
<msg timestamp="20210920 13:58:55.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:58:48.180" endtime="20210920 13:58:55.829"/>
</kw>
<status status="PASS" starttime="20210920 13:58:48.179" endtime="20210920 13:58:55.830"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:58:55.836" level="INFO">Running command 'ozone sh bucket create 43771-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:03.439" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 13:59:03.439" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210920 13:58:55.832" endtime="20210920 13:59:03.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:03.441" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210920 13:59:03.440" endtime="20210920 13:59:03.441"/>
</kw>
<msg timestamp="20210920 13:59:03.442" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210920 13:58:55.831" endtime="20210920 13:59:03.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:59:03.442" endtime="20210920 13:59:03.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:03.447" level="INFO">Running command 'ozone sh bucket create 43771-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:12.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:12.042" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:03.445" endtime="20210920 13:59:12.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:12.044" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:12.043" endtime="20210920 13:59:12.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:12.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:12.044" endtime="20210920 13:59:12.045"/>
</kw>
<status status="PASS" starttime="20210920 13:59:03.444" endtime="20210920 13:59:12.045"/>
</kw>
<msg timestamp="20210920 13:59:12.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:03.443" endtime="20210920 13:59:12.046"/>
</kw>
<status status="PASS" starttime="20210920 13:59:03.443" endtime="20210920 13:59:12.046"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:12.052" level="INFO">Running command 'ozone sh bucket link 43771-source/bucket1 43771-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:20.017" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 13:59:20.018" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210920 13:59:12.048" endtime="20210920 13:59:20.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:20.023" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210920 13:59:20.020" endtime="20210920 13:59:20.023"/>
</kw>
<msg timestamp="20210920 13:59:20.024" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210920 13:59:12.046" endtime="20210920 13:59:20.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:59:20.025" endtime="20210920 13:59:20.027"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 13:58:48.097" endtime="20210920 13:59:20.028"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:20.042" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:20.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:20.048" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:59:20.038" endtime="20210920 13:59:20.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:20.051" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:59:20.049" endtime="20210920 13:59:20.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:20.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:20.052" endtime="20210920 13:59:20.056"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.037" endtime="20210920 13:59:20.056"/>
</kw>
<msg timestamp="20210920 13:59:20.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:20.036" endtime="20210920 13:59:20.057"/>
</kw>
<msg timestamp="20210920 13:59:20.059" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:59:20.035" endtime="20210920 13:59:20.059"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:59:20.061" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:59:20.060" endtime="20210920 13:59:20.061"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:20.073" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:20.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:20.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:20.068" endtime="20210920 13:59:20.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:20.083" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:20.082" endtime="20210920 13:59:20.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:20.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:20.083" endtime="20210920 13:59:20.084"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.067" endtime="20210920 13:59:20.085"/>
</kw>
<msg timestamp="20210920 13:59:20.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:20.066" endtime="20210920 13:59:20.085"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.063" endtime="20210920 13:59:20.086"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.061" endtime="20210920 13:59:20.086"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.034" endtime="20210920 13:59:20.086"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.032" endtime="20210920 13:59:20.086"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:20.095" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:20.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:20.100" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:20.090" endtime="20210920 13:59:20.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:20.102" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:20.101" endtime="20210920 13:59:20.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:20.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:20.103" endtime="20210920 13:59:20.104"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.090" endtime="20210920 13:59:20.105"/>
</kw>
<msg timestamp="20210920 13:59:20.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:20.089" endtime="20210920 13:59:20.105"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.089" endtime="20210920 13:59:20.105"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:20.112" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:20.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:20.117" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:59:20.109" endtime="20210920 13:59:20.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:20.119" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:59:20.118" endtime="20210920 13:59:20.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:20.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:20.119" endtime="20210920 13:59:20.120"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.108" endtime="20210920 13:59:20.120"/>
</kw>
<msg timestamp="20210920 13:59:20.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:20.108" endtime="20210920 13:59:20.120"/>
</kw>
<msg timestamp="20210920 13:59:20.121" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:59:20.107" endtime="20210920 13:59:20.121"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:59:20.122" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:59:20.121" endtime="20210920 13:59:20.122"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:20.127" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:20.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:20.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:20.125" endtime="20210920 13:59:20.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:20.141" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:20.140" endtime="20210920 13:59:20.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:20.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:20.141" endtime="20210920 13:59:20.142"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.124" endtime="20210920 13:59:20.143"/>
</kw>
<msg timestamp="20210920 13:59:20.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:20.123" endtime="20210920 13:59:20.143"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.123" endtime="20210920 13:59:20.143"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.122" endtime="20210920 13:59:20.143"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.106" endtime="20210920 13:59:20.143"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.105" endtime="20210920 13:59:20.144"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:20.147" level="INFO">Running command 'ozone sh key list 43771-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:25.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:25.231" level="INFO">${output} = {
  "volumeName" : "43771-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-20T13:48:51.699Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210920 13:59:20.144" endtime="20210920 13:59:25.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:25.232" level="INFO">{
  "volumeName" : "43771-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-20T13:48:51.699Z",
  "modificationTime" : "2021-09-20T13:51:55.863Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210920 13:59:25.231" endtime="20210920 13:59:25.232"/>
</kw>
<msg timestamp="20210920 13:59:25.233" level="INFO">${result} = {
  "volumeName" : "43771-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-20T13:48:51.699Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210920 13:59:20.144" endtime="20210920 13:59:25.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:59:25.233" endtime="20210920 13:59:25.234"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.088" endtime="20210920 13:59:25.234"/>
</kw>
<status status="PASS" starttime="20210920 13:59:20.087" endtime="20210920 13:59:25.234"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 13:59:20.030" endtime="20210920 13:59:25.234"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:25.244" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:25.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:25.249" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:59:25.242" endtime="20210920 13:59:25.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:25.250" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:59:25.249" endtime="20210920 13:59:25.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:25.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:25.250" endtime="20210920 13:59:25.251"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.242" endtime="20210920 13:59:25.251"/>
</kw>
<msg timestamp="20210920 13:59:25.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:25.241" endtime="20210920 13:59:25.251"/>
</kw>
<msg timestamp="20210920 13:59:25.252" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:59:25.241" endtime="20210920 13:59:25.252"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:59:25.253" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:59:25.252" endtime="20210920 13:59:25.253"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:25.259" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:25.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:25.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:25.256" endtime="20210920 13:59:25.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:25.269" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:25.268" endtime="20210920 13:59:25.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:25.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:25.269" endtime="20210920 13:59:25.270"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.255" endtime="20210920 13:59:25.270"/>
</kw>
<msg timestamp="20210920 13:59:25.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:25.254" endtime="20210920 13:59:25.271"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.253" endtime="20210920 13:59:25.271"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.253" endtime="20210920 13:59:25.271"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.240" endtime="20210920 13:59:25.271"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.240" endtime="20210920 13:59:25.271"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:25.277" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:25.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:25.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:25.274" endtime="20210920 13:59:25.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:25.282" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:25.282" endtime="20210920 13:59:25.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:25.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:25.282" endtime="20210920 13:59:25.283"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.274" endtime="20210920 13:59:25.283"/>
</kw>
<msg timestamp="20210920 13:59:25.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:25.273" endtime="20210920 13:59:25.284"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.273" endtime="20210920 13:59:25.284"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:25.289" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:25.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:25.293" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:59:25.287" endtime="20210920 13:59:25.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:25.294" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:59:25.294" endtime="20210920 13:59:25.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:25.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:25.295" endtime="20210920 13:59:25.296"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.286" endtime="20210920 13:59:25.296"/>
</kw>
<msg timestamp="20210920 13:59:25.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:25.286" endtime="20210920 13:59:25.296"/>
</kw>
<msg timestamp="20210920 13:59:25.297" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:59:25.285" endtime="20210920 13:59:25.297"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:59:25.298" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:59:25.297" endtime="20210920 13:59:25.298"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:25.309" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:25.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:25.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:25.307" endtime="20210920 13:59:25.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:25.319" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:25.318" endtime="20210920 13:59:25.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:25.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:25.320" endtime="20210920 13:59:25.320"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.300" endtime="20210920 13:59:25.321"/>
</kw>
<msg timestamp="20210920 13:59:25.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:25.300" endtime="20210920 13:59:25.321"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.299" endtime="20210920 13:59:25.321"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.298" endtime="20210920 13:59:25.321"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.285" endtime="20210920 13:59:25.322"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.284" endtime="20210920 13:59:25.322"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:25.326" level="INFO">Running command 'ozone sh key list 43771-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:31.110" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 13:59:31.110" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 43771-target unreadable-link null</msg>
<status status="PASS" starttime="20210920 13:59:25.323" endtime="20210920 13:59:31.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:31.111" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 43771-target unreadable-link null</msg>
<status status="PASS" starttime="20210920 13:59:31.111" endtime="20210920 13:59:31.112"/>
</kw>
<msg timestamp="20210920 13:59:31.113" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 43771-target unreadable-link null</msg>
<status status="PASS" starttime="20210920 13:59:25.322" endtime="20210920 13:59:31.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:59:31.114" endtime="20210920 13:59:31.115"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.272" endtime="20210920 13:59:31.115"/>
</kw>
<status status="PASS" starttime="20210920 13:59:25.272" endtime="20210920 13:59:31.115"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 13:59:25.239" endtime="20210920 13:59:31.116"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:31.134" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:31.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:31.140" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:59:31.130" endtime="20210920 13:59:31.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:31.142" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:59:31.141" endtime="20210920 13:59:31.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:31.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:31.143" endtime="20210920 13:59:31.144"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.129" endtime="20210920 13:59:31.145"/>
</kw>
<msg timestamp="20210920 13:59:31.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:31.128" endtime="20210920 13:59:31.145"/>
</kw>
<msg timestamp="20210920 13:59:31.146" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:59:31.125" endtime="20210920 13:59:31.146"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:59:31.147" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:59:31.146" endtime="20210920 13:59:31.147"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:31.155" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:31.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:31.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:31.152" endtime="20210920 13:59:31.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:31.170" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:31.168" endtime="20210920 13:59:31.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:31.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:31.170" endtime="20210920 13:59:31.171"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.151" endtime="20210920 13:59:31.172"/>
</kw>
<msg timestamp="20210920 13:59:31.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:31.151" endtime="20210920 13:59:31.172"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.148" endtime="20210920 13:59:31.172"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.147" endtime="20210920 13:59:31.172"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.124" endtime="20210920 13:59:31.173"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.123" endtime="20210920 13:59:31.173"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:31.179" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:31.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:31.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:31.177" endtime="20210920 13:59:31.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:31.186" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:31.185" endtime="20210920 13:59:31.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:31.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:31.187" endtime="20210920 13:59:31.188"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.176" endtime="20210920 13:59:31.188"/>
</kw>
<msg timestamp="20210920 13:59:31.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:31.175" endtime="20210920 13:59:31.189"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.175" endtime="20210920 13:59:31.190"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:31.196" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:31.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:31.201" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:59:31.194" endtime="20210920 13:59:31.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:31.203" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:59:31.202" endtime="20210920 13:59:31.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:31.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:31.203" endtime="20210920 13:59:31.204"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.193" endtime="20210920 13:59:31.204"/>
</kw>
<msg timestamp="20210920 13:59:31.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:31.192" endtime="20210920 13:59:31.205"/>
</kw>
<msg timestamp="20210920 13:59:31.205" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:59:31.191" endtime="20210920 13:59:31.205"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:59:31.206" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:59:31.206" endtime="20210920 13:59:31.207"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:31.213" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:31.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:31.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:31.210" endtime="20210920 13:59:31.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:31.225" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:31.224" endtime="20210920 13:59:31.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:31.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:31.226" endtime="20210920 13:59:31.227"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.209" endtime="20210920 13:59:31.227"/>
</kw>
<msg timestamp="20210920 13:59:31.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:31.209" endtime="20210920 13:59:31.228"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.208" endtime="20210920 13:59:31.228"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.207" endtime="20210920 13:59:31.228"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.190" endtime="20210920 13:59:31.228"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.190" endtime="20210920 13:59:31.228"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:31.234" level="INFO">Running command 'ozone sh bucket info 43771-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:40.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:40.196" level="INFO">${output} = {
  "volumeName" : "43771-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-20T13:52:30.796Z...</msg>
<status status="PASS" starttime="20210920 13:59:31.231" endtime="20210920 13:59:40.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:40.198" level="INFO">{
  "volumeName" : "43771-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-20T13:52:30.796Z",
  "modificationTime" : "2021-09-20T13:53:09.182Z"
}</msg>
<status status="PASS" starttime="20210920 13:59:40.197" endtime="20210920 13:59:40.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:40.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:40.198" endtime="20210920 13:59:40.199"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.230" endtime="20210920 13:59:40.204"/>
</kw>
<msg timestamp="20210920 13:59:40.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:31.230" endtime="20210920 13:59:40.204"/>
</kw>
<msg timestamp="20210920 13:59:40.205" level="INFO">${result} = {
  "volumeName" : "43771-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-20T13:52:30.796Z...</msg>
<status status="PASS" starttime="20210920 13:59:31.229" endtime="20210920 13:59:40.205"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:59:40.205" endtime="20210920 13:59:40.206"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:59:40.206" endtime="20210920 13:59:40.207"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:40.211" level="INFO">Running command 'ozone sh key list 43771-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:47.445" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 13:59:47.445" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 43771-source unreadable-bucket </msg>
<status status="PASS" starttime="20210920 13:59:40.208" endtime="20210920 13:59:47.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:47.447" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 43771-source unreadable-bucket </msg>
<status status="PASS" starttime="20210920 13:59:47.446" endtime="20210920 13:59:47.447"/>
</kw>
<msg timestamp="20210920 13:59:47.447" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 43771-source unreadable-bucket </msg>
<status status="PASS" starttime="20210920 13:59:40.207" endtime="20210920 13:59:47.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 13:59:47.448" endtime="20210920 13:59:47.448"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.174" endtime="20210920 13:59:47.448"/>
</kw>
<status status="PASS" starttime="20210920 13:59:31.173" endtime="20210920 13:59:47.448"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 13:59:31.120" endtime="20210920 13:59:47.449"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:47.456" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:47.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:47.459" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:59:47.454" endtime="20210920 13:59:47.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:47.461" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:59:47.460" endtime="20210920 13:59:47.461"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:47.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:47.461" endtime="20210920 13:59:47.462"/>
</kw>
<status status="PASS" starttime="20210920 13:59:47.454" endtime="20210920 13:59:47.462"/>
</kw>
<msg timestamp="20210920 13:59:47.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:47.453" endtime="20210920 13:59:47.462"/>
</kw>
<msg timestamp="20210920 13:59:47.463" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:59:47.452" endtime="20210920 13:59:47.463"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:59:47.463" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:59:47.463" endtime="20210920 13:59:47.464"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:47.468" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:47.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:47.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:47.466" endtime="20210920 13:59:47.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:47.477" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:47.477" endtime="20210920 13:59:47.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:47.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:47.478" endtime="20210920 13:59:47.479"/>
</kw>
<status status="PASS" starttime="20210920 13:59:47.465" endtime="20210920 13:59:47.479"/>
</kw>
<msg timestamp="20210920 13:59:47.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:47.465" endtime="20210920 13:59:47.479"/>
</kw>
<status status="PASS" starttime="20210920 13:59:47.464" endtime="20210920 13:59:47.479"/>
</kw>
<status status="PASS" starttime="20210920 13:59:47.464" endtime="20210920 13:59:47.479"/>
</kw>
<status status="PASS" starttime="20210920 13:59:47.451" endtime="20210920 13:59:47.480"/>
</kw>
<status status="PASS" starttime="20210920 13:59:47.451" endtime="20210920 13:59:47.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:47.484" level="INFO">Running command 'ozone sh bucket link 43771-target/loop1 43771-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:59:53.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:59:53.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:47.482" endtime="20210920 13:59:53.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:59:53.923" level="INFO"/>
<status status="PASS" starttime="20210920 13:59:53.922" endtime="20210920 13:59:53.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:59:53.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:59:53.924" endtime="20210920 13:59:53.924"/>
</kw>
<status status="PASS" starttime="20210920 13:59:47.481" endtime="20210920 13:59:53.925"/>
</kw>
<msg timestamp="20210920 13:59:53.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:47.481" endtime="20210920 13:59:53.925"/>
</kw>
<status status="PASS" starttime="20210920 13:59:47.480" endtime="20210920 13:59:53.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:59:53.929" level="INFO">Running command 'ozone sh bucket link 43771-target/loop2 43771-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:00:02.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:00:02.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:59:53.927" endtime="20210920 14:00:02.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:00:02.295" level="INFO"/>
<status status="PASS" starttime="20210920 14:00:02.294" endtime="20210920 14:00:02.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:00:02.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:00:02.296" endtime="20210920 14:00:02.296"/>
</kw>
<status status="PASS" starttime="20210920 13:59:53.927" endtime="20210920 14:00:02.297"/>
</kw>
<msg timestamp="20210920 14:00:02.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:59:53.926" endtime="20210920 14:00:02.297"/>
</kw>
<status status="PASS" starttime="20210920 13:59:53.925" endtime="20210920 14:00:02.297"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:00:02.304" level="INFO">Running command 'ozone sh bucket link 43771-target/loop3 43771-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:00:09.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:00:09.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:00:02.300" endtime="20210920 14:00:09.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:00:09.901" level="INFO"/>
<status status="PASS" starttime="20210920 14:00:09.899" endtime="20210920 14:00:09.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:00:09.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:00:09.901" endtime="20210920 14:00:09.905"/>
</kw>
<status status="PASS" starttime="20210920 14:00:02.299" endtime="20210920 14:00:09.906"/>
</kw>
<msg timestamp="20210920 14:00:09.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:00:02.299" endtime="20210920 14:00:09.906"/>
</kw>
<status status="PASS" starttime="20210920 14:00:02.298" endtime="20210920 14:00:09.906"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:00:09.910" level="INFO">Running command 'ozone sh key list 43771-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:00:16.072" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 14:00:16.072" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210920 14:00:09.907" endtime="20210920 14:00:16.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:00:16.074" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210920 14:00:16.073" endtime="20210920 14:00:16.074"/>
</kw>
<msg timestamp="20210920 14:00:16.075" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210920 14:00:09.906" endtime="20210920 14:00:16.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:00:16.075" endtime="20210920 14:00:16.076"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 13:59:47.450" endtime="20210920 14:00:16.077"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:00:16.087" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:00:16.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:00:16.094" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 14:00:16.084" endtime="20210920 14:00:16.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:00:16.095" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 14:00:16.094" endtime="20210920 14:00:16.096"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:00:16.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:00:16.096" endtime="20210920 14:00:16.097"/>
</kw>
<status status="PASS" starttime="20210920 14:00:16.083" endtime="20210920 14:00:16.098"/>
</kw>
<msg timestamp="20210920 14:00:16.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:00:16.082" endtime="20210920 14:00:16.098"/>
</kw>
<msg timestamp="20210920 14:00:16.099" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 14:00:16.081" endtime="20210920 14:00:16.099"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:00:16.100" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 14:00:16.099" endtime="20210920 14:00:16.100"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:00:16.108" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:00:16.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:00:16.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:00:16.104" endtime="20210920 14:00:16.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:00:16.123" level="INFO"/>
<status status="PASS" starttime="20210920 14:00:16.122" endtime="20210920 14:00:16.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:00:16.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:00:16.124" endtime="20210920 14:00:16.125"/>
</kw>
<status status="PASS" starttime="20210920 14:00:16.103" endtime="20210920 14:00:16.125"/>
</kw>
<msg timestamp="20210920 14:00:16.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:00:16.103" endtime="20210920 14:00:16.125"/>
</kw>
<status status="PASS" starttime="20210920 14:00:16.101" endtime="20210920 14:00:16.126"/>
</kw>
<status status="PASS" starttime="20210920 14:00:16.101" endtime="20210920 14:00:16.126"/>
</kw>
<status status="PASS" starttime="20210920 14:00:16.081" endtime="20210920 14:00:16.126"/>
</kw>
<status status="PASS" starttime="20210920 14:00:16.080" endtime="20210920 14:00:16.127"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:00:16.134" level="INFO">Running command 'ozone sh bucket link 43771-source/bucket1 43771-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:00:23.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:00:23.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:00:16.130" endtime="20210920 14:00:23.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:00:23.980" level="INFO"/>
<status status="PASS" starttime="20210920 14:00:23.979" endtime="20210920 14:00:23.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:00:23.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:00:23.981" endtime="20210920 14:00:23.981"/>
</kw>
<status status="PASS" starttime="20210920 14:00:16.129" endtime="20210920 14:00:23.982"/>
</kw>
<msg timestamp="20210920 14:00:23.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:00:16.128" endtime="20210920 14:00:23.982"/>
</kw>
<status status="PASS" starttime="20210920 14:00:16.127" endtime="20210920 14:00:23.982"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:00:23.987" level="INFO">Running command 'ozone sh key put 43771-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:02:16.079" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210920 14:00:23.985" endtime="20210920 14:02:16.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210920 14:02:16.080" endtime="20210920 14:02:16.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210920 14:02:16.080" endtime="20210920 14:02:16.080"/>
</kw>
<status status="FAIL" starttime="20210920 14:00:23.984" endtime="20210920 14:02:16.080"/>
</kw>
<msg timestamp="20210920 14:02:16.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210920 14:00:23.984" endtime="20210920 14:02:16.081"/>
</kw>
<status status="FAIL" starttime="20210920 14:00:23.983" endtime="20210920 14:02:16.081"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210920 14:02:16.081" endtime="20210920 14:02:16.081"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210920 14:00:16.078" endtime="20210920 14:02:16.082">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:02:16.092" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:02:16.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:02:16.099" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 14:02:16.088" endtime="20210920 14:02:16.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:02:16.102" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 14:02:16.100" endtime="20210920 14:02:16.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:02:16.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:02:16.102" endtime="20210920 14:02:16.104"/>
</kw>
<status status="PASS" starttime="20210920 14:02:16.087" endtime="20210920 14:02:16.106"/>
</kw>
<msg timestamp="20210920 14:02:16.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:02:16.087" endtime="20210920 14:02:16.106"/>
</kw>
<msg timestamp="20210920 14:02:16.106" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 14:02:16.086" endtime="20210920 14:02:16.106"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:02:16.107" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 14:02:16.107" endtime="20210920 14:02:16.107"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:02:16.116" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:02:16.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:02:16.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:02:16.111" endtime="20210920 14:02:16.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:02:16.126" level="INFO"/>
<status status="PASS" starttime="20210920 14:02:16.125" endtime="20210920 14:02:16.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:02:16.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:02:16.127" endtime="20210920 14:02:16.128"/>
</kw>
<status status="PASS" starttime="20210920 14:02:16.110" endtime="20210920 14:02:16.129"/>
</kw>
<msg timestamp="20210920 14:02:16.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:02:16.109" endtime="20210920 14:02:16.129"/>
</kw>
<status status="PASS" starttime="20210920 14:02:16.108" endtime="20210920 14:02:16.129"/>
</kw>
<status status="PASS" starttime="20210920 14:02:16.108" endtime="20210920 14:02:16.130"/>
</kw>
<status status="PASS" starttime="20210920 14:02:16.086" endtime="20210920 14:02:16.130"/>
</kw>
<status status="PASS" starttime="20210920 14:02:16.085" endtime="20210920 14:02:16.130"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:02:16.136" level="INFO">Running command 'ozone sh bucket delete 43771-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:02:24.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:02:24.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:02:16.133" endtime="20210920 14:02:24.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:02:24.061" level="INFO"/>
<status status="PASS" starttime="20210920 14:02:24.060" endtime="20210920 14:02:24.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:02:24.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:02:24.061" endtime="20210920 14:02:24.062"/>
</kw>
<status status="PASS" starttime="20210920 14:02:16.132" endtime="20210920 14:02:24.062"/>
</kw>
<msg timestamp="20210920 14:02:24.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:02:16.131" endtime="20210920 14:02:24.063"/>
</kw>
<status status="PASS" starttime="20210920 14:02:16.130" endtime="20210920 14:02:24.063"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:02:24.070" level="INFO">Running command 'ozone sh bucket list 43771-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:02:32.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:02:32.446" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T...</msg>
<status status="PASS" starttime="20210920 14:02:24.066" endtime="20210920 14:02:32.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:02:32.447" level="INFO">{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:59:11.704Z",
  "modificationTime" : "2021-09-20T13:59:11.704Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:53:17.184Z",
  "modificationTime" : "2021-09-20T13:53:17.184Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:52:30.796Z",
  "modificationTime" : "2021-09-20T13:53:09.182Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:58:55.685Z",
  "modificationTime" : "2021-09-20T13:58:55.685Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T14:00:23.688Z",
  "modificationTime" : "2021-09-20T14:00:23.688Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T14:00:09.819Z",
  "modificationTime" : "2021-09-20T14:00:09.819Z",
  "sourceVolume" : "43771-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:59:53.843Z",
  "modificationTime" : "2021-09-20T13:59:53.843Z",
  "sourceVolume" : "43771-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T14:00:01.974Z",
  "modificationTime" : "2021-09-20T14:00:01.974Z",
  "sourceVolume" : "43771-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:52:13.621Z",
  "modificationTime" : "2021-09-20T13:53:00.688Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T13:52:22.008Z",
  "modificationTime" : "2021-09-20T13:52:22.008Z",
  "sourceVolume" : "43771-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210920 14:02:32.447" endtime="20210920 14:02:32.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:02:32.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:02:32.448" endtime="20210920 14:02:32.448"/>
</kw>
<status status="PASS" starttime="20210920 14:02:24.065" endtime="20210920 14:02:32.449"/>
</kw>
<msg timestamp="20210920 14:02:32.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:02:24.065" endtime="20210920 14:02:32.449"/>
</kw>
<msg timestamp="20210920 14:02:32.449" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "43771-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-20T...</msg>
<status status="PASS" starttime="20210920 14:02:24.063" endtime="20210920 14:02:32.449"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:02:32.450" endtime="20210920 14:02:32.450"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:02:32.458" level="INFO">Running command 'ozone sh key list 43771-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:02:41.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:02:41.717" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210920 14:02:32.454" endtime="20210920 14:02:41.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:02:41.721" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210920 14:02:41.718" endtime="20210920 14:02:41.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:02:41.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:02:41.721" endtime="20210920 14:02:41.721"/>
</kw>
<status status="PASS" starttime="20210920 14:02:32.453" endtime="20210920 14:02:41.722"/>
</kw>
<msg timestamp="20210920 14:02:41.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:02:32.451" endtime="20210920 14:02:41.722"/>
</kw>
<msg timestamp="20210920 14:02:41.722" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210920 14:02:32.450" endtime="20210920 14:02:41.722"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:02:41.723" endtime="20210920 14:02:41.723"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 14:02:16.083" endtime="20210920 14:02:41.723"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210920 13:48:21.929" endtime="20210920 14:02:41.730"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210920 14:02:41.773" level="INFO">${random} = 29894</msg>
<status status="PASS" starttime="20210920 14:02:41.772" endtime="20210920 14:02:41.773"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:02:41.773" level="INFO">${prefix} = 29894</msg>
<status status="PASS" starttime="20210920 14:02:41.773" endtime="20210920 14:02:41.774"/>
</kw>
<status status="PASS" starttime="20210920 14:02:41.772" endtime="20210920 14:02:41.774"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:02:41.782" level="INFO">Running command 'ozone sh volume info /29894-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:02:50.961" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 14:02:50.961" level="INFO">${output} = VOLUME_NOT_FOUND Volume 29894-rpcbasic is not found</msg>
<status status="PASS" starttime="20210920 14:02:41.778" endtime="20210920 14:02:50.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:02:50.962" level="INFO">VOLUME_NOT_FOUND Volume 29894-rpcbasic is not found</msg>
<status status="PASS" starttime="20210920 14:02:50.962" endtime="20210920 14:02:50.962"/>
</kw>
<msg timestamp="20210920 14:02:50.963" level="INFO">${result} = VOLUME_NOT_FOUND Volume 29894-rpcbasic is not found</msg>
<status status="PASS" starttime="20210920 14:02:41.777" endtime="20210920 14:02:50.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:02:50.963" endtime="20210920 14:02:50.964"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:02:50.976" level="INFO">Running command 'ozone sh volume create /29894-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:02:57.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:02:57.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:02:50.972" endtime="20210920 14:02:57.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:02:57.035" level="INFO"/>
<status status="PASS" starttime="20210920 14:02:57.035" endtime="20210920 14:02:57.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:02:57.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:02:57.036" endtime="20210920 14:02:57.037"/>
</kw>
<status status="PASS" starttime="20210920 14:02:50.970" endtime="20210920 14:02:57.038"/>
</kw>
<msg timestamp="20210920 14:02:57.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:02:50.968" endtime="20210920 14:02:57.038"/>
</kw>
<msg timestamp="20210920 14:02:57.038" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210920 14:02:50.965" endtime="20210920 14:02:57.038"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:02:57.039" endtime="20210920 14:02:57.039"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:02:57.047" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="29894-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:03:05.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:03:05.659" level="INFO">${output} = {
  "metadata": {},
  "name": "29894-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210920 14:02:57.042" endtime="20210920 14:03:05.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:03:05.660" level="INFO">{
  "metadata": {},
  "name": "29894-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-20T14:02:56.799Z",
  "modificationTime": "2021-09-20T14:02:56.799Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210920 14:03:05.659" endtime="20210920 14:03:05.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:03:05.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:03:05.660" endtime="20210920 14:03:05.662"/>
</kw>
<status status="PASS" starttime="20210920 14:02:57.042" endtime="20210920 14:03:05.663"/>
</kw>
<msg timestamp="20210920 14:03:05.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:02:57.041" endtime="20210920 14:03:05.663"/>
</kw>
<msg timestamp="20210920 14:03:05.663" level="INFO">${result} = {
  "metadata": {},
  "name": "29894-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210920 14:02:57.040" endtime="20210920 14:03:05.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:03:05.665" endtime="20210920 14:03:05.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:03:05.677" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="29894-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:03:14.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:03:14.625" level="INFO">${output} = {
  "metadata": {},
  "name": "29894-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210920 14:03:05.671" endtime="20210920 14:03:14.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:03:14.628" level="INFO">{
  "metadata": {},
  "name": "29894-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-20T14:02:56.799Z",
  "modificationTime": "2021-09-20T14:02:56.799Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210920 14:03:14.627" endtime="20210920 14:03:14.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:03:14.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:03:14.629" endtime="20210920 14:03:14.630"/>
</kw>
<status status="PASS" starttime="20210920 14:03:05.669" endtime="20210920 14:03:14.630"/>
</kw>
<msg timestamp="20210920 14:03:14.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:03:05.667" endtime="20210920 14:03:14.631"/>
</kw>
<msg timestamp="20210920 14:03:14.632" level="INFO">${result} = {
  "metadata": {},
  "name": "29894-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210920 14:03:05.666" endtime="20210920 14:03:14.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:03:14.632" endtime="20210920 14:03:14.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:03:14.641" level="INFO">Running command 'ozone sh volume setquota /29894-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:03:20.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:03:20.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:03:14.637" endtime="20210920 14:03:20.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:03:20.936" level="INFO"/>
<status status="PASS" starttime="20210920 14:03:20.934" endtime="20210920 14:03:20.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:03:20.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:03:20.936" endtime="20210920 14:03:20.936"/>
</kw>
<status status="PASS" starttime="20210920 14:03:14.635" endtime="20210920 14:03:20.937"/>
</kw>
<msg timestamp="20210920 14:03:20.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:03:14.635" endtime="20210920 14:03:20.937"/>
</kw>
<status status="PASS" starttime="20210920 14:03:14.633" endtime="20210920 14:03:20.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:03:20.944" level="INFO">Running command 'ozone sh volume info /29894-rpcbasic | jq -r '. | select(.name=="29894-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:03:27.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:03:27.867" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:03:20.940" endtime="20210920 14:03:27.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:03:27.869" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210920 14:03:27.868" endtime="20210920 14:03:27.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:03:27.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:03:27.869" endtime="20210920 14:03:27.870"/>
</kw>
<status status="PASS" starttime="20210920 14:03:20.939" endtime="20210920 14:03:27.870"/>
</kw>
<msg timestamp="20210920 14:03:27.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:03:20.939" endtime="20210920 14:03:27.870"/>
</kw>
<msg timestamp="20210920 14:03:27.870" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:03:20.938" endtime="20210920 14:03:27.870"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:03:27.871" endtime="20210920 14:03:27.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:03:27.878" level="INFO">Running command 'ozone sh bucket create /29894-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:03:36.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:03:36.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:03:27.875" endtime="20210920 14:03:36.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:03:36.792" level="INFO"/>
<status status="PASS" starttime="20210920 14:03:36.791" endtime="20210920 14:03:36.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:03:36.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:03:36.794" endtime="20210920 14:03:36.795"/>
</kw>
<status status="PASS" starttime="20210920 14:03:27.874" endtime="20210920 14:03:36.796"/>
</kw>
<msg timestamp="20210920 14:03:36.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:03:27.874" endtime="20210920 14:03:36.797"/>
</kw>
<status status="PASS" starttime="20210920 14:03:27.871" endtime="20210920 14:03:36.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:03:36.805" level="INFO">Running command 'ozone sh bucket info /29894-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:03:45.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:03:45.541" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210920 14:03:36.802" endtime="20210920 14:03:45.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:03:45.542" level="INFO">DISK</msg>
<status status="PASS" starttime="20210920 14:03:45.542" endtime="20210920 14:03:45.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:03:45.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:03:45.543" endtime="20210920 14:03:45.544"/>
</kw>
<status status="PASS" starttime="20210920 14:03:36.800" endtime="20210920 14:03:45.544"/>
</kw>
<msg timestamp="20210920 14:03:45.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:03:36.800" endtime="20210920 14:03:45.544"/>
</kw>
<msg timestamp="20210920 14:03:45.545" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210920 14:03:36.797" endtime="20210920 14:03:45.545"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:03:45.545" endtime="20210920 14:03:45.546"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:03:45.552" level="INFO">Running command 'ozone sh bucket info /29894-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:03:54.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:03:54.870" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:03:45.549" endtime="20210920 14:03:54.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:03:54.872" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210920 14:03:54.871" endtime="20210920 14:03:54.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:03:54.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:03:54.872" endtime="20210920 14:03:54.873"/>
</kw>
<status status="PASS" starttime="20210920 14:03:45.548" endtime="20210920 14:03:54.873"/>
</kw>
<msg timestamp="20210920 14:03:54.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:03:45.547" endtime="20210920 14:03:54.874"/>
</kw>
<msg timestamp="20210920 14:03:54.874" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:03:45.546" endtime="20210920 14:03:54.874"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:03:54.874" endtime="20210920 14:03:54.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:03:54.880" level="INFO">Running command 'ozone sh bucket info /29894-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:04:01.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:04:01.562" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210920 14:03:54.877" endtime="20210920 14:04:01.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:04:01.564" level="INFO">100</msg>
<status status="PASS" starttime="20210920 14:04:01.563" endtime="20210920 14:04:01.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:04:01.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:04:01.564" endtime="20210920 14:04:01.565"/>
</kw>
<status status="PASS" starttime="20210920 14:03:54.876" endtime="20210920 14:04:01.566"/>
</kw>
<msg timestamp="20210920 14:04:01.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:03:54.876" endtime="20210920 14:04:01.567"/>
</kw>
<msg timestamp="20210920 14:04:01.567" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210920 14:03:54.875" endtime="20210920 14:04:01.567"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:04:01.568" endtime="20210920 14:04:01.568"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:04:01.574" level="INFO">Running command 'ozone sh bucket setquota /29894-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:04:07.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:04:07.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:04:01.571" endtime="20210920 14:04:07.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:04:07.766" level="INFO"/>
<status status="PASS" starttime="20210920 14:04:07.765" endtime="20210920 14:04:07.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:04:07.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:04:07.767" endtime="20210920 14:04:07.768"/>
</kw>
<status status="PASS" starttime="20210920 14:04:01.570" endtime="20210920 14:04:07.768"/>
</kw>
<msg timestamp="20210920 14:04:07.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:04:01.570" endtime="20210920 14:04:07.769"/>
</kw>
<status status="PASS" starttime="20210920 14:04:01.569" endtime="20210920 14:04:07.769"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:04:07.775" level="INFO">Running command 'ozone sh bucket info /29894-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:04:16.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:04:16.789" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210920 14:04:07.772" endtime="20210920 14:04:16.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:04:16.791" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210920 14:04:16.790" endtime="20210920 14:04:16.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:04:16.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:04:16.792" endtime="20210920 14:04:16.793"/>
</kw>
<status status="PASS" starttime="20210920 14:04:07.771" endtime="20210920 14:04:16.794"/>
</kw>
<msg timestamp="20210920 14:04:16.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:04:07.771" endtime="20210920 14:04:16.794"/>
</kw>
<msg timestamp="20210920 14:04:16.795" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210920 14:04:07.769" endtime="20210920 14:04:16.795"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:04:16.795" endtime="20210920 14:04:16.797"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:04:16.805" level="INFO">Running command 'ozone sh bucket info /29894-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:04:25.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:04:25.080" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210920 14:04:16.802" endtime="20210920 14:04:25.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:04:25.082" level="INFO">1000</msg>
<status status="PASS" starttime="20210920 14:04:25.081" endtime="20210920 14:04:25.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:04:25.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:04:25.083" endtime="20210920 14:04:25.084"/>
</kw>
<status status="PASS" starttime="20210920 14:04:16.801" endtime="20210920 14:04:25.085"/>
</kw>
<msg timestamp="20210920 14:04:25.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:04:16.800" endtime="20210920 14:04:25.085"/>
</kw>
<msg timestamp="20210920 14:04:25.086" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210920 14:04:16.798" endtime="20210920 14:04:25.086"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:04:25.087" endtime="20210920 14:04:25.088"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:04:25.097" level="INFO">Running command 'ozone sh bucket list /29894-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:04:31.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:04:31.392" level="INFO">${output} = 29894-rpcbasic</msg>
<status status="PASS" starttime="20210920 14:04:25.093" endtime="20210920 14:04:31.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:04:31.393" level="INFO">29894-rpcbasic</msg>
<status status="PASS" starttime="20210920 14:04:31.392" endtime="20210920 14:04:31.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:04:31.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:04:31.393" endtime="20210920 14:04:31.394"/>
</kw>
<status status="PASS" starttime="20210920 14:04:25.092" endtime="20210920 14:04:31.395"/>
</kw>
<msg timestamp="20210920 14:04:31.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:04:25.091" endtime="20210920 14:04:31.395"/>
</kw>
<msg timestamp="20210920 14:04:31.395" level="INFO">${result} = 29894-rpcbasic</msg>
<status status="PASS" starttime="20210920 14:04:25.089" endtime="20210920 14:04:31.395"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:04:31.396" endtime="20210920 14:04:31.396"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:04:31.403" level="INFO">Running command 'ozone sh key put /29894-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:07:41.775" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210920 14:04:31.400" endtime="20210920 14:07:41.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.775" endtime="20210920 14:07:41.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.776" endtime="20210920 14:07:41.776"/>
</kw>
<status status="FAIL" starttime="20210920 14:04:31.399" endtime="20210920 14:07:41.776"/>
</kw>
<msg timestamp="20210920 14:07:41.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210920 14:04:31.399" endtime="20210920 14:07:41.776"/>
</kw>
<status status="FAIL" starttime="20210920 14:04:31.398" endtime="20210920 14:07:41.777"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.777" endtime="20210920 14:07:41.777"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.777" endtime="20210920 14:07:41.777"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.777" endtime="20210920 14:07:41.777"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.778" endtime="20210920 14:07:41.778"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.778" endtime="20210920 14:07:41.778"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.778" endtime="20210920 14:07:41.778"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.778" endtime="20210920 14:07:41.778"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.779" endtime="20210920 14:07:41.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.779" endtime="20210920 14:07:41.779"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.779" endtime="20210920 14:07:41.779"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.779" endtime="20210920 14:07:41.779"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.779" endtime="20210920 14:07:41.780"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.780" endtime="20210920 14:07:41.780"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.780" endtime="20210920 14:07:41.780"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.780" endtime="20210920 14:07:41.780"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.780" endtime="20210920 14:07:41.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.781" endtime="20210920 14:07:41.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.783" endtime="20210920 14:07:41.783"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.783" endtime="20210920 14:07:41.783"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.783" endtime="20210920 14:07:41.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.783" endtime="20210920 14:07:41.784"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.784" endtime="20210920 14:07:41.784"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.784" endtime="20210920 14:07:41.784"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.784" endtime="20210920 14:07:41.784"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.785" endtime="20210920 14:07:41.785"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.785" endtime="20210920 14:07:41.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.785" endtime="20210920 14:07:41.785"/>
</kw>
<status status="FAIL" starttime="20210920 14:04:31.397" endtime="20210920 14:07:41.786"/>
</kw>
<status status="FAIL" starttime="20210920 14:04:31.396" endtime="20210920 14:07:41.786"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.787" endtime="20210920 14:07:41.787"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.788" endtime="20210920 14:07:41.788"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.788" endtime="20210920 14:07:41.788"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.789" endtime="20210920 14:07:41.789"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.789" endtime="20210920 14:07:41.789"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.789" endtime="20210920 14:07:41.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.790" endtime="20210920 14:07:41.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.790" endtime="20210920 14:07:41.790"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.790" endtime="20210920 14:07:41.790"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.791" endtime="20210920 14:07:41.791"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.791" endtime="20210920 14:07:41.791"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.792" endtime="20210920 14:07:41.792"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.792" endtime="20210920 14:07:41.792"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.792" endtime="20210920 14:07:41.792"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.793" endtime="20210920 14:07:41.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.793" endtime="20210920 14:07:41.793"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.793" endtime="20210920 14:07:41.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.794" endtime="20210920 14:07:41.794"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.794" endtime="20210920 14:07:41.794"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.794" endtime="20210920 14:07:41.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.795" endtime="20210920 14:07:41.795"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.795" endtime="20210920 14:07:41.795"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.795" endtime="20210920 14:07:41.795"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:07:41.798" endtime="20210920 14:07:41.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.798" endtime="20210920 14:07:41.798"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:07:41.799" endtime="20210920 14:07:41.799"/>
</kw>
<status status="FAIL" starttime="20210920 14:02:41.775" endtime="20210920 14:07:41.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210920 14:02:41.774" endtime="20210920 14:07:41.799">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210920 14:02:41.740" endtime="20210920 14:07:41.801"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210920 14:07:41.822" level="INFO">${random} = 39609</msg>
<status status="PASS" starttime="20210920 14:07:41.821" endtime="20210920 14:07:41.822"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:07:41.823" level="INFO">${prefix} = 39609</msg>
<status status="PASS" starttime="20210920 14:07:41.822" endtime="20210920 14:07:41.823"/>
</kw>
<status status="PASS" starttime="20210920 14:07:41.821" endtime="20210920 14:07:41.824"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:07:41.831" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:07:41.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:07:41.837" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 14:07:41.828" endtime="20210920 14:07:41.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:07:41.839" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 14:07:41.838" endtime="20210920 14:07:41.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:07:41.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:07:41.839" endtime="20210920 14:07:41.840"/>
</kw>
<status status="PASS" starttime="20210920 14:07:41.827" endtime="20210920 14:07:41.841"/>
</kw>
<msg timestamp="20210920 14:07:41.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:07:41.826" endtime="20210920 14:07:41.841"/>
</kw>
<msg timestamp="20210920 14:07:41.841" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 14:07:41.826" endtime="20210920 14:07:41.841"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:07:41.844" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 14:07:41.841" endtime="20210920 14:07:41.844"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:07:41.849" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:07:41.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:07:41.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:07:41.846" endtime="20210920 14:07:41.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:07:41.885" level="INFO"/>
<status status="PASS" starttime="20210920 14:07:41.884" endtime="20210920 14:07:41.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:07:41.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:07:41.885" endtime="20210920 14:07:41.886"/>
</kw>
<status status="PASS" starttime="20210920 14:07:41.845" endtime="20210920 14:07:41.886"/>
</kw>
<msg timestamp="20210920 14:07:41.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:07:41.845" endtime="20210920 14:07:41.886"/>
</kw>
<status status="PASS" starttime="20210920 14:07:41.844" endtime="20210920 14:07:41.886"/>
</kw>
<status status="PASS" starttime="20210920 14:07:41.844" endtime="20210920 14:07:41.887"/>
</kw>
<status status="PASS" starttime="20210920 14:07:41.825" endtime="20210920 14:07:41.887"/>
</kw>
<status status="PASS" starttime="20210920 14:07:41.825" endtime="20210920 14:07:41.887"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:07:41.890" level="INFO">Running command 'ozone sh volume info o3://om:9862/39609-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:07:49.698" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 14:07:49.698" level="INFO">${output} = VOLUME_NOT_FOUND Volume 39609-rpcwoport is not found</msg>
<status status="PASS" starttime="20210920 14:07:41.888" endtime="20210920 14:07:49.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:07:49.699" level="INFO">VOLUME_NOT_FOUND Volume 39609-rpcwoport is not found</msg>
<status status="PASS" starttime="20210920 14:07:49.698" endtime="20210920 14:07:49.699"/>
</kw>
<msg timestamp="20210920 14:07:49.700" level="INFO">${result} = VOLUME_NOT_FOUND Volume 39609-rpcwoport is not found</msg>
<status status="PASS" starttime="20210920 14:07:41.888" endtime="20210920 14:07:49.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:07:49.700" endtime="20210920 14:07:49.700"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:07:49.707" level="INFO">Running command 'ozone sh volume create o3://om:9862/39609-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:07:57.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:07:57.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:07:49.704" endtime="20210920 14:07:57.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:07:57.776" level="INFO"/>
<status status="PASS" starttime="20210920 14:07:57.775" endtime="20210920 14:07:57.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:07:57.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:07:57.776" endtime="20210920 14:07:57.777"/>
</kw>
<status status="PASS" starttime="20210920 14:07:49.702" endtime="20210920 14:07:57.778"/>
</kw>
<msg timestamp="20210920 14:07:57.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:07:49.702" endtime="20210920 14:07:57.778"/>
</kw>
<msg timestamp="20210920 14:07:57.778" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210920 14:07:49.701" endtime="20210920 14:07:57.778"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:07:57.779" endtime="20210920 14:07:57.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:07:57.786" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="39609-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:08:04.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:08:04.714" level="INFO">${output} = {
  "metadata": {},
  "name": "39609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210920 14:07:57.783" endtime="20210920 14:08:04.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:08:04.715" level="INFO">{
  "metadata": {},
  "name": "39609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-20T14:07:57.682Z",
  "modificationTime": "2021-09-20T14:07:57.682Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210920 14:08:04.714" endtime="20210920 14:08:04.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:08:04.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:08:04.716" endtime="20210920 14:08:04.716"/>
</kw>
<status status="PASS" starttime="20210920 14:07:57.782" endtime="20210920 14:08:04.717"/>
</kw>
<msg timestamp="20210920 14:08:04.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:07:57.782" endtime="20210920 14:08:04.717"/>
</kw>
<msg timestamp="20210920 14:08:04.718" level="INFO">${result} = {
  "metadata": {},
  "name": "39609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210920 14:07:57.780" endtime="20210920 14:08:04.718"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:08:04.718" endtime="20210920 14:08:04.718"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:08:04.725" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="39609-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:08:13.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:08:13.044" level="INFO">${output} = {
  "metadata": {},
  "name": "39609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210920 14:08:04.721" endtime="20210920 14:08:13.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:08:13.047" level="INFO">{
  "metadata": {},
  "name": "39609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-20T14:07:57.682Z",
  "modificationTime": "2021-09-20T14:07:57.682Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210920 14:08:13.045" endtime="20210920 14:08:13.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:08:13.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:08:13.049" endtime="20210920 14:08:13.050"/>
</kw>
<status status="PASS" starttime="20210920 14:08:04.721" endtime="20210920 14:08:13.050"/>
</kw>
<msg timestamp="20210920 14:08:13.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:08:04.720" endtime="20210920 14:08:13.051"/>
</kw>
<msg timestamp="20210920 14:08:13.051" level="INFO">${result} = {
  "metadata": {},
  "name": "39609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210920 14:08:04.719" endtime="20210920 14:08:13.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:08:13.051" endtime="20210920 14:08:13.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:08:13.059" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/39609-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:08:19.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:08:19.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:08:13.055" endtime="20210920 14:08:19.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:08:19.097" level="INFO"/>
<status status="PASS" starttime="20210920 14:08:19.096" endtime="20210920 14:08:19.097"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:08:19.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:08:19.097" endtime="20210920 14:08:19.098"/>
</kw>
<status status="PASS" starttime="20210920 14:08:13.054" endtime="20210920 14:08:19.098"/>
</kw>
<msg timestamp="20210920 14:08:19.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:08:13.054" endtime="20210920 14:08:19.098"/>
</kw>
<status status="PASS" starttime="20210920 14:08:13.052" endtime="20210920 14:08:19.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:08:19.107" level="INFO">Running command 'ozone sh volume info o3://om:9862/39609-rpcwoport | jq -r '. | select(.name=="39609-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:08:27.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:08:27.606" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:08:19.103" endtime="20210920 14:08:27.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:08:27.607" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210920 14:08:27.606" endtime="20210920 14:08:27.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:08:27.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:08:27.608" endtime="20210920 14:08:27.608"/>
</kw>
<status status="PASS" starttime="20210920 14:08:19.102" endtime="20210920 14:08:27.609"/>
</kw>
<msg timestamp="20210920 14:08:27.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:08:19.100" endtime="20210920 14:08:27.609"/>
</kw>
<msg timestamp="20210920 14:08:27.610" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:08:19.099" endtime="20210920 14:08:27.610"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:08:27.610" endtime="20210920 14:08:27.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:08:27.616" level="INFO">Running command 'ozone sh bucket create o3://om:9862/39609-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:08:35.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:08:35.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:08:27.613" endtime="20210920 14:08:35.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:08:35.183" level="INFO"/>
<status status="PASS" starttime="20210920 14:08:35.182" endtime="20210920 14:08:35.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:08:35.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:08:35.183" endtime="20210920 14:08:35.184"/>
</kw>
<status status="PASS" starttime="20210920 14:08:27.612" endtime="20210920 14:08:35.184"/>
</kw>
<msg timestamp="20210920 14:08:35.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:08:27.612" endtime="20210920 14:08:35.184"/>
</kw>
<status status="PASS" starttime="20210920 14:08:27.610" endtime="20210920 14:08:35.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:08:35.190" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39609-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:08:43.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:08:43.899" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210920 14:08:35.187" endtime="20210920 14:08:43.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:08:43.901" level="INFO">DISK</msg>
<status status="PASS" starttime="20210920 14:08:43.899" endtime="20210920 14:08:43.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:08:43.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:08:43.901" endtime="20210920 14:08:43.902"/>
</kw>
<status status="PASS" starttime="20210920 14:08:35.186" endtime="20210920 14:08:43.902"/>
</kw>
<msg timestamp="20210920 14:08:43.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:08:35.186" endtime="20210920 14:08:43.902"/>
</kw>
<msg timestamp="20210920 14:08:43.902" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210920 14:08:35.185" endtime="20210920 14:08:43.903"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:08:43.903" endtime="20210920 14:08:43.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:08:43.910" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39609-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:08:52.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:08:52.394" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:08:43.908" endtime="20210920 14:08:52.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:08:52.397" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210920 14:08:52.396" endtime="20210920 14:08:52.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:08:52.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:08:52.400" endtime="20210920 14:08:52.401"/>
</kw>
<status status="PASS" starttime="20210920 14:08:43.906" endtime="20210920 14:08:52.402"/>
</kw>
<msg timestamp="20210920 14:08:52.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:08:43.905" endtime="20210920 14:08:52.404"/>
</kw>
<msg timestamp="20210920 14:08:52.405" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:08:43.903" endtime="20210920 14:08:52.405"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:08:52.405" endtime="20210920 14:08:52.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:08:52.416" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39609-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:09:01.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:09:01.029" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210920 14:08:52.412" endtime="20210920 14:09:01.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:09:01.032" level="INFO">100</msg>
<status status="PASS" starttime="20210920 14:09:01.031" endtime="20210920 14:09:01.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:09:01.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:09:01.033" endtime="20210920 14:09:01.034"/>
</kw>
<status status="PASS" starttime="20210920 14:08:52.410" endtime="20210920 14:09:01.035"/>
</kw>
<msg timestamp="20210920 14:09:01.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:08:52.409" endtime="20210920 14:09:01.035"/>
</kw>
<msg timestamp="20210920 14:09:01.036" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210920 14:08:52.407" endtime="20210920 14:09:01.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:09:01.036" endtime="20210920 14:09:01.037"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:09:01.044" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/39609-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:09:08.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:09:08.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:09:01.040" endtime="20210920 14:09:08.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:09:08.973" level="INFO"/>
<status status="PASS" starttime="20210920 14:09:08.971" endtime="20210920 14:09:08.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:09:08.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:09:08.974" endtime="20210920 14:09:08.975"/>
</kw>
<status status="PASS" starttime="20210920 14:09:01.039" endtime="20210920 14:09:08.976"/>
</kw>
<msg timestamp="20210920 14:09:08.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:09:01.039" endtime="20210920 14:09:08.976"/>
</kw>
<status status="PASS" starttime="20210920 14:09:01.037" endtime="20210920 14:09:08.977"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:09:08.985" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39609-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:09:17.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:09:17.135" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210920 14:09:08.981" endtime="20210920 14:09:17.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:09:17.143" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210920 14:09:17.142" endtime="20210920 14:09:17.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:09:17.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:09:17.143" endtime="20210920 14:09:17.144"/>
</kw>
<status status="PASS" starttime="20210920 14:09:08.980" endtime="20210920 14:09:17.144"/>
</kw>
<msg timestamp="20210920 14:09:17.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:09:08.979" endtime="20210920 14:09:17.145"/>
</kw>
<msg timestamp="20210920 14:09:17.145" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210920 14:09:08.977" endtime="20210920 14:09:17.145"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:09:17.145" endtime="20210920 14:09:17.146"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:09:17.152" level="INFO">Running command 'ozone sh bucket info o3://om:9862/39609-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:09:25.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:09:25.533" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210920 14:09:17.149" endtime="20210920 14:09:25.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:09:25.536" level="INFO">1000</msg>
<status status="PASS" starttime="20210920 14:09:25.535" endtime="20210920 14:09:25.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:09:25.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:09:25.537" endtime="20210920 14:09:25.540"/>
</kw>
<status status="PASS" starttime="20210920 14:09:17.149" endtime="20210920 14:09:25.541"/>
</kw>
<msg timestamp="20210920 14:09:25.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:09:17.148" endtime="20210920 14:09:25.541"/>
</kw>
<msg timestamp="20210920 14:09:25.542" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210920 14:09:17.147" endtime="20210920 14:09:25.542"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:09:25.542" endtime="20210920 14:09:25.543"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:09:25.550" level="INFO">Running command 'ozone sh bucket list o3://om:9862/39609-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:09:33.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:09:33.394" level="INFO">${output} = 39609-rpcwoport</msg>
<status status="PASS" starttime="20210920 14:09:25.547" endtime="20210920 14:09:33.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:09:33.396" level="INFO">39609-rpcwoport</msg>
<status status="PASS" starttime="20210920 14:09:33.395" endtime="20210920 14:09:33.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:09:33.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:09:33.396" endtime="20210920 14:09:33.397"/>
</kw>
<status status="PASS" starttime="20210920 14:09:25.546" endtime="20210920 14:09:33.397"/>
</kw>
<msg timestamp="20210920 14:09:33.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:09:25.546" endtime="20210920 14:09:33.398"/>
</kw>
<msg timestamp="20210920 14:09:33.398" level="INFO">${result} = 39609-rpcwoport</msg>
<status status="PASS" starttime="20210920 14:09:25.543" endtime="20210920 14:09:33.398"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:09:33.398" endtime="20210920 14:09:33.399"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:09:33.405" level="INFO">Running command 'ozone sh key put o3://om:9862/39609-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:12:41.825" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210920 14:09:33.402" endtime="20210920 14:12:41.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.826" endtime="20210920 14:12:41.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.826" endtime="20210920 14:12:41.826"/>
</kw>
<status status="FAIL" starttime="20210920 14:09:33.401" endtime="20210920 14:12:41.827"/>
</kw>
<msg timestamp="20210920 14:12:41.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210920 14:09:33.401" endtime="20210920 14:12:41.827"/>
</kw>
<status status="FAIL" starttime="20210920 14:09:33.400" endtime="20210920 14:12:41.828"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.828" endtime="20210920 14:12:41.828"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.828" endtime="20210920 14:12:41.828"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.829" endtime="20210920 14:12:41.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.829" endtime="20210920 14:12:41.829"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.829" endtime="20210920 14:12:41.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.829" endtime="20210920 14:12:41.829"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.829" endtime="20210920 14:12:41.829"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.830" endtime="20210920 14:12:41.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.832" endtime="20210920 14:12:41.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.832" endtime="20210920 14:12:41.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.832" endtime="20210920 14:12:41.832"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.832" endtime="20210920 14:12:41.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.832" endtime="20210920 14:12:41.833"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.833" endtime="20210920 14:12:41.833"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.833" endtime="20210920 14:12:41.833"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.833" endtime="20210920 14:12:41.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.834" endtime="20210920 14:12:41.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.834" endtime="20210920 14:12:41.834"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.834" endtime="20210920 14:12:41.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.834" endtime="20210920 14:12:41.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.834" endtime="20210920 14:12:41.834"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.835" endtime="20210920 14:12:41.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.835" endtime="20210920 14:12:41.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.835" endtime="20210920 14:12:41.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.835" endtime="20210920 14:12:41.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.836" endtime="20210920 14:12:41.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.836" endtime="20210920 14:12:41.837"/>
</kw>
<status status="FAIL" starttime="20210920 14:09:33.399" endtime="20210920 14:12:41.837"/>
</kw>
<status status="FAIL" starttime="20210920 14:09:33.399" endtime="20210920 14:12:41.837"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.837" endtime="20210920 14:12:41.837"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.837" endtime="20210920 14:12:41.837"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.837" endtime="20210920 14:12:41.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.838" endtime="20210920 14:12:41.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.838" endtime="20210920 14:12:41.838"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.838" endtime="20210920 14:12:41.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.838" endtime="20210920 14:12:41.838"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.839" endtime="20210920 14:12:41.839"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.839" endtime="20210920 14:12:41.839"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.839" endtime="20210920 14:12:41.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.839" endtime="20210920 14:12:41.839"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.839" endtime="20210920 14:12:41.839"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.840" endtime="20210920 14:12:41.840"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.840" endtime="20210920 14:12:41.840"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.841" endtime="20210920 14:12:41.841"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.841" endtime="20210920 14:12:41.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.843" endtime="20210920 14:12:41.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.843" endtime="20210920 14:12:41.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.844" endtime="20210920 14:12:41.844"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.844" endtime="20210920 14:12:41.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.844" endtime="20210920 14:12:41.845"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.845" endtime="20210920 14:12:41.845"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.845" endtime="20210920 14:12:41.845"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:12:41.846" endtime="20210920 14:12:41.846"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.846" endtime="20210920 14:12:41.846"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:12:41.846" endtime="20210920 14:12:41.846"/>
</kw>
<status status="FAIL" starttime="20210920 14:07:41.887" endtime="20210920 14:12:41.846"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210920 14:07:41.824" endtime="20210920 14:12:41.847">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:12:41.860" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:12:41.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:12:41.868" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 14:12:41.855" endtime="20210920 14:12:41.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:12:41.869" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 14:12:41.868" endtime="20210920 14:12:41.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:12:41.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:12:41.870" endtime="20210920 14:12:41.870"/>
</kw>
<status status="PASS" starttime="20210920 14:12:41.854" endtime="20210920 14:12:41.871"/>
</kw>
<msg timestamp="20210920 14:12:41.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:12:41.854" endtime="20210920 14:12:41.871"/>
</kw>
<msg timestamp="20210920 14:12:41.871" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 14:12:41.853" endtime="20210920 14:12:41.872"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:12:41.873" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 14:12:41.872" endtime="20210920 14:12:41.873"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:12:41.892" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:12:41.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:12:41.955" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:12:41.876" endtime="20210920 14:12:41.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:12:41.957" level="INFO"/>
<status status="PASS" starttime="20210920 14:12:41.956" endtime="20210920 14:12:41.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:12:41.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:12:41.957" endtime="20210920 14:12:41.958"/>
</kw>
<status status="PASS" starttime="20210920 14:12:41.875" endtime="20210920 14:12:41.958"/>
</kw>
<msg timestamp="20210920 14:12:41.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:12:41.874" endtime="20210920 14:12:41.958"/>
</kw>
<status status="PASS" starttime="20210920 14:12:41.873" endtime="20210920 14:12:41.959"/>
</kw>
<status status="PASS" starttime="20210920 14:12:41.873" endtime="20210920 14:12:41.959"/>
</kw>
<status status="PASS" starttime="20210920 14:12:41.853" endtime="20210920 14:12:41.959"/>
</kw>
<status status="PASS" starttime="20210920 14:12:41.851" endtime="20210920 14:12:41.959"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:12:41.964" level="INFO">Running command 'ozone sh volume create o3://om:9862/39609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:12:51.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:12:51.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:12:41.962" endtime="20210920 14:12:51.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:12:51.346" level="INFO"/>
<status status="PASS" starttime="20210920 14:12:51.344" endtime="20210920 14:12:51.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:12:51.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:12:51.347" endtime="20210920 14:12:51.348"/>
</kw>
<status status="PASS" starttime="20210920 14:12:41.961" endtime="20210920 14:12:51.349"/>
</kw>
<msg timestamp="20210920 14:12:51.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:12:41.961" endtime="20210920 14:12:51.349"/>
</kw>
<status status="PASS" starttime="20210920 14:12:41.960" endtime="20210920 14:12:51.350"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:12:51.356" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:12:58.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:12:58.377" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:12:51.354" endtime="20210920 14:12:58.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:12:58.378" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:12:58.377" endtime="20210920 14:12:58.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:12:58.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:12:58.379" endtime="20210920 14:12:58.379"/>
</kw>
<status status="PASS" starttime="20210920 14:12:51.352" endtime="20210920 14:12:58.380"/>
</kw>
<msg timestamp="20210920 14:12:58.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:12:51.352" endtime="20210920 14:12:58.380"/>
</kw>
<msg timestamp="20210920 14:12:58.380" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:12:51.350" endtime="20210920 14:12:58.380"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:12:58.381" endtime="20210920 14:12:58.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:12:58.386" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/39609-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:13:05.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:13:05.894" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210920 14:12:58.384" endtime="20210920 14:13:05.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:13:05.896" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210920 14:13:05.895" endtime="20210920 14:13:05.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:13:05.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:13:05.897" endtime="20210920 14:13:05.898"/>
</kw>
<status status="PASS" starttime="20210920 14:12:58.383" endtime="20210920 14:13:05.899"/>
</kw>
<msg timestamp="20210920 14:13:05.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:12:58.383" endtime="20210920 14:13:05.900"/>
</kw>
<msg timestamp="20210920 14:13:05.901" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210920 14:12:58.382" endtime="20210920 14:13:05.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:13:05.911" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:13:12.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:13:12.796" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210920 14:13:05.907" endtime="20210920 14:13:12.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:13:12.798" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:13:12.797" endtime="20210920 14:13:12.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:13:12.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:13:12.798" endtime="20210920 14:13:12.799"/>
</kw>
<status status="PASS" starttime="20210920 14:13:05.905" endtime="20210920 14:13:12.799"/>
</kw>
<msg timestamp="20210920 14:13:12.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:13:05.904" endtime="20210920 14:13:12.799"/>
</kw>
<msg timestamp="20210920 14:13:12.800" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210920 14:13:05.901" endtime="20210920 14:13:12.800"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:13:12.800" endtime="20210920 14:13:12.802"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:13:12.807" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/39609-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:13:20.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:13:20.563" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210920 14:13:12.804" endtime="20210920 14:13:20.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:13:20.565" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210920 14:13:20.564" endtime="20210920 14:13:20.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:13:20.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:13:20.566" endtime="20210920 14:13:20.567"/>
</kw>
<status status="PASS" starttime="20210920 14:13:12.804" endtime="20210920 14:13:20.568"/>
</kw>
<msg timestamp="20210920 14:13:20.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:13:12.803" endtime="20210920 14:13:20.568"/>
</kw>
<msg timestamp="20210920 14:13:20.569" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210920 14:13:12.802" endtime="20210920 14:13:20.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:13:20.577" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:13:28.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:13:28.559" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210920 14:13:20.573" endtime="20210920 14:13:28.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:13:28.561" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:13:28.560" endtime="20210920 14:13:28.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:13:28.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:13:28.562" endtime="20210920 14:13:28.563"/>
</kw>
<status status="PASS" starttime="20210920 14:13:20.571" endtime="20210920 14:13:28.564"/>
</kw>
<msg timestamp="20210920 14:13:28.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:13:20.571" endtime="20210920 14:13:28.564"/>
</kw>
<msg timestamp="20210920 14:13:28.565" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210920 14:13:20.569" endtime="20210920 14:13:28.565"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:13:28.565" endtime="20210920 14:13:28.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:13:28.574" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/39609-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:13:36.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:13:36.844" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:13:28.571" endtime="20210920 14:13:36.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:13:36.846" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:13:36.845" endtime="20210920 14:13:36.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:13:36.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:13:36.847" endtime="20210920 14:13:36.849"/>
</kw>
<status status="PASS" starttime="20210920 14:13:28.570" endtime="20210920 14:13:36.849"/>
</kw>
<msg timestamp="20210920 14:13:36.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:13:28.569" endtime="20210920 14:13:36.850"/>
</kw>
<msg timestamp="20210920 14:13:36.850" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:13:28.567" endtime="20210920 14:13:36.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:13:36.857" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/39609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:13:43.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:13:43.651" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210920 14:13:36.854" endtime="20210920 14:13:43.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:13:43.654" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:13:43.652" endtime="20210920 14:13:43.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:13:43.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:13:43.654" endtime="20210920 14:13:43.656"/>
</kw>
<status status="PASS" starttime="20210920 14:13:36.853" endtime="20210920 14:13:43.657"/>
</kw>
<msg timestamp="20210920 14:13:43.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:13:36.852" endtime="20210920 14:13:43.657"/>
</kw>
<msg timestamp="20210920 14:13:43.657" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210920 14:13:36.851" endtime="20210920 14:13:43.658"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:13:43.658" endtime="20210920 14:13:43.659"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:13:43.659" endtime="20210920 14:13:43.661"/>
</kw>
<status status="PASS" starttime="20210920 14:12:41.959" endtime="20210920 14:13:43.661"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210920 14:12:41.849" endtime="20210920 14:13:43.662"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:13:43.675" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:13:43.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:13:43.679" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 14:13:43.672" endtime="20210920 14:13:43.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:13:43.681" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 14:13:43.680" endtime="20210920 14:13:43.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:13:43.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:13:43.681" endtime="20210920 14:13:43.682"/>
</kw>
<status status="PASS" starttime="20210920 14:13:43.669" endtime="20210920 14:13:43.683"/>
</kw>
<msg timestamp="20210920 14:13:43.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:13:43.669" endtime="20210920 14:13:43.683"/>
</kw>
<msg timestamp="20210920 14:13:43.683" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 14:13:43.668" endtime="20210920 14:13:43.683"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:13:43.684" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 14:13:43.684" endtime="20210920 14:13:43.684"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:13:43.689" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:13:43.698" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:13:43.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:13:43.687" endtime="20210920 14:13:43.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:13:43.702" level="INFO"/>
<status status="PASS" starttime="20210920 14:13:43.700" endtime="20210920 14:13:43.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:13:43.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:13:43.702" endtime="20210920 14:13:43.704"/>
</kw>
<status status="PASS" starttime="20210920 14:13:43.686" endtime="20210920 14:13:43.704"/>
</kw>
<msg timestamp="20210920 14:13:43.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:13:43.686" endtime="20210920 14:13:43.705"/>
</kw>
<status status="PASS" starttime="20210920 14:13:43.685" endtime="20210920 14:13:43.705"/>
</kw>
<status status="PASS" starttime="20210920 14:13:43.684" endtime="20210920 14:13:43.705"/>
</kw>
<status status="PASS" starttime="20210920 14:13:43.667" endtime="20210920 14:13:43.705"/>
</kw>
<status status="PASS" starttime="20210920 14:13:43.666" endtime="20210920 14:13:43.705"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:13:43.712" level="INFO">Running command 'ozone sh bucket create o3://om:9862/39609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:13:51.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:13:51.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:13:43.709" endtime="20210920 14:13:51.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:13:51.437" level="INFO"/>
<status status="PASS" starttime="20210920 14:13:51.436" endtime="20210920 14:13:51.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:13:51.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:13:51.437" endtime="20210920 14:13:51.439"/>
</kw>
<status status="PASS" starttime="20210920 14:13:43.708" endtime="20210920 14:13:51.439"/>
</kw>
<msg timestamp="20210920 14:13:51.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:13:43.707" endtime="20210920 14:13:51.440"/>
</kw>
<status status="PASS" starttime="20210920 14:13:43.706" endtime="20210920 14:13:51.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:13:51.444" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:13:58.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:13:58.371" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210920 14:13:51.442" endtime="20210920 14:13:58.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:13:58.374" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:13:58.372" endtime="20210920 14:13:58.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:13:58.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:13:58.374" endtime="20210920 14:13:58.376"/>
</kw>
<status status="PASS" starttime="20210920 14:13:51.441" endtime="20210920 14:13:58.377"/>
</kw>
<msg timestamp="20210920 14:13:58.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:13:51.441" endtime="20210920 14:13:58.377"/>
</kw>
<msg timestamp="20210920 14:13:58.378" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210920 14:13:51.440" endtime="20210920 14:13:58.378"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:13:58.378" endtime="20210920 14:13:58.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:13:58.389" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/39609-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:14:04.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:14:04.306" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210920 14:13:58.383" endtime="20210920 14:14:04.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:14:04.308" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210920 14:14:04.307" endtime="20210920 14:14:04.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:14:04.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:14:04.309" endtime="20210920 14:14:04.310"/>
</kw>
<status status="PASS" starttime="20210920 14:13:58.382" endtime="20210920 14:14:04.311"/>
</kw>
<msg timestamp="20210920 14:14:04.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:13:58.381" endtime="20210920 14:14:04.311"/>
</kw>
<msg timestamp="20210920 14:14:04.311" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210920 14:13:58.380" endtime="20210920 14:14:04.311"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:14:04.323" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:14:11.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:14:11.658" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210920 14:14:04.316" endtime="20210920 14:14:11.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:14:11.660" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:14:11.659" endtime="20210920 14:14:11.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:14:11.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:14:11.660" endtime="20210920 14:14:11.661"/>
</kw>
<status status="PASS" starttime="20210920 14:14:04.314" endtime="20210920 14:14:11.661"/>
</kw>
<msg timestamp="20210920 14:14:11.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:14:04.314" endtime="20210920 14:14:11.661"/>
</kw>
<msg timestamp="20210920 14:14:11.662" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210920 14:14:04.311" endtime="20210920 14:14:11.662"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:14:11.662" endtime="20210920 14:14:11.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:14:11.667" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/39609-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:14:18.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:14:18.714" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210920 14:14:11.665" endtime="20210920 14:14:18.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:14:18.716" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210920 14:14:18.715" endtime="20210920 14:14:18.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:14:18.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:14:18.717" endtime="20210920 14:14:18.717"/>
</kw>
<status status="PASS" starttime="20210920 14:14:11.664" endtime="20210920 14:14:18.718"/>
</kw>
<msg timestamp="20210920 14:14:18.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:14:11.664" endtime="20210920 14:14:18.718"/>
</kw>
<msg timestamp="20210920 14:14:18.719" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210920 14:14:11.663" endtime="20210920 14:14:18.719"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:14:18.726" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:14:26.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:14:26.801" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210920 14:14:18.723" endtime="20210920 14:14:26.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:14:26.804" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:14:26.802" endtime="20210920 14:14:26.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:14:26.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:14:26.805" endtime="20210920 14:14:26.806"/>
</kw>
<status status="PASS" starttime="20210920 14:14:18.722" endtime="20210920 14:14:26.807"/>
</kw>
<msg timestamp="20210920 14:14:26.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:14:18.721" endtime="20210920 14:14:26.807"/>
</kw>
<msg timestamp="20210920 14:14:26.808" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210920 14:14:18.719" endtime="20210920 14:14:26.808"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:14:26.808" endtime="20210920 14:14:26.810"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:14:26.815" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/39609-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:14:33.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:14:33.082" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:14:26.813" endtime="20210920 14:14:33.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:14:33.084" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:14:33.083" endtime="20210920 14:14:33.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:14:33.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:14:33.085" endtime="20210920 14:14:33.086"/>
</kw>
<status status="PASS" starttime="20210920 14:14:26.812" endtime="20210920 14:14:33.086"/>
</kw>
<msg timestamp="20210920 14:14:33.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:14:26.812" endtime="20210920 14:14:33.087"/>
</kw>
<msg timestamp="20210920 14:14:33.087" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:14:26.811" endtime="20210920 14:14:33.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:14:33.094" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/39609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:14:41.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:14:41.836" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210920 14:14:33.090" endtime="20210920 14:14:41.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:14:41.837" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:14:41.836" endtime="20210920 14:14:41.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:14:41.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:14:41.837" endtime="20210920 14:14:41.838"/>
</kw>
<status status="PASS" starttime="20210920 14:14:33.089" endtime="20210920 14:14:41.840"/>
</kw>
<msg timestamp="20210920 14:14:41.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:14:33.089" endtime="20210920 14:14:41.840"/>
</kw>
<msg timestamp="20210920 14:14:41.841" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210920 14:14:33.087" endtime="20210920 14:14:41.841"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:14:41.841" endtime="20210920 14:14:41.841"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:14:41.842" endtime="20210920 14:14:41.842"/>
</kw>
<status status="PASS" starttime="20210920 14:13:43.706" endtime="20210920 14:14:41.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210920 14:13:43.664" endtime="20210920 14:14:41.843"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:14:41.852" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:14:41.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:14:41.856" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 14:14:41.848" endtime="20210920 14:14:41.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:14:41.859" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 14:14:41.857" endtime="20210920 14:14:41.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:14:41.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:14:41.859" endtime="20210920 14:14:41.860"/>
</kw>
<status status="PASS" starttime="20210920 14:14:41.847" endtime="20210920 14:14:41.863"/>
</kw>
<msg timestamp="20210920 14:14:41.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:14:41.847" endtime="20210920 14:14:41.863"/>
</kw>
<msg timestamp="20210920 14:14:41.864" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 14:14:41.846" endtime="20210920 14:14:41.864"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:14:41.865" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 14:14:41.864" endtime="20210920 14:14:41.865"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:14:41.871" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:14:41.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:14:41.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:14:41.868" endtime="20210920 14:14:41.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:14:41.884" level="INFO"/>
<status status="PASS" starttime="20210920 14:14:41.883" endtime="20210920 14:14:41.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:14:41.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:14:41.885" endtime="20210920 14:14:41.886"/>
</kw>
<status status="PASS" starttime="20210920 14:14:41.867" endtime="20210920 14:14:41.887"/>
</kw>
<msg timestamp="20210920 14:14:41.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:14:41.867" endtime="20210920 14:14:41.887"/>
</kw>
<status status="PASS" starttime="20210920 14:14:41.866" endtime="20210920 14:14:41.887"/>
</kw>
<status status="PASS" starttime="20210920 14:14:41.865" endtime="20210920 14:14:41.887"/>
</kw>
<status status="PASS" starttime="20210920 14:14:41.846" endtime="20210920 14:14:41.888"/>
</kw>
<status status="PASS" starttime="20210920 14:14:41.845" endtime="20210920 14:14:41.888"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:14:41.894" level="INFO">Running command 'ozone sh key put o3://om:9862/39609-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:17:54.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:17:54.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:14:41.891" endtime="20210920 14:17:54.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:17:54.864" level="INFO"/>
<status status="PASS" starttime="20210920 14:17:54.863" endtime="20210920 14:17:54.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:17:54.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:17:54.864" endtime="20210920 14:17:54.866"/>
</kw>
<status status="PASS" starttime="20210920 14:14:41.890" endtime="20210920 14:17:54.866"/>
</kw>
<msg timestamp="20210920 14:17:54.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:14:41.890" endtime="20210920 14:17:54.866"/>
</kw>
<status status="PASS" starttime="20210920 14:14:41.889" endtime="20210920 14:17:54.867"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:17:54.874" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39609-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:18:01.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:18:01.126" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210920 14:17:54.870" endtime="20210920 14:18:01.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:18:01.128" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:18:01.127" endtime="20210920 14:18:01.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:18:01.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:18:01.128" endtime="20210920 14:18:01.129"/>
</kw>
<status status="PASS" starttime="20210920 14:17:54.869" endtime="20210920 14:18:01.129"/>
</kw>
<msg timestamp="20210920 14:18:01.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:17:54.868" endtime="20210920 14:18:01.129"/>
</kw>
<msg timestamp="20210920 14:18:01.130" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210920 14:17:54.867" endtime="20210920 14:18:01.130"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:18:01.130" endtime="20210920 14:18:01.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:18:01.137" level="INFO">Running command 'ozone sh key addacl o3://om:9862/39609-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:18:06.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:18:06.509" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 14:18:01.133" endtime="20210920 14:18:06.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:18:06.511" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 14:18:06.509" endtime="20210920 14:18:06.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:18:06.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:18:06.512" endtime="20210920 14:18:06.513"/>
</kw>
<status status="PASS" starttime="20210920 14:18:01.133" endtime="20210920 14:18:06.513"/>
</kw>
<msg timestamp="20210920 14:18:06.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:18:01.132" endtime="20210920 14:18:06.513"/>
</kw>
<msg timestamp="20210920 14:18:06.514" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210920 14:18:01.131" endtime="20210920 14:18:06.514"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:18:06.518" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39609-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:18:14.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:18:14.286" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210920 14:18:06.516" endtime="20210920 14:18:14.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:18:14.289" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:18:14.288" endtime="20210920 14:18:14.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:18:14.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:18:14.289" endtime="20210920 14:18:14.290"/>
</kw>
<status status="PASS" starttime="20210920 14:18:06.516" endtime="20210920 14:18:14.291"/>
</kw>
<msg timestamp="20210920 14:18:14.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:18:06.515" endtime="20210920 14:18:14.291"/>
</kw>
<msg timestamp="20210920 14:18:14.292" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210920 14:18:06.514" endtime="20210920 14:18:14.292"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:18:14.292" endtime="20210920 14:18:14.294"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:18:14.299" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/39609-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:18:22.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:18:22.173" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210920 14:18:14.296" endtime="20210920 14:18:22.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:18:22.175" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210920 14:18:22.173" endtime="20210920 14:18:22.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:18:22.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:18:22.175" endtime="20210920 14:18:22.176"/>
</kw>
<status status="PASS" starttime="20210920 14:18:14.295" endtime="20210920 14:18:22.176"/>
</kw>
<msg timestamp="20210920 14:18:22.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:18:14.295" endtime="20210920 14:18:22.176"/>
</kw>
<msg timestamp="20210920 14:18:22.176" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210920 14:18:14.294" endtime="20210920 14:18:22.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:18:22.182" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39609-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:18:31.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:18:31.003" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210920 14:18:22.179" endtime="20210920 14:18:31.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:18:31.005" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:18:31.004" endtime="20210920 14:18:31.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:18:31.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:18:31.005" endtime="20210920 14:18:31.006"/>
</kw>
<status status="PASS" starttime="20210920 14:18:22.178" endtime="20210920 14:18:31.006"/>
</kw>
<msg timestamp="20210920 14:18:31.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:18:22.177" endtime="20210920 14:18:31.007"/>
</kw>
<msg timestamp="20210920 14:18:31.007" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210920 14:18:22.177" endtime="20210920 14:18:31.007"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:18:31.007" endtime="20210920 14:18:31.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:18:31.013" level="INFO">Running command 'ozone sh key setacl o3://om:9862/39609-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:18:39.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:18:39.812" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:18:31.010" endtime="20210920 14:18:39.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:18:39.813" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:18:39.813" endtime="20210920 14:18:39.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:18:39.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:18:39.814" endtime="20210920 14:18:39.814"/>
</kw>
<status status="PASS" starttime="20210920 14:18:31.009" endtime="20210920 14:18:39.815"/>
</kw>
<msg timestamp="20210920 14:18:39.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:18:31.009" endtime="20210920 14:18:39.815"/>
</kw>
<msg timestamp="20210920 14:18:39.815" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:18:31.008" endtime="20210920 14:18:39.815"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:18:39.823" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39609-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:18:46.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:18:46.355" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210920 14:18:39.819" endtime="20210920 14:18:46.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:18:46.358" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:18:46.356" endtime="20210920 14:18:46.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:18:46.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:18:46.359" endtime="20210920 14:18:46.362"/>
</kw>
<status status="PASS" starttime="20210920 14:18:39.818" endtime="20210920 14:18:46.363"/>
</kw>
<msg timestamp="20210920 14:18:46.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:18:39.817" endtime="20210920 14:18:46.363"/>
</kw>
<msg timestamp="20210920 14:18:46.364" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210920 14:18:39.815" endtime="20210920 14:18:46.364"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:18:46.364" endtime="20210920 14:18:46.365"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:18:46.366" endtime="20210920 14:18:46.367"/>
</kw>
<status status="PASS" starttime="20210920 14:14:41.888" endtime="20210920 14:18:46.367"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210920 14:14:41.844" endtime="20210920 14:18:46.368"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:18:46.380" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:18:46.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:18:46.387" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 14:18:46.377" endtime="20210920 14:18:46.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:18:46.389" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 14:18:46.388" endtime="20210920 14:18:46.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:18:46.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:18:46.389" endtime="20210920 14:18:46.391"/>
</kw>
<status status="PASS" starttime="20210920 14:18:46.375" endtime="20210920 14:18:46.391"/>
</kw>
<msg timestamp="20210920 14:18:46.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:18:46.375" endtime="20210920 14:18:46.392"/>
</kw>
<msg timestamp="20210920 14:18:46.393" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 14:18:46.374" endtime="20210920 14:18:46.393"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:18:46.395" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 14:18:46.393" endtime="20210920 14:18:46.395"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:18:46.401" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:18:46.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:18:46.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:18:46.398" endtime="20210920 14:18:46.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:18:46.440" level="INFO"/>
<status status="PASS" starttime="20210920 14:18:46.440" endtime="20210920 14:18:46.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:18:46.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:18:46.441" endtime="20210920 14:18:46.442"/>
</kw>
<status status="PASS" starttime="20210920 14:18:46.398" endtime="20210920 14:18:46.442"/>
</kw>
<msg timestamp="20210920 14:18:46.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:18:46.397" endtime="20210920 14:18:46.442"/>
</kw>
<status status="PASS" starttime="20210920 14:18:46.396" endtime="20210920 14:18:46.443"/>
</kw>
<status status="PASS" starttime="20210920 14:18:46.396" endtime="20210920 14:18:46.443"/>
</kw>
<status status="PASS" starttime="20210920 14:18:46.373" endtime="20210920 14:18:46.443"/>
</kw>
<status status="PASS" starttime="20210920 14:18:46.372" endtime="20210920 14:18:46.443"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:18:46.450" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/39609-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:18:53.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:18:53.407" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210920 14:18:46.446" endtime="20210920 14:18:53.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:18:53.409" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210920 14:18:53.408" endtime="20210920 14:18:53.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:18:53.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:18:53.409" endtime="20210920 14:18:53.410"/>
</kw>
<status status="PASS" starttime="20210920 14:18:46.446" endtime="20210920 14:18:53.410"/>
</kw>
<msg timestamp="20210920 14:18:53.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:18:46.445" endtime="20210920 14:18:53.410"/>
</kw>
<status status="PASS" starttime="20210920 14:18:46.444" endtime="20210920 14:18:53.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:18:53.416" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/39609-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:19:00.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:19:00.214" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210920 14:18:53.413" endtime="20210920 14:19:00.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:19:00.218" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:19:00.216" endtime="20210920 14:19:00.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:19:00.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:19:00.218" endtime="20210920 14:19:00.220"/>
</kw>
<status status="PASS" starttime="20210920 14:18:53.412" endtime="20210920 14:19:00.220"/>
</kw>
<msg timestamp="20210920 14:19:00.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:18:53.412" endtime="20210920 14:19:00.221"/>
</kw>
<msg timestamp="20210920 14:19:00.222" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210920 14:18:53.411" endtime="20210920 14:19:00.222"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:19:00.222" endtime="20210920 14:19:00.224"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:19:00.232" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/39609-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:19:07.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:19:07.933" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210920 14:19:00.229" endtime="20210920 14:19:07.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:19:07.935" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210920 14:19:07.934" endtime="20210920 14:19:07.935"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:19:07.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:19:07.935" endtime="20210920 14:19:07.936"/>
</kw>
<status status="PASS" starttime="20210920 14:19:00.228" endtime="20210920 14:19:07.936"/>
</kw>
<msg timestamp="20210920 14:19:07.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:19:00.227" endtime="20210920 14:19:07.938"/>
</kw>
<msg timestamp="20210920 14:19:07.939" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210920 14:19:00.224" endtime="20210920 14:19:07.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:19:07.945" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/39609-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:19:16.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:19:16.080" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210920 14:19:07.942" endtime="20210920 14:19:16.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:19:16.083" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:19:16.081" endtime="20210920 14:19:16.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:19:16.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:19:16.083" endtime="20210920 14:19:16.085"/>
</kw>
<status status="PASS" starttime="20210920 14:19:07.942" endtime="20210920 14:19:16.085"/>
</kw>
<msg timestamp="20210920 14:19:16.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:19:07.941" endtime="20210920 14:19:16.086"/>
</kw>
<msg timestamp="20210920 14:19:16.087" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210920 14:19:07.939" endtime="20210920 14:19:16.087"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:19:16.087" endtime="20210920 14:19:16.089"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:19:16.097" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/39609-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:19:24.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:19:24.102" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:19:16.095" endtime="20210920 14:19:24.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:19:24.103" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:19:24.103" endtime="20210920 14:19:24.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:19:24.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:19:24.104" endtime="20210920 14:19:24.104"/>
</kw>
<status status="PASS" starttime="20210920 14:19:16.092" endtime="20210920 14:19:24.105"/>
</kw>
<msg timestamp="20210920 14:19:24.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:19:16.091" endtime="20210920 14:19:24.105"/>
</kw>
<msg timestamp="20210920 14:19:24.105" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210920 14:19:16.089" endtime="20210920 14:19:24.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:19:24.111" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/39609-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:19:31.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:19:31.543" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210920 14:19:24.107" endtime="20210920 14:19:31.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:19:31.545" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:19:31.544" endtime="20210920 14:19:31.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:19:31.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:19:31.545" endtime="20210920 14:19:31.546"/>
</kw>
<status status="PASS" starttime="20210920 14:19:24.107" endtime="20210920 14:19:31.546"/>
</kw>
<msg timestamp="20210920 14:19:31.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:19:24.106" endtime="20210920 14:19:31.547"/>
</kw>
<msg timestamp="20210920 14:19:31.547" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210920 14:19:24.106" endtime="20210920 14:19:31.547"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:19:31.547" endtime="20210920 14:19:31.548"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:19:31.548" endtime="20210920 14:19:31.549"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:19:31.553" level="INFO">Running command 'ozone sh key put o3://om:9862/39609-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:22:43.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:22:43.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:19:31.551" endtime="20210920 14:22:43.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:22:43.878" level="INFO"/>
<status status="PASS" starttime="20210920 14:22:43.877" endtime="20210920 14:22:43.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:22:43.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:22:43.878" endtime="20210920 14:22:43.879"/>
</kw>
<status status="PASS" starttime="20210920 14:19:31.550" endtime="20210920 14:22:43.880"/>
</kw>
<msg timestamp="20210920 14:22:43.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:19:31.550" endtime="20210920 14:22:43.880"/>
</kw>
<status status="PASS" starttime="20210920 14:19:31.549" endtime="20210920 14:22:43.881"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:22:43.886" level="INFO">Running command 'ozone sh key getacl o3://om:9862/39609-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:22:52.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:22:52.355" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210920 14:22:43.884" endtime="20210920 14:22:52.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:22:52.358" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210920 14:22:52.356" endtime="20210920 14:22:52.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:22:52.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:22:52.359" endtime="20210920 14:22:52.360"/>
</kw>
<status status="PASS" starttime="20210920 14:22:43.883" endtime="20210920 14:22:52.360"/>
</kw>
<msg timestamp="20210920 14:22:52.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:22:43.882" endtime="20210920 14:22:52.361"/>
</kw>
<msg timestamp="20210920 14:22:52.361" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210920 14:22:43.881" endtime="20210920 14:22:52.362"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:22:52.362" endtime="20210920 14:22:52.363"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210920 14:22:52.363" endtime="20210920 14:22:52.365"/>
</kw>
<status status="PASS" starttime="20210920 14:18:46.443" endtime="20210920 14:22:52.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210920 14:18:46.369" endtime="20210920 14:22:52.366"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:22:52.376" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:22:52.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:22:52.382" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 14:22:52.373" endtime="20210920 14:22:52.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:22:52.384" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 14:22:52.383" endtime="20210920 14:22:52.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:22:52.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:22:52.384" endtime="20210920 14:22:52.386"/>
</kw>
<status status="PASS" starttime="20210920 14:22:52.372" endtime="20210920 14:22:52.387"/>
</kw>
<msg timestamp="20210920 14:22:52.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:22:52.371" endtime="20210920 14:22:52.387"/>
</kw>
<msg timestamp="20210920 14:22:52.388" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 14:22:52.371" endtime="20210920 14:22:52.388"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:22:52.389" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 14:22:52.388" endtime="20210920 14:22:52.389"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:22:52.397" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:22:52.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:22:52.406" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:22:52.394" endtime="20210920 14:22:52.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:22:52.408" level="INFO"/>
<status status="PASS" starttime="20210920 14:22:52.407" endtime="20210920 14:22:52.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:22:52.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:22:52.409" endtime="20210920 14:22:52.410"/>
</kw>
<status status="PASS" starttime="20210920 14:22:52.392" endtime="20210920 14:22:52.410"/>
</kw>
<msg timestamp="20210920 14:22:52.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:22:52.392" endtime="20210920 14:22:52.410"/>
</kw>
<status status="PASS" starttime="20210920 14:22:52.391" endtime="20210920 14:22:52.411"/>
</kw>
<status status="PASS" starttime="20210920 14:22:52.390" endtime="20210920 14:22:52.411"/>
</kw>
<status status="PASS" starttime="20210920 14:22:52.369" endtime="20210920 14:22:52.411"/>
</kw>
<status status="PASS" starttime="20210920 14:22:52.368" endtime="20210920 14:22:52.411"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:22:52.419" level="INFO">Running command 'ozone sh volume info o3:///39609-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:22:58.312" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 14:22:58.312" level="INFO">${output} = VOLUME_NOT_FOUND Volume 39609-rpcwport is not found</msg>
<status status="PASS" starttime="20210920 14:22:52.415" endtime="20210920 14:22:58.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:22:58.313" level="INFO">VOLUME_NOT_FOUND Volume 39609-rpcwport is not found</msg>
<status status="PASS" starttime="20210920 14:22:58.313" endtime="20210920 14:22:58.313"/>
</kw>
<msg timestamp="20210920 14:22:58.314" level="INFO">${result} = VOLUME_NOT_FOUND Volume 39609-rpcwport is not found</msg>
<status status="PASS" starttime="20210920 14:22:52.414" endtime="20210920 14:22:58.314"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:22:58.314" endtime="20210920 14:22:58.315"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:22:58.319" level="INFO">Running command 'ozone sh volume create o3:///39609-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:23:04.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:23:04.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:22:58.317" endtime="20210920 14:23:04.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:23:04.663" level="INFO"/>
<status status="PASS" starttime="20210920 14:23:04.662" endtime="20210920 14:23:04.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:23:04.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:23:04.665" endtime="20210920 14:23:04.666"/>
</kw>
<status status="PASS" starttime="20210920 14:22:58.316" endtime="20210920 14:23:04.667"/>
</kw>
<msg timestamp="20210920 14:23:04.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:22:58.316" endtime="20210920 14:23:04.668"/>
</kw>
<msg timestamp="20210920 14:23:04.668" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210920 14:22:58.315" endtime="20210920 14:23:04.669"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:23:04.669" endtime="20210920 14:23:04.670"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:23:04.678" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="39609-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:23:13.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:23:13.592" level="INFO">${output} = {
  "metadata": {},
  "name": "39609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210920 14:23:04.675" endtime="20210920 14:23:13.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:23:13.593" level="INFO">{
  "metadata": {},
  "name": "39609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-20T14:23:04.479Z",
  "modificationTime": "2021-09-20T14:23:04.479Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210920 14:23:13.593" endtime="20210920 14:23:13.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:23:13.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:23:13.594" endtime="20210920 14:23:13.594"/>
</kw>
<status status="PASS" starttime="20210920 14:23:04.673" endtime="20210920 14:23:13.595"/>
</kw>
<msg timestamp="20210920 14:23:13.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:23:04.673" endtime="20210920 14:23:13.595"/>
</kw>
<msg timestamp="20210920 14:23:13.596" level="INFO">${result} = {
  "metadata": {},
  "name": "39609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210920 14:23:04.671" endtime="20210920 14:23:13.596"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:23:13.596" endtime="20210920 14:23:13.596"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:23:13.604" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="39609-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:23:22.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:23:22.747" level="INFO">${output} = {
  "metadata": {},
  "name": "39609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210920 14:23:13.599" endtime="20210920 14:23:22.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:23:22.749" level="INFO">{
  "metadata": {},
  "name": "39609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-20T14:23:04.479Z",
  "modificationTime": "2021-09-20T14:23:04.479Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210920 14:23:22.748" endtime="20210920 14:23:22.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:23:22.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:23:22.749" endtime="20210920 14:23:22.751"/>
</kw>
<status status="PASS" starttime="20210920 14:23:13.598" endtime="20210920 14:23:22.752"/>
</kw>
<msg timestamp="20210920 14:23:22.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:23:13.597" endtime="20210920 14:23:22.752"/>
</kw>
<msg timestamp="20210920 14:23:22.753" level="INFO">${result} = {
  "metadata": {},
  "name": "39609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210920 14:23:13.597" endtime="20210920 14:23:22.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:23:22.753" endtime="20210920 14:23:22.754"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:23:22.762" level="INFO">Running command 'ozone sh volume setquota o3:///39609-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:23:29.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:23:29.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:23:22.757" endtime="20210920 14:23:29.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:23:29.149" level="INFO"/>
<status status="PASS" starttime="20210920 14:23:29.148" endtime="20210920 14:23:29.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:23:29.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:23:29.149" endtime="20210920 14:23:29.150"/>
</kw>
<status status="PASS" starttime="20210920 14:23:22.756" endtime="20210920 14:23:29.150"/>
</kw>
<msg timestamp="20210920 14:23:29.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:23:22.756" endtime="20210920 14:23:29.151"/>
</kw>
<status status="PASS" starttime="20210920 14:23:22.754" endtime="20210920 14:23:29.151"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:23:29.156" level="INFO">Running command 'ozone sh volume info o3:///39609-rpcwport | jq -r '. | select(.name=="39609-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:23:38.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:23:38.049" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:23:29.154" endtime="20210920 14:23:38.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:23:38.050" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210920 14:23:38.050" endtime="20210920 14:23:38.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:23:38.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:23:38.051" endtime="20210920 14:23:38.051"/>
</kw>
<status status="PASS" starttime="20210920 14:23:29.153" endtime="20210920 14:23:38.052"/>
</kw>
<msg timestamp="20210920 14:23:38.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:23:29.153" endtime="20210920 14:23:38.052"/>
</kw>
<msg timestamp="20210920 14:23:38.053" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:23:29.151" endtime="20210920 14:23:38.053"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:23:38.053" endtime="20210920 14:23:38.054"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:23:38.058" level="INFO">Running command 'ozone sh bucket create o3:///39609-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:23:45.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:23:45.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:23:38.056" endtime="20210920 14:23:45.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:23:45.893" level="INFO"/>
<status status="PASS" starttime="20210920 14:23:45.892" endtime="20210920 14:23:45.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:23:45.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:23:45.894" endtime="20210920 14:23:45.894"/>
</kw>
<status status="PASS" starttime="20210920 14:23:38.055" endtime="20210920 14:23:45.895"/>
</kw>
<msg timestamp="20210920 14:23:45.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:23:38.055" endtime="20210920 14:23:45.895"/>
</kw>
<status status="PASS" starttime="20210920 14:23:38.054" endtime="20210920 14:23:45.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:23:45.902" level="INFO">Running command 'ozone sh bucket info o3:///39609-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:23:53.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:23:53.687" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210920 14:23:45.899" endtime="20210920 14:23:53.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:23:53.689" level="INFO">DISK</msg>
<status status="PASS" starttime="20210920 14:23:53.688" endtime="20210920 14:23:53.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:23:53.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:23:53.689" endtime="20210920 14:23:53.690"/>
</kw>
<status status="PASS" starttime="20210920 14:23:45.898" endtime="20210920 14:23:53.690"/>
</kw>
<msg timestamp="20210920 14:23:53.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:23:45.897" endtime="20210920 14:23:53.690"/>
</kw>
<msg timestamp="20210920 14:23:53.691" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210920 14:23:45.895" endtime="20210920 14:23:53.691"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:23:53.691" endtime="20210920 14:23:53.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:23:53.698" level="INFO">Running command 'ozone sh bucket info o3:///39609-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:23:58.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:23:58.653" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:23:53.695" endtime="20210920 14:23:58.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:23:58.654" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210920 14:23:58.653" endtime="20210920 14:23:58.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:23:58.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:23:58.654" endtime="20210920 14:23:58.655"/>
</kw>
<status status="PASS" starttime="20210920 14:23:53.695" endtime="20210920 14:23:58.655"/>
</kw>
<msg timestamp="20210920 14:23:58.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:23:53.694" endtime="20210920 14:23:58.656"/>
</kw>
<msg timestamp="20210920 14:23:58.656" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:23:53.692" endtime="20210920 14:23:58.656"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:23:58.656" endtime="20210920 14:23:58.657"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:23:58.661" level="INFO">Running command 'ozone sh bucket info o3:///39609-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:24:07.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:24:07.127" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210920 14:23:58.659" endtime="20210920 14:24:07.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:24:07.129" level="INFO">100</msg>
<status status="PASS" starttime="20210920 14:24:07.128" endtime="20210920 14:24:07.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:24:07.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:24:07.129" endtime="20210920 14:24:07.130"/>
</kw>
<status status="PASS" starttime="20210920 14:23:58.658" endtime="20210920 14:24:07.130"/>
</kw>
<msg timestamp="20210920 14:24:07.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:23:58.658" endtime="20210920 14:24:07.131"/>
</kw>
<msg timestamp="20210920 14:24:07.131" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210920 14:23:58.657" endtime="20210920 14:24:07.131"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:24:07.131" endtime="20210920 14:24:07.133"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:24:07.141" level="INFO">Running command 'ozone sh bucket setquota o3:///39609-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:24:15.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:24:15.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:24:07.137" endtime="20210920 14:24:15.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:24:15.863" level="INFO"/>
<status status="PASS" starttime="20210920 14:24:15.861" endtime="20210920 14:24:15.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:24:15.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:24:15.863" endtime="20210920 14:24:15.864"/>
</kw>
<status status="PASS" starttime="20210920 14:24:07.136" endtime="20210920 14:24:15.865"/>
</kw>
<msg timestamp="20210920 14:24:15.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:24:07.135" endtime="20210920 14:24:15.865"/>
</kw>
<status status="PASS" starttime="20210920 14:24:07.133" endtime="20210920 14:24:15.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:24:15.872" level="INFO">Running command 'ozone sh bucket info o3:///39609-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:24:24.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:24:24.673" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210920 14:24:15.869" endtime="20210920 14:24:24.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:24:24.677" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210920 14:24:24.674" endtime="20210920 14:24:24.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:24:24.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:24:24.677" endtime="20210920 14:24:24.679"/>
</kw>
<status status="PASS" starttime="20210920 14:24:15.868" endtime="20210920 14:24:24.680"/>
</kw>
<msg timestamp="20210920 14:24:24.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:24:15.868" endtime="20210920 14:24:24.680"/>
</kw>
<msg timestamp="20210920 14:24:24.681" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210920 14:24:15.866" endtime="20210920 14:24:24.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:24:24.682" endtime="20210920 14:24:24.683"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:24:24.695" level="INFO">Running command 'ozone sh bucket info o3:///39609-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:24:32.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:24:32.928" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210920 14:24:24.691" endtime="20210920 14:24:32.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:24:32.929" level="INFO">1000</msg>
<status status="PASS" starttime="20210920 14:24:32.929" endtime="20210920 14:24:32.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:24:32.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:24:32.930" endtime="20210920 14:24:32.930"/>
</kw>
<status status="PASS" starttime="20210920 14:24:24.687" endtime="20210920 14:24:32.931"/>
</kw>
<msg timestamp="20210920 14:24:32.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:24:24.686" endtime="20210920 14:24:32.931"/>
</kw>
<msg timestamp="20210920 14:24:32.931" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210920 14:24:24.683" endtime="20210920 14:24:32.932"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:24:32.932" endtime="20210920 14:24:32.934"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:24:32.944" level="INFO">Running command 'ozone sh bucket list o3:///39609-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:24:42.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:24:42.419" level="INFO">${output} = 39609-rpcwport</msg>
<status status="PASS" starttime="20210920 14:24:32.940" endtime="20210920 14:24:42.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:24:42.421" level="INFO">39609-rpcwport</msg>
<status status="PASS" starttime="20210920 14:24:42.420" endtime="20210920 14:24:42.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:24:42.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:24:42.421" endtime="20210920 14:24:42.422"/>
</kw>
<status status="PASS" starttime="20210920 14:24:32.938" endtime="20210920 14:24:42.422"/>
</kw>
<msg timestamp="20210920 14:24:42.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:24:32.937" endtime="20210920 14:24:42.423"/>
</kw>
<msg timestamp="20210920 14:24:42.423" level="INFO">${result} = 39609-rpcwport</msg>
<status status="PASS" starttime="20210920 14:24:32.934" endtime="20210920 14:24:42.423"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:24:42.423" endtime="20210920 14:24:42.424"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:24:42.445" level="INFO">Running command 'ozone sh key put o3:///39609-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:27:52.367" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210920 14:24:42.437" endtime="20210920 14:27:52.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.368" endtime="20210920 14:27:52.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.368" endtime="20210920 14:27:52.368"/>
</kw>
<status status="FAIL" starttime="20210920 14:24:42.435" endtime="20210920 14:27:52.369"/>
</kw>
<msg timestamp="20210920 14:27:52.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210920 14:24:42.435" endtime="20210920 14:27:52.369"/>
</kw>
<status status="FAIL" starttime="20210920 14:24:42.433" endtime="20210920 14:27:52.369"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.370" endtime="20210920 14:27:52.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.370" endtime="20210920 14:27:52.370"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.370" endtime="20210920 14:27:52.370"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.370" endtime="20210920 14:27:52.370"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.371" endtime="20210920 14:27:52.371"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.371" endtime="20210920 14:27:52.371"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.371" endtime="20210920 14:27:52.371"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.371" endtime="20210920 14:27:52.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.372" endtime="20210920 14:27:52.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.372" endtime="20210920 14:27:52.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.372" endtime="20210920 14:27:52.372"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.372" endtime="20210920 14:27:52.372"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.372" endtime="20210920 14:27:52.372"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.373" endtime="20210920 14:27:52.373"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.373" endtime="20210920 14:27:52.373"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.373" endtime="20210920 14:27:52.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.373" endtime="20210920 14:27:52.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.373" endtime="20210920 14:27:52.374"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.374" endtime="20210920 14:27:52.374"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.374" endtime="20210920 14:27:52.374"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.374" endtime="20210920 14:27:52.374"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.375" endtime="20210920 14:27:52.375"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.375" endtime="20210920 14:27:52.375"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.375" endtime="20210920 14:27:52.375"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.375" endtime="20210920 14:27:52.375"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.375" endtime="20210920 14:27:52.375"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.376" endtime="20210920 14:27:52.376"/>
</kw>
<status status="FAIL" starttime="20210920 14:24:42.425" endtime="20210920 14:27:52.376"/>
</kw>
<status status="FAIL" starttime="20210920 14:24:42.424" endtime="20210920 14:27:52.377"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.377" endtime="20210920 14:27:52.377"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.377" endtime="20210920 14:27:52.377"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.378" endtime="20210920 14:27:52.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.378" endtime="20210920 14:27:52.378"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.379" endtime="20210920 14:27:52.379"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.379" endtime="20210920 14:27:52.380"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.380" endtime="20210920 14:27:52.380"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.381" endtime="20210920 14:27:52.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.382" endtime="20210920 14:27:52.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.382" endtime="20210920 14:27:52.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.382" endtime="20210920 14:27:52.382"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.383" endtime="20210920 14:27:52.383"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.384" endtime="20210920 14:27:52.384"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.384" endtime="20210920 14:27:52.384"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.385" endtime="20210920 14:27:52.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.385" endtime="20210920 14:27:52.385"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.386" endtime="20210920 14:27:52.386"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.386" endtime="20210920 14:27:52.386"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.386" endtime="20210920 14:27:52.387"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.387" endtime="20210920 14:27:52.387"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.387" endtime="20210920 14:27:52.387"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.388" endtime="20210920 14:27:52.388"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.388" endtime="20210920 14:27:52.388"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:27:52.388" endtime="20210920 14:27:52.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.388" endtime="20210920 14:27:52.388"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:27:52.389" endtime="20210920 14:27:52.389"/>
</kw>
<status status="FAIL" starttime="20210920 14:22:52.411" endtime="20210920 14:27:52.389"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210920 14:22:52.367" endtime="20210920 14:27:52.389">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:27:52.399" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:27:52.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:27:52.406" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 14:27:52.396" endtime="20210920 14:27:52.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:27:52.408" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 14:27:52.407" endtime="20210920 14:27:52.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:27:52.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:27:52.409" endtime="20210920 14:27:52.409"/>
</kw>
<status status="PASS" starttime="20210920 14:27:52.395" endtime="20210920 14:27:52.410"/>
</kw>
<msg timestamp="20210920 14:27:52.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:27:52.395" endtime="20210920 14:27:52.410"/>
</kw>
<msg timestamp="20210920 14:27:52.412" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 14:27:52.394" endtime="20210920 14:27:52.412"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 14:27:52.413" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 14:27:52.412" endtime="20210920 14:27:52.413"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:27:52.419" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:27:52.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:27:52.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:27:52.417" endtime="20210920 14:27:52.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:27:52.456" level="INFO"/>
<status status="PASS" starttime="20210920 14:27:52.455" endtime="20210920 14:27:52.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:27:52.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:27:52.456" endtime="20210920 14:27:52.457"/>
</kw>
<status status="PASS" starttime="20210920 14:27:52.416" endtime="20210920 14:27:52.457"/>
</kw>
<msg timestamp="20210920 14:27:52.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:27:52.415" endtime="20210920 14:27:52.458"/>
</kw>
<status status="PASS" starttime="20210920 14:27:52.414" endtime="20210920 14:27:52.458"/>
</kw>
<status status="PASS" starttime="20210920 14:27:52.414" endtime="20210920 14:27:52.458"/>
</kw>
<status status="PASS" starttime="20210920 14:27:52.393" endtime="20210920 14:27:52.458"/>
</kw>
<status status="PASS" starttime="20210920 14:27:52.393" endtime="20210920 14:27:52.459"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:27:52.465" level="INFO">Running command 'ozone sh volume info /39609-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:28:00.210" level="INFO">${rc} = 255</msg>
<msg timestamp="20210920 14:28:00.210" level="INFO">${output} = VOLUME_NOT_FOUND Volume 39609-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210920 14:27:52.462" endtime="20210920 14:28:00.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:28:00.212" level="INFO">VOLUME_NOT_FOUND Volume 39609-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210920 14:28:00.211" endtime="20210920 14:28:00.212"/>
</kw>
<msg timestamp="20210920 14:28:00.212" level="INFO">${result} = VOLUME_NOT_FOUND Volume 39609-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210920 14:27:52.461" endtime="20210920 14:28:00.212"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:28:00.213" endtime="20210920 14:28:00.213"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:28:00.220" level="INFO">Running command 'ozone sh volume create /39609-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:28:06.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:28:06.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:28:00.217" endtime="20210920 14:28:06.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:28:06.066" level="INFO"/>
<status status="PASS" starttime="20210920 14:28:06.064" endtime="20210920 14:28:06.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:28:06.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:28:06.066" endtime="20210920 14:28:06.068"/>
</kw>
<status status="PASS" starttime="20210920 14:28:00.216" endtime="20210920 14:28:06.069"/>
</kw>
<msg timestamp="20210920 14:28:06.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:28:00.215" endtime="20210920 14:28:06.069"/>
</kw>
<msg timestamp="20210920 14:28:06.070" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210920 14:28:00.213" endtime="20210920 14:28:06.070"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:28:06.070" endtime="20210920 14:28:06.071"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:28:06.078" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="39609-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:28:13.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:28:13.325" level="INFO">${output} = {
  "metadata": {},
  "name": "39609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210920 14:28:06.075" endtime="20210920 14:28:13.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:28:13.327" level="INFO">{
  "metadata": {},
  "name": "39609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-20T14:28:05.915Z",
  "modificationTime": "2021-09-20T14:28:05.915Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210920 14:28:13.326" endtime="20210920 14:28:13.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:28:13.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:28:13.327" endtime="20210920 14:28:13.328"/>
</kw>
<status status="PASS" starttime="20210920 14:28:06.074" endtime="20210920 14:28:13.328"/>
</kw>
<msg timestamp="20210920 14:28:13.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:28:06.074" endtime="20210920 14:28:13.329"/>
</kw>
<msg timestamp="20210920 14:28:13.330" level="INFO">${result} = {
  "metadata": {},
  "name": "39609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210920 14:28:06.072" endtime="20210920 14:28:13.330"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:28:13.330" endtime="20210920 14:28:13.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:28:13.339" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="39609-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:28:21.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:28:21.666" level="INFO">${output} = {
  "metadata": {},
  "name": "39609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210920 14:28:13.335" endtime="20210920 14:28:21.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:28:21.667" level="INFO">{
  "metadata": {},
  "name": "39609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-20T14:28:05.915Z",
  "modificationTime": "2021-09-20T14:28:05.915Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210920 14:28:21.666" endtime="20210920 14:28:21.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:28:21.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:28:21.667" endtime="20210920 14:28:21.668"/>
</kw>
<status status="PASS" starttime="20210920 14:28:13.334" endtime="20210920 14:28:21.670"/>
</kw>
<msg timestamp="20210920 14:28:21.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:28:13.333" endtime="20210920 14:28:21.670"/>
</kw>
<msg timestamp="20210920 14:28:21.671" level="INFO">${result} = {
  "metadata": {},
  "name": "39609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210920 14:28:13.332" endtime="20210920 14:28:21.671"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210920 14:28:21.672" endtime="20210920 14:28:21.673"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:28:21.682" level="INFO">Running command 'ozone sh volume setquota /39609-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:28:29.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:28:29.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:28:21.678" endtime="20210920 14:28:29.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:28:29.817" level="INFO"/>
<status status="PASS" starttime="20210920 14:28:29.815" endtime="20210920 14:28:29.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:28:29.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:28:29.818" endtime="20210920 14:28:29.819"/>
</kw>
<status status="PASS" starttime="20210920 14:28:21.676" endtime="20210920 14:28:29.820"/>
</kw>
<msg timestamp="20210920 14:28:29.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:28:21.675" endtime="20210920 14:28:29.820"/>
</kw>
<status status="PASS" starttime="20210920 14:28:21.674" endtime="20210920 14:28:29.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:28:29.830" level="INFO">Running command 'ozone sh volume info /39609-rpcwoscheme | jq -r '. | select(.name=="39609-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:28:38.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:28:38.409" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:28:29.826" endtime="20210920 14:28:38.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:28:38.410" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210920 14:28:38.409" endtime="20210920 14:28:38.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:28:38.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:28:38.411" endtime="20210920 14:28:38.412"/>
</kw>
<status status="PASS" starttime="20210920 14:28:29.825" endtime="20210920 14:28:38.413"/>
</kw>
<msg timestamp="20210920 14:28:38.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:28:29.824" endtime="20210920 14:28:38.413"/>
</kw>
<msg timestamp="20210920 14:28:38.413" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:28:29.821" endtime="20210920 14:28:38.414"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:28:38.414" endtime="20210920 14:28:38.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:28:38.420" level="INFO">Running command 'ozone sh bucket create /39609-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:28:44.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:28:44.967" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:28:38.418" endtime="20210920 14:28:44.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:28:44.969" level="INFO"/>
<status status="PASS" starttime="20210920 14:28:44.968" endtime="20210920 14:28:44.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:28:44.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:28:44.969" endtime="20210920 14:28:44.970"/>
</kw>
<status status="PASS" starttime="20210920 14:28:38.417" endtime="20210920 14:28:44.970"/>
</kw>
<msg timestamp="20210920 14:28:44.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:28:38.416" endtime="20210920 14:28:44.970"/>
</kw>
<status status="PASS" starttime="20210920 14:28:38.415" endtime="20210920 14:28:44.971"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:28:44.977" level="INFO">Running command 'ozone sh bucket info /39609-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:28:53.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:28:53.364" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210920 14:28:44.974" endtime="20210920 14:28:53.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:28:53.366" level="INFO">DISK</msg>
<status status="PASS" starttime="20210920 14:28:53.365" endtime="20210920 14:28:53.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:28:53.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:28:53.366" endtime="20210920 14:28:53.367"/>
</kw>
<status status="PASS" starttime="20210920 14:28:44.973" endtime="20210920 14:28:53.367"/>
</kw>
<msg timestamp="20210920 14:28:53.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:28:44.973" endtime="20210920 14:28:53.368"/>
</kw>
<msg timestamp="20210920 14:28:53.368" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210920 14:28:44.971" endtime="20210920 14:28:53.368"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:28:53.369" endtime="20210920 14:28:53.369"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:28:53.377" level="INFO">Running command 'ozone sh bucket info /39609-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:28:59.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:28:59.678" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:28:53.374" endtime="20210920 14:28:59.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:28:59.684" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210920 14:28:59.679" endtime="20210920 14:28:59.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:28:59.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:28:59.685" endtime="20210920 14:28:59.686"/>
</kw>
<status status="PASS" starttime="20210920 14:28:53.372" endtime="20210920 14:28:59.686"/>
</kw>
<msg timestamp="20210920 14:28:59.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:28:53.371" endtime="20210920 14:28:59.686"/>
</kw>
<msg timestamp="20210920 14:28:59.687" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210920 14:28:53.369" endtime="20210920 14:28:59.687"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:28:59.687" endtime="20210920 14:28:59.687"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:28:59.700" level="INFO">Running command 'ozone sh bucket info /39609-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:29:08.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:29:08.002" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210920 14:28:59.697" endtime="20210920 14:29:08.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:29:08.003" level="INFO">100</msg>
<status status="PASS" starttime="20210920 14:29:08.002" endtime="20210920 14:29:08.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:29:08.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:29:08.003" endtime="20210920 14:29:08.005"/>
</kw>
<status status="PASS" starttime="20210920 14:28:59.696" endtime="20210920 14:29:08.006"/>
</kw>
<msg timestamp="20210920 14:29:08.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:28:59.692" endtime="20210920 14:29:08.006"/>
</kw>
<msg timestamp="20210920 14:29:08.006" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210920 14:28:59.688" endtime="20210920 14:29:08.006"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:29:08.006" endtime="20210920 14:29:08.007"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:29:08.015" level="INFO">Running command 'ozone sh bucket setquota /39609-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:29:14.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:29:14.029" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:29:08.011" endtime="20210920 14:29:14.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:29:14.032" level="INFO"/>
<status status="PASS" starttime="20210920 14:29:14.031" endtime="20210920 14:29:14.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:29:14.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:29:14.033" endtime="20210920 14:29:14.034"/>
</kw>
<status status="PASS" starttime="20210920 14:29:08.009" endtime="20210920 14:29:14.035"/>
</kw>
<msg timestamp="20210920 14:29:14.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:29:08.008" endtime="20210920 14:29:14.036"/>
</kw>
<status status="PASS" starttime="20210920 14:29:08.007" endtime="20210920 14:29:14.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:29:14.045" level="INFO">Running command 'ozone sh bucket info /39609-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:29:22.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:29:22.406" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210920 14:29:14.041" endtime="20210920 14:29:22.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:29:22.408" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210920 14:29:22.407" endtime="20210920 14:29:22.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:29:22.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:29:22.408" endtime="20210920 14:29:22.409"/>
</kw>
<status status="PASS" starttime="20210920 14:29:14.040" endtime="20210920 14:29:22.410"/>
</kw>
<msg timestamp="20210920 14:29:22.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:29:14.039" endtime="20210920 14:29:22.410"/>
</kw>
<msg timestamp="20210920 14:29:22.411" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210920 14:29:14.037" endtime="20210920 14:29:22.411"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:29:22.411" endtime="20210920 14:29:22.412"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:29:22.417" level="INFO">Running command 'ozone sh bucket info /39609-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:29:31.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:29:31.351" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210920 14:29:22.415" endtime="20210920 14:29:31.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:29:31.353" level="INFO">1000</msg>
<status status="PASS" starttime="20210920 14:29:31.352" endtime="20210920 14:29:31.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:29:31.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:29:31.353" endtime="20210920 14:29:31.354"/>
</kw>
<status status="PASS" starttime="20210920 14:29:22.414" endtime="20210920 14:29:31.354"/>
</kw>
<msg timestamp="20210920 14:29:31.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:29:22.414" endtime="20210920 14:29:31.354"/>
</kw>
<msg timestamp="20210920 14:29:31.355" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210920 14:29:22.412" endtime="20210920 14:29:31.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:29:31.355" endtime="20210920 14:29:31.356"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:29:31.362" level="INFO">Running command 'ozone sh bucket list /39609-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:29:39.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:29:39.945" level="INFO">${output} = 39609-rpcwoscheme</msg>
<status status="PASS" starttime="20210920 14:29:31.359" endtime="20210920 14:29:39.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:29:39.947" level="INFO">39609-rpcwoscheme</msg>
<status status="PASS" starttime="20210920 14:29:39.946" endtime="20210920 14:29:39.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:29:39.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:29:39.947" endtime="20210920 14:29:39.948"/>
</kw>
<status status="PASS" starttime="20210920 14:29:31.358" endtime="20210920 14:29:39.949"/>
</kw>
<msg timestamp="20210920 14:29:39.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:29:31.358" endtime="20210920 14:29:39.949"/>
</kw>
<msg timestamp="20210920 14:29:39.949" level="INFO">${result} = 39609-rpcwoscheme</msg>
<status status="PASS" starttime="20210920 14:29:31.356" endtime="20210920 14:29:39.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210920 14:29:39.949" endtime="20210920 14:29:39.950"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:29:39.956" level="INFO">Running command 'ozone sh key put /39609-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:32:51.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:32:51.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:29:39.953" endtime="20210920 14:32:51.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:32:51.177" level="INFO"/>
<status status="PASS" starttime="20210920 14:32:51.175" endtime="20210920 14:32:51.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:32:51.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:32:51.177" endtime="20210920 14:32:51.178"/>
</kw>
<status status="PASS" starttime="20210920 14:29:39.953" endtime="20210920 14:32:51.178"/>
</kw>
<msg timestamp="20210920 14:32:51.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:29:39.953" endtime="20210920 14:32:51.178"/>
</kw>
<status status="PASS" starttime="20210920 14:29:39.952" endtime="20210920 14:32:51.179"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:32:51.183" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:32:51.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 14:32:51.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 14:32:51.180" endtime="20210920 14:32:51.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 14:32:51.189" level="INFO"/>
<status status="PASS" starttime="20210920 14:32:51.188" endtime="20210920 14:32:51.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 14:32:51.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 14:32:51.190" endtime="20210920 14:32:51.191"/>
</kw>
<status status="PASS" starttime="20210920 14:32:51.180" endtime="20210920 14:32:51.192"/>
</kw>
<msg timestamp="20210920 14:32:51.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 14:32:51.179" endtime="20210920 14:32:51.192"/>
</kw>
<status status="PASS" starttime="20210920 14:32:51.179" endtime="20210920 14:32:51.192"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 14:32:51.198" level="INFO">Running command 'ozone sh key get /39609-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 14:32:52.394" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210920 14:32:51.195" endtime="20210920 14:32:52.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.397" endtime="20210920 14:32:52.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.401" endtime="20210920 14:32:52.401"/>
</kw>
<status status="FAIL" starttime="20210920 14:32:51.194" endtime="20210920 14:32:52.402"/>
</kw>
<msg timestamp="20210920 14:32:52.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210920 14:32:51.194" endtime="20210920 14:32:52.402"/>
</kw>
<status status="FAIL" starttime="20210920 14:32:51.192" endtime="20210920 14:32:52.402"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.403" endtime="20210920 14:32:52.404"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.405" endtime="20210920 14:32:52.406"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.407" endtime="20210920 14:32:52.407"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.409" endtime="20210920 14:32:52.409"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.411" endtime="20210920 14:32:52.411"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.413" endtime="20210920 14:32:52.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.416" endtime="20210920 14:32:52.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.417" endtime="20210920 14:32:52.417"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.418" endtime="20210920 14:32:52.418"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.425" endtime="20210920 14:32:52.425"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.427" endtime="20210920 14:32:52.427"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.429" endtime="20210920 14:32:52.429"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.429" endtime="20210920 14:32:52.429"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.429" endtime="20210920 14:32:52.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.431" endtime="20210920 14:32:52.431"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.433" endtime="20210920 14:32:52.434"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.436" endtime="20210920 14:32:52.437"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.438" endtime="20210920 14:32:52.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.438" endtime="20210920 14:32:52.439"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.439" endtime="20210920 14:32:52.439"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.441" endtime="20210920 14:32:52.441"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.443" endtime="20210920 14:32:52.445"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.446" endtime="20210920 14:32:52.446"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.446" endtime="20210920 14:32:52.446"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.447" endtime="20210920 14:32:52.447"/>
</kw>
<status status="FAIL" starttime="20210920 14:29:39.951" endtime="20210920 14:32:52.448"/>
</kw>
<status status="FAIL" starttime="20210920 14:29:39.951" endtime="20210920 14:32:52.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.449" endtime="20210920 14:32:52.449"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.449" endtime="20210920 14:32:52.449"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.450" endtime="20210920 14:32:52.450"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.450" endtime="20210920 14:32:52.453"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.454" endtime="20210920 14:32:52.454"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.455" endtime="20210920 14:32:52.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.455" endtime="20210920 14:32:52.455"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.457" endtime="20210920 14:32:52.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.457" endtime="20210920 14:32:52.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.457" endtime="20210920 14:32:52.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.457" endtime="20210920 14:32:52.457"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.457" endtime="20210920 14:32:52.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.458" endtime="20210920 14:32:52.461"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.462" endtime="20210920 14:32:52.463"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.463" endtime="20210920 14:32:52.463"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.465" endtime="20210920 14:32:52.465"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.465" endtime="20210920 14:32:52.465"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.467" endtime="20210920 14:32:52.467"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.469" endtime="20210920 14:32:52.469"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.469" endtime="20210920 14:32:52.471"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.471" endtime="20210920 14:32:52.471"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.472" endtime="20210920 14:32:52.472"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.473" endtime="20210920 14:32:52.475"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210920 14:32:52.477" endtime="20210920 14:32:52.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.478" endtime="20210920 14:32:52.478"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210920 14:32:52.478" endtime="20210920 14:32:52.478"/>
</kw>
<status status="FAIL" starttime="20210920 14:27:52.459" endtime="20210920 14:32:52.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210920 14:27:52.391" endtime="20210920 14:32:52.479">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210920 14:07:41.803" endtime="20210920 14:32:52.489"/>
</suite>
<status status="FAIL" starttime="20210920 13:42:56.168" endtime="20210920 14:32:52.498"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:42:50.402" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:42:50.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:42:50.410" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210920 13:42:50.398" endtime="20210920 13:42:50.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:42:50.412" level="INFO">scm</msg>
<status status="PASS" starttime="20210920 13:42:50.411" endtime="20210920 13:42:50.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:42:50.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:42:50.412" endtime="20210920 13:42:50.413"/>
</kw>
<status status="PASS" starttime="20210920 13:42:50.397" endtime="20210920 13:42:50.413"/>
</kw>
<msg timestamp="20210920 13:42:50.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:42:50.397" endtime="20210920 13:42:50.414"/>
</kw>
<msg timestamp="20210920 13:42:50.415" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210920 13:42:50.396" endtime="20210920 13:42:50.415"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210920 13:42:50.415" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210920 13:42:50.415" endtime="20210920 13:42:50.415"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210920 13:42:50.421" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210920 13:42:50.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210920 13:42:50.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210920 13:42:50.418" endtime="20210920 13:42:50.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210920 13:42:50.431" level="INFO"/>
<status status="PASS" starttime="20210920 13:42:50.430" endtime="20210920 13:42:50.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210920 13:42:50.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210920 13:42:50.431" endtime="20210920 13:42:50.432"/>
</kw>
<status status="PASS" starttime="20210920 13:42:50.417" endtime="20210920 13:42:50.433"/>
</kw>
<msg timestamp="20210920 13:42:50.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210920 13:42:50.417" endtime="20210920 13:42:50.433"/>
</kw>
<status status="PASS" starttime="20210920 13:42:50.416" endtime="20210920 13:42:50.433"/>
</kw>
<status status="PASS" starttime="20210920 13:42:50.416" endtime="20210920 13:42:50.433"/>
</kw>
<status status="PASS" starttime="20210920 13:42:50.395" endtime="20210920 13:42:50.433"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210920 13:42:50.394" endtime="20210920 13:42:50.434"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210920 13:42:50.328" endtime="20210920 13:42:50.435"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2996437"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
