<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20210921 13:14:12.683" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:24:26.384" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:24:26.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:24:26.388" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:24:26.381" endtime="20210921 12:24:26.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:24:26.390" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:24:26.389" endtime="20210921 12:24:26.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:24:26.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:24:26.390" endtime="20210921 12:24:26.391"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.380" endtime="20210921 12:24:26.391"/>
</kw>
<msg timestamp="20210921 12:24:26.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:24:26.380" endtime="20210921 12:24:26.391"/>
</kw>
<msg timestamp="20210921 12:24:26.392" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210921 12:24:26.379" endtime="20210921 12:24:26.392"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:24:26.396" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:24:26.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:24:26.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:24:26.394" endtime="20210921 12:24:26.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:24:26.405" level="INFO"/>
<status status="PASS" starttime="20210921 12:24:26.404" endtime="20210921 12:24:26.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:24:26.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:24:26.405" endtime="20210921 12:24:26.405"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.394" endtime="20210921 12:24:26.406"/>
</kw>
<msg timestamp="20210921 12:24:26.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:24:26.393" endtime="20210921 12:24:26.406"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.393" endtime="20210921 12:24:26.406"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.392" endtime="20210921 12:24:26.407"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.379" endtime="20210921 12:24:26.407"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.378" endtime="20210921 12:24:26.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:24:26.411" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:24:26.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:24:26.546" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210921 12:24:26.409" endtime="20210921 12:24:26.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:24:26.548" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Tue, 21 Sep 2021 12:24:26 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCB1Yiyk+wbRx4M2lTxaf9m+IY1pGFNstPbBWYlxmXlBFArGGnrGEY2tJEMHm00L1DntX+S/IOyfy+5zbDHzmjlOji
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1632263066533&amp;s=V2YDcletURf5cCq7clJrKeFqbSvpQGTxNlOaQgZNvo0="; Path=/; HttpOnly
Last-Modified: Tue, 21 Sep 2021 12:10:42 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210921 12:24:26.547" endtime="20210921 12:24:26.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:24:26.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:24:26.548" endtime="20210921 12:24:26.549"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.408" endtime="20210921 12:24:26.549"/>
</kw>
<msg timestamp="20210921 12:24:26.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:24:26.408" endtime="20210921 12:24:26.550"/>
</kw>
<msg timestamp="20210921 12:24:26.550" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210921 12:24:26.407" endtime="20210921 12:24:26.550"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:24:26.550" endtime="20210921 12:24:26.551"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210921 12:24:26.376" endtime="20210921 12:24:26.551"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:24:26.557" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:24:26.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:24:26.562" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:24:26.555" endtime="20210921 12:24:26.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:24:26.563" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:24:26.562" endtime="20210921 12:24:26.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:24:26.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:24:26.563" endtime="20210921 12:24:26.564"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.555" endtime="20210921 12:24:26.564"/>
</kw>
<msg timestamp="20210921 12:24:26.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:24:26.554" endtime="20210921 12:24:26.564"/>
</kw>
<msg timestamp="20210921 12:24:26.564" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:24:26.554" endtime="20210921 12:24:26.564"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:24:26.567" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:24:26.565" endtime="20210921 12:24:26.567"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:24:26.571" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:24:26.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:24:26.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:24:26.569" endtime="20210921 12:24:26.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:24:26.581" level="INFO"/>
<status status="PASS" starttime="20210921 12:24:26.580" endtime="20210921 12:24:26.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:24:26.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:24:26.581" endtime="20210921 12:24:26.582"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.568" endtime="20210921 12:24:26.583"/>
</kw>
<msg timestamp="20210921 12:24:26.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:24:26.568" endtime="20210921 12:24:26.583"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.567" endtime="20210921 12:24:26.583"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.567" endtime="20210921 12:24:26.583"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.553" endtime="20210921 12:24:26.584"/>
</kw>
<status status="PASS" starttime="20210921 12:24:26.553" endtime="20210921 12:24:26.584"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:24:26.588" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:29:26.553" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210921 12:24:26.586" endtime="20210921 12:29:26.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210921 12:29:26.554" endtime="20210921 12:29:26.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210921 12:29:26.554" endtime="20210921 12:29:26.554"/>
</kw>
<status status="FAIL" starttime="20210921 12:24:26.585" endtime="20210921 12:29:26.554"/>
</kw>
<msg timestamp="20210921 12:29:26.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210921 12:24:26.585" endtime="20210921 12:29:26.555"/>
</kw>
<status status="FAIL" starttime="20210921 12:24:26.584" endtime="20210921 12:29:26.555"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210921 12:29:26.556" endtime="20210921 12:29:26.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 12:29:26.556" endtime="20210921 12:29:26.556"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210921 12:24:26.552" endtime="20210921 12:29:26.556">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210921 12:24:26.344" endtime="20210921 12:29:26.557"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:29:26.568" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:29:29.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:29:29.097" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210921 12:29:26.566" endtime="20210921 12:29:29.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:29:29.099" level="INFO">om</msg>
<status status="PASS" starttime="20210921 12:29:29.098" endtime="20210921 12:29:29.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:29:29.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:29:29.100" endtime="20210921 12:29:29.101"/>
</kw>
<status status="PASS" starttime="20210921 12:29:26.565" endtime="20210921 12:29:29.101"/>
</kw>
<msg timestamp="20210921 12:29:29.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:29:26.565" endtime="20210921 12:29:29.101"/>
</kw>
<msg timestamp="20210921 12:29:29.101" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210921 12:29:26.564" endtime="20210921 12:29:29.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:29:29.102" endtime="20210921 12:29:29.102"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:29:29.107" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:29:32.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:29:32.433" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210921 12:29:29.104" endtime="20210921 12:29:32.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:29:32.435" level="INFO">om</msg>
<status status="PASS" starttime="20210921 12:29:32.434" endtime="20210921 12:29:32.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:29:32.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:29:32.435" endtime="20210921 12:29:32.435"/>
</kw>
<status status="PASS" starttime="20210921 12:29:29.103" endtime="20210921 12:29:32.436"/>
</kw>
<msg timestamp="20210921 12:29:32.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:29:29.103" endtime="20210921 12:29:32.436"/>
</kw>
<msg timestamp="20210921 12:29:32.436" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210921 12:29:29.102" endtime="20210921 12:29:32.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:29:32.437" endtime="20210921 12:29:32.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210921 12:29:26.564" endtime="20210921 12:29:32.437"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:29:32.443" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:29:34.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:29:34.296" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:29:32.441" endtime="20210921 12:29:34.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:29:34.297" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:29:34.296" endtime="20210921 12:29:34.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:29:34.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:29:34.298" endtime="20210921 12:29:34.298"/>
</kw>
<status status="PASS" starttime="20210921 12:29:32.440" endtime="20210921 12:29:34.299"/>
</kw>
<msg timestamp="20210921 12:29:34.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:29:32.440" endtime="20210921 12:29:34.299"/>
</kw>
<msg timestamp="20210921 12:29:34.299" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210921 12:29:32.439" endtime="20210921 12:29:34.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:29:34.299" endtime="20210921 12:29:34.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:29:34.304" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:29:37.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:29:37.264" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:29:34.302" endtime="20210921 12:29:37.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:29:37.267" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:29:37.266" endtime="20210921 12:29:37.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:29:37.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:29:37.268" endtime="20210921 12:29:37.269"/>
</kw>
<status status="PASS" starttime="20210921 12:29:34.301" endtime="20210921 12:29:37.269"/>
</kw>
<msg timestamp="20210921 12:29:37.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:29:34.301" endtime="20210921 12:29:37.270"/>
</kw>
<msg timestamp="20210921 12:29:37.270" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210921 12:29:34.300" endtime="20210921 12:29:37.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:29:37.270" endtime="20210921 12:29:37.271"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210921 12:29:32.438" endtime="20210921 12:29:37.272"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:29:37.281" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:29:39.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:29:39.812" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210921 12:29:37.278" endtime="20210921 12:29:39.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:29:39.813" level="INFO">om</msg>
<status status="PASS" starttime="20210921 12:29:39.813" endtime="20210921 12:29:39.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:29:39.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:29:39.814" endtime="20210921 12:29:39.814"/>
</kw>
<status status="PASS" starttime="20210921 12:29:37.277" endtime="20210921 12:29:39.815"/>
</kw>
<msg timestamp="20210921 12:29:39.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:29:37.276" endtime="20210921 12:29:39.815"/>
</kw>
<msg timestamp="20210921 12:29:39.815" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210921 12:29:37.275" endtime="20210921 12:29:39.815"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:29:39.815" endtime="20210921 12:29:39.816"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:29:39.817" endtime="20210921 12:29:39.818"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:29:39.824" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:29:42.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:29:42.455" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210921 12:29:39.821" endtime="20210921 12:29:42.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:29:42.456" level="INFO">om</msg>
<status status="PASS" starttime="20210921 12:29:42.455" endtime="20210921 12:29:42.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:29:42.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:29:42.456" endtime="20210921 12:29:42.457"/>
</kw>
<status status="PASS" starttime="20210921 12:29:39.819" endtime="20210921 12:29:42.457"/>
</kw>
<msg timestamp="20210921 12:29:42.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:29:39.819" endtime="20210921 12:29:42.457"/>
</kw>
<msg timestamp="20210921 12:29:42.457" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210921 12:29:39.818" endtime="20210921 12:29:42.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:29:42.458" endtime="20210921 12:29:42.458"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:29:42.458" endtime="20210921 12:29:42.459"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210921 12:29:37.273" endtime="20210921 12:29:42.459"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:29:42.466" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:29:45.016" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:29:45.017" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210921 12:29:42.463" endtime="20210921 12:29:45.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:29:45.018" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210921 12:29:45.017" endtime="20210921 12:29:45.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:29:45.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:29:45.018" endtime="20210921 12:29:45.019"/>
</kw>
<msg timestamp="20210921 12:29:45.019" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210921 12:29:42.462" endtime="20210921 12:29:45.019"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:29:45.020" endtime="20210921 12:29:45.020"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:29:45.023" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:29:47.767" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:29:47.768" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210921 12:29:45.021" endtime="20210921 12:29:47.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:29:47.771" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210921 12:29:47.769" endtime="20210921 12:29:47.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:29:47.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:29:47.771" endtime="20210921 12:29:47.774"/>
</kw>
<msg timestamp="20210921 12:29:47.775" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210921 12:29:45.020" endtime="20210921 12:29:47.775"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:29:47.775" endtime="20210921 12:29:47.777"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210921 12:29:42.460" endtime="20210921 12:29:47.777"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210921 12:29:26.559" endtime="20210921 12:29:47.779"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210921 12:29:47.807" level="INFO">${random} = 94173</msg>
<status status="PASS" starttime="20210921 12:29:47.806" endtime="20210921 12:29:47.807"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:29:47.809" level="INFO">${source} = 94173-source</msg>
<status status="PASS" starttime="20210921 12:29:47.807" endtime="20210921 12:29:47.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:29:47.811" level="INFO">${target} = 94173-target</msg>
<status status="PASS" starttime="20210921 12:29:47.809" endtime="20210921 12:29:47.811"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:29:47.815" level="INFO">Running command 'ozone sh volume create 94173-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:29:55.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:29:55.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:29:47.813" endtime="20210921 12:29:55.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:29:55.669" level="INFO"/>
<status status="PASS" starttime="20210921 12:29:55.669" endtime="20210921 12:29:55.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:29:55.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:29:55.670" endtime="20210921 12:29:55.670"/>
</kw>
<status status="PASS" starttime="20210921 12:29:47.812" endtime="20210921 12:29:55.671"/>
</kw>
<msg timestamp="20210921 12:29:55.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:29:47.812" endtime="20210921 12:29:55.671"/>
</kw>
<status status="PASS" starttime="20210921 12:29:47.811" endtime="20210921 12:29:55.671"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:29:55.676" level="INFO">Running command 'ozone sh volume create 94173-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:30:02.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:30:02.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:29:55.673" endtime="20210921 12:30:02.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:30:02.759" level="INFO"/>
<status status="PASS" starttime="20210921 12:30:02.758" endtime="20210921 12:30:02.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:30:02.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:30:02.759" endtime="20210921 12:30:02.760"/>
</kw>
<status status="PASS" starttime="20210921 12:29:55.673" endtime="20210921 12:30:02.760"/>
</kw>
<msg timestamp="20210921 12:30:02.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:29:55.672" endtime="20210921 12:30:02.760"/>
</kw>
<status status="PASS" starttime="20210921 12:29:55.672" endtime="20210921 12:30:02.760"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:30:02.766" level="INFO">Running command 'ozone sh bucket create 94173-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:30:08.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:30:08.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:30:02.764" endtime="20210921 12:30:08.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:30:08.656" level="INFO"/>
<status status="PASS" starttime="20210921 12:30:08.655" endtime="20210921 12:30:08.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:30:08.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:30:08.656" endtime="20210921 12:30:08.657"/>
</kw>
<status status="PASS" starttime="20210921 12:30:02.764" endtime="20210921 12:30:08.657"/>
</kw>
<msg timestamp="20210921 12:30:08.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:30:02.762" endtime="20210921 12:30:08.657"/>
</kw>
<status status="PASS" starttime="20210921 12:30:02.761" endtime="20210921 12:30:08.657"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:30:08.663" level="INFO">Running command 'ozone sh key put 94173-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:33:19.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:33:19.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:30:08.660" endtime="20210921 12:33:19.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:33:19.800" level="INFO"/>
<status status="PASS" starttime="20210921 12:33:19.800" endtime="20210921 12:33:19.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:33:19.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:33:19.800" endtime="20210921 12:33:19.801"/>
</kw>
<status status="PASS" starttime="20210921 12:30:08.660" endtime="20210921 12:33:19.801"/>
</kw>
<msg timestamp="20210921 12:33:19.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:30:08.659" endtime="20210921 12:33:19.802"/>
</kw>
<status status="PASS" starttime="20210921 12:30:08.658" endtime="20210921 12:33:19.802"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:33:19.807" level="INFO">Running command 'ozone sh bucket create 94173-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:33:27.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:33:27.344" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:33:19.804" endtime="20210921 12:33:27.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:33:27.346" level="INFO"/>
<status status="PASS" starttime="20210921 12:33:27.345" endtime="20210921 12:33:27.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:33:27.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:33:27.346" endtime="20210921 12:33:27.347"/>
</kw>
<status status="PASS" starttime="20210921 12:33:19.803" endtime="20210921 12:33:27.348"/>
</kw>
<msg timestamp="20210921 12:33:27.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:33:19.803" endtime="20210921 12:33:27.348"/>
</kw>
<status status="PASS" starttime="20210921 12:33:19.802" endtime="20210921 12:33:27.349"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:33:27.354" level="INFO">Running command 'ozone sh bucket link 94173-source/readable-bucket 94173-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:33:33.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:33:33.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:33:27.351" endtime="20210921 12:33:33.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:33:33.206" level="INFO"/>
<status status="PASS" starttime="20210921 12:33:33.205" endtime="20210921 12:33:33.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:33:33.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:33:33.206" endtime="20210921 12:33:33.207"/>
</kw>
<status status="PASS" starttime="20210921 12:33:27.351" endtime="20210921 12:33:33.207"/>
</kw>
<msg timestamp="20210921 12:33:33.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:33:27.350" endtime="20210921 12:33:33.207"/>
</kw>
<status status="PASS" starttime="20210921 12:33:27.349" endtime="20210921 12:33:33.207"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:33:33.211" level="INFO">Running command 'ozone sh bucket link 94173-source/readable-bucket 94173-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:33:40.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:33:40.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:33:33.209" endtime="20210921 12:33:40.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:33:40.726" level="INFO"/>
<status status="PASS" starttime="20210921 12:33:40.725" endtime="20210921 12:33:40.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:33:40.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:33:40.726" endtime="20210921 12:33:40.726"/>
</kw>
<status status="PASS" starttime="20210921 12:33:33.209" endtime="20210921 12:33:40.727"/>
</kw>
<msg timestamp="20210921 12:33:40.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:33:33.208" endtime="20210921 12:33:40.727"/>
</kw>
<status status="PASS" starttime="20210921 12:33:33.208" endtime="20210921 12:33:40.727"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:33:40.732" level="INFO">Running command 'ozone sh bucket link 94173-source/unreadable-bucket 94173-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:33:47.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:33:47.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:33:40.729" endtime="20210921 12:33:47.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:33:47.865" level="INFO"/>
<status status="PASS" starttime="20210921 12:33:47.865" endtime="20210921 12:33:47.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:33:47.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:33:47.865" endtime="20210921 12:33:47.866"/>
</kw>
<status status="PASS" starttime="20210921 12:33:40.729" endtime="20210921 12:33:47.866"/>
</kw>
<msg timestamp="20210921 12:33:47.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:33:40.728" endtime="20210921 12:33:47.867"/>
</kw>
<status status="PASS" starttime="20210921 12:33:40.727" endtime="20210921 12:33:47.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:33:47.870" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94173-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:33:53.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:33:53.698" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:33:47.868" endtime="20210921 12:33:53.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:33:53.705" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:33:53.701" endtime="20210921 12:33:53.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:33:53.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:33:53.705" endtime="20210921 12:33:53.706"/>
</kw>
<status status="PASS" starttime="20210921 12:33:47.868" endtime="20210921 12:33:53.707"/>
</kw>
<msg timestamp="20210921 12:33:53.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:33:47.868" endtime="20210921 12:33:53.708"/>
</kw>
<status status="PASS" starttime="20210921 12:33:47.867" endtime="20210921 12:33:53.708"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:33:53.717" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 94173-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:00.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:00.859" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:33:53.713" endtime="20210921 12:34:00.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:00.862" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:34:00.860" endtime="20210921 12:34:00.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:00.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:00.862" endtime="20210921 12:34:00.864"/>
</kw>
<status status="PASS" starttime="20210921 12:33:53.711" endtime="20210921 12:34:00.864"/>
</kw>
<msg timestamp="20210921 12:34:00.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:33:53.711" endtime="20210921 12:34:00.865"/>
</kw>
<status status="PASS" starttime="20210921 12:33:53.710" endtime="20210921 12:34:00.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:00.873" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 94173-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:08.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:08.661" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:34:00.870" endtime="20210921 12:34:08.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:08.663" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:34:08.662" endtime="20210921 12:34:08.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:08.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:08.663" endtime="20210921 12:34:08.663"/>
</kw>
<status status="PASS" starttime="20210921 12:34:00.869" endtime="20210921 12:34:08.664"/>
</kw>
<msg timestamp="20210921 12:34:08.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:34:00.868" endtime="20210921 12:34:08.664"/>
</kw>
<status status="PASS" starttime="20210921 12:34:00.866" endtime="20210921 12:34:08.665"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:08.670" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94173-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:16.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:16.180" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:34:08.667" endtime="20210921 12:34:16.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:16.183" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:34:16.182" endtime="20210921 12:34:16.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:16.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:16.186" endtime="20210921 12:34:16.187"/>
</kw>
<status status="PASS" starttime="20210921 12:34:08.666" endtime="20210921 12:34:16.188"/>
</kw>
<msg timestamp="20210921 12:34:16.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:34:08.666" endtime="20210921 12:34:16.188"/>
</kw>
<status status="PASS" starttime="20210921 12:34:08.665" endtime="20210921 12:34:16.189"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:16.194" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94173-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:21.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:21.631" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:34:16.191" endtime="20210921 12:34:21.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:21.633" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:34:21.632" endtime="20210921 12:34:21.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:21.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:21.633" endtime="20210921 12:34:21.634"/>
</kw>
<status status="PASS" starttime="20210921 12:34:16.190" endtime="20210921 12:34:21.634"/>
</kw>
<msg timestamp="20210921 12:34:21.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:34:16.190" endtime="20210921 12:34:21.635"/>
</kw>
<status status="PASS" starttime="20210921 12:34:16.189" endtime="20210921 12:34:21.635"/>
</kw>
<status status="PASS" starttime="20210921 12:30:02.761" endtime="20210921 12:34:21.635"/>
</kw>
<status status="PASS" starttime="20210921 12:30:02.761" endtime="20210921 12:34:21.635"/>
</kw>
<status status="PASS" starttime="20210921 12:29:47.805" endtime="20210921 12:34:21.636"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:21.641" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:21.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:21.646" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:34:21.639" endtime="20210921 12:34:21.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:21.647" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:34:21.646" endtime="20210921 12:34:21.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:21.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:21.647" endtime="20210921 12:34:21.649"/>
</kw>
<status status="PASS" starttime="20210921 12:34:21.639" endtime="20210921 12:34:21.649"/>
</kw>
<msg timestamp="20210921 12:34:21.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:34:21.638" endtime="20210921 12:34:21.649"/>
</kw>
<msg timestamp="20210921 12:34:21.649" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:34:21.638" endtime="20210921 12:34:21.650"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:34:21.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:34:21.650" endtime="20210921 12:34:21.652"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:21.656" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:21.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:21.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:34:21.654" endtime="20210921 12:34:21.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:21.884" level="INFO"/>
<status status="PASS" starttime="20210921 12:34:21.883" endtime="20210921 12:34:21.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:21.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:21.884" endtime="20210921 12:34:21.885"/>
</kw>
<status status="PASS" starttime="20210921 12:34:21.654" endtime="20210921 12:34:21.885"/>
</kw>
<msg timestamp="20210921 12:34:21.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:34:21.653" endtime="20210921 12:34:21.886"/>
</kw>
<status status="PASS" starttime="20210921 12:34:21.653" endtime="20210921 12:34:21.886"/>
</kw>
<status status="PASS" starttime="20210921 12:34:21.652" endtime="20210921 12:34:21.886"/>
</kw>
<status status="PASS" starttime="20210921 12:34:21.637" endtime="20210921 12:34:21.886"/>
</kw>
<status status="PASS" starttime="20210921 12:34:21.637" endtime="20210921 12:34:21.886"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:21.891" level="INFO">Running command 'ozone sh bucket link 94173-source/no-such-bucket 94173-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:29.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:29.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:34:21.889" endtime="20210921 12:34:29.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:29.353" level="INFO"/>
<status status="PASS" starttime="20210921 12:34:29.352" endtime="20210921 12:34:29.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:29.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:29.353" endtime="20210921 12:34:29.354"/>
</kw>
<status status="PASS" starttime="20210921 12:34:21.888" endtime="20210921 12:34:29.354"/>
</kw>
<msg timestamp="20210921 12:34:29.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:34:21.888" endtime="20210921 12:34:29.354"/>
</kw>
<status status="PASS" starttime="20210921 12:34:21.886" endtime="20210921 12:34:29.354"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:29.358" level="INFO">Running command 'ozone sh key list 94173-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:36.546" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:34:36.547" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210921 12:34:29.355" endtime="20210921 12:34:36.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:36.550" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210921 12:34:36.548" endtime="20210921 12:34:36.551"/>
</kw>
<msg timestamp="20210921 12:34:36.553" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210921 12:34:29.355" endtime="20210921 12:34:36.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:34:36.553" endtime="20210921 12:34:36.554"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:34:21.636" endtime="20210921 12:34:36.554"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:36.563" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:36.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:36.568" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:34:36.560" endtime="20210921 12:34:36.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:36.569" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:34:36.568" endtime="20210921 12:34:36.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:36.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:36.570" endtime="20210921 12:34:36.572"/>
</kw>
<status status="PASS" starttime="20210921 12:34:36.559" endtime="20210921 12:34:36.572"/>
</kw>
<msg timestamp="20210921 12:34:36.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:34:36.559" endtime="20210921 12:34:36.572"/>
</kw>
<msg timestamp="20210921 12:34:36.573" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:34:36.558" endtime="20210921 12:34:36.573"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:34:36.574" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:34:36.573" endtime="20210921 12:34:36.574"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:36.580" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:36.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:36.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:34:36.577" endtime="20210921 12:34:36.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:36.593" level="INFO"/>
<status status="PASS" starttime="20210921 12:34:36.592" endtime="20210921 12:34:36.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:36.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:36.594" endtime="20210921 12:34:36.595"/>
</kw>
<status status="PASS" starttime="20210921 12:34:36.576" endtime="20210921 12:34:36.596"/>
</kw>
<msg timestamp="20210921 12:34:36.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:34:36.576" endtime="20210921 12:34:36.596"/>
</kw>
<status status="PASS" starttime="20210921 12:34:36.575" endtime="20210921 12:34:36.597"/>
</kw>
<status status="PASS" starttime="20210921 12:34:36.574" endtime="20210921 12:34:36.597"/>
</kw>
<status status="PASS" starttime="20210921 12:34:36.557" endtime="20210921 12:34:36.598"/>
</kw>
<status status="PASS" starttime="20210921 12:34:36.557" endtime="20210921 12:34:36.598"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:36.605" level="INFO">Running command 'ozone sh bucket link 94173-source/bucket1 94173-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:43.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:43.755" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:34:36.602" endtime="20210921 12:34:43.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:43.756" level="INFO"/>
<status status="PASS" starttime="20210921 12:34:43.756" endtime="20210921 12:34:43.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:43.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:43.757" endtime="20210921 12:34:43.757"/>
</kw>
<status status="PASS" starttime="20210921 12:34:36.601" endtime="20210921 12:34:43.758"/>
</kw>
<msg timestamp="20210921 12:34:43.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:34:36.600" endtime="20210921 12:34:43.758"/>
</kw>
<status status="PASS" starttime="20210921 12:34:36.598" endtime="20210921 12:34:43.758"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:43.763" level="INFO">Running command 'ozone sh bucket create 94173-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:34:50.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:34:50.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:34:43.760" endtime="20210921 12:34:50.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:34:50.017" level="INFO"/>
<status status="PASS" starttime="20210921 12:34:50.016" endtime="20210921 12:34:50.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:34:50.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:34:50.017" endtime="20210921 12:34:50.017"/>
</kw>
<status status="PASS" starttime="20210921 12:34:43.759" endtime="20210921 12:34:50.018"/>
</kw>
<msg timestamp="20210921 12:34:50.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:34:43.759" endtime="20210921 12:34:50.018"/>
</kw>
<status status="PASS" starttime="20210921 12:34:43.758" endtime="20210921 12:34:50.018"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:34:50.024" level="INFO">Running command 'ozone sh key put 94173-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:36:36.556" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210921 12:34:50.021" endtime="20210921 12:36:36.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210921 12:36:36.557" endtime="20210921 12:36:36.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210921 12:36:36.558" endtime="20210921 12:36:36.558"/>
</kw>
<status status="FAIL" starttime="20210921 12:34:50.020" endtime="20210921 12:36:36.558"/>
</kw>
<msg timestamp="20210921 12:36:36.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210921 12:34:50.020" endtime="20210921 12:36:36.558"/>
</kw>
<status status="FAIL" starttime="20210921 12:34:50.019" endtime="20210921 12:36:36.559"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210921 12:36:36.559" endtime="20210921 12:36:36.559"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210921 12:34:36.555" endtime="20210921 12:36:36.560">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:36:36.567" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:36:36.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:36:36.572" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:36:36.565" endtime="20210921 12:36:36.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:36:36.575" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:36:36.573" endtime="20210921 12:36:36.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:36:36.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:36:36.575" endtime="20210921 12:36:36.577"/>
</kw>
<status status="PASS" starttime="20210921 12:36:36.564" endtime="20210921 12:36:36.578"/>
</kw>
<msg timestamp="20210921 12:36:36.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:36:36.564" endtime="20210921 12:36:36.578"/>
</kw>
<msg timestamp="20210921 12:36:36.579" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:36:36.563" endtime="20210921 12:36:36.579"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:36:36.580" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:36:36.579" endtime="20210921 12:36:36.580"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:36:36.584" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:36:36.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:36:36.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:36:36.582" endtime="20210921 12:36:36.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:36:36.594" level="INFO"/>
<status status="PASS" starttime="20210921 12:36:36.593" endtime="20210921 12:36:36.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:36:36.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:36:36.595" endtime="20210921 12:36:36.595"/>
</kw>
<status status="PASS" starttime="20210921 12:36:36.581" endtime="20210921 12:36:36.596"/>
</kw>
<msg timestamp="20210921 12:36:36.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:36:36.581" endtime="20210921 12:36:36.596"/>
</kw>
<status status="PASS" starttime="20210921 12:36:36.580" endtime="20210921 12:36:36.597"/>
</kw>
<status status="PASS" starttime="20210921 12:36:36.580" endtime="20210921 12:36:36.597"/>
</kw>
<status status="PASS" starttime="20210921 12:36:36.562" endtime="20210921 12:36:36.597"/>
</kw>
<status status="PASS" starttime="20210921 12:36:36.562" endtime="20210921 12:36:36.597"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:36:36.606" level="INFO">Running command 'ozone sh key put 94173-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:38:36.562" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210921 12:36:36.601" endtime="20210921 12:38:36.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210921 12:38:36.563" endtime="20210921 12:38:36.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210921 12:38:36.563" endtime="20210921 12:38:36.563"/>
</kw>
<status status="FAIL" starttime="20210921 12:36:36.599" endtime="20210921 12:38:36.563"/>
</kw>
<msg timestamp="20210921 12:38:36.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210921 12:36:36.599" endtime="20210921 12:38:36.564"/>
</kw>
<status status="FAIL" starttime="20210921 12:36:36.597" endtime="20210921 12:38:36.564"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210921 12:38:36.564" endtime="20210921 12:38:36.564"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210921 12:36:36.561" endtime="20210921 12:38:36.565">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:38:36.573" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:38:36.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:38:36.578" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:38:36.570" endtime="20210921 12:38:36.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:38:36.580" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:38:36.579" endtime="20210921 12:38:36.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:38:36.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:38:36.581" endtime="20210921 12:38:36.582"/>
</kw>
<status status="PASS" starttime="20210921 12:38:36.569" endtime="20210921 12:38:36.583"/>
</kw>
<msg timestamp="20210921 12:38:36.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:38:36.569" endtime="20210921 12:38:36.583"/>
</kw>
<msg timestamp="20210921 12:38:36.584" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:38:36.568" endtime="20210921 12:38:36.584"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:38:36.585" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:38:36.584" endtime="20210921 12:38:36.585"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:38:36.595" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:38:36.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:38:36.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:38:36.591" endtime="20210921 12:38:36.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:38:36.603" level="INFO"/>
<status status="PASS" starttime="20210921 12:38:36.602" endtime="20210921 12:38:36.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:38:36.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:38:36.603" endtime="20210921 12:38:36.604"/>
</kw>
<status status="PASS" starttime="20210921 12:38:36.589" endtime="20210921 12:38:36.604"/>
</kw>
<msg timestamp="20210921 12:38:36.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:38:36.587" endtime="20210921 12:38:36.604"/>
</kw>
<status status="PASS" starttime="20210921 12:38:36.586" endtime="20210921 12:38:36.605"/>
</kw>
<status status="PASS" starttime="20210921 12:38:36.586" endtime="20210921 12:38:36.605"/>
</kw>
<status status="PASS" starttime="20210921 12:38:36.568" endtime="20210921 12:38:36.605"/>
</kw>
<status status="PASS" starttime="20210921 12:38:36.566" endtime="20210921 12:38:36.605"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:38:36.610" level="INFO">Running command 'ozone sh key list 94173-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:38:42.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:38:42.642" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210921 12:38:36.608" endtime="20210921 12:38:42.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:38:42.644" level="INFO">key1</msg>
<status status="PASS" starttime="20210921 12:38:42.643" endtime="20210921 12:38:42.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:38:42.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:38:42.644" endtime="20210921 12:38:42.646"/>
</kw>
<status status="PASS" starttime="20210921 12:38:36.606" endtime="20210921 12:38:42.646"/>
</kw>
<msg timestamp="20210921 12:38:42.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:38:36.606" endtime="20210921 12:38:42.647"/>
</kw>
<msg timestamp="20210921 12:38:42.647" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210921 12:38:36.605" endtime="20210921 12:38:42.648"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:38:42.653" level="INFO">Running command 'ozone sh key list 94173-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:38:51.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:38:51.468" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210921 12:38:42.650" endtime="20210921 12:38:51.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:38:51.469" level="INFO">key1</msg>
<status status="PASS" starttime="20210921 12:38:51.468" endtime="20210921 12:38:51.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:38:51.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:38:51.469" endtime="20210921 12:38:51.470"/>
</kw>
<status status="PASS" starttime="20210921 12:38:42.649" endtime="20210921 12:38:51.470"/>
</kw>
<msg timestamp="20210921 12:38:51.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:38:42.649" endtime="20210921 12:38:51.470"/>
</kw>
<msg timestamp="20210921 12:38:51.471" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210921 12:38:42.648" endtime="20210921 12:38:51.471"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:38:51.471" endtime="20210921 12:38:51.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:38:51.472" endtime="20210921 12:38:51.472"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210921 12:38:51.473" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210921 12:38:51.472" endtime="20210921 12:38:51.473"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210921 12:38:36.565" endtime="20210921 12:38:51.473">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:38:51.482" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:38:51.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:38:51.486" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:38:51.479" endtime="20210921 12:38:51.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:38:51.488" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:38:51.487" endtime="20210921 12:38:51.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:38:51.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:38:51.488" endtime="20210921 12:38:51.489"/>
</kw>
<status status="PASS" starttime="20210921 12:38:51.478" endtime="20210921 12:38:51.489"/>
</kw>
<msg timestamp="20210921 12:38:51.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:38:51.478" endtime="20210921 12:38:51.489"/>
</kw>
<msg timestamp="20210921 12:38:51.489" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:38:51.477" endtime="20210921 12:38:51.490"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:38:51.491" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:38:51.490" endtime="20210921 12:38:51.491"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:38:51.497" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:38:51.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:38:51.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:38:51.495" endtime="20210921 12:38:51.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:38:51.510" level="INFO"/>
<status status="PASS" starttime="20210921 12:38:51.509" endtime="20210921 12:38:51.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:38:51.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:38:51.511" endtime="20210921 12:38:51.514"/>
</kw>
<status status="PASS" starttime="20210921 12:38:51.494" endtime="20210921 12:38:51.515"/>
</kw>
<msg timestamp="20210921 12:38:51.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:38:51.493" endtime="20210921 12:38:51.515"/>
</kw>
<status status="PASS" starttime="20210921 12:38:51.492" endtime="20210921 12:38:51.515"/>
</kw>
<status status="PASS" starttime="20210921 12:38:51.491" endtime="20210921 12:38:51.515"/>
</kw>
<status status="PASS" starttime="20210921 12:38:51.476" endtime="20210921 12:38:51.516"/>
</kw>
<status status="PASS" starttime="20210921 12:38:51.476" endtime="20210921 12:38:51.516"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:38:51.520" level="INFO">Running command 'ozone sh key delete 94173-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:38:58.771" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:38:58.771" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210921 12:38:51.518" endtime="20210921 12:38:58.771"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:38:58.774" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210921 12:38:58.772" endtime="20210921 12:38:58.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:38:58.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210921 12:38:58.775" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210921 12:38:58.774" endtime="20210921 12:38:58.776"/>
</kw>
<status status="FAIL" starttime="20210921 12:38:51.517" endtime="20210921 12:38:58.776"/>
</kw>
<msg timestamp="20210921 12:38:58.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210921 12:38:51.517" endtime="20210921 12:38:58.776"/>
</kw>
<status status="FAIL" starttime="20210921 12:38:51.516" endtime="20210921 12:38:58.776"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210921 12:38:58.776" endtime="20210921 12:38:58.777"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 12:38:58.777" endtime="20210921 12:38:58.777"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210921 12:38:51.475" endtime="20210921 12:38:58.777">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:38:58.791" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:38:58.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:38:58.795" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:38:58.787" endtime="20210921 12:38:58.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:38:58.798" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:38:58.796" endtime="20210921 12:38:58.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:38:58.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:38:58.798" endtime="20210921 12:38:58.800"/>
</kw>
<status status="PASS" starttime="20210921 12:38:58.787" endtime="20210921 12:38:58.801"/>
</kw>
<msg timestamp="20210921 12:38:58.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:38:58.786" endtime="20210921 12:38:58.801"/>
</kw>
<msg timestamp="20210921 12:38:58.802" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:38:58.785" endtime="20210921 12:38:58.802"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:38:58.803" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:38:58.802" endtime="20210921 12:38:58.803"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:38:58.810" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:38:58.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:38:58.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:38:58.808" endtime="20210921 12:38:58.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:38:58.822" level="INFO"/>
<status status="PASS" starttime="20210921 12:38:58.821" endtime="20210921 12:38:58.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:38:58.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:38:58.823" endtime="20210921 12:38:58.824"/>
</kw>
<status status="PASS" starttime="20210921 12:38:58.807" endtime="20210921 12:38:58.825"/>
</kw>
<msg timestamp="20210921 12:38:58.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:38:58.806" endtime="20210921 12:38:58.825"/>
</kw>
<status status="PASS" starttime="20210921 12:38:58.804" endtime="20210921 12:38:58.826"/>
</kw>
<status status="PASS" starttime="20210921 12:38:58.804" endtime="20210921 12:38:58.826"/>
</kw>
<status status="PASS" starttime="20210921 12:38:58.784" endtime="20210921 12:38:58.826"/>
</kw>
<status status="PASS" starttime="20210921 12:38:58.783" endtime="20210921 12:38:58.826"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:38:58.831" level="INFO">Running command 'ozone sh bucket list 94173-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:07.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:07.085" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210921 12:38:58.829" endtime="20210921 12:39:07.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:07.086" level="INFO">{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:34:28.994Z",
  "modificationTime" : "2021-09-21T12:34:28.994Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:33:47.714Z",
  "modificationTime" : "2021-09-21T12:34:21.466Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:34:43.553Z",
  "modificationTime" : "2021-09-21T12:34:43.553Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:33:33.124Z",
  "modificationTime" : "2021-09-21T12:34:16.044Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:33:40.544Z",
  "modificationTime" : "2021-09-21T12:33:40.544Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210921 12:39:07.085" endtime="20210921 12:39:07.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:07.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:07.086" endtime="20210921 12:39:07.087"/>
</kw>
<status status="PASS" starttime="20210921 12:38:58.828" endtime="20210921 12:39:07.087"/>
</kw>
<msg timestamp="20210921 12:39:07.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:38:58.827" endtime="20210921 12:39:07.088"/>
</kw>
<msg timestamp="20210921 12:39:07.088" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210921 12:38:58.826" endtime="20210921 12:39:07.088"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:39:07.088" endtime="20210921 12:39:07.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:39:07.089" endtime="20210921 12:39:07.089"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:38:58.781" endtime="20210921 12:39:07.090"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:07.097" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:07.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:07.101" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:39:07.094" endtime="20210921 12:39:07.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:07.102" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:39:07.102" endtime="20210921 12:39:07.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:07.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:07.103" endtime="20210921 12:39:07.103"/>
</kw>
<status status="PASS" starttime="20210921 12:39:07.094" endtime="20210921 12:39:07.104"/>
</kw>
<msg timestamp="20210921 12:39:07.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:07.093" endtime="20210921 12:39:07.104"/>
</kw>
<msg timestamp="20210921 12:39:07.107" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:39:07.093" endtime="20210921 12:39:07.107"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:39:07.108" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:39:07.108" endtime="20210921 12:39:07.108"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:07.116" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:07.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:07.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:39:07.111" endtime="20210921 12:39:07.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:07.125" level="INFO"/>
<status status="PASS" starttime="20210921 12:39:07.124" endtime="20210921 12:39:07.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:07.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:07.126" endtime="20210921 12:39:07.126"/>
</kw>
<status status="PASS" starttime="20210921 12:39:07.110" endtime="20210921 12:39:07.127"/>
</kw>
<msg timestamp="20210921 12:39:07.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:07.110" endtime="20210921 12:39:07.127"/>
</kw>
<status status="PASS" starttime="20210921 12:39:07.109" endtime="20210921 12:39:07.127"/>
</kw>
<status status="PASS" starttime="20210921 12:39:07.108" endtime="20210921 12:39:07.127"/>
</kw>
<status status="PASS" starttime="20210921 12:39:07.092" endtime="20210921 12:39:07.128"/>
</kw>
<status status="PASS" starttime="20210921 12:39:07.092" endtime="20210921 12:39:07.128"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:07.132" level="INFO">Running command 'ozone sh bucket info 94173-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:13.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:13.557" level="INFO">${output} = {
  "volumeName" : "94173-target",
  "bucketName" : "link1",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-21T12:34:43.553Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210921 12:39:07.129" endtime="20210921 12:39:13.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:13.560" level="INFO">{
  "volumeName" : "94173-target",
  "bucketName" : "link1",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-21T12:34:43.553Z",
  "modificationTime" : "2021-09-21T12:34:43.553Z"
}</msg>
<status status="PASS" starttime="20210921 12:39:13.558" endtime="20210921 12:39:13.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:13.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:13.561" endtime="20210921 12:39:13.562"/>
</kw>
<status status="PASS" starttime="20210921 12:39:07.129" endtime="20210921 12:39:13.563"/>
</kw>
<msg timestamp="20210921 12:39:13.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:07.129" endtime="20210921 12:39:13.563"/>
</kw>
<msg timestamp="20210921 12:39:13.564" level="INFO">${result} = {
  "volumeName" : "94173-target",
  "bucketName" : "link1",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-21T12:34:43.553Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210921 12:39:07.128" endtime="20210921 12:39:13.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:39:13.564" endtime="20210921 12:39:13.565"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:39:13.566" endtime="20210921 12:39:13.567"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:39:13.568" endtime="20210921 12:39:13.568"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:39:13.569" endtime="20210921 12:39:13.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:39:13.570" endtime="20210921 12:39:13.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:39:13.571" endtime="20210921 12:39:13.572"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:39:13.572" endtime="20210921 12:39:13.573"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:39:07.091" endtime="20210921 12:39:13.573"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:13.584" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:13.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:13.590" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:39:13.580" endtime="20210921 12:39:13.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:13.593" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:39:13.592" endtime="20210921 12:39:13.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:13.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:13.594" endtime="20210921 12:39:13.596"/>
</kw>
<status status="PASS" starttime="20210921 12:39:13.579" endtime="20210921 12:39:13.596"/>
</kw>
<msg timestamp="20210921 12:39:13.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:13.578" endtime="20210921 12:39:13.597"/>
</kw>
<msg timestamp="20210921 12:39:13.598" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:39:13.578" endtime="20210921 12:39:13.598"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:39:13.599" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:39:13.598" endtime="20210921 12:39:13.600"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:13.607" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:13.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:13.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:39:13.605" endtime="20210921 12:39:13.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:13.619" level="INFO"/>
<status status="PASS" starttime="20210921 12:39:13.617" endtime="20210921 12:39:13.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:13.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:13.619" endtime="20210921 12:39:13.620"/>
</kw>
<status status="PASS" starttime="20210921 12:39:13.604" endtime="20210921 12:39:13.621"/>
</kw>
<msg timestamp="20210921 12:39:13.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:13.602" endtime="20210921 12:39:13.621"/>
</kw>
<status status="PASS" starttime="20210921 12:39:13.601" endtime="20210921 12:39:13.622"/>
</kw>
<status status="PASS" starttime="20210921 12:39:13.600" endtime="20210921 12:39:13.622"/>
</kw>
<status status="PASS" starttime="20210921 12:39:13.577" endtime="20210921 12:39:13.622"/>
</kw>
<status status="PASS" starttime="20210921 12:39:13.576" endtime="20210921 12:39:13.623"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:13.629" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 94173-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:20.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:20.953" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:39:13.625" endtime="20210921 12:39:20.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:20.955" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:39:20.954" endtime="20210921 12:39:20.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:20.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:20.955" endtime="20210921 12:39:20.956"/>
</kw>
<status status="PASS" starttime="20210921 12:39:13.624" endtime="20210921 12:39:20.956"/>
</kw>
<msg timestamp="20210921 12:39:20.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:13.624" endtime="20210921 12:39:20.956"/>
</kw>
<status status="PASS" starttime="20210921 12:39:13.623" endtime="20210921 12:39:20.957"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:20.972" level="INFO">Running command 'ozone sh bucket getacl 94173-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:29.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:29.703" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210921 12:39:20.966" endtime="20210921 12:39:29.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:29.706" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210921 12:39:29.705" endtime="20210921 12:39:29.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:29.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:29.707" endtime="20210921 12:39:29.708"/>
</kw>
<status status="PASS" starttime="20210921 12:39:20.959" endtime="20210921 12:39:29.709"/>
</kw>
<msg timestamp="20210921 12:39:29.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:20.959" endtime="20210921 12:39:29.709"/>
</kw>
<msg timestamp="20210921 12:39:29.710" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210921 12:39:20.958" endtime="20210921 12:39:29.710"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:39:29.710" endtime="20210921 12:39:29.711"/>
</kw>
<status status="PASS" starttime="20210921 12:39:20.957" endtime="20210921 12:39:29.711"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:29.718" level="INFO">Running command 'ozone sh bucket getacl 94173-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:37.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:37.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:39:29.716" endtime="20210921 12:39:37.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:37.714" level="INFO"/>
<status status="PASS" starttime="20210921 12:39:37.710" endtime="20210921 12:39:37.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:37.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:37.715" endtime="20210921 12:39:37.716"/>
</kw>
<status status="PASS" starttime="20210921 12:39:29.715" endtime="20210921 12:39:37.717"/>
</kw>
<msg timestamp="20210921 12:39:37.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:29.714" endtime="20210921 12:39:37.718"/>
</kw>
<msg timestamp="20210921 12:39:37.718" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210921 12:39:29.713" endtime="20210921 12:39:37.718"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:39:37.718" endtime="20210921 12:39:37.720"/>
</kw>
<status status="PASS" starttime="20210921 12:39:29.711" endtime="20210921 12:39:37.720"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:37.726" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 94173-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:45.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:45.170" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:39:37.723" endtime="20210921 12:39:45.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:45.171" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:39:45.170" endtime="20210921 12:39:45.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:45.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:45.172" endtime="20210921 12:39:45.172"/>
</kw>
<status status="PASS" starttime="20210921 12:39:37.722" endtime="20210921 12:39:45.173"/>
</kw>
<msg timestamp="20210921 12:39:45.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:37.721" endtime="20210921 12:39:45.173"/>
</kw>
<status status="PASS" starttime="20210921 12:39:37.720" endtime="20210921 12:39:45.173"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:45.180" level="INFO">Running command 'ozone sh bucket getacl 94173-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:39:53.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:39:53.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:39:45.177" endtime="20210921 12:39:53.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:39:53.143" level="INFO"/>
<status status="PASS" starttime="20210921 12:39:53.143" endtime="20210921 12:39:53.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:39:53.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:39:53.144" endtime="20210921 12:39:53.144"/>
</kw>
<status status="PASS" starttime="20210921 12:39:45.176" endtime="20210921 12:39:53.145"/>
</kw>
<msg timestamp="20210921 12:39:53.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:45.176" endtime="20210921 12:39:53.145"/>
</kw>
<msg timestamp="20210921 12:39:53.145" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210921 12:39:45.175" endtime="20210921 12:39:53.145"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:39:53.145" endtime="20210921 12:39:53.146"/>
</kw>
<status status="PASS" starttime="20210921 12:39:45.173" endtime="20210921 12:39:53.146"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:39:53.152" level="INFO">Running command 'ozone sh bucket getacl 94173-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:00.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:00.127" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210921 12:39:53.149" endtime="20210921 12:40:00.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:00.129" level="INFO">READ</msg>
<status status="PASS" starttime="20210921 12:40:00.128" endtime="20210921 12:40:00.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:00.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:00.130" endtime="20210921 12:40:00.131"/>
</kw>
<status status="PASS" starttime="20210921 12:39:53.149" endtime="20210921 12:40:00.132"/>
</kw>
<msg timestamp="20210921 12:40:00.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:39:53.148" endtime="20210921 12:40:00.132"/>
</kw>
<msg timestamp="20210921 12:40:00.132" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210921 12:39:53.147" endtime="20210921 12:40:00.132"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:40:00.133" endtime="20210921 12:40:00.134"/>
</kw>
<status status="PASS" starttime="20210921 12:39:53.146" endtime="20210921 12:40:00.134"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:39:13.574" endtime="20210921 12:40:00.134"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:00.143" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:00.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:00.147" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:40:00.140" endtime="20210921 12:40:00.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:00.152" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:40:00.150" endtime="20210921 12:40:00.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:00.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:00.152" endtime="20210921 12:40:00.153"/>
</kw>
<status status="PASS" starttime="20210921 12:40:00.139" endtime="20210921 12:40:00.153"/>
</kw>
<msg timestamp="20210921 12:40:00.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:00.139" endtime="20210921 12:40:00.154"/>
</kw>
<msg timestamp="20210921 12:40:00.154" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:40:00.138" endtime="20210921 12:40:00.154"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:40:00.155" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:40:00.154" endtime="20210921 12:40:00.155"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:00.162" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:00.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:00.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:00.159" endtime="20210921 12:40:00.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:00.343" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:00.342" endtime="20210921 12:40:00.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:00.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:00.343" endtime="20210921 12:40:00.344"/>
</kw>
<status status="PASS" starttime="20210921 12:40:00.158" endtime="20210921 12:40:00.344"/>
</kw>
<msg timestamp="20210921 12:40:00.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:00.157" endtime="20210921 12:40:00.344"/>
</kw>
<status status="PASS" starttime="20210921 12:40:00.156" endtime="20210921 12:40:00.344"/>
</kw>
<status status="PASS" starttime="20210921 12:40:00.155" endtime="20210921 12:40:00.345"/>
</kw>
<status status="PASS" starttime="20210921 12:40:00.137" endtime="20210921 12:40:00.345"/>
</kw>
<status status="PASS" starttime="20210921 12:40:00.136" endtime="20210921 12:40:00.345"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:00.352" level="INFO">Running command 'ozone sh bucket link 94173-source/bucket2 94173-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:07.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:07.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:00.347" endtime="20210921 12:40:07.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:07.566" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:07.565" endtime="20210921 12:40:07.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:07.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:07.566" endtime="20210921 12:40:07.568"/>
</kw>
<status status="PASS" starttime="20210921 12:40:00.346" endtime="20210921 12:40:07.568"/>
</kw>
<msg timestamp="20210921 12:40:07.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:00.346" endtime="20210921 12:40:07.568"/>
</kw>
<status status="PASS" starttime="20210921 12:40:00.345" endtime="20210921 12:40:07.568"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:07.572" level="INFO">Running command 'ozone sh bucket create 94173-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:13.139" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:40:13.139" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210921 12:40:07.569" endtime="20210921 12:40:13.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:13.141" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210921 12:40:13.140" endtime="20210921 12:40:13.141"/>
</kw>
<msg timestamp="20210921 12:40:13.141" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210921 12:40:07.568" endtime="20210921 12:40:13.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:40:13.142" endtime="20210921 12:40:13.142"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:13.146" level="INFO">Running command 'ozone sh bucket create 94173-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:20.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:20.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:13.144" endtime="20210921 12:40:20.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:20.280" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:20.279" endtime="20210921 12:40:20.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:20.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:20.280" endtime="20210921 12:40:20.281"/>
</kw>
<status status="PASS" starttime="20210921 12:40:13.143" endtime="20210921 12:40:20.281"/>
</kw>
<msg timestamp="20210921 12:40:20.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:13.143" endtime="20210921 12:40:20.281"/>
</kw>
<status status="PASS" starttime="20210921 12:40:13.142" endtime="20210921 12:40:20.281"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:20.284" level="INFO">Running command 'ozone sh bucket link 94173-source/bucket1 94173-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:25.670" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:40:25.671" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210921 12:40:20.282" endtime="20210921 12:40:25.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:25.674" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210921 12:40:25.673" endtime="20210921 12:40:25.674"/>
</kw>
<msg timestamp="20210921 12:40:25.674" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210921 12:40:20.281" endtime="20210921 12:40:25.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:40:25.675" endtime="20210921 12:40:25.675"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:40:00.135" endtime="20210921 12:40:25.676"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:25.685" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:25.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:25.689" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:40:25.681" endtime="20210921 12:40:25.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:25.692" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:40:25.690" endtime="20210921 12:40:25.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:25.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:25.692" endtime="20210921 12:40:25.694"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.681" endtime="20210921 12:40:25.696"/>
</kw>
<msg timestamp="20210921 12:40:25.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:25.680" endtime="20210921 12:40:25.696"/>
</kw>
<msg timestamp="20210921 12:40:25.697" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:40:25.680" endtime="20210921 12:40:25.697"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:40:25.699" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:40:25.698" endtime="20210921 12:40:25.699"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:25.707" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:25.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:25.720" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:25.704" endtime="20210921 12:40:25.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:25.722" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:25.721" endtime="20210921 12:40:25.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:25.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:25.722" endtime="20210921 12:40:25.723"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.703" endtime="20210921 12:40:25.724"/>
</kw>
<msg timestamp="20210921 12:40:25.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:25.702" endtime="20210921 12:40:25.724"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.701" endtime="20210921 12:40:25.725"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.700" endtime="20210921 12:40:25.725"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.679" endtime="20210921 12:40:25.725"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.679" endtime="20210921 12:40:25.725"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:25.731" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:25.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:25.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:25.729" endtime="20210921 12:40:25.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:25.737" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:25.736" endtime="20210921 12:40:25.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:25.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:25.738" endtime="20210921 12:40:25.738"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.728" endtime="20210921 12:40:25.739"/>
</kw>
<msg timestamp="20210921 12:40:25.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:25.728" endtime="20210921 12:40:25.739"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.727" endtime="20210921 12:40:25.740"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:25.745" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:25.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:25.750" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:40:25.743" endtime="20210921 12:40:25.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:25.752" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:40:25.751" endtime="20210921 12:40:25.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:25.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:25.753" endtime="20210921 12:40:25.754"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.742" endtime="20210921 12:40:25.755"/>
</kw>
<msg timestamp="20210921 12:40:25.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:25.741" endtime="20210921 12:40:25.755"/>
</kw>
<msg timestamp="20210921 12:40:25.757" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:40:25.741" endtime="20210921 12:40:25.757"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:40:25.758" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:40:25.757" endtime="20210921 12:40:25.758"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:25.763" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:25.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:25.773" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:25.761" endtime="20210921 12:40:25.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:25.776" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:25.774" endtime="20210921 12:40:25.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:25.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:25.777" endtime="20210921 12:40:25.778"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.760" endtime="20210921 12:40:25.779"/>
</kw>
<msg timestamp="20210921 12:40:25.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:25.760" endtime="20210921 12:40:25.779"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.759" endtime="20210921 12:40:25.779"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.758" endtime="20210921 12:40:25.780"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.740" endtime="20210921 12:40:25.780"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.740" endtime="20210921 12:40:25.780"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:25.783" level="INFO">Running command 'ozone sh key list 94173-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:33.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:33.939" level="INFO">${output} = {
  "volumeName" : "94173-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-21T12:30:16.059Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210921 12:40:25.781" endtime="20210921 12:40:33.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:33.941" level="INFO">{
  "volumeName" : "94173-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-21T12:30:16.059Z",
  "modificationTime" : "2021-09-21T12:33:18.924Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210921 12:40:33.940" endtime="20210921 12:40:33.941"/>
</kw>
<msg timestamp="20210921 12:40:33.941" level="INFO">${result} = {
  "volumeName" : "94173-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-21T12:30:16.059Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210921 12:40:25.780" endtime="20210921 12:40:33.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:40:33.942" endtime="20210921 12:40:33.942"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.726" endtime="20210921 12:40:33.942"/>
</kw>
<status status="PASS" starttime="20210921 12:40:25.726" endtime="20210921 12:40:33.942"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:40:25.677" endtime="20210921 12:40:33.943"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:33.952" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:33.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:33.957" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:40:33.949" endtime="20210921 12:40:33.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:33.959" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:40:33.958" endtime="20210921 12:40:33.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:33.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:33.960" endtime="20210921 12:40:33.961"/>
</kw>
<status status="PASS" starttime="20210921 12:40:33.948" endtime="20210921 12:40:33.961"/>
</kw>
<msg timestamp="20210921 12:40:33.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:33.947" endtime="20210921 12:40:33.961"/>
</kw>
<msg timestamp="20210921 12:40:33.962" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:40:33.947" endtime="20210921 12:40:33.962"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:40:33.963" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:40:33.962" endtime="20210921 12:40:33.963"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:33.968" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:33.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:33.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:33.966" endtime="20210921 12:40:33.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:33.981" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:33.980" endtime="20210921 12:40:33.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:33.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:33.981" endtime="20210921 12:40:33.983"/>
</kw>
<status status="PASS" starttime="20210921 12:40:33.965" endtime="20210921 12:40:33.983"/>
</kw>
<msg timestamp="20210921 12:40:33.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:33.965" endtime="20210921 12:40:33.984"/>
</kw>
<status status="PASS" starttime="20210921 12:40:33.964" endtime="20210921 12:40:33.985"/>
</kw>
<status status="PASS" starttime="20210921 12:40:33.963" endtime="20210921 12:40:33.985"/>
</kw>
<status status="PASS" starttime="20210921 12:40:33.946" endtime="20210921 12:40:33.985"/>
</kw>
<status status="PASS" starttime="20210921 12:40:33.945" endtime="20210921 12:40:33.985"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:33.994" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:33.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:33.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:33.991" endtime="20210921 12:40:33.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:34.000" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:33.999" endtime="20210921 12:40:34.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:34.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:34.000" endtime="20210921 12:40:34.001"/>
</kw>
<status status="PASS" starttime="20210921 12:40:33.990" endtime="20210921 12:40:34.001"/>
</kw>
<msg timestamp="20210921 12:40:34.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:33.989" endtime="20210921 12:40:34.001"/>
</kw>
<status status="PASS" starttime="20210921 12:40:33.988" endtime="20210921 12:40:34.001"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:34.009" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:34.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:34.014" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:40:34.005" endtime="20210921 12:40:34.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:34.016" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:40:34.015" endtime="20210921 12:40:34.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:34.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:34.017" endtime="20210921 12:40:34.017"/>
</kw>
<status status="PASS" starttime="20210921 12:40:34.004" endtime="20210921 12:40:34.018"/>
</kw>
<msg timestamp="20210921 12:40:34.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:34.004" endtime="20210921 12:40:34.018"/>
</kw>
<msg timestamp="20210921 12:40:34.018" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:40:34.003" endtime="20210921 12:40:34.018"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:40:34.019" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:40:34.018" endtime="20210921 12:40:34.019"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:34.024" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:34.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:34.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:34.022" endtime="20210921 12:40:34.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:34.034" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:34.033" endtime="20210921 12:40:34.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:34.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:34.034" endtime="20210921 12:40:34.035"/>
</kw>
<status status="PASS" starttime="20210921 12:40:34.021" endtime="20210921 12:40:34.035"/>
</kw>
<msg timestamp="20210921 12:40:34.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:34.021" endtime="20210921 12:40:34.036"/>
</kw>
<status status="PASS" starttime="20210921 12:40:34.020" endtime="20210921 12:40:34.036"/>
</kw>
<status status="PASS" starttime="20210921 12:40:34.019" endtime="20210921 12:40:34.036"/>
</kw>
<status status="PASS" starttime="20210921 12:40:34.002" endtime="20210921 12:40:34.037"/>
</kw>
<status status="PASS" starttime="20210921 12:40:34.002" endtime="20210921 12:40:34.037"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:34.040" level="INFO">Running command 'ozone sh key list 94173-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:41.053" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:40:41.053" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 94173-target unreadable-link null</msg>
<status status="PASS" starttime="20210921 12:40:34.037" endtime="20210921 12:40:41.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:41.056" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 94173-target unreadable-link null</msg>
<status status="PASS" starttime="20210921 12:40:41.055" endtime="20210921 12:40:41.056"/>
</kw>
<msg timestamp="20210921 12:40:41.057" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 94173-target unreadable-link null</msg>
<status status="PASS" starttime="20210921 12:40:34.037" endtime="20210921 12:40:41.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:40:41.058" endtime="20210921 12:40:41.059"/>
</kw>
<status status="PASS" starttime="20210921 12:40:33.987" endtime="20210921 12:40:41.059"/>
</kw>
<status status="PASS" starttime="20210921 12:40:33.986" endtime="20210921 12:40:41.059"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:40:33.944" endtime="20210921 12:40:41.060"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:41.076" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:41.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:41.082" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:40:41.072" endtime="20210921 12:40:41.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:41.085" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:40:41.083" endtime="20210921 12:40:41.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:41.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:41.086" endtime="20210921 12:40:41.087"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.071" endtime="20210921 12:40:41.088"/>
</kw>
<msg timestamp="20210921 12:40:41.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:41.070" endtime="20210921 12:40:41.089"/>
</kw>
<msg timestamp="20210921 12:40:41.089" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:40:41.068" endtime="20210921 12:40:41.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:40:41.091" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:40:41.089" endtime="20210921 12:40:41.091"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:41.095" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:41.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:41.103" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:41.093" endtime="20210921 12:40:41.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:41.105" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:41.104" endtime="20210921 12:40:41.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:41.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:41.105" endtime="20210921 12:40:41.106"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.092" endtime="20210921 12:40:41.106"/>
</kw>
<msg timestamp="20210921 12:40:41.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:41.092" endtime="20210921 12:40:41.107"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.091" endtime="20210921 12:40:41.107"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.091" endtime="20210921 12:40:41.108"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.065" endtime="20210921 12:40:41.108"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.064" endtime="20210921 12:40:41.108"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:41.113" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:41.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:41.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:41.111" endtime="20210921 12:40:41.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:41.118" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:41.117" endtime="20210921 12:40:41.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:41.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:41.119" endtime="20210921 12:40:41.119"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.110" endtime="20210921 12:40:41.120"/>
</kw>
<msg timestamp="20210921 12:40:41.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:41.110" endtime="20210921 12:40:41.120"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.109" endtime="20210921 12:40:41.120"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:41.125" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:41.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:41.128" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:40:41.123" endtime="20210921 12:40:41.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:41.129" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:40:41.129" endtime="20210921 12:40:41.129"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:41.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:41.130" endtime="20210921 12:40:41.130"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.122" endtime="20210921 12:40:41.131"/>
</kw>
<msg timestamp="20210921 12:40:41.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:41.122" endtime="20210921 12:40:41.131"/>
</kw>
<msg timestamp="20210921 12:40:41.131" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:40:41.121" endtime="20210921 12:40:41.131"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:40:41.132" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:40:41.131" endtime="20210921 12:40:41.132"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:41.136" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:41.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:41.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:41.134" endtime="20210921 12:40:41.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:41.145" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:41.144" endtime="20210921 12:40:41.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:41.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:41.145" endtime="20210921 12:40:41.145"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.134" endtime="20210921 12:40:41.146"/>
</kw>
<msg timestamp="20210921 12:40:41.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:41.133" endtime="20210921 12:40:41.146"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.133" endtime="20210921 12:40:41.146"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.132" endtime="20210921 12:40:41.146"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.121" endtime="20210921 12:40:41.146"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.120" endtime="20210921 12:40:41.147"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:41.150" level="INFO">Running command 'ozone sh bucket info 94173-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:46.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:46.882" level="INFO">${output} = {
  "volumeName" : "94173-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-21T12:33:47.714Z...</msg>
<status status="PASS" starttime="20210921 12:40:41.148" endtime="20210921 12:40:46.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:46.884" level="INFO">{
  "volumeName" : "94173-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-21T12:33:47.714Z",
  "modificationTime" : "2021-09-21T12:34:21.466Z"
}</msg>
<status status="PASS" starttime="20210921 12:40:46.883" endtime="20210921 12:40:46.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:46.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:46.885" endtime="20210921 12:40:46.885"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.148" endtime="20210921 12:40:46.886"/>
</kw>
<msg timestamp="20210921 12:40:46.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:41.148" endtime="20210921 12:40:46.887"/>
</kw>
<msg timestamp="20210921 12:40:46.887" level="INFO">${result} = {
  "volumeName" : "94173-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-21T12:33:47.714Z...</msg>
<status status="PASS" starttime="20210921 12:40:41.147" endtime="20210921 12:40:46.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:40:46.888" endtime="20210921 12:40:46.889"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:40:46.889" endtime="20210921 12:40:46.892"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:46.897" level="INFO">Running command 'ozone sh key list 94173-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:53.734" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:40:53.735" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 94173-source unreadable-bucket </msg>
<status status="PASS" starttime="20210921 12:40:46.892" endtime="20210921 12:40:53.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:53.737" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 94173-source unreadable-bucket </msg>
<status status="PASS" starttime="20210921 12:40:53.736" endtime="20210921 12:40:53.737"/>
</kw>
<msg timestamp="20210921 12:40:53.738" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 94173-source unreadable-bucket </msg>
<status status="PASS" starttime="20210921 12:40:46.892" endtime="20210921 12:40:53.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:40:53.738" endtime="20210921 12:40:53.738"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.109" endtime="20210921 12:40:53.738"/>
</kw>
<status status="PASS" starttime="20210921 12:40:41.108" endtime="20210921 12:40:53.739"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:40:41.061" endtime="20210921 12:40:53.739"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:53.747" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:53.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:53.751" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:40:53.745" endtime="20210921 12:40:53.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:53.753" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:40:53.752" endtime="20210921 12:40:53.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:53.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:53.753" endtime="20210921 12:40:53.754"/>
</kw>
<status status="PASS" starttime="20210921 12:40:53.744" endtime="20210921 12:40:53.754"/>
</kw>
<msg timestamp="20210921 12:40:53.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:53.744" endtime="20210921 12:40:53.755"/>
</kw>
<msg timestamp="20210921 12:40:53.755" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:40:53.743" endtime="20210921 12:40:53.755"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:40:53.758" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:40:53.755" endtime="20210921 12:40:53.758"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:53.764" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:40:53.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:40:53.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:53.761" endtime="20210921 12:40:53.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:40:53.773" level="INFO"/>
<status status="PASS" starttime="20210921 12:40:53.773" endtime="20210921 12:40:53.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:40:53.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:40:53.774" endtime="20210921 12:40:53.775"/>
</kw>
<status status="PASS" starttime="20210921 12:40:53.760" endtime="20210921 12:40:53.776"/>
</kw>
<msg timestamp="20210921 12:40:53.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:53.760" endtime="20210921 12:40:53.776"/>
</kw>
<status status="PASS" starttime="20210921 12:40:53.759" endtime="20210921 12:40:53.777"/>
</kw>
<status status="PASS" starttime="20210921 12:40:53.758" endtime="20210921 12:40:53.777"/>
</kw>
<status status="PASS" starttime="20210921 12:40:53.742" endtime="20210921 12:40:53.777"/>
</kw>
<status status="PASS" starttime="20210921 12:40:53.741" endtime="20210921 12:40:53.777"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:40:53.782" level="INFO">Running command 'ozone sh bucket link 94173-target/loop1 94173-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:41:00.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:41:00.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:40:53.780" endtime="20210921 12:41:00.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:41:00.746" level="INFO"/>
<status status="PASS" starttime="20210921 12:41:00.745" endtime="20210921 12:41:00.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:41:00.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:41:00.747" endtime="20210921 12:41:00.748"/>
</kw>
<status status="PASS" starttime="20210921 12:40:53.779" endtime="20210921 12:41:00.749"/>
</kw>
<msg timestamp="20210921 12:41:00.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:40:53.778" endtime="20210921 12:41:00.750"/>
</kw>
<status status="PASS" starttime="20210921 12:40:53.777" endtime="20210921 12:41:00.750"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:41:00.757" level="INFO">Running command 'ozone sh bucket link 94173-target/loop2 94173-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:41:08.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:41:08.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:41:00.754" endtime="20210921 12:41:08.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:41:08.381" level="INFO"/>
<status status="PASS" starttime="20210921 12:41:08.379" endtime="20210921 12:41:08.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:41:08.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:41:08.382" endtime="20210921 12:41:08.383"/>
</kw>
<status status="PASS" starttime="20210921 12:41:00.752" endtime="20210921 12:41:08.383"/>
</kw>
<msg timestamp="20210921 12:41:08.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:41:00.752" endtime="20210921 12:41:08.383"/>
</kw>
<status status="PASS" starttime="20210921 12:41:00.750" endtime="20210921 12:41:08.384"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:41:08.389" level="INFO">Running command 'ozone sh bucket link 94173-target/loop3 94173-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:41:15.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:41:15.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:41:08.386" endtime="20210921 12:41:15.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:41:15.183" level="INFO"/>
<status status="PASS" starttime="20210921 12:41:15.182" endtime="20210921 12:41:15.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:41:15.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:41:15.184" endtime="20210921 12:41:15.185"/>
</kw>
<status status="PASS" starttime="20210921 12:41:08.385" endtime="20210921 12:41:15.185"/>
</kw>
<msg timestamp="20210921 12:41:15.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:41:08.385" endtime="20210921 12:41:15.186"/>
</kw>
<status status="PASS" starttime="20210921 12:41:08.384" endtime="20210921 12:41:15.187"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:41:15.191" level="INFO">Running command 'ozone sh key list 94173-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:41:22.402" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:41:22.402" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210921 12:41:15.188" endtime="20210921 12:41:22.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:41:22.403" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210921 12:41:22.402" endtime="20210921 12:41:22.403"/>
</kw>
<msg timestamp="20210921 12:41:22.404" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210921 12:41:15.187" endtime="20210921 12:41:22.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:41:22.404" endtime="20210921 12:41:22.405"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:40:53.739" endtime="20210921 12:41:22.405"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:41:22.415" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:41:22.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:41:22.423" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:41:22.411" endtime="20210921 12:41:22.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:41:22.427" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:41:22.425" endtime="20210921 12:41:22.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:41:22.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:41:22.428" endtime="20210921 12:41:22.429"/>
</kw>
<status status="PASS" starttime="20210921 12:41:22.410" endtime="20210921 12:41:22.430"/>
</kw>
<msg timestamp="20210921 12:41:22.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:41:22.409" endtime="20210921 12:41:22.431"/>
</kw>
<msg timestamp="20210921 12:41:22.431" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:41:22.408" endtime="20210921 12:41:22.431"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:41:22.433" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:41:22.432" endtime="20210921 12:41:22.433"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:41:22.443" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:41:22.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:41:22.452" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:41:22.439" endtime="20210921 12:41:22.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:41:22.453" level="INFO"/>
<status status="PASS" starttime="20210921 12:41:22.452" endtime="20210921 12:41:22.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:41:22.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:41:22.453" endtime="20210921 12:41:22.454"/>
</kw>
<status status="PASS" starttime="20210921 12:41:22.438" endtime="20210921 12:41:22.454"/>
</kw>
<msg timestamp="20210921 12:41:22.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:41:22.437" endtime="20210921 12:41:22.454"/>
</kw>
<status status="PASS" starttime="20210921 12:41:22.435" endtime="20210921 12:41:22.454"/>
</kw>
<status status="PASS" starttime="20210921 12:41:22.433" endtime="20210921 12:41:22.454"/>
</kw>
<status status="PASS" starttime="20210921 12:41:22.408" endtime="20210921 12:41:22.455"/>
</kw>
<status status="PASS" starttime="20210921 12:41:22.407" endtime="20210921 12:41:22.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:41:22.461" level="INFO">Running command 'ozone sh bucket link 94173-source/bucket1 94173-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:41:29.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:41:29.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:41:22.458" endtime="20210921 12:41:29.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:41:29.650" level="INFO"/>
<status status="PASS" starttime="20210921 12:41:29.649" endtime="20210921 12:41:29.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:41:29.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:41:29.650" endtime="20210921 12:41:29.651"/>
</kw>
<status status="PASS" starttime="20210921 12:41:22.457" endtime="20210921 12:41:29.651"/>
</kw>
<msg timestamp="20210921 12:41:29.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:41:22.457" endtime="20210921 12:41:29.652"/>
</kw>
<status status="PASS" starttime="20210921 12:41:22.455" endtime="20210921 12:41:29.652"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:41:29.656" level="INFO">Running command 'ozone sh key put 94173-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:43:22.407" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210921 12:41:29.654" endtime="20210921 12:43:22.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210921 12:43:22.408" endtime="20210921 12:43:22.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210921 12:43:22.408" endtime="20210921 12:43:22.408"/>
</kw>
<status status="FAIL" starttime="20210921 12:41:29.653" endtime="20210921 12:43:22.409"/>
</kw>
<msg timestamp="20210921 12:43:22.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210921 12:41:29.653" endtime="20210921 12:43:22.409"/>
</kw>
<status status="FAIL" starttime="20210921 12:41:29.652" endtime="20210921 12:43:22.409"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210921 12:43:22.410" endtime="20210921 12:43:22.410"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210921 12:41:22.406" endtime="20210921 12:43:22.410">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:43:22.418" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:43:22.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:43:22.421" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:43:22.415" endtime="20210921 12:43:22.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:43:22.423" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:43:22.422" endtime="20210921 12:43:22.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:43:22.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:43:22.423" endtime="20210921 12:43:22.424"/>
</kw>
<status status="PASS" starttime="20210921 12:43:22.414" endtime="20210921 12:43:22.425"/>
</kw>
<msg timestamp="20210921 12:43:22.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:43:22.414" endtime="20210921 12:43:22.425"/>
</kw>
<msg timestamp="20210921 12:43:22.426" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:43:22.413" endtime="20210921 12:43:22.426"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:43:22.427" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:43:22.426" endtime="20210921 12:43:22.427"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:43:22.432" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:43:22.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:43:22.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:43:22.430" endtime="20210921 12:43:22.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:43:22.444" level="INFO"/>
<status status="PASS" starttime="20210921 12:43:22.443" endtime="20210921 12:43:22.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:43:22.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:43:22.445" endtime="20210921 12:43:22.445"/>
</kw>
<status status="PASS" starttime="20210921 12:43:22.429" endtime="20210921 12:43:22.446"/>
</kw>
<msg timestamp="20210921 12:43:22.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:43:22.429" endtime="20210921 12:43:22.446"/>
</kw>
<status status="PASS" starttime="20210921 12:43:22.428" endtime="20210921 12:43:22.446"/>
</kw>
<status status="PASS" starttime="20210921 12:43:22.427" endtime="20210921 12:43:22.447"/>
</kw>
<status status="PASS" starttime="20210921 12:43:22.413" endtime="20210921 12:43:22.447"/>
</kw>
<status status="PASS" starttime="20210921 12:43:22.412" endtime="20210921 12:43:22.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:43:22.452" level="INFO">Running command 'ozone sh bucket delete 94173-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:43:28.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:43:28.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:43:22.449" endtime="20210921 12:43:28.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:43:28.212" level="INFO"/>
<status status="PASS" starttime="20210921 12:43:28.211" endtime="20210921 12:43:28.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:43:28.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:43:28.212" endtime="20210921 12:43:28.213"/>
</kw>
<status status="PASS" starttime="20210921 12:43:22.448" endtime="20210921 12:43:28.213"/>
</kw>
<msg timestamp="20210921 12:43:28.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:43:22.448" endtime="20210921 12:43:28.214"/>
</kw>
<status status="PASS" starttime="20210921 12:43:22.447" endtime="20210921 12:43:28.214"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:43:28.221" level="INFO">Running command 'ozone sh bucket list 94173-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:43:36.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:43:36.401" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T...</msg>
<status status="PASS" starttime="20210921 12:43:28.216" endtime="20210921 12:43:36.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:43:36.405" level="INFO">{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:40:20.204Z",
  "modificationTime" : "2021-09-21T12:40:20.204Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:34:28.994Z",
  "modificationTime" : "2021-09-21T12:34:28.994Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:33:47.714Z",
  "modificationTime" : "2021-09-21T12:34:21.466Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:40:07.483Z",
  "modificationTime" : "2021-09-21T12:40:07.483Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:41:29.542Z",
  "modificationTime" : "2021-09-21T12:41:29.542Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:41:15.104Z",
  "modificationTime" : "2021-09-21T12:41:15.104Z",
  "sourceVolume" : "94173-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:41:00.652Z",
  "modificationTime" : "2021-09-21T12:41:00.652Z",
  "sourceVolume" : "94173-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:41:08.002Z",
  "modificationTime" : "2021-09-21T12:41:08.002Z",
  "sourceVolume" : "94173-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:33:33.124Z",
  "modificationTime" : "2021-09-21T12:34:16.044Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T12:33:40.544Z",
  "modificationTime" : "2021-09-21T12:33:40.544Z",
  "sourceVolume" : "94173-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210921 12:43:36.403" endtime="20210921 12:43:36.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:43:36.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:43:36.405" endtime="20210921 12:43:36.406"/>
</kw>
<status status="PASS" starttime="20210921 12:43:28.215" endtime="20210921 12:43:36.407"/>
</kw>
<msg timestamp="20210921 12:43:36.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:43:28.215" endtime="20210921 12:43:36.407"/>
</kw>
<msg timestamp="20210921 12:43:36.408" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "94173-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-21T...</msg>
<status status="PASS" starttime="20210921 12:43:28.214" endtime="20210921 12:43:36.408"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:43:36.408" endtime="20210921 12:43:36.409"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:43:36.415" level="INFO">Running command 'ozone sh key list 94173-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:43:43.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:43:43.064" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210921 12:43:36.412" endtime="20210921 12:43:43.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:43:43.065" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210921 12:43:43.065" endtime="20210921 12:43:43.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:43:43.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:43:43.066" endtime="20210921 12:43:43.066"/>
</kw>
<status status="PASS" starttime="20210921 12:43:36.411" endtime="20210921 12:43:43.067"/>
</kw>
<msg timestamp="20210921 12:43:43.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:43:36.410" endtime="20210921 12:43:43.067"/>
</kw>
<msg timestamp="20210921 12:43:43.068" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210921 12:43:36.409" endtime="20210921 12:43:43.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:43:43.068" endtime="20210921 12:43:43.068"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:43:22.411" endtime="20210921 12:43:43.068"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210921 12:29:47.785" endtime="20210921 12:43:43.070"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210921 12:43:43.097" level="INFO">${random} = 57376</msg>
<status status="PASS" starttime="20210921 12:43:43.097" endtime="20210921 12:43:43.097"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:43:43.098" level="INFO">${prefix} = 57376</msg>
<status status="PASS" starttime="20210921 12:43:43.097" endtime="20210921 12:43:43.098"/>
</kw>
<status status="PASS" starttime="20210921 12:43:43.096" endtime="20210921 12:43:43.098"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:43:43.103" level="INFO">Running command 'ozone sh volume info /57376-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:43:50.358" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:43:50.358" level="INFO">${output} = VOLUME_NOT_FOUND Volume 57376-rpcbasic is not found</msg>
<status status="PASS" starttime="20210921 12:43:43.102" endtime="20210921 12:43:50.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:43:50.361" level="INFO">VOLUME_NOT_FOUND Volume 57376-rpcbasic is not found</msg>
<status status="PASS" starttime="20210921 12:43:50.359" endtime="20210921 12:43:50.361"/>
</kw>
<msg timestamp="20210921 12:43:50.362" level="INFO">${result} = VOLUME_NOT_FOUND Volume 57376-rpcbasic is not found</msg>
<status status="PASS" starttime="20210921 12:43:43.101" endtime="20210921 12:43:50.362"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:43:50.363" endtime="20210921 12:43:50.364"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:43:50.372" level="INFO">Running command 'ozone sh volume create /57376-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:43:55.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:43:55.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:43:50.369" endtime="20210921 12:43:55.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:43:55.964" level="INFO"/>
<status status="PASS" starttime="20210921 12:43:55.963" endtime="20210921 12:43:55.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:43:55.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:43:55.965" endtime="20210921 12:43:55.966"/>
</kw>
<status status="PASS" starttime="20210921 12:43:50.368" endtime="20210921 12:43:55.967"/>
</kw>
<msg timestamp="20210921 12:43:55.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:43:50.366" endtime="20210921 12:43:55.967"/>
</kw>
<msg timestamp="20210921 12:43:55.968" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210921 12:43:50.364" endtime="20210921 12:43:55.968"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:43:55.968" endtime="20210921 12:43:55.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:43:55.979" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="57376-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:44:04.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:44:04.249" level="INFO">${output} = {
  "metadata": {},
  "name": "57376-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210921 12:43:55.975" endtime="20210921 12:44:04.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:44:04.251" level="INFO">{
  "metadata": {},
  "name": "57376-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-21T12:43:55.867Z",
  "modificationTime": "2021-09-21T12:43:55.867Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210921 12:44:04.250" endtime="20210921 12:44:04.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:44:04.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:44:04.252" endtime="20210921 12:44:04.253"/>
</kw>
<status status="PASS" starttime="20210921 12:43:55.973" endtime="20210921 12:44:04.254"/>
</kw>
<msg timestamp="20210921 12:44:04.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:43:55.973" endtime="20210921 12:44:04.254"/>
</kw>
<msg timestamp="20210921 12:44:04.255" level="INFO">${result} = {
  "metadata": {},
  "name": "57376-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210921 12:43:55.969" endtime="20210921 12:44:04.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:44:04.255" endtime="20210921 12:44:04.256"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:44:04.261" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="57376-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:44:14.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:44:14.832" level="INFO">${output} = {
  "metadata": {},
  "name": "57376-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210921 12:44:04.259" endtime="20210921 12:44:14.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:44:14.834" level="INFO">{
  "metadata": {},
  "name": "57376-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-21T12:43:55.867Z",
  "modificationTime": "2021-09-21T12:43:55.867Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210921 12:44:14.833" endtime="20210921 12:44:14.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:44:14.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:44:14.834" endtime="20210921 12:44:14.835"/>
</kw>
<status status="PASS" starttime="20210921 12:44:04.258" endtime="20210921 12:44:14.835"/>
</kw>
<msg timestamp="20210921 12:44:14.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:44:04.257" endtime="20210921 12:44:14.835"/>
</kw>
<msg timestamp="20210921 12:44:14.836" level="INFO">${result} = {
  "metadata": {},
  "name": "57376-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210921 12:44:04.256" endtime="20210921 12:44:14.836"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:44:14.836" endtime="20210921 12:44:14.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:44:14.842" level="INFO">Running command 'ozone sh volume setquota /57376-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:44:23.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:44:23.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:44:14.838" endtime="20210921 12:44:23.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:44:23.184" level="INFO"/>
<status status="PASS" starttime="20210921 12:44:23.182" endtime="20210921 12:44:23.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:44:23.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:44:23.184" endtime="20210921 12:44:23.185"/>
</kw>
<status status="PASS" starttime="20210921 12:44:14.838" endtime="20210921 12:44:23.186"/>
</kw>
<msg timestamp="20210921 12:44:23.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:44:14.837" endtime="20210921 12:44:23.186"/>
</kw>
<status status="PASS" starttime="20210921 12:44:14.837" endtime="20210921 12:44:23.187"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:44:23.197" level="INFO">Running command 'ozone sh volume info /57376-rpcbasic | jq -r '. | select(.name=="57376-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:44:31.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:44:31.876" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210921 12:44:23.194" endtime="20210921 12:44:31.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:44:31.877" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210921 12:44:31.876" endtime="20210921 12:44:31.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:44:31.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:44:31.877" endtime="20210921 12:44:31.878"/>
</kw>
<status status="PASS" starttime="20210921 12:44:23.192" endtime="20210921 12:44:31.878"/>
</kw>
<msg timestamp="20210921 12:44:31.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:44:23.191" endtime="20210921 12:44:31.879"/>
</kw>
<msg timestamp="20210921 12:44:31.879" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210921 12:44:23.188" endtime="20210921 12:44:31.879"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:44:31.879" endtime="20210921 12:44:31.880"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:44:31.886" level="INFO">Running command 'ozone sh bucket create /57376-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:44:38.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:44:38.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:44:31.882" endtime="20210921 12:44:38.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:44:38.406" level="INFO"/>
<status status="PASS" starttime="20210921 12:44:38.404" endtime="20210921 12:44:38.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:44:38.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:44:38.408" endtime="20210921 12:44:38.409"/>
</kw>
<status status="PASS" starttime="20210921 12:44:31.881" endtime="20210921 12:44:38.409"/>
</kw>
<msg timestamp="20210921 12:44:38.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:44:31.881" endtime="20210921 12:44:38.409"/>
</kw>
<status status="PASS" starttime="20210921 12:44:31.880" endtime="20210921 12:44:38.410"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:44:38.419" level="INFO">Running command 'ozone sh bucket info /57376-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:44:46.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:44:46.999" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210921 12:44:38.414" endtime="20210921 12:44:46.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:44:47.001" level="INFO">DISK</msg>
<status status="PASS" starttime="20210921 12:44:47.000" endtime="20210921 12:44:47.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:44:47.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:44:47.001" endtime="20210921 12:44:47.002"/>
</kw>
<status status="PASS" starttime="20210921 12:44:38.413" endtime="20210921 12:44:47.002"/>
</kw>
<msg timestamp="20210921 12:44:47.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:44:38.411" endtime="20210921 12:44:47.002"/>
</kw>
<msg timestamp="20210921 12:44:47.002" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210921 12:44:38.410" endtime="20210921 12:44:47.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:44:47.003" endtime="20210921 12:44:47.003"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:44:47.009" level="INFO">Running command 'ozone sh bucket info /57376-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:44:53.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:44:53.221" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210921 12:44:47.007" endtime="20210921 12:44:53.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:44:53.223" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210921 12:44:53.221" endtime="20210921 12:44:53.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:44:53.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:44:53.223" endtime="20210921 12:44:53.224"/>
</kw>
<status status="PASS" starttime="20210921 12:44:47.006" endtime="20210921 12:44:53.224"/>
</kw>
<msg timestamp="20210921 12:44:53.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:44:47.005" endtime="20210921 12:44:53.224"/>
</kw>
<msg timestamp="20210921 12:44:53.225" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210921 12:44:47.003" endtime="20210921 12:44:53.225"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:44:53.225" endtime="20210921 12:44:53.225"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:44:53.230" level="INFO">Running command 'ozone sh bucket info /57376-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:45:01.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:45:01.772" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210921 12:44:53.228" endtime="20210921 12:45:01.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:45:01.775" level="INFO">100</msg>
<status status="PASS" starttime="20210921 12:45:01.773" endtime="20210921 12:45:01.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:45:01.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:45:01.776" endtime="20210921 12:45:01.778"/>
</kw>
<status status="PASS" starttime="20210921 12:44:53.227" endtime="20210921 12:45:01.779"/>
</kw>
<msg timestamp="20210921 12:45:01.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:44:53.227" endtime="20210921 12:45:01.779"/>
</kw>
<msg timestamp="20210921 12:45:01.780" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210921 12:44:53.226" endtime="20210921 12:45:01.780"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:45:01.780" endtime="20210921 12:45:01.781"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:45:01.787" level="INFO">Running command 'ozone sh bucket setquota /57376-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:45:09.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:45:09.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:45:01.784" endtime="20210921 12:45:09.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:45:09.737" level="INFO"/>
<status status="PASS" starttime="20210921 12:45:09.734" endtime="20210921 12:45:09.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:45:09.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:45:09.737" endtime="20210921 12:45:09.738"/>
</kw>
<status status="PASS" starttime="20210921 12:45:01.784" endtime="20210921 12:45:09.739"/>
</kw>
<msg timestamp="20210921 12:45:09.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:45:01.783" endtime="20210921 12:45:09.740"/>
</kw>
<status status="PASS" starttime="20210921 12:45:01.782" endtime="20210921 12:45:09.740"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:45:09.748" level="INFO">Running command 'ozone sh bucket info /57376-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:45:17.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:45:17.837" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210921 12:45:09.745" endtime="20210921 12:45:17.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:45:17.839" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210921 12:45:17.838" endtime="20210921 12:45:17.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:45:17.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:45:17.840" endtime="20210921 12:45:17.841"/>
</kw>
<status status="PASS" starttime="20210921 12:45:09.743" endtime="20210921 12:45:17.842"/>
</kw>
<msg timestamp="20210921 12:45:17.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:45:09.743" endtime="20210921 12:45:17.842"/>
</kw>
<msg timestamp="20210921 12:45:17.842" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210921 12:45:09.740" endtime="20210921 12:45:17.842"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:45:17.843" endtime="20210921 12:45:17.844"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:45:17.851" level="INFO">Running command 'ozone sh bucket info /57376-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:45:26.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:45:26.229" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210921 12:45:17.847" endtime="20210921 12:45:26.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:45:26.230" level="INFO">1000</msg>
<status status="PASS" starttime="20210921 12:45:26.230" endtime="20210921 12:45:26.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:45:26.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:45:26.231" endtime="20210921 12:45:26.232"/>
</kw>
<status status="PASS" starttime="20210921 12:45:17.846" endtime="20210921 12:45:26.232"/>
</kw>
<msg timestamp="20210921 12:45:26.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:45:17.846" endtime="20210921 12:45:26.233"/>
</kw>
<msg timestamp="20210921 12:45:26.233" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210921 12:45:17.844" endtime="20210921 12:45:26.233"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:45:26.234" endtime="20210921 12:45:26.235"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:45:26.241" level="INFO">Running command 'ozone sh bucket list /57376-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:45:34.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:45:34.917" level="INFO">${output} = 57376-rpcbasic</msg>
<status status="PASS" starttime="20210921 12:45:26.239" endtime="20210921 12:45:34.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:45:34.921" level="INFO">57376-rpcbasic</msg>
<status status="PASS" starttime="20210921 12:45:34.918" endtime="20210921 12:45:34.922"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:45:34.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:45:34.922" endtime="20210921 12:45:34.924"/>
</kw>
<status status="PASS" starttime="20210921 12:45:26.237" endtime="20210921 12:45:34.925"/>
</kw>
<msg timestamp="20210921 12:45:34.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:45:26.237" endtime="20210921 12:45:34.925"/>
</kw>
<msg timestamp="20210921 12:45:34.926" level="INFO">${result} = 57376-rpcbasic</msg>
<status status="PASS" starttime="20210921 12:45:26.235" endtime="20210921 12:45:34.926"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:45:34.926" endtime="20210921 12:45:34.927"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:45:34.937" level="INFO">Running command 'ozone sh key put /57376-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:48:43.099" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210921 12:45:34.933" endtime="20210921 12:48:43.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.100" endtime="20210921 12:48:43.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.100" endtime="20210921 12:48:43.100"/>
</kw>
<status status="FAIL" starttime="20210921 12:45:34.931" endtime="20210921 12:48:43.100"/>
</kw>
<msg timestamp="20210921 12:48:43.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210921 12:45:34.931" endtime="20210921 12:48:43.101"/>
</kw>
<status status="FAIL" starttime="20210921 12:45:34.929" endtime="20210921 12:48:43.101"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.101" endtime="20210921 12:48:43.101"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.101" endtime="20210921 12:48:43.101"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.102" endtime="20210921 12:48:43.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.102" endtime="20210921 12:48:43.102"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.102" endtime="20210921 12:48:43.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.102" endtime="20210921 12:48:43.102"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.103" endtime="20210921 12:48:43.103"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.103" endtime="20210921 12:48:43.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.103" endtime="20210921 12:48:43.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.103" endtime="20210921 12:48:43.103"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.104" endtime="20210921 12:48:43.104"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.104" endtime="20210921 12:48:43.104"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.104" endtime="20210921 12:48:43.104"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.104" endtime="20210921 12:48:43.104"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.104" endtime="20210921 12:48:43.104"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.105" endtime="20210921 12:48:43.105"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.105" endtime="20210921 12:48:43.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.105" endtime="20210921 12:48:43.105"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.105" endtime="20210921 12:48:43.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.106" endtime="20210921 12:48:43.106"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.106" endtime="20210921 12:48:43.106"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.106" endtime="20210921 12:48:43.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.106" endtime="20210921 12:48:43.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.106" endtime="20210921 12:48:43.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.107" endtime="20210921 12:48:43.107"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.107" endtime="20210921 12:48:43.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.107" endtime="20210921 12:48:43.107"/>
</kw>
<status status="FAIL" starttime="20210921 12:45:34.928" endtime="20210921 12:48:43.108"/>
</kw>
<status status="FAIL" starttime="20210921 12:45:34.927" endtime="20210921 12:48:43.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.108" endtime="20210921 12:48:43.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.108" endtime="20210921 12:48:43.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.108" endtime="20210921 12:48:43.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.109" endtime="20210921 12:48:43.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.109" endtime="20210921 12:48:43.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.109" endtime="20210921 12:48:43.109"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.109" endtime="20210921 12:48:43.109"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.109" endtime="20210921 12:48:43.109"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.110" endtime="20210921 12:48:43.110"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.110" endtime="20210921 12:48:43.110"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.110" endtime="20210921 12:48:43.110"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.110" endtime="20210921 12:48:43.110"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.110" endtime="20210921 12:48:43.111"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.111" endtime="20210921 12:48:43.111"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.111" endtime="20210921 12:48:43.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.111" endtime="20210921 12:48:43.111"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.111" endtime="20210921 12:48:43.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.111" endtime="20210921 12:48:43.112"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.112" endtime="20210921 12:48:43.112"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.112" endtime="20210921 12:48:43.112"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.112" endtime="20210921 12:48:43.112"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.113" endtime="20210921 12:48:43.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.114" endtime="20210921 12:48:43.114"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:48:43.115" endtime="20210921 12:48:43.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.115" endtime="20210921 12:48:43.116"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 12:48:43.116" endtime="20210921 12:48:43.116"/>
</kw>
<status status="FAIL" starttime="20210921 12:43:43.099" endtime="20210921 12:48:43.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210921 12:43:43.098" endtime="20210921 12:48:43.117">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210921 12:43:43.075" endtime="20210921 12:48:43.119"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210921 12:48:43.133" level="INFO">${random} = 64697</msg>
<status status="PASS" starttime="20210921 12:48:43.132" endtime="20210921 12:48:43.133"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:48:43.134" level="INFO">${prefix} = 64697</msg>
<status status="PASS" starttime="20210921 12:48:43.133" endtime="20210921 12:48:43.134"/>
</kw>
<status status="PASS" starttime="20210921 12:48:43.132" endtime="20210921 12:48:43.134"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:48:43.141" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:48:43.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:48:43.147" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:48:43.139" endtime="20210921 12:48:43.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:48:43.149" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:48:43.148" endtime="20210921 12:48:43.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:48:43.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:48:43.149" endtime="20210921 12:48:43.150"/>
</kw>
<status status="PASS" starttime="20210921 12:48:43.138" endtime="20210921 12:48:43.151"/>
</kw>
<msg timestamp="20210921 12:48:43.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:48:43.138" endtime="20210921 12:48:43.151"/>
</kw>
<msg timestamp="20210921 12:48:43.151" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:48:43.137" endtime="20210921 12:48:43.151"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:48:43.154" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:48:43.152" endtime="20210921 12:48:43.155"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:48:43.161" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:48:43.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:48:43.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:48:43.158" endtime="20210921 12:48:43.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:48:43.376" level="INFO"/>
<status status="PASS" starttime="20210921 12:48:43.375" endtime="20210921 12:48:43.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:48:43.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:48:43.376" endtime="20210921 12:48:43.379"/>
</kw>
<status status="PASS" starttime="20210921 12:48:43.157" endtime="20210921 12:48:43.379"/>
</kw>
<msg timestamp="20210921 12:48:43.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:48:43.156" endtime="20210921 12:48:43.379"/>
</kw>
<status status="PASS" starttime="20210921 12:48:43.155" endtime="20210921 12:48:43.380"/>
</kw>
<status status="PASS" starttime="20210921 12:48:43.155" endtime="20210921 12:48:43.380"/>
</kw>
<status status="PASS" starttime="20210921 12:48:43.136" endtime="20210921 12:48:43.380"/>
</kw>
<status status="PASS" starttime="20210921 12:48:43.135" endtime="20210921 12:48:43.380"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:48:43.384" level="INFO">Running command 'ozone sh volume info o3://om:9862/64697-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:48:51.657" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 12:48:51.657" level="INFO">${output} = VOLUME_NOT_FOUND Volume 64697-rpcwoport is not found</msg>
<status status="PASS" starttime="20210921 12:48:43.382" endtime="20210921 12:48:51.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:48:51.660" level="INFO">VOLUME_NOT_FOUND Volume 64697-rpcwoport is not found</msg>
<status status="PASS" starttime="20210921 12:48:51.658" endtime="20210921 12:48:51.660"/>
</kw>
<msg timestamp="20210921 12:48:51.661" level="INFO">${result} = VOLUME_NOT_FOUND Volume 64697-rpcwoport is not found</msg>
<status status="PASS" starttime="20210921 12:48:43.381" endtime="20210921 12:48:51.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:48:51.662" endtime="20210921 12:48:51.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:48:51.672" level="INFO">Running command 'ozone sh volume create o3://om:9862/64697-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:48:58.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:48:58.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:48:51.668" endtime="20210921 12:48:58.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:48:59.001" level="INFO"/>
<status status="PASS" starttime="20210921 12:48:59.000" endtime="20210921 12:48:59.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:48:59.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:48:59.002" endtime="20210921 12:48:59.002"/>
</kw>
<status status="PASS" starttime="20210921 12:48:51.667" endtime="20210921 12:48:59.003"/>
</kw>
<msg timestamp="20210921 12:48:59.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:48:51.666" endtime="20210921 12:48:59.003"/>
</kw>
<msg timestamp="20210921 12:48:59.004" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210921 12:48:51.663" endtime="20210921 12:48:59.004"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:48:59.004" endtime="20210921 12:48:59.005"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:48:59.014" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="64697-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:49:07.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:49:07.049" level="INFO">${output} = {
  "metadata": {},
  "name": "64697-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210921 12:48:59.007" endtime="20210921 12:49:07.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:49:07.051" level="INFO">{
  "metadata": {},
  "name": "64697-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-21T12:48:58.905Z",
  "modificationTime": "2021-09-21T12:48:58.905Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210921 12:49:07.049" endtime="20210921 12:49:07.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:49:07.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:49:07.051" endtime="20210921 12:49:07.052"/>
</kw>
<status status="PASS" starttime="20210921 12:48:59.007" endtime="20210921 12:49:07.053"/>
</kw>
<msg timestamp="20210921 12:49:07.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:48:59.006" endtime="20210921 12:49:07.053"/>
</kw>
<msg timestamp="20210921 12:49:07.054" level="INFO">${result} = {
  "metadata": {},
  "name": "64697-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210921 12:48:59.005" endtime="20210921 12:49:07.054"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:49:07.054" endtime="20210921 12:49:07.055"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:49:07.061" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="64697-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:49:13.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:49:13.788" level="INFO">${output} = {
  "metadata": {},
  "name": "64697-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210921 12:49:07.058" endtime="20210921 12:49:13.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:49:13.789" level="INFO">{
  "metadata": {},
  "name": "64697-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-21T12:48:58.905Z",
  "modificationTime": "2021-09-21T12:48:58.905Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210921 12:49:13.788" endtime="20210921 12:49:13.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:49:13.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:49:13.789" endtime="20210921 12:49:13.790"/>
</kw>
<status status="PASS" starttime="20210921 12:49:07.057" endtime="20210921 12:49:13.790"/>
</kw>
<msg timestamp="20210921 12:49:13.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:49:07.056" endtime="20210921 12:49:13.791"/>
</kw>
<msg timestamp="20210921 12:49:13.791" level="INFO">${result} = {
  "metadata": {},
  "name": "64697-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210921 12:49:07.055" endtime="20210921 12:49:13.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 12:49:13.791" endtime="20210921 12:49:13.792"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:49:13.798" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/64697-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:49:20.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:49:20.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:49:13.794" endtime="20210921 12:49:20.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:49:20.296" level="INFO"/>
<status status="PASS" starttime="20210921 12:49:20.295" endtime="20210921 12:49:20.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:49:20.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:49:20.296" endtime="20210921 12:49:20.297"/>
</kw>
<status status="PASS" starttime="20210921 12:49:13.793" endtime="20210921 12:49:20.297"/>
</kw>
<msg timestamp="20210921 12:49:20.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:49:13.793" endtime="20210921 12:49:20.297"/>
</kw>
<status status="PASS" starttime="20210921 12:49:13.792" endtime="20210921 12:49:20.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:49:20.302" level="INFO">Running command 'ozone sh volume info o3://om:9862/64697-rpcwoport | jq -r '. | select(.name=="64697-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:49:27.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:49:27.901" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210921 12:49:20.300" endtime="20210921 12:49:27.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:49:27.905" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210921 12:49:27.903" endtime="20210921 12:49:27.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:49:27.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:49:27.906" endtime="20210921 12:49:27.906"/>
</kw>
<status status="PASS" starttime="20210921 12:49:20.299" endtime="20210921 12:49:27.907"/>
</kw>
<msg timestamp="20210921 12:49:27.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:49:20.299" endtime="20210921 12:49:27.908"/>
</kw>
<msg timestamp="20210921 12:49:27.908" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210921 12:49:20.298" endtime="20210921 12:49:27.908"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:49:27.908" endtime="20210921 12:49:27.909"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:49:27.915" level="INFO">Running command 'ozone sh bucket create o3://om:9862/64697-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:49:33.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:49:33.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:49:27.912" endtime="20210921 12:49:33.704"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:49:33.705" level="INFO"/>
<status status="PASS" starttime="20210921 12:49:33.704" endtime="20210921 12:49:33.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:49:33.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:49:33.705" endtime="20210921 12:49:33.706"/>
</kw>
<status status="PASS" starttime="20210921 12:49:27.911" endtime="20210921 12:49:33.707"/>
</kw>
<msg timestamp="20210921 12:49:33.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:49:27.911" endtime="20210921 12:49:33.707"/>
</kw>
<status status="PASS" starttime="20210921 12:49:27.909" endtime="20210921 12:49:33.707"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:49:33.717" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64697-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:49:42.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:49:42.426" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210921 12:49:33.713" endtime="20210921 12:49:42.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:49:42.428" level="INFO">DISK</msg>
<status status="PASS" starttime="20210921 12:49:42.427" endtime="20210921 12:49:42.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:49:42.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:49:42.429" endtime="20210921 12:49:42.430"/>
</kw>
<status status="PASS" starttime="20210921 12:49:33.711" endtime="20210921 12:49:42.430"/>
</kw>
<msg timestamp="20210921 12:49:42.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:49:33.711" endtime="20210921 12:49:42.431"/>
</kw>
<msg timestamp="20210921 12:49:42.432" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210921 12:49:33.708" endtime="20210921 12:49:42.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:49:42.432" endtime="20210921 12:49:42.433"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:49:42.440" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64697-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:49:50.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:49:50.186" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210921 12:49:42.437" endtime="20210921 12:49:50.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:49:50.189" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210921 12:49:50.188" endtime="20210921 12:49:50.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:49:50.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:49:50.190" endtime="20210921 12:49:50.191"/>
</kw>
<status status="PASS" starttime="20210921 12:49:42.436" endtime="20210921 12:49:50.192"/>
</kw>
<msg timestamp="20210921 12:49:50.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:49:42.436" endtime="20210921 12:49:50.193"/>
</kw>
<msg timestamp="20210921 12:49:50.193" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210921 12:49:42.434" endtime="20210921 12:49:50.194"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:49:50.194" endtime="20210921 12:49:50.195"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:49:50.212" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64697-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:49:58.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:49:58.289" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210921 12:49:50.209" endtime="20210921 12:49:58.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:49:58.292" level="INFO">100</msg>
<status status="PASS" starttime="20210921 12:49:58.290" endtime="20210921 12:49:58.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:49:58.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:49:58.293" endtime="20210921 12:49:58.295"/>
</kw>
<status status="PASS" starttime="20210921 12:49:50.202" endtime="20210921 12:49:58.295"/>
</kw>
<msg timestamp="20210921 12:49:58.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:49:50.198" endtime="20210921 12:49:58.296"/>
</kw>
<msg timestamp="20210921 12:49:58.296" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210921 12:49:50.196" endtime="20210921 12:49:58.297"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:49:58.297" endtime="20210921 12:49:58.298"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:49:58.305" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/64697-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:50:05.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:50:05.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:49:58.302" endtime="20210921 12:50:05.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:50:05.802" level="INFO"/>
<status status="PASS" starttime="20210921 12:50:05.801" endtime="20210921 12:50:05.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:50:05.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:50:05.802" endtime="20210921 12:50:05.803"/>
</kw>
<status status="PASS" starttime="20210921 12:49:58.300" endtime="20210921 12:50:05.804"/>
</kw>
<msg timestamp="20210921 12:50:05.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:49:58.300" endtime="20210921 12:50:05.804"/>
</kw>
<status status="PASS" starttime="20210921 12:49:58.298" endtime="20210921 12:50:05.804"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:50:05.809" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64697-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:50:14.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:50:14.481" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210921 12:50:05.806" endtime="20210921 12:50:14.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:50:14.484" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210921 12:50:14.482" endtime="20210921 12:50:14.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:50:14.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:50:14.485" endtime="20210921 12:50:14.488"/>
</kw>
<status status="PASS" starttime="20210921 12:50:05.806" endtime="20210921 12:50:14.489"/>
</kw>
<msg timestamp="20210921 12:50:14.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:50:05.805" endtime="20210921 12:50:14.489"/>
</kw>
<msg timestamp="20210921 12:50:14.489" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210921 12:50:05.804" endtime="20210921 12:50:14.489"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:50:14.490" endtime="20210921 12:50:14.490"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:50:14.498" level="INFO">Running command 'ozone sh bucket info o3://om:9862/64697-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:50:21.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:50:21.867" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210921 12:50:14.493" endtime="20210921 12:50:21.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:50:21.868" level="INFO">1000</msg>
<status status="PASS" starttime="20210921 12:50:21.868" endtime="20210921 12:50:21.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:50:21.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:50:21.869" endtime="20210921 12:50:21.869"/>
</kw>
<status status="PASS" starttime="20210921 12:50:14.492" endtime="20210921 12:50:21.870"/>
</kw>
<msg timestamp="20210921 12:50:21.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:50:14.492" endtime="20210921 12:50:21.870"/>
</kw>
<msg timestamp="20210921 12:50:21.870" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210921 12:50:14.490" endtime="20210921 12:50:21.870"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:50:21.870" endtime="20210921 12:50:21.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:50:21.876" level="INFO">Running command 'ozone sh bucket list o3://om:9862/64697-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:50:30.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:50:30.014" level="INFO">${output} = 64697-rpcwoport</msg>
<status status="PASS" starttime="20210921 12:50:21.873" endtime="20210921 12:50:30.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:50:30.020" level="INFO">64697-rpcwoport</msg>
<status status="PASS" starttime="20210921 12:50:30.014" endtime="20210921 12:50:30.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:50:30.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:50:30.020" endtime="20210921 12:50:30.021"/>
</kw>
<status status="PASS" starttime="20210921 12:50:21.872" endtime="20210921 12:50:30.022"/>
</kw>
<msg timestamp="20210921 12:50:30.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:50:21.872" endtime="20210921 12:50:30.022"/>
</kw>
<msg timestamp="20210921 12:50:30.022" level="INFO">${result} = 64697-rpcwoport</msg>
<status status="PASS" starttime="20210921 12:50:21.871" endtime="20210921 12:50:30.022"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 12:50:30.023" endtime="20210921 12:50:30.024"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:50:30.033" level="INFO">Running command 'ozone sh key put o3://om:9862/64697-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:53:41.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:53:41.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:50:30.027" endtime="20210921 12:53:41.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:53:41.833" level="INFO"/>
<status status="PASS" starttime="20210921 12:53:41.831" endtime="20210921 12:53:41.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:53:41.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:53:41.833" endtime="20210921 12:53:41.834"/>
</kw>
<status status="PASS" starttime="20210921 12:50:30.026" endtime="20210921 12:53:41.835"/>
</kw>
<msg timestamp="20210921 12:53:41.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:50:30.026" endtime="20210921 12:53:41.835"/>
</kw>
<status status="PASS" starttime="20210921 12:50:30.025" endtime="20210921 12:53:41.836"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:53:41.842" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:53:41.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:53:41.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:53:41.840" endtime="20210921 12:53:41.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:53:41.847" level="INFO"/>
<status status="PASS" starttime="20210921 12:53:41.846" endtime="20210921 12:53:41.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:53:41.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:53:41.847" endtime="20210921 12:53:41.848"/>
</kw>
<status status="PASS" starttime="20210921 12:53:41.837" endtime="20210921 12:53:41.848"/>
</kw>
<msg timestamp="20210921 12:53:41.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:53:41.837" endtime="20210921 12:53:41.849"/>
</kw>
<status status="PASS" starttime="20210921 12:53:41.836" endtime="20210921 12:53:41.849"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:53:41.855" level="INFO">Running command 'ozone sh key get o3://om:9862/64697-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:53:43.136" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210921 12:53:41.852" endtime="20210921 12:53:43.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.137" endtime="20210921 12:53:43.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.138" endtime="20210921 12:53:43.138"/>
</kw>
<status status="FAIL" starttime="20210921 12:53:41.852" endtime="20210921 12:53:43.139"/>
</kw>
<msg timestamp="20210921 12:53:43.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210921 12:53:41.851" endtime="20210921 12:53:43.139"/>
</kw>
<status status="FAIL" starttime="20210921 12:53:41.849" endtime="20210921 12:53:43.140"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.140" endtime="20210921 12:53:43.140"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.141" endtime="20210921 12:53:43.141"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.141" endtime="20210921 12:53:43.141"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.141" endtime="20210921 12:53:43.141"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.142" endtime="20210921 12:53:43.142"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.142" endtime="20210921 12:53:43.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.142" endtime="20210921 12:53:43.143"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.143" endtime="20210921 12:53:43.143"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.143" endtime="20210921 12:53:43.143"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.144" endtime="20210921 12:53:43.147"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.147" endtime="20210921 12:53:43.147"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.149" endtime="20210921 12:53:43.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.150" endtime="20210921 12:53:43.150"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.150" endtime="20210921 12:53:43.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.152" endtime="20210921 12:53:43.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.153" endtime="20210921 12:53:43.153"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.153" endtime="20210921 12:53:43.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.156" endtime="20210921 12:53:43.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.156" endtime="20210921 12:53:43.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.156" endtime="20210921 12:53:43.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.157" endtime="20210921 12:53:43.157"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.157" endtime="20210921 12:53:43.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.158" endtime="20210921 12:53:43.159"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.159" endtime="20210921 12:53:43.160"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.160" endtime="20210921 12:53:43.160"/>
</kw>
<status status="FAIL" starttime="20210921 12:50:30.025" endtime="20210921 12:53:43.161"/>
</kw>
<status status="FAIL" starttime="20210921 12:50:30.024" endtime="20210921 12:53:43.161"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.164" endtime="20210921 12:53:43.164"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.165" endtime="20210921 12:53:43.165"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.166" endtime="20210921 12:53:43.166"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.166" endtime="20210921 12:53:43.166"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.167" endtime="20210921 12:53:43.167"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.168" endtime="20210921 12:53:43.168"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.169" endtime="20210921 12:53:43.169"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.170" endtime="20210921 12:53:43.170"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.171" endtime="20210921 12:53:43.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.171" endtime="20210921 12:53:43.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.172" endtime="20210921 12:53:43.172"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.173" endtime="20210921 12:53:43.173"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.173" endtime="20210921 12:53:43.174"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.174" endtime="20210921 12:53:43.174"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.175" endtime="20210921 12:53:43.175"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.176" endtime="20210921 12:53:43.176"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.176" endtime="20210921 12:53:43.176"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.177" endtime="20210921 12:53:43.177"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.178" endtime="20210921 12:53:43.178"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.179" endtime="20210921 12:53:43.180"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.181" endtime="20210921 12:53:43.181"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.181" endtime="20210921 12:53:43.181"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.182" endtime="20210921 12:53:43.182"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 12:53:43.183" endtime="20210921 12:53:43.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.184" endtime="20210921 12:53:43.184"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 12:53:43.184" endtime="20210921 12:53:43.185"/>
</kw>
<status status="FAIL" starttime="20210921 12:48:43.380" endtime="20210921 12:53:43.186"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210921 12:48:43.134" endtime="20210921 12:53:43.186">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:53:43.246" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:53:43.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:53:43.259" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:53:43.235" endtime="20210921 12:53:43.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:53:43.260" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:53:43.259" endtime="20210921 12:53:43.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:53:43.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:53:43.261" endtime="20210921 12:53:43.262"/>
</kw>
<status status="PASS" starttime="20210921 12:53:43.231" endtime="20210921 12:53:43.262"/>
</kw>
<msg timestamp="20210921 12:53:43.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:53:43.198" endtime="20210921 12:53:43.262"/>
</kw>
<msg timestamp="20210921 12:53:43.264" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:53:43.196" endtime="20210921 12:53:43.264"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:53:43.267" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:53:43.265" endtime="20210921 12:53:43.270"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:53:43.284" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:53:43.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:53:43.474" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:53:43.280" endtime="20210921 12:53:43.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:53:43.476" level="INFO"/>
<status status="PASS" starttime="20210921 12:53:43.475" endtime="20210921 12:53:43.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:53:43.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:53:43.476" endtime="20210921 12:53:43.478"/>
</kw>
<status status="PASS" starttime="20210921 12:53:43.275" endtime="20210921 12:53:43.478"/>
</kw>
<msg timestamp="20210921 12:53:43.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:53:43.274" endtime="20210921 12:53:43.478"/>
</kw>
<status status="PASS" starttime="20210921 12:53:43.272" endtime="20210921 12:53:43.479"/>
</kw>
<status status="PASS" starttime="20210921 12:53:43.270" endtime="20210921 12:53:43.479"/>
</kw>
<status status="PASS" starttime="20210921 12:53:43.193" endtime="20210921 12:53:43.479"/>
</kw>
<status status="PASS" starttime="20210921 12:53:43.192" endtime="20210921 12:53:43.480"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:53:43.505" level="INFO">Running command 'ozone sh volume create o3://om:9862/64697-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:53:58.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:53:58.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:53:43.494" endtime="20210921 12:53:58.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:53:58.194" level="INFO"/>
<status status="PASS" starttime="20210921 12:53:58.193" endtime="20210921 12:53:58.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:53:58.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:53:58.194" endtime="20210921 12:53:58.195"/>
</kw>
<status status="PASS" starttime="20210921 12:53:43.493" endtime="20210921 12:53:58.195"/>
</kw>
<msg timestamp="20210921 12:53:58.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:53:43.489" endtime="20210921 12:53:58.196"/>
</kw>
<status status="PASS" starttime="20210921 12:53:43.483" endtime="20210921 12:53:58.196"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:53:58.205" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/64697-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:54:05.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:54:05.370" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:53:58.198" endtime="20210921 12:54:05.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:54:05.371" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:54:05.370" endtime="20210921 12:54:05.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:54:05.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:54:05.371" endtime="20210921 12:54:05.372"/>
</kw>
<status status="PASS" starttime="20210921 12:53:58.197" endtime="20210921 12:54:05.372"/>
</kw>
<msg timestamp="20210921 12:54:05.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:53:58.197" endtime="20210921 12:54:05.373"/>
</kw>
<msg timestamp="20210921 12:54:05.373" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:53:58.196" endtime="20210921 12:54:05.373"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:54:05.373" endtime="20210921 12:54:05.374"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:54:05.380" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/64697-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:54:13.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:54:13.103" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210921 12:54:05.376" endtime="20210921 12:54:13.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:54:13.106" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210921 12:54:13.104" endtime="20210921 12:54:13.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:54:13.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:54:13.106" endtime="20210921 12:54:13.108"/>
</kw>
<status status="PASS" starttime="20210921 12:54:05.376" endtime="20210921 12:54:13.109"/>
</kw>
<msg timestamp="20210921 12:54:13.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:54:05.375" endtime="20210921 12:54:13.110"/>
</kw>
<msg timestamp="20210921 12:54:13.110" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210921 12:54:05.374" endtime="20210921 12:54:13.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:54:13.116" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/64697-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:54:21.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:54:21.281" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210921 12:54:13.114" endtime="20210921 12:54:21.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:54:21.283" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:54:21.282" endtime="20210921 12:54:21.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:54:21.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:54:21.283" endtime="20210921 12:54:21.285"/>
</kw>
<status status="PASS" starttime="20210921 12:54:13.113" endtime="20210921 12:54:21.285"/>
</kw>
<msg timestamp="20210921 12:54:21.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:54:13.113" endtime="20210921 12:54:21.286"/>
</kw>
<msg timestamp="20210921 12:54:21.286" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210921 12:54:13.111" endtime="20210921 12:54:21.287"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:54:21.287" endtime="20210921 12:54:21.289"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:54:21.296" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/64697-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:54:27.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:54:27.872" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210921 12:54:21.293" endtime="20210921 12:54:27.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:54:27.874" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210921 12:54:27.873" endtime="20210921 12:54:27.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:54:27.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:54:27.874" endtime="20210921 12:54:27.875"/>
</kw>
<status status="PASS" starttime="20210921 12:54:21.292" endtime="20210921 12:54:27.876"/>
</kw>
<msg timestamp="20210921 12:54:27.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:54:21.291" endtime="20210921 12:54:27.876"/>
</kw>
<msg timestamp="20210921 12:54:27.876" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210921 12:54:21.289" endtime="20210921 12:54:27.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:54:27.881" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/64697-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:54:35.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:54:35.180" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210921 12:54:27.878" endtime="20210921 12:54:35.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:54:35.181" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:54:35.180" endtime="20210921 12:54:35.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:54:35.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:54:35.182" endtime="20210921 12:54:35.182"/>
</kw>
<status status="PASS" starttime="20210921 12:54:27.878" endtime="20210921 12:54:35.183"/>
</kw>
<msg timestamp="20210921 12:54:35.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:54:27.877" endtime="20210921 12:54:35.183"/>
</kw>
<msg timestamp="20210921 12:54:35.183" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210921 12:54:27.876" endtime="20210921 12:54:35.183"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:54:35.184" endtime="20210921 12:54:35.185"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:54:35.190" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/64697-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:54:42.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:54:42.344" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 12:54:35.187" endtime="20210921 12:54:42.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:54:42.346" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 12:54:42.345" endtime="20210921 12:54:42.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:54:42.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:54:42.346" endtime="20210921 12:54:42.347"/>
</kw>
<status status="PASS" starttime="20210921 12:54:35.186" endtime="20210921 12:54:42.347"/>
</kw>
<msg timestamp="20210921 12:54:42.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:54:35.186" endtime="20210921 12:54:42.348"/>
</kw>
<msg timestamp="20210921 12:54:42.348" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 12:54:35.185" endtime="20210921 12:54:42.348"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:54:42.354" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/64697-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:54:50.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:54:50.188" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210921 12:54:42.351" endtime="20210921 12:54:50.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:54:50.190" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:54:50.189" endtime="20210921 12:54:50.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:54:50.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:54:50.191" endtime="20210921 12:54:50.192"/>
</kw>
<status status="PASS" starttime="20210921 12:54:42.350" endtime="20210921 12:54:50.193"/>
</kw>
<msg timestamp="20210921 12:54:50.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:54:42.350" endtime="20210921 12:54:50.193"/>
</kw>
<msg timestamp="20210921 12:54:50.194" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210921 12:54:42.348" endtime="20210921 12:54:50.194"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:54:50.195" endtime="20210921 12:54:50.196"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:54:50.196" endtime="20210921 12:54:50.198"/>
</kw>
<status status="PASS" starttime="20210921 12:53:43.480" endtime="20210921 12:54:50.199"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210921 12:53:43.190" endtime="20210921 12:54:50.199"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:54:50.212" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:54:50.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:54:50.218" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:54:50.207" endtime="20210921 12:54:50.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:54:50.220" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:54:50.219" endtime="20210921 12:54:50.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:54:50.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:54:50.221" endtime="20210921 12:54:50.222"/>
</kw>
<status status="PASS" starttime="20210921 12:54:50.206" endtime="20210921 12:54:50.223"/>
</kw>
<msg timestamp="20210921 12:54:50.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:54:50.206" endtime="20210921 12:54:50.224"/>
</kw>
<msg timestamp="20210921 12:54:50.224" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:54:50.205" endtime="20210921 12:54:50.224"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:54:50.225" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:54:50.224" endtime="20210921 12:54:50.226"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:54:50.232" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:54:50.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:54:50.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:54:50.229" endtime="20210921 12:54:50.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:54:50.311" level="INFO"/>
<status status="PASS" starttime="20210921 12:54:50.310" endtime="20210921 12:54:50.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:54:50.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:54:50.312" endtime="20210921 12:54:50.313"/>
</kw>
<status status="PASS" starttime="20210921 12:54:50.228" endtime="20210921 12:54:50.313"/>
</kw>
<msg timestamp="20210921 12:54:50.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:54:50.228" endtime="20210921 12:54:50.313"/>
</kw>
<status status="PASS" starttime="20210921 12:54:50.227" endtime="20210921 12:54:50.314"/>
</kw>
<status status="PASS" starttime="20210921 12:54:50.226" endtime="20210921 12:54:50.314"/>
</kw>
<status status="PASS" starttime="20210921 12:54:50.203" endtime="20210921 12:54:50.314"/>
</kw>
<status status="PASS" starttime="20210921 12:54:50.202" endtime="20210921 12:54:50.314"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:54:50.324" level="INFO">Running command 'ozone sh bucket create o3://om:9862/64697-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:54:55.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:54:55.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:54:50.321" endtime="20210921 12:54:55.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:54:55.949" level="INFO"/>
<status status="PASS" starttime="20210921 12:54:55.948" endtime="20210921 12:54:55.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:54:55.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:54:55.949" endtime="20210921 12:54:55.950"/>
</kw>
<status status="PASS" starttime="20210921 12:54:50.319" endtime="20210921 12:54:55.950"/>
</kw>
<msg timestamp="20210921 12:54:55.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:54:50.318" endtime="20210921 12:54:55.951"/>
</kw>
<status status="PASS" starttime="20210921 12:54:50.317" endtime="20210921 12:54:55.951"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:54:55.956" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/64697-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:55:03.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:55:03.434" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210921 12:54:55.953" endtime="20210921 12:55:03.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:55:03.437" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:55:03.435" endtime="20210921 12:55:03.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:55:03.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:55:03.437" endtime="20210921 12:55:03.438"/>
</kw>
<status status="PASS" starttime="20210921 12:54:55.953" endtime="20210921 12:55:03.438"/>
</kw>
<msg timestamp="20210921 12:55:03.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:54:55.952" endtime="20210921 12:55:03.439"/>
</kw>
<msg timestamp="20210921 12:55:03.439" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210921 12:54:55.951" endtime="20210921 12:55:03.439"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:55:03.440" endtime="20210921 12:55:03.440"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:55:03.446" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/64697-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:55:11.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:55:11.769" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210921 12:55:03.443" endtime="20210921 12:55:11.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:55:11.770" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210921 12:55:11.769" endtime="20210921 12:55:11.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:55:11.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:55:11.770" endtime="20210921 12:55:11.771"/>
</kw>
<status status="PASS" starttime="20210921 12:55:03.442" endtime="20210921 12:55:11.771"/>
</kw>
<msg timestamp="20210921 12:55:11.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:55:03.442" endtime="20210921 12:55:11.772"/>
</kw>
<msg timestamp="20210921 12:55:11.772" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210921 12:55:03.441" endtime="20210921 12:55:11.772"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:55:11.777" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/64697-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:55:19.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:55:19.071" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210921 12:55:11.774" endtime="20210921 12:55:19.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:55:19.072" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:55:19.071" endtime="20210921 12:55:19.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:55:19.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:55:19.072" endtime="20210921 12:55:19.073"/>
</kw>
<status status="PASS" starttime="20210921 12:55:11.774" endtime="20210921 12:55:19.073"/>
</kw>
<msg timestamp="20210921 12:55:19.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:55:11.773" endtime="20210921 12:55:19.074"/>
</kw>
<msg timestamp="20210921 12:55:19.074" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210921 12:55:11.772" endtime="20210921 12:55:19.074"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:55:19.074" endtime="20210921 12:55:19.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:55:19.080" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/64697-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:55:25.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:55:25.157" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210921 12:55:19.078" endtime="20210921 12:55:25.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:55:25.158" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210921 12:55:25.158" endtime="20210921 12:55:25.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:55:25.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:55:25.159" endtime="20210921 12:55:25.159"/>
</kw>
<status status="PASS" starttime="20210921 12:55:19.077" endtime="20210921 12:55:25.160"/>
</kw>
<msg timestamp="20210921 12:55:25.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:55:19.077" endtime="20210921 12:55:25.160"/>
</kw>
<msg timestamp="20210921 12:55:25.160" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210921 12:55:19.076" endtime="20210921 12:55:25.160"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:55:25.165" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/64697-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:55:30.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:55:30.320" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210921 12:55:25.162" endtime="20210921 12:55:30.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:55:30.322" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:55:30.321" endtime="20210921 12:55:30.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:55:30.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:55:30.322" endtime="20210921 12:55:30.323"/>
</kw>
<status status="PASS" starttime="20210921 12:55:25.162" endtime="20210921 12:55:30.323"/>
</kw>
<msg timestamp="20210921 12:55:30.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:55:25.161" endtime="20210921 12:55:30.323"/>
</kw>
<msg timestamp="20210921 12:55:30.324" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210921 12:55:25.160" endtime="20210921 12:55:30.324"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:55:30.324" endtime="20210921 12:55:30.325"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:55:30.329" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/64697-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:55:37.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:55:37.336" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 12:55:30.327" endtime="20210921 12:55:37.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:55:37.337" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 12:55:37.337" endtime="20210921 12:55:37.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:55:37.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:55:37.338" endtime="20210921 12:55:37.338"/>
</kw>
<status status="PASS" starttime="20210921 12:55:30.326" endtime="20210921 12:55:37.339"/>
</kw>
<msg timestamp="20210921 12:55:37.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:55:30.326" endtime="20210921 12:55:37.340"/>
</kw>
<msg timestamp="20210921 12:55:37.340" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 12:55:30.325" endtime="20210921 12:55:37.341"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:55:37.346" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/64697-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:55:44.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:55:44.808" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210921 12:55:37.343" endtime="20210921 12:55:44.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:55:44.811" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:55:44.810" endtime="20210921 12:55:44.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:55:44.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:55:44.811" endtime="20210921 12:55:44.812"/>
</kw>
<status status="PASS" starttime="20210921 12:55:37.342" endtime="20210921 12:55:44.812"/>
</kw>
<msg timestamp="20210921 12:55:44.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:55:37.342" endtime="20210921 12:55:44.813"/>
</kw>
<msg timestamp="20210921 12:55:44.814" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210921 12:55:37.341" endtime="20210921 12:55:44.814"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:55:44.814" endtime="20210921 12:55:44.815"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:55:44.815" endtime="20210921 12:55:44.816"/>
</kw>
<status status="PASS" starttime="20210921 12:54:50.315" endtime="20210921 12:55:44.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210921 12:54:50.201" endtime="20210921 12:55:44.817"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:55:44.826" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:55:44.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:55:44.831" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:55:44.822" endtime="20210921 12:55:44.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:55:44.832" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:55:44.831" endtime="20210921 12:55:44.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:55:44.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:55:44.833" endtime="20210921 12:55:44.834"/>
</kw>
<status status="PASS" starttime="20210921 12:55:44.821" endtime="20210921 12:55:44.834"/>
</kw>
<msg timestamp="20210921 12:55:44.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:55:44.821" endtime="20210921 12:55:44.835"/>
</kw>
<msg timestamp="20210921 12:55:44.835" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:55:44.820" endtime="20210921 12:55:44.835"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:55:44.836" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:55:44.835" endtime="20210921 12:55:44.836"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:55:44.846" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:55:44.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:55:44.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:55:44.841" endtime="20210921 12:55:44.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:55:44.856" level="INFO"/>
<status status="PASS" starttime="20210921 12:55:44.855" endtime="20210921 12:55:44.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:55:44.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:55:44.857" endtime="20210921 12:55:44.858"/>
</kw>
<status status="PASS" starttime="20210921 12:55:44.839" endtime="20210921 12:55:44.859"/>
</kw>
<msg timestamp="20210921 12:55:44.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:55:44.839" endtime="20210921 12:55:44.859"/>
</kw>
<status status="PASS" starttime="20210921 12:55:44.837" endtime="20210921 12:55:44.860"/>
</kw>
<status status="PASS" starttime="20210921 12:55:44.836" endtime="20210921 12:55:44.860"/>
</kw>
<status status="PASS" starttime="20210921 12:55:44.819" endtime="20210921 12:55:44.861"/>
</kw>
<status status="PASS" starttime="20210921 12:55:44.818" endtime="20210921 12:55:44.861"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:55:44.867" level="INFO">Running command 'ozone sh key put o3://om:9862/64697-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:58:56.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:58:56.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:55:44.864" endtime="20210921 12:58:56.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:58:56.963" level="INFO"/>
<status status="PASS" starttime="20210921 12:58:56.961" endtime="20210921 12:58:56.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:58:56.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:58:56.963" endtime="20210921 12:58:56.966"/>
</kw>
<status status="PASS" starttime="20210921 12:55:44.864" endtime="20210921 12:58:56.966"/>
</kw>
<msg timestamp="20210921 12:58:56.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:55:44.863" endtime="20210921 12:58:56.967"/>
</kw>
<status status="PASS" starttime="20210921 12:55:44.862" endtime="20210921 12:58:56.967"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:58:56.971" level="INFO">Running command 'ozone sh key getacl o3://om:9862/64697-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:59:06.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:59:06.186" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210921 12:58:56.969" endtime="20210921 12:59:06.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:59:06.189" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:59:06.188" endtime="20210921 12:59:06.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:59:06.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:59:06.190" endtime="20210921 12:59:06.192"/>
</kw>
<status status="PASS" starttime="20210921 12:58:56.968" endtime="20210921 12:59:06.192"/>
</kw>
<msg timestamp="20210921 12:59:06.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:58:56.968" endtime="20210921 12:59:06.193"/>
</kw>
<msg timestamp="20210921 12:59:06.193" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210921 12:58:56.967" endtime="20210921 12:59:06.193"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:59:06.193" endtime="20210921 12:59:06.194"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:59:06.203" level="INFO">Running command 'ozone sh key addacl o3://om:9862/64697-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:59:14.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:59:14.845" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:59:06.199" endtime="20210921 12:59:14.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:59:14.846" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:59:14.846" endtime="20210921 12:59:14.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:59:14.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:59:14.847" endtime="20210921 12:59:14.847"/>
</kw>
<status status="PASS" starttime="20210921 12:59:06.198" endtime="20210921 12:59:14.848"/>
</kw>
<msg timestamp="20210921 12:59:14.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:59:06.197" endtime="20210921 12:59:14.848"/>
</kw>
<msg timestamp="20210921 12:59:14.849" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210921 12:59:06.195" endtime="20210921 12:59:14.849"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:59:14.855" level="INFO">Running command 'ozone sh key getacl o3://om:9862/64697-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:59:22.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:59:22.804" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210921 12:59:14.851" endtime="20210921 12:59:22.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:59:22.807" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:59:22.805" endtime="20210921 12:59:22.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:59:22.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:59:22.808" endtime="20210921 12:59:22.809"/>
</kw>
<status status="PASS" starttime="20210921 12:59:14.850" endtime="20210921 12:59:22.809"/>
</kw>
<msg timestamp="20210921 12:59:22.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:59:14.850" endtime="20210921 12:59:22.809"/>
</kw>
<msg timestamp="20210921 12:59:22.810" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210921 12:59:14.849" endtime="20210921 12:59:22.810"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:59:22.810" endtime="20210921 12:59:22.812"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:59:22.822" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/64697-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:59:28.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:59:28.013" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210921 12:59:22.818" endtime="20210921 12:59:28.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:59:28.015" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210921 12:59:28.014" endtime="20210921 12:59:28.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:59:28.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:59:28.015" endtime="20210921 12:59:28.016"/>
</kw>
<status status="PASS" starttime="20210921 12:59:22.815" endtime="20210921 12:59:28.016"/>
</kw>
<msg timestamp="20210921 12:59:28.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:59:22.814" endtime="20210921 12:59:28.016"/>
</kw>
<msg timestamp="20210921 12:59:28.016" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210921 12:59:22.812" endtime="20210921 12:59:28.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:59:28.021" level="INFO">Running command 'ozone sh key getacl o3://om:9862/64697-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:59:34.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:59:34.873" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210921 12:59:28.019" endtime="20210921 12:59:34.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:59:34.875" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:59:34.874" endtime="20210921 12:59:34.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:59:34.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:59:34.875" endtime="20210921 12:59:34.876"/>
</kw>
<status status="PASS" starttime="20210921 12:59:28.018" endtime="20210921 12:59:34.876"/>
</kw>
<msg timestamp="20210921 12:59:34.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:59:28.018" endtime="20210921 12:59:34.876"/>
</kw>
<msg timestamp="20210921 12:59:34.877" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210921 12:59:28.017" endtime="20210921 12:59:34.877"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:59:34.877" endtime="20210921 12:59:34.878"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:59:34.884" level="INFO">Running command 'ozone sh key setacl o3://om:9862/64697-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:59:41.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:59:41.468" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 12:59:34.880" endtime="20210921 12:59:41.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:59:41.470" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 12:59:41.469" endtime="20210921 12:59:41.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:59:41.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:59:41.470" endtime="20210921 12:59:41.471"/>
</kw>
<status status="PASS" starttime="20210921 12:59:34.879" endtime="20210921 12:59:41.471"/>
</kw>
<msg timestamp="20210921 12:59:41.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:59:34.879" endtime="20210921 12:59:41.472"/>
</kw>
<msg timestamp="20210921 12:59:41.472" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 12:59:34.878" endtime="20210921 12:59:41.472"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:59:41.477" level="INFO">Running command 'ozone sh key getacl o3://om:9862/64697-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:59:49.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:59:49.415" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210921 12:59:41.474" endtime="20210921 12:59:49.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:59:49.417" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210921 12:59:49.416" endtime="20210921 12:59:49.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:59:49.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:59:49.417" endtime="20210921 12:59:49.418"/>
</kw>
<status status="PASS" starttime="20210921 12:59:41.473" endtime="20210921 12:59:49.418"/>
</kw>
<msg timestamp="20210921 12:59:49.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:59:41.473" endtime="20210921 12:59:49.418"/>
</kw>
<msg timestamp="20210921 12:59:49.419" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210921 12:59:41.472" endtime="20210921 12:59:49.419"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:59:49.419" endtime="20210921 12:59:49.420"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 12:59:49.420" endtime="20210921 12:59:49.421"/>
</kw>
<status status="PASS" starttime="20210921 12:55:44.861" endtime="20210921 12:59:49.422"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210921 12:55:44.817" endtime="20210921 12:59:49.422"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:59:49.430" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:59:49.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:59:49.436" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:59:49.428" endtime="20210921 12:59:49.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:59:49.439" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:59:49.437" endtime="20210921 12:59:49.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:59:49.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:59:49.439" endtime="20210921 12:59:49.440"/>
</kw>
<status status="PASS" starttime="20210921 12:59:49.427" endtime="20210921 12:59:49.441"/>
</kw>
<msg timestamp="20210921 12:59:49.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:59:49.427" endtime="20210921 12:59:49.441"/>
</kw>
<msg timestamp="20210921 12:59:49.441" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:59:49.426" endtime="20210921 12:59:49.441"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:59:49.442" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:59:49.441" endtime="20210921 12:59:49.442"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:59:49.447" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:59:49.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:59:49.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:59:49.445" endtime="20210921 12:59:49.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:59:49.597" level="INFO"/>
<status status="PASS" starttime="20210921 12:59:49.596" endtime="20210921 12:59:49.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:59:49.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:59:49.597" endtime="20210921 12:59:49.598"/>
</kw>
<status status="PASS" starttime="20210921 12:59:49.444" endtime="20210921 12:59:49.598"/>
</kw>
<msg timestamp="20210921 12:59:49.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:59:49.444" endtime="20210921 12:59:49.598"/>
</kw>
<status status="PASS" starttime="20210921 12:59:49.443" endtime="20210921 12:59:49.599"/>
</kw>
<status status="PASS" starttime="20210921 12:59:49.442" endtime="20210921 12:59:49.599"/>
</kw>
<status status="PASS" starttime="20210921 12:59:49.426" endtime="20210921 12:59:49.599"/>
</kw>
<status status="PASS" starttime="20210921 12:59:49.425" endtime="20210921 12:59:49.599"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:59:49.605" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/64697-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:59:57.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:59:57.139" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210921 12:59:49.602" endtime="20210921 12:59:57.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:59:57.142" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210921 12:59:57.140" endtime="20210921 12:59:57.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:59:57.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:59:57.143" endtime="20210921 12:59:57.144"/>
</kw>
<status status="PASS" starttime="20210921 12:59:49.601" endtime="20210921 12:59:57.144"/>
</kw>
<msg timestamp="20210921 12:59:57.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:59:49.601" endtime="20210921 12:59:57.145"/>
</kw>
<status status="PASS" starttime="20210921 12:59:49.600" endtime="20210921 12:59:57.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:59:57.150" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/64697-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:00:04.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:00:04.189" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210921 12:59:57.147" endtime="20210921 13:00:04.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:00:04.190" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 13:00:04.189" endtime="20210921 13:00:04.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:00:04.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:00:04.190" endtime="20210921 13:00:04.191"/>
</kw>
<status status="PASS" starttime="20210921 12:59:57.146" endtime="20210921 13:00:04.191"/>
</kw>
<msg timestamp="20210921 13:00:04.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:59:57.146" endtime="20210921 13:00:04.192"/>
</kw>
<msg timestamp="20210921 13:00:04.192" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210921 12:59:57.145" endtime="20210921 13:00:04.192"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 13:00:04.192" endtime="20210921 13:00:04.193"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:00:04.198" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/64697-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:00:11.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:00:11.012" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210921 13:00:04.195" endtime="20210921 13:00:11.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:00:11.014" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210921 13:00:11.013" endtime="20210921 13:00:11.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:00:11.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:00:11.015" endtime="20210921 13:00:11.017"/>
</kw>
<status status="PASS" starttime="20210921 13:00:04.194" endtime="20210921 13:00:11.018"/>
</kw>
<msg timestamp="20210921 13:00:11.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:00:04.194" endtime="20210921 13:00:11.018"/>
</kw>
<msg timestamp="20210921 13:00:11.020" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210921 13:00:04.193" endtime="20210921 13:00:11.020"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:00:11.028" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/64697-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:00:19.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:00:19.443" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210921 13:00:11.025" endtime="20210921 13:00:19.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:00:19.445" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 13:00:19.444" endtime="20210921 13:00:19.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:00:19.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:00:19.445" endtime="20210921 13:00:19.446"/>
</kw>
<status status="PASS" starttime="20210921 13:00:11.023" endtime="20210921 13:00:19.446"/>
</kw>
<msg timestamp="20210921 13:00:19.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:00:11.022" endtime="20210921 13:00:19.446"/>
</kw>
<msg timestamp="20210921 13:00:19.447" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210921 13:00:11.020" endtime="20210921 13:00:19.447"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 13:00:19.447" endtime="20210921 13:00:19.448"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:00:19.452" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/64697-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:00:26.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:00:26.013" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 13:00:19.450" endtime="20210921 13:00:26.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:00:26.014" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 13:00:26.013" endtime="20210921 13:00:26.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:00:26.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:00:26.015" endtime="20210921 13:00:26.015"/>
</kw>
<status status="PASS" starttime="20210921 13:00:19.449" endtime="20210921 13:00:26.016"/>
</kw>
<msg timestamp="20210921 13:00:26.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:00:19.449" endtime="20210921 13:00:26.016"/>
</kw>
<msg timestamp="20210921 13:00:26.016" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210921 13:00:19.448" endtime="20210921 13:00:26.017"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:00:26.024" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/64697-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:00:33.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:00:33.636" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210921 13:00:26.019" endtime="20210921 13:00:33.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:00:33.638" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210921 13:00:33.637" endtime="20210921 13:00:33.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:00:33.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:00:33.639" endtime="20210921 13:00:33.640"/>
</kw>
<status status="PASS" starttime="20210921 13:00:26.018" endtime="20210921 13:00:33.640"/>
</kw>
<msg timestamp="20210921 13:00:33.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:00:26.018" endtime="20210921 13:00:33.641"/>
</kw>
<msg timestamp="20210921 13:00:33.641" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210921 13:00:26.017" endtime="20210921 13:00:33.641"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 13:00:33.641" endtime="20210921 13:00:33.642"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 13:00:33.642" endtime="20210921 13:00:33.643"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:00:33.649" level="INFO">Running command 'ozone sh key put o3://om:9862/64697-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:03:45.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:03:45.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:00:33.646" endtime="20210921 13:03:45.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:03:45.825" level="INFO"/>
<status status="PASS" starttime="20210921 13:03:45.823" endtime="20210921 13:03:45.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:03:45.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:03:45.825" endtime="20210921 13:03:45.827"/>
</kw>
<status status="PASS" starttime="20210921 13:00:33.645" endtime="20210921 13:03:45.827"/>
</kw>
<msg timestamp="20210921 13:03:45.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:00:33.645" endtime="20210921 13:03:45.828"/>
</kw>
<status status="PASS" starttime="20210921 13:00:33.643" endtime="20210921 13:03:45.828"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:03:45.835" level="INFO">Running command 'ozone sh key getacl o3://om:9862/64697-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:03:53.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:03:53.842" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210921 13:03:45.832" endtime="20210921 13:03:53.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:03:53.843" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210921 13:03:53.842" endtime="20210921 13:03:53.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:03:53.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:03:53.843" endtime="20210921 13:03:53.844"/>
</kw>
<status status="PASS" starttime="20210921 13:03:45.830" endtime="20210921 13:03:53.845"/>
</kw>
<msg timestamp="20210921 13:03:53.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:03:45.830" endtime="20210921 13:03:53.845"/>
</kw>
<msg timestamp="20210921 13:03:53.845" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210921 13:03:45.829" endtime="20210921 13:03:53.845"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 13:03:53.845" endtime="20210921 13:03:53.846"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210921 13:03:53.846" endtime="20210921 13:03:53.847"/>
</kw>
<status status="PASS" starttime="20210921 12:59:49.599" endtime="20210921 13:03:53.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210921 12:59:49.423" endtime="20210921 13:03:53.847"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:03:53.862" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:03:53.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:03:53.868" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 13:03:53.860" endtime="20210921 13:03:53.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:03:53.876" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 13:03:53.875" endtime="20210921 13:03:53.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:03:53.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:03:53.883" endtime="20210921 13:03:53.884"/>
</kw>
<status status="PASS" starttime="20210921 13:03:53.859" endtime="20210921 13:03:53.885"/>
</kw>
<msg timestamp="20210921 13:03:53.885" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:03:53.858" endtime="20210921 13:03:53.885"/>
</kw>
<msg timestamp="20210921 13:03:53.888" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 13:03:53.857" endtime="20210921 13:03:53.888"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 13:03:53.889" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 13:03:53.889" endtime="20210921 13:03:53.889"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:03:53.896" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:03:53.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:03:53.974" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:03:53.892" endtime="20210921 13:03:53.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:03:53.976" level="INFO"/>
<status status="PASS" starttime="20210921 13:03:53.975" endtime="20210921 13:03:53.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:03:53.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:03:53.976" endtime="20210921 13:03:53.977"/>
</kw>
<status status="PASS" starttime="20210921 13:03:53.891" endtime="20210921 13:03:53.977"/>
</kw>
<msg timestamp="20210921 13:03:53.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:03:53.891" endtime="20210921 13:03:53.977"/>
</kw>
<status status="PASS" starttime="20210921 13:03:53.890" endtime="20210921 13:03:53.978"/>
</kw>
<status status="PASS" starttime="20210921 13:03:53.890" endtime="20210921 13:03:53.978"/>
</kw>
<status status="PASS" starttime="20210921 13:03:53.856" endtime="20210921 13:03:53.978"/>
</kw>
<status status="PASS" starttime="20210921 13:03:53.855" endtime="20210921 13:03:53.978"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:03:53.984" level="INFO">Running command 'ozone sh volume info o3:///64697-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:04:01.396" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 13:04:01.396" level="INFO">${output} = VOLUME_NOT_FOUND Volume 64697-rpcwport is not found</msg>
<status status="PASS" starttime="20210921 13:03:53.981" endtime="20210921 13:04:01.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:04:01.397" level="INFO">VOLUME_NOT_FOUND Volume 64697-rpcwport is not found</msg>
<status status="PASS" starttime="20210921 13:04:01.397" endtime="20210921 13:04:01.398"/>
</kw>
<msg timestamp="20210921 13:04:01.398" level="INFO">${result} = VOLUME_NOT_FOUND Volume 64697-rpcwport is not found</msg>
<status status="PASS" starttime="20210921 13:03:53.980" endtime="20210921 13:04:01.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 13:04:01.398" endtime="20210921 13:04:01.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:04:01.406" level="INFO">Running command 'ozone sh volume create o3:///64697-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:04:09.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:04:09.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:04:01.402" endtime="20210921 13:04:09.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:04:09.162" level="INFO"/>
<status status="PASS" starttime="20210921 13:04:09.161" endtime="20210921 13:04:09.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:04:09.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:04:09.165" endtime="20210921 13:04:09.167"/>
</kw>
<status status="PASS" starttime="20210921 13:04:01.400" endtime="20210921 13:04:09.167"/>
</kw>
<msg timestamp="20210921 13:04:09.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:04:01.400" endtime="20210921 13:04:09.168"/>
</kw>
<msg timestamp="20210921 13:04:09.168" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210921 13:04:01.399" endtime="20210921 13:04:09.168"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 13:04:09.169" endtime="20210921 13:04:09.170"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:04:09.180" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="64697-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:04:17.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:04:17.718" level="INFO">${output} = {
  "metadata": {},
  "name": "64697-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210921 13:04:09.176" endtime="20210921 13:04:17.718"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:04:17.721" level="INFO">{
  "metadata": {},
  "name": "64697-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-21T13:04:08.830Z",
  "modificationTime": "2021-09-21T13:04:08.830Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210921 13:04:17.719" endtime="20210921 13:04:17.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:04:17.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:04:17.721" endtime="20210921 13:04:17.723"/>
</kw>
<status status="PASS" starttime="20210921 13:04:09.174" endtime="20210921 13:04:17.723"/>
</kw>
<msg timestamp="20210921 13:04:17.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:04:09.173" endtime="20210921 13:04:17.724"/>
</kw>
<msg timestamp="20210921 13:04:17.725" level="INFO">${result} = {
  "metadata": {},
  "name": "64697-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210921 13:04:09.170" endtime="20210921 13:04:17.725"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 13:04:17.725" endtime="20210921 13:04:17.727"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:04:17.732" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="64697-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:04:25.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:04:25.097" level="INFO">${output} = {
  "metadata": {},
  "name": "64697-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210921 13:04:17.729" endtime="20210921 13:04:25.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:04:25.098" level="INFO">{
  "metadata": {},
  "name": "64697-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-21T13:04:08.830Z",
  "modificationTime": "2021-09-21T13:04:08.830Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210921 13:04:25.097" endtime="20210921 13:04:25.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:04:25.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:04:25.099" endtime="20210921 13:04:25.099"/>
</kw>
<status status="PASS" starttime="20210921 13:04:17.728" endtime="20210921 13:04:25.100"/>
</kw>
<msg timestamp="20210921 13:04:25.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:04:17.728" endtime="20210921 13:04:25.100"/>
</kw>
<msg timestamp="20210921 13:04:25.100" level="INFO">${result} = {
  "metadata": {},
  "name": "64697-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210921 13:04:17.727" endtime="20210921 13:04:25.100"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 13:04:25.101" endtime="20210921 13:04:25.101"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:04:25.107" level="INFO">Running command 'ozone sh volume setquota o3:///64697-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:04:32.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:04:32.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:04:25.103" endtime="20210921 13:04:32.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:04:32.154" level="INFO"/>
<status status="PASS" starttime="20210921 13:04:32.153" endtime="20210921 13:04:32.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:04:32.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:04:32.155" endtime="20210921 13:04:32.156"/>
</kw>
<status status="PASS" starttime="20210921 13:04:25.102" endtime="20210921 13:04:32.156"/>
</kw>
<msg timestamp="20210921 13:04:32.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:04:25.102" endtime="20210921 13:04:32.156"/>
</kw>
<status status="PASS" starttime="20210921 13:04:25.101" endtime="20210921 13:04:32.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:04:32.163" level="INFO">Running command 'ozone sh volume info o3:///64697-rpcwport | jq -r '. | select(.name=="64697-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:04:38.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:04:38.910" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210921 13:04:32.159" endtime="20210921 13:04:38.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:04:38.911" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210921 13:04:38.910" endtime="20210921 13:04:38.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:04:38.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:04:38.912" endtime="20210921 13:04:38.913"/>
</kw>
<status status="PASS" starttime="20210921 13:04:32.159" endtime="20210921 13:04:38.914"/>
</kw>
<msg timestamp="20210921 13:04:38.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:04:32.158" endtime="20210921 13:04:38.914"/>
</kw>
<msg timestamp="20210921 13:04:38.915" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210921 13:04:32.157" endtime="20210921 13:04:38.915"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:04:38.915" endtime="20210921 13:04:38.916"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:04:38.921" level="INFO">Running command 'ozone sh bucket create o3:///64697-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:04:47.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:04:47.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:04:38.918" endtime="20210921 13:04:47.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:04:47.088" level="INFO"/>
<status status="PASS" starttime="20210921 13:04:47.087" endtime="20210921 13:04:47.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:04:47.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:04:47.089" endtime="20210921 13:04:47.090"/>
</kw>
<status status="PASS" starttime="20210921 13:04:38.918" endtime="20210921 13:04:47.090"/>
</kw>
<msg timestamp="20210921 13:04:47.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:04:38.917" endtime="20210921 13:04:47.091"/>
</kw>
<status status="PASS" starttime="20210921 13:04:38.916" endtime="20210921 13:04:47.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:04:47.097" level="INFO">Running command 'ozone sh bucket info o3:///64697-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:04:55.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:04:55.653" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210921 13:04:47.094" endtime="20210921 13:04:55.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:04:55.654" level="INFO">DISK</msg>
<status status="PASS" starttime="20210921 13:04:55.653" endtime="20210921 13:04:55.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:04:55.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:04:55.654" endtime="20210921 13:04:55.656"/>
</kw>
<status status="PASS" starttime="20210921 13:04:47.094" endtime="20210921 13:04:55.657"/>
</kw>
<msg timestamp="20210921 13:04:55.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:04:47.093" endtime="20210921 13:04:55.657"/>
</kw>
<msg timestamp="20210921 13:04:55.658" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210921 13:04:47.091" endtime="20210921 13:04:55.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:04:55.658" endtime="20210921 13:04:55.659"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:04:55.666" level="INFO">Running command 'ozone sh bucket info o3:///64697-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:05:04.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:05:04.379" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210921 13:04:55.664" endtime="20210921 13:05:04.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:05:04.381" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210921 13:05:04.380" endtime="20210921 13:05:04.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:05:04.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:05:04.381" endtime="20210921 13:05:04.382"/>
</kw>
<status status="PASS" starttime="20210921 13:04:55.662" endtime="20210921 13:05:04.382"/>
</kw>
<msg timestamp="20210921 13:05:04.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:04:55.662" endtime="20210921 13:05:04.382"/>
</kw>
<msg timestamp="20210921 13:05:04.383" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210921 13:04:55.660" endtime="20210921 13:05:04.383"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:05:04.383" endtime="20210921 13:05:04.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:05:04.389" level="INFO">Running command 'ozone sh bucket info o3:///64697-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:05:12.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:05:12.966" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210921 13:05:04.386" endtime="20210921 13:05:12.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:05:12.970" level="INFO">100</msg>
<status status="PASS" starttime="20210921 13:05:12.968" endtime="20210921 13:05:12.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:05:12.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:05:12.970" endtime="20210921 13:05:12.972"/>
</kw>
<status status="PASS" starttime="20210921 13:05:04.385" endtime="20210921 13:05:12.973"/>
</kw>
<msg timestamp="20210921 13:05:12.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:05:04.385" endtime="20210921 13:05:12.974"/>
</kw>
<msg timestamp="20210921 13:05:12.975" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210921 13:05:04.384" endtime="20210921 13:05:12.975"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:05:12.975" endtime="20210921 13:05:12.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:05:12.986" level="INFO">Running command 'ozone sh bucket setquota o3:///64697-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:05:19.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:05:19.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:05:12.982" endtime="20210921 13:05:19.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:05:19.740" level="INFO"/>
<status status="PASS" starttime="20210921 13:05:19.740" endtime="20210921 13:05:19.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:05:19.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:05:19.741" endtime="20210921 13:05:19.742"/>
</kw>
<status status="PASS" starttime="20210921 13:05:12.980" endtime="20210921 13:05:19.742"/>
</kw>
<msg timestamp="20210921 13:05:19.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:05:12.979" endtime="20210921 13:05:19.742"/>
</kw>
<status status="PASS" starttime="20210921 13:05:12.977" endtime="20210921 13:05:19.743"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:05:19.749" level="INFO">Running command 'ozone sh bucket info o3:///64697-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:05:27.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:05:27.433" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210921 13:05:19.746" endtime="20210921 13:05:27.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:05:27.436" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210921 13:05:27.435" endtime="20210921 13:05:27.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:05:27.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:05:27.436" endtime="20210921 13:05:27.438"/>
</kw>
<status status="PASS" starttime="20210921 13:05:19.745" endtime="20210921 13:05:27.439"/>
</kw>
<msg timestamp="20210921 13:05:27.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:05:19.745" endtime="20210921 13:05:27.439"/>
</kw>
<msg timestamp="20210921 13:05:27.440" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210921 13:05:19.744" endtime="20210921 13:05:27.440"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:05:27.440" endtime="20210921 13:05:27.441"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:05:27.450" level="INFO">Running command 'ozone sh bucket info o3:///64697-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:05:35.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:05:35.578" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210921 13:05:27.446" endtime="20210921 13:05:35.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:05:35.579" level="INFO">1000</msg>
<status status="PASS" starttime="20210921 13:05:35.579" endtime="20210921 13:05:35.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:05:35.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:05:35.580" endtime="20210921 13:05:35.580"/>
</kw>
<status status="PASS" starttime="20210921 13:05:27.445" endtime="20210921 13:05:35.581"/>
</kw>
<msg timestamp="20210921 13:05:35.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:05:27.444" endtime="20210921 13:05:35.581"/>
</kw>
<msg timestamp="20210921 13:05:35.581" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210921 13:05:27.442" endtime="20210921 13:05:35.581"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:05:35.582" endtime="20210921 13:05:35.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:05:35.587" level="INFO">Running command 'ozone sh bucket list o3:///64697-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:05:42.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:05:42.751" level="INFO">${output} = 64697-rpcwport</msg>
<status status="PASS" starttime="20210921 13:05:35.585" endtime="20210921 13:05:42.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:05:42.752" level="INFO">64697-rpcwport</msg>
<status status="PASS" starttime="20210921 13:05:42.751" endtime="20210921 13:05:42.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:05:42.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:05:42.752" endtime="20210921 13:05:42.753"/>
</kw>
<status status="PASS" starttime="20210921 13:05:35.584" endtime="20210921 13:05:42.754"/>
</kw>
<msg timestamp="20210921 13:05:42.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:05:35.584" endtime="20210921 13:05:42.754"/>
</kw>
<msg timestamp="20210921 13:05:42.755" level="INFO">${result} = 64697-rpcwport</msg>
<status status="PASS" starttime="20210921 13:05:35.582" endtime="20210921 13:05:42.755"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:05:42.755" endtime="20210921 13:05:42.756"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:05:42.762" level="INFO">Running command 'ozone sh key put o3:///64697-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:08:53.855" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210921 13:05:42.759" endtime="20210921 13:08:53.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.855" endtime="20210921 13:08:53.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.856" endtime="20210921 13:08:53.856"/>
</kw>
<status status="FAIL" starttime="20210921 13:05:42.759" endtime="20210921 13:08:53.856"/>
</kw>
<msg timestamp="20210921 13:08:53.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210921 13:05:42.758" endtime="20210921 13:08:53.857"/>
</kw>
<status status="FAIL" starttime="20210921 13:05:42.758" endtime="20210921 13:08:53.857"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.857" endtime="20210921 13:08:53.857"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.857" endtime="20210921 13:08:53.857"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.858" endtime="20210921 13:08:53.858"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.858" endtime="20210921 13:08:53.858"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.858" endtime="20210921 13:08:53.858"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.858" endtime="20210921 13:08:53.859"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.859" endtime="20210921 13:08:53.859"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.859" endtime="20210921 13:08:53.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.860" endtime="20210921 13:08:53.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.860" endtime="20210921 13:08:53.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.860" endtime="20210921 13:08:53.860"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.860" endtime="20210921 13:08:53.861"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.861" endtime="20210921 13:08:53.861"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.861" endtime="20210921 13:08:53.861"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.861" endtime="20210921 13:08:53.862"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.862" endtime="20210921 13:08:53.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.862" endtime="20210921 13:08:53.863"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.863" endtime="20210921 13:08:53.863"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.864" endtime="20210921 13:08:53.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.864" endtime="20210921 13:08:53.865"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.865" endtime="20210921 13:08:53.865"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.865" endtime="20210921 13:08:53.866"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.866" endtime="20210921 13:08:53.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.866" endtime="20210921 13:08:53.866"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.867" endtime="20210921 13:08:53.867"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.868" endtime="20210921 13:08:53.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.868" endtime="20210921 13:08:53.868"/>
</kw>
<status status="FAIL" starttime="20210921 13:05:42.757" endtime="20210921 13:08:53.868"/>
</kw>
<status status="FAIL" starttime="20210921 13:05:42.756" endtime="20210921 13:08:53.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.869" endtime="20210921 13:08:53.869"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.869" endtime="20210921 13:08:53.869"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.869" endtime="20210921 13:08:53.869"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.870" endtime="20210921 13:08:53.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.870" endtime="20210921 13:08:53.870"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.870" endtime="20210921 13:08:53.871"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.871" endtime="20210921 13:08:53.871"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.871" endtime="20210921 13:08:53.871"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.872" endtime="20210921 13:08:53.872"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.872" endtime="20210921 13:08:53.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.872" endtime="20210921 13:08:53.872"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.873" endtime="20210921 13:08:53.873"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.874" endtime="20210921 13:08:53.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.874" endtime="20210921 13:08:53.874"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.874" endtime="20210921 13:08:53.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.875" endtime="20210921 13:08:53.875"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.875" endtime="20210921 13:08:53.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.876" endtime="20210921 13:08:53.876"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.876" endtime="20210921 13:08:53.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.877" endtime="20210921 13:08:53.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.877" endtime="20210921 13:08:53.877"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.877" endtime="20210921 13:08:53.877"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.878" endtime="20210921 13:08:53.878"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:08:53.878" endtime="20210921 13:08:53.878"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.878" endtime="20210921 13:08:53.879"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 13:08:53.879" endtime="20210921 13:08:53.879"/>
</kw>
<status status="FAIL" starttime="20210921 13:03:53.978" endtime="20210921 13:08:53.879"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210921 13:03:53.854" endtime="20210921 13:08:53.880">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:08:53.894" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:08:53.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:08:53.900" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 13:08:53.888" endtime="20210921 13:08:53.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:08:53.902" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 13:08:53.901" endtime="20210921 13:08:53.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:08:53.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:08:53.903" endtime="20210921 13:08:53.904"/>
</kw>
<status status="PASS" starttime="20210921 13:08:53.887" endtime="20210921 13:08:53.905"/>
</kw>
<msg timestamp="20210921 13:08:53.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:08:53.887" endtime="20210921 13:08:53.905"/>
</kw>
<msg timestamp="20210921 13:08:53.906" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 13:08:53.886" endtime="20210921 13:08:53.906"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 13:08:53.908" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 13:08:53.906" endtime="20210921 13:08:53.908"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:08:53.917" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:08:54.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:08:54.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:08:53.914" endtime="20210921 13:08:54.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:08:54.034" level="INFO"/>
<status status="PASS" starttime="20210921 13:08:54.033" endtime="20210921 13:08:54.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:08:54.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:08:54.034" endtime="20210921 13:08:54.035"/>
</kw>
<status status="PASS" starttime="20210921 13:08:53.913" endtime="20210921 13:08:54.036"/>
</kw>
<msg timestamp="20210921 13:08:54.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:08:53.912" endtime="20210921 13:08:54.036"/>
</kw>
<status status="PASS" starttime="20210921 13:08:53.909" endtime="20210921 13:08:54.036"/>
</kw>
<status status="PASS" starttime="20210921 13:08:53.908" endtime="20210921 13:08:54.036"/>
</kw>
<status status="PASS" starttime="20210921 13:08:53.885" endtime="20210921 13:08:54.038"/>
</kw>
<status status="PASS" starttime="20210921 13:08:53.884" endtime="20210921 13:08:54.038"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:08:54.046" level="INFO">Running command 'ozone sh volume info /64697-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:09:00.567" level="INFO">${rc} = 255</msg>
<msg timestamp="20210921 13:09:00.567" level="INFO">${output} = VOLUME_NOT_FOUND Volume 64697-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210921 13:08:54.043" endtime="20210921 13:09:00.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:09:00.569" level="INFO">VOLUME_NOT_FOUND Volume 64697-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210921 13:09:00.568" endtime="20210921 13:09:00.569"/>
</kw>
<msg timestamp="20210921 13:09:00.569" level="INFO">${result} = VOLUME_NOT_FOUND Volume 64697-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210921 13:08:54.042" endtime="20210921 13:09:00.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 13:09:00.570" endtime="20210921 13:09:00.570"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:09:00.584" level="INFO">Running command 'ozone sh volume create /64697-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:09:09.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:09:09.011" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:09:00.573" endtime="20210921 13:09:09.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:09:09.013" level="INFO"/>
<status status="PASS" starttime="20210921 13:09:09.011" endtime="20210921 13:09:09.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:09:09.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:09:09.013" endtime="20210921 13:09:09.014"/>
</kw>
<status status="PASS" starttime="20210921 13:09:00.572" endtime="20210921 13:09:09.015"/>
</kw>
<msg timestamp="20210921 13:09:09.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:09:00.571" endtime="20210921 13:09:09.015"/>
</kw>
<msg timestamp="20210921 13:09:09.015" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210921 13:09:00.570" endtime="20210921 13:09:09.015"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 13:09:09.015" endtime="20210921 13:09:09.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:09:09.020" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="64697-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:09:15.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:09:15.736" level="INFO">${output} = {
  "metadata": {},
  "name": "64697-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210921 13:09:09.018" endtime="20210921 13:09:15.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:09:15.737" level="INFO">{
  "metadata": {},
  "name": "64697-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-21T13:09:08.859Z",
  "modificationTime": "2021-09-21T13:09:08.859Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210921 13:09:15.736" endtime="20210921 13:09:15.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:09:15.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:09:15.737" endtime="20210921 13:09:15.738"/>
</kw>
<status status="PASS" starttime="20210921 13:09:09.018" endtime="20210921 13:09:15.738"/>
</kw>
<msg timestamp="20210921 13:09:15.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:09:09.017" endtime="20210921 13:09:15.739"/>
</kw>
<msg timestamp="20210921 13:09:15.739" level="INFO">${result} = {
  "metadata": {},
  "name": "64697-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210921 13:09:09.016" endtime="20210921 13:09:15.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 13:09:15.739" endtime="20210921 13:09:15.740"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:09:15.747" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="64697-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:09:24.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:09:24.798" level="INFO">${output} = {
  "metadata": {},
  "name": "64697-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210921 13:09:15.743" endtime="20210921 13:09:24.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:09:24.800" level="INFO">{
  "metadata": {},
  "name": "64697-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-21T13:09:08.859Z",
  "modificationTime": "2021-09-21T13:09:08.859Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210921 13:09:24.799" endtime="20210921 13:09:24.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:09:24.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:09:24.800" endtime="20210921 13:09:24.801"/>
</kw>
<status status="PASS" starttime="20210921 13:09:15.742" endtime="20210921 13:09:24.802"/>
</kw>
<msg timestamp="20210921 13:09:24.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:09:15.741" endtime="20210921 13:09:24.802"/>
</kw>
<msg timestamp="20210921 13:09:24.803" level="INFO">${result} = {
  "metadata": {},
  "name": "64697-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210921 13:09:15.740" endtime="20210921 13:09:24.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210921 13:09:24.803" endtime="20210921 13:09:24.803"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:09:24.810" level="INFO">Running command 'ozone sh volume setquota /64697-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:09:31.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:09:31.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:09:24.807" endtime="20210921 13:09:31.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:09:31.933" level="INFO"/>
<status status="PASS" starttime="20210921 13:09:31.932" endtime="20210921 13:09:31.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:09:31.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:09:31.934" endtime="20210921 13:09:31.936"/>
</kw>
<status status="PASS" starttime="20210921 13:09:24.807" endtime="20210921 13:09:31.936"/>
</kw>
<msg timestamp="20210921 13:09:31.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:09:24.805" endtime="20210921 13:09:31.937"/>
</kw>
<status status="PASS" starttime="20210921 13:09:24.804" endtime="20210921 13:09:31.937"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:09:31.946" level="INFO">Running command 'ozone sh volume info /64697-rpcwoscheme | jq -r '. | select(.name=="64697-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:09:40.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:09:40.353" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210921 13:09:31.943" endtime="20210921 13:09:40.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:09:40.355" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210921 13:09:40.353" endtime="20210921 13:09:40.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:09:40.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:09:40.355" endtime="20210921 13:09:40.356"/>
</kw>
<status status="PASS" starttime="20210921 13:09:31.941" endtime="20210921 13:09:40.357"/>
</kw>
<msg timestamp="20210921 13:09:40.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:09:31.940" endtime="20210921 13:09:40.357"/>
</kw>
<msg timestamp="20210921 13:09:40.358" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210921 13:09:31.938" endtime="20210921 13:09:40.358"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:09:40.358" endtime="20210921 13:09:40.359"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:09:40.368" level="INFO">Running command 'ozone sh bucket create /64697-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:09:47.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:09:47.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:09:40.365" endtime="20210921 13:09:47.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:09:47.948" level="INFO"/>
<status status="PASS" starttime="20210921 13:09:47.946" endtime="20210921 13:09:47.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:09:47.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:09:47.949" endtime="20210921 13:09:47.950"/>
</kw>
<status status="PASS" starttime="20210921 13:09:40.362" endtime="20210921 13:09:47.951"/>
</kw>
<msg timestamp="20210921 13:09:47.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:09:40.361" endtime="20210921 13:09:47.952"/>
</kw>
<status status="PASS" starttime="20210921 13:09:40.360" endtime="20210921 13:09:47.953"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:09:47.961" level="INFO">Running command 'ozone sh bucket info /64697-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:09:56.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:09:56.114" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210921 13:09:47.958" endtime="20210921 13:09:56.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:09:56.117" level="INFO">DISK</msg>
<status status="PASS" starttime="20210921 13:09:56.115" endtime="20210921 13:09:56.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:09:56.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:09:56.117" endtime="20210921 13:09:56.119"/>
</kw>
<status status="PASS" starttime="20210921 13:09:47.956" endtime="20210921 13:09:56.119"/>
</kw>
<msg timestamp="20210921 13:09:56.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:09:47.956" endtime="20210921 13:09:56.120"/>
</kw>
<msg timestamp="20210921 13:09:56.121" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210921 13:09:47.953" endtime="20210921 13:09:56.121"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:09:56.121" endtime="20210921 13:09:56.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:09:56.129" level="INFO">Running command 'ozone sh bucket info /64697-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:10:04.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:10:04.349" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210921 13:09:56.125" endtime="20210921 13:10:04.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:10:04.350" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210921 13:10:04.349" endtime="20210921 13:10:04.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:10:04.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:10:04.350" endtime="20210921 13:10:04.351"/>
</kw>
<status status="PASS" starttime="20210921 13:09:56.125" endtime="20210921 13:10:04.352"/>
</kw>
<msg timestamp="20210921 13:10:04.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:09:56.124" endtime="20210921 13:10:04.352"/>
</kw>
<msg timestamp="20210921 13:10:04.352" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210921 13:09:56.122" endtime="20210921 13:10:04.352"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:10:04.352" endtime="20210921 13:10:04.353"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:10:04.358" level="INFO">Running command 'ozone sh bucket info /64697-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:10:11.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:10:11.273" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210921 13:10:04.355" endtime="20210921 13:10:11.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:10:11.275" level="INFO">100</msg>
<status status="PASS" starttime="20210921 13:10:11.274" endtime="20210921 13:10:11.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:10:11.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:10:11.276" endtime="20210921 13:10:11.277"/>
</kw>
<status status="PASS" starttime="20210921 13:10:04.355" endtime="20210921 13:10:11.278"/>
</kw>
<msg timestamp="20210921 13:10:11.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:10:04.354" endtime="20210921 13:10:11.278"/>
</kw>
<msg timestamp="20210921 13:10:11.279" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210921 13:10:04.353" endtime="20210921 13:10:11.279"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:10:11.280" endtime="20210921 13:10:11.282"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:10:11.289" level="INFO">Running command 'ozone sh bucket setquota /64697-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:10:19.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:10:19.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 13:10:11.285" endtime="20210921 13:10:19.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:10:19.031" level="INFO"/>
<status status="PASS" starttime="20210921 13:10:19.029" endtime="20210921 13:10:19.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:10:19.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:10:19.032" endtime="20210921 13:10:19.033"/>
</kw>
<status status="PASS" starttime="20210921 13:10:11.285" endtime="20210921 13:10:19.034"/>
</kw>
<msg timestamp="20210921 13:10:19.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:10:11.283" endtime="20210921 13:10:19.035"/>
</kw>
<status status="PASS" starttime="20210921 13:10:11.282" endtime="20210921 13:10:19.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:10:19.046" level="INFO">Running command 'ozone sh bucket info /64697-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:10:26.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:10:26.902" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210921 13:10:19.041" endtime="20210921 13:10:26.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:10:26.903" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210921 13:10:26.903" endtime="20210921 13:10:26.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:10:26.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:10:26.904" endtime="20210921 13:10:26.905"/>
</kw>
<status status="PASS" starttime="20210921 13:10:19.040" endtime="20210921 13:10:26.905"/>
</kw>
<msg timestamp="20210921 13:10:26.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:10:19.039" endtime="20210921 13:10:26.905"/>
</kw>
<msg timestamp="20210921 13:10:26.906" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210921 13:10:19.036" endtime="20210921 13:10:26.906"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:10:26.906" endtime="20210921 13:10:26.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:10:26.912" level="INFO">Running command 'ozone sh bucket info /64697-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:10:35.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:10:35.008" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210921 13:10:26.909" endtime="20210921 13:10:35.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:10:35.010" level="INFO">1000</msg>
<status status="PASS" starttime="20210921 13:10:35.009" endtime="20210921 13:10:35.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:10:35.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:10:35.010" endtime="20210921 13:10:35.013"/>
</kw>
<status status="PASS" starttime="20210921 13:10:26.908" endtime="20210921 13:10:35.013"/>
</kw>
<msg timestamp="20210921 13:10:35.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:10:26.908" endtime="20210921 13:10:35.014"/>
</kw>
<msg timestamp="20210921 13:10:35.014" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210921 13:10:26.907" endtime="20210921 13:10:35.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:10:35.014" endtime="20210921 13:10:35.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:10:35.021" level="INFO">Running command 'ozone sh bucket list /64697-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:10:43.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 13:10:43.303" level="INFO">${output} = 64697-rpcwoscheme</msg>
<status status="PASS" starttime="20210921 13:10:35.017" endtime="20210921 13:10:43.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 13:10:43.305" level="INFO">64697-rpcwoscheme</msg>
<status status="PASS" starttime="20210921 13:10:43.304" endtime="20210921 13:10:43.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 13:10:43.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 13:10:43.305" endtime="20210921 13:10:43.306"/>
</kw>
<status status="PASS" starttime="20210921 13:10:35.017" endtime="20210921 13:10:43.306"/>
</kw>
<msg timestamp="20210921 13:10:43.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 13:10:35.016" endtime="20210921 13:10:43.307"/>
</kw>
<msg timestamp="20210921 13:10:43.307" level="INFO">${result} = 64697-rpcwoscheme</msg>
<status status="PASS" starttime="20210921 13:10:35.015" endtime="20210921 13:10:43.307"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210921 13:10:43.307" endtime="20210921 13:10:43.308"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 13:10:43.315" level="INFO">Running command 'ozone sh key put /64697-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 13:13:53.884" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210921 13:10:43.311" endtime="20210921 13:13:53.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.885" endtime="20210921 13:13:53.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.885" endtime="20210921 13:13:53.885"/>
</kw>
<status status="FAIL" starttime="20210921 13:10:43.310" endtime="20210921 13:13:53.886"/>
</kw>
<msg timestamp="20210921 13:13:53.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210921 13:10:43.310" endtime="20210921 13:13:53.886"/>
</kw>
<status status="FAIL" starttime="20210921 13:10:43.309" endtime="20210921 13:13:53.887"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.887" endtime="20210921 13:13:53.887"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.888" endtime="20210921 13:13:53.888"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.888" endtime="20210921 13:13:53.888"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.888" endtime="20210921 13:13:53.888"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.888" endtime="20210921 13:13:53.888"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.889" endtime="20210921 13:13:53.889"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.889" endtime="20210921 13:13:53.889"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.890" endtime="20210921 13:13:53.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.890" endtime="20210921 13:13:53.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.890" endtime="20210921 13:13:53.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.892" endtime="20210921 13:13:53.892"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.892" endtime="20210921 13:13:53.892"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.893" endtime="20210921 13:13:53.893"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.893" endtime="20210921 13:13:53.893"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.893" endtime="20210921 13:13:53.893"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.895" endtime="20210921 13:13:53.896"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.896" endtime="20210921 13:13:53.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.897" endtime="20210921 13:13:53.897"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.897" endtime="20210921 13:13:53.899"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.899" endtime="20210921 13:13:53.900"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.900" endtime="20210921 13:13:53.900"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.900" endtime="20210921 13:13:53.900"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.901" endtime="20210921 13:13:53.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.901" endtime="20210921 13:13:53.902"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.902" endtime="20210921 13:13:53.902"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.902" endtime="20210921 13:13:53.903"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.903" endtime="20210921 13:13:53.904"/>
</kw>
<status status="FAIL" starttime="20210921 13:10:43.308" endtime="20210921 13:13:53.904"/>
</kw>
<status status="FAIL" starttime="20210921 13:10:43.308" endtime="20210921 13:13:53.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.906" endtime="20210921 13:13:53.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.906" endtime="20210921 13:13:53.906"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.907" endtime="20210921 13:13:53.907"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.907" endtime="20210921 13:13:53.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.908" endtime="20210921 13:13:53.908"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.908" endtime="20210921 13:13:53.909"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.910" endtime="20210921 13:13:53.911"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.912" endtime="20210921 13:13:53.912"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.912" endtime="20210921 13:13:53.912"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.912" endtime="20210921 13:13:53.912"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.913" endtime="20210921 13:13:53.913"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.914" endtime="20210921 13:13:53.914"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.914" endtime="20210921 13:13:53.915"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.915" endtime="20210921 13:13:53.915"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.915" endtime="20210921 13:13:53.915"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.915" endtime="20210921 13:13:53.916"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.918" endtime="20210921 13:13:53.918"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.919" endtime="20210921 13:13:53.919"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.927" endtime="20210921 13:13:53.927"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.927" endtime="20210921 13:13:53.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.928" endtime="20210921 13:13:53.928"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.928" endtime="20210921 13:13:53.928"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.928" endtime="20210921 13:13:53.928"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210921 13:13:53.928" endtime="20210921 13:13:53.928"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.928" endtime="20210921 13:13:53.929"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210921 13:13:53.929" endtime="20210921 13:13:53.929"/>
</kw>
<status status="FAIL" starttime="20210921 13:08:54.039" endtime="20210921 13:13:53.929"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210921 13:08:53.882" endtime="20210921 13:13:53.929">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210921 12:48:43.121" endtime="20210921 13:13:53.932"/>
</suite>
<status status="FAIL" starttime="20210921 12:24:26.309" endtime="20210921 13:13:53.941"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:24:21.005" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:24:21.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:24:21.010" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210921 12:24:21.002" endtime="20210921 12:24:21.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:24:21.011" level="INFO">scm</msg>
<status status="PASS" starttime="20210921 12:24:21.010" endtime="20210921 12:24:21.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:24:21.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:24:21.011" endtime="20210921 12:24:21.012"/>
</kw>
<status status="PASS" starttime="20210921 12:24:21.001" endtime="20210921 12:24:21.012"/>
</kw>
<msg timestamp="20210921 12:24:21.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:24:21.001" endtime="20210921 12:24:21.012"/>
</kw>
<msg timestamp="20210921 12:24:21.013" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210921 12:24:21.001" endtime="20210921 12:24:21.013"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210921 12:24:21.013" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210921 12:24:21.013" endtime="20210921 12:24:21.013"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210921 12:24:21.022" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210921 12:24:21.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210921 12:24:21.030" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210921 12:24:21.019" endtime="20210921 12:24:21.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210921 12:24:21.031" level="INFO"/>
<status status="PASS" starttime="20210921 12:24:21.030" endtime="20210921 12:24:21.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210921 12:24:21.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210921 12:24:21.031" endtime="20210921 12:24:21.032"/>
</kw>
<status status="PASS" starttime="20210921 12:24:21.016" endtime="20210921 12:24:21.032"/>
</kw>
<msg timestamp="20210921 12:24:21.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210921 12:24:21.016" endtime="20210921 12:24:21.032"/>
</kw>
<status status="PASS" starttime="20210921 12:24:21.016" endtime="20210921 12:24:21.033"/>
</kw>
<status status="PASS" starttime="20210921 12:24:21.014" endtime="20210921 12:24:21.033"/>
</kw>
<status status="PASS" starttime="20210921 12:24:20.999" endtime="20210921 12:24:21.033"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210921 12:24:20.999" endtime="20210921 12:24:21.033"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210921 12:24:20.937" endtime="20210921 12:24:21.035"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2967730"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
