<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210904 14:24:12.920" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210904 14:16:05.514" level="INFO">${random} = 34422</msg>
<status status="PASS" starttime="20210904 14:16:05.513" endtime="20210904 14:16:05.514"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:16:05.516" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-34422 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:16:09.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:16:09.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:16:05.515" endtime="20210904 14:16:09.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:16:09.021" level="INFO"/>
<status status="PASS" starttime="20210904 14:16:09.021" endtime="20210904 14:16:09.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:16:09.022" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:16:09.021" endtime="20210904 14:16:09.022"/>
</kw>
<status status="PASS" starttime="20210904 14:16:05.515" endtime="20210904 14:16:09.022"/>
</kw>
<msg timestamp="20210904 14:16:09.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:16:05.514" endtime="20210904 14:16:09.022"/>
</kw>
<msg timestamp="20210904 14:16:09.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:16:05.514" endtime="20210904 14:16:09.022"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:16:09.022" endtime="20210904 14:16:09.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:16:05.512" endtime="20210904 14:16:09.023"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210904 14:16:05.475" endtime="20210904 14:16:09.024"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:15:53.386" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:15:55.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:15:55.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:15:53.384" endtime="20210904 14:15:55.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:15:55.732" level="INFO"/>
<status status="PASS" starttime="20210904 14:15:55.731" endtime="20210904 14:15:55.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:15:55.732" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:15:55.732" endtime="20210904 14:15:55.732"/>
</kw>
<status status="PASS" starttime="20210904 14:15:53.384" endtime="20210904 14:15:55.733"/>
</kw>
<msg timestamp="20210904 14:15:55.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:15:53.384" endtime="20210904 14:15:55.733"/>
</kw>
<msg timestamp="20210904 14:15:55.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:15:53.383" endtime="20210904 14:15:55.733"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:15:55.733" endtime="20210904 14:15:55.734"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:15:55.736" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:15:57.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:15:57.597" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:15:55.735" endtime="20210904 14:15:57.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:15:57.598" level="INFO"/>
<status status="PASS" starttime="20210904 14:15:57.597" endtime="20210904 14:15:57.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:15:57.598" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:15:57.598" endtime="20210904 14:15:57.598"/>
</kw>
<status status="PASS" starttime="20210904 14:15:55.734" endtime="20210904 14:15:57.599"/>
</kw>
<msg timestamp="20210904 14:15:57.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:15:55.734" endtime="20210904 14:15:57.599"/>
</kw>
<msg timestamp="20210904 14:15:57.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:15:55.734" endtime="20210904 14:15:57.599"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:15:57.599" endtime="20210904 14:15:57.599"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:15:57.606" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:16:02.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:16:02.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:15:57.604" endtime="20210904 14:16:02.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:16:02.118" level="INFO"/>
<status status="PASS" starttime="20210904 14:16:02.117" endtime="20210904 14:16:02.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:16:02.119" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:16:02.118" endtime="20210904 14:16:02.119"/>
</kw>
<status status="PASS" starttime="20210904 14:15:57.600" endtime="20210904 14:16:02.119"/>
</kw>
<msg timestamp="20210904 14:16:02.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:15:57.600" endtime="20210904 14:16:02.119"/>
</kw>
<msg timestamp="20210904 14:16:02.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:15:57.599" endtime="20210904 14:16:02.120"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:16:02.120" endtime="20210904 14:16:02.120"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:15:53.383" endtime="20210904 14:16:02.120"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210904 14:15:53.345" endtime="20210904 14:16:02.121"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:17:15.875" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:17:18.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:17:18.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:17:15.872" endtime="20210904 14:17:18.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:17:18.029" level="INFO"/>
<status status="PASS" starttime="20210904 14:17:18.028" endtime="20210904 14:17:18.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:17:18.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:17:18.029" endtime="20210904 14:17:18.030"/>
</kw>
<status status="PASS" starttime="20210904 14:17:15.872" endtime="20210904 14:17:18.030"/>
</kw>
<msg timestamp="20210904 14:17:18.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:17:15.872" endtime="20210904 14:17:18.030"/>
</kw>
<msg timestamp="20210904 14:17:18.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:17:15.871" endtime="20210904 14:17:18.031"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:17:18.031" endtime="20210904 14:17:18.032"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:17:18.035" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:17:20.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:17:20.270" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:17:18.033" endtime="20210904 14:17:20.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:17:20.271" level="INFO"/>
<status status="PASS" starttime="20210904 14:17:20.271" endtime="20210904 14:17:20.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:17:20.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:17:20.272" endtime="20210904 14:17:20.272"/>
</kw>
<status status="PASS" starttime="20210904 14:17:18.033" endtime="20210904 14:17:20.272"/>
</kw>
<msg timestamp="20210904 14:17:20.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:17:18.032" endtime="20210904 14:17:20.273"/>
</kw>
<msg timestamp="20210904 14:17:20.273" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:17:18.032" endtime="20210904 14:17:20.273"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:17:20.273" endtime="20210904 14:17:20.273"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:17:20.277" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:17:24.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:17:24.729" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:17:20.275" endtime="20210904 14:17:24.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:17:24.730" level="INFO"/>
<status status="PASS" starttime="20210904 14:17:24.729" endtime="20210904 14:17:24.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:17:24.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:17:24.730" endtime="20210904 14:17:24.731"/>
</kw>
<status status="PASS" starttime="20210904 14:17:20.274" endtime="20210904 14:17:24.731"/>
</kw>
<msg timestamp="20210904 14:17:24.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:17:20.274" endtime="20210904 14:17:24.731"/>
</kw>
<msg timestamp="20210904 14:17:24.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:17:20.274" endtime="20210904 14:17:24.731"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:17:24.732" endtime="20210904 14:17:24.732"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:17:15.870" endtime="20210904 14:17:24.732"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210904 14:17:15.821" endtime="20210904 14:17:24.734"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210904 14:17:28.160" level="INFO">${random} = 52491</msg>
<status status="PASS" starttime="20210904 14:17:28.160" endtime="20210904 14:17:28.160"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:17:28.171" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-52491 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:17:32.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:17:32.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:17:28.162" endtime="20210904 14:17:32.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:17:32.224" level="INFO"/>
<status status="PASS" starttime="20210904 14:17:32.223" endtime="20210904 14:17:32.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:17:32.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:17:32.225" endtime="20210904 14:17:32.225"/>
</kw>
<status status="PASS" starttime="20210904 14:17:28.162" endtime="20210904 14:17:32.225"/>
</kw>
<msg timestamp="20210904 14:17:32.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:17:28.161" endtime="20210904 14:17:32.226"/>
</kw>
<msg timestamp="20210904 14:17:32.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:17:28.161" endtime="20210904 14:17:32.226"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:17:32.226" endtime="20210904 14:17:32.226"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:17:28.159" endtime="20210904 14:17:32.227"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210904 14:17:28.107" endtime="20210904 14:17:32.228"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210904 14:17:07.894" level="INFO">${random} = 72511</msg>
<status status="PASS" starttime="20210904 14:17:07.894" endtime="20210904 14:17:07.894"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:17:07.900" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-72511 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:17:12.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:17:12.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:17:07.896" endtime="20210904 14:17:12.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:17:12.389" level="INFO"/>
<status status="PASS" starttime="20210904 14:17:12.389" endtime="20210904 14:17:12.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:17:12.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:17:12.390" endtime="20210904 14:17:12.390"/>
</kw>
<status status="PASS" starttime="20210904 14:17:07.895" endtime="20210904 14:17:12.390"/>
</kw>
<msg timestamp="20210904 14:17:12.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:17:07.895" endtime="20210904 14:17:12.391"/>
</kw>
<msg timestamp="20210904 14:17:12.391" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:17:07.894" endtime="20210904 14:17:12.391"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:17:12.391" endtime="20210904 14:17:12.391"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:17:07.893" endtime="20210904 14:17:12.392"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210904 14:17:07.842" endtime="20210904 14:17:12.393"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="29910"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210904 14:19:04.308" level="INFO">${random} = 17025</msg>
<status status="PASS" starttime="20210904 14:19:04.307" endtime="20210904 14:19:04.308"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:19:04.311" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-17025 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:19:07.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:19:07.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:19:04.309" endtime="20210904 14:19:07.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:19:07.815" level="INFO"/>
<status status="PASS" starttime="20210904 14:19:07.814" endtime="20210904 14:19:07.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:19:07.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:19:07.815" endtime="20210904 14:19:07.816"/>
</kw>
<status status="PASS" starttime="20210904 14:19:04.309" endtime="20210904 14:19:07.816"/>
</kw>
<msg timestamp="20210904 14:19:07.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:19:04.309" endtime="20210904 14:19:07.816"/>
</kw>
<msg timestamp="20210904 14:19:07.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:19:04.308" endtime="20210904 14:19:07.816"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:19:07.816" endtime="20210904 14:19:07.817"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:19:04.307" endtime="20210904 14:19:07.817"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210904 14:19:04.257" endtime="20210904 14:19:07.818"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:18:51.252" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:18:53.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:18:53.380" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:18:51.251" endtime="20210904 14:18:53.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:18:53.381" level="INFO"/>
<status status="PASS" starttime="20210904 14:18:53.380" endtime="20210904 14:18:53.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:18:53.381" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:18:53.381" endtime="20210904 14:18:53.382"/>
</kw>
<status status="PASS" starttime="20210904 14:18:51.250" endtime="20210904 14:18:53.382"/>
</kw>
<msg timestamp="20210904 14:18:53.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:18:51.250" endtime="20210904 14:18:53.382"/>
</kw>
<msg timestamp="20210904 14:18:53.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:18:51.249" endtime="20210904 14:18:53.382"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:18:53.382" endtime="20210904 14:18:53.383"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:18:53.391" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:18:55.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:18:55.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:18:53.384" endtime="20210904 14:18:55.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:18:55.726" level="INFO"/>
<status status="PASS" starttime="20210904 14:18:55.725" endtime="20210904 14:18:55.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:18:55.727" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:18:55.726" endtime="20210904 14:18:55.727"/>
</kw>
<status status="PASS" starttime="20210904 14:18:53.384" endtime="20210904 14:18:55.727"/>
</kw>
<msg timestamp="20210904 14:18:55.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:18:53.384" endtime="20210904 14:18:55.727"/>
</kw>
<msg timestamp="20210904 14:18:55.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:18:53.383" endtime="20210904 14:18:55.727"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:18:55.728" endtime="20210904 14:18:55.728"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:18:55.733" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:19:00.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:19:00.828" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:18:55.731" endtime="20210904 14:19:00.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:19:00.829" level="INFO"/>
<status status="PASS" starttime="20210904 14:19:00.828" endtime="20210904 14:19:00.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:19:00.830" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:19:00.829" endtime="20210904 14:19:00.830"/>
</kw>
<status status="PASS" starttime="20210904 14:18:55.729" endtime="20210904 14:19:00.830"/>
</kw>
<msg timestamp="20210904 14:19:00.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:18:55.729" endtime="20210904 14:19:00.830"/>
</kw>
<msg timestamp="20210904 14:19:00.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210904 14:18:55.728" endtime="20210904 14:19:00.830"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:19:00.831" endtime="20210904 14:19:00.831"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:18:51.249" endtime="20210904 14:19:00.831"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210904 14:18:51.208" endtime="20210904 14:19:00.832"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:32.301" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210904 14:20:32.300" endtime="20210904 14:20:32.301"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:32.302" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:20:32.301" endtime="20210904 14:20:32.302"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:20:32.302" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:20:32.302" endtime="20210904 14:20:32.302"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:20:32.303" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210904 14:20:32.302" endtime="20210904 14:20:32.303"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:20:32.304" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:20:32.304" level="INFO">${version_file_contents} = #Sat Sep 04 14:19:52 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630765171423
clusterID=abefa3a3-a1f8-4752-a1f7-4e8b06618b3d
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210904 14:20:32.304" endtime="20210904 14:20:32.304"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:20:32.305" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210904 14:20:32.304" endtime="20210904 14:20:32.305"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:20:32.305" endtime="20210904 14:20:32.306"/>
</kw>
<status status="PASS" starttime="20210904 14:20:32.303" endtime="20210904 14:20:32.306"/>
</kw>
<status status="PASS" starttime="20210904 14:20:32.303" endtime="20210904 14:20:32.306"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:20:32.300" endtime="20210904 14:20:32.306"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:20:32.248" endtime="20210904 14:20:32.307"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210904 14:21:23.128" endtime="20210904 14:21:23.128"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:21:23.133" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:22:56.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:22:56.240" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210904 14:21:23.130" endtime="20210904 14:22:56.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:22:56.242" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210904 14:22:56.241" endtime="20210904 14:22:56.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:22:56.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:22:56.242" endtime="20210904 14:22:56.243"/>
</kw>
<status status="PASS" starttime="20210904 14:21:23.129" endtime="20210904 14:22:56.243"/>
</kw>
<msg timestamp="20210904 14:22:56.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:21:23.129" endtime="20210904 14:22:56.243"/>
</kw>
<msg timestamp="20210904 14:22:56.243" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210904 14:21:23.128" endtime="20210904 14:22:56.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:22:56.244" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210904 14:22:56.244" endtime="20210904 14:22:56.244"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:21:23.126" endtime="20210904 14:22:56.244"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210904 14:22:56.246" endtime="20210904 14:22:56.246"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:22:56.250" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:22:59.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:22:59.019" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210904 14:22:56.248" endtime="20210904 14:22:59.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:22:59.021" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210904 14:22:59.020" endtime="20210904 14:22:59.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:22:59.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:22:59.021" endtime="20210904 14:22:59.022"/>
</kw>
<status status="PASS" starttime="20210904 14:22:56.247" endtime="20210904 14:22:59.023"/>
</kw>
<msg timestamp="20210904 14:22:59.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:22:56.247" endtime="20210904 14:22:59.023"/>
</kw>
<msg timestamp="20210904 14:22:59.023" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210904 14:22:56.246" endtime="20210904 14:22:59.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:22:59.027" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210904 14:22:59.027" endtime="20210904 14:22:59.027"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:22:56.245" endtime="20210904 14:22:59.027"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210904 14:21:23.075" endtime="20210904 14:22:59.029"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:02.740" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210904 14:23:02.739" endtime="20210904 14:23:02.740"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:02.740" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:23:02.740" endtime="20210904 14:23:02.740"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:23:02.741" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:23:02.740" endtime="20210904 14:23:02.741"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:23:02.741" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210904 14:23:02.741" endtime="20210904 14:23:02.741"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:23:02.742" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:23:02.743" level="INFO">${version_file_contents} = #Sat Sep 04 14:21:30 UTC 2021
cTime=1630765091790
clusterID=CID-96694311-2482-45fc-81bd-31c1f2e258c5
nodeType=SCM
scmUuid=e9476454-e9b3-49d4-a1da-fa7cb6924270
layoutVersion=2
</msg>
<status status="PASS" starttime="20210904 14:23:02.742" endtime="20210904 14:23:02.743"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:23:02.743" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210904 14:23:02.743" endtime="20210904 14:23:02.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:02.744" endtime="20210904 14:23:02.744"/>
</kw>
<status status="PASS" starttime="20210904 14:23:02.742" endtime="20210904 14:23:02.744"/>
</kw>
<status status="PASS" starttime="20210904 14:23:02.741" endtime="20210904 14:23:02.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:02.739" endtime="20210904 14:23:02.744"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:23:02.692" endtime="20210904 14:23:02.745"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:06.465" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210904 14:23:06.464" endtime="20210904 14:23:06.465"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:06.465" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:23:06.465" endtime="20210904 14:23:06.465"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:23:06.466" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:23:06.465" endtime="20210904 14:23:06.466"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:23:06.466" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210904 14:23:06.466" endtime="20210904 14:23:06.466"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:23:06.467" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:23:06.468" level="INFO">${version_file_contents} = #Sat Sep 04 14:21:42 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630765171423
clusterID=abefa3a3-a1f8-4752-a1f7-4e8b06618b3d
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210904 14:23:06.467" endtime="20210904 14:23:06.468"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:23:06.468" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210904 14:23:06.468" endtime="20210904 14:23:06.468"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:06.468" endtime="20210904 14:23:06.469"/>
</kw>
<status status="PASS" starttime="20210904 14:23:06.467" endtime="20210904 14:23:06.469"/>
</kw>
<status status="PASS" starttime="20210904 14:23:06.466" endtime="20210904 14:23:06.469"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:06.463" endtime="20210904 14:23:06.469"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:23:06.416" endtime="20210904 14:23:06.470"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:10.081" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210904 14:23:10.080" endtime="20210904 14:23:10.081"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:10.082" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:23:10.081" endtime="20210904 14:23:10.082"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:23:10.082" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:23:10.082" endtime="20210904 14:23:10.082"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:23:10.083" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210904 14:23:10.082" endtime="20210904 14:23:10.083"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:23:10.084" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:23:10.084" level="INFO">${version_file_contents} = #Sat Sep 04 14:21:42 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630765169009
clusterID=52b2b002-091b-4586-8a9c-276fd9d82e95
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210904 14:23:10.083" endtime="20210904 14:23:10.084"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:23:10.085" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210904 14:23:10.084" endtime="20210904 14:23:10.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:10.085" endtime="20210904 14:23:10.085"/>
</kw>
<status status="PASS" starttime="20210904 14:23:10.083" endtime="20210904 14:23:10.085"/>
</kw>
<status status="PASS" starttime="20210904 14:23:10.083" endtime="20210904 14:23:10.085"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:10.080" endtime="20210904 14:23:10.086"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:23:10.032" endtime="20210904 14:23:10.086"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:13.551" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210904 14:23:13.551" endtime="20210904 14:23:13.551"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:13.552" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:23:13.551" endtime="20210904 14:23:13.552"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:23:13.552" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:23:13.552" endtime="20210904 14:23:13.552"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:23:13.553" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210904 14:23:13.553" endtime="20210904 14:23:13.553"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:23:13.554" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:23:13.555" level="INFO">${version_file_contents} = #Sat Sep 04 14:21:42 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630765173164
clusterID=9ea1e266-9b3f-4181-87f8-f3fb4a86c9a0
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210904 14:23:13.554" endtime="20210904 14:23:13.555"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:23:13.555" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210904 14:23:13.555" endtime="20210904 14:23:13.555"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:13.555" endtime="20210904 14:23:13.556"/>
</kw>
<status status="PASS" starttime="20210904 14:23:13.554" endtime="20210904 14:23:13.556"/>
</kw>
<status status="PASS" starttime="20210904 14:23:13.553" endtime="20210904 14:23:13.556"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:13.550" endtime="20210904 14:23:13.556"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:23:13.503" endtime="20210904 14:23:13.557"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:17.112" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210904 14:23:17.112" endtime="20210904 14:23:17.112"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:17.113" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:23:17.112" endtime="20210904 14:23:17.113"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:23:17.113" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:23:17.113" endtime="20210904 14:23:17.113"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:23:17.114" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210904 14:23:17.113" endtime="20210904 14:23:17.114"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:23:17.115" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:23:17.115" level="INFO">${version_file_contents} = #Sat Sep 04 14:18:27 UTC 2021
cTime=1630765091555
clusterID=CID-96694311-2482-45fc-81bd-31c1f2e258c5
omUuid=8b62940f-4847-4162-b2df-2709c5de4f0a
nodeType=OM
scmUuid=e9476454-e9b3-49d4-a1da-fa7cb692427...</msg>
<status status="PASS" starttime="20210904 14:23:17.115" endtime="20210904 14:23:17.115"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:23:17.116" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210904 14:23:17.115" endtime="20210904 14:23:17.116"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:17.116" endtime="20210904 14:23:17.116"/>
</kw>
<status status="PASS" starttime="20210904 14:23:17.114" endtime="20210904 14:23:17.116"/>
</kw>
<status status="PASS" starttime="20210904 14:23:17.114" endtime="20210904 14:23:17.116"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:17.111" endtime="20210904 14:23:17.116"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:23:17.063" endtime="20210904 14:23:17.117"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:20.653" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210904 14:23:20.652" endtime="20210904 14:23:20.653"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:20.654" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:23:20.653" endtime="20210904 14:23:20.654"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:23:20.654" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:23:20.654" endtime="20210904 14:23:20.654"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:23:20.655" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210904 14:23:20.655" endtime="20210904 14:23:20.655"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:23:20.656" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:23:20.657" level="INFO">${version_file_contents} = #Sat Sep 04 14:18:25 UTC 2021
cTime=1630765087805
clusterID=CID-96694311-2482-45fc-81bd-31c1f2e258c5
omUuid=24edd294-4aae-471e-b27f-1ff5f67b1b77
nodeType=OM
scmUuid=e9476454-e9b3-49d4-a1da-fa7cb692427...</msg>
<status status="PASS" starttime="20210904 14:23:20.656" endtime="20210904 14:23:20.657"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:23:20.657" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210904 14:23:20.657" endtime="20210904 14:23:20.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:20.658" endtime="20210904 14:23:20.658"/>
</kw>
<status status="PASS" starttime="20210904 14:23:20.656" endtime="20210904 14:23:20.658"/>
</kw>
<status status="PASS" starttime="20210904 14:23:20.655" endtime="20210904 14:23:20.658"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:20.652" endtime="20210904 14:23:20.658"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:23:20.603" endtime="20210904 14:23:20.659"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:24.167" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210904 14:23:24.166" endtime="20210904 14:23:24.167"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:23:24.167" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:23:24.167" endtime="20210904 14:23:24.167"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:23:24.168" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:23:24.168" endtime="20210904 14:23:24.168"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:23:24.169" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210904 14:23:24.168" endtime="20210904 14:23:24.169"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:23:24.170" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:23:24.170" level="INFO">${version_file_contents} = #Sat Sep 04 14:18:25 UTC 2021
cTime=1630765088809
clusterID=CID-96694311-2482-45fc-81bd-31c1f2e258c5
omUuid=62ca1294-d868-43ab-8ae6-a7418b776293
nodeType=OM
scmUuid=e9476454-e9b3-49d4-a1da-fa7cb692427...</msg>
<status status="PASS" starttime="20210904 14:23:24.169" endtime="20210904 14:23:24.170"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:23:24.171" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210904 14:23:24.170" endtime="20210904 14:23:24.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:24.171" endtime="20210904 14:23:24.171"/>
</kw>
<status status="PASS" starttime="20210904 14:23:24.169" endtime="20210904 14:23:24.172"/>
</kw>
<status status="PASS" starttime="20210904 14:23:24.169" endtime="20210904 14:23:24.172"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:24.165" endtime="20210904 14:23:24.172"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:23:24.116" endtime="20210904 14:23:24.172"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210904 14:23:27.686" level="INFO">${random} = 08232</msg>
<status status="PASS" starttime="20210904 14:23:27.685" endtime="20210904 14:23:27.686"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:23:27.691" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-08232 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:23:31.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:23:31.529" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:27.688" endtime="20210904 14:23:31.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:23:31.531" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:31.530" endtime="20210904 14:23:31.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:23:31.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:23:31.531" endtime="20210904 14:23:31.532"/>
</kw>
<status status="PASS" starttime="20210904 14:23:27.687" endtime="20210904 14:23:31.532"/>
</kw>
<msg timestamp="20210904 14:23:31.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:23:27.687" endtime="20210904 14:23:31.532"/>
</kw>
<msg timestamp="20210904 14:23:31.532" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:27.686" endtime="20210904 14:23:31.532"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:31.533" endtime="20210904 14:23:31.533"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:27.684" endtime="20210904 14:23:31.533"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210904 14:23:27.639" endtime="20210904 14:23:31.535"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210904 14:23:35.025" level="INFO">${random} = 04090</msg>
<status status="PASS" starttime="20210904 14:23:35.024" endtime="20210904 14:23:35.025"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:23:35.030" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-04090 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:23:39.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:23:39.009" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:35.027" endtime="20210904 14:23:39.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:23:39.011" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:39.010" endtime="20210904 14:23:39.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:23:39.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:23:39.012" endtime="20210904 14:23:39.013"/>
</kw>
<status status="PASS" starttime="20210904 14:23:35.026" endtime="20210904 14:23:39.013"/>
</kw>
<msg timestamp="20210904 14:23:39.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:23:35.026" endtime="20210904 14:23:39.013"/>
</kw>
<msg timestamp="20210904 14:23:39.013" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:35.025" endtime="20210904 14:23:39.013"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:39.014" endtime="20210904 14:23:39.014"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:35.024" endtime="20210904 14:23:39.014"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210904 14:23:34.968" endtime="20210904 14:23:39.016"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:35.809" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210904 14:20:35.808" endtime="20210904 14:20:35.809"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:35.809" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:20:35.809" endtime="20210904 14:20:35.809"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:20:35.810" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:20:35.810" endtime="20210904 14:20:35.810"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:20:35.811" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210904 14:20:35.810" endtime="20210904 14:20:35.811"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:20:35.812" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:20:35.812" level="INFO">${version_file_contents} = #Sat Sep 04 14:19:51 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630765169009
clusterID=52b2b002-091b-4586-8a9c-276fd9d82e95
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210904 14:20:35.812" endtime="20210904 14:20:35.812"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:20:35.813" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210904 14:20:35.812" endtime="20210904 14:20:35.813"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:20:35.813" endtime="20210904 14:20:35.813"/>
</kw>
<status status="PASS" starttime="20210904 14:20:35.811" endtime="20210904 14:20:35.814"/>
</kw>
<status status="PASS" starttime="20210904 14:20:35.811" endtime="20210904 14:20:35.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:20:35.807" endtime="20210904 14:20:35.814"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:20:35.759" endtime="20210904 14:20:35.814"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:23:42.551" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:23:44.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:23:44.868" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:42.547" endtime="20210904 14:23:44.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:23:44.870" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:44.869" endtime="20210904 14:23:44.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:23:44.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:23:44.870" endtime="20210904 14:23:44.871"/>
</kw>
<status status="PASS" starttime="20210904 14:23:42.547" endtime="20210904 14:23:44.871"/>
</kw>
<msg timestamp="20210904 14:23:44.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:23:42.546" endtime="20210904 14:23:44.871"/>
</kw>
<msg timestamp="20210904 14:23:44.871" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:42.545" endtime="20210904 14:23:44.871"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:44.872" endtime="20210904 14:23:44.872"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:23:44.875" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:23:47.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:23:47.193" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:44.873" endtime="20210904 14:23:47.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:23:47.194" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:47.193" endtime="20210904 14:23:47.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:23:47.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:23:47.194" endtime="20210904 14:23:47.195"/>
</kw>
<status status="PASS" starttime="20210904 14:23:44.873" endtime="20210904 14:23:47.195"/>
</kw>
<msg timestamp="20210904 14:23:47.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:23:44.872" endtime="20210904 14:23:47.195"/>
</kw>
<msg timestamp="20210904 14:23:47.196" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:44.872" endtime="20210904 14:23:47.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:47.196" endtime="20210904 14:23:47.196"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:23:47.200" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:23:51.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:23:51.570" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:47.198" endtime="20210904 14:23:51.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:23:51.571" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:51.570" endtime="20210904 14:23:51.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:23:51.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:23:51.571" endtime="20210904 14:23:51.572"/>
</kw>
<status status="PASS" starttime="20210904 14:23:47.197" endtime="20210904 14:23:51.572"/>
</kw>
<msg timestamp="20210904 14:23:51.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:23:47.197" endtime="20210904 14:23:51.572"/>
</kw>
<msg timestamp="20210904 14:23:51.572" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:47.196" endtime="20210904 14:23:51.573"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:51.573" endtime="20210904 14:23:51.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:42.545" endtime="20210904 14:23:51.573"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210904 14:23:42.497" endtime="20210904 14:23:51.575"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210904 14:23:55.148" level="INFO">${random} = 60693</msg>
<status status="PASS" starttime="20210904 14:23:55.148" endtime="20210904 14:23:55.148"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:23:55.153" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-60693 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:23:59.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:23:59.271" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:55.150" endtime="20210904 14:23:59.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:23:59.273" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:59.272" endtime="20210904 14:23:59.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:23:59.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:23:59.273" endtime="20210904 14:23:59.274"/>
</kw>
<status status="PASS" starttime="20210904 14:23:55.150" endtime="20210904 14:23:59.274"/>
</kw>
<msg timestamp="20210904 14:23:59.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:23:55.149" endtime="20210904 14:23:59.274"/>
</kw>
<msg timestamp="20210904 14:23:59.274" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:23:55.149" endtime="20210904 14:23:59.274"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:23:59.275" endtime="20210904 14:23:59.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:23:55.147" endtime="20210904 14:23:59.275"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210904 14:23:55.100" endtime="20210904 14:23:59.279"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:39.483" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210904 14:20:39.482" endtime="20210904 14:20:39.483"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:39.483" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:20:39.483" endtime="20210904 14:20:39.483"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:20:39.484" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:20:39.484" endtime="20210904 14:20:39.484"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:20:39.485" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210904 14:20:39.484" endtime="20210904 14:20:39.485"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:20:39.486" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:20:39.486" level="INFO">${version_file_contents} = #Sat Sep 04 14:19:52 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630765173164
clusterID=9ea1e266-9b3f-4181-87f8-f3fb4a86c9a0
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210904 14:20:39.486" endtime="20210904 14:20:39.486"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:20:39.487" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210904 14:20:39.486" endtime="20210904 14:20:39.487"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:20:39.487" endtime="20210904 14:20:39.488"/>
</kw>
<status status="PASS" starttime="20210904 14:20:39.485" endtime="20210904 14:20:39.488"/>
</kw>
<status status="PASS" starttime="20210904 14:20:39.485" endtime="20210904 14:20:39.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:20:39.481" endtime="20210904 14:20:39.488"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:20:39.429" endtime="20210904 14:20:39.489"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:43.071" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210904 14:20:43.071" endtime="20210904 14:20:43.072"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:43.072" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:20:43.072" endtime="20210904 14:20:43.072"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:20:43.073" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:20:43.072" endtime="20210904 14:20:43.073"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:20:43.074" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210904 14:20:43.073" endtime="20210904 14:20:43.074"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:20:43.075" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:20:43.075" level="INFO">${version_file_contents} = #Sat Sep 04 14:18:27 UTC 2021
cTime=1630765091555
clusterID=CID-96694311-2482-45fc-81bd-31c1f2e258c5
omUuid=8b62940f-4847-4162-b2df-2709c5de4f0a
nodeType=OM
scmUuid=e9476454-e9b3-49d4-a1da-fa7cb692427...</msg>
<status status="PASS" starttime="20210904 14:20:43.075" endtime="20210904 14:20:43.075"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:20:43.076" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210904 14:20:43.076" endtime="20210904 14:20:43.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:20:43.076" endtime="20210904 14:20:43.077"/>
</kw>
<status status="PASS" starttime="20210904 14:20:43.074" endtime="20210904 14:20:43.077"/>
</kw>
<status status="PASS" starttime="20210904 14:20:43.074" endtime="20210904 14:20:43.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:20:43.070" endtime="20210904 14:20:43.077"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:20:43.021" endtime="20210904 14:20:43.078"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:46.677" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210904 14:20:46.677" endtime="20210904 14:20:46.677"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:46.678" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:20:46.677" endtime="20210904 14:20:46.678"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:20:46.678" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:20:46.678" endtime="20210904 14:20:46.678"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:20:46.679" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210904 14:20:46.679" endtime="20210904 14:20:46.679"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:20:46.680" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:20:46.681" level="INFO">${version_file_contents} = #Sat Sep 04 14:18:25 UTC 2021
cTime=1630765087805
clusterID=CID-96694311-2482-45fc-81bd-31c1f2e258c5
omUuid=24edd294-4aae-471e-b27f-1ff5f67b1b77
nodeType=OM
scmUuid=e9476454-e9b3-49d4-a1da-fa7cb692427...</msg>
<status status="PASS" starttime="20210904 14:20:46.680" endtime="20210904 14:20:46.681"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:20:46.681" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210904 14:20:46.681" endtime="20210904 14:20:46.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:20:46.681" endtime="20210904 14:20:46.682"/>
</kw>
<status status="PASS" starttime="20210904 14:20:46.680" endtime="20210904 14:20:46.682"/>
</kw>
<status status="PASS" starttime="20210904 14:20:46.679" endtime="20210904 14:20:46.682"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:20:46.676" endtime="20210904 14:20:46.682"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:20:46.627" endtime="20210904 14:20:46.683"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:50.200" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210904 14:20:50.200" endtime="20210904 14:20:50.200"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:50.201" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:20:50.200" endtime="20210904 14:20:50.201"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:20:50.201" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:20:50.201" endtime="20210904 14:20:50.201"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:20:50.202" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210904 14:20:50.201" endtime="20210904 14:20:50.202"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:20:50.203" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:20:50.203" level="INFO">${version_file_contents} = #Sat Sep 04 14:18:25 UTC 2021
cTime=1630765088809
clusterID=CID-96694311-2482-45fc-81bd-31c1f2e258c5
omUuid=62ca1294-d868-43ab-8ae6-a7418b776293
nodeType=OM
scmUuid=e9476454-e9b3-49d4-a1da-fa7cb692427...</msg>
<status status="PASS" starttime="20210904 14:20:50.203" endtime="20210904 14:20:50.203"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:20:50.204" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210904 14:20:50.203" endtime="20210904 14:20:50.204"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:20:50.204" endtime="20210904 14:20:50.205"/>
</kw>
<status status="PASS" starttime="20210904 14:20:50.202" endtime="20210904 14:20:50.205"/>
</kw>
<status status="PASS" starttime="20210904 14:20:50.202" endtime="20210904 14:20:50.205"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:20:50.199" endtime="20210904 14:20:50.205"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:20:50.151" endtime="20210904 14:20:50.206"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210904 14:20:53.858" level="INFO">${random} = 10295</msg>
<status status="PASS" starttime="20210904 14:20:53.858" endtime="20210904 14:20:53.858"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:20:53.864" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-10295 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:20:58.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:20:58.133" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:20:53.860" endtime="20210904 14:20:58.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:20:58.135" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:20:58.134" endtime="20210904 14:20:58.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:20:58.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:20:58.135" endtime="20210904 14:20:58.136"/>
</kw>
<status status="PASS" starttime="20210904 14:20:53.860" endtime="20210904 14:20:58.136"/>
</kw>
<msg timestamp="20210904 14:20:58.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:20:53.859" endtime="20210904 14:20:58.136"/>
</kw>
<msg timestamp="20210904 14:20:58.137" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:20:53.858" endtime="20210904 14:20:58.137"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:20:58.137" endtime="20210904 14:20:58.137"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:20:53.857" endtime="20210904 14:20:58.137"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210904 14:20:53.808" endtime="20210904 14:20:58.139"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:21:01.797" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:21:04.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:21:04.404" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:01.794" endtime="20210904 14:21:04.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:21:04.405" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:04.404" endtime="20210904 14:21:04.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:21:04.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:21:04.406" endtime="20210904 14:21:04.406"/>
</kw>
<status status="PASS" starttime="20210904 14:21:01.793" endtime="20210904 14:21:04.407"/>
</kw>
<msg timestamp="20210904 14:21:04.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:21:01.793" endtime="20210904 14:21:04.407"/>
</kw>
<msg timestamp="20210904 14:21:04.407" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:01.792" endtime="20210904 14:21:04.407"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:21:04.407" endtime="20210904 14:21:04.408"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:21:04.417" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:21:06.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:21:06.946" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:04.410" endtime="20210904 14:21:06.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:21:06.948" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:06.947" endtime="20210904 14:21:06.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:21:06.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:21:06.948" endtime="20210904 14:21:06.949"/>
</kw>
<status status="PASS" starttime="20210904 14:21:04.409" endtime="20210904 14:21:06.949"/>
</kw>
<msg timestamp="20210904 14:21:06.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:21:04.409" endtime="20210904 14:21:06.949"/>
</kw>
<msg timestamp="20210904 14:21:06.949" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:04.408" endtime="20210904 14:21:06.950"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:21:06.950" endtime="20210904 14:21:06.950"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:21:06.954" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:21:11.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:21:11.649" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:06.952" endtime="20210904 14:21:11.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:21:11.650" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:11.650" endtime="20210904 14:21:11.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:21:11.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:21:11.651" endtime="20210904 14:21:11.651"/>
</kw>
<status status="PASS" starttime="20210904 14:21:06.951" endtime="20210904 14:21:11.651"/>
</kw>
<msg timestamp="20210904 14:21:11.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:21:06.951" endtime="20210904 14:21:11.652"/>
</kw>
<msg timestamp="20210904 14:21:11.652" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:06.950" endtime="20210904 14:21:11.652"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:21:11.652" endtime="20210904 14:21:11.653"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:21:01.791" endtime="20210904 14:21:11.653"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210904 14:21:01.740" endtime="20210904 14:21:11.654"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210904 14:21:15.260" level="INFO">${random} = 30351</msg>
<status status="PASS" starttime="20210904 14:21:15.260" endtime="20210904 14:21:15.261"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210904 14:21:15.266" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-30351 2&gt;&amp;1'.</msg>
<msg timestamp="20210904 14:21:19.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210904 14:21:19.478" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:15.262" endtime="20210904 14:21:19.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210904 14:21:19.479" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:19.478" endtime="20210904 14:21:19.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210904 14:21:19.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210904 14:21:19.479" endtime="20210904 14:21:19.480"/>
</kw>
<status status="PASS" starttime="20210904 14:21:15.262" endtime="20210904 14:21:19.480"/>
</kw>
<msg timestamp="20210904 14:21:19.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210904 14:21:15.262" endtime="20210904 14:21:19.480"/>
</kw>
<msg timestamp="20210904 14:21:19.481" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210904 14:21:15.261" endtime="20210904 14:21:19.481"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:21:19.481" endtime="20210904 14:21:19.481"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:21:15.259" endtime="20210904 14:21:19.481"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210904 14:21:15.208" endtime="20210904 14:21:19.483"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:28.748" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210904 14:20:28.748" endtime="20210904 14:20:28.749"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210904 14:20:28.749" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210904 14:20:28.749" endtime="20210904 14:20:28.749"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210904 14:20:28.750" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210904 14:20:28.749" endtime="20210904 14:20:28.750"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210904 14:20:28.750" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210904 14:20:28.750" endtime="20210904 14:20:28.750"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210904 14:20:28.752" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210904 14:20:28.752" level="INFO">${version_file_contents} = #Sat Sep 04 14:18:11 UTC 2021
cTime=1630765091790
clusterID=CID-96694311-2482-45fc-81bd-31c1f2e258c5
nodeType=SCM
scmUuid=e9476454-e9b3-49d4-a1da-fa7cb6924270
layoutVersion=0
</msg>
<status status="PASS" starttime="20210904 14:20:28.751" endtime="20210904 14:20:28.752"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210904 14:20:28.753" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210904 14:20:28.752" endtime="20210904 14:20:28.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210904 14:20:28.753" endtime="20210904 14:20:28.753"/>
</kw>
<status status="PASS" starttime="20210904 14:20:28.751" endtime="20210904 14:20:28.753"/>
</kw>
<status status="PASS" starttime="20210904 14:20:28.750" endtime="20210904 14:20:28.753"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210904 14:20:28.747" endtime="20210904 14:20:28.754"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210904 14:20:28.700" endtime="20210904 14:20:28.754"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="149637"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="179547"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
