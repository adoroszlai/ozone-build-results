<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20210914 14:37:02.811" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210914 14:28:08.169" level="INFO">${random} = 05543</msg>
<status status="PASS" starttime="20210914 14:28:08.168" endtime="20210914 14:28:08.169"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:28:08.177" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-05543 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:28:12.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:28:12.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:28:08.171" endtime="20210914 14:28:12.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:28:12.675" level="INFO"/>
<status status="PASS" starttime="20210914 14:28:12.674" endtime="20210914 14:28:12.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:28:12.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:28:12.675" endtime="20210914 14:28:12.676"/>
</kw>
<status status="PASS" starttime="20210914 14:28:08.171" endtime="20210914 14:28:12.676"/>
</kw>
<msg timestamp="20210914 14:28:12.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:28:08.170" endtime="20210914 14:28:12.677"/>
</kw>
<msg timestamp="20210914 14:28:12.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:28:08.169" endtime="20210914 14:28:12.677"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:28:12.677" endtime="20210914 14:28:12.678"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:28:08.167" endtime="20210914 14:28:12.678"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210914 14:28:08.101" endtime="20210914 14:28:12.680"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210914 14:32:15.468" level="INFO">${random} = 27292</msg>
<status status="PASS" starttime="20210914 14:32:15.467" endtime="20210914 14:32:15.468"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:32:15.473" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-27292 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:32:19.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:32:19.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:15.470" endtime="20210914 14:32:19.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:32:19.420" level="INFO"/>
<status status="PASS" starttime="20210914 14:32:19.419" endtime="20210914 14:32:19.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:32:19.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:32:19.420" endtime="20210914 14:32:19.421"/>
</kw>
<status status="PASS" starttime="20210914 14:32:15.469" endtime="20210914 14:32:19.421"/>
</kw>
<msg timestamp="20210914 14:32:19.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:32:15.469" endtime="20210914 14:32:19.422"/>
</kw>
<msg timestamp="20210914 14:32:19.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:15.468" endtime="20210914 14:32:19.422"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:32:19.422" endtime="20210914 14:32:19.422"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:32:15.466" endtime="20210914 14:32:19.423"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210914 14:32:15.405" endtime="20210914 14:32:19.424"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:32:23.580" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:32:26.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:32:26.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:23.576" endtime="20210914 14:32:26.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:32:26.216" level="INFO"/>
<status status="PASS" starttime="20210914 14:32:26.215" endtime="20210914 14:32:26.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:32:26.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:32:26.217" endtime="20210914 14:32:26.217"/>
</kw>
<status status="PASS" starttime="20210914 14:32:23.576" endtime="20210914 14:32:26.218"/>
</kw>
<msg timestamp="20210914 14:32:26.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:32:23.576" endtime="20210914 14:32:26.218"/>
</kw>
<msg timestamp="20210914 14:32:26.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:23.575" endtime="20210914 14:32:26.218"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:32:26.218" endtime="20210914 14:32:26.219"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:32:26.241" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:32:28.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:32:28.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:26.221" endtime="20210914 14:32:28.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:32:28.603" level="INFO"/>
<status status="PASS" starttime="20210914 14:32:28.602" endtime="20210914 14:32:28.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:32:28.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:32:28.603" endtime="20210914 14:32:28.604"/>
</kw>
<status status="PASS" starttime="20210914 14:32:26.220" endtime="20210914 14:32:28.604"/>
</kw>
<msg timestamp="20210914 14:32:28.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:32:26.220" endtime="20210914 14:32:28.604"/>
</kw>
<msg timestamp="20210914 14:32:28.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:26.219" endtime="20210914 14:32:28.605"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:32:28.606" endtime="20210914 14:32:28.607"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:32:28.611" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:32:33.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:32:33.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:28.609" endtime="20210914 14:32:33.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:32:33.648" level="INFO"/>
<status status="PASS" starttime="20210914 14:32:33.647" endtime="20210914 14:32:33.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:32:33.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:32:33.648" endtime="20210914 14:32:33.649"/>
</kw>
<status status="PASS" starttime="20210914 14:32:28.608" endtime="20210914 14:32:33.650"/>
</kw>
<msg timestamp="20210914 14:32:33.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:32:28.608" endtime="20210914 14:32:33.650"/>
</kw>
<msg timestamp="20210914 14:32:33.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:28.607" endtime="20210914 14:32:33.651"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:32:33.651" endtime="20210914 14:32:33.651"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:32:23.574" endtime="20210914 14:32:33.651"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210914 14:32:23.511" endtime="20210914 14:32:33.653"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210914 14:32:37.453" level="INFO">${random} = 43044</msg>
<status status="PASS" starttime="20210914 14:32:37.452" endtime="20210914 14:32:37.453"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:32:37.460" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-43044 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:32:42.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:32:42.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:37.456" endtime="20210914 14:32:42.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:32:42.468" level="INFO"/>
<status status="PASS" starttime="20210914 14:32:42.467" endtime="20210914 14:32:42.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:32:42.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:32:42.469" endtime="20210914 14:32:42.469"/>
</kw>
<status status="PASS" starttime="20210914 14:32:37.455" endtime="20210914 14:32:42.469"/>
</kw>
<msg timestamp="20210914 14:32:42.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:32:37.455" endtime="20210914 14:32:42.470"/>
</kw>
<msg timestamp="20210914 14:32:42.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:37.454" endtime="20210914 14:32:42.470"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:32:42.470" endtime="20210914 14:32:42.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:32:37.451" endtime="20210914 14:32:42.471"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210914 14:32:37.382" endtime="20210914 14:32:42.473"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210914 14:32:06.496" level="INFO">${random} = 89124</msg>
<status status="PASS" starttime="20210914 14:32:06.495" endtime="20210914 14:32:06.496"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:32:06.502" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-89124 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:32:11.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:32:11.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:06.498" endtime="20210914 14:32:11.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:32:11.452" level="INFO"/>
<status status="PASS" starttime="20210914 14:32:11.451" endtime="20210914 14:32:11.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:32:11.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:32:11.453" endtime="20210914 14:32:11.454"/>
</kw>
<status status="PASS" starttime="20210914 14:32:06.497" endtime="20210914 14:32:11.454"/>
</kw>
<msg timestamp="20210914 14:32:11.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:32:06.497" endtime="20210914 14:32:11.454"/>
</kw>
<msg timestamp="20210914 14:32:11.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:32:06.496" endtime="20210914 14:32:11.455"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:32:11.455" endtime="20210914 14:32:11.456"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:32:06.494" endtime="20210914 14:32:11.456"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210914 14:32:06.426" endtime="20210914 14:32:11.458"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:27:52.101" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:27:54.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:27:54.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:27:52.097" endtime="20210914 14:27:54.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:27:54.637" level="INFO"/>
<status status="PASS" starttime="20210914 14:27:54.622" endtime="20210914 14:27:54.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:27:54.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:27:54.638" endtime="20210914 14:27:54.638"/>
</kw>
<status status="PASS" starttime="20210914 14:27:52.096" endtime="20210914 14:27:54.639"/>
</kw>
<msg timestamp="20210914 14:27:54.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:27:52.096" endtime="20210914 14:27:54.639"/>
</kw>
<msg timestamp="20210914 14:27:54.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:27:52.095" endtime="20210914 14:27:54.639"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:27:54.640" endtime="20210914 14:27:54.640"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:27:54.650" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:27:57.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:27:57.176" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:27:54.645" endtime="20210914 14:27:57.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:27:57.177" level="INFO"/>
<status status="PASS" starttime="20210914 14:27:57.176" endtime="20210914 14:27:57.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:27:57.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:27:57.177" endtime="20210914 14:27:57.178"/>
</kw>
<status status="PASS" starttime="20210914 14:27:54.644" endtime="20210914 14:27:57.178"/>
</kw>
<msg timestamp="20210914 14:27:57.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:27:54.643" endtime="20210914 14:27:57.179"/>
</kw>
<msg timestamp="20210914 14:27:57.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:27:54.642" endtime="20210914 14:27:57.179"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:27:57.179" endtime="20210914 14:27:57.180"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:27:57.190" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:28:03.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:28:03.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:27:57.182" endtime="20210914 14:28:03.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:28:03.955" level="INFO"/>
<status status="PASS" starttime="20210914 14:28:03.954" endtime="20210914 14:28:03.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:28:03.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:28:03.956" endtime="20210914 14:28:03.956"/>
</kw>
<status status="PASS" starttime="20210914 14:27:57.181" endtime="20210914 14:28:03.957"/>
</kw>
<msg timestamp="20210914 14:28:03.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:27:57.181" endtime="20210914 14:28:03.957"/>
</kw>
<msg timestamp="20210914 14:28:03.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210914 14:27:57.180" endtime="20210914 14:28:03.957"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:28:03.958" endtime="20210914 14:28:03.958"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:27:52.094" endtime="20210914 14:28:03.958"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210914 14:27:52.022" endtime="20210914 14:28:03.961"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:31.745" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210914 14:35:31.744" endtime="20210914 14:35:31.745"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:31.746" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:35:31.746" endtime="20210914 14:35:31.746"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:35:31.747" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:35:31.746" endtime="20210914 14:35:31.747"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:35:31.747" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210914 14:35:31.747" endtime="20210914 14:35:31.747"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:35:31.749" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:35:31.749" level="INFO">${version_file_contents} = #Tue Sep 14 14:34:13 UTC 2021
cTime=1631629602328
clusterID=CID-b46bfab0-4833-4ac2-84cf-f1c44c2fcde4
nodeType=SCM
scmUuid=b698107b-4a7e-4f45-aa1b-c2f4da756f4f
layoutVersion=2
</msg>
<status status="PASS" starttime="20210914 14:35:31.748" endtime="20210914 14:35:31.749"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:35:31.750" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210914 14:35:31.749" endtime="20210914 14:35:31.750"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:35:31.750" endtime="20210914 14:35:31.751"/>
</kw>
<status status="PASS" starttime="20210914 14:35:31.748" endtime="20210914 14:35:31.751"/>
</kw>
<status status="PASS" starttime="20210914 14:35:31.747" endtime="20210914 14:35:31.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:35:31.743" endtime="20210914 14:35:31.751"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:35:31.681" endtime="20210914 14:35:31.752"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210914 14:36:18.528" level="INFO">${random} = 98879</msg>
<status status="PASS" starttime="20210914 14:36:18.527" endtime="20210914 14:36:18.528"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:36:18.534" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-98879 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:36:23.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:36:23.426" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:18.530" endtime="20210914 14:36:23.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:36:23.432" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:23.431" endtime="20210914 14:36:23.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:36:23.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:36:23.432" endtime="20210914 14:36:23.433"/>
</kw>
<status status="PASS" starttime="20210914 14:36:18.529" endtime="20210914 14:36:23.433"/>
</kw>
<msg timestamp="20210914 14:36:23.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:36:18.529" endtime="20210914 14:36:23.433"/>
</kw>
<msg timestamp="20210914 14:36:23.433" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:18.528" endtime="20210914 14:36:23.434"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:36:23.434" endtime="20210914 14:36:23.435"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:36:18.526" endtime="20210914 14:36:23.435"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210914 14:36:18.461" endtime="20210914 14:36:23.437"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:36:27.565" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:36:30.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:36:30.380" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:27.562" endtime="20210914 14:36:30.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:36:30.385" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:30.380" endtime="20210914 14:36:30.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:36:30.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:36:30.385" endtime="20210914 14:36:30.386"/>
</kw>
<status status="PASS" starttime="20210914 14:36:27.561" endtime="20210914 14:36:30.386"/>
</kw>
<msg timestamp="20210914 14:36:30.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:36:27.561" endtime="20210914 14:36:30.387"/>
</kw>
<msg timestamp="20210914 14:36:30.387" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:27.560" endtime="20210914 14:36:30.387"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:36:30.387" endtime="20210914 14:36:30.388"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:36:30.393" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:36:33.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:36:33.314" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:30.391" endtime="20210914 14:36:33.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:36:33.315" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:33.315" endtime="20210914 14:36:33.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:36:33.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:36:33.316" endtime="20210914 14:36:33.317"/>
</kw>
<status status="PASS" starttime="20210914 14:36:30.390" endtime="20210914 14:36:33.317"/>
</kw>
<msg timestamp="20210914 14:36:33.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:36:30.389" endtime="20210914 14:36:33.318"/>
</kw>
<msg timestamp="20210914 14:36:33.322" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:30.388" endtime="20210914 14:36:33.322"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:36:33.322" endtime="20210914 14:36:33.323"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:36:33.327" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:36:39.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:36:39.244" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:33.325" endtime="20210914 14:36:39.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:36:39.245" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:39.245" endtime="20210914 14:36:39.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:36:39.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:36:39.246" endtime="20210914 14:36:39.246"/>
</kw>
<status status="PASS" starttime="20210914 14:36:33.324" endtime="20210914 14:36:39.247"/>
</kw>
<msg timestamp="20210914 14:36:39.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:36:33.324" endtime="20210914 14:36:39.247"/>
</kw>
<msg timestamp="20210914 14:36:39.248" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:33.323" endtime="20210914 14:36:39.248"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:36:39.248" endtime="20210914 14:36:39.249"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:36:27.559" endtime="20210914 14:36:39.249"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210914 14:36:27.496" endtime="20210914 14:36:39.251"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210914 14:36:43.070" level="INFO">${random} = 26208</msg>
<status status="PASS" starttime="20210914 14:36:43.069" endtime="20210914 14:36:43.070"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:36:43.076" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-26208 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:36:47.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:36:47.953" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:43.072" endtime="20210914 14:36:47.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:36:47.955" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:47.954" endtime="20210914 14:36:47.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:36:47.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:36:47.955" endtime="20210914 14:36:47.956"/>
</kw>
<status status="PASS" starttime="20210914 14:36:43.072" endtime="20210914 14:36:47.956"/>
</kw>
<msg timestamp="20210914 14:36:47.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:36:43.071" endtime="20210914 14:36:47.957"/>
</kw>
<msg timestamp="20210914 14:36:47.957" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:43.070" endtime="20210914 14:36:47.957"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:36:47.957" endtime="20210914 14:36:47.958"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:36:43.068" endtime="20210914 14:36:47.958"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210914 14:36:43.003" endtime="20210914 14:36:47.960"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:35.723" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210914 14:35:35.722" endtime="20210914 14:35:35.723"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:35.724" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:35:35.723" endtime="20210914 14:35:35.724"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:35:35.724" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:35:35.724" endtime="20210914 14:35:35.724"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:35:35.725" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210914 14:35:35.725" endtime="20210914 14:35:35.725"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:35:35.727" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:35:35.727" level="INFO">${version_file_contents} = #Tue Sep 14 14:34:16 UTC 2021
cTime=1631629720246
clusterID=90748259-8416-4128-899f-25a5d16a1124
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210914 14:35:35.726" endtime="20210914 14:35:35.727"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:35:35.728" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210914 14:35:35.727" endtime="20210914 14:35:35.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:35:35.728" endtime="20210914 14:35:35.729"/>
</kw>
<status status="PASS" starttime="20210914 14:35:35.726" endtime="20210914 14:35:35.729"/>
</kw>
<status status="PASS" starttime="20210914 14:35:35.725" endtime="20210914 14:35:35.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:35:35.721" endtime="20210914 14:35:35.729"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:35:35.645" endtime="20210914 14:35:35.730"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:40.015" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210914 14:35:40.014" endtime="20210914 14:35:40.015"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:40.015" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:35:40.015" endtime="20210914 14:35:40.015"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:35:40.016" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:35:40.016" endtime="20210914 14:35:40.016"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:35:40.017" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210914 14:35:40.016" endtime="20210914 14:35:40.017"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:35:40.018" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:35:40.019" level="INFO">${version_file_contents} = #Tue Sep 14 14:34:29 UTC 2021
cTime=1631629719815
clusterID=1c2969ab-2149-41ce-b5ae-860184e5ece9
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210914 14:35:40.018" endtime="20210914 14:35:40.019"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:35:40.020" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210914 14:35:40.019" endtime="20210914 14:35:40.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:35:40.020" endtime="20210914 14:35:40.020"/>
</kw>
<status status="PASS" starttime="20210914 14:35:40.018" endtime="20210914 14:35:40.021"/>
</kw>
<status status="PASS" starttime="20210914 14:35:40.017" endtime="20210914 14:35:40.021"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:35:40.013" endtime="20210914 14:35:40.021"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:35:39.932" endtime="20210914 14:35:40.022"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:44.016" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210914 14:35:44.015" endtime="20210914 14:35:44.016"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:44.016" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:35:44.016" endtime="20210914 14:35:44.017"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:35:44.017" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:35:44.017" endtime="20210914 14:35:44.017"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:35:44.018" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210914 14:35:44.017" endtime="20210914 14:35:44.018"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:35:44.020" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:35:44.020" level="INFO">${version_file_contents} = #Tue Sep 14 14:34:39 UTC 2021
cTime=1631629721481
clusterID=4f7c8974-8e97-4bd6-b10d-1f789dd99e2d
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210914 14:35:44.019" endtime="20210914 14:35:44.020"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:35:44.021" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210914 14:35:44.020" endtime="20210914 14:35:44.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:35:44.021" endtime="20210914 14:35:44.022"/>
</kw>
<status status="PASS" starttime="20210914 14:35:44.018" endtime="20210914 14:35:44.022"/>
</kw>
<status status="PASS" starttime="20210914 14:35:44.018" endtime="20210914 14:35:44.022"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:35:44.014" endtime="20210914 14:35:44.022"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:35:43.948" endtime="20210914 14:35:44.023"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:48.012" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210914 14:35:48.011" endtime="20210914 14:35:48.012"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:48.013" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:35:48.012" endtime="20210914 14:35:48.013"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:35:48.014" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:35:48.013" endtime="20210914 14:35:48.014"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:35:48.015" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210914 14:35:48.014" endtime="20210914 14:35:48.015"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:35:48.016" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:35:48.017" level="INFO">${version_file_contents} = #Tue Sep 14 14:27:11 UTC 2021
cTime=1631629604343
clusterID=CID-b46bfab0-4833-4ac2-84cf-f1c44c2fcde4
omUuid=e101d259-90c6-495f-bff7-cc5658d2e34e
nodeType=OM
scmUuid=b698107b-4a7e-4f45-aa1b-c2f4da756f4...</msg>
<status status="PASS" starttime="20210914 14:35:48.016" endtime="20210914 14:35:48.017"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:35:48.017" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210914 14:35:48.017" endtime="20210914 14:35:48.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:35:48.018" endtime="20210914 14:35:48.018"/>
</kw>
<status status="PASS" starttime="20210914 14:35:48.015" endtime="20210914 14:35:48.018"/>
</kw>
<status status="PASS" starttime="20210914 14:35:48.015" endtime="20210914 14:35:48.018"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:35:48.010" endtime="20210914 14:35:48.019"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:35:47.942" endtime="20210914 14:35:48.019"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:52.212" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210914 14:35:52.211" endtime="20210914 14:35:52.212"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:52.213" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:35:52.212" endtime="20210914 14:35:52.213"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:35:52.214" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:35:52.213" endtime="20210914 14:35:52.214"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:35:52.214" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210914 14:35:52.214" endtime="20210914 14:35:52.215"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:35:52.217" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:35:52.217" level="INFO">${version_file_contents} = #Tue Sep 14 14:27:11 UTC 2021
cTime=1631629607999
clusterID=CID-b46bfab0-4833-4ac2-84cf-f1c44c2fcde4
omUuid=c4cd3e66-d4b8-47d9-8fdb-c1f42f8deb29
nodeType=OM
scmUuid=b698107b-4a7e-4f45-aa1b-c2f4da756f4...</msg>
<status status="PASS" starttime="20210914 14:35:52.216" endtime="20210914 14:35:52.217"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:35:52.220" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210914 14:35:52.219" endtime="20210914 14:35:52.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:35:52.220" endtime="20210914 14:35:52.221"/>
</kw>
<status status="PASS" starttime="20210914 14:35:52.216" endtime="20210914 14:35:52.221"/>
</kw>
<status status="PASS" starttime="20210914 14:35:52.215" endtime="20210914 14:35:52.221"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:35:52.210" endtime="20210914 14:35:52.221"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:35:52.141" endtime="20210914 14:35:52.222"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:56.052" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210914 14:35:56.051" endtime="20210914 14:35:56.052"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:35:56.053" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:35:56.053" endtime="20210914 14:35:56.054"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:35:56.055" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:35:56.054" endtime="20210914 14:35:56.055"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:35:56.055" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210914 14:35:56.055" endtime="20210914 14:35:56.055"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:35:56.057" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:35:56.058" level="INFO">${version_file_contents} = #Tue Sep 14 14:27:11 UTC 2021
cTime=1631629605499
clusterID=CID-b46bfab0-4833-4ac2-84cf-f1c44c2fcde4
omUuid=caf09892-fea0-4215-8d88-30449440ea53
nodeType=OM
scmUuid=b698107b-4a7e-4f45-aa1b-c2f4da756f4...</msg>
<status status="PASS" starttime="20210914 14:35:56.057" endtime="20210914 14:35:56.058"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:35:56.059" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210914 14:35:56.058" endtime="20210914 14:35:56.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:35:56.059" endtime="20210914 14:35:56.059"/>
</kw>
<status status="PASS" starttime="20210914 14:35:56.056" endtime="20210914 14:35:56.060"/>
</kw>
<status status="PASS" starttime="20210914 14:35:56.056" endtime="20210914 14:35:56.060"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:35:56.051" endtime="20210914 14:35:56.060"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:35:55.986" endtime="20210914 14:35:56.061"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210914 14:36:00.176" level="INFO">${random} = 24367</msg>
<status status="PASS" starttime="20210914 14:36:00.175" endtime="20210914 14:36:00.176"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:36:00.182" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-24367 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:36:05.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:36:05.690" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:00.178" endtime="20210914 14:36:05.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:36:05.691" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:05.690" endtime="20210914 14:36:05.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:36:05.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:36:05.692" endtime="20210914 14:36:05.692"/>
</kw>
<status status="PASS" starttime="20210914 14:36:00.177" endtime="20210914 14:36:05.693"/>
</kw>
<msg timestamp="20210914 14:36:05.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:36:00.177" endtime="20210914 14:36:05.693"/>
</kw>
<msg timestamp="20210914 14:36:05.693" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:00.176" endtime="20210914 14:36:05.693"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:36:05.694" endtime="20210914 14:36:05.694"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:36:00.174" endtime="20210914 14:36:05.694"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210914 14:36:00.092" endtime="20210914 14:36:05.696"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210914 14:36:09.735" level="INFO">${random} = 86629</msg>
<status status="PASS" starttime="20210914 14:36:09.734" endtime="20210914 14:36:09.735"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:36:09.743" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-86629 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:36:14.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:36:14.604" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:09.737" endtime="20210914 14:36:14.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:36:14.606" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:14.605" endtime="20210914 14:36:14.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:36:14.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:36:14.606" endtime="20210914 14:36:14.607"/>
</kw>
<status status="PASS" starttime="20210914 14:36:09.736" endtime="20210914 14:36:14.608"/>
</kw>
<msg timestamp="20210914 14:36:14.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:36:09.736" endtime="20210914 14:36:14.608"/>
</kw>
<msg timestamp="20210914 14:36:14.608" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:36:09.735" endtime="20210914 14:36:14.608"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:36:14.608" endtime="20210914 14:36:14.609"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:36:09.733" endtime="20210914 14:36:14.609"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210914 14:36:09.666" endtime="20210914 14:36:14.611"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210914 14:34:05.169" endtime="20210914 14:34:05.170"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:34:05.176" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:35:24.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:35:24.057" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210914 14:34:05.172" endtime="20210914 14:35:24.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:35:24.058" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210914 14:35:24.057" endtime="20210914 14:35:24.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:35:24.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:35:24.058" endtime="20210914 14:35:24.059"/>
</kw>
<status status="PASS" starttime="20210914 14:34:05.171" endtime="20210914 14:35:24.060"/>
</kw>
<msg timestamp="20210914 14:35:24.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:34:05.171" endtime="20210914 14:35:24.060"/>
</kw>
<msg timestamp="20210914 14:35:24.061" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210914 14:34:05.170" endtime="20210914 14:35:24.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:35:24.062" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210914 14:35:24.061" endtime="20210914 14:35:24.062"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:34:05.168" endtime="20210914 14:35:24.062"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210914 14:35:24.064" endtime="20210914 14:35:24.064"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:35:24.069" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:35:27.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:35:27.712" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210914 14:35:24.067" endtime="20210914 14:35:27.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:35:27.713" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210914 14:35:27.712" endtime="20210914 14:35:27.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:35:27.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:35:27.714" endtime="20210914 14:35:27.714"/>
</kw>
<status status="PASS" starttime="20210914 14:35:24.066" endtime="20210914 14:35:27.715"/>
</kw>
<msg timestamp="20210914 14:35:27.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:35:24.065" endtime="20210914 14:35:27.715"/>
</kw>
<msg timestamp="20210914 14:35:27.715" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210914 14:35:24.064" endtime="20210914 14:35:27.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:35:27.716" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210914 14:35:27.715" endtime="20210914 14:35:27.716"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:35:24.063" endtime="20210914 14:35:27.717"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210914 14:34:05.086" endtime="20210914 14:35:27.720"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:42.300" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210914 14:29:42.299" endtime="20210914 14:29:42.301"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:42.301" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:29:42.301" endtime="20210914 14:29:42.301"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:29:42.302" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:29:42.301" endtime="20210914 14:29:42.302"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:29:42.303" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210914 14:29:42.302" endtime="20210914 14:29:42.303"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:29:42.305" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:29:42.305" level="INFO">${version_file_contents} = #Tue Sep 14 14:28:40 UTC 2021
cTime=1631629720246
clusterID=90748259-8416-4128-899f-25a5d16a1124
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210914 14:29:42.304" endtime="20210914 14:29:42.305"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:29:42.306" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210914 14:29:42.305" endtime="20210914 14:29:42.306"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:29:42.306" endtime="20210914 14:29:42.307"/>
</kw>
<status status="PASS" starttime="20210914 14:29:42.304" endtime="20210914 14:29:42.307"/>
</kw>
<status status="PASS" starttime="20210914 14:29:42.303" endtime="20210914 14:29:42.307"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:29:42.299" endtime="20210914 14:29:42.308"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:29:42.229" endtime="20210914 14:29:42.309"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:46.555" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210914 14:29:46.554" endtime="20210914 14:29:46.555"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:46.555" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:29:46.555" endtime="20210914 14:29:46.555"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:29:46.556" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:29:46.556" endtime="20210914 14:29:46.556"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:29:46.557" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210914 14:29:46.556" endtime="20210914 14:29:46.557"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:29:46.558" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:29:46.559" level="INFO">${version_file_contents} = #Tue Sep 14 14:28:39 UTC 2021
cTime=1631629719815
clusterID=1c2969ab-2149-41ce-b5ae-860184e5ece9
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210914 14:29:46.558" endtime="20210914 14:29:46.559"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:29:46.560" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210914 14:29:46.559" endtime="20210914 14:29:46.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:29:46.560" endtime="20210914 14:29:46.560"/>
</kw>
<status status="PASS" starttime="20210914 14:29:46.557" endtime="20210914 14:29:46.561"/>
</kw>
<status status="PASS" starttime="20210914 14:29:46.557" endtime="20210914 14:29:46.561"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:29:46.553" endtime="20210914 14:29:46.561"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:29:46.478" endtime="20210914 14:29:46.562"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:50.359" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210914 14:29:50.358" endtime="20210914 14:29:50.359"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:50.359" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:29:50.359" endtime="20210914 14:29:50.359"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:29:50.360" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:29:50.359" endtime="20210914 14:29:50.360"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:29:50.360" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210914 14:29:50.360" endtime="20210914 14:29:50.361"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:29:50.362" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:29:50.362" level="INFO">${version_file_contents} = #Tue Sep 14 14:28:41 UTC 2021
cTime=1631629721481
clusterID=4f7c8974-8e97-4bd6-b10d-1f789dd99e2d
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210914 14:29:50.361" endtime="20210914 14:29:50.362"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:29:50.363" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210914 14:29:50.362" endtime="20210914 14:29:50.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:29:50.363" endtime="20210914 14:29:50.363"/>
</kw>
<status status="PASS" starttime="20210914 14:29:50.361" endtime="20210914 14:29:50.364"/>
</kw>
<status status="PASS" starttime="20210914 14:29:50.361" endtime="20210914 14:29:50.364"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:29:50.357" endtime="20210914 14:29:50.364"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:29:50.297" endtime="20210914 14:29:50.365"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:54.440" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210914 14:29:54.439" endtime="20210914 14:29:54.440"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:54.440" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:29:54.440" endtime="20210914 14:29:54.441"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:29:54.441" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:29:54.441" endtime="20210914 14:29:54.441"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:29:54.442" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210914 14:29:54.441" endtime="20210914 14:29:54.442"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:29:54.443" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:29:54.444" level="INFO">${version_file_contents} = #Tue Sep 14 14:27:11 UTC 2021
cTime=1631629604343
clusterID=CID-b46bfab0-4833-4ac2-84cf-f1c44c2fcde4
omUuid=e101d259-90c6-495f-bff7-cc5658d2e34e
nodeType=OM
scmUuid=b698107b-4a7e-4f45-aa1b-c2f4da756f4...</msg>
<status status="PASS" starttime="20210914 14:29:54.443" endtime="20210914 14:29:54.444"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:29:54.445" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210914 14:29:54.444" endtime="20210914 14:29:54.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:29:54.445" endtime="20210914 14:29:54.445"/>
</kw>
<status status="PASS" starttime="20210914 14:29:54.443" endtime="20210914 14:29:54.445"/>
</kw>
<status status="PASS" starttime="20210914 14:29:54.442" endtime="20210914 14:29:54.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:29:54.438" endtime="20210914 14:29:54.446"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:29:54.370" endtime="20210914 14:29:54.446"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:58.581" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210914 14:29:58.580" endtime="20210914 14:29:58.581"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:58.581" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:29:58.581" endtime="20210914 14:29:58.582"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:29:58.582" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:29:58.582" endtime="20210914 14:29:58.582"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:29:58.583" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210914 14:29:58.582" endtime="20210914 14:29:58.583"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:29:58.584" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:29:58.585" level="INFO">${version_file_contents} = #Tue Sep 14 14:27:11 UTC 2021
cTime=1631629607999
clusterID=CID-b46bfab0-4833-4ac2-84cf-f1c44c2fcde4
omUuid=c4cd3e66-d4b8-47d9-8fdb-c1f42f8deb29
nodeType=OM
scmUuid=b698107b-4a7e-4f45-aa1b-c2f4da756f4...</msg>
<status status="PASS" starttime="20210914 14:29:58.584" endtime="20210914 14:29:58.585"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:29:58.585" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210914 14:29:58.585" endtime="20210914 14:29:58.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:29:58.585" endtime="20210914 14:29:58.586"/>
</kw>
<status status="PASS" starttime="20210914 14:29:58.584" endtime="20210914 14:29:58.586"/>
</kw>
<status status="PASS" starttime="20210914 14:29:58.583" endtime="20210914 14:29:58.586"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:29:58.579" endtime="20210914 14:29:58.586"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:29:58.518" endtime="20210914 14:29:58.588"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:30:02.569" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210914 14:30:02.568" endtime="20210914 14:30:02.569"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:30:02.570" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:30:02.569" endtime="20210914 14:30:02.570"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:30:02.570" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:30:02.570" endtime="20210914 14:30:02.571"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:30:02.571" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210914 14:30:02.571" endtime="20210914 14:30:02.571"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:30:02.573" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:30:02.574" level="INFO">${version_file_contents} = #Tue Sep 14 14:27:11 UTC 2021
cTime=1631629605499
clusterID=CID-b46bfab0-4833-4ac2-84cf-f1c44c2fcde4
omUuid=caf09892-fea0-4215-8d88-30449440ea53
nodeType=OM
scmUuid=b698107b-4a7e-4f45-aa1b-c2f4da756f4...</msg>
<status status="PASS" starttime="20210914 14:30:02.573" endtime="20210914 14:30:02.574"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:30:02.574" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210914 14:30:02.574" endtime="20210914 14:30:02.574"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:30:02.574" endtime="20210914 14:30:02.575"/>
</kw>
<status status="PASS" starttime="20210914 14:30:02.572" endtime="20210914 14:30:02.575"/>
</kw>
<status status="PASS" starttime="20210914 14:30:02.571" endtime="20210914 14:30:02.575"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:30:02.567" endtime="20210914 14:30:02.576"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:30:02.498" endtime="20210914 14:30:02.576"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210914 14:30:07.139" level="INFO">${random} = 67762</msg>
<status status="PASS" starttime="20210914 14:30:07.139" endtime="20210914 14:30:07.139"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:30:07.146" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-67762 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:30:12.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:30:12.218" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:07.142" endtime="20210914 14:30:12.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:30:12.219" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:12.218" endtime="20210914 14:30:12.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:30:12.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:30:12.219" endtime="20210914 14:30:12.220"/>
</kw>
<status status="PASS" starttime="20210914 14:30:07.141" endtime="20210914 14:30:12.220"/>
</kw>
<msg timestamp="20210914 14:30:12.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:30:07.141" endtime="20210914 14:30:12.221"/>
</kw>
<msg timestamp="20210914 14:30:12.221" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:07.139" endtime="20210914 14:30:12.221"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:30:12.221" endtime="20210914 14:30:12.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:30:07.138" endtime="20210914 14:30:12.222"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210914 14:30:07.067" endtime="20210914 14:30:12.224"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:30:16.306" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:30:19.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:30:19.538" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:16.302" endtime="20210914 14:30:19.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:30:19.539" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:19.538" endtime="20210914 14:30:19.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:30:19.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:30:19.540" endtime="20210914 14:30:19.540"/>
</kw>
<status status="PASS" starttime="20210914 14:30:16.301" endtime="20210914 14:30:19.541"/>
</kw>
<msg timestamp="20210914 14:30:19.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:30:16.301" endtime="20210914 14:30:19.541"/>
</kw>
<msg timestamp="20210914 14:30:19.541" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:16.300" endtime="20210914 14:30:19.541"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:30:19.542" endtime="20210914 14:30:19.542"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:30:19.561" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:30:22.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:30:22.534" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:19.550" endtime="20210914 14:30:22.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:30:22.536" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:22.535" endtime="20210914 14:30:22.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:30:22.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:30:22.536" endtime="20210914 14:30:22.537"/>
</kw>
<status status="PASS" starttime="20210914 14:30:19.546" endtime="20210914 14:30:22.537"/>
</kw>
<msg timestamp="20210914 14:30:22.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:30:19.545" endtime="20210914 14:30:22.538"/>
</kw>
<msg timestamp="20210914 14:30:22.538" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:19.542" endtime="20210914 14:30:22.538"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:30:22.538" endtime="20210914 14:30:22.539"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:30:22.543" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:30:27.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:30:27.885" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:22.541" endtime="20210914 14:30:27.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:30:27.886" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:27.885" endtime="20210914 14:30:27.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:30:27.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:30:27.887" endtime="20210914 14:30:27.887"/>
</kw>
<status status="PASS" starttime="20210914 14:30:22.540" endtime="20210914 14:30:27.888"/>
</kw>
<msg timestamp="20210914 14:30:27.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:30:22.540" endtime="20210914 14:30:27.888"/>
</kw>
<msg timestamp="20210914 14:30:27.889" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:22.539" endtime="20210914 14:30:27.889"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:30:27.889" endtime="20210914 14:30:27.890"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:30:16.297" endtime="20210914 14:30:27.890"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210914 14:30:16.230" endtime="20210914 14:30:27.891"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210914 14:30:32.163" level="INFO">${random} = 41493</msg>
<status status="PASS" starttime="20210914 14:30:32.162" endtime="20210914 14:30:32.163"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210914 14:30:32.169" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-41493 2&gt;&amp;1'.</msg>
<msg timestamp="20210914 14:30:36.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210914 14:30:36.766" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:32.165" endtime="20210914 14:30:36.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210914 14:30:36.767" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:36.766" endtime="20210914 14:30:36.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210914 14:30:36.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210914 14:30:36.767" endtime="20210914 14:30:36.768"/>
</kw>
<status status="PASS" starttime="20210914 14:30:32.165" endtime="20210914 14:30:36.769"/>
</kw>
<msg timestamp="20210914 14:30:36.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210914 14:30:32.164" endtime="20210914 14:30:36.769"/>
</kw>
<msg timestamp="20210914 14:30:36.769" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210914 14:30:32.163" endtime="20210914 14:30:36.769"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:30:36.769" endtime="20210914 14:30:36.770"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:30:32.161" endtime="20210914 14:30:36.770"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210914 14:30:32.092" endtime="20210914 14:30:36.772"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:38.291" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210914 14:29:38.290" endtime="20210914 14:29:38.291"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210914 14:29:38.292" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210914 14:29:38.292" endtime="20210914 14:29:38.292"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210914 14:29:38.293" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210914 14:29:38.292" endtime="20210914 14:29:38.293"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210914 14:29:38.294" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210914 14:29:38.293" endtime="20210914 14:29:38.294"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210914 14:29:38.295" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210914 14:29:38.296" level="INFO">${version_file_contents} = #Tue Sep 14 14:26:42 UTC 2021
cTime=1631629602328
clusterID=CID-b46bfab0-4833-4ac2-84cf-f1c44c2fcde4
nodeType=SCM
scmUuid=b698107b-4a7e-4f45-aa1b-c2f4da756f4f
layoutVersion=0
</msg>
<status status="PASS" starttime="20210914 14:29:38.295" endtime="20210914 14:29:38.296"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210914 14:29:38.296" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210914 14:29:38.296" endtime="20210914 14:29:38.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210914 14:29:38.297" endtime="20210914 14:29:38.297"/>
</kw>
<status status="PASS" starttime="20210914 14:29:38.294" endtime="20210914 14:29:38.297"/>
</kw>
<status status="PASS" starttime="20210914 14:29:38.294" endtime="20210914 14:29:38.297"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210914 14:29:38.289" endtime="20210914 14:29:38.297"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210914 14:29:38.219" endtime="20210914 14:29:38.298"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="178260"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
