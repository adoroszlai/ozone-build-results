<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20210913 14:28:00.600" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210913 14:19:51.652" level="INFO">${random} = 35340</msg>
<status status="PASS" starttime="20210913 14:19:51.651" endtime="20210913 14:19:51.652"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:19:51.657" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-35340 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:19:55.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:19:55.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:19:51.654" endtime="20210913 14:19:55.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:19:55.248" level="INFO"/>
<status status="PASS" starttime="20210913 14:19:55.248" endtime="20210913 14:19:55.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:19:55.249" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:19:55.249" endtime="20210913 14:19:55.249"/>
</kw>
<status status="PASS" starttime="20210913 14:19:51.653" endtime="20210913 14:19:55.249"/>
</kw>
<msg timestamp="20210913 14:19:55.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:19:51.653" endtime="20210913 14:19:55.250"/>
</kw>
<msg timestamp="20210913 14:19:55.250" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:19:51.652" endtime="20210913 14:19:55.250"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:19:55.250" endtime="20210913 14:19:55.250"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:19:51.650" endtime="20210913 14:19:55.251"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210913 14:19:51.603" endtime="20210913 14:19:55.252"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210913 14:23:32.022" level="INFO">${random} = 86610</msg>
<status status="PASS" starttime="20210913 14:23:32.022" endtime="20210913 14:23:32.022"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:23:32.027" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-86610 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:23:35.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:23:35.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:32.024" endtime="20210913 14:23:35.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:23:35.749" level="INFO"/>
<status status="PASS" starttime="20210913 14:23:35.748" endtime="20210913 14:23:35.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:23:35.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:23:35.749" endtime="20210913 14:23:35.750"/>
</kw>
<status status="PASS" starttime="20210913 14:23:32.024" endtime="20210913 14:23:35.750"/>
</kw>
<msg timestamp="20210913 14:23:35.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:23:32.023" endtime="20210913 14:23:35.750"/>
</kw>
<msg timestamp="20210913 14:23:35.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:32.022" endtime="20210913 14:23:35.750"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:23:35.750" endtime="20210913 14:23:35.751"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:23:32.021" endtime="20210913 14:23:35.751"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210913 14:23:31.973" endtime="20210913 14:23:35.752"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:23:39.212" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:23:41.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:23:41.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:39.209" endtime="20210913 14:23:41.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:23:41.304" level="INFO"/>
<status status="PASS" starttime="20210913 14:23:41.303" endtime="20210913 14:23:41.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:23:41.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:23:41.305" endtime="20210913 14:23:41.305"/>
</kw>
<status status="PASS" starttime="20210913 14:23:39.208" endtime="20210913 14:23:41.305"/>
</kw>
<msg timestamp="20210913 14:23:41.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:23:39.208" endtime="20210913 14:23:41.306"/>
</kw>
<msg timestamp="20210913 14:23:41.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:39.207" endtime="20210913 14:23:41.306"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:23:41.306" endtime="20210913 14:23:41.307"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:23:41.314" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:23:43.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:23:43.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:41.308" endtime="20210913 14:23:43.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:23:43.475" level="INFO"/>
<status status="PASS" starttime="20210913 14:23:43.474" endtime="20210913 14:23:43.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:23:43.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:23:43.475" endtime="20210913 14:23:43.475"/>
</kw>
<status status="PASS" starttime="20210913 14:23:41.308" endtime="20210913 14:23:43.476"/>
</kw>
<msg timestamp="20210913 14:23:43.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:23:41.307" endtime="20210913 14:23:43.476"/>
</kw>
<msg timestamp="20210913 14:23:43.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:41.307" endtime="20210913 14:23:43.476"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:23:43.476" endtime="20210913 14:23:43.477"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:23:43.480" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:23:48.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:23:48.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:43.478" endtime="20210913 14:23:48.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:23:48.118" level="INFO"/>
<status status="PASS" starttime="20210913 14:23:48.118" endtime="20210913 14:23:48.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:23:48.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:23:48.119" endtime="20210913 14:23:48.119"/>
</kw>
<status status="PASS" starttime="20210913 14:23:43.478" endtime="20210913 14:23:48.119"/>
</kw>
<msg timestamp="20210913 14:23:48.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:23:43.477" endtime="20210913 14:23:48.120"/>
</kw>
<msg timestamp="20210913 14:23:48.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:43.477" endtime="20210913 14:23:48.120"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:23:48.120" endtime="20210913 14:23:48.120"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:23:39.206" endtime="20210913 14:23:48.121"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210913 14:23:39.161" endtime="20210913 14:23:48.122"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210913 14:23:51.587" level="INFO">${random} = 28690</msg>
<status status="PASS" starttime="20210913 14:23:51.587" endtime="20210913 14:23:51.587"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:23:51.592" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-28690 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:23:55.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:23:55.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:51.589" endtime="20210913 14:23:55.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:23:55.280" level="INFO"/>
<status status="PASS" starttime="20210913 14:23:55.279" endtime="20210913 14:23:55.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:23:55.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:23:55.280" endtime="20210913 14:23:55.281"/>
</kw>
<status status="PASS" starttime="20210913 14:23:51.588" endtime="20210913 14:23:55.281"/>
</kw>
<msg timestamp="20210913 14:23:55.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:23:51.588" endtime="20210913 14:23:55.281"/>
</kw>
<msg timestamp="20210913 14:23:55.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:51.587" endtime="20210913 14:23:55.281"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:23:55.281" endtime="20210913 14:23:55.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:23:51.586" endtime="20210913 14:23:55.282"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210913 14:23:51.539" endtime="20210913 14:23:55.283"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210913 14:23:24.802" level="INFO">${random} = 85400</msg>
<status status="PASS" starttime="20210913 14:23:24.802" endtime="20210913 14:23:24.802"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:23:24.807" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-85400 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:23:28.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:23:28.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:24.804" endtime="20210913 14:23:28.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:23:28.469" level="INFO"/>
<status status="PASS" starttime="20210913 14:23:28.469" endtime="20210913 14:23:28.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:23:28.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:23:28.469" endtime="20210913 14:23:28.470"/>
</kw>
<status status="PASS" starttime="20210913 14:23:24.803" endtime="20210913 14:23:28.470"/>
</kw>
<msg timestamp="20210913 14:23:28.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:23:24.803" endtime="20210913 14:23:28.470"/>
</kw>
<msg timestamp="20210913 14:23:28.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:23:24.802" endtime="20210913 14:23:28.471"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:23:28.471" endtime="20210913 14:23:28.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:23:24.801" endtime="20210913 14:23:28.471"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210913 14:23:24.748" endtime="20210913 14:23:28.473"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:19:38.015" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:19:40.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:19:40.222" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:19:38.011" endtime="20210913 14:19:40.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:19:40.223" level="INFO"/>
<status status="PASS" starttime="20210913 14:19:40.222" endtime="20210913 14:19:40.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:19:40.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:19:40.224" endtime="20210913 14:19:40.224"/>
</kw>
<status status="PASS" starttime="20210913 14:19:38.011" endtime="20210913 14:19:40.225"/>
</kw>
<msg timestamp="20210913 14:19:40.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:19:38.011" endtime="20210913 14:19:40.225"/>
</kw>
<msg timestamp="20210913 14:19:40.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:19:38.010" endtime="20210913 14:19:40.225"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:19:40.225" endtime="20210913 14:19:40.226"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:19:40.233" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:19:42.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:19:42.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:19:40.227" endtime="20210913 14:19:42.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:19:42.703" level="INFO"/>
<status status="PASS" starttime="20210913 14:19:42.702" endtime="20210913 14:19:42.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:19:42.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:19:42.703" endtime="20210913 14:19:42.704"/>
</kw>
<status status="PASS" starttime="20210913 14:19:40.227" endtime="20210913 14:19:42.704"/>
</kw>
<msg timestamp="20210913 14:19:42.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:19:40.226" endtime="20210913 14:19:42.704"/>
</kw>
<msg timestamp="20210913 14:19:42.705" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:19:40.226" endtime="20210913 14:19:42.705"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:19:42.705" endtime="20210913 14:19:42.705"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:19:42.715" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:19:48.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:19:48.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:19:42.707" endtime="20210913 14:19:48.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:19:48.187" level="INFO"/>
<status status="PASS" starttime="20210913 14:19:48.187" endtime="20210913 14:19:48.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:19:48.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:19:48.188" endtime="20210913 14:19:48.188"/>
</kw>
<status status="PASS" starttime="20210913 14:19:42.706" endtime="20210913 14:19:48.188"/>
</kw>
<msg timestamp="20210913 14:19:48.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:19:42.706" endtime="20210913 14:19:48.189"/>
</kw>
<msg timestamp="20210913 14:19:48.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210913 14:19:42.705" endtime="20210913 14:19:48.189"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:19:48.189" endtime="20210913 14:19:48.190"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:19:38.009" endtime="20210913 14:19:48.190"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210913 14:19:37.961" endtime="20210913 14:19:48.191"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:26:43.032" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210913 14:26:43.031" endtime="20210913 14:26:43.032"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:26:43.032" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:26:43.032" endtime="20210913 14:26:43.033"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:26:43.033" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:26:43.033" endtime="20210913 14:26:43.033"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:26:43.034" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210913 14:26:43.033" endtime="20210913 14:26:43.034"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:26:43.035" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:26:43.035" level="INFO">${version_file_contents} = #Mon Sep 13 14:25:21 UTC 2021
cTime=1631542714441
clusterID=CID-2dd2e3d3-fbff-4248-9eb7-3f53e6b79a7e
nodeType=SCM
scmUuid=21981e4d-7607-4e3e-9510-8739722d67f9
layoutVersion=2
</msg>
<status status="PASS" starttime="20210913 14:26:43.035" endtime="20210913 14:26:43.035"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:26:43.036" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210913 14:26:43.035" endtime="20210913 14:26:43.036"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:26:43.036" endtime="20210913 14:26:43.036"/>
</kw>
<status status="PASS" starttime="20210913 14:26:43.034" endtime="20210913 14:26:43.036"/>
</kw>
<status status="PASS" starttime="20210913 14:26:43.034" endtime="20210913 14:26:43.036"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:26:43.030" endtime="20210913 14:26:43.037"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:26:42.976" endtime="20210913 14:26:43.037"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210913 14:27:22.222" level="INFO">${random} = 26577</msg>
<status status="PASS" starttime="20210913 14:27:22.221" endtime="20210913 14:27:22.222"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:27:22.227" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-26577 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:27:26.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:27:26.236" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:22.224" endtime="20210913 14:27:26.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:27:26.238" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:26.237" endtime="20210913 14:27:26.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:27:26.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:27:26.238" endtime="20210913 14:27:26.238"/>
</kw>
<status status="PASS" starttime="20210913 14:27:22.223" endtime="20210913 14:27:26.239"/>
</kw>
<msg timestamp="20210913 14:27:26.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:27:22.223" endtime="20210913 14:27:26.239"/>
</kw>
<msg timestamp="20210913 14:27:26.239" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:22.222" endtime="20210913 14:27:26.239"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:27:26.239" endtime="20210913 14:27:26.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:27:22.221" endtime="20210913 14:27:26.240"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210913 14:27:22.174" endtime="20210913 14:27:26.241"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:27:29.692" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:27:32.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:27:32.050" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:29.689" endtime="20210913 14:27:32.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:27:32.051" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:32.050" endtime="20210913 14:27:32.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:27:32.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:27:32.051" endtime="20210913 14:27:32.052"/>
</kw>
<status status="PASS" starttime="20210913 14:27:29.688" endtime="20210913 14:27:32.052"/>
</kw>
<msg timestamp="20210913 14:27:32.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:27:29.688" endtime="20210913 14:27:32.052"/>
</kw>
<msg timestamp="20210913 14:27:32.053" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:29.687" endtime="20210913 14:27:32.053"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:27:32.053" endtime="20210913 14:27:32.053"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:27:32.066" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:27:34.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:27:34.503" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:32.055" endtime="20210913 14:27:34.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:27:34.504" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:34.503" endtime="20210913 14:27:34.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:27:34.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:27:34.504" endtime="20210913 14:27:34.505"/>
</kw>
<status status="PASS" starttime="20210913 14:27:32.054" endtime="20210913 14:27:34.505"/>
</kw>
<msg timestamp="20210913 14:27:34.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:27:32.054" endtime="20210913 14:27:34.506"/>
</kw>
<msg timestamp="20210913 14:27:34.506" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:32.053" endtime="20210913 14:27:34.506"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:27:34.506" endtime="20210913 14:27:34.507"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:27:34.510" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:27:39.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:27:39.310" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:34.508" endtime="20210913 14:27:39.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:27:39.312" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:39.311" endtime="20210913 14:27:39.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:27:39.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:27:39.312" endtime="20210913 14:27:39.312"/>
</kw>
<status status="PASS" starttime="20210913 14:27:34.508" endtime="20210913 14:27:39.313"/>
</kw>
<msg timestamp="20210913 14:27:39.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:27:34.508" endtime="20210913 14:27:39.313"/>
</kw>
<msg timestamp="20210913 14:27:39.313" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:34.507" endtime="20210913 14:27:39.313"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:27:39.313" endtime="20210913 14:27:39.314"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:27:29.686" endtime="20210913 14:27:39.314"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210913 14:27:29.639" endtime="20210913 14:27:39.315"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210913 14:27:42.774" level="INFO">${random} = 34042</msg>
<status status="PASS" starttime="20210913 14:27:42.774" endtime="20210913 14:27:42.774"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:27:42.780" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-34042 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:27:47.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:27:47.034" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:42.776" endtime="20210913 14:27:47.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:27:47.035" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:47.035" endtime="20210913 14:27:47.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:27:47.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:27:47.036" endtime="20210913 14:27:47.036"/>
</kw>
<status status="PASS" starttime="20210913 14:27:42.776" endtime="20210913 14:27:47.036"/>
</kw>
<msg timestamp="20210913 14:27:47.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:27:42.775" endtime="20210913 14:27:47.037"/>
</kw>
<msg timestamp="20210913 14:27:47.037" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:42.774" endtime="20210913 14:27:47.037"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:27:47.037" endtime="20210913 14:27:47.037"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:27:42.773" endtime="20210913 14:27:47.038"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210913 14:27:42.726" endtime="20210913 14:27:47.039"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:26:46.496" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210913 14:26:46.495" endtime="20210913 14:26:46.496"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:26:46.496" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:26:46.496" endtime="20210913 14:26:46.497"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:26:46.497" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:26:46.497" endtime="20210913 14:26:46.497"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:26:46.498" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210913 14:26:46.497" endtime="20210913 14:26:46.498"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:26:46.499" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:26:46.499" level="INFO">${version_file_contents} = #Mon Sep 13 14:25:21 UTC 2021
cTime=1631542818088
clusterID=177aea2d-8a30-4843-91d6-cb76e48f31c7
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210913 14:26:46.498" endtime="20210913 14:26:46.499"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:26:46.500" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210913 14:26:46.499" endtime="20210913 14:26:46.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:26:46.500" endtime="20210913 14:26:46.500"/>
</kw>
<status status="PASS" starttime="20210913 14:26:46.498" endtime="20210913 14:26:46.500"/>
</kw>
<status status="PASS" starttime="20210913 14:26:46.498" endtime="20210913 14:26:46.501"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:26:46.495" endtime="20210913 14:26:46.501"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:26:46.446" endtime="20210913 14:26:46.501"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:26:49.917" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210913 14:26:49.916" endtime="20210913 14:26:49.917"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:26:49.918" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:26:49.917" endtime="20210913 14:26:49.918"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:26:49.918" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:26:49.918" endtime="20210913 14:26:49.918"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:26:49.919" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210913 14:26:49.918" endtime="20210913 14:26:49.919"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:26:49.920" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:26:49.920" level="INFO">${version_file_contents} = #Mon Sep 13 14:25:34 UTC 2021
cTime=1631542817437
clusterID=a47c5f92-3265-458f-9145-5f1067014a77
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210913 14:26:49.920" endtime="20210913 14:26:49.920"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:26:49.921" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210913 14:26:49.920" endtime="20210913 14:26:49.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:26:49.921" endtime="20210913 14:26:49.921"/>
</kw>
<status status="PASS" starttime="20210913 14:26:49.919" endtime="20210913 14:26:49.921"/>
</kw>
<status status="PASS" starttime="20210913 14:26:49.919" endtime="20210913 14:26:49.921"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:26:49.916" endtime="20210913 14:26:49.922"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:26:49.869" endtime="20210913 14:26:49.922"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:26:53.369" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210913 14:26:53.368" endtime="20210913 14:26:53.369"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:26:53.370" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:26:53.369" endtime="20210913 14:26:53.370"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:26:53.370" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:26:53.370" endtime="20210913 14:26:53.371"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:26:53.371" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210913 14:26:53.371" endtime="20210913 14:26:53.371"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:26:53.373" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:26:53.373" level="INFO">${version_file_contents} = #Mon Sep 13 14:25:44 UTC 2021
cTime=1631542818710
clusterID=f605c277-3f4e-4fa9-88e5-23f559778384
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210913 14:26:53.372" endtime="20210913 14:26:53.373"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:26:53.374" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210913 14:26:53.373" endtime="20210913 14:26:53.374"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:26:53.374" endtime="20210913 14:26:53.374"/>
</kw>
<status status="PASS" starttime="20210913 14:26:53.372" endtime="20210913 14:26:53.374"/>
</kw>
<status status="PASS" starttime="20210913 14:26:53.371" endtime="20210913 14:26:53.375"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:26:53.368" endtime="20210913 14:26:53.375"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:26:53.320" endtime="20210913 14:26:53.376"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:26:56.798" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210913 14:26:56.798" endtime="20210913 14:26:56.798"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:26:56.799" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:26:56.799" endtime="20210913 14:26:56.799"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:26:56.799" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:26:56.799" endtime="20210913 14:26:56.799"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:26:56.800" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210913 14:26:56.800" endtime="20210913 14:26:56.800"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:26:56.801" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:26:56.801" level="INFO">${version_file_contents} = #Mon Sep 13 14:19:07 UTC 2021
cTime=1631542729543
clusterID=CID-2dd2e3d3-fbff-4248-9eb7-3f53e6b79a7e
omUuid=f65b23e1-b000-401b-baa9-bd075040aed5
nodeType=OM
scmUuid=21981e4d-7607-4e3e-9510-8739722d67f...</msg>
<status status="PASS" starttime="20210913 14:26:56.801" endtime="20210913 14:26:56.801"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:26:56.802" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210913 14:26:56.801" endtime="20210913 14:26:56.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:26:56.802" endtime="20210913 14:26:56.802"/>
</kw>
<status status="PASS" starttime="20210913 14:26:56.800" endtime="20210913 14:26:56.803"/>
</kw>
<status status="PASS" starttime="20210913 14:26:56.800" endtime="20210913 14:26:56.803"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:26:56.797" endtime="20210913 14:26:56.803"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:26:56.751" endtime="20210913 14:26:56.803"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:27:00.242" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210913 14:27:00.241" endtime="20210913 14:27:00.242"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:27:00.242" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:27:00.242" endtime="20210913 14:27:00.242"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:27:00.243" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:27:00.243" endtime="20210913 14:27:00.243"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:27:00.243" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210913 14:27:00.243" endtime="20210913 14:27:00.243"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:27:00.245" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:27:00.245" level="INFO">${version_file_contents} = #Mon Sep 13 14:19:08 UTC 2021
cTime=1631542731755
clusterID=CID-2dd2e3d3-fbff-4248-9eb7-3f53e6b79a7e
omUuid=c386f95f-463e-41c1-8b7a-46d5f1de41bd
nodeType=OM
scmUuid=21981e4d-7607-4e3e-9510-8739722d67f...</msg>
<status status="PASS" starttime="20210913 14:27:00.244" endtime="20210913 14:27:00.245"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:27:00.245" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210913 14:27:00.245" endtime="20210913 14:27:00.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:27:00.246" endtime="20210913 14:27:00.246"/>
</kw>
<status status="PASS" starttime="20210913 14:27:00.244" endtime="20210913 14:27:00.246"/>
</kw>
<status status="PASS" starttime="20210913 14:27:00.244" endtime="20210913 14:27:00.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:27:00.240" endtime="20210913 14:27:00.246"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:27:00.193" endtime="20210913 14:27:00.247"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:27:03.650" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210913 14:27:03.649" endtime="20210913 14:27:03.650"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:27:03.650" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:27:03.650" endtime="20210913 14:27:03.650"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:27:03.651" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:27:03.650" endtime="20210913 14:27:03.651"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:27:03.651" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210913 14:27:03.651" endtime="20210913 14:27:03.651"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:27:03.653" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:27:03.653" level="INFO">${version_file_contents} = #Mon Sep 13 14:19:07 UTC 2021
cTime=1631542731279
clusterID=CID-2dd2e3d3-fbff-4248-9eb7-3f53e6b79a7e
omUuid=ac341272-800c-4f68-b503-335e65be64c0
nodeType=OM
scmUuid=21981e4d-7607-4e3e-9510-8739722d67f...</msg>
<status status="PASS" starttime="20210913 14:27:03.652" endtime="20210913 14:27:03.653"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:27:03.653" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210913 14:27:03.653" endtime="20210913 14:27:03.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:27:03.654" endtime="20210913 14:27:03.654"/>
</kw>
<status status="PASS" starttime="20210913 14:27:03.652" endtime="20210913 14:27:03.654"/>
</kw>
<status status="PASS" starttime="20210913 14:27:03.652" endtime="20210913 14:27:03.654"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:27:03.648" endtime="20210913 14:27:03.654"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:27:03.602" endtime="20210913 14:27:03.657"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210913 14:27:07.039" level="INFO">${random} = 41220</msg>
<status status="PASS" starttime="20210913 14:27:07.038" endtime="20210913 14:27:07.039"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:27:07.044" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-41220 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:27:11.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:27:11.475" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:07.041" endtime="20210913 14:27:11.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:27:11.476" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:11.475" endtime="20210913 14:27:11.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:27:11.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:27:11.476" endtime="20210913 14:27:11.477"/>
</kw>
<status status="PASS" starttime="20210913 14:27:07.040" endtime="20210913 14:27:11.477"/>
</kw>
<msg timestamp="20210913 14:27:11.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:27:07.040" endtime="20210913 14:27:11.477"/>
</kw>
<msg timestamp="20210913 14:27:11.478" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:07.039" endtime="20210913 14:27:11.478"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:27:11.478" endtime="20210913 14:27:11.478"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:27:07.038" endtime="20210913 14:27:11.478"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210913 14:27:06.988" endtime="20210913 14:27:11.480"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210913 14:27:14.857" level="INFO">${random} = 45014</msg>
<status status="PASS" starttime="20210913 14:27:14.857" endtime="20210913 14:27:14.858"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:27:14.863" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-45014 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:27:18.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:27:18.808" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:14.859" endtime="20210913 14:27:18.808"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:27:18.809" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:18.809" endtime="20210913 14:27:18.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:27:18.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:27:18.810" endtime="20210913 14:27:18.810"/>
</kw>
<status status="PASS" starttime="20210913 14:27:14.859" endtime="20210913 14:27:18.810"/>
</kw>
<msg timestamp="20210913 14:27:18.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:27:14.858" endtime="20210913 14:27:18.811"/>
</kw>
<msg timestamp="20210913 14:27:18.811" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:27:14.858" endtime="20210913 14:27:18.811"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:27:18.811" endtime="20210913 14:27:18.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:27:14.856" endtime="20210913 14:27:18.812"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210913 14:27:14.809" endtime="20210913 14:27:18.813"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210913 14:25:13.638" endtime="20210913 14:25:13.639"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:25:13.644" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:26:36.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:26:36.657" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210913 14:25:13.640" endtime="20210913 14:26:36.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:26:36.658" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210913 14:26:36.657" endtime="20210913 14:26:36.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:26:36.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:26:36.658" endtime="20210913 14:26:36.659"/>
</kw>
<status status="PASS" starttime="20210913 14:25:13.640" endtime="20210913 14:26:36.659"/>
</kw>
<msg timestamp="20210913 14:26:36.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:25:13.640" endtime="20210913 14:26:36.659"/>
</kw>
<msg timestamp="20210913 14:26:36.659" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210913 14:25:13.639" endtime="20210913 14:26:36.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:26:36.660" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210913 14:26:36.660" endtime="20210913 14:26:36.660"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:25:13.637" endtime="20210913 14:26:36.660"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210913 14:26:36.662" endtime="20210913 14:26:36.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:26:36.666" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:26:39.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:26:39.593" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210913 14:26:36.664" endtime="20210913 14:26:39.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:26:39.594" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210913 14:26:39.594" endtime="20210913 14:26:39.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:26:39.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:26:39.595" endtime="20210913 14:26:39.595"/>
</kw>
<status status="PASS" starttime="20210913 14:26:36.663" endtime="20210913 14:26:39.596"/>
</kw>
<msg timestamp="20210913 14:26:39.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:26:36.663" endtime="20210913 14:26:39.596"/>
</kw>
<msg timestamp="20210913 14:26:39.596" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210913 14:26:36.663" endtime="20210913 14:26:39.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:26:39.597" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210913 14:26:39.596" endtime="20210913 14:26:39.597"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:26:36.661" endtime="20210913 14:26:39.597"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210913 14:25:13.591" endtime="20210913 14:26:39.599"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:19.195" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210913 14:21:19.195" endtime="20210913 14:21:19.195"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:19.196" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:21:19.195" endtime="20210913 14:21:19.196"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:21:19.196" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:21:19.196" endtime="20210913 14:21:19.196"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:21:19.197" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210913 14:21:19.197" endtime="20210913 14:21:19.197"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:21:19.198" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:21:19.198" level="INFO">${version_file_contents} = #Mon Sep 13 14:20:18 UTC 2021
cTime=1631542818088
clusterID=177aea2d-8a30-4843-91d6-cb76e48f31c7
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210913 14:21:19.198" endtime="20210913 14:21:19.198"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:21:19.199" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210913 14:21:19.199" endtime="20210913 14:21:19.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:19.199" endtime="20210913 14:21:19.200"/>
</kw>
<status status="PASS" starttime="20210913 14:21:19.197" endtime="20210913 14:21:19.200"/>
</kw>
<status status="PASS" starttime="20210913 14:21:19.197" endtime="20210913 14:21:19.200"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:21:19.194" endtime="20210913 14:21:19.200"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:21:19.146" endtime="20210913 14:21:19.201"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:22.674" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210913 14:21:22.674" endtime="20210913 14:21:22.675"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:22.675" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:21:22.675" endtime="20210913 14:21:22.675"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:21:22.676" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:21:22.675" endtime="20210913 14:21:22.676"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:21:22.676" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210913 14:21:22.676" endtime="20210913 14:21:22.676"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:21:22.677" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:21:22.678" level="INFO">${version_file_contents} = #Mon Sep 13 14:20:17 UTC 2021
cTime=1631542817437
clusterID=a47c5f92-3265-458f-9145-5f1067014a77
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210913 14:21:22.677" endtime="20210913 14:21:22.678"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:21:22.678" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210913 14:21:22.678" endtime="20210913 14:21:22.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:22.678" endtime="20210913 14:21:22.679"/>
</kw>
<status status="PASS" starttime="20210913 14:21:22.677" endtime="20210913 14:21:22.679"/>
</kw>
<status status="PASS" starttime="20210913 14:21:22.676" endtime="20210913 14:21:22.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:21:22.673" endtime="20210913 14:21:22.680"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:21:22.625" endtime="20210913 14:21:22.681"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:26.229" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210913 14:21:26.229" endtime="20210913 14:21:26.229"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:26.230" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:21:26.230" endtime="20210913 14:21:26.230"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:21:26.230" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:21:26.230" endtime="20210913 14:21:26.230"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:21:26.231" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210913 14:21:26.231" endtime="20210913 14:21:26.231"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:21:26.232" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:21:26.232" level="INFO">${version_file_contents} = #Mon Sep 13 14:20:18 UTC 2021
cTime=1631542818710
clusterID=f605c277-3f4e-4fa9-88e5-23f559778384
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210913 14:21:26.232" endtime="20210913 14:21:26.232"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:21:26.233" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210913 14:21:26.232" endtime="20210913 14:21:26.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:26.233" endtime="20210913 14:21:26.233"/>
</kw>
<status status="PASS" starttime="20210913 14:21:26.231" endtime="20210913 14:21:26.234"/>
</kw>
<status status="PASS" starttime="20210913 14:21:26.231" endtime="20210913 14:21:26.234"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:21:26.228" endtime="20210913 14:21:26.234"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:21:26.179" endtime="20210913 14:21:26.234"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:29.679" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210913 14:21:29.678" endtime="20210913 14:21:29.679"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:29.680" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:21:29.679" endtime="20210913 14:21:29.680"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:21:29.680" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:21:29.680" endtime="20210913 14:21:29.680"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:21:29.681" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210913 14:21:29.680" endtime="20210913 14:21:29.681"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:21:29.682" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:21:29.682" level="INFO">${version_file_contents} = #Mon Sep 13 14:19:07 UTC 2021
cTime=1631542729543
clusterID=CID-2dd2e3d3-fbff-4248-9eb7-3f53e6b79a7e
omUuid=f65b23e1-b000-401b-baa9-bd075040aed5
nodeType=OM
scmUuid=21981e4d-7607-4e3e-9510-8739722d67f...</msg>
<status status="PASS" starttime="20210913 14:21:29.682" endtime="20210913 14:21:29.682"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:21:29.683" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210913 14:21:29.682" endtime="20210913 14:21:29.683"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:29.683" endtime="20210913 14:21:29.683"/>
</kw>
<status status="PASS" starttime="20210913 14:21:29.681" endtime="20210913 14:21:29.683"/>
</kw>
<status status="PASS" starttime="20210913 14:21:29.681" endtime="20210913 14:21:29.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:21:29.678" endtime="20210913 14:21:29.684"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:21:29.629" endtime="20210913 14:21:29.684"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:33.266" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210913 14:21:33.266" endtime="20210913 14:21:33.266"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:33.267" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:21:33.267" endtime="20210913 14:21:33.267"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:21:33.267" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:21:33.267" endtime="20210913 14:21:33.267"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:21:33.268" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210913 14:21:33.268" endtime="20210913 14:21:33.268"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:21:33.269" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:21:33.269" level="INFO">${version_file_contents} = #Mon Sep 13 14:19:08 UTC 2021
cTime=1631542731755
clusterID=CID-2dd2e3d3-fbff-4248-9eb7-3f53e6b79a7e
omUuid=c386f95f-463e-41c1-8b7a-46d5f1de41bd
nodeType=OM
scmUuid=21981e4d-7607-4e3e-9510-8739722d67f...</msg>
<status status="PASS" starttime="20210913 14:21:33.269" endtime="20210913 14:21:33.269"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:21:33.270" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210913 14:21:33.270" endtime="20210913 14:21:33.270"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:33.270" endtime="20210913 14:21:33.270"/>
</kw>
<status status="PASS" starttime="20210913 14:21:33.268" endtime="20210913 14:21:33.271"/>
</kw>
<status status="PASS" starttime="20210913 14:21:33.268" endtime="20210913 14:21:33.271"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:21:33.265" endtime="20210913 14:21:33.271"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:21:33.217" endtime="20210913 14:21:33.272"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:36.782" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210913 14:21:36.781" endtime="20210913 14:21:36.782"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:36.782" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:21:36.782" endtime="20210913 14:21:36.782"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:21:36.783" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:21:36.782" endtime="20210913 14:21:36.783"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:21:36.783" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210913 14:21:36.783" endtime="20210913 14:21:36.783"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:21:36.784" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:21:36.785" level="INFO">${version_file_contents} = #Mon Sep 13 14:19:07 UTC 2021
cTime=1631542731279
clusterID=CID-2dd2e3d3-fbff-4248-9eb7-3f53e6b79a7e
omUuid=ac341272-800c-4f68-b503-335e65be64c0
nodeType=OM
scmUuid=21981e4d-7607-4e3e-9510-8739722d67f...</msg>
<status status="PASS" starttime="20210913 14:21:36.784" endtime="20210913 14:21:36.785"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:21:36.785" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210913 14:21:36.785" endtime="20210913 14:21:36.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:36.785" endtime="20210913 14:21:36.786"/>
</kw>
<status status="PASS" starttime="20210913 14:21:36.784" endtime="20210913 14:21:36.786"/>
</kw>
<status status="PASS" starttime="20210913 14:21:36.783" endtime="20210913 14:21:36.786"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:21:36.780" endtime="20210913 14:21:36.786"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:21:36.733" endtime="20210913 14:21:36.787"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210913 14:21:40.255" level="INFO">${random} = 99209</msg>
<status status="PASS" starttime="20210913 14:21:40.254" endtime="20210913 14:21:40.255"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:21:40.260" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-99209 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:21:44.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:21:44.279" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:40.257" endtime="20210913 14:21:44.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:21:44.280" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:44.279" endtime="20210913 14:21:44.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:21:44.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:21:44.280" endtime="20210913 14:21:44.281"/>
</kw>
<status status="PASS" starttime="20210913 14:21:40.256" endtime="20210913 14:21:44.281"/>
</kw>
<msg timestamp="20210913 14:21:44.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:21:40.256" endtime="20210913 14:21:44.281"/>
</kw>
<msg timestamp="20210913 14:21:44.281" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:40.255" endtime="20210913 14:21:44.281"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:44.282" endtime="20210913 14:21:44.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:21:40.253" endtime="20210913 14:21:44.282"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210913 14:21:40.205" endtime="20210913 14:21:44.284"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:21:47.989" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:21:50.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:21:50.419" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:47.986" endtime="20210913 14:21:50.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:21:50.420" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:50.420" endtime="20210913 14:21:50.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:21:50.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:21:50.428" endtime="20210913 14:21:50.429"/>
</kw>
<status status="PASS" starttime="20210913 14:21:47.985" endtime="20210913 14:21:50.429"/>
</kw>
<msg timestamp="20210913 14:21:50.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:21:47.985" endtime="20210913 14:21:50.429"/>
</kw>
<msg timestamp="20210913 14:21:50.429" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:47.984" endtime="20210913 14:21:50.430"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:50.430" endtime="20210913 14:21:50.430"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:21:50.437" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:21:52.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:21:52.833" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:50.432" endtime="20210913 14:21:52.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:21:52.834" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:52.834" endtime="20210913 14:21:52.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:21:52.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:21:52.834" endtime="20210913 14:21:52.835"/>
</kw>
<status status="PASS" starttime="20210913 14:21:50.431" endtime="20210913 14:21:52.835"/>
</kw>
<msg timestamp="20210913 14:21:52.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:21:50.431" endtime="20210913 14:21:52.835"/>
</kw>
<msg timestamp="20210913 14:21:52.836" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:50.430" endtime="20210913 14:21:52.836"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:52.836" endtime="20210913 14:21:52.836"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:21:52.854" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:21:57.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:21:57.390" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:52.838" endtime="20210913 14:21:57.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:21:57.391" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:57.391" endtime="20210913 14:21:57.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:21:57.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:21:57.392" endtime="20210913 14:21:57.392"/>
</kw>
<status status="PASS" starttime="20210913 14:21:52.837" endtime="20210913 14:21:57.392"/>
</kw>
<msg timestamp="20210913 14:21:57.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:21:52.837" endtime="20210913 14:21:57.393"/>
</kw>
<msg timestamp="20210913 14:21:57.393" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:21:52.836" endtime="20210913 14:21:57.393"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:57.393" endtime="20210913 14:21:57.394"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:21:47.983" endtime="20210913 14:21:57.394"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210913 14:21:47.937" endtime="20210913 14:21:57.395"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210913 14:22:00.794" level="INFO">${random} = 43456</msg>
<status status="PASS" starttime="20210913 14:22:00.794" endtime="20210913 14:22:00.794"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210913 14:22:00.799" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-43456 2&gt;&amp;1'.</msg>
<msg timestamp="20210913 14:22:04.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210913 14:22:04.774" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:22:00.796" endtime="20210913 14:22:04.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210913 14:22:04.775" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:22:04.775" endtime="20210913 14:22:04.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210913 14:22:04.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210913 14:22:04.776" endtime="20210913 14:22:04.776"/>
</kw>
<status status="PASS" starttime="20210913 14:22:00.796" endtime="20210913 14:22:04.776"/>
</kw>
<msg timestamp="20210913 14:22:04.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210913 14:22:00.795" endtime="20210913 14:22:04.777"/>
</kw>
<msg timestamp="20210913 14:22:04.777" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210913 14:22:00.795" endtime="20210913 14:22:04.777"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:22:04.777" endtime="20210913 14:22:04.777"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:22:00.793" endtime="20210913 14:22:04.778"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210913 14:22:00.746" endtime="20210913 14:22:04.779"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:15.744" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210913 14:21:15.743" endtime="20210913 14:21:15.744"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210913 14:21:15.745" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210913 14:21:15.744" endtime="20210913 14:21:15.745"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210913 14:21:15.745" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210913 14:21:15.745" endtime="20210913 14:21:15.745"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210913 14:21:15.746" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210913 14:21:15.745" endtime="20210913 14:21:15.746"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210913 14:21:15.747" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210913 14:21:15.747" level="INFO">${version_file_contents} = #Mon Sep 13 14:18:34 UTC 2021
cTime=1631542714441
clusterID=CID-2dd2e3d3-fbff-4248-9eb7-3f53e6b79a7e
nodeType=SCM
scmUuid=21981e4d-7607-4e3e-9510-8739722d67f9
layoutVersion=0
</msg>
<status status="PASS" starttime="20210913 14:21:15.747" endtime="20210913 14:21:15.747"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210913 14:21:15.748" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210913 14:21:15.747" endtime="20210913 14:21:15.748"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210913 14:21:15.748" endtime="20210913 14:21:15.748"/>
</kw>
<status status="PASS" starttime="20210913 14:21:15.746" endtime="20210913 14:21:15.748"/>
</kw>
<status status="PASS" starttime="20210913 14:21:15.746" endtime="20210913 14:21:15.748"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210913 14:21:15.743" endtime="20210913 14:21:15.749"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210913 14:21:15.695" endtime="20210913 14:21:15.749"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="164988"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
