<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20210926 01:43:31.686" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210926 01:33:32.358" level="INFO">${random} = 67505</msg>
<status status="PASS" starttime="20210926 01:33:32.357" endtime="20210926 01:33:32.358"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:33:32.368" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-67505 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:33:38.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:33:38.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:33:32.363" endtime="20210926 01:33:38.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:33:38.006" level="INFO"/>
<status status="PASS" starttime="20210926 01:33:38.004" endtime="20210926 01:33:38.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:33:38.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:33:38.006" endtime="20210926 01:33:38.007"/>
</kw>
<status status="PASS" starttime="20210926 01:33:32.362" endtime="20210926 01:33:38.007"/>
</kw>
<msg timestamp="20210926 01:33:38.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:33:32.362" endtime="20210926 01:33:38.008"/>
</kw>
<msg timestamp="20210926 01:33:38.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:33:32.358" endtime="20210926 01:33:38.008"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:33:38.008" endtime="20210926 01:33:38.009"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:33:32.355" endtime="20210926 01:33:38.009"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210926 01:33:32.262" endtime="20210926 01:33:38.011"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210926 01:37:58.634" level="INFO">${random} = 56925</msg>
<status status="PASS" starttime="20210926 01:37:58.634" endtime="20210926 01:37:58.634"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:37:58.641" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-56925 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:38:03.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:38:03.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:37:58.637" endtime="20210926 01:38:03.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:38:03.463" level="INFO"/>
<status status="PASS" starttime="20210926 01:38:03.463" endtime="20210926 01:38:03.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:38:03.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:38:03.464" endtime="20210926 01:38:03.465"/>
</kw>
<status status="PASS" starttime="20210926 01:37:58.636" endtime="20210926 01:38:03.465"/>
</kw>
<msg timestamp="20210926 01:38:03.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:37:58.636" endtime="20210926 01:38:03.465"/>
</kw>
<msg timestamp="20210926 01:38:03.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:37:58.635" endtime="20210926 01:38:03.466"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:38:03.466" endtime="20210926 01:38:03.467"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:37:58.633" endtime="20210926 01:38:03.467"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210926 01:37:58.564" endtime="20210926 01:38:03.470"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:38:07.962" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:38:10.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:38:10.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:38:07.958" endtime="20210926 01:38:10.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:38:10.952" level="INFO"/>
<status status="PASS" starttime="20210926 01:38:10.943" endtime="20210926 01:38:10.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:38:10.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:38:10.953" endtime="20210926 01:38:10.954"/>
</kw>
<status status="PASS" starttime="20210926 01:38:07.957" endtime="20210926 01:38:10.956"/>
</kw>
<msg timestamp="20210926 01:38:10.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:38:07.957" endtime="20210926 01:38:10.956"/>
</kw>
<msg timestamp="20210926 01:38:10.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:38:07.955" endtime="20210926 01:38:10.957"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:38:10.957" endtime="20210926 01:38:10.957"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:38:10.972" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:38:14.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:38:14.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:38:10.963" endtime="20210926 01:38:14.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:38:14.033" level="INFO"/>
<status status="PASS" starttime="20210926 01:38:14.032" endtime="20210926 01:38:14.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:38:14.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:38:14.033" endtime="20210926 01:38:14.035"/>
</kw>
<status status="PASS" starttime="20210926 01:38:10.962" endtime="20210926 01:38:14.035"/>
</kw>
<msg timestamp="20210926 01:38:14.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:38:10.960" endtime="20210926 01:38:14.035"/>
</kw>
<msg timestamp="20210926 01:38:14.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:38:10.958" endtime="20210926 01:38:14.035"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:38:14.036" endtime="20210926 01:38:14.036"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:38:14.045" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:38:19.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:38:19.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:38:14.038" endtime="20210926 01:38:19.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:38:19.925" level="INFO"/>
<status status="PASS" starttime="20210926 01:38:19.924" endtime="20210926 01:38:19.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:38:19.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:38:19.926" endtime="20210926 01:38:19.926"/>
</kw>
<status status="PASS" starttime="20210926 01:38:14.037" endtime="20210926 01:38:19.927"/>
</kw>
<msg timestamp="20210926 01:38:19.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:38:14.037" endtime="20210926 01:38:19.927"/>
</kw>
<msg timestamp="20210926 01:38:19.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:38:14.036" endtime="20210926 01:38:19.928"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:38:19.928" endtime="20210926 01:38:19.928"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:38:07.953" endtime="20210926 01:38:19.928"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210926 01:38:07.874" endtime="20210926 01:38:19.930"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210926 01:38:24.439" level="INFO">${random} = 16382</msg>
<status status="PASS" starttime="20210926 01:38:24.438" endtime="20210926 01:38:24.439"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:38:24.446" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-16382 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:38:29.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:38:29.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:38:24.441" endtime="20210926 01:38:29.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:38:29.847" level="INFO"/>
<status status="PASS" starttime="20210926 01:38:29.846" endtime="20210926 01:38:29.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:38:29.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:38:29.848" endtime="20210926 01:38:29.848"/>
</kw>
<status status="PASS" starttime="20210926 01:38:24.441" endtime="20210926 01:38:29.849"/>
</kw>
<msg timestamp="20210926 01:38:29.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:38:24.440" endtime="20210926 01:38:29.849"/>
</kw>
<msg timestamp="20210926 01:38:29.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:38:24.439" endtime="20210926 01:38:29.849"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:38:29.850" endtime="20210926 01:38:29.850"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:38:24.437" endtime="20210926 01:38:29.850"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210926 01:38:24.326" endtime="20210926 01:38:29.852"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210926 01:37:49.095" level="INFO">${random} = 30739</msg>
<status status="PASS" starttime="20210926 01:37:49.094" endtime="20210926 01:37:49.095"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:37:49.102" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-30739 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:37:54.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:37:54.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:37:49.097" endtime="20210926 01:37:54.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:37:54.132" level="INFO"/>
<status status="PASS" starttime="20210926 01:37:54.131" endtime="20210926 01:37:54.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:37:54.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:37:54.132" endtime="20210926 01:37:54.133"/>
</kw>
<status status="PASS" starttime="20210926 01:37:49.097" endtime="20210926 01:37:54.133"/>
</kw>
<msg timestamp="20210926 01:37:54.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:37:49.096" endtime="20210926 01:37:54.133"/>
</kw>
<msg timestamp="20210926 01:37:54.134" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:37:49.095" endtime="20210926 01:37:54.134"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:37:54.134" endtime="20210926 01:37:54.134"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:37:49.093" endtime="20210926 01:37:54.135"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210926 01:37:49.021" endtime="20210926 01:37:54.137"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:33:14.802" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:33:17.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:33:17.664" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:33:14.797" endtime="20210926 01:33:17.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:33:17.666" level="INFO"/>
<status status="PASS" starttime="20210926 01:33:17.665" endtime="20210926 01:33:17.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:33:17.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:33:17.666" endtime="20210926 01:33:17.667"/>
</kw>
<status status="PASS" starttime="20210926 01:33:14.796" endtime="20210926 01:33:17.668"/>
</kw>
<msg timestamp="20210926 01:33:17.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:33:14.796" endtime="20210926 01:33:17.668"/>
</kw>
<msg timestamp="20210926 01:33:17.671" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:33:14.795" endtime="20210926 01:33:17.671"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:33:17.671" endtime="20210926 01:33:17.672"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:33:17.682" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:33:20.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:33:20.719" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:33:17.678" endtime="20210926 01:33:20.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:33:20.721" level="INFO"/>
<status status="PASS" starttime="20210926 01:33:20.720" endtime="20210926 01:33:20.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:33:20.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:33:20.721" endtime="20210926 01:33:20.723"/>
</kw>
<status status="PASS" starttime="20210926 01:33:17.673" endtime="20210926 01:33:20.723"/>
</kw>
<msg timestamp="20210926 01:33:20.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:33:17.673" endtime="20210926 01:33:20.723"/>
</kw>
<msg timestamp="20210926 01:33:20.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:33:17.672" endtime="20210926 01:33:20.724"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:33:20.724" endtime="20210926 01:33:20.725"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:33:20.731" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:33:27.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:33:27.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:33:20.728" endtime="20210926 01:33:27.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:33:27.858" level="INFO"/>
<status status="PASS" starttime="20210926 01:33:27.857" endtime="20210926 01:33:27.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:33:27.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:33:27.858" endtime="20210926 01:33:27.859"/>
</kw>
<status status="PASS" starttime="20210926 01:33:20.727" endtime="20210926 01:33:27.859"/>
</kw>
<msg timestamp="20210926 01:33:27.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:33:20.727" endtime="20210926 01:33:27.860"/>
</kw>
<msg timestamp="20210926 01:33:27.860" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210926 01:33:20.725" endtime="20210926 01:33:27.860"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:33:27.860" endtime="20210926 01:33:27.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:33:14.794" endtime="20210926 01:33:27.861"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210926 01:33:14.718" endtime="20210926 01:33:27.862"/>
</suite>
<suite id="s1-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:41:54.025" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210926 01:41:54.025" endtime="20210926 01:41:54.026"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:41:54.026" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:41:54.026" endtime="20210926 01:41:54.026"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:41:54.027" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:41:54.027" endtime="20210926 01:41:54.027"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:41:54.028" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210926 01:41:54.027" endtime="20210926 01:41:54.028"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:41:54.030" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:41:54.030" level="INFO">${version_file_contents} = #Sun Sep 26 01:40:14 UTC 2021
cTime=1632619915559
clusterID=CID-78673a85-58d5-4385-b19b-506d2eae39ed
nodeType=SCM
scmUuid=2113d384-db3a-4758-8482-088a8ae9980d
layoutVersion=2
</msg>
<status status="PASS" starttime="20210926 01:41:54.029" endtime="20210926 01:41:54.030"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:41:54.031" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210926 01:41:54.030" endtime="20210926 01:41:54.031"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:41:54.031" endtime="20210926 01:41:54.032"/>
</kw>
<status status="PASS" starttime="20210926 01:41:54.029" endtime="20210926 01:41:54.032"/>
</kw>
<status status="PASS" starttime="20210926 01:41:54.028" endtime="20210926 01:41:54.032"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:41:54.023" endtime="20210926 01:41:54.032"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:41:53.951" endtime="20210926 01:41:54.033"/>
</suite>
<suite id="s1-s8" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s8-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210926 01:42:45.269" level="INFO">${random} = 35023</msg>
<status status="PASS" starttime="20210926 01:42:45.269" endtime="20210926 01:42:45.269"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:42:45.289" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-35023 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:42:50.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:42:50.398" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:45.272" endtime="20210926 01:42:50.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:42:50.400" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:50.399" endtime="20210926 01:42:50.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:42:50.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:42:50.400" endtime="20210926 01:42:50.401"/>
</kw>
<status status="PASS" starttime="20210926 01:42:45.271" endtime="20210926 01:42:50.402"/>
</kw>
<msg timestamp="20210926 01:42:50.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:42:45.271" endtime="20210926 01:42:50.402"/>
</kw>
<msg timestamp="20210926 01:42:50.402" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:45.269" endtime="20210926 01:42:50.402"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:42:50.403" endtime="20210926 01:42:50.403"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:42:45.267" endtime="20210926 01:42:50.403"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210926 01:42:45.198" endtime="20210926 01:42:50.405"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:42:54.755" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:42:57.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:42:57.876" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:54.751" endtime="20210926 01:42:57.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:42:57.878" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:57.877" endtime="20210926 01:42:57.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:42:57.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:42:57.879" endtime="20210926 01:42:57.879"/>
</kw>
<status status="PASS" starttime="20210926 01:42:54.751" endtime="20210926 01:42:57.880"/>
</kw>
<msg timestamp="20210926 01:42:57.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:42:54.750" endtime="20210926 01:42:57.880"/>
</kw>
<msg timestamp="20210926 01:42:57.880" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:54.749" endtime="20210926 01:42:57.880"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:42:57.880" endtime="20210926 01:42:57.882"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:42:57.888" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:43:01.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:43:01.075" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:57.885" endtime="20210926 01:43:01.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:43:01.076" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:43:01.075" endtime="20210926 01:43:01.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:43:01.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:43:01.077" endtime="20210926 01:43:01.077"/>
</kw>
<status status="PASS" starttime="20210926 01:42:57.884" endtime="20210926 01:43:01.078"/>
</kw>
<msg timestamp="20210926 01:43:01.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:42:57.883" endtime="20210926 01:43:01.078"/>
</kw>
<msg timestamp="20210926 01:43:01.078" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:57.882" endtime="20210926 01:43:01.078"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:43:01.079" endtime="20210926 01:43:01.079"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:43:01.084" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:43:06.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:43:06.932" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:43:01.081" endtime="20210926 01:43:06.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:43:06.933" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:43:06.932" endtime="20210926 01:43:06.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:43:06.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:43:06.933" endtime="20210926 01:43:06.934"/>
</kw>
<status status="PASS" starttime="20210926 01:43:01.080" endtime="20210926 01:43:06.935"/>
</kw>
<msg timestamp="20210926 01:43:06.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:43:01.080" endtime="20210926 01:43:06.935"/>
</kw>
<msg timestamp="20210926 01:43:06.935" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:43:01.079" endtime="20210926 01:43:06.935"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:43:06.936" endtime="20210926 01:43:06.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:42:54.748" endtime="20210926 01:43:06.937"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210926 01:42:54.683" endtime="20210926 01:43:06.938"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210926 01:43:11.542" level="INFO">${random} = 34189</msg>
<status status="PASS" starttime="20210926 01:43:11.542" endtime="20210926 01:43:11.542"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:43:11.550" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-34189 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:43:16.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:43:16.630" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:43:11.545" endtime="20210926 01:43:16.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:43:16.632" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:43:16.631" endtime="20210926 01:43:16.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:43:16.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:43:16.632" endtime="20210926 01:43:16.633"/>
</kw>
<status status="PASS" starttime="20210926 01:43:11.544" endtime="20210926 01:43:16.633"/>
</kw>
<msg timestamp="20210926 01:43:16.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:43:11.544" endtime="20210926 01:43:16.634"/>
</kw>
<msg timestamp="20210926 01:43:16.634" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:43:11.543" endtime="20210926 01:43:16.634"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:43:16.635" endtime="20210926 01:43:16.635"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:43:11.540" endtime="20210926 01:43:16.636"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210926 01:43:11.461" endtime="20210926 01:43:16.637"/>
</suite>
<suite id="s1-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:41:58.452" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210926 01:41:58.451" endtime="20210926 01:41:58.452"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:41:58.453" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:41:58.452" endtime="20210926 01:41:58.453"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:41:58.454" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:41:58.453" endtime="20210926 01:41:58.454"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:41:58.455" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210926 01:41:58.454" endtime="20210926 01:41:58.455"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:41:58.457" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:41:58.457" level="INFO">${version_file_contents} = #Sun Sep 26 01:40:34 UTC 2021
cTime=1632620040040
clusterID=69ca4b39-0fdd-4fbc-99aa-099c823c16f2
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210926 01:41:58.456" endtime="20210926 01:41:58.457"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:41:58.458" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210926 01:41:58.457" endtime="20210926 01:41:58.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:41:58.458" endtime="20210926 01:41:58.459"/>
</kw>
<status status="PASS" starttime="20210926 01:41:58.455" endtime="20210926 01:41:58.459"/>
</kw>
<status status="PASS" starttime="20210926 01:41:58.455" endtime="20210926 01:41:58.459"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:41:58.450" endtime="20210926 01:41:58.459"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:41:58.369" endtime="20210926 01:41:58.460"/>
</suite>
<suite id="s1-s12" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s12-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:42:03.047" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210926 01:42:03.046" endtime="20210926 01:42:03.047"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:42:03.048" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:42:03.047" endtime="20210926 01:42:03.048"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:42:03.049" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:42:03.048" endtime="20210926 01:42:03.049"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:42:03.050" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210926 01:42:03.049" endtime="20210926 01:42:03.050"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:42:03.052" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:42:03.052" level="INFO">${version_file_contents} = #Sun Sep 26 01:40:34 UTC 2021
cTime=1632620048667
clusterID=75813f9d-d1d0-4383-aee1-fa94175b81f8
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210926 01:42:03.051" endtime="20210926 01:42:03.052"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:42:03.053" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210926 01:42:03.052" endtime="20210926 01:42:03.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:42:03.053" endtime="20210926 01:42:03.054"/>
</kw>
<status status="PASS" starttime="20210926 01:42:03.051" endtime="20210926 01:42:03.054"/>
</kw>
<status status="PASS" starttime="20210926 01:42:03.050" endtime="20210926 01:42:03.054"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:42:03.045" endtime="20210926 01:42:03.054"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:42:02.972" endtime="20210926 01:42:03.055"/>
</suite>
<suite id="s1-s13" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s13-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:42:07.527" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210926 01:42:07.526" endtime="20210926 01:42:07.527"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:42:07.527" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:42:07.527" endtime="20210926 01:42:07.527"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:42:07.528" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:42:07.528" endtime="20210926 01:42:07.528"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:42:07.529" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210926 01:42:07.528" endtime="20210926 01:42:07.529"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:42:07.531" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:42:07.531" level="INFO">${version_file_contents} = #Sun Sep 26 01:40:45 UTC 2021
cTime=1632620045262
clusterID=41edb34f-e53d-4d96-8b0f-95533abeb3bc
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210926 01:42:07.530" endtime="20210926 01:42:07.531"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:42:07.532" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210926 01:42:07.531" endtime="20210926 01:42:07.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:42:07.532" endtime="20210926 01:42:07.533"/>
</kw>
<status status="PASS" starttime="20210926 01:42:07.530" endtime="20210926 01:42:07.533"/>
</kw>
<status status="PASS" starttime="20210926 01:42:07.529" endtime="20210926 01:42:07.533"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:42:07.525" endtime="20210926 01:42:07.533"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:42:07.456" endtime="20210926 01:42:07.534"/>
</suite>
<suite id="s1-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:42:11.970" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210926 01:42:11.969" endtime="20210926 01:42:11.970"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:42:11.971" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:42:11.970" endtime="20210926 01:42:11.971"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:42:11.971" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:42:11.971" endtime="20210926 01:42:11.972"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:42:11.972" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210926 01:42:11.972" endtime="20210926 01:42:11.972"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:42:11.974" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:42:11.974" level="INFO">${version_file_contents} = #Sun Sep 26 01:32:27 UTC 2021
cTime=1632619918419
clusterID=CID-78673a85-58d5-4385-b19b-506d2eae39ed
omUuid=f0c88eb6-1ff8-4124-ab4d-be832043581e
nodeType=OM
scmUuid=2113d384-db3a-4758-8482-088a8ae9980...</msg>
<status status="PASS" starttime="20210926 01:42:11.974" endtime="20210926 01:42:11.975"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:42:11.975" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210926 01:42:11.975" endtime="20210926 01:42:11.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:42:11.976" endtime="20210926 01:42:11.976"/>
</kw>
<status status="PASS" starttime="20210926 01:42:11.973" endtime="20210926 01:42:11.976"/>
</kw>
<status status="PASS" starttime="20210926 01:42:11.973" endtime="20210926 01:42:11.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:42:11.968" endtime="20210926 01:42:11.977"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:42:11.896" endtime="20210926 01:42:11.978"/>
</suite>
<suite id="s1-s15" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s15-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:42:16.428" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210926 01:42:16.427" endtime="20210926 01:42:16.428"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:42:16.429" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:42:16.428" endtime="20210926 01:42:16.429"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:42:16.430" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:42:16.429" endtime="20210926 01:42:16.430"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:42:16.431" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210926 01:42:16.430" endtime="20210926 01:42:16.431"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:42:16.433" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:42:16.433" level="INFO">${version_file_contents} = #Sun Sep 26 01:32:27 UTC 2021
cTime=1632619923363
clusterID=CID-78673a85-58d5-4385-b19b-506d2eae39ed
omUuid=0c4e36b9-d80c-4404-87cb-06fd104f40e5
nodeType=OM
scmUuid=2113d384-db3a-4758-8482-088a8ae9980...</msg>
<status status="PASS" starttime="20210926 01:42:16.432" endtime="20210926 01:42:16.433"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:42:16.434" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210926 01:42:16.433" endtime="20210926 01:42:16.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:42:16.434" endtime="20210926 01:42:16.435"/>
</kw>
<status status="PASS" starttime="20210926 01:42:16.432" endtime="20210926 01:42:16.435"/>
</kw>
<status status="PASS" starttime="20210926 01:42:16.431" endtime="20210926 01:42:16.435"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:42:16.426" endtime="20210926 01:42:16.435"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:42:16.339" endtime="20210926 01:42:16.437"/>
</suite>
<suite id="s1-s16" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s16-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:42:20.965" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210926 01:42:20.964" endtime="20210926 01:42:20.965"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:42:20.966" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:42:20.965" endtime="20210926 01:42:20.966"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:42:20.967" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:42:20.966" endtime="20210926 01:42:20.967"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:42:20.967" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210926 01:42:20.967" endtime="20210926 01:42:20.967"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:42:20.969" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:42:20.969" level="INFO">${version_file_contents} = #Sun Sep 26 01:32:27 UTC 2021
cTime=1632619920759
clusterID=CID-78673a85-58d5-4385-b19b-506d2eae39ed
omUuid=3b0704a3-be4d-439b-b521-d44f9b8e5bff
nodeType=OM
scmUuid=2113d384-db3a-4758-8482-088a8ae9980...</msg>
<status status="PASS" starttime="20210926 01:42:20.969" endtime="20210926 01:42:20.969"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:42:20.970" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210926 01:42:20.970" endtime="20210926 01:42:20.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:42:20.970" endtime="20210926 01:42:20.971"/>
</kw>
<status status="PASS" starttime="20210926 01:42:20.968" endtime="20210926 01:42:20.971"/>
</kw>
<status status="PASS" starttime="20210926 01:42:20.968" endtime="20210926 01:42:20.971"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:42:20.963" endtime="20210926 01:42:20.971"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:42:20.887" endtime="20210926 01:42:20.973"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210926 01:42:25.407" level="INFO">${random} = 12268</msg>
<status status="PASS" starttime="20210926 01:42:25.406" endtime="20210926 01:42:25.407"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:42:25.416" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-12268 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:42:30.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:42:30.904" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:25.410" endtime="20210926 01:42:30.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:42:30.906" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:30.905" endtime="20210926 01:42:30.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:42:30.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:42:30.906" endtime="20210926 01:42:30.907"/>
</kw>
<status status="PASS" starttime="20210926 01:42:25.409" endtime="20210926 01:42:30.907"/>
</kw>
<msg timestamp="20210926 01:42:30.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:42:25.409" endtime="20210926 01:42:30.908"/>
</kw>
<msg timestamp="20210926 01:42:30.908" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:25.407" endtime="20210926 01:42:30.908"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:42:30.908" endtime="20210926 01:42:30.909"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:42:25.403" endtime="20210926 01:42:30.909"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210926 01:42:25.315" endtime="20210926 01:42:30.911"/>
</suite>
<suite id="s1-s18" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s18-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210926 01:42:35.288" level="INFO">${random} = 23387</msg>
<status status="PASS" starttime="20210926 01:42:35.287" endtime="20210926 01:42:35.288"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:42:35.296" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-23387 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:42:40.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:42:40.932" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:35.291" endtime="20210926 01:42:40.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:42:40.933" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:40.933" endtime="20210926 01:42:40.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:42:40.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:42:40.934" endtime="20210926 01:42:40.935"/>
</kw>
<status status="PASS" starttime="20210926 01:42:35.290" endtime="20210926 01:42:40.935"/>
</kw>
<msg timestamp="20210926 01:42:40.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:42:35.290" endtime="20210926 01:42:40.935"/>
</kw>
<msg timestamp="20210926 01:42:40.935" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:42:35.289" endtime="20210926 01:42:40.936"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:42:40.936" endtime="20210926 01:42:40.936"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:42:35.286" endtime="20210926 01:42:40.937"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210926 01:42:35.217" endtime="20210926 01:42:40.938"/>
</suite>
<suite id="s1-s19" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s19-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210926 01:40:06.680" endtime="20210926 01:40:06.681"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:40:06.689" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:41:45.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:41:45.514" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210926 01:40:06.685" endtime="20210926 01:41:45.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:41:45.516" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210926 01:41:45.515" endtime="20210926 01:41:45.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:41:45.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:41:45.517" endtime="20210926 01:41:45.517"/>
</kw>
<status status="PASS" starttime="20210926 01:40:06.682" endtime="20210926 01:41:45.518"/>
</kw>
<msg timestamp="20210926 01:41:45.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:40:06.681" endtime="20210926 01:41:45.518"/>
</kw>
<msg timestamp="20210926 01:41:45.519" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210926 01:40:06.681" endtime="20210926 01:41:45.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:41:45.519" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210926 01:41:45.519" endtime="20210926 01:41:45.519"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:40:06.679" endtime="20210926 01:41:45.520"/>
</test>
<test id="s1-s19-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210926 01:41:45.521" endtime="20210926 01:41:45.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:41:45.527" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:41:49.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:41:49.423" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210926 01:41:45.524" endtime="20210926 01:41:49.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:41:49.425" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210926 01:41:49.424" endtime="20210926 01:41:49.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:41:49.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:41:49.425" endtime="20210926 01:41:49.426"/>
</kw>
<status status="PASS" starttime="20210926 01:41:45.524" endtime="20210926 01:41:49.427"/>
</kw>
<msg timestamp="20210926 01:41:49.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:41:45.523" endtime="20210926 01:41:49.427"/>
</kw>
<msg timestamp="20210926 01:41:49.430" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210926 01:41:45.522" endtime="20210926 01:41:49.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:41:49.430" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210926 01:41:49.430" endtime="20210926 01:41:49.431"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:41:45.520" endtime="20210926 01:41:49.431"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210926 01:40:06.600" endtime="20210926 01:41:49.435"/>
</suite>
<suite id="s1-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:17.432" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210926 01:35:17.431" endtime="20210926 01:35:17.432"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:17.433" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:35:17.432" endtime="20210926 01:35:17.433"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:35:17.434" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:35:17.433" endtime="20210926 01:35:17.434"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:35:17.434" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210926 01:35:17.434" endtime="20210926 01:35:17.435"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:35:17.436" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:35:17.436" level="INFO">${version_file_contents} = #Sun Sep 26 01:34:00 UTC 2021
cTime=1632620040040
clusterID=69ca4b39-0fdd-4fbc-99aa-099c823c16f2
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210926 01:35:17.436" endtime="20210926 01:35:17.436"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:35:17.437" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210926 01:35:17.437" endtime="20210926 01:35:17.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:35:17.437" endtime="20210926 01:35:17.438"/>
</kw>
<status status="PASS" starttime="20210926 01:35:17.435" endtime="20210926 01:35:17.438"/>
</kw>
<status status="PASS" starttime="20210926 01:35:17.435" endtime="20210926 01:35:17.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:35:17.430" endtime="20210926 01:35:17.439"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:35:17.356" endtime="20210926 01:35:17.440"/>
</suite>
<suite id="s1-s21" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s21-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:21.847" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210926 01:35:21.846" endtime="20210926 01:35:21.847"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:21.847" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:35:21.847" endtime="20210926 01:35:21.847"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:35:21.848" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:35:21.848" endtime="20210926 01:35:21.848"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:35:21.849" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210926 01:35:21.848" endtime="20210926 01:35:21.849"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:35:21.851" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:35:21.851" level="INFO">${version_file_contents} = #Sun Sep 26 01:34:08 UTC 2021
cTime=1632620048667
clusterID=75813f9d-d1d0-4383-aee1-fa94175b81f8
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210926 01:35:21.850" endtime="20210926 01:35:21.851"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:35:21.852" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210926 01:35:21.852" endtime="20210926 01:35:21.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:35:21.853" endtime="20210926 01:35:21.853"/>
</kw>
<status status="PASS" starttime="20210926 01:35:21.850" endtime="20210926 01:35:21.853"/>
</kw>
<status status="PASS" starttime="20210926 01:35:21.849" endtime="20210926 01:35:21.853"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:35:21.844" endtime="20210926 01:35:21.854"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:35:21.768" endtime="20210926 01:35:21.855"/>
</suite>
<suite id="s1-s22" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s22-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:26.310" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210926 01:35:26.308" endtime="20210926 01:35:26.310"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:26.310" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:35:26.310" endtime="20210926 01:35:26.311"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:35:26.311" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:35:26.311" endtime="20210926 01:35:26.312"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:35:26.312" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 131 bytes.</msg>
<status status="PASS" starttime="20210926 01:35:26.312" endtime="20210926 01:35:26.312"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:35:26.314" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:35:26.314" level="INFO">${version_file_contents} = #Sun Sep 26 01:34:05 UTC 2021
cTime=1632620045262
clusterID=41edb34f-e53d-4d96-8b0f-95533abeb3bc
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210926 01:35:26.313" endtime="20210926 01:35:26.314"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:35:26.315" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210926 01:35:26.314" endtime="20210926 01:35:26.315"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:35:26.315" endtime="20210926 01:35:26.316"/>
</kw>
<status status="PASS" starttime="20210926 01:35:26.313" endtime="20210926 01:35:26.316"/>
</kw>
<status status="PASS" starttime="20210926 01:35:26.312" endtime="20210926 01:35:26.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:35:26.307" endtime="20210926 01:35:26.317"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:35:26.235" endtime="20210926 01:35:26.318"/>
</suite>
<suite id="s1-s23" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s23-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:30.767" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210926 01:35:30.766" endtime="20210926 01:35:30.767"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:30.768" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:35:30.767" endtime="20210926 01:35:30.768"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:35:30.768" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:35:30.768" endtime="20210926 01:35:30.769"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:35:30.769" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210926 01:35:30.769" endtime="20210926 01:35:30.769"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:35:30.771" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:35:30.771" level="INFO">${version_file_contents} = #Sun Sep 26 01:32:27 UTC 2021
cTime=1632619918419
clusterID=CID-78673a85-58d5-4385-b19b-506d2eae39ed
omUuid=f0c88eb6-1ff8-4124-ab4d-be832043581e
nodeType=OM
scmUuid=2113d384-db3a-4758-8482-088a8ae9980...</msg>
<status status="PASS" starttime="20210926 01:35:30.771" endtime="20210926 01:35:30.772"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:35:30.772" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210926 01:35:30.772" endtime="20210926 01:35:30.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:35:30.773" endtime="20210926 01:35:30.773"/>
</kw>
<status status="PASS" starttime="20210926 01:35:30.770" endtime="20210926 01:35:30.773"/>
</kw>
<status status="PASS" starttime="20210926 01:35:30.770" endtime="20210926 01:35:30.773"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:35:30.765" endtime="20210926 01:35:30.774"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:35:30.693" endtime="20210926 01:35:30.775"/>
</suite>
<suite id="s1-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:35.306" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210926 01:35:35.305" endtime="20210926 01:35:35.307"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:35.307" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:35:35.307" endtime="20210926 01:35:35.307"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:35:35.308" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:35:35.307" endtime="20210926 01:35:35.308"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:35:35.309" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210926 01:35:35.308" endtime="20210926 01:35:35.309"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:35:35.311" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:35:35.311" level="INFO">${version_file_contents} = #Sun Sep 26 01:32:27 UTC 2021
cTime=1632619923363
clusterID=CID-78673a85-58d5-4385-b19b-506d2eae39ed
omUuid=0c4e36b9-d80c-4404-87cb-06fd104f40e5
nodeType=OM
scmUuid=2113d384-db3a-4758-8482-088a8ae9980...</msg>
<status status="PASS" starttime="20210926 01:35:35.310" endtime="20210926 01:35:35.311"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:35:35.312" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210926 01:35:35.311" endtime="20210926 01:35:35.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:35:35.312" endtime="20210926 01:35:35.312"/>
</kw>
<status status="PASS" starttime="20210926 01:35:35.309" endtime="20210926 01:35:35.313"/>
</kw>
<status status="PASS" starttime="20210926 01:35:35.309" endtime="20210926 01:35:35.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:35:35.304" endtime="20210926 01:35:35.313"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:35:35.232" endtime="20210926 01:35:35.314"/>
</suite>
<suite id="s1-s25" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s25-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:39.769" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210926 01:35:39.768" endtime="20210926 01:35:39.769"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:39.770" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:35:39.769" endtime="20210926 01:35:39.770"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:35:39.771" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:35:39.770" endtime="20210926 01:35:39.771"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:35:39.771" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210926 01:35:39.771" endtime="20210926 01:35:39.771"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:35:39.773" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:35:39.773" level="INFO">${version_file_contents} = #Sun Sep 26 01:32:27 UTC 2021
cTime=1632619920759
clusterID=CID-78673a85-58d5-4385-b19b-506d2eae39ed
omUuid=3b0704a3-be4d-439b-b521-d44f9b8e5bff
nodeType=OM
scmUuid=2113d384-db3a-4758-8482-088a8ae9980...</msg>
<status status="PASS" starttime="20210926 01:35:39.773" endtime="20210926 01:35:39.773"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:35:39.774" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210926 01:35:39.774" endtime="20210926 01:35:39.774"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:35:39.774" endtime="20210926 01:35:39.775"/>
</kw>
<status status="PASS" starttime="20210926 01:35:39.772" endtime="20210926 01:35:39.775"/>
</kw>
<status status="PASS" starttime="20210926 01:35:39.772" endtime="20210926 01:35:39.775"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:35:39.767" endtime="20210926 01:35:39.776"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:35:39.698" endtime="20210926 01:35:39.777"/>
</suite>
<suite id="s1-s26" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s26-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210926 01:35:44.177" level="INFO">${random} = 45855</msg>
<status status="PASS" starttime="20210926 01:35:44.177" endtime="20210926 01:35:44.177"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:35:44.184" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-45855 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:35:49.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:35:49.439" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:35:44.180" endtime="20210926 01:35:49.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:35:49.440" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:35:49.439" endtime="20210926 01:35:49.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:35:49.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:35:49.441" endtime="20210926 01:35:49.441"/>
</kw>
<status status="PASS" starttime="20210926 01:35:44.179" endtime="20210926 01:35:49.442"/>
</kw>
<msg timestamp="20210926 01:35:49.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:35:44.179" endtime="20210926 01:35:49.442"/>
</kw>
<msg timestamp="20210926 01:35:49.442" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:35:44.178" endtime="20210926 01:35:49.442"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:35:49.443" endtime="20210926 01:35:49.443"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:35:44.175" endtime="20210926 01:35:49.444"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210926 01:35:44.102" endtime="20210926 01:35:49.445"/>
</suite>
<suite id="s1-s27" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s27-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:35:53.833" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:35:57.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:35:57.141" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:35:53.829" endtime="20210926 01:35:57.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:35:57.143" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:35:57.142" endtime="20210926 01:35:57.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:35:57.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:35:57.143" endtime="20210926 01:35:57.144"/>
</kw>
<status status="PASS" starttime="20210926 01:35:53.828" endtime="20210926 01:35:57.151"/>
</kw>
<msg timestamp="20210926 01:35:57.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:35:53.827" endtime="20210926 01:35:57.151"/>
</kw>
<msg timestamp="20210926 01:35:57.151" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:35:53.826" endtime="20210926 01:35:57.151"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:35:57.152" endtime="20210926 01:35:57.152"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:35:57.166" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:36:00.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:36:00.594" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:35:57.161" endtime="20210926 01:36:00.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:36:00.596" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:36:00.595" endtime="20210926 01:36:00.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:36:00.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:36:00.596" endtime="20210926 01:36:00.597"/>
</kw>
<status status="PASS" starttime="20210926 01:35:57.154" endtime="20210926 01:36:00.598"/>
</kw>
<msg timestamp="20210926 01:36:00.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:35:57.153" endtime="20210926 01:36:00.601"/>
</kw>
<msg timestamp="20210926 01:36:00.601" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:35:57.152" endtime="20210926 01:36:00.601"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:36:00.602" endtime="20210926 01:36:00.604"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:36:00.612" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:36:06.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:36:06.795" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:36:00.610" endtime="20210926 01:36:06.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:36:06.797" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:36:06.796" endtime="20210926 01:36:06.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:36:06.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:36:06.797" endtime="20210926 01:36:06.798"/>
</kw>
<status status="PASS" starttime="20210926 01:36:00.609" endtime="20210926 01:36:06.799"/>
</kw>
<msg timestamp="20210926 01:36:06.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:36:00.608" endtime="20210926 01:36:06.799"/>
</kw>
<msg timestamp="20210926 01:36:06.799" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:36:00.605" endtime="20210926 01:36:06.800"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:36:06.800" endtime="20210926 01:36:06.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:35:53.826" endtime="20210926 01:36:06.801"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210926 01:35:53.752" endtime="20210926 01:36:06.802"/>
</suite>
<suite id="s1-s28" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s28-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210926 01:36:11.042" level="INFO">${random} = 57885</msg>
<status status="PASS" starttime="20210926 01:36:11.041" endtime="20210926 01:36:11.042"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210926 01:36:11.054" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-57885 2&gt;&amp;1'.</msg>
<msg timestamp="20210926 01:36:16.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210926 01:36:16.191" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:36:11.044" endtime="20210926 01:36:16.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210926 01:36:16.192" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:36:16.192" endtime="20210926 01:36:16.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210926 01:36:16.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210926 01:36:16.193" endtime="20210926 01:36:16.194"/>
</kw>
<status status="PASS" starttime="20210926 01:36:11.044" endtime="20210926 01:36:16.194"/>
</kw>
<msg timestamp="20210926 01:36:16.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210926 01:36:11.043" endtime="20210926 01:36:16.195"/>
</kw>
<msg timestamp="20210926 01:36:16.196" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210926 01:36:11.042" endtime="20210926 01:36:16.196"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:36:16.196" endtime="20210926 01:36:16.196"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:36:11.040" endtime="20210926 01:36:16.197"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210926 01:36:10.963" endtime="20210926 01:36:16.198"/>
</suite>
<suite id="s1-s29" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s29-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:12.907" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210926 01:35:12.906" endtime="20210926 01:35:12.907"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210926 01:35:12.908" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210926 01:35:12.908" endtime="20210926 01:35:12.908"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210926 01:35:12.909" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210926 01:35:12.908" endtime="20210926 01:35:12.909"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210926 01:35:12.910" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210926 01:35:12.909" endtime="20210926 01:35:12.910"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210926 01:35:12.912" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210926 01:35:12.912" level="INFO">${version_file_contents} = #Sun Sep 26 01:31:55 UTC 2021
cTime=1632619915559
clusterID=CID-78673a85-58d5-4385-b19b-506d2eae39ed
nodeType=SCM
scmUuid=2113d384-db3a-4758-8482-088a8ae9980d
layoutVersion=0
</msg>
<status status="PASS" starttime="20210926 01:35:12.911" endtime="20210926 01:35:12.912"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210926 01:35:12.913" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210926 01:35:12.912" endtime="20210926 01:35:12.913"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210926 01:35:12.913" endtime="20210926 01:35:12.914"/>
</kw>
<status status="PASS" starttime="20210926 01:35:12.911" endtime="20210926 01:35:12.914"/>
</kw>
<status status="PASS" starttime="20210926 01:35:12.910" endtime="20210926 01:35:12.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210926 01:35:12.906" endtime="20210926 01:35:12.915"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210926 01:35:12.833" endtime="20210926 01:35:12.916"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="208095"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s12" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s15" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s16" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s19" name="Finalize">upgrade.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s20" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s21" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s22" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s23" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s24" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s25" name="Check-Mlv">upgrade.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s27" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s28" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s29" name="Check-Mlv">upgrade.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
